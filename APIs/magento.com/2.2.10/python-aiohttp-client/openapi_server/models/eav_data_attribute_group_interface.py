# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.eav_data_attribute_group_extension_interface import EavDataAttributeGroupExtensionInterface
from openapi_server import util


class EavDataAttributeGroupInterface(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, attribute_group_id: str=None, attribute_group_name: str=None, attribute_set_id: int=None, extension_attributes: EavDataAttributeGroupExtensionInterface=None):
        """EavDataAttributeGroupInterface - a model defined in OpenAPI

        :param attribute_group_id: The attribute_group_id of this EavDataAttributeGroupInterface.
        :param attribute_group_name: The attribute_group_name of this EavDataAttributeGroupInterface.
        :param attribute_set_id: The attribute_set_id of this EavDataAttributeGroupInterface.
        :param extension_attributes: The extension_attributes of this EavDataAttributeGroupInterface.
        """
        self.openapi_types = {
            'attribute_group_id': str,
            'attribute_group_name': str,
            'attribute_set_id': int,
            'extension_attributes': EavDataAttributeGroupExtensionInterface
        }

        self.attribute_map = {
            'attribute_group_id': 'attribute_group_id',
            'attribute_group_name': 'attribute_group_name',
            'attribute_set_id': 'attribute_set_id',
            'extension_attributes': 'extension_attributes'
        }

        self._attribute_group_id = attribute_group_id
        self._attribute_group_name = attribute_group_name
        self._attribute_set_id = attribute_set_id
        self._extension_attributes = extension_attributes

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EavDataAttributeGroupInterface':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The eav-data-attribute-group-interface of this EavDataAttributeGroupInterface.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def attribute_group_id(self):
        """Gets the attribute_group_id of this EavDataAttributeGroupInterface.

        Id

        :return: The attribute_group_id of this EavDataAttributeGroupInterface.
        :rtype: str
        """
        return self._attribute_group_id

    @attribute_group_id.setter
    def attribute_group_id(self, attribute_group_id):
        """Sets the attribute_group_id of this EavDataAttributeGroupInterface.

        Id

        :param attribute_group_id: The attribute_group_id of this EavDataAttributeGroupInterface.
        :type attribute_group_id: str
        """

        self._attribute_group_id = attribute_group_id

    @property
    def attribute_group_name(self):
        """Gets the attribute_group_name of this EavDataAttributeGroupInterface.

        Name

        :return: The attribute_group_name of this EavDataAttributeGroupInterface.
        :rtype: str
        """
        return self._attribute_group_name

    @attribute_group_name.setter
    def attribute_group_name(self, attribute_group_name):
        """Sets the attribute_group_name of this EavDataAttributeGroupInterface.

        Name

        :param attribute_group_name: The attribute_group_name of this EavDataAttributeGroupInterface.
        :type attribute_group_name: str
        """

        self._attribute_group_name = attribute_group_name

    @property
    def attribute_set_id(self):
        """Gets the attribute_set_id of this EavDataAttributeGroupInterface.

        Attribute set id

        :return: The attribute_set_id of this EavDataAttributeGroupInterface.
        :rtype: int
        """
        return self._attribute_set_id

    @attribute_set_id.setter
    def attribute_set_id(self, attribute_set_id):
        """Sets the attribute_set_id of this EavDataAttributeGroupInterface.

        Attribute set id

        :param attribute_set_id: The attribute_set_id of this EavDataAttributeGroupInterface.
        :type attribute_set_id: int
        """

        self._attribute_set_id = attribute_set_id

    @property
    def extension_attributes(self):
        """Gets the extension_attributes of this EavDataAttributeGroupInterface.


        :return: The extension_attributes of this EavDataAttributeGroupInterface.
        :rtype: EavDataAttributeGroupExtensionInterface
        """
        return self._extension_attributes

    @extension_attributes.setter
    def extension_attributes(self, extension_attributes):
        """Sets the extension_attributes of this EavDataAttributeGroupInterface.


        :param extension_attributes: The extension_attributes of this EavDataAttributeGroupInterface.
        :type extension_attributes: EavDataAttributeGroupExtensionInterface
        """

        self._extension_attributes = extension_attributes
