# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.sales_rule_data_coupon_generation_spec_interface import SalesRuleDataCouponGenerationSpecInterface
from openapi_server import util


class SalesRuleCouponManagementV1GeneratePostRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, coupon_spec: SalesRuleDataCouponGenerationSpecInterface=None):
        """SalesRuleCouponManagementV1GeneratePostRequest - a model defined in OpenAPI

        :param coupon_spec: The coupon_spec of this SalesRuleCouponManagementV1GeneratePostRequest.
        """
        self.openapi_types = {
            'coupon_spec': SalesRuleDataCouponGenerationSpecInterface
        }

        self.attribute_map = {
            'coupon_spec': 'couponSpec'
        }

        self._coupon_spec = coupon_spec

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SalesRuleCouponManagementV1GeneratePostRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The salesRuleCouponManagementV1GeneratePost_request of this SalesRuleCouponManagementV1GeneratePostRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def coupon_spec(self):
        """Gets the coupon_spec of this SalesRuleCouponManagementV1GeneratePostRequest.


        :return: The coupon_spec of this SalesRuleCouponManagementV1GeneratePostRequest.
        :rtype: SalesRuleDataCouponGenerationSpecInterface
        """
        return self._coupon_spec

    @coupon_spec.setter
    def coupon_spec(self, coupon_spec):
        """Sets the coupon_spec of this SalesRuleCouponManagementV1GeneratePostRequest.


        :param coupon_spec: The coupon_spec of this SalesRuleCouponManagementV1GeneratePostRequest.
        :type coupon_spec: SalesRuleDataCouponGenerationSpecInterface
        """
        if coupon_spec is None:
            raise ValueError("Invalid value for `coupon_spec`, must not be `None`")

        self._coupon_spec = coupon_spec
