# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TemandoShippingCollectionPointCartCollectionPointManagementV1SaveSearchRequestPutRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, country_id: str=None, postcode: str=None):
        """TemandoShippingCollectionPointCartCollectionPointManagementV1SaveSearchRequestPutRequest - a model defined in OpenAPI

        :param country_id: The country_id of this TemandoShippingCollectionPointCartCollectionPointManagementV1SaveSearchRequestPutRequest.
        :param postcode: The postcode of this TemandoShippingCollectionPointCartCollectionPointManagementV1SaveSearchRequestPutRequest.
        """
        self.openapi_types = {
            'country_id': str,
            'postcode': str
        }

        self.attribute_map = {
            'country_id': 'countryId',
            'postcode': 'postcode'
        }

        self._country_id = country_id
        self._postcode = postcode

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TemandoShippingCollectionPointCartCollectionPointManagementV1SaveSearchRequestPutRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The temandoShippingCollectionPointCartCollectionPointManagementV1SaveSearchRequestPut_request of this TemandoShippingCollectionPointCartCollectionPointManagementV1SaveSearchRequestPutRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def country_id(self):
        """Gets the country_id of this TemandoShippingCollectionPointCartCollectionPointManagementV1SaveSearchRequestPutRequest.


        :return: The country_id of this TemandoShippingCollectionPointCartCollectionPointManagementV1SaveSearchRequestPutRequest.
        :rtype: str
        """
        return self._country_id

    @country_id.setter
    def country_id(self, country_id):
        """Sets the country_id of this TemandoShippingCollectionPointCartCollectionPointManagementV1SaveSearchRequestPutRequest.


        :param country_id: The country_id of this TemandoShippingCollectionPointCartCollectionPointManagementV1SaveSearchRequestPutRequest.
        :type country_id: str
        """
        if country_id is None:
            raise ValueError("Invalid value for `country_id`, must not be `None`")

        self._country_id = country_id

    @property
    def postcode(self):
        """Gets the postcode of this TemandoShippingCollectionPointCartCollectionPointManagementV1SaveSearchRequestPutRequest.


        :return: The postcode of this TemandoShippingCollectionPointCartCollectionPointManagementV1SaveSearchRequestPutRequest.
        :rtype: str
        """
        return self._postcode

    @postcode.setter
    def postcode(self, postcode):
        """Sets the postcode of this TemandoShippingCollectionPointCartCollectionPointManagementV1SaveSearchRequestPutRequest.


        :param postcode: The postcode of this TemandoShippingCollectionPointCartCollectionPointManagementV1SaveSearchRequestPutRequest.
        :type postcode: str
        """
        if postcode is None:
            raise ValueError("Invalid value for `postcode`, must not be `None`")

        self._postcode = postcode
