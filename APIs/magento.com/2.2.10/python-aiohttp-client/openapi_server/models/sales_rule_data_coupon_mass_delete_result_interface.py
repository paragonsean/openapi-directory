# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SalesRuleDataCouponMassDeleteResultInterface(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, failed_items: List[str]=None, missing_items: List[str]=None):
        """SalesRuleDataCouponMassDeleteResultInterface - a model defined in OpenAPI

        :param failed_items: The failed_items of this SalesRuleDataCouponMassDeleteResultInterface.
        :param missing_items: The missing_items of this SalesRuleDataCouponMassDeleteResultInterface.
        """
        self.openapi_types = {
            'failed_items': List[str],
            'missing_items': List[str]
        }

        self.attribute_map = {
            'failed_items': 'failed_items',
            'missing_items': 'missing_items'
        }

        self._failed_items = failed_items
        self._missing_items = missing_items

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SalesRuleDataCouponMassDeleteResultInterface':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The sales-rule-data-coupon-mass-delete-result-interface of this SalesRuleDataCouponMassDeleteResultInterface.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def failed_items(self):
        """Gets the failed_items of this SalesRuleDataCouponMassDeleteResultInterface.

        List of failed items.

        :return: The failed_items of this SalesRuleDataCouponMassDeleteResultInterface.
        :rtype: List[str]
        """
        return self._failed_items

    @failed_items.setter
    def failed_items(self, failed_items):
        """Sets the failed_items of this SalesRuleDataCouponMassDeleteResultInterface.

        List of failed items.

        :param failed_items: The failed_items of this SalesRuleDataCouponMassDeleteResultInterface.
        :type failed_items: List[str]
        """
        if failed_items is None:
            raise ValueError("Invalid value for `failed_items`, must not be `None`")

        self._failed_items = failed_items

    @property
    def missing_items(self):
        """Gets the missing_items of this SalesRuleDataCouponMassDeleteResultInterface.

        List of missing items.

        :return: The missing_items of this SalesRuleDataCouponMassDeleteResultInterface.
        :rtype: List[str]
        """
        return self._missing_items

    @missing_items.setter
    def missing_items(self, missing_items):
        """Sets the missing_items of this SalesRuleDataCouponMassDeleteResultInterface.

        List of missing items.

        :param missing_items: The missing_items of this SalesRuleDataCouponMassDeleteResultInterface.
        :type missing_items: List[str]
        """
        if missing_items is None:
            raise ValueError("Invalid value for `missing_items`, must not be `None`")

        self._missing_items = missing_items
