# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.quote_data_address_interface import QuoteDataAddressInterface
from openapi_server.models.quote_data_payment_interface import QuoteDataPaymentInterface
from openapi_server import util


class CheckoutPaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, billing_address: QuoteDataAddressInterface=None, payment_method: QuoteDataPaymentInterface=None):
        """CheckoutPaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostRequest - a model defined in OpenAPI

        :param billing_address: The billing_address of this CheckoutPaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostRequest.
        :param payment_method: The payment_method of this CheckoutPaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostRequest.
        """
        self.openapi_types = {
            'billing_address': QuoteDataAddressInterface,
            'payment_method': QuoteDataPaymentInterface
        }

        self.attribute_map = {
            'billing_address': 'billingAddress',
            'payment_method': 'paymentMethod'
        }

        self._billing_address = billing_address
        self._payment_method = payment_method

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CheckoutPaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The checkoutPaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPost_request of this CheckoutPaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def billing_address(self):
        """Gets the billing_address of this CheckoutPaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostRequest.


        :return: The billing_address of this CheckoutPaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostRequest.
        :rtype: QuoteDataAddressInterface
        """
        return self._billing_address

    @billing_address.setter
    def billing_address(self, billing_address):
        """Sets the billing_address of this CheckoutPaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostRequest.


        :param billing_address: The billing_address of this CheckoutPaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostRequest.
        :type billing_address: QuoteDataAddressInterface
        """

        self._billing_address = billing_address

    @property
    def payment_method(self):
        """Gets the payment_method of this CheckoutPaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostRequest.


        :return: The payment_method of this CheckoutPaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostRequest.
        :rtype: QuoteDataPaymentInterface
        """
        return self._payment_method

    @payment_method.setter
    def payment_method(self, payment_method):
        """Sets the payment_method of this CheckoutPaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostRequest.


        :param payment_method: The payment_method of this CheckoutPaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostRequest.
        :type payment_method: QuoteDataPaymentInterface
        """
        if payment_method is None:
            raise ValueError("Invalid value for `payment_method`, must not be `None`")

        self._payment_method = payment_method
