# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SalesDataTotalInterface(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, base_shipping_amount: float=None, base_shipping_canceled: float=None, base_shipping_discount_amount: float=None, base_shipping_discount_tax_compensation_amnt: float=None, base_shipping_incl_tax: float=None, base_shipping_invoiced: float=None, base_shipping_refunded: float=None, base_shipping_tax_amount: float=None, base_shipping_tax_refunded: float=None, extension_attributes: object=None, shipping_amount: float=None, shipping_canceled: float=None, shipping_discount_amount: float=None, shipping_discount_tax_compensation_amount: float=None, shipping_incl_tax: float=None, shipping_invoiced: float=None, shipping_refunded: float=None, shipping_tax_amount: float=None, shipping_tax_refunded: float=None):
        """SalesDataTotalInterface - a model defined in OpenAPI

        :param base_shipping_amount: The base_shipping_amount of this SalesDataTotalInterface.
        :param base_shipping_canceled: The base_shipping_canceled of this SalesDataTotalInterface.
        :param base_shipping_discount_amount: The base_shipping_discount_amount of this SalesDataTotalInterface.
        :param base_shipping_discount_tax_compensation_amnt: The base_shipping_discount_tax_compensation_amnt of this SalesDataTotalInterface.
        :param base_shipping_incl_tax: The base_shipping_incl_tax of this SalesDataTotalInterface.
        :param base_shipping_invoiced: The base_shipping_invoiced of this SalesDataTotalInterface.
        :param base_shipping_refunded: The base_shipping_refunded of this SalesDataTotalInterface.
        :param base_shipping_tax_amount: The base_shipping_tax_amount of this SalesDataTotalInterface.
        :param base_shipping_tax_refunded: The base_shipping_tax_refunded of this SalesDataTotalInterface.
        :param extension_attributes: The extension_attributes of this SalesDataTotalInterface.
        :param shipping_amount: The shipping_amount of this SalesDataTotalInterface.
        :param shipping_canceled: The shipping_canceled of this SalesDataTotalInterface.
        :param shipping_discount_amount: The shipping_discount_amount of this SalesDataTotalInterface.
        :param shipping_discount_tax_compensation_amount: The shipping_discount_tax_compensation_amount of this SalesDataTotalInterface.
        :param shipping_incl_tax: The shipping_incl_tax of this SalesDataTotalInterface.
        :param shipping_invoiced: The shipping_invoiced of this SalesDataTotalInterface.
        :param shipping_refunded: The shipping_refunded of this SalesDataTotalInterface.
        :param shipping_tax_amount: The shipping_tax_amount of this SalesDataTotalInterface.
        :param shipping_tax_refunded: The shipping_tax_refunded of this SalesDataTotalInterface.
        """
        self.openapi_types = {
            'base_shipping_amount': float,
            'base_shipping_canceled': float,
            'base_shipping_discount_amount': float,
            'base_shipping_discount_tax_compensation_amnt': float,
            'base_shipping_incl_tax': float,
            'base_shipping_invoiced': float,
            'base_shipping_refunded': float,
            'base_shipping_tax_amount': float,
            'base_shipping_tax_refunded': float,
            'extension_attributes': object,
            'shipping_amount': float,
            'shipping_canceled': float,
            'shipping_discount_amount': float,
            'shipping_discount_tax_compensation_amount': float,
            'shipping_incl_tax': float,
            'shipping_invoiced': float,
            'shipping_refunded': float,
            'shipping_tax_amount': float,
            'shipping_tax_refunded': float
        }

        self.attribute_map = {
            'base_shipping_amount': 'base_shipping_amount',
            'base_shipping_canceled': 'base_shipping_canceled',
            'base_shipping_discount_amount': 'base_shipping_discount_amount',
            'base_shipping_discount_tax_compensation_amnt': 'base_shipping_discount_tax_compensation_amnt',
            'base_shipping_incl_tax': 'base_shipping_incl_tax',
            'base_shipping_invoiced': 'base_shipping_invoiced',
            'base_shipping_refunded': 'base_shipping_refunded',
            'base_shipping_tax_amount': 'base_shipping_tax_amount',
            'base_shipping_tax_refunded': 'base_shipping_tax_refunded',
            'extension_attributes': 'extension_attributes',
            'shipping_amount': 'shipping_amount',
            'shipping_canceled': 'shipping_canceled',
            'shipping_discount_amount': 'shipping_discount_amount',
            'shipping_discount_tax_compensation_amount': 'shipping_discount_tax_compensation_amount',
            'shipping_incl_tax': 'shipping_incl_tax',
            'shipping_invoiced': 'shipping_invoiced',
            'shipping_refunded': 'shipping_refunded',
            'shipping_tax_amount': 'shipping_tax_amount',
            'shipping_tax_refunded': 'shipping_tax_refunded'
        }

        self._base_shipping_amount = base_shipping_amount
        self._base_shipping_canceled = base_shipping_canceled
        self._base_shipping_discount_amount = base_shipping_discount_amount
        self._base_shipping_discount_tax_compensation_amnt = base_shipping_discount_tax_compensation_amnt
        self._base_shipping_incl_tax = base_shipping_incl_tax
        self._base_shipping_invoiced = base_shipping_invoiced
        self._base_shipping_refunded = base_shipping_refunded
        self._base_shipping_tax_amount = base_shipping_tax_amount
        self._base_shipping_tax_refunded = base_shipping_tax_refunded
        self._extension_attributes = extension_attributes
        self._shipping_amount = shipping_amount
        self._shipping_canceled = shipping_canceled
        self._shipping_discount_amount = shipping_discount_amount
        self._shipping_discount_tax_compensation_amount = shipping_discount_tax_compensation_amount
        self._shipping_incl_tax = shipping_incl_tax
        self._shipping_invoiced = shipping_invoiced
        self._shipping_refunded = shipping_refunded
        self._shipping_tax_amount = shipping_tax_amount
        self._shipping_tax_refunded = shipping_tax_refunded

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SalesDataTotalInterface':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The sales-data-total-interface of this SalesDataTotalInterface.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def base_shipping_amount(self):
        """Gets the base_shipping_amount of this SalesDataTotalInterface.

        Base shipping amount.

        :return: The base_shipping_amount of this SalesDataTotalInterface.
        :rtype: float
        """
        return self._base_shipping_amount

    @base_shipping_amount.setter
    def base_shipping_amount(self, base_shipping_amount):
        """Sets the base_shipping_amount of this SalesDataTotalInterface.

        Base shipping amount.

        :param base_shipping_amount: The base_shipping_amount of this SalesDataTotalInterface.
        :type base_shipping_amount: float
        """

        self._base_shipping_amount = base_shipping_amount

    @property
    def base_shipping_canceled(self):
        """Gets the base_shipping_canceled of this SalesDataTotalInterface.

        Base shipping canceled.

        :return: The base_shipping_canceled of this SalesDataTotalInterface.
        :rtype: float
        """
        return self._base_shipping_canceled

    @base_shipping_canceled.setter
    def base_shipping_canceled(self, base_shipping_canceled):
        """Sets the base_shipping_canceled of this SalesDataTotalInterface.

        Base shipping canceled.

        :param base_shipping_canceled: The base_shipping_canceled of this SalesDataTotalInterface.
        :type base_shipping_canceled: float
        """

        self._base_shipping_canceled = base_shipping_canceled

    @property
    def base_shipping_discount_amount(self):
        """Gets the base_shipping_discount_amount of this SalesDataTotalInterface.

        Base shipping discount amount.

        :return: The base_shipping_discount_amount of this SalesDataTotalInterface.
        :rtype: float
        """
        return self._base_shipping_discount_amount

    @base_shipping_discount_amount.setter
    def base_shipping_discount_amount(self, base_shipping_discount_amount):
        """Sets the base_shipping_discount_amount of this SalesDataTotalInterface.

        Base shipping discount amount.

        :param base_shipping_discount_amount: The base_shipping_discount_amount of this SalesDataTotalInterface.
        :type base_shipping_discount_amount: float
        """

        self._base_shipping_discount_amount = base_shipping_discount_amount

    @property
    def base_shipping_discount_tax_compensation_amnt(self):
        """Gets the base_shipping_discount_tax_compensation_amnt of this SalesDataTotalInterface.

        Base shipping discount tax compensation amount.

        :return: The base_shipping_discount_tax_compensation_amnt of this SalesDataTotalInterface.
        :rtype: float
        """
        return self._base_shipping_discount_tax_compensation_amnt

    @base_shipping_discount_tax_compensation_amnt.setter
    def base_shipping_discount_tax_compensation_amnt(self, base_shipping_discount_tax_compensation_amnt):
        """Sets the base_shipping_discount_tax_compensation_amnt of this SalesDataTotalInterface.

        Base shipping discount tax compensation amount.

        :param base_shipping_discount_tax_compensation_amnt: The base_shipping_discount_tax_compensation_amnt of this SalesDataTotalInterface.
        :type base_shipping_discount_tax_compensation_amnt: float
        """

        self._base_shipping_discount_tax_compensation_amnt = base_shipping_discount_tax_compensation_amnt

    @property
    def base_shipping_incl_tax(self):
        """Gets the base_shipping_incl_tax of this SalesDataTotalInterface.

        Base shipping including tax.

        :return: The base_shipping_incl_tax of this SalesDataTotalInterface.
        :rtype: float
        """
        return self._base_shipping_incl_tax

    @base_shipping_incl_tax.setter
    def base_shipping_incl_tax(self, base_shipping_incl_tax):
        """Sets the base_shipping_incl_tax of this SalesDataTotalInterface.

        Base shipping including tax.

        :param base_shipping_incl_tax: The base_shipping_incl_tax of this SalesDataTotalInterface.
        :type base_shipping_incl_tax: float
        """

        self._base_shipping_incl_tax = base_shipping_incl_tax

    @property
    def base_shipping_invoiced(self):
        """Gets the base_shipping_invoiced of this SalesDataTotalInterface.

        Base shipping invoiced.

        :return: The base_shipping_invoiced of this SalesDataTotalInterface.
        :rtype: float
        """
        return self._base_shipping_invoiced

    @base_shipping_invoiced.setter
    def base_shipping_invoiced(self, base_shipping_invoiced):
        """Sets the base_shipping_invoiced of this SalesDataTotalInterface.

        Base shipping invoiced.

        :param base_shipping_invoiced: The base_shipping_invoiced of this SalesDataTotalInterface.
        :type base_shipping_invoiced: float
        """

        self._base_shipping_invoiced = base_shipping_invoiced

    @property
    def base_shipping_refunded(self):
        """Gets the base_shipping_refunded of this SalesDataTotalInterface.

        Base shipping refunded.

        :return: The base_shipping_refunded of this SalesDataTotalInterface.
        :rtype: float
        """
        return self._base_shipping_refunded

    @base_shipping_refunded.setter
    def base_shipping_refunded(self, base_shipping_refunded):
        """Sets the base_shipping_refunded of this SalesDataTotalInterface.

        Base shipping refunded.

        :param base_shipping_refunded: The base_shipping_refunded of this SalesDataTotalInterface.
        :type base_shipping_refunded: float
        """

        self._base_shipping_refunded = base_shipping_refunded

    @property
    def base_shipping_tax_amount(self):
        """Gets the base_shipping_tax_amount of this SalesDataTotalInterface.

        Base shipping tax amount.

        :return: The base_shipping_tax_amount of this SalesDataTotalInterface.
        :rtype: float
        """
        return self._base_shipping_tax_amount

    @base_shipping_tax_amount.setter
    def base_shipping_tax_amount(self, base_shipping_tax_amount):
        """Sets the base_shipping_tax_amount of this SalesDataTotalInterface.

        Base shipping tax amount.

        :param base_shipping_tax_amount: The base_shipping_tax_amount of this SalesDataTotalInterface.
        :type base_shipping_tax_amount: float
        """

        self._base_shipping_tax_amount = base_shipping_tax_amount

    @property
    def base_shipping_tax_refunded(self):
        """Gets the base_shipping_tax_refunded of this SalesDataTotalInterface.

        Base shipping tax refunded.

        :return: The base_shipping_tax_refunded of this SalesDataTotalInterface.
        :rtype: float
        """
        return self._base_shipping_tax_refunded

    @base_shipping_tax_refunded.setter
    def base_shipping_tax_refunded(self, base_shipping_tax_refunded):
        """Sets the base_shipping_tax_refunded of this SalesDataTotalInterface.

        Base shipping tax refunded.

        :param base_shipping_tax_refunded: The base_shipping_tax_refunded of this SalesDataTotalInterface.
        :type base_shipping_tax_refunded: float
        """

        self._base_shipping_tax_refunded = base_shipping_tax_refunded

    @property
    def extension_attributes(self):
        """Gets the extension_attributes of this SalesDataTotalInterface.

        ExtensionInterface class for @see \\Magento\\Sales\\Api\\Data\\TotalInterface

        :return: The extension_attributes of this SalesDataTotalInterface.
        :rtype: object
        """
        return self._extension_attributes

    @extension_attributes.setter
    def extension_attributes(self, extension_attributes):
        """Sets the extension_attributes of this SalesDataTotalInterface.

        ExtensionInterface class for @see \\Magento\\Sales\\Api\\Data\\TotalInterface

        :param extension_attributes: The extension_attributes of this SalesDataTotalInterface.
        :type extension_attributes: object
        """

        self._extension_attributes = extension_attributes

    @property
    def shipping_amount(self):
        """Gets the shipping_amount of this SalesDataTotalInterface.

        Shipping amount.

        :return: The shipping_amount of this SalesDataTotalInterface.
        :rtype: float
        """
        return self._shipping_amount

    @shipping_amount.setter
    def shipping_amount(self, shipping_amount):
        """Sets the shipping_amount of this SalesDataTotalInterface.

        Shipping amount.

        :param shipping_amount: The shipping_amount of this SalesDataTotalInterface.
        :type shipping_amount: float
        """

        self._shipping_amount = shipping_amount

    @property
    def shipping_canceled(self):
        """Gets the shipping_canceled of this SalesDataTotalInterface.

        Shipping canceled amount.

        :return: The shipping_canceled of this SalesDataTotalInterface.
        :rtype: float
        """
        return self._shipping_canceled

    @shipping_canceled.setter
    def shipping_canceled(self, shipping_canceled):
        """Sets the shipping_canceled of this SalesDataTotalInterface.

        Shipping canceled amount.

        :param shipping_canceled: The shipping_canceled of this SalesDataTotalInterface.
        :type shipping_canceled: float
        """

        self._shipping_canceled = shipping_canceled

    @property
    def shipping_discount_amount(self):
        """Gets the shipping_discount_amount of this SalesDataTotalInterface.

        Shipping discount amount.

        :return: The shipping_discount_amount of this SalesDataTotalInterface.
        :rtype: float
        """
        return self._shipping_discount_amount

    @shipping_discount_amount.setter
    def shipping_discount_amount(self, shipping_discount_amount):
        """Sets the shipping_discount_amount of this SalesDataTotalInterface.

        Shipping discount amount.

        :param shipping_discount_amount: The shipping_discount_amount of this SalesDataTotalInterface.
        :type shipping_discount_amount: float
        """

        self._shipping_discount_amount = shipping_discount_amount

    @property
    def shipping_discount_tax_compensation_amount(self):
        """Gets the shipping_discount_tax_compensation_amount of this SalesDataTotalInterface.

        Shipping discount tax compensation amount.

        :return: The shipping_discount_tax_compensation_amount of this SalesDataTotalInterface.
        :rtype: float
        """
        return self._shipping_discount_tax_compensation_amount

    @shipping_discount_tax_compensation_amount.setter
    def shipping_discount_tax_compensation_amount(self, shipping_discount_tax_compensation_amount):
        """Sets the shipping_discount_tax_compensation_amount of this SalesDataTotalInterface.

        Shipping discount tax compensation amount.

        :param shipping_discount_tax_compensation_amount: The shipping_discount_tax_compensation_amount of this SalesDataTotalInterface.
        :type shipping_discount_tax_compensation_amount: float
        """

        self._shipping_discount_tax_compensation_amount = shipping_discount_tax_compensation_amount

    @property
    def shipping_incl_tax(self):
        """Gets the shipping_incl_tax of this SalesDataTotalInterface.

        Shipping including tax amount.

        :return: The shipping_incl_tax of this SalesDataTotalInterface.
        :rtype: float
        """
        return self._shipping_incl_tax

    @shipping_incl_tax.setter
    def shipping_incl_tax(self, shipping_incl_tax):
        """Sets the shipping_incl_tax of this SalesDataTotalInterface.

        Shipping including tax amount.

        :param shipping_incl_tax: The shipping_incl_tax of this SalesDataTotalInterface.
        :type shipping_incl_tax: float
        """

        self._shipping_incl_tax = shipping_incl_tax

    @property
    def shipping_invoiced(self):
        """Gets the shipping_invoiced of this SalesDataTotalInterface.

        Shipping invoiced amount.

        :return: The shipping_invoiced of this SalesDataTotalInterface.
        :rtype: float
        """
        return self._shipping_invoiced

    @shipping_invoiced.setter
    def shipping_invoiced(self, shipping_invoiced):
        """Sets the shipping_invoiced of this SalesDataTotalInterface.

        Shipping invoiced amount.

        :param shipping_invoiced: The shipping_invoiced of this SalesDataTotalInterface.
        :type shipping_invoiced: float
        """

        self._shipping_invoiced = shipping_invoiced

    @property
    def shipping_refunded(self):
        """Gets the shipping_refunded of this SalesDataTotalInterface.

        Shipping refunded amount.

        :return: The shipping_refunded of this SalesDataTotalInterface.
        :rtype: float
        """
        return self._shipping_refunded

    @shipping_refunded.setter
    def shipping_refunded(self, shipping_refunded):
        """Sets the shipping_refunded of this SalesDataTotalInterface.

        Shipping refunded amount.

        :param shipping_refunded: The shipping_refunded of this SalesDataTotalInterface.
        :type shipping_refunded: float
        """

        self._shipping_refunded = shipping_refunded

    @property
    def shipping_tax_amount(self):
        """Gets the shipping_tax_amount of this SalesDataTotalInterface.

        Shipping tax amount.

        :return: The shipping_tax_amount of this SalesDataTotalInterface.
        :rtype: float
        """
        return self._shipping_tax_amount

    @shipping_tax_amount.setter
    def shipping_tax_amount(self, shipping_tax_amount):
        """Sets the shipping_tax_amount of this SalesDataTotalInterface.

        Shipping tax amount.

        :param shipping_tax_amount: The shipping_tax_amount of this SalesDataTotalInterface.
        :type shipping_tax_amount: float
        """

        self._shipping_tax_amount = shipping_tax_amount

    @property
    def shipping_tax_refunded(self):
        """Gets the shipping_tax_refunded of this SalesDataTotalInterface.

        Shipping tax refunded amount.

        :return: The shipping_tax_refunded of this SalesDataTotalInterface.
        :rtype: float
        """
        return self._shipping_tax_refunded

    @shipping_tax_refunded.setter
    def shipping_tax_refunded(self, shipping_tax_refunded):
        """Sets the shipping_tax_refunded of this SalesDataTotalInterface.

        Shipping tax refunded amount.

        :param shipping_tax_refunded: The shipping_tax_refunded of this SalesDataTotalInterface.
        :type shipping_tax_refunded: float
        """

        self._shipping_tax_refunded = shipping_tax_refunded
