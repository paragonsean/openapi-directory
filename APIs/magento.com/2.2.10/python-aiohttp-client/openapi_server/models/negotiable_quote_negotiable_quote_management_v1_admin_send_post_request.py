# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.negotiable_quote_data_attachment_content_interface import NegotiableQuoteDataAttachmentContentInterface
from openapi_server import util


class NegotiableQuoteNegotiableQuoteManagementV1AdminSendPostRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, comment: str=None, files: List[NegotiableQuoteDataAttachmentContentInterface]=None, quote_id: int=None):
        """NegotiableQuoteNegotiableQuoteManagementV1AdminSendPostRequest - a model defined in OpenAPI

        :param comment: The comment of this NegotiableQuoteNegotiableQuoteManagementV1AdminSendPostRequest.
        :param files: The files of this NegotiableQuoteNegotiableQuoteManagementV1AdminSendPostRequest.
        :param quote_id: The quote_id of this NegotiableQuoteNegotiableQuoteManagementV1AdminSendPostRequest.
        """
        self.openapi_types = {
            'comment': str,
            'files': List[NegotiableQuoteDataAttachmentContentInterface],
            'quote_id': int
        }

        self.attribute_map = {
            'comment': 'comment',
            'files': 'files',
            'quote_id': 'quoteId'
        }

        self._comment = comment
        self._files = files
        self._quote_id = quote_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NegotiableQuoteNegotiableQuoteManagementV1AdminSendPostRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The negotiableQuoteNegotiableQuoteManagementV1AdminSendPost_request of this NegotiableQuoteNegotiableQuoteManagementV1AdminSendPostRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def comment(self):
        """Gets the comment of this NegotiableQuoteNegotiableQuoteManagementV1AdminSendPostRequest.


        :return: The comment of this NegotiableQuoteNegotiableQuoteManagementV1AdminSendPostRequest.
        :rtype: str
        """
        return self._comment

    @comment.setter
    def comment(self, comment):
        """Sets the comment of this NegotiableQuoteNegotiableQuoteManagementV1AdminSendPostRequest.


        :param comment: The comment of this NegotiableQuoteNegotiableQuoteManagementV1AdminSendPostRequest.
        :type comment: str
        """

        self._comment = comment

    @property
    def files(self):
        """Gets the files of this NegotiableQuoteNegotiableQuoteManagementV1AdminSendPostRequest.


        :return: The files of this NegotiableQuoteNegotiableQuoteManagementV1AdminSendPostRequest.
        :rtype: List[NegotiableQuoteDataAttachmentContentInterface]
        """
        return self._files

    @files.setter
    def files(self, files):
        """Sets the files of this NegotiableQuoteNegotiableQuoteManagementV1AdminSendPostRequest.


        :param files: The files of this NegotiableQuoteNegotiableQuoteManagementV1AdminSendPostRequest.
        :type files: List[NegotiableQuoteDataAttachmentContentInterface]
        """

        self._files = files

    @property
    def quote_id(self):
        """Gets the quote_id of this NegotiableQuoteNegotiableQuoteManagementV1AdminSendPostRequest.


        :return: The quote_id of this NegotiableQuoteNegotiableQuoteManagementV1AdminSendPostRequest.
        :rtype: int
        """
        return self._quote_id

    @quote_id.setter
    def quote_id(self, quote_id):
        """Sets the quote_id of this NegotiableQuoteNegotiableQuoteManagementV1AdminSendPostRequest.


        :param quote_id: The quote_id of this NegotiableQuoteNegotiableQuoteManagementV1AdminSendPostRequest.
        :type quote_id: int
        """
        if quote_id is None:
            raise ValueError("Invalid value for `quote_id`, must not be `None`")

        self._quote_id = quote_id
