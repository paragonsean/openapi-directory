# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.catalog_data_product_render_button_interface import CatalogDataProductRenderButtonInterface
from openapi_server import util


class CatalogDataProductRenderExtensionInterface(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, review_html: str=None, wishlist_button: CatalogDataProductRenderButtonInterface=None):
        """CatalogDataProductRenderExtensionInterface - a model defined in OpenAPI

        :param review_html: The review_html of this CatalogDataProductRenderExtensionInterface.
        :param wishlist_button: The wishlist_button of this CatalogDataProductRenderExtensionInterface.
        """
        self.openapi_types = {
            'review_html': str,
            'wishlist_button': CatalogDataProductRenderButtonInterface
        }

        self.attribute_map = {
            'review_html': 'review_html',
            'wishlist_button': 'wishlist_button'
        }

        self._review_html = review_html
        self._wishlist_button = wishlist_button

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CatalogDataProductRenderExtensionInterface':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The catalog-data-product-render-extension-interface of this CatalogDataProductRenderExtensionInterface.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def review_html(self):
        """Gets the review_html of this CatalogDataProductRenderExtensionInterface.


        :return: The review_html of this CatalogDataProductRenderExtensionInterface.
        :rtype: str
        """
        return self._review_html

    @review_html.setter
    def review_html(self, review_html):
        """Sets the review_html of this CatalogDataProductRenderExtensionInterface.


        :param review_html: The review_html of this CatalogDataProductRenderExtensionInterface.
        :type review_html: str
        """

        self._review_html = review_html

    @property
    def wishlist_button(self):
        """Gets the wishlist_button of this CatalogDataProductRenderExtensionInterface.


        :return: The wishlist_button of this CatalogDataProductRenderExtensionInterface.
        :rtype: CatalogDataProductRenderButtonInterface
        """
        return self._wishlist_button

    @wishlist_button.setter
    def wishlist_button(self, wishlist_button):
        """Sets the wishlist_button of this CatalogDataProductRenderExtensionInterface.


        :param wishlist_button: The wishlist_button of this CatalogDataProductRenderExtensionInterface.
        :type wishlist_button: CatalogDataProductRenderButtonInterface
        """

        self._wishlist_button = wishlist_button
