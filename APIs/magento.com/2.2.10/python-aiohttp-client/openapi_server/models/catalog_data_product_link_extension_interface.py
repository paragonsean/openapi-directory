# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CatalogDataProductLinkExtensionInterface(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, qty: float=None):
        """CatalogDataProductLinkExtensionInterface - a model defined in OpenAPI

        :param qty: The qty of this CatalogDataProductLinkExtensionInterface.
        """
        self.openapi_types = {
            'qty': float
        }

        self.attribute_map = {
            'qty': 'qty'
        }

        self._qty = qty

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CatalogDataProductLinkExtensionInterface':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The catalog-data-product-link-extension-interface of this CatalogDataProductLinkExtensionInterface.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def qty(self):
        """Gets the qty of this CatalogDataProductLinkExtensionInterface.


        :return: The qty of this CatalogDataProductLinkExtensionInterface.
        :rtype: float
        """
        return self._qty

    @qty.setter
    def qty(self, qty):
        """Sets the qty of this CatalogDataProductLinkExtensionInterface.


        :param qty: The qty of this CatalogDataProductLinkExtensionInterface.
        :type qty: float
        """

        self._qty = qty
