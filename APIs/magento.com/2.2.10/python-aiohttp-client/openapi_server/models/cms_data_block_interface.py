# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CmsDataBlockInterface(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, active: bool=None, content: str=None, creation_time: str=None, id: int=None, identifier: str=None, title: str=None, update_time: str=None):
        """CmsDataBlockInterface - a model defined in OpenAPI

        :param active: The active of this CmsDataBlockInterface.
        :param content: The content of this CmsDataBlockInterface.
        :param creation_time: The creation_time of this CmsDataBlockInterface.
        :param id: The id of this CmsDataBlockInterface.
        :param identifier: The identifier of this CmsDataBlockInterface.
        :param title: The title of this CmsDataBlockInterface.
        :param update_time: The update_time of this CmsDataBlockInterface.
        """
        self.openapi_types = {
            'active': bool,
            'content': str,
            'creation_time': str,
            'id': int,
            'identifier': str,
            'title': str,
            'update_time': str
        }

        self.attribute_map = {
            'active': 'active',
            'content': 'content',
            'creation_time': 'creation_time',
            'id': 'id',
            'identifier': 'identifier',
            'title': 'title',
            'update_time': 'update_time'
        }

        self._active = active
        self._content = content
        self._creation_time = creation_time
        self._id = id
        self._identifier = identifier
        self._title = title
        self._update_time = update_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CmsDataBlockInterface':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The cms-data-block-interface of this CmsDataBlockInterface.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def active(self):
        """Gets the active of this CmsDataBlockInterface.

        Active

        :return: The active of this CmsDataBlockInterface.
        :rtype: bool
        """
        return self._active

    @active.setter
    def active(self, active):
        """Sets the active of this CmsDataBlockInterface.

        Active

        :param active: The active of this CmsDataBlockInterface.
        :type active: bool
        """

        self._active = active

    @property
    def content(self):
        """Gets the content of this CmsDataBlockInterface.

        Content

        :return: The content of this CmsDataBlockInterface.
        :rtype: str
        """
        return self._content

    @content.setter
    def content(self, content):
        """Sets the content of this CmsDataBlockInterface.

        Content

        :param content: The content of this CmsDataBlockInterface.
        :type content: str
        """

        self._content = content

    @property
    def creation_time(self):
        """Gets the creation_time of this CmsDataBlockInterface.

        Creation time

        :return: The creation_time of this CmsDataBlockInterface.
        :rtype: str
        """
        return self._creation_time

    @creation_time.setter
    def creation_time(self, creation_time):
        """Sets the creation_time of this CmsDataBlockInterface.

        Creation time

        :param creation_time: The creation_time of this CmsDataBlockInterface.
        :type creation_time: str
        """

        self._creation_time = creation_time

    @property
    def id(self):
        """Gets the id of this CmsDataBlockInterface.

        ID

        :return: The id of this CmsDataBlockInterface.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this CmsDataBlockInterface.

        ID

        :param id: The id of this CmsDataBlockInterface.
        :type id: int
        """

        self._id = id

    @property
    def identifier(self):
        """Gets the identifier of this CmsDataBlockInterface.

        Identifier

        :return: The identifier of this CmsDataBlockInterface.
        :rtype: str
        """
        return self._identifier

    @identifier.setter
    def identifier(self, identifier):
        """Sets the identifier of this CmsDataBlockInterface.

        Identifier

        :param identifier: The identifier of this CmsDataBlockInterface.
        :type identifier: str
        """
        if identifier is None:
            raise ValueError("Invalid value for `identifier`, must not be `None`")

        self._identifier = identifier

    @property
    def title(self):
        """Gets the title of this CmsDataBlockInterface.

        Title

        :return: The title of this CmsDataBlockInterface.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this CmsDataBlockInterface.

        Title

        :param title: The title of this CmsDataBlockInterface.
        :type title: str
        """

        self._title = title

    @property
    def update_time(self):
        """Gets the update_time of this CmsDataBlockInterface.

        Update time

        :return: The update_time of this CmsDataBlockInterface.
        :rtype: str
        """
        return self._update_time

    @update_time.setter
    def update_time(self, update_time):
        """Sets the update_time of this CmsDataBlockInterface.

        Update time

        :param update_time: The update_time of this CmsDataBlockInterface.
        :type update_time: str
        """

        self._update_time = update_time
