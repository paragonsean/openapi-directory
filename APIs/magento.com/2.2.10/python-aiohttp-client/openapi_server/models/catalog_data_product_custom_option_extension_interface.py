# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CatalogDataProductCustomOptionExtensionInterface(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, vertex_flex_field: str=None):
        """CatalogDataProductCustomOptionExtensionInterface - a model defined in OpenAPI

        :param vertex_flex_field: The vertex_flex_field of this CatalogDataProductCustomOptionExtensionInterface.
        """
        self.openapi_types = {
            'vertex_flex_field': str
        }

        self.attribute_map = {
            'vertex_flex_field': 'vertex_flex_field'
        }

        self._vertex_flex_field = vertex_flex_field

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CatalogDataProductCustomOptionExtensionInterface':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The catalog-data-product-custom-option-extension-interface of this CatalogDataProductCustomOptionExtensionInterface.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def vertex_flex_field(self):
        """Gets the vertex_flex_field of this CatalogDataProductCustomOptionExtensionInterface.


        :return: The vertex_flex_field of this CatalogDataProductCustomOptionExtensionInterface.
        :rtype: str
        """
        return self._vertex_flex_field

    @vertex_flex_field.setter
    def vertex_flex_field(self, vertex_flex_field):
        """Sets the vertex_flex_field of this CatalogDataProductCustomOptionExtensionInterface.


        :param vertex_flex_field: The vertex_flex_field of this CatalogDataProductCustomOptionExtensionInterface.
        :type vertex_flex_field: str
        """

        self._vertex_flex_field = vertex_flex_field
