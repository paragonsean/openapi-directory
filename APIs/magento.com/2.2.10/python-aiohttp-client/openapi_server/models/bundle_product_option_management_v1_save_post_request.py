# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.bundle_data_option_interface import BundleDataOptionInterface
from openapi_server import util


class BundleProductOptionManagementV1SavePostRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, option: BundleDataOptionInterface=None):
        """BundleProductOptionManagementV1SavePostRequest - a model defined in OpenAPI

        :param option: The option of this BundleProductOptionManagementV1SavePostRequest.
        """
        self.openapi_types = {
            'option': BundleDataOptionInterface
        }

        self.attribute_map = {
            'option': 'option'
        }

        self._option = option

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BundleProductOptionManagementV1SavePostRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The bundleProductOptionManagementV1SavePost_request of this BundleProductOptionManagementV1SavePostRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def option(self):
        """Gets the option of this BundleProductOptionManagementV1SavePostRequest.


        :return: The option of this BundleProductOptionManagementV1SavePostRequest.
        :rtype: BundleDataOptionInterface
        """
        return self._option

    @option.setter
    def option(self, option):
        """Sets the option of this BundleProductOptionManagementV1SavePostRequest.


        :param option: The option of this BundleProductOptionManagementV1SavePostRequest.
        :type option: BundleDataOptionInterface
        """
        if option is None:
            raise ValueError("Invalid value for `option`, must not be `None`")

        self._option = option
