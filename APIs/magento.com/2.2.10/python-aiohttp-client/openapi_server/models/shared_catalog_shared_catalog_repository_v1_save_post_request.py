# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.shared_catalog_data_shared_catalog_interface import SharedCatalogDataSharedCatalogInterface
from openapi_server import util


class SharedCatalogSharedCatalogRepositoryV1SavePostRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, shared_catalog: SharedCatalogDataSharedCatalogInterface=None):
        """SharedCatalogSharedCatalogRepositoryV1SavePostRequest - a model defined in OpenAPI

        :param shared_catalog: The shared_catalog of this SharedCatalogSharedCatalogRepositoryV1SavePostRequest.
        """
        self.openapi_types = {
            'shared_catalog': SharedCatalogDataSharedCatalogInterface
        }

        self.attribute_map = {
            'shared_catalog': 'sharedCatalog'
        }

        self._shared_catalog = shared_catalog

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SharedCatalogSharedCatalogRepositoryV1SavePostRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The sharedCatalogSharedCatalogRepositoryV1SavePost_request of this SharedCatalogSharedCatalogRepositoryV1SavePostRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def shared_catalog(self):
        """Gets the shared_catalog of this SharedCatalogSharedCatalogRepositoryV1SavePostRequest.


        :return: The shared_catalog of this SharedCatalogSharedCatalogRepositoryV1SavePostRequest.
        :rtype: SharedCatalogDataSharedCatalogInterface
        """
        return self._shared_catalog

    @shared_catalog.setter
    def shared_catalog(self, shared_catalog):
        """Sets the shared_catalog of this SharedCatalogSharedCatalogRepositoryV1SavePostRequest.


        :param shared_catalog: The shared_catalog of this SharedCatalogSharedCatalogRepositoryV1SavePostRequest.
        :type shared_catalog: SharedCatalogDataSharedCatalogInterface
        """
        if shared_catalog is None:
            raise ValueError("Invalid value for `shared_catalog`, must not be `None`")

        self._shared_catalog = shared_catalog
