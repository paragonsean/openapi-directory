# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.tax_data_applied_tax_rate_interface import TaxDataAppliedTaxRateInterface
from openapi_server import util


class TaxDataOrderTaxDetailsAppliedTaxExtensionInterface(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, rates: List[TaxDataAppliedTaxRateInterface]=None):
        """TaxDataOrderTaxDetailsAppliedTaxExtensionInterface - a model defined in OpenAPI

        :param rates: The rates of this TaxDataOrderTaxDetailsAppliedTaxExtensionInterface.
        """
        self.openapi_types = {
            'rates': List[TaxDataAppliedTaxRateInterface]
        }

        self.attribute_map = {
            'rates': 'rates'
        }

        self._rates = rates

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TaxDataOrderTaxDetailsAppliedTaxExtensionInterface':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The tax-data-order-tax-details-applied-tax-extension-interface of this TaxDataOrderTaxDetailsAppliedTaxExtensionInterface.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def rates(self):
        """Gets the rates of this TaxDataOrderTaxDetailsAppliedTaxExtensionInterface.


        :return: The rates of this TaxDataOrderTaxDetailsAppliedTaxExtensionInterface.
        :rtype: List[TaxDataAppliedTaxRateInterface]
        """
        return self._rates

    @rates.setter
    def rates(self, rates):
        """Sets the rates of this TaxDataOrderTaxDetailsAppliedTaxExtensionInterface.


        :param rates: The rates of this TaxDataOrderTaxDetailsAppliedTaxExtensionInterface.
        :type rates: List[TaxDataAppliedTaxRateInterface]
        """

        self._rates = rates
