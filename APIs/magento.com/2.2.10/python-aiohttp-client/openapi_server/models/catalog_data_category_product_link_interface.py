# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CatalogDataCategoryProductLinkInterface(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, category_id: str=None, extension_attributes: object=None, position: int=None, sku: str=None):
        """CatalogDataCategoryProductLinkInterface - a model defined in OpenAPI

        :param category_id: The category_id of this CatalogDataCategoryProductLinkInterface.
        :param extension_attributes: The extension_attributes of this CatalogDataCategoryProductLinkInterface.
        :param position: The position of this CatalogDataCategoryProductLinkInterface.
        :param sku: The sku of this CatalogDataCategoryProductLinkInterface.
        """
        self.openapi_types = {
            'category_id': str,
            'extension_attributes': object,
            'position': int,
            'sku': str
        }

        self.attribute_map = {
            'category_id': 'category_id',
            'extension_attributes': 'extension_attributes',
            'position': 'position',
            'sku': 'sku'
        }

        self._category_id = category_id
        self._extension_attributes = extension_attributes
        self._position = position
        self._sku = sku

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CatalogDataCategoryProductLinkInterface':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The catalog-data-category-product-link-interface of this CatalogDataCategoryProductLinkInterface.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def category_id(self):
        """Gets the category_id of this CatalogDataCategoryProductLinkInterface.

        Category id

        :return: The category_id of this CatalogDataCategoryProductLinkInterface.
        :rtype: str
        """
        return self._category_id

    @category_id.setter
    def category_id(self, category_id):
        """Sets the category_id of this CatalogDataCategoryProductLinkInterface.

        Category id

        :param category_id: The category_id of this CatalogDataCategoryProductLinkInterface.
        :type category_id: str
        """
        if category_id is None:
            raise ValueError("Invalid value for `category_id`, must not be `None`")

        self._category_id = category_id

    @property
    def extension_attributes(self):
        """Gets the extension_attributes of this CatalogDataCategoryProductLinkInterface.

        ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\CategoryProductLinkInterface

        :return: The extension_attributes of this CatalogDataCategoryProductLinkInterface.
        :rtype: object
        """
        return self._extension_attributes

    @extension_attributes.setter
    def extension_attributes(self, extension_attributes):
        """Sets the extension_attributes of this CatalogDataCategoryProductLinkInterface.

        ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\CategoryProductLinkInterface

        :param extension_attributes: The extension_attributes of this CatalogDataCategoryProductLinkInterface.
        :type extension_attributes: object
        """

        self._extension_attributes = extension_attributes

    @property
    def position(self):
        """Gets the position of this CatalogDataCategoryProductLinkInterface.


        :return: The position of this CatalogDataCategoryProductLinkInterface.
        :rtype: int
        """
        return self._position

    @position.setter
    def position(self, position):
        """Sets the position of this CatalogDataCategoryProductLinkInterface.


        :param position: The position of this CatalogDataCategoryProductLinkInterface.
        :type position: int
        """

        self._position = position

    @property
    def sku(self):
        """Gets the sku of this CatalogDataCategoryProductLinkInterface.


        :return: The sku of this CatalogDataCategoryProductLinkInterface.
        :rtype: str
        """
        return self._sku

    @sku.setter
    def sku(self, sku):
        """Sets the sku of this CatalogDataCategoryProductLinkInterface.


        :param sku: The sku of this CatalogDataCategoryProductLinkInterface.
        :type sku: str
        """

        self._sku = sku
