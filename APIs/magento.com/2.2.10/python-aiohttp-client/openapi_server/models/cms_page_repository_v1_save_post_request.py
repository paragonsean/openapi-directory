# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.cms_data_page_interface import CmsDataPageInterface
from openapi_server import util


class CmsPageRepositoryV1SavePostRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, page: CmsDataPageInterface=None):
        """CmsPageRepositoryV1SavePostRequest - a model defined in OpenAPI

        :param page: The page of this CmsPageRepositoryV1SavePostRequest.
        """
        self.openapi_types = {
            'page': CmsDataPageInterface
        }

        self.attribute_map = {
            'page': 'page'
        }

        self._page = page

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CmsPageRepositoryV1SavePostRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The cmsPageRepositoryV1SavePost_request of this CmsPageRepositoryV1SavePostRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def page(self):
        """Gets the page of this CmsPageRepositoryV1SavePostRequest.


        :return: The page of this CmsPageRepositoryV1SavePostRequest.
        :rtype: CmsDataPageInterface
        """
        return self._page

    @page.setter
    def page(self, page):
        """Sets the page of this CmsPageRepositoryV1SavePostRequest.


        :param page: The page of this CmsPageRepositoryV1SavePostRequest.
        :type page: CmsDataPageInterface
        """
        if page is None:
            raise ValueError("Invalid value for `page`, must not be `None`")

        self._page = page
