# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.quote_data_payment_extension_interface import QuoteDataPaymentExtensionInterface
from openapi_server import util


class QuoteDataPaymentInterface(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, additional_data: List[str]=None, extension_attributes: QuoteDataPaymentExtensionInterface=None, method: str=None, po_number: str=None):
        """QuoteDataPaymentInterface - a model defined in OpenAPI

        :param additional_data: The additional_data of this QuoteDataPaymentInterface.
        :param extension_attributes: The extension_attributes of this QuoteDataPaymentInterface.
        :param method: The method of this QuoteDataPaymentInterface.
        :param po_number: The po_number of this QuoteDataPaymentInterface.
        """
        self.openapi_types = {
            'additional_data': List[str],
            'extension_attributes': QuoteDataPaymentExtensionInterface,
            'method': str,
            'po_number': str
        }

        self.attribute_map = {
            'additional_data': 'additional_data',
            'extension_attributes': 'extension_attributes',
            'method': 'method',
            'po_number': 'po_number'
        }

        self._additional_data = additional_data
        self._extension_attributes = extension_attributes
        self._method = method
        self._po_number = po_number

    @classmethod
    def from_dict(cls, dikt: dict) -> 'QuoteDataPaymentInterface':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The quote-data-payment-interface of this QuoteDataPaymentInterface.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def additional_data(self):
        """Gets the additional_data of this QuoteDataPaymentInterface.

        Payment additional details

        :return: The additional_data of this QuoteDataPaymentInterface.
        :rtype: List[str]
        """
        return self._additional_data

    @additional_data.setter
    def additional_data(self, additional_data):
        """Sets the additional_data of this QuoteDataPaymentInterface.

        Payment additional details

        :param additional_data: The additional_data of this QuoteDataPaymentInterface.
        :type additional_data: List[str]
        """

        self._additional_data = additional_data

    @property
    def extension_attributes(self):
        """Gets the extension_attributes of this QuoteDataPaymentInterface.


        :return: The extension_attributes of this QuoteDataPaymentInterface.
        :rtype: QuoteDataPaymentExtensionInterface
        """
        return self._extension_attributes

    @extension_attributes.setter
    def extension_attributes(self, extension_attributes):
        """Sets the extension_attributes of this QuoteDataPaymentInterface.


        :param extension_attributes: The extension_attributes of this QuoteDataPaymentInterface.
        :type extension_attributes: QuoteDataPaymentExtensionInterface
        """

        self._extension_attributes = extension_attributes

    @property
    def method(self):
        """Gets the method of this QuoteDataPaymentInterface.

        Payment method code

        :return: The method of this QuoteDataPaymentInterface.
        :rtype: str
        """
        return self._method

    @method.setter
    def method(self, method):
        """Sets the method of this QuoteDataPaymentInterface.

        Payment method code

        :param method: The method of this QuoteDataPaymentInterface.
        :type method: str
        """
        if method is None:
            raise ValueError("Invalid value for `method`, must not be `None`")

        self._method = method

    @property
    def po_number(self):
        """Gets the po_number of this QuoteDataPaymentInterface.

        Purchase order number

        :return: The po_number of this QuoteDataPaymentInterface.
        :rtype: str
        """
        return self._po_number

    @po_number.setter
    def po_number(self, po_number):
        """Sets the po_number of this QuoteDataPaymentInterface.

        Purchase order number

        :param po_number: The po_number of this QuoteDataPaymentInterface.
        :type po_number: str
        """

        self._po_number = po_number
