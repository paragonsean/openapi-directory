# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class NegotiableQuoteDataNegotiableQuoteItemInterface(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, extension_attributes: object=None, item_id: int=None, original_discount_amount: float=None, original_price: float=None, original_tax_amount: float=None):
        """NegotiableQuoteDataNegotiableQuoteItemInterface - a model defined in OpenAPI

        :param extension_attributes: The extension_attributes of this NegotiableQuoteDataNegotiableQuoteItemInterface.
        :param item_id: The item_id of this NegotiableQuoteDataNegotiableQuoteItemInterface.
        :param original_discount_amount: The original_discount_amount of this NegotiableQuoteDataNegotiableQuoteItemInterface.
        :param original_price: The original_price of this NegotiableQuoteDataNegotiableQuoteItemInterface.
        :param original_tax_amount: The original_tax_amount of this NegotiableQuoteDataNegotiableQuoteItemInterface.
        """
        self.openapi_types = {
            'extension_attributes': object,
            'item_id': int,
            'original_discount_amount': float,
            'original_price': float,
            'original_tax_amount': float
        }

        self.attribute_map = {
            'extension_attributes': 'extension_attributes',
            'item_id': 'item_id',
            'original_discount_amount': 'original_discount_amount',
            'original_price': 'original_price',
            'original_tax_amount': 'original_tax_amount'
        }

        self._extension_attributes = extension_attributes
        self._item_id = item_id
        self._original_discount_amount = original_discount_amount
        self._original_price = original_price
        self._original_tax_amount = original_tax_amount

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NegotiableQuoteDataNegotiableQuoteItemInterface':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The negotiable-quote-data-negotiable-quote-item-interface of this NegotiableQuoteDataNegotiableQuoteItemInterface.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def extension_attributes(self):
        """Gets the extension_attributes of this NegotiableQuoteDataNegotiableQuoteItemInterface.

        ExtensionInterface class for @see \\Magento\\NegotiableQuote\\Api\\Data\\NegotiableQuoteItemInterface

        :return: The extension_attributes of this NegotiableQuoteDataNegotiableQuoteItemInterface.
        :rtype: object
        """
        return self._extension_attributes

    @extension_attributes.setter
    def extension_attributes(self, extension_attributes):
        """Sets the extension_attributes of this NegotiableQuoteDataNegotiableQuoteItemInterface.

        ExtensionInterface class for @see \\Magento\\NegotiableQuote\\Api\\Data\\NegotiableQuoteItemInterface

        :param extension_attributes: The extension_attributes of this NegotiableQuoteDataNegotiableQuoteItemInterface.
        :type extension_attributes: object
        """

        self._extension_attributes = extension_attributes

    @property
    def item_id(self):
        """Gets the item_id of this NegotiableQuoteDataNegotiableQuoteItemInterface.

        Quote item id

        :return: The item_id of this NegotiableQuoteDataNegotiableQuoteItemInterface.
        :rtype: int
        """
        return self._item_id

    @item_id.setter
    def item_id(self, item_id):
        """Sets the item_id of this NegotiableQuoteDataNegotiableQuoteItemInterface.

        Quote item id

        :param item_id: The item_id of this NegotiableQuoteDataNegotiableQuoteItemInterface.
        :type item_id: int
        """
        if item_id is None:
            raise ValueError("Invalid value for `item_id`, must not be `None`")

        self._item_id = item_id

    @property
    def original_discount_amount(self):
        """Gets the original_discount_amount of this NegotiableQuoteDataNegotiableQuoteItemInterface.

        Quote item original discount amount

        :return: The original_discount_amount of this NegotiableQuoteDataNegotiableQuoteItemInterface.
        :rtype: float
        """
        return self._original_discount_amount

    @original_discount_amount.setter
    def original_discount_amount(self, original_discount_amount):
        """Sets the original_discount_amount of this NegotiableQuoteDataNegotiableQuoteItemInterface.

        Quote item original discount amount

        :param original_discount_amount: The original_discount_amount of this NegotiableQuoteDataNegotiableQuoteItemInterface.
        :type original_discount_amount: float
        """
        if original_discount_amount is None:
            raise ValueError("Invalid value for `original_discount_amount`, must not be `None`")

        self._original_discount_amount = original_discount_amount

    @property
    def original_price(self):
        """Gets the original_price of this NegotiableQuoteDataNegotiableQuoteItemInterface.

        Quote item original price

        :return: The original_price of this NegotiableQuoteDataNegotiableQuoteItemInterface.
        :rtype: float
        """
        return self._original_price

    @original_price.setter
    def original_price(self, original_price):
        """Sets the original_price of this NegotiableQuoteDataNegotiableQuoteItemInterface.

        Quote item original price

        :param original_price: The original_price of this NegotiableQuoteDataNegotiableQuoteItemInterface.
        :type original_price: float
        """
        if original_price is None:
            raise ValueError("Invalid value for `original_price`, must not be `None`")

        self._original_price = original_price

    @property
    def original_tax_amount(self):
        """Gets the original_tax_amount of this NegotiableQuoteDataNegotiableQuoteItemInterface.

        Quote item original tax amount

        :return: The original_tax_amount of this NegotiableQuoteDataNegotiableQuoteItemInterface.
        :rtype: float
        """
        return self._original_tax_amount

    @original_tax_amount.setter
    def original_tax_amount(self, original_tax_amount):
        """Sets the original_tax_amount of this NegotiableQuoteDataNegotiableQuoteItemInterface.

        Quote item original tax amount

        :param original_tax_amount: The original_tax_amount of this NegotiableQuoteDataNegotiableQuoteItemInterface.
        :type original_tax_amount: float
        """
        if original_tax_amount is None:
            raise ValueError("Invalid value for `original_tax_amount`, must not be `None`")

        self._original_tax_amount = original_tax_amount
