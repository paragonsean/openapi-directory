# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.sales_data_order_payment_extension_interface import SalesDataOrderPaymentExtensionInterface
from openapi_server import util


class SalesDataOrderPaymentInterface(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_status: str=None, additional_data: str=None, additional_information: List[str]=None, address_status: str=None, amount_authorized: float=None, amount_canceled: float=None, amount_ordered: float=None, amount_paid: float=None, amount_refunded: float=None, anet_trans_method: str=None, base_amount_authorized: float=None, base_amount_canceled: float=None, base_amount_ordered: float=None, base_amount_paid: float=None, base_amount_paid_online: float=None, base_amount_refunded: float=None, base_amount_refunded_online: float=None, base_shipping_amount: float=None, base_shipping_captured: float=None, base_shipping_refunded: float=None, cc_approval: str=None, cc_avs_status: str=None, cc_cid_status: str=None, cc_debug_request_body: str=None, cc_debug_response_body: str=None, cc_debug_response_serialized: str=None, cc_exp_month: str=None, cc_exp_year: str=None, cc_last4: str=None, cc_number_enc: str=None, cc_owner: str=None, cc_secure_verify: str=None, cc_ss_issue: str=None, cc_ss_start_month: str=None, cc_ss_start_year: str=None, cc_status: str=None, cc_status_description: str=None, cc_trans_id: str=None, cc_type: str=None, echeck_account_name: str=None, echeck_account_type: str=None, echeck_bank_name: str=None, echeck_routing_number: str=None, echeck_type: str=None, entity_id: int=None, extension_attributes: SalesDataOrderPaymentExtensionInterface=None, last_trans_id: str=None, method: str=None, parent_id: int=None, po_number: str=None, protection_eligibility: str=None, quote_payment_id: int=None, shipping_amount: float=None, shipping_captured: float=None, shipping_refunded: float=None):
        """SalesDataOrderPaymentInterface - a model defined in OpenAPI

        :param account_status: The account_status of this SalesDataOrderPaymentInterface.
        :param additional_data: The additional_data of this SalesDataOrderPaymentInterface.
        :param additional_information: The additional_information of this SalesDataOrderPaymentInterface.
        :param address_status: The address_status of this SalesDataOrderPaymentInterface.
        :param amount_authorized: The amount_authorized of this SalesDataOrderPaymentInterface.
        :param amount_canceled: The amount_canceled of this SalesDataOrderPaymentInterface.
        :param amount_ordered: The amount_ordered of this SalesDataOrderPaymentInterface.
        :param amount_paid: The amount_paid of this SalesDataOrderPaymentInterface.
        :param amount_refunded: The amount_refunded of this SalesDataOrderPaymentInterface.
        :param anet_trans_method: The anet_trans_method of this SalesDataOrderPaymentInterface.
        :param base_amount_authorized: The base_amount_authorized of this SalesDataOrderPaymentInterface.
        :param base_amount_canceled: The base_amount_canceled of this SalesDataOrderPaymentInterface.
        :param base_amount_ordered: The base_amount_ordered of this SalesDataOrderPaymentInterface.
        :param base_amount_paid: The base_amount_paid of this SalesDataOrderPaymentInterface.
        :param base_amount_paid_online: The base_amount_paid_online of this SalesDataOrderPaymentInterface.
        :param base_amount_refunded: The base_amount_refunded of this SalesDataOrderPaymentInterface.
        :param base_amount_refunded_online: The base_amount_refunded_online of this SalesDataOrderPaymentInterface.
        :param base_shipping_amount: The base_shipping_amount of this SalesDataOrderPaymentInterface.
        :param base_shipping_captured: The base_shipping_captured of this SalesDataOrderPaymentInterface.
        :param base_shipping_refunded: The base_shipping_refunded of this SalesDataOrderPaymentInterface.
        :param cc_approval: The cc_approval of this SalesDataOrderPaymentInterface.
        :param cc_avs_status: The cc_avs_status of this SalesDataOrderPaymentInterface.
        :param cc_cid_status: The cc_cid_status of this SalesDataOrderPaymentInterface.
        :param cc_debug_request_body: The cc_debug_request_body of this SalesDataOrderPaymentInterface.
        :param cc_debug_response_body: The cc_debug_response_body of this SalesDataOrderPaymentInterface.
        :param cc_debug_response_serialized: The cc_debug_response_serialized of this SalesDataOrderPaymentInterface.
        :param cc_exp_month: The cc_exp_month of this SalesDataOrderPaymentInterface.
        :param cc_exp_year: The cc_exp_year of this SalesDataOrderPaymentInterface.
        :param cc_last4: The cc_last4 of this SalesDataOrderPaymentInterface.
        :param cc_number_enc: The cc_number_enc of this SalesDataOrderPaymentInterface.
        :param cc_owner: The cc_owner of this SalesDataOrderPaymentInterface.
        :param cc_secure_verify: The cc_secure_verify of this SalesDataOrderPaymentInterface.
        :param cc_ss_issue: The cc_ss_issue of this SalesDataOrderPaymentInterface.
        :param cc_ss_start_month: The cc_ss_start_month of this SalesDataOrderPaymentInterface.
        :param cc_ss_start_year: The cc_ss_start_year of this SalesDataOrderPaymentInterface.
        :param cc_status: The cc_status of this SalesDataOrderPaymentInterface.
        :param cc_status_description: The cc_status_description of this SalesDataOrderPaymentInterface.
        :param cc_trans_id: The cc_trans_id of this SalesDataOrderPaymentInterface.
        :param cc_type: The cc_type of this SalesDataOrderPaymentInterface.
        :param echeck_account_name: The echeck_account_name of this SalesDataOrderPaymentInterface.
        :param echeck_account_type: The echeck_account_type of this SalesDataOrderPaymentInterface.
        :param echeck_bank_name: The echeck_bank_name of this SalesDataOrderPaymentInterface.
        :param echeck_routing_number: The echeck_routing_number of this SalesDataOrderPaymentInterface.
        :param echeck_type: The echeck_type of this SalesDataOrderPaymentInterface.
        :param entity_id: The entity_id of this SalesDataOrderPaymentInterface.
        :param extension_attributes: The extension_attributes of this SalesDataOrderPaymentInterface.
        :param last_trans_id: The last_trans_id of this SalesDataOrderPaymentInterface.
        :param method: The method of this SalesDataOrderPaymentInterface.
        :param parent_id: The parent_id of this SalesDataOrderPaymentInterface.
        :param po_number: The po_number of this SalesDataOrderPaymentInterface.
        :param protection_eligibility: The protection_eligibility of this SalesDataOrderPaymentInterface.
        :param quote_payment_id: The quote_payment_id of this SalesDataOrderPaymentInterface.
        :param shipping_amount: The shipping_amount of this SalesDataOrderPaymentInterface.
        :param shipping_captured: The shipping_captured of this SalesDataOrderPaymentInterface.
        :param shipping_refunded: The shipping_refunded of this SalesDataOrderPaymentInterface.
        """
        self.openapi_types = {
            'account_status': str,
            'additional_data': str,
            'additional_information': List[str],
            'address_status': str,
            'amount_authorized': float,
            'amount_canceled': float,
            'amount_ordered': float,
            'amount_paid': float,
            'amount_refunded': float,
            'anet_trans_method': str,
            'base_amount_authorized': float,
            'base_amount_canceled': float,
            'base_amount_ordered': float,
            'base_amount_paid': float,
            'base_amount_paid_online': float,
            'base_amount_refunded': float,
            'base_amount_refunded_online': float,
            'base_shipping_amount': float,
            'base_shipping_captured': float,
            'base_shipping_refunded': float,
            'cc_approval': str,
            'cc_avs_status': str,
            'cc_cid_status': str,
            'cc_debug_request_body': str,
            'cc_debug_response_body': str,
            'cc_debug_response_serialized': str,
            'cc_exp_month': str,
            'cc_exp_year': str,
            'cc_last4': str,
            'cc_number_enc': str,
            'cc_owner': str,
            'cc_secure_verify': str,
            'cc_ss_issue': str,
            'cc_ss_start_month': str,
            'cc_ss_start_year': str,
            'cc_status': str,
            'cc_status_description': str,
            'cc_trans_id': str,
            'cc_type': str,
            'echeck_account_name': str,
            'echeck_account_type': str,
            'echeck_bank_name': str,
            'echeck_routing_number': str,
            'echeck_type': str,
            'entity_id': int,
            'extension_attributes': SalesDataOrderPaymentExtensionInterface,
            'last_trans_id': str,
            'method': str,
            'parent_id': int,
            'po_number': str,
            'protection_eligibility': str,
            'quote_payment_id': int,
            'shipping_amount': float,
            'shipping_captured': float,
            'shipping_refunded': float
        }

        self.attribute_map = {
            'account_status': 'account_status',
            'additional_data': 'additional_data',
            'additional_information': 'additional_information',
            'address_status': 'address_status',
            'amount_authorized': 'amount_authorized',
            'amount_canceled': 'amount_canceled',
            'amount_ordered': 'amount_ordered',
            'amount_paid': 'amount_paid',
            'amount_refunded': 'amount_refunded',
            'anet_trans_method': 'anet_trans_method',
            'base_amount_authorized': 'base_amount_authorized',
            'base_amount_canceled': 'base_amount_canceled',
            'base_amount_ordered': 'base_amount_ordered',
            'base_amount_paid': 'base_amount_paid',
            'base_amount_paid_online': 'base_amount_paid_online',
            'base_amount_refunded': 'base_amount_refunded',
            'base_amount_refunded_online': 'base_amount_refunded_online',
            'base_shipping_amount': 'base_shipping_amount',
            'base_shipping_captured': 'base_shipping_captured',
            'base_shipping_refunded': 'base_shipping_refunded',
            'cc_approval': 'cc_approval',
            'cc_avs_status': 'cc_avs_status',
            'cc_cid_status': 'cc_cid_status',
            'cc_debug_request_body': 'cc_debug_request_body',
            'cc_debug_response_body': 'cc_debug_response_body',
            'cc_debug_response_serialized': 'cc_debug_response_serialized',
            'cc_exp_month': 'cc_exp_month',
            'cc_exp_year': 'cc_exp_year',
            'cc_last4': 'cc_last4',
            'cc_number_enc': 'cc_number_enc',
            'cc_owner': 'cc_owner',
            'cc_secure_verify': 'cc_secure_verify',
            'cc_ss_issue': 'cc_ss_issue',
            'cc_ss_start_month': 'cc_ss_start_month',
            'cc_ss_start_year': 'cc_ss_start_year',
            'cc_status': 'cc_status',
            'cc_status_description': 'cc_status_description',
            'cc_trans_id': 'cc_trans_id',
            'cc_type': 'cc_type',
            'echeck_account_name': 'echeck_account_name',
            'echeck_account_type': 'echeck_account_type',
            'echeck_bank_name': 'echeck_bank_name',
            'echeck_routing_number': 'echeck_routing_number',
            'echeck_type': 'echeck_type',
            'entity_id': 'entity_id',
            'extension_attributes': 'extension_attributes',
            'last_trans_id': 'last_trans_id',
            'method': 'method',
            'parent_id': 'parent_id',
            'po_number': 'po_number',
            'protection_eligibility': 'protection_eligibility',
            'quote_payment_id': 'quote_payment_id',
            'shipping_amount': 'shipping_amount',
            'shipping_captured': 'shipping_captured',
            'shipping_refunded': 'shipping_refunded'
        }

        self._account_status = account_status
        self._additional_data = additional_data
        self._additional_information = additional_information
        self._address_status = address_status
        self._amount_authorized = amount_authorized
        self._amount_canceled = amount_canceled
        self._amount_ordered = amount_ordered
        self._amount_paid = amount_paid
        self._amount_refunded = amount_refunded
        self._anet_trans_method = anet_trans_method
        self._base_amount_authorized = base_amount_authorized
        self._base_amount_canceled = base_amount_canceled
        self._base_amount_ordered = base_amount_ordered
        self._base_amount_paid = base_amount_paid
        self._base_amount_paid_online = base_amount_paid_online
        self._base_amount_refunded = base_amount_refunded
        self._base_amount_refunded_online = base_amount_refunded_online
        self._base_shipping_amount = base_shipping_amount
        self._base_shipping_captured = base_shipping_captured
        self._base_shipping_refunded = base_shipping_refunded
        self._cc_approval = cc_approval
        self._cc_avs_status = cc_avs_status
        self._cc_cid_status = cc_cid_status
        self._cc_debug_request_body = cc_debug_request_body
        self._cc_debug_response_body = cc_debug_response_body
        self._cc_debug_response_serialized = cc_debug_response_serialized
        self._cc_exp_month = cc_exp_month
        self._cc_exp_year = cc_exp_year
        self._cc_last4 = cc_last4
        self._cc_number_enc = cc_number_enc
        self._cc_owner = cc_owner
        self._cc_secure_verify = cc_secure_verify
        self._cc_ss_issue = cc_ss_issue
        self._cc_ss_start_month = cc_ss_start_month
        self._cc_ss_start_year = cc_ss_start_year
        self._cc_status = cc_status
        self._cc_status_description = cc_status_description
        self._cc_trans_id = cc_trans_id
        self._cc_type = cc_type
        self._echeck_account_name = echeck_account_name
        self._echeck_account_type = echeck_account_type
        self._echeck_bank_name = echeck_bank_name
        self._echeck_routing_number = echeck_routing_number
        self._echeck_type = echeck_type
        self._entity_id = entity_id
        self._extension_attributes = extension_attributes
        self._last_trans_id = last_trans_id
        self._method = method
        self._parent_id = parent_id
        self._po_number = po_number
        self._protection_eligibility = protection_eligibility
        self._quote_payment_id = quote_payment_id
        self._shipping_amount = shipping_amount
        self._shipping_captured = shipping_captured
        self._shipping_refunded = shipping_refunded

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SalesDataOrderPaymentInterface':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The sales-data-order-payment-interface of this SalesDataOrderPaymentInterface.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_status(self):
        """Gets the account_status of this SalesDataOrderPaymentInterface.

        Account status.

        :return: The account_status of this SalesDataOrderPaymentInterface.
        :rtype: str
        """
        return self._account_status

    @account_status.setter
    def account_status(self, account_status):
        """Sets the account_status of this SalesDataOrderPaymentInterface.

        Account status.

        :param account_status: The account_status of this SalesDataOrderPaymentInterface.
        :type account_status: str
        """
        if account_status is None:
            raise ValueError("Invalid value for `account_status`, must not be `None`")

        self._account_status = account_status

    @property
    def additional_data(self):
        """Gets the additional_data of this SalesDataOrderPaymentInterface.

        Additional data.

        :return: The additional_data of this SalesDataOrderPaymentInterface.
        :rtype: str
        """
        return self._additional_data

    @additional_data.setter
    def additional_data(self, additional_data):
        """Sets the additional_data of this SalesDataOrderPaymentInterface.

        Additional data.

        :param additional_data: The additional_data of this SalesDataOrderPaymentInterface.
        :type additional_data: str
        """

        self._additional_data = additional_data

    @property
    def additional_information(self):
        """Gets the additional_information of this SalesDataOrderPaymentInterface.

        Array of additional information.

        :return: The additional_information of this SalesDataOrderPaymentInterface.
        :rtype: List[str]
        """
        return self._additional_information

    @additional_information.setter
    def additional_information(self, additional_information):
        """Sets the additional_information of this SalesDataOrderPaymentInterface.

        Array of additional information.

        :param additional_information: The additional_information of this SalesDataOrderPaymentInterface.
        :type additional_information: List[str]
        """
        if additional_information is None:
            raise ValueError("Invalid value for `additional_information`, must not be `None`")

        self._additional_information = additional_information

    @property
    def address_status(self):
        """Gets the address_status of this SalesDataOrderPaymentInterface.

        Address status.

        :return: The address_status of this SalesDataOrderPaymentInterface.
        :rtype: str
        """
        return self._address_status

    @address_status.setter
    def address_status(self, address_status):
        """Sets the address_status of this SalesDataOrderPaymentInterface.

        Address status.

        :param address_status: The address_status of this SalesDataOrderPaymentInterface.
        :type address_status: str
        """

        self._address_status = address_status

    @property
    def amount_authorized(self):
        """Gets the amount_authorized of this SalesDataOrderPaymentInterface.

        Amount authorized.

        :return: The amount_authorized of this SalesDataOrderPaymentInterface.
        :rtype: float
        """
        return self._amount_authorized

    @amount_authorized.setter
    def amount_authorized(self, amount_authorized):
        """Sets the amount_authorized of this SalesDataOrderPaymentInterface.

        Amount authorized.

        :param amount_authorized: The amount_authorized of this SalesDataOrderPaymentInterface.
        :type amount_authorized: float
        """

        self._amount_authorized = amount_authorized

    @property
    def amount_canceled(self):
        """Gets the amount_canceled of this SalesDataOrderPaymentInterface.

        Amount canceled.

        :return: The amount_canceled of this SalesDataOrderPaymentInterface.
        :rtype: float
        """
        return self._amount_canceled

    @amount_canceled.setter
    def amount_canceled(self, amount_canceled):
        """Sets the amount_canceled of this SalesDataOrderPaymentInterface.

        Amount canceled.

        :param amount_canceled: The amount_canceled of this SalesDataOrderPaymentInterface.
        :type amount_canceled: float
        """

        self._amount_canceled = amount_canceled

    @property
    def amount_ordered(self):
        """Gets the amount_ordered of this SalesDataOrderPaymentInterface.

        Amount ordered.

        :return: The amount_ordered of this SalesDataOrderPaymentInterface.
        :rtype: float
        """
        return self._amount_ordered

    @amount_ordered.setter
    def amount_ordered(self, amount_ordered):
        """Sets the amount_ordered of this SalesDataOrderPaymentInterface.

        Amount ordered.

        :param amount_ordered: The amount_ordered of this SalesDataOrderPaymentInterface.
        :type amount_ordered: float
        """

        self._amount_ordered = amount_ordered

    @property
    def amount_paid(self):
        """Gets the amount_paid of this SalesDataOrderPaymentInterface.

        Amount paid.

        :return: The amount_paid of this SalesDataOrderPaymentInterface.
        :rtype: float
        """
        return self._amount_paid

    @amount_paid.setter
    def amount_paid(self, amount_paid):
        """Sets the amount_paid of this SalesDataOrderPaymentInterface.

        Amount paid.

        :param amount_paid: The amount_paid of this SalesDataOrderPaymentInterface.
        :type amount_paid: float
        """

        self._amount_paid = amount_paid

    @property
    def amount_refunded(self):
        """Gets the amount_refunded of this SalesDataOrderPaymentInterface.

        Amount refunded.

        :return: The amount_refunded of this SalesDataOrderPaymentInterface.
        :rtype: float
        """
        return self._amount_refunded

    @amount_refunded.setter
    def amount_refunded(self, amount_refunded):
        """Sets the amount_refunded of this SalesDataOrderPaymentInterface.

        Amount refunded.

        :param amount_refunded: The amount_refunded of this SalesDataOrderPaymentInterface.
        :type amount_refunded: float
        """

        self._amount_refunded = amount_refunded

    @property
    def anet_trans_method(self):
        """Gets the anet_trans_method of this SalesDataOrderPaymentInterface.

        Anet transaction method.

        :return: The anet_trans_method of this SalesDataOrderPaymentInterface.
        :rtype: str
        """
        return self._anet_trans_method

    @anet_trans_method.setter
    def anet_trans_method(self, anet_trans_method):
        """Sets the anet_trans_method of this SalesDataOrderPaymentInterface.

        Anet transaction method.

        :param anet_trans_method: The anet_trans_method of this SalesDataOrderPaymentInterface.
        :type anet_trans_method: str
        """

        self._anet_trans_method = anet_trans_method

    @property
    def base_amount_authorized(self):
        """Gets the base_amount_authorized of this SalesDataOrderPaymentInterface.

        Base amount authorized.

        :return: The base_amount_authorized of this SalesDataOrderPaymentInterface.
        :rtype: float
        """
        return self._base_amount_authorized

    @base_amount_authorized.setter
    def base_amount_authorized(self, base_amount_authorized):
        """Sets the base_amount_authorized of this SalesDataOrderPaymentInterface.

        Base amount authorized.

        :param base_amount_authorized: The base_amount_authorized of this SalesDataOrderPaymentInterface.
        :type base_amount_authorized: float
        """

        self._base_amount_authorized = base_amount_authorized

    @property
    def base_amount_canceled(self):
        """Gets the base_amount_canceled of this SalesDataOrderPaymentInterface.

        Base amount canceled.

        :return: The base_amount_canceled of this SalesDataOrderPaymentInterface.
        :rtype: float
        """
        return self._base_amount_canceled

    @base_amount_canceled.setter
    def base_amount_canceled(self, base_amount_canceled):
        """Sets the base_amount_canceled of this SalesDataOrderPaymentInterface.

        Base amount canceled.

        :param base_amount_canceled: The base_amount_canceled of this SalesDataOrderPaymentInterface.
        :type base_amount_canceled: float
        """

        self._base_amount_canceled = base_amount_canceled

    @property
    def base_amount_ordered(self):
        """Gets the base_amount_ordered of this SalesDataOrderPaymentInterface.

        Base amount ordered.

        :return: The base_amount_ordered of this SalesDataOrderPaymentInterface.
        :rtype: float
        """
        return self._base_amount_ordered

    @base_amount_ordered.setter
    def base_amount_ordered(self, base_amount_ordered):
        """Sets the base_amount_ordered of this SalesDataOrderPaymentInterface.

        Base amount ordered.

        :param base_amount_ordered: The base_amount_ordered of this SalesDataOrderPaymentInterface.
        :type base_amount_ordered: float
        """

        self._base_amount_ordered = base_amount_ordered

    @property
    def base_amount_paid(self):
        """Gets the base_amount_paid of this SalesDataOrderPaymentInterface.

        Base amount paid.

        :return: The base_amount_paid of this SalesDataOrderPaymentInterface.
        :rtype: float
        """
        return self._base_amount_paid

    @base_amount_paid.setter
    def base_amount_paid(self, base_amount_paid):
        """Sets the base_amount_paid of this SalesDataOrderPaymentInterface.

        Base amount paid.

        :param base_amount_paid: The base_amount_paid of this SalesDataOrderPaymentInterface.
        :type base_amount_paid: float
        """

        self._base_amount_paid = base_amount_paid

    @property
    def base_amount_paid_online(self):
        """Gets the base_amount_paid_online of this SalesDataOrderPaymentInterface.

        Base amount paid online.

        :return: The base_amount_paid_online of this SalesDataOrderPaymentInterface.
        :rtype: float
        """
        return self._base_amount_paid_online

    @base_amount_paid_online.setter
    def base_amount_paid_online(self, base_amount_paid_online):
        """Sets the base_amount_paid_online of this SalesDataOrderPaymentInterface.

        Base amount paid online.

        :param base_amount_paid_online: The base_amount_paid_online of this SalesDataOrderPaymentInterface.
        :type base_amount_paid_online: float
        """

        self._base_amount_paid_online = base_amount_paid_online

    @property
    def base_amount_refunded(self):
        """Gets the base_amount_refunded of this SalesDataOrderPaymentInterface.

        Base amount refunded.

        :return: The base_amount_refunded of this SalesDataOrderPaymentInterface.
        :rtype: float
        """
        return self._base_amount_refunded

    @base_amount_refunded.setter
    def base_amount_refunded(self, base_amount_refunded):
        """Sets the base_amount_refunded of this SalesDataOrderPaymentInterface.

        Base amount refunded.

        :param base_amount_refunded: The base_amount_refunded of this SalesDataOrderPaymentInterface.
        :type base_amount_refunded: float
        """

        self._base_amount_refunded = base_amount_refunded

    @property
    def base_amount_refunded_online(self):
        """Gets the base_amount_refunded_online of this SalesDataOrderPaymentInterface.

        Base amount refunded online.

        :return: The base_amount_refunded_online of this SalesDataOrderPaymentInterface.
        :rtype: float
        """
        return self._base_amount_refunded_online

    @base_amount_refunded_online.setter
    def base_amount_refunded_online(self, base_amount_refunded_online):
        """Sets the base_amount_refunded_online of this SalesDataOrderPaymentInterface.

        Base amount refunded online.

        :param base_amount_refunded_online: The base_amount_refunded_online of this SalesDataOrderPaymentInterface.
        :type base_amount_refunded_online: float
        """

        self._base_amount_refunded_online = base_amount_refunded_online

    @property
    def base_shipping_amount(self):
        """Gets the base_shipping_amount of this SalesDataOrderPaymentInterface.

        Base shipping amount.

        :return: The base_shipping_amount of this SalesDataOrderPaymentInterface.
        :rtype: float
        """
        return self._base_shipping_amount

    @base_shipping_amount.setter
    def base_shipping_amount(self, base_shipping_amount):
        """Sets the base_shipping_amount of this SalesDataOrderPaymentInterface.

        Base shipping amount.

        :param base_shipping_amount: The base_shipping_amount of this SalesDataOrderPaymentInterface.
        :type base_shipping_amount: float
        """

        self._base_shipping_amount = base_shipping_amount

    @property
    def base_shipping_captured(self):
        """Gets the base_shipping_captured of this SalesDataOrderPaymentInterface.

        Base shipping captured amount.

        :return: The base_shipping_captured of this SalesDataOrderPaymentInterface.
        :rtype: float
        """
        return self._base_shipping_captured

    @base_shipping_captured.setter
    def base_shipping_captured(self, base_shipping_captured):
        """Sets the base_shipping_captured of this SalesDataOrderPaymentInterface.

        Base shipping captured amount.

        :param base_shipping_captured: The base_shipping_captured of this SalesDataOrderPaymentInterface.
        :type base_shipping_captured: float
        """

        self._base_shipping_captured = base_shipping_captured

    @property
    def base_shipping_refunded(self):
        """Gets the base_shipping_refunded of this SalesDataOrderPaymentInterface.

        Base shipping refunded amount.

        :return: The base_shipping_refunded of this SalesDataOrderPaymentInterface.
        :rtype: float
        """
        return self._base_shipping_refunded

    @base_shipping_refunded.setter
    def base_shipping_refunded(self, base_shipping_refunded):
        """Sets the base_shipping_refunded of this SalesDataOrderPaymentInterface.

        Base shipping refunded amount.

        :param base_shipping_refunded: The base_shipping_refunded of this SalesDataOrderPaymentInterface.
        :type base_shipping_refunded: float
        """

        self._base_shipping_refunded = base_shipping_refunded

    @property
    def cc_approval(self):
        """Gets the cc_approval of this SalesDataOrderPaymentInterface.

        Credit card approval.

        :return: The cc_approval of this SalesDataOrderPaymentInterface.
        :rtype: str
        """
        return self._cc_approval

    @cc_approval.setter
    def cc_approval(self, cc_approval):
        """Sets the cc_approval of this SalesDataOrderPaymentInterface.

        Credit card approval.

        :param cc_approval: The cc_approval of this SalesDataOrderPaymentInterface.
        :type cc_approval: str
        """

        self._cc_approval = cc_approval

    @property
    def cc_avs_status(self):
        """Gets the cc_avs_status of this SalesDataOrderPaymentInterface.

        Credit card avs status.

        :return: The cc_avs_status of this SalesDataOrderPaymentInterface.
        :rtype: str
        """
        return self._cc_avs_status

    @cc_avs_status.setter
    def cc_avs_status(self, cc_avs_status):
        """Sets the cc_avs_status of this SalesDataOrderPaymentInterface.

        Credit card avs status.

        :param cc_avs_status: The cc_avs_status of this SalesDataOrderPaymentInterface.
        :type cc_avs_status: str
        """

        self._cc_avs_status = cc_avs_status

    @property
    def cc_cid_status(self):
        """Gets the cc_cid_status of this SalesDataOrderPaymentInterface.

        Credit card CID status.

        :return: The cc_cid_status of this SalesDataOrderPaymentInterface.
        :rtype: str
        """
        return self._cc_cid_status

    @cc_cid_status.setter
    def cc_cid_status(self, cc_cid_status):
        """Sets the cc_cid_status of this SalesDataOrderPaymentInterface.

        Credit card CID status.

        :param cc_cid_status: The cc_cid_status of this SalesDataOrderPaymentInterface.
        :type cc_cid_status: str
        """

        self._cc_cid_status = cc_cid_status

    @property
    def cc_debug_request_body(self):
        """Gets the cc_debug_request_body of this SalesDataOrderPaymentInterface.

        Credit card debug request body.

        :return: The cc_debug_request_body of this SalesDataOrderPaymentInterface.
        :rtype: str
        """
        return self._cc_debug_request_body

    @cc_debug_request_body.setter
    def cc_debug_request_body(self, cc_debug_request_body):
        """Sets the cc_debug_request_body of this SalesDataOrderPaymentInterface.

        Credit card debug request body.

        :param cc_debug_request_body: The cc_debug_request_body of this SalesDataOrderPaymentInterface.
        :type cc_debug_request_body: str
        """

        self._cc_debug_request_body = cc_debug_request_body

    @property
    def cc_debug_response_body(self):
        """Gets the cc_debug_response_body of this SalesDataOrderPaymentInterface.

        Credit card debug response body.

        :return: The cc_debug_response_body of this SalesDataOrderPaymentInterface.
        :rtype: str
        """
        return self._cc_debug_response_body

    @cc_debug_response_body.setter
    def cc_debug_response_body(self, cc_debug_response_body):
        """Sets the cc_debug_response_body of this SalesDataOrderPaymentInterface.

        Credit card debug response body.

        :param cc_debug_response_body: The cc_debug_response_body of this SalesDataOrderPaymentInterface.
        :type cc_debug_response_body: str
        """

        self._cc_debug_response_body = cc_debug_response_body

    @property
    def cc_debug_response_serialized(self):
        """Gets the cc_debug_response_serialized of this SalesDataOrderPaymentInterface.

        Credit card debug response serialized.

        :return: The cc_debug_response_serialized of this SalesDataOrderPaymentInterface.
        :rtype: str
        """
        return self._cc_debug_response_serialized

    @cc_debug_response_serialized.setter
    def cc_debug_response_serialized(self, cc_debug_response_serialized):
        """Sets the cc_debug_response_serialized of this SalesDataOrderPaymentInterface.

        Credit card debug response serialized.

        :param cc_debug_response_serialized: The cc_debug_response_serialized of this SalesDataOrderPaymentInterface.
        :type cc_debug_response_serialized: str
        """

        self._cc_debug_response_serialized = cc_debug_response_serialized

    @property
    def cc_exp_month(self):
        """Gets the cc_exp_month of this SalesDataOrderPaymentInterface.

        Credit card expiration month.

        :return: The cc_exp_month of this SalesDataOrderPaymentInterface.
        :rtype: str
        """
        return self._cc_exp_month

    @cc_exp_month.setter
    def cc_exp_month(self, cc_exp_month):
        """Sets the cc_exp_month of this SalesDataOrderPaymentInterface.

        Credit card expiration month.

        :param cc_exp_month: The cc_exp_month of this SalesDataOrderPaymentInterface.
        :type cc_exp_month: str
        """

        self._cc_exp_month = cc_exp_month

    @property
    def cc_exp_year(self):
        """Gets the cc_exp_year of this SalesDataOrderPaymentInterface.

        Credit card expiration year.

        :return: The cc_exp_year of this SalesDataOrderPaymentInterface.
        :rtype: str
        """
        return self._cc_exp_year

    @cc_exp_year.setter
    def cc_exp_year(self, cc_exp_year):
        """Sets the cc_exp_year of this SalesDataOrderPaymentInterface.

        Credit card expiration year.

        :param cc_exp_year: The cc_exp_year of this SalesDataOrderPaymentInterface.
        :type cc_exp_year: str
        """

        self._cc_exp_year = cc_exp_year

    @property
    def cc_last4(self):
        """Gets the cc_last4 of this SalesDataOrderPaymentInterface.

        Last four digits of the credit card.

        :return: The cc_last4 of this SalesDataOrderPaymentInterface.
        :rtype: str
        """
        return self._cc_last4

    @cc_last4.setter
    def cc_last4(self, cc_last4):
        """Sets the cc_last4 of this SalesDataOrderPaymentInterface.

        Last four digits of the credit card.

        :param cc_last4: The cc_last4 of this SalesDataOrderPaymentInterface.
        :type cc_last4: str
        """
        if cc_last4 is None:
            raise ValueError("Invalid value for `cc_last4`, must not be `None`")

        self._cc_last4 = cc_last4

    @property
    def cc_number_enc(self):
        """Gets the cc_number_enc of this SalesDataOrderPaymentInterface.

        Encrypted credit card number.

        :return: The cc_number_enc of this SalesDataOrderPaymentInterface.
        :rtype: str
        """
        return self._cc_number_enc

    @cc_number_enc.setter
    def cc_number_enc(self, cc_number_enc):
        """Sets the cc_number_enc of this SalesDataOrderPaymentInterface.

        Encrypted credit card number.

        :param cc_number_enc: The cc_number_enc of this SalesDataOrderPaymentInterface.
        :type cc_number_enc: str
        """

        self._cc_number_enc = cc_number_enc

    @property
    def cc_owner(self):
        """Gets the cc_owner of this SalesDataOrderPaymentInterface.

        Credit card number.

        :return: The cc_owner of this SalesDataOrderPaymentInterface.
        :rtype: str
        """
        return self._cc_owner

    @cc_owner.setter
    def cc_owner(self, cc_owner):
        """Sets the cc_owner of this SalesDataOrderPaymentInterface.

        Credit card number.

        :param cc_owner: The cc_owner of this SalesDataOrderPaymentInterface.
        :type cc_owner: str
        """

        self._cc_owner = cc_owner

    @property
    def cc_secure_verify(self):
        """Gets the cc_secure_verify of this SalesDataOrderPaymentInterface.

        Credit card secure verify.

        :return: The cc_secure_verify of this SalesDataOrderPaymentInterface.
        :rtype: str
        """
        return self._cc_secure_verify

    @cc_secure_verify.setter
    def cc_secure_verify(self, cc_secure_verify):
        """Sets the cc_secure_verify of this SalesDataOrderPaymentInterface.

        Credit card secure verify.

        :param cc_secure_verify: The cc_secure_verify of this SalesDataOrderPaymentInterface.
        :type cc_secure_verify: str
        """

        self._cc_secure_verify = cc_secure_verify

    @property
    def cc_ss_issue(self):
        """Gets the cc_ss_issue of this SalesDataOrderPaymentInterface.

        Credit card SS issue.

        :return: The cc_ss_issue of this SalesDataOrderPaymentInterface.
        :rtype: str
        """
        return self._cc_ss_issue

    @cc_ss_issue.setter
    def cc_ss_issue(self, cc_ss_issue):
        """Sets the cc_ss_issue of this SalesDataOrderPaymentInterface.

        Credit card SS issue.

        :param cc_ss_issue: The cc_ss_issue of this SalesDataOrderPaymentInterface.
        :type cc_ss_issue: str
        """

        self._cc_ss_issue = cc_ss_issue

    @property
    def cc_ss_start_month(self):
        """Gets the cc_ss_start_month of this SalesDataOrderPaymentInterface.

        Credit card SS start month.

        :return: The cc_ss_start_month of this SalesDataOrderPaymentInterface.
        :rtype: str
        """
        return self._cc_ss_start_month

    @cc_ss_start_month.setter
    def cc_ss_start_month(self, cc_ss_start_month):
        """Sets the cc_ss_start_month of this SalesDataOrderPaymentInterface.

        Credit card SS start month.

        :param cc_ss_start_month: The cc_ss_start_month of this SalesDataOrderPaymentInterface.
        :type cc_ss_start_month: str
        """

        self._cc_ss_start_month = cc_ss_start_month

    @property
    def cc_ss_start_year(self):
        """Gets the cc_ss_start_year of this SalesDataOrderPaymentInterface.

        Credit card SS start year.

        :return: The cc_ss_start_year of this SalesDataOrderPaymentInterface.
        :rtype: str
        """
        return self._cc_ss_start_year

    @cc_ss_start_year.setter
    def cc_ss_start_year(self, cc_ss_start_year):
        """Sets the cc_ss_start_year of this SalesDataOrderPaymentInterface.

        Credit card SS start year.

        :param cc_ss_start_year: The cc_ss_start_year of this SalesDataOrderPaymentInterface.
        :type cc_ss_start_year: str
        """

        self._cc_ss_start_year = cc_ss_start_year

    @property
    def cc_status(self):
        """Gets the cc_status of this SalesDataOrderPaymentInterface.

        Credit card status.

        :return: The cc_status of this SalesDataOrderPaymentInterface.
        :rtype: str
        """
        return self._cc_status

    @cc_status.setter
    def cc_status(self, cc_status):
        """Sets the cc_status of this SalesDataOrderPaymentInterface.

        Credit card status.

        :param cc_status: The cc_status of this SalesDataOrderPaymentInterface.
        :type cc_status: str
        """

        self._cc_status = cc_status

    @property
    def cc_status_description(self):
        """Gets the cc_status_description of this SalesDataOrderPaymentInterface.

        Credit card status description.

        :return: The cc_status_description of this SalesDataOrderPaymentInterface.
        :rtype: str
        """
        return self._cc_status_description

    @cc_status_description.setter
    def cc_status_description(self, cc_status_description):
        """Sets the cc_status_description of this SalesDataOrderPaymentInterface.

        Credit card status description.

        :param cc_status_description: The cc_status_description of this SalesDataOrderPaymentInterface.
        :type cc_status_description: str
        """

        self._cc_status_description = cc_status_description

    @property
    def cc_trans_id(self):
        """Gets the cc_trans_id of this SalesDataOrderPaymentInterface.

        Credit card transaction ID.

        :return: The cc_trans_id of this SalesDataOrderPaymentInterface.
        :rtype: str
        """
        return self._cc_trans_id

    @cc_trans_id.setter
    def cc_trans_id(self, cc_trans_id):
        """Sets the cc_trans_id of this SalesDataOrderPaymentInterface.

        Credit card transaction ID.

        :param cc_trans_id: The cc_trans_id of this SalesDataOrderPaymentInterface.
        :type cc_trans_id: str
        """

        self._cc_trans_id = cc_trans_id

    @property
    def cc_type(self):
        """Gets the cc_type of this SalesDataOrderPaymentInterface.

        Credit card type.

        :return: The cc_type of this SalesDataOrderPaymentInterface.
        :rtype: str
        """
        return self._cc_type

    @cc_type.setter
    def cc_type(self, cc_type):
        """Sets the cc_type of this SalesDataOrderPaymentInterface.

        Credit card type.

        :param cc_type: The cc_type of this SalesDataOrderPaymentInterface.
        :type cc_type: str
        """

        self._cc_type = cc_type

    @property
    def echeck_account_name(self):
        """Gets the echeck_account_name of this SalesDataOrderPaymentInterface.

        eCheck account name.

        :return: The echeck_account_name of this SalesDataOrderPaymentInterface.
        :rtype: str
        """
        return self._echeck_account_name

    @echeck_account_name.setter
    def echeck_account_name(self, echeck_account_name):
        """Sets the echeck_account_name of this SalesDataOrderPaymentInterface.

        eCheck account name.

        :param echeck_account_name: The echeck_account_name of this SalesDataOrderPaymentInterface.
        :type echeck_account_name: str
        """

        self._echeck_account_name = echeck_account_name

    @property
    def echeck_account_type(self):
        """Gets the echeck_account_type of this SalesDataOrderPaymentInterface.

        eCheck account type.

        :return: The echeck_account_type of this SalesDataOrderPaymentInterface.
        :rtype: str
        """
        return self._echeck_account_type

    @echeck_account_type.setter
    def echeck_account_type(self, echeck_account_type):
        """Sets the echeck_account_type of this SalesDataOrderPaymentInterface.

        eCheck account type.

        :param echeck_account_type: The echeck_account_type of this SalesDataOrderPaymentInterface.
        :type echeck_account_type: str
        """

        self._echeck_account_type = echeck_account_type

    @property
    def echeck_bank_name(self):
        """Gets the echeck_bank_name of this SalesDataOrderPaymentInterface.

        eCheck bank name.

        :return: The echeck_bank_name of this SalesDataOrderPaymentInterface.
        :rtype: str
        """
        return self._echeck_bank_name

    @echeck_bank_name.setter
    def echeck_bank_name(self, echeck_bank_name):
        """Sets the echeck_bank_name of this SalesDataOrderPaymentInterface.

        eCheck bank name.

        :param echeck_bank_name: The echeck_bank_name of this SalesDataOrderPaymentInterface.
        :type echeck_bank_name: str
        """

        self._echeck_bank_name = echeck_bank_name

    @property
    def echeck_routing_number(self):
        """Gets the echeck_routing_number of this SalesDataOrderPaymentInterface.

        eCheck routing number.

        :return: The echeck_routing_number of this SalesDataOrderPaymentInterface.
        :rtype: str
        """
        return self._echeck_routing_number

    @echeck_routing_number.setter
    def echeck_routing_number(self, echeck_routing_number):
        """Sets the echeck_routing_number of this SalesDataOrderPaymentInterface.

        eCheck routing number.

        :param echeck_routing_number: The echeck_routing_number of this SalesDataOrderPaymentInterface.
        :type echeck_routing_number: str
        """

        self._echeck_routing_number = echeck_routing_number

    @property
    def echeck_type(self):
        """Gets the echeck_type of this SalesDataOrderPaymentInterface.

        eCheck type.

        :return: The echeck_type of this SalesDataOrderPaymentInterface.
        :rtype: str
        """
        return self._echeck_type

    @echeck_type.setter
    def echeck_type(self, echeck_type):
        """Sets the echeck_type of this SalesDataOrderPaymentInterface.

        eCheck type.

        :param echeck_type: The echeck_type of this SalesDataOrderPaymentInterface.
        :type echeck_type: str
        """

        self._echeck_type = echeck_type

    @property
    def entity_id(self):
        """Gets the entity_id of this SalesDataOrderPaymentInterface.

        Entity ID.

        :return: The entity_id of this SalesDataOrderPaymentInterface.
        :rtype: int
        """
        return self._entity_id

    @entity_id.setter
    def entity_id(self, entity_id):
        """Sets the entity_id of this SalesDataOrderPaymentInterface.

        Entity ID.

        :param entity_id: The entity_id of this SalesDataOrderPaymentInterface.
        :type entity_id: int
        """

        self._entity_id = entity_id

    @property
    def extension_attributes(self):
        """Gets the extension_attributes of this SalesDataOrderPaymentInterface.


        :return: The extension_attributes of this SalesDataOrderPaymentInterface.
        :rtype: SalesDataOrderPaymentExtensionInterface
        """
        return self._extension_attributes

    @extension_attributes.setter
    def extension_attributes(self, extension_attributes):
        """Sets the extension_attributes of this SalesDataOrderPaymentInterface.


        :param extension_attributes: The extension_attributes of this SalesDataOrderPaymentInterface.
        :type extension_attributes: SalesDataOrderPaymentExtensionInterface
        """

        self._extension_attributes = extension_attributes

    @property
    def last_trans_id(self):
        """Gets the last_trans_id of this SalesDataOrderPaymentInterface.

        Last transaction ID.

        :return: The last_trans_id of this SalesDataOrderPaymentInterface.
        :rtype: str
        """
        return self._last_trans_id

    @last_trans_id.setter
    def last_trans_id(self, last_trans_id):
        """Sets the last_trans_id of this SalesDataOrderPaymentInterface.

        Last transaction ID.

        :param last_trans_id: The last_trans_id of this SalesDataOrderPaymentInterface.
        :type last_trans_id: str
        """

        self._last_trans_id = last_trans_id

    @property
    def method(self):
        """Gets the method of this SalesDataOrderPaymentInterface.

        Method.

        :return: The method of this SalesDataOrderPaymentInterface.
        :rtype: str
        """
        return self._method

    @method.setter
    def method(self, method):
        """Sets the method of this SalesDataOrderPaymentInterface.

        Method.

        :param method: The method of this SalesDataOrderPaymentInterface.
        :type method: str
        """
        if method is None:
            raise ValueError("Invalid value for `method`, must not be `None`")

        self._method = method

    @property
    def parent_id(self):
        """Gets the parent_id of this SalesDataOrderPaymentInterface.

        Parent ID.

        :return: The parent_id of this SalesDataOrderPaymentInterface.
        :rtype: int
        """
        return self._parent_id

    @parent_id.setter
    def parent_id(self, parent_id):
        """Sets the parent_id of this SalesDataOrderPaymentInterface.

        Parent ID.

        :param parent_id: The parent_id of this SalesDataOrderPaymentInterface.
        :type parent_id: int
        """

        self._parent_id = parent_id

    @property
    def po_number(self):
        """Gets the po_number of this SalesDataOrderPaymentInterface.

        PO number.

        :return: The po_number of this SalesDataOrderPaymentInterface.
        :rtype: str
        """
        return self._po_number

    @po_number.setter
    def po_number(self, po_number):
        """Sets the po_number of this SalesDataOrderPaymentInterface.

        PO number.

        :param po_number: The po_number of this SalesDataOrderPaymentInterface.
        :type po_number: str
        """

        self._po_number = po_number

    @property
    def protection_eligibility(self):
        """Gets the protection_eligibility of this SalesDataOrderPaymentInterface.

        Protection eligibility.

        :return: The protection_eligibility of this SalesDataOrderPaymentInterface.
        :rtype: str
        """
        return self._protection_eligibility

    @protection_eligibility.setter
    def protection_eligibility(self, protection_eligibility):
        """Sets the protection_eligibility of this SalesDataOrderPaymentInterface.

        Protection eligibility.

        :param protection_eligibility: The protection_eligibility of this SalesDataOrderPaymentInterface.
        :type protection_eligibility: str
        """

        self._protection_eligibility = protection_eligibility

    @property
    def quote_payment_id(self):
        """Gets the quote_payment_id of this SalesDataOrderPaymentInterface.

        Quote payment ID.

        :return: The quote_payment_id of this SalesDataOrderPaymentInterface.
        :rtype: int
        """
        return self._quote_payment_id

    @quote_payment_id.setter
    def quote_payment_id(self, quote_payment_id):
        """Sets the quote_payment_id of this SalesDataOrderPaymentInterface.

        Quote payment ID.

        :param quote_payment_id: The quote_payment_id of this SalesDataOrderPaymentInterface.
        :type quote_payment_id: int
        """

        self._quote_payment_id = quote_payment_id

    @property
    def shipping_amount(self):
        """Gets the shipping_amount of this SalesDataOrderPaymentInterface.

        Shipping amount.

        :return: The shipping_amount of this SalesDataOrderPaymentInterface.
        :rtype: float
        """
        return self._shipping_amount

    @shipping_amount.setter
    def shipping_amount(self, shipping_amount):
        """Sets the shipping_amount of this SalesDataOrderPaymentInterface.

        Shipping amount.

        :param shipping_amount: The shipping_amount of this SalesDataOrderPaymentInterface.
        :type shipping_amount: float
        """

        self._shipping_amount = shipping_amount

    @property
    def shipping_captured(self):
        """Gets the shipping_captured of this SalesDataOrderPaymentInterface.

        Shipping captured.

        :return: The shipping_captured of this SalesDataOrderPaymentInterface.
        :rtype: float
        """
        return self._shipping_captured

    @shipping_captured.setter
    def shipping_captured(self, shipping_captured):
        """Sets the shipping_captured of this SalesDataOrderPaymentInterface.

        Shipping captured.

        :param shipping_captured: The shipping_captured of this SalesDataOrderPaymentInterface.
        :type shipping_captured: float
        """

        self._shipping_captured = shipping_captured

    @property
    def shipping_refunded(self):
        """Gets the shipping_refunded of this SalesDataOrderPaymentInterface.

        Shipping refunded.

        :return: The shipping_refunded of this SalesDataOrderPaymentInterface.
        :rtype: float
        """
        return self._shipping_refunded

    @shipping_refunded.setter
    def shipping_refunded(self, shipping_refunded):
        """Sets the shipping_refunded of this SalesDataOrderPaymentInterface.

        Shipping refunded.

        :param shipping_refunded: The shipping_refunded of this SalesDataOrderPaymentInterface.
        :type shipping_refunded: float
        """

        self._shipping_refunded = shipping_refunded
