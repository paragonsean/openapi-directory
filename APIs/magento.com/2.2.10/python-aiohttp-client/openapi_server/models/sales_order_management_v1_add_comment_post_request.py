# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.sales_data_order_status_history_interface import SalesDataOrderStatusHistoryInterface
from openapi_server import util


class SalesOrderManagementV1AddCommentPostRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, status_history: SalesDataOrderStatusHistoryInterface=None):
        """SalesOrderManagementV1AddCommentPostRequest - a model defined in OpenAPI

        :param status_history: The status_history of this SalesOrderManagementV1AddCommentPostRequest.
        """
        self.openapi_types = {
            'status_history': SalesDataOrderStatusHistoryInterface
        }

        self.attribute_map = {
            'status_history': 'statusHistory'
        }

        self._status_history = status_history

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SalesOrderManagementV1AddCommentPostRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The salesOrderManagementV1AddCommentPost_request of this SalesOrderManagementV1AddCommentPostRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def status_history(self):
        """Gets the status_history of this SalesOrderManagementV1AddCommentPostRequest.


        :return: The status_history of this SalesOrderManagementV1AddCommentPostRequest.
        :rtype: SalesDataOrderStatusHistoryInterface
        """
        return self._status_history

    @status_history.setter
    def status_history(self, status_history):
        """Sets the status_history of this SalesOrderManagementV1AddCommentPostRequest.


        :param status_history: The status_history of this SalesOrderManagementV1AddCommentPostRequest.
        :type status_history: SalesDataOrderStatusHistoryInterface
        """
        if status_history is None:
            raise ValueError("Invalid value for `status_history`, must not be `None`")

        self._status_history = status_history
