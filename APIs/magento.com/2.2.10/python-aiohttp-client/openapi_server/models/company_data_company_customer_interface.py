# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CompanyDataCompanyCustomerInterface(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, company_id: int=None, customer_id: int=None, extension_attributes: object=None, job_title: str=None, status: int=None, telephone: str=None):
        """CompanyDataCompanyCustomerInterface - a model defined in OpenAPI

        :param company_id: The company_id of this CompanyDataCompanyCustomerInterface.
        :param customer_id: The customer_id of this CompanyDataCompanyCustomerInterface.
        :param extension_attributes: The extension_attributes of this CompanyDataCompanyCustomerInterface.
        :param job_title: The job_title of this CompanyDataCompanyCustomerInterface.
        :param status: The status of this CompanyDataCompanyCustomerInterface.
        :param telephone: The telephone of this CompanyDataCompanyCustomerInterface.
        """
        self.openapi_types = {
            'company_id': int,
            'customer_id': int,
            'extension_attributes': object,
            'job_title': str,
            'status': int,
            'telephone': str
        }

        self.attribute_map = {
            'company_id': 'company_id',
            'customer_id': 'customer_id',
            'extension_attributes': 'extension_attributes',
            'job_title': 'job_title',
            'status': 'status',
            'telephone': 'telephone'
        }

        self._company_id = company_id
        self._customer_id = customer_id
        self._extension_attributes = extension_attributes
        self._job_title = job_title
        self._status = status
        self._telephone = telephone

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CompanyDataCompanyCustomerInterface':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The company-data-company-customer-interface of this CompanyDataCompanyCustomerInterface.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def company_id(self):
        """Gets the company_id of this CompanyDataCompanyCustomerInterface.

        Company ID.

        :return: The company_id of this CompanyDataCompanyCustomerInterface.
        :rtype: int
        """
        return self._company_id

    @company_id.setter
    def company_id(self, company_id):
        """Sets the company_id of this CompanyDataCompanyCustomerInterface.

        Company ID.

        :param company_id: The company_id of this CompanyDataCompanyCustomerInterface.
        :type company_id: int
        """

        self._company_id = company_id

    @property
    def customer_id(self):
        """Gets the customer_id of this CompanyDataCompanyCustomerInterface.

        Customer ID.

        :return: The customer_id of this CompanyDataCompanyCustomerInterface.
        :rtype: int
        """
        return self._customer_id

    @customer_id.setter
    def customer_id(self, customer_id):
        """Sets the customer_id of this CompanyDataCompanyCustomerInterface.

        Customer ID.

        :param customer_id: The customer_id of this CompanyDataCompanyCustomerInterface.
        :type customer_id: int
        """

        self._customer_id = customer_id

    @property
    def extension_attributes(self):
        """Gets the extension_attributes of this CompanyDataCompanyCustomerInterface.

        ExtensionInterface class for @see \\Magento\\Company\\Api\\Data\\CompanyCustomerInterface

        :return: The extension_attributes of this CompanyDataCompanyCustomerInterface.
        :rtype: object
        """
        return self._extension_attributes

    @extension_attributes.setter
    def extension_attributes(self, extension_attributes):
        """Sets the extension_attributes of this CompanyDataCompanyCustomerInterface.

        ExtensionInterface class for @see \\Magento\\Company\\Api\\Data\\CompanyCustomerInterface

        :param extension_attributes: The extension_attributes of this CompanyDataCompanyCustomerInterface.
        :type extension_attributes: object
        """

        self._extension_attributes = extension_attributes

    @property
    def job_title(self):
        """Gets the job_title of this CompanyDataCompanyCustomerInterface.

        Get job title.

        :return: The job_title of this CompanyDataCompanyCustomerInterface.
        :rtype: str
        """
        return self._job_title

    @job_title.setter
    def job_title(self, job_title):
        """Sets the job_title of this CompanyDataCompanyCustomerInterface.

        Get job title.

        :param job_title: The job_title of this CompanyDataCompanyCustomerInterface.
        :type job_title: str
        """

        self._job_title = job_title

    @property
    def status(self):
        """Gets the status of this CompanyDataCompanyCustomerInterface.

        Customer status.

        :return: The status of this CompanyDataCompanyCustomerInterface.
        :rtype: int
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this CompanyDataCompanyCustomerInterface.

        Customer status.

        :param status: The status of this CompanyDataCompanyCustomerInterface.
        :type status: int
        """

        self._status = status

    @property
    def telephone(self):
        """Gets the telephone of this CompanyDataCompanyCustomerInterface.

        Get telephone.

        :return: The telephone of this CompanyDataCompanyCustomerInterface.
        :rtype: str
        """
        return self._telephone

    @telephone.setter
    def telephone(self, telephone):
        """Sets the telephone of this CompanyDataCompanyCustomerInterface.

        Get telephone.

        :param telephone: The telephone of this CompanyDataCompanyCustomerInterface.
        :type telephone: str
        """

        self._telephone = telephone
