# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class NegotiableQuoteNegotiableQuoteManagementV1DeclinePostRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, quote_id: int=None, reason: str=None):
        """NegotiableQuoteNegotiableQuoteManagementV1DeclinePostRequest - a model defined in OpenAPI

        :param quote_id: The quote_id of this NegotiableQuoteNegotiableQuoteManagementV1DeclinePostRequest.
        :param reason: The reason of this NegotiableQuoteNegotiableQuoteManagementV1DeclinePostRequest.
        """
        self.openapi_types = {
            'quote_id': int,
            'reason': str
        }

        self.attribute_map = {
            'quote_id': 'quoteId',
            'reason': 'reason'
        }

        self._quote_id = quote_id
        self._reason = reason

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NegotiableQuoteNegotiableQuoteManagementV1DeclinePostRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The negotiableQuoteNegotiableQuoteManagementV1DeclinePost_request of this NegotiableQuoteNegotiableQuoteManagementV1DeclinePostRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def quote_id(self):
        """Gets the quote_id of this NegotiableQuoteNegotiableQuoteManagementV1DeclinePostRequest.


        :return: The quote_id of this NegotiableQuoteNegotiableQuoteManagementV1DeclinePostRequest.
        :rtype: int
        """
        return self._quote_id

    @quote_id.setter
    def quote_id(self, quote_id):
        """Sets the quote_id of this NegotiableQuoteNegotiableQuoteManagementV1DeclinePostRequest.


        :param quote_id: The quote_id of this NegotiableQuoteNegotiableQuoteManagementV1DeclinePostRequest.
        :type quote_id: int
        """
        if quote_id is None:
            raise ValueError("Invalid value for `quote_id`, must not be `None`")

        self._quote_id = quote_id

    @property
    def reason(self):
        """Gets the reason of this NegotiableQuoteNegotiableQuoteManagementV1DeclinePostRequest.


        :return: The reason of this NegotiableQuoteNegotiableQuoteManagementV1DeclinePostRequest.
        :rtype: str
        """
        return self._reason

    @reason.setter
    def reason(self, reason):
        """Sets the reason of this NegotiableQuoteNegotiableQuoteManagementV1DeclinePostRequest.


        :param reason: The reason of this NegotiableQuoteNegotiableQuoteManagementV1DeclinePostRequest.
        :type reason: str
        """
        if reason is None:
            raise ValueError("Invalid value for `reason`, must not be `None`")

        self._reason = reason
