# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SalesDataCreditmemoItemExtensionInterface(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, invoice_text_codes: List[str]=None, tax_codes: List[str]=None, vertex_tax_codes: List[str]=None):
        """SalesDataCreditmemoItemExtensionInterface - a model defined in OpenAPI

        :param invoice_text_codes: The invoice_text_codes of this SalesDataCreditmemoItemExtensionInterface.
        :param tax_codes: The tax_codes of this SalesDataCreditmemoItemExtensionInterface.
        :param vertex_tax_codes: The vertex_tax_codes of this SalesDataCreditmemoItemExtensionInterface.
        """
        self.openapi_types = {
            'invoice_text_codes': List[str],
            'tax_codes': List[str],
            'vertex_tax_codes': List[str]
        }

        self.attribute_map = {
            'invoice_text_codes': 'invoice_text_codes',
            'tax_codes': 'tax_codes',
            'vertex_tax_codes': 'vertex_tax_codes'
        }

        self._invoice_text_codes = invoice_text_codes
        self._tax_codes = tax_codes
        self._vertex_tax_codes = vertex_tax_codes

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SalesDataCreditmemoItemExtensionInterface':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The sales-data-creditmemo-item-extension-interface of this SalesDataCreditmemoItemExtensionInterface.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def invoice_text_codes(self):
        """Gets the invoice_text_codes of this SalesDataCreditmemoItemExtensionInterface.


        :return: The invoice_text_codes of this SalesDataCreditmemoItemExtensionInterface.
        :rtype: List[str]
        """
        return self._invoice_text_codes

    @invoice_text_codes.setter
    def invoice_text_codes(self, invoice_text_codes):
        """Sets the invoice_text_codes of this SalesDataCreditmemoItemExtensionInterface.


        :param invoice_text_codes: The invoice_text_codes of this SalesDataCreditmemoItemExtensionInterface.
        :type invoice_text_codes: List[str]
        """

        self._invoice_text_codes = invoice_text_codes

    @property
    def tax_codes(self):
        """Gets the tax_codes of this SalesDataCreditmemoItemExtensionInterface.


        :return: The tax_codes of this SalesDataCreditmemoItemExtensionInterface.
        :rtype: List[str]
        """
        return self._tax_codes

    @tax_codes.setter
    def tax_codes(self, tax_codes):
        """Sets the tax_codes of this SalesDataCreditmemoItemExtensionInterface.


        :param tax_codes: The tax_codes of this SalesDataCreditmemoItemExtensionInterface.
        :type tax_codes: List[str]
        """

        self._tax_codes = tax_codes

    @property
    def vertex_tax_codes(self):
        """Gets the vertex_tax_codes of this SalesDataCreditmemoItemExtensionInterface.


        :return: The vertex_tax_codes of this SalesDataCreditmemoItemExtensionInterface.
        :rtype: List[str]
        """
        return self._vertex_tax_codes

    @vertex_tax_codes.setter
    def vertex_tax_codes(self, vertex_tax_codes):
        """Sets the vertex_tax_codes of this SalesDataCreditmemoItemExtensionInterface.


        :param vertex_tax_codes: The vertex_tax_codes of this SalesDataCreditmemoItemExtensionInterface.
        :type vertex_tax_codes: List[str]
        """

        self._vertex_tax_codes = vertex_tax_codes
