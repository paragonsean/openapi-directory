# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.customer_data_customer_interface import CustomerDataCustomerInterface
from openapi_server import util


class CustomerAccountManagementV1CreateAccountPostRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, customer: CustomerDataCustomerInterface=None, password: str=None, redirect_url: str=None):
        """CustomerAccountManagementV1CreateAccountPostRequest - a model defined in OpenAPI

        :param customer: The customer of this CustomerAccountManagementV1CreateAccountPostRequest.
        :param password: The password of this CustomerAccountManagementV1CreateAccountPostRequest.
        :param redirect_url: The redirect_url of this CustomerAccountManagementV1CreateAccountPostRequest.
        """
        self.openapi_types = {
            'customer': CustomerDataCustomerInterface,
            'password': str,
            'redirect_url': str
        }

        self.attribute_map = {
            'customer': 'customer',
            'password': 'password',
            'redirect_url': 'redirectUrl'
        }

        self._customer = customer
        self._password = password
        self._redirect_url = redirect_url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CustomerAccountManagementV1CreateAccountPostRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The customerAccountManagementV1CreateAccountPost_request of this CustomerAccountManagementV1CreateAccountPostRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def customer(self):
        """Gets the customer of this CustomerAccountManagementV1CreateAccountPostRequest.


        :return: The customer of this CustomerAccountManagementV1CreateAccountPostRequest.
        :rtype: CustomerDataCustomerInterface
        """
        return self._customer

    @customer.setter
    def customer(self, customer):
        """Sets the customer of this CustomerAccountManagementV1CreateAccountPostRequest.


        :param customer: The customer of this CustomerAccountManagementV1CreateAccountPostRequest.
        :type customer: CustomerDataCustomerInterface
        """
        if customer is None:
            raise ValueError("Invalid value for `customer`, must not be `None`")

        self._customer = customer

    @property
    def password(self):
        """Gets the password of this CustomerAccountManagementV1CreateAccountPostRequest.


        :return: The password of this CustomerAccountManagementV1CreateAccountPostRequest.
        :rtype: str
        """
        return self._password

    @password.setter
    def password(self, password):
        """Sets the password of this CustomerAccountManagementV1CreateAccountPostRequest.


        :param password: The password of this CustomerAccountManagementV1CreateAccountPostRequest.
        :type password: str
        """

        self._password = password

    @property
    def redirect_url(self):
        """Gets the redirect_url of this CustomerAccountManagementV1CreateAccountPostRequest.


        :return: The redirect_url of this CustomerAccountManagementV1CreateAccountPostRequest.
        :rtype: str
        """
        return self._redirect_url

    @redirect_url.setter
    def redirect_url(self, redirect_url):
        """Sets the redirect_url of this CustomerAccountManagementV1CreateAccountPostRequest.


        :param redirect_url: The redirect_url of this CustomerAccountManagementV1CreateAccountPostRequest.
        :type redirect_url: str
        """

        self._redirect_url = redirect_url
