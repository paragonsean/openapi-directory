# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SalesRuleDataRuleLabelInterface(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, extension_attributes: object=None, store_id: int=None, store_label: str=None):
        """SalesRuleDataRuleLabelInterface - a model defined in OpenAPI

        :param extension_attributes: The extension_attributes of this SalesRuleDataRuleLabelInterface.
        :param store_id: The store_id of this SalesRuleDataRuleLabelInterface.
        :param store_label: The store_label of this SalesRuleDataRuleLabelInterface.
        """
        self.openapi_types = {
            'extension_attributes': object,
            'store_id': int,
            'store_label': str
        }

        self.attribute_map = {
            'extension_attributes': 'extension_attributes',
            'store_id': 'store_id',
            'store_label': 'store_label'
        }

        self._extension_attributes = extension_attributes
        self._store_id = store_id
        self._store_label = store_label

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SalesRuleDataRuleLabelInterface':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The sales-rule-data-rule-label-interface of this SalesRuleDataRuleLabelInterface.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def extension_attributes(self):
        """Gets the extension_attributes of this SalesRuleDataRuleLabelInterface.

        ExtensionInterface class for @see \\Magento\\SalesRule\\Api\\Data\\RuleLabelInterface

        :return: The extension_attributes of this SalesRuleDataRuleLabelInterface.
        :rtype: object
        """
        return self._extension_attributes

    @extension_attributes.setter
    def extension_attributes(self, extension_attributes):
        """Sets the extension_attributes of this SalesRuleDataRuleLabelInterface.

        ExtensionInterface class for @see \\Magento\\SalesRule\\Api\\Data\\RuleLabelInterface

        :param extension_attributes: The extension_attributes of this SalesRuleDataRuleLabelInterface.
        :type extension_attributes: object
        """

        self._extension_attributes = extension_attributes

    @property
    def store_id(self):
        """Gets the store_id of this SalesRuleDataRuleLabelInterface.

        StoreId

        :return: The store_id of this SalesRuleDataRuleLabelInterface.
        :rtype: int
        """
        return self._store_id

    @store_id.setter
    def store_id(self, store_id):
        """Sets the store_id of this SalesRuleDataRuleLabelInterface.

        StoreId

        :param store_id: The store_id of this SalesRuleDataRuleLabelInterface.
        :type store_id: int
        """
        if store_id is None:
            raise ValueError("Invalid value for `store_id`, must not be `None`")

        self._store_id = store_id

    @property
    def store_label(self):
        """Gets the store_label of this SalesRuleDataRuleLabelInterface.

        The label for the store

        :return: The store_label of this SalesRuleDataRuleLabelInterface.
        :rtype: str
        """
        return self._store_label

    @store_label.setter
    def store_label(self, store_label):
        """Sets the store_label of this SalesRuleDataRuleLabelInterface.

        The label for the store

        :param store_label: The store_label of this SalesRuleDataRuleLabelInterface.
        :type store_label: str
        """
        if store_label is None:
            raise ValueError("Invalid value for `store_label`, must not be `None`")

        self._store_label = store_label
