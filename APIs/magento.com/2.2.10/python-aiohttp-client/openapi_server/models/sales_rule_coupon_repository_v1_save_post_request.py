# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.sales_rule_data_coupon_interface import SalesRuleDataCouponInterface
from openapi_server import util


class SalesRuleCouponRepositoryV1SavePostRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, coupon: SalesRuleDataCouponInterface=None):
        """SalesRuleCouponRepositoryV1SavePostRequest - a model defined in OpenAPI

        :param coupon: The coupon of this SalesRuleCouponRepositoryV1SavePostRequest.
        """
        self.openapi_types = {
            'coupon': SalesRuleDataCouponInterface
        }

        self.attribute_map = {
            'coupon': 'coupon'
        }

        self._coupon = coupon

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SalesRuleCouponRepositoryV1SavePostRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The salesRuleCouponRepositoryV1SavePost_request of this SalesRuleCouponRepositoryV1SavePostRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def coupon(self):
        """Gets the coupon of this SalesRuleCouponRepositoryV1SavePostRequest.


        :return: The coupon of this SalesRuleCouponRepositoryV1SavePostRequest.
        :rtype: SalesRuleDataCouponInterface
        """
        return self._coupon

    @coupon.setter
    def coupon(self, coupon):
        """Sets the coupon of this SalesRuleCouponRepositoryV1SavePostRequest.


        :param coupon: The coupon of this SalesRuleCouponRepositoryV1SavePostRequest.
        :type coupon: SalesRuleDataCouponInterface
        """
        if coupon is None:
            raise ValueError("Invalid value for `coupon`, must not be `None`")

        self._coupon = coupon
