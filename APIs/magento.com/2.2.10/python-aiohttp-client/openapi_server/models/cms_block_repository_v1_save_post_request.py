# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.cms_data_block_interface import CmsDataBlockInterface
from openapi_server import util


class CmsBlockRepositoryV1SavePostRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, block: CmsDataBlockInterface=None):
        """CmsBlockRepositoryV1SavePostRequest - a model defined in OpenAPI

        :param block: The block of this CmsBlockRepositoryV1SavePostRequest.
        """
        self.openapi_types = {
            'block': CmsDataBlockInterface
        }

        self.attribute_map = {
            'block': 'block'
        }

        self._block = block

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CmsBlockRepositoryV1SavePostRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The cmsBlockRepositoryV1SavePost_request of this CmsBlockRepositoryV1SavePostRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def block(self):
        """Gets the block of this CmsBlockRepositoryV1SavePostRequest.


        :return: The block of this CmsBlockRepositoryV1SavePostRequest.
        :rtype: CmsDataBlockInterface
        """
        return self._block

    @block.setter
    def block(self, block):
        """Sets the block of this CmsBlockRepositoryV1SavePostRequest.


        :param block: The block of this CmsBlockRepositoryV1SavePostRequest.
        :type block: CmsDataBlockInterface
        """
        if block is None:
            raise ValueError("Invalid value for `block`, must not be `None`")

        self._block = block
