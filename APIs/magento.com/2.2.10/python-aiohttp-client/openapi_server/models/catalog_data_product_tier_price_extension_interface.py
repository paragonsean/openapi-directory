# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CatalogDataProductTierPriceExtensionInterface(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, percentage_value: float=None, website_id: int=None):
        """CatalogDataProductTierPriceExtensionInterface - a model defined in OpenAPI

        :param percentage_value: The percentage_value of this CatalogDataProductTierPriceExtensionInterface.
        :param website_id: The website_id of this CatalogDataProductTierPriceExtensionInterface.
        """
        self.openapi_types = {
            'percentage_value': float,
            'website_id': int
        }

        self.attribute_map = {
            'percentage_value': 'percentage_value',
            'website_id': 'website_id'
        }

        self._percentage_value = percentage_value
        self._website_id = website_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CatalogDataProductTierPriceExtensionInterface':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The catalog-data-product-tier-price-extension-interface of this CatalogDataProductTierPriceExtensionInterface.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def percentage_value(self):
        """Gets the percentage_value of this CatalogDataProductTierPriceExtensionInterface.


        :return: The percentage_value of this CatalogDataProductTierPriceExtensionInterface.
        :rtype: float
        """
        return self._percentage_value

    @percentage_value.setter
    def percentage_value(self, percentage_value):
        """Sets the percentage_value of this CatalogDataProductTierPriceExtensionInterface.


        :param percentage_value: The percentage_value of this CatalogDataProductTierPriceExtensionInterface.
        :type percentage_value: float
        """

        self._percentage_value = percentage_value

    @property
    def website_id(self):
        """Gets the website_id of this CatalogDataProductTierPriceExtensionInterface.


        :return: The website_id of this CatalogDataProductTierPriceExtensionInterface.
        :rtype: int
        """
        return self._website_id

    @website_id.setter
    def website_id(self, website_id):
        """Sets the website_id of this CatalogDataProductTierPriceExtensionInterface.


        :param website_id: The website_id of this CatalogDataProductTierPriceExtensionInterface.
        :type website_id: int
        """

        self._website_id = website_id
