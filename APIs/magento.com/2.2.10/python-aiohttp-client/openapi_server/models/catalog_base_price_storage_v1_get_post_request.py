# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CatalogBasePriceStorageV1GetPostRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, skus: List[str]=None):
        """CatalogBasePriceStorageV1GetPostRequest - a model defined in OpenAPI

        :param skus: The skus of this CatalogBasePriceStorageV1GetPostRequest.
        """
        self.openapi_types = {
            'skus': List[str]
        }

        self.attribute_map = {
            'skus': 'skus'
        }

        self._skus = skus

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CatalogBasePriceStorageV1GetPostRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The catalogBasePriceStorageV1GetPost_request of this CatalogBasePriceStorageV1GetPostRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def skus(self):
        """Gets the skus of this CatalogBasePriceStorageV1GetPostRequest.


        :return: The skus of this CatalogBasePriceStorageV1GetPostRequest.
        :rtype: List[str]
        """
        return self._skus

    @skus.setter
    def skus(self, skus):
        """Sets the skus of this CatalogBasePriceStorageV1GetPostRequest.


        :param skus: The skus of this CatalogBasePriceStorageV1GetPostRequest.
        :type skus: List[str]
        """
        if skus is None:
            raise ValueError("Invalid value for `skus`, must not be `None`")

        self._skus = skus
