# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SalesDataShipmentItemInterface(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, additional_data: str=None, description: str=None, entity_id: int=None, extension_attributes: object=None, name: str=None, order_item_id: int=None, parent_id: int=None, price: float=None, product_id: int=None, qty: float=None, row_total: float=None, sku: str=None, weight: float=None):
        """SalesDataShipmentItemInterface - a model defined in OpenAPI

        :param additional_data: The additional_data of this SalesDataShipmentItemInterface.
        :param description: The description of this SalesDataShipmentItemInterface.
        :param entity_id: The entity_id of this SalesDataShipmentItemInterface.
        :param extension_attributes: The extension_attributes of this SalesDataShipmentItemInterface.
        :param name: The name of this SalesDataShipmentItemInterface.
        :param order_item_id: The order_item_id of this SalesDataShipmentItemInterface.
        :param parent_id: The parent_id of this SalesDataShipmentItemInterface.
        :param price: The price of this SalesDataShipmentItemInterface.
        :param product_id: The product_id of this SalesDataShipmentItemInterface.
        :param qty: The qty of this SalesDataShipmentItemInterface.
        :param row_total: The row_total of this SalesDataShipmentItemInterface.
        :param sku: The sku of this SalesDataShipmentItemInterface.
        :param weight: The weight of this SalesDataShipmentItemInterface.
        """
        self.openapi_types = {
            'additional_data': str,
            'description': str,
            'entity_id': int,
            'extension_attributes': object,
            'name': str,
            'order_item_id': int,
            'parent_id': int,
            'price': float,
            'product_id': int,
            'qty': float,
            'row_total': float,
            'sku': str,
            'weight': float
        }

        self.attribute_map = {
            'additional_data': 'additional_data',
            'description': 'description',
            'entity_id': 'entity_id',
            'extension_attributes': 'extension_attributes',
            'name': 'name',
            'order_item_id': 'order_item_id',
            'parent_id': 'parent_id',
            'price': 'price',
            'product_id': 'product_id',
            'qty': 'qty',
            'row_total': 'row_total',
            'sku': 'sku',
            'weight': 'weight'
        }

        self._additional_data = additional_data
        self._description = description
        self._entity_id = entity_id
        self._extension_attributes = extension_attributes
        self._name = name
        self._order_item_id = order_item_id
        self._parent_id = parent_id
        self._price = price
        self._product_id = product_id
        self._qty = qty
        self._row_total = row_total
        self._sku = sku
        self._weight = weight

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SalesDataShipmentItemInterface':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The sales-data-shipment-item-interface of this SalesDataShipmentItemInterface.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def additional_data(self):
        """Gets the additional_data of this SalesDataShipmentItemInterface.

        Additional data.

        :return: The additional_data of this SalesDataShipmentItemInterface.
        :rtype: str
        """
        return self._additional_data

    @additional_data.setter
    def additional_data(self, additional_data):
        """Sets the additional_data of this SalesDataShipmentItemInterface.

        Additional data.

        :param additional_data: The additional_data of this SalesDataShipmentItemInterface.
        :type additional_data: str
        """

        self._additional_data = additional_data

    @property
    def description(self):
        """Gets the description of this SalesDataShipmentItemInterface.

        Description.

        :return: The description of this SalesDataShipmentItemInterface.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this SalesDataShipmentItemInterface.

        Description.

        :param description: The description of this SalesDataShipmentItemInterface.
        :type description: str
        """

        self._description = description

    @property
    def entity_id(self):
        """Gets the entity_id of this SalesDataShipmentItemInterface.

        Shipment item ID.

        :return: The entity_id of this SalesDataShipmentItemInterface.
        :rtype: int
        """
        return self._entity_id

    @entity_id.setter
    def entity_id(self, entity_id):
        """Sets the entity_id of this SalesDataShipmentItemInterface.

        Shipment item ID.

        :param entity_id: The entity_id of this SalesDataShipmentItemInterface.
        :type entity_id: int
        """

        self._entity_id = entity_id

    @property
    def extension_attributes(self):
        """Gets the extension_attributes of this SalesDataShipmentItemInterface.

        ExtensionInterface class for @see \\Magento\\Sales\\Api\\Data\\ShipmentItemInterface

        :return: The extension_attributes of this SalesDataShipmentItemInterface.
        :rtype: object
        """
        return self._extension_attributes

    @extension_attributes.setter
    def extension_attributes(self, extension_attributes):
        """Sets the extension_attributes of this SalesDataShipmentItemInterface.

        ExtensionInterface class for @see \\Magento\\Sales\\Api\\Data\\ShipmentItemInterface

        :param extension_attributes: The extension_attributes of this SalesDataShipmentItemInterface.
        :type extension_attributes: object
        """

        self._extension_attributes = extension_attributes

    @property
    def name(self):
        """Gets the name of this SalesDataShipmentItemInterface.

        Name.

        :return: The name of this SalesDataShipmentItemInterface.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this SalesDataShipmentItemInterface.

        Name.

        :param name: The name of this SalesDataShipmentItemInterface.
        :type name: str
        """

        self._name = name

    @property
    def order_item_id(self):
        """Gets the order_item_id of this SalesDataShipmentItemInterface.

        Order item ID.

        :return: The order_item_id of this SalesDataShipmentItemInterface.
        :rtype: int
        """
        return self._order_item_id

    @order_item_id.setter
    def order_item_id(self, order_item_id):
        """Sets the order_item_id of this SalesDataShipmentItemInterface.

        Order item ID.

        :param order_item_id: The order_item_id of this SalesDataShipmentItemInterface.
        :type order_item_id: int
        """
        if order_item_id is None:
            raise ValueError("Invalid value for `order_item_id`, must not be `None`")

        self._order_item_id = order_item_id

    @property
    def parent_id(self):
        """Gets the parent_id of this SalesDataShipmentItemInterface.

        Parent ID.

        :return: The parent_id of this SalesDataShipmentItemInterface.
        :rtype: int
        """
        return self._parent_id

    @parent_id.setter
    def parent_id(self, parent_id):
        """Sets the parent_id of this SalesDataShipmentItemInterface.

        Parent ID.

        :param parent_id: The parent_id of this SalesDataShipmentItemInterface.
        :type parent_id: int
        """

        self._parent_id = parent_id

    @property
    def price(self):
        """Gets the price of this SalesDataShipmentItemInterface.

        Price.

        :return: The price of this SalesDataShipmentItemInterface.
        :rtype: float
        """
        return self._price

    @price.setter
    def price(self, price):
        """Sets the price of this SalesDataShipmentItemInterface.

        Price.

        :param price: The price of this SalesDataShipmentItemInterface.
        :type price: float
        """

        self._price = price

    @property
    def product_id(self):
        """Gets the product_id of this SalesDataShipmentItemInterface.

        Product ID.

        :return: The product_id of this SalesDataShipmentItemInterface.
        :rtype: int
        """
        return self._product_id

    @product_id.setter
    def product_id(self, product_id):
        """Sets the product_id of this SalesDataShipmentItemInterface.

        Product ID.

        :param product_id: The product_id of this SalesDataShipmentItemInterface.
        :type product_id: int
        """

        self._product_id = product_id

    @property
    def qty(self):
        """Gets the qty of this SalesDataShipmentItemInterface.

        Quantity.

        :return: The qty of this SalesDataShipmentItemInterface.
        :rtype: float
        """
        return self._qty

    @qty.setter
    def qty(self, qty):
        """Sets the qty of this SalesDataShipmentItemInterface.

        Quantity.

        :param qty: The qty of this SalesDataShipmentItemInterface.
        :type qty: float
        """
        if qty is None:
            raise ValueError("Invalid value for `qty`, must not be `None`")

        self._qty = qty

    @property
    def row_total(self):
        """Gets the row_total of this SalesDataShipmentItemInterface.

        Row total.

        :return: The row_total of this SalesDataShipmentItemInterface.
        :rtype: float
        """
        return self._row_total

    @row_total.setter
    def row_total(self, row_total):
        """Sets the row_total of this SalesDataShipmentItemInterface.

        Row total.

        :param row_total: The row_total of this SalesDataShipmentItemInterface.
        :type row_total: float
        """

        self._row_total = row_total

    @property
    def sku(self):
        """Gets the sku of this SalesDataShipmentItemInterface.

        SKU.

        :return: The sku of this SalesDataShipmentItemInterface.
        :rtype: str
        """
        return self._sku

    @sku.setter
    def sku(self, sku):
        """Sets the sku of this SalesDataShipmentItemInterface.

        SKU.

        :param sku: The sku of this SalesDataShipmentItemInterface.
        :type sku: str
        """

        self._sku = sku

    @property
    def weight(self):
        """Gets the weight of this SalesDataShipmentItemInterface.

        Weight.

        :return: The weight of this SalesDataShipmentItemInterface.
        :rtype: float
        """
        return self._weight

    @weight.setter
    def weight(self, weight):
        """Sets the weight of this SalesDataShipmentItemInterface.

        Weight.

        :param weight: The weight of this SalesDataShipmentItemInterface.
        :type weight: float
        """

        self._weight = weight
