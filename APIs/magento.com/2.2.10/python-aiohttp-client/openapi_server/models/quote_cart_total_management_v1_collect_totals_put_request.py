# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.quote_data_payment_interface import QuoteDataPaymentInterface
from openapi_server.models.quote_data_totals_additional_data_interface import QuoteDataTotalsAdditionalDataInterface
from openapi_server import util


class QuoteCartTotalManagementV1CollectTotalsPutRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, additional_data: QuoteDataTotalsAdditionalDataInterface=None, payment_method: QuoteDataPaymentInterface=None, shipping_carrier_code: str=None, shipping_method_code: str=None):
        """QuoteCartTotalManagementV1CollectTotalsPutRequest - a model defined in OpenAPI

        :param additional_data: The additional_data of this QuoteCartTotalManagementV1CollectTotalsPutRequest.
        :param payment_method: The payment_method of this QuoteCartTotalManagementV1CollectTotalsPutRequest.
        :param shipping_carrier_code: The shipping_carrier_code of this QuoteCartTotalManagementV1CollectTotalsPutRequest.
        :param shipping_method_code: The shipping_method_code of this QuoteCartTotalManagementV1CollectTotalsPutRequest.
        """
        self.openapi_types = {
            'additional_data': QuoteDataTotalsAdditionalDataInterface,
            'payment_method': QuoteDataPaymentInterface,
            'shipping_carrier_code': str,
            'shipping_method_code': str
        }

        self.attribute_map = {
            'additional_data': 'additionalData',
            'payment_method': 'paymentMethod',
            'shipping_carrier_code': 'shippingCarrierCode',
            'shipping_method_code': 'shippingMethodCode'
        }

        self._additional_data = additional_data
        self._payment_method = payment_method
        self._shipping_carrier_code = shipping_carrier_code
        self._shipping_method_code = shipping_method_code

    @classmethod
    def from_dict(cls, dikt: dict) -> 'QuoteCartTotalManagementV1CollectTotalsPutRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The quoteCartTotalManagementV1CollectTotalsPut_request of this QuoteCartTotalManagementV1CollectTotalsPutRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def additional_data(self):
        """Gets the additional_data of this QuoteCartTotalManagementV1CollectTotalsPutRequest.


        :return: The additional_data of this QuoteCartTotalManagementV1CollectTotalsPutRequest.
        :rtype: QuoteDataTotalsAdditionalDataInterface
        """
        return self._additional_data

    @additional_data.setter
    def additional_data(self, additional_data):
        """Sets the additional_data of this QuoteCartTotalManagementV1CollectTotalsPutRequest.


        :param additional_data: The additional_data of this QuoteCartTotalManagementV1CollectTotalsPutRequest.
        :type additional_data: QuoteDataTotalsAdditionalDataInterface
        """

        self._additional_data = additional_data

    @property
    def payment_method(self):
        """Gets the payment_method of this QuoteCartTotalManagementV1CollectTotalsPutRequest.


        :return: The payment_method of this QuoteCartTotalManagementV1CollectTotalsPutRequest.
        :rtype: QuoteDataPaymentInterface
        """
        return self._payment_method

    @payment_method.setter
    def payment_method(self, payment_method):
        """Sets the payment_method of this QuoteCartTotalManagementV1CollectTotalsPutRequest.


        :param payment_method: The payment_method of this QuoteCartTotalManagementV1CollectTotalsPutRequest.
        :type payment_method: QuoteDataPaymentInterface
        """
        if payment_method is None:
            raise ValueError("Invalid value for `payment_method`, must not be `None`")

        self._payment_method = payment_method

    @property
    def shipping_carrier_code(self):
        """Gets the shipping_carrier_code of this QuoteCartTotalManagementV1CollectTotalsPutRequest.

        The carrier code.

        :return: The shipping_carrier_code of this QuoteCartTotalManagementV1CollectTotalsPutRequest.
        :rtype: str
        """
        return self._shipping_carrier_code

    @shipping_carrier_code.setter
    def shipping_carrier_code(self, shipping_carrier_code):
        """Sets the shipping_carrier_code of this QuoteCartTotalManagementV1CollectTotalsPutRequest.

        The carrier code.

        :param shipping_carrier_code: The shipping_carrier_code of this QuoteCartTotalManagementV1CollectTotalsPutRequest.
        :type shipping_carrier_code: str
        """

        self._shipping_carrier_code = shipping_carrier_code

    @property
    def shipping_method_code(self):
        """Gets the shipping_method_code of this QuoteCartTotalManagementV1CollectTotalsPutRequest.

        The shipping method code.

        :return: The shipping_method_code of this QuoteCartTotalManagementV1CollectTotalsPutRequest.
        :rtype: str
        """
        return self._shipping_method_code

    @shipping_method_code.setter
    def shipping_method_code(self, shipping_method_code):
        """Sets the shipping_method_code of this QuoteCartTotalManagementV1CollectTotalsPutRequest.

        The shipping method code.

        :param shipping_method_code: The shipping_method_code of this QuoteCartTotalManagementV1CollectTotalsPutRequest.
        :type shipping_method_code: str
        """

        self._shipping_method_code = shipping_method_code
