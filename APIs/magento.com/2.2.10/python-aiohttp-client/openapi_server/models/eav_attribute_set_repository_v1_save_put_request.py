# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.eav_data_attribute_set_interface import EavDataAttributeSetInterface
from openapi_server import util


class EavAttributeSetRepositoryV1SavePutRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, attribute_set: EavDataAttributeSetInterface=None):
        """EavAttributeSetRepositoryV1SavePutRequest - a model defined in OpenAPI

        :param attribute_set: The attribute_set of this EavAttributeSetRepositoryV1SavePutRequest.
        """
        self.openapi_types = {
            'attribute_set': EavDataAttributeSetInterface
        }

        self.attribute_map = {
            'attribute_set': 'attributeSet'
        }

        self._attribute_set = attribute_set

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EavAttributeSetRepositoryV1SavePutRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The eavAttributeSetRepositoryV1SavePut_request of this EavAttributeSetRepositoryV1SavePutRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def attribute_set(self):
        """Gets the attribute_set of this EavAttributeSetRepositoryV1SavePutRequest.


        :return: The attribute_set of this EavAttributeSetRepositoryV1SavePutRequest.
        :rtype: EavDataAttributeSetInterface
        """
        return self._attribute_set

    @attribute_set.setter
    def attribute_set(self, attribute_set):
        """Sets the attribute_set of this EavAttributeSetRepositoryV1SavePutRequest.


        :param attribute_set: The attribute_set of this EavAttributeSetRepositoryV1SavePutRequest.
        :type attribute_set: EavDataAttributeSetInterface
        """
        if attribute_set is None:
            raise ValueError("Invalid value for `attribute_set`, must not be `None`")

        self._attribute_set = attribute_set
