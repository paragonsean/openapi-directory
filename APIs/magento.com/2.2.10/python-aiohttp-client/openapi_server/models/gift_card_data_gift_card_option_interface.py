# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GiftCardDataGiftCardOptionInterface(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, custom_giftcard_amount: float=None, extension_attributes: object=None, giftcard_amount: str=None, giftcard_message: str=None, giftcard_recipient_email: str=None, giftcard_recipient_name: str=None, giftcard_sender_email: str=None, giftcard_sender_name: str=None):
        """GiftCardDataGiftCardOptionInterface - a model defined in OpenAPI

        :param custom_giftcard_amount: The custom_giftcard_amount of this GiftCardDataGiftCardOptionInterface.
        :param extension_attributes: The extension_attributes of this GiftCardDataGiftCardOptionInterface.
        :param giftcard_amount: The giftcard_amount of this GiftCardDataGiftCardOptionInterface.
        :param giftcard_message: The giftcard_message of this GiftCardDataGiftCardOptionInterface.
        :param giftcard_recipient_email: The giftcard_recipient_email of this GiftCardDataGiftCardOptionInterface.
        :param giftcard_recipient_name: The giftcard_recipient_name of this GiftCardDataGiftCardOptionInterface.
        :param giftcard_sender_email: The giftcard_sender_email of this GiftCardDataGiftCardOptionInterface.
        :param giftcard_sender_name: The giftcard_sender_name of this GiftCardDataGiftCardOptionInterface.
        """
        self.openapi_types = {
            'custom_giftcard_amount': float,
            'extension_attributes': object,
            'giftcard_amount': str,
            'giftcard_message': str,
            'giftcard_recipient_email': str,
            'giftcard_recipient_name': str,
            'giftcard_sender_email': str,
            'giftcard_sender_name': str
        }

        self.attribute_map = {
            'custom_giftcard_amount': 'custom_giftcard_amount',
            'extension_attributes': 'extension_attributes',
            'giftcard_amount': 'giftcard_amount',
            'giftcard_message': 'giftcard_message',
            'giftcard_recipient_email': 'giftcard_recipient_email',
            'giftcard_recipient_name': 'giftcard_recipient_name',
            'giftcard_sender_email': 'giftcard_sender_email',
            'giftcard_sender_name': 'giftcard_sender_name'
        }

        self._custom_giftcard_amount = custom_giftcard_amount
        self._extension_attributes = extension_attributes
        self._giftcard_amount = giftcard_amount
        self._giftcard_message = giftcard_message
        self._giftcard_recipient_email = giftcard_recipient_email
        self._giftcard_recipient_name = giftcard_recipient_name
        self._giftcard_sender_email = giftcard_sender_email
        self._giftcard_sender_name = giftcard_sender_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GiftCardDataGiftCardOptionInterface':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The gift-card-data-gift-card-option-interface of this GiftCardDataGiftCardOptionInterface.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def custom_giftcard_amount(self):
        """Gets the custom_giftcard_amount of this GiftCardDataGiftCardOptionInterface.

        Gift card open amount value.

        :return: The custom_giftcard_amount of this GiftCardDataGiftCardOptionInterface.
        :rtype: float
        """
        return self._custom_giftcard_amount

    @custom_giftcard_amount.setter
    def custom_giftcard_amount(self, custom_giftcard_amount):
        """Sets the custom_giftcard_amount of this GiftCardDataGiftCardOptionInterface.

        Gift card open amount value.

        :param custom_giftcard_amount: The custom_giftcard_amount of this GiftCardDataGiftCardOptionInterface.
        :type custom_giftcard_amount: float
        """

        self._custom_giftcard_amount = custom_giftcard_amount

    @property
    def extension_attributes(self):
        """Gets the extension_attributes of this GiftCardDataGiftCardOptionInterface.

        ExtensionInterface class for @see \\Magento\\GiftCard\\Api\\Data\\GiftCardOptionInterface

        :return: The extension_attributes of this GiftCardDataGiftCardOptionInterface.
        :rtype: object
        """
        return self._extension_attributes

    @extension_attributes.setter
    def extension_attributes(self, extension_attributes):
        """Sets the extension_attributes of this GiftCardDataGiftCardOptionInterface.

        ExtensionInterface class for @see \\Magento\\GiftCard\\Api\\Data\\GiftCardOptionInterface

        :param extension_attributes: The extension_attributes of this GiftCardDataGiftCardOptionInterface.
        :type extension_attributes: object
        """

        self._extension_attributes = extension_attributes

    @property
    def giftcard_amount(self):
        """Gets the giftcard_amount of this GiftCardDataGiftCardOptionInterface.

        Gift card amount.

        :return: The giftcard_amount of this GiftCardDataGiftCardOptionInterface.
        :rtype: str
        """
        return self._giftcard_amount

    @giftcard_amount.setter
    def giftcard_amount(self, giftcard_amount):
        """Sets the giftcard_amount of this GiftCardDataGiftCardOptionInterface.

        Gift card amount.

        :param giftcard_amount: The giftcard_amount of this GiftCardDataGiftCardOptionInterface.
        :type giftcard_amount: str
        """
        if giftcard_amount is None:
            raise ValueError("Invalid value for `giftcard_amount`, must not be `None`")

        self._giftcard_amount = giftcard_amount

    @property
    def giftcard_message(self):
        """Gets the giftcard_message of this GiftCardDataGiftCardOptionInterface.

        Giftcard message.

        :return: The giftcard_message of this GiftCardDataGiftCardOptionInterface.
        :rtype: str
        """
        return self._giftcard_message

    @giftcard_message.setter
    def giftcard_message(self, giftcard_message):
        """Sets the giftcard_message of this GiftCardDataGiftCardOptionInterface.

        Giftcard message.

        :param giftcard_message: The giftcard_message of this GiftCardDataGiftCardOptionInterface.
        :type giftcard_message: str
        """

        self._giftcard_message = giftcard_message

    @property
    def giftcard_recipient_email(self):
        """Gets the giftcard_recipient_email of this GiftCardDataGiftCardOptionInterface.

        Gift card recipient email.

        :return: The giftcard_recipient_email of this GiftCardDataGiftCardOptionInterface.
        :rtype: str
        """
        return self._giftcard_recipient_email

    @giftcard_recipient_email.setter
    def giftcard_recipient_email(self, giftcard_recipient_email):
        """Sets the giftcard_recipient_email of this GiftCardDataGiftCardOptionInterface.

        Gift card recipient email.

        :param giftcard_recipient_email: The giftcard_recipient_email of this GiftCardDataGiftCardOptionInterface.
        :type giftcard_recipient_email: str
        """
        if giftcard_recipient_email is None:
            raise ValueError("Invalid value for `giftcard_recipient_email`, must not be `None`")

        self._giftcard_recipient_email = giftcard_recipient_email

    @property
    def giftcard_recipient_name(self):
        """Gets the giftcard_recipient_name of this GiftCardDataGiftCardOptionInterface.

        Gift card recipient name.

        :return: The giftcard_recipient_name of this GiftCardDataGiftCardOptionInterface.
        :rtype: str
        """
        return self._giftcard_recipient_name

    @giftcard_recipient_name.setter
    def giftcard_recipient_name(self, giftcard_recipient_name):
        """Sets the giftcard_recipient_name of this GiftCardDataGiftCardOptionInterface.

        Gift card recipient name.

        :param giftcard_recipient_name: The giftcard_recipient_name of this GiftCardDataGiftCardOptionInterface.
        :type giftcard_recipient_name: str
        """
        if giftcard_recipient_name is None:
            raise ValueError("Invalid value for `giftcard_recipient_name`, must not be `None`")

        self._giftcard_recipient_name = giftcard_recipient_name

    @property
    def giftcard_sender_email(self):
        """Gets the giftcard_sender_email of this GiftCardDataGiftCardOptionInterface.

        Gift card sender email.

        :return: The giftcard_sender_email of this GiftCardDataGiftCardOptionInterface.
        :rtype: str
        """
        return self._giftcard_sender_email

    @giftcard_sender_email.setter
    def giftcard_sender_email(self, giftcard_sender_email):
        """Sets the giftcard_sender_email of this GiftCardDataGiftCardOptionInterface.

        Gift card sender email.

        :param giftcard_sender_email: The giftcard_sender_email of this GiftCardDataGiftCardOptionInterface.
        :type giftcard_sender_email: str
        """
        if giftcard_sender_email is None:
            raise ValueError("Invalid value for `giftcard_sender_email`, must not be `None`")

        self._giftcard_sender_email = giftcard_sender_email

    @property
    def giftcard_sender_name(self):
        """Gets the giftcard_sender_name of this GiftCardDataGiftCardOptionInterface.

        Gift card sender name.

        :return: The giftcard_sender_name of this GiftCardDataGiftCardOptionInterface.
        :rtype: str
        """
        return self._giftcard_sender_name

    @giftcard_sender_name.setter
    def giftcard_sender_name(self, giftcard_sender_name):
        """Sets the giftcard_sender_name of this GiftCardDataGiftCardOptionInterface.

        Gift card sender name.

        :param giftcard_sender_name: The giftcard_sender_name of this GiftCardDataGiftCardOptionInterface.
        :type giftcard_sender_name: str
        """
        if giftcard_sender_name is None:
            raise ValueError("Invalid value for `giftcard_sender_name`, must not be `None`")

        self._giftcard_sender_name = giftcard_sender_name
