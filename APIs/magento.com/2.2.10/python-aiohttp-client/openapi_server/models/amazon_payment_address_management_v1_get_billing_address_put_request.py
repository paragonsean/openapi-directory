# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AmazonPaymentAddressManagementV1GetBillingAddressPutRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, address_consent_token: str=None):
        """AmazonPaymentAddressManagementV1GetBillingAddressPutRequest - a model defined in OpenAPI

        :param address_consent_token: The address_consent_token of this AmazonPaymentAddressManagementV1GetBillingAddressPutRequest.
        """
        self.openapi_types = {
            'address_consent_token': str
        }

        self.attribute_map = {
            'address_consent_token': 'addressConsentToken'
        }

        self._address_consent_token = address_consent_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AmazonPaymentAddressManagementV1GetBillingAddressPutRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The amazonPaymentAddressManagementV1GetBillingAddressPut_request of this AmazonPaymentAddressManagementV1GetBillingAddressPutRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def address_consent_token(self):
        """Gets the address_consent_token of this AmazonPaymentAddressManagementV1GetBillingAddressPutRequest.


        :return: The address_consent_token of this AmazonPaymentAddressManagementV1GetBillingAddressPutRequest.
        :rtype: str
        """
        return self._address_consent_token

    @address_consent_token.setter
    def address_consent_token(self, address_consent_token):
        """Sets the address_consent_token of this AmazonPaymentAddressManagementV1GetBillingAddressPutRequest.


        :param address_consent_token: The address_consent_token of this AmazonPaymentAddressManagementV1GetBillingAddressPutRequest.
        :type address_consent_token: str
        """
        if address_consent_token is None:
            raise ValueError("Invalid value for `address_consent_token`, must not be `None`")

        self._address_consent_token = address_consent_token
