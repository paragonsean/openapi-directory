# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.quote_data_cart_item_interface import QuoteDataCartItemInterface
from openapi_server import util


class QuoteCartItemRepositoryV1SavePostRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cart_item: QuoteDataCartItemInterface=None):
        """QuoteCartItemRepositoryV1SavePostRequest - a model defined in OpenAPI

        :param cart_item: The cart_item of this QuoteCartItemRepositoryV1SavePostRequest.
        """
        self.openapi_types = {
            'cart_item': QuoteDataCartItemInterface
        }

        self.attribute_map = {
            'cart_item': 'cartItem'
        }

        self._cart_item = cart_item

    @classmethod
    def from_dict(cls, dikt: dict) -> 'QuoteCartItemRepositoryV1SavePostRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The quoteCartItemRepositoryV1SavePost_request of this QuoteCartItemRepositoryV1SavePostRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cart_item(self):
        """Gets the cart_item of this QuoteCartItemRepositoryV1SavePostRequest.


        :return: The cart_item of this QuoteCartItemRepositoryV1SavePostRequest.
        :rtype: QuoteDataCartItemInterface
        """
        return self._cart_item

    @cart_item.setter
    def cart_item(self, cart_item):
        """Sets the cart_item of this QuoteCartItemRepositoryV1SavePostRequest.


        :param cart_item: The cart_item of this QuoteCartItemRepositoryV1SavePostRequest.
        :type cart_item: QuoteDataCartItemInterface
        """
        if cart_item is None:
            raise ValueError("Invalid value for `cart_item`, must not be `None`")

        self._cart_item = cart_item
