# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.sales_data_shipment_comment_creation_interface import SalesDataShipmentCommentCreationInterface
from openapi_server.models.sales_data_shipment_creation_arguments_interface import SalesDataShipmentCreationArgumentsInterface
from openapi_server.models.sales_data_shipment_item_creation_interface import SalesDataShipmentItemCreationInterface
from openapi_server.models.sales_data_shipment_package_creation_interface import SalesDataShipmentPackageCreationInterface
from openapi_server.models.sales_data_shipment_track_creation_interface import SalesDataShipmentTrackCreationInterface
from openapi_server import util


class SalesShipOrderV1ExecutePostRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, append_comment: bool=None, arguments: SalesDataShipmentCreationArgumentsInterface=None, comment: SalesDataShipmentCommentCreationInterface=None, items: List[SalesDataShipmentItemCreationInterface]=None, notify: bool=None, packages: List[SalesDataShipmentPackageCreationInterface]=None, tracks: List[SalesDataShipmentTrackCreationInterface]=None):
        """SalesShipOrderV1ExecutePostRequest - a model defined in OpenAPI

        :param append_comment: The append_comment of this SalesShipOrderV1ExecutePostRequest.
        :param arguments: The arguments of this SalesShipOrderV1ExecutePostRequest.
        :param comment: The comment of this SalesShipOrderV1ExecutePostRequest.
        :param items: The items of this SalesShipOrderV1ExecutePostRequest.
        :param notify: The notify of this SalesShipOrderV1ExecutePostRequest.
        :param packages: The packages of this SalesShipOrderV1ExecutePostRequest.
        :param tracks: The tracks of this SalesShipOrderV1ExecutePostRequest.
        """
        self.openapi_types = {
            'append_comment': bool,
            'arguments': SalesDataShipmentCreationArgumentsInterface,
            'comment': SalesDataShipmentCommentCreationInterface,
            'items': List[SalesDataShipmentItemCreationInterface],
            'notify': bool,
            'packages': List[SalesDataShipmentPackageCreationInterface],
            'tracks': List[SalesDataShipmentTrackCreationInterface]
        }

        self.attribute_map = {
            'append_comment': 'appendComment',
            'arguments': 'arguments',
            'comment': 'comment',
            'items': 'items',
            'notify': 'notify',
            'packages': 'packages',
            'tracks': 'tracks'
        }

        self._append_comment = append_comment
        self._arguments = arguments
        self._comment = comment
        self._items = items
        self._notify = notify
        self._packages = packages
        self._tracks = tracks

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SalesShipOrderV1ExecutePostRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The salesShipOrderV1ExecutePost_request of this SalesShipOrderV1ExecutePostRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def append_comment(self):
        """Gets the append_comment of this SalesShipOrderV1ExecutePostRequest.


        :return: The append_comment of this SalesShipOrderV1ExecutePostRequest.
        :rtype: bool
        """
        return self._append_comment

    @append_comment.setter
    def append_comment(self, append_comment):
        """Sets the append_comment of this SalesShipOrderV1ExecutePostRequest.


        :param append_comment: The append_comment of this SalesShipOrderV1ExecutePostRequest.
        :type append_comment: bool
        """

        self._append_comment = append_comment

    @property
    def arguments(self):
        """Gets the arguments of this SalesShipOrderV1ExecutePostRequest.


        :return: The arguments of this SalesShipOrderV1ExecutePostRequest.
        :rtype: SalesDataShipmentCreationArgumentsInterface
        """
        return self._arguments

    @arguments.setter
    def arguments(self, arguments):
        """Sets the arguments of this SalesShipOrderV1ExecutePostRequest.


        :param arguments: The arguments of this SalesShipOrderV1ExecutePostRequest.
        :type arguments: SalesDataShipmentCreationArgumentsInterface
        """

        self._arguments = arguments

    @property
    def comment(self):
        """Gets the comment of this SalesShipOrderV1ExecutePostRequest.


        :return: The comment of this SalesShipOrderV1ExecutePostRequest.
        :rtype: SalesDataShipmentCommentCreationInterface
        """
        return self._comment

    @comment.setter
    def comment(self, comment):
        """Sets the comment of this SalesShipOrderV1ExecutePostRequest.


        :param comment: The comment of this SalesShipOrderV1ExecutePostRequest.
        :type comment: SalesDataShipmentCommentCreationInterface
        """

        self._comment = comment

    @property
    def items(self):
        """Gets the items of this SalesShipOrderV1ExecutePostRequest.


        :return: The items of this SalesShipOrderV1ExecutePostRequest.
        :rtype: List[SalesDataShipmentItemCreationInterface]
        """
        return self._items

    @items.setter
    def items(self, items):
        """Sets the items of this SalesShipOrderV1ExecutePostRequest.


        :param items: The items of this SalesShipOrderV1ExecutePostRequest.
        :type items: List[SalesDataShipmentItemCreationInterface]
        """

        self._items = items

    @property
    def notify(self):
        """Gets the notify of this SalesShipOrderV1ExecutePostRequest.


        :return: The notify of this SalesShipOrderV1ExecutePostRequest.
        :rtype: bool
        """
        return self._notify

    @notify.setter
    def notify(self, notify):
        """Sets the notify of this SalesShipOrderV1ExecutePostRequest.


        :param notify: The notify of this SalesShipOrderV1ExecutePostRequest.
        :type notify: bool
        """

        self._notify = notify

    @property
    def packages(self):
        """Gets the packages of this SalesShipOrderV1ExecutePostRequest.


        :return: The packages of this SalesShipOrderV1ExecutePostRequest.
        :rtype: List[SalesDataShipmentPackageCreationInterface]
        """
        return self._packages

    @packages.setter
    def packages(self, packages):
        """Sets the packages of this SalesShipOrderV1ExecutePostRequest.


        :param packages: The packages of this SalesShipOrderV1ExecutePostRequest.
        :type packages: List[SalesDataShipmentPackageCreationInterface]
        """

        self._packages = packages

    @property
    def tracks(self):
        """Gets the tracks of this SalesShipOrderV1ExecutePostRequest.


        :return: The tracks of this SalesShipOrderV1ExecutePostRequest.
        :rtype: List[SalesDataShipmentTrackCreationInterface]
        """
        return self._tracks

    @tracks.setter
    def tracks(self, tracks):
        """Sets the tracks of this SalesShipOrderV1ExecutePostRequest.


        :param tracks: The tracks of this SalesShipOrderV1ExecutePostRequest.
        :type tracks: List[SalesDataShipmentTrackCreationInterface]
        """

        self._tracks = tracks
