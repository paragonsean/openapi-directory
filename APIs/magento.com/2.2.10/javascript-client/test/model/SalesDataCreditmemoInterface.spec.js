/**
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MagentoB2B);
  }
}(this, function(expect, MagentoB2B) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new MagentoB2B.SalesDataCreditmemoInterface();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('SalesDataCreditmemoInterface', function() {
    it('should create an instance of SalesDataCreditmemoInterface', function() {
      // uncomment below and update the code to test SalesDataCreditmemoInterface
      //var instance = new MagentoB2B.SalesDataCreditmemoInterface();
      //expect(instance).to.be.a(MagentoB2B.SalesDataCreditmemoInterface);
    });

    it('should have the property adjustment (base name: "adjustment")', function() {
      // uncomment below and update the code to test the property adjustment
      //var instance = new MagentoB2B.SalesDataCreditmemoInterface();
      //expect(instance).to.be();
    });

    it('should have the property adjustmentNegative (base name: "adjustment_negative")', function() {
      // uncomment below and update the code to test the property adjustmentNegative
      //var instance = new MagentoB2B.SalesDataCreditmemoInterface();
      //expect(instance).to.be();
    });

    it('should have the property adjustmentPositive (base name: "adjustment_positive")', function() {
      // uncomment below and update the code to test the property adjustmentPositive
      //var instance = new MagentoB2B.SalesDataCreditmemoInterface();
      //expect(instance).to.be();
    });

    it('should have the property baseAdjustment (base name: "base_adjustment")', function() {
      // uncomment below and update the code to test the property baseAdjustment
      //var instance = new MagentoB2B.SalesDataCreditmemoInterface();
      //expect(instance).to.be();
    });

    it('should have the property baseAdjustmentNegative (base name: "base_adjustment_negative")', function() {
      // uncomment below and update the code to test the property baseAdjustmentNegative
      //var instance = new MagentoB2B.SalesDataCreditmemoInterface();
      //expect(instance).to.be();
    });

    it('should have the property baseAdjustmentPositive (base name: "base_adjustment_positive")', function() {
      // uncomment below and update the code to test the property baseAdjustmentPositive
      //var instance = new MagentoB2B.SalesDataCreditmemoInterface();
      //expect(instance).to.be();
    });

    it('should have the property baseCurrencyCode (base name: "base_currency_code")', function() {
      // uncomment below and update the code to test the property baseCurrencyCode
      //var instance = new MagentoB2B.SalesDataCreditmemoInterface();
      //expect(instance).to.be();
    });

    it('should have the property baseDiscountAmount (base name: "base_discount_amount")', function() {
      // uncomment below and update the code to test the property baseDiscountAmount
      //var instance = new MagentoB2B.SalesDataCreditmemoInterface();
      //expect(instance).to.be();
    });

    it('should have the property baseDiscountTaxCompensationAmount (base name: "base_discount_tax_compensation_amount")', function() {
      // uncomment below and update the code to test the property baseDiscountTaxCompensationAmount
      //var instance = new MagentoB2B.SalesDataCreditmemoInterface();
      //expect(instance).to.be();
    });

    it('should have the property baseGrandTotal (base name: "base_grand_total")', function() {
      // uncomment below and update the code to test the property baseGrandTotal
      //var instance = new MagentoB2B.SalesDataCreditmemoInterface();
      //expect(instance).to.be();
    });

    it('should have the property baseShippingAmount (base name: "base_shipping_amount")', function() {
      // uncomment below and update the code to test the property baseShippingAmount
      //var instance = new MagentoB2B.SalesDataCreditmemoInterface();
      //expect(instance).to.be();
    });

    it('should have the property baseShippingDiscountTaxCompensationAmnt (base name: "base_shipping_discount_tax_compensation_amnt")', function() {
      // uncomment below and update the code to test the property baseShippingDiscountTaxCompensationAmnt
      //var instance = new MagentoB2B.SalesDataCreditmemoInterface();
      //expect(instance).to.be();
    });

    it('should have the property baseShippingInclTax (base name: "base_shipping_incl_tax")', function() {
      // uncomment below and update the code to test the property baseShippingInclTax
      //var instance = new MagentoB2B.SalesDataCreditmemoInterface();
      //expect(instance).to.be();
    });

    it('should have the property baseShippingTaxAmount (base name: "base_shipping_tax_amount")', function() {
      // uncomment below and update the code to test the property baseShippingTaxAmount
      //var instance = new MagentoB2B.SalesDataCreditmemoInterface();
      //expect(instance).to.be();
    });

    it('should have the property baseSubtotal (base name: "base_subtotal")', function() {
      // uncomment below and update the code to test the property baseSubtotal
      //var instance = new MagentoB2B.SalesDataCreditmemoInterface();
      //expect(instance).to.be();
    });

    it('should have the property baseSubtotalInclTax (base name: "base_subtotal_incl_tax")', function() {
      // uncomment below and update the code to test the property baseSubtotalInclTax
      //var instance = new MagentoB2B.SalesDataCreditmemoInterface();
      //expect(instance).to.be();
    });

    it('should have the property baseTaxAmount (base name: "base_tax_amount")', function() {
      // uncomment below and update the code to test the property baseTaxAmount
      //var instance = new MagentoB2B.SalesDataCreditmemoInterface();
      //expect(instance).to.be();
    });

    it('should have the property baseToGlobalRate (base name: "base_to_global_rate")', function() {
      // uncomment below and update the code to test the property baseToGlobalRate
      //var instance = new MagentoB2B.SalesDataCreditmemoInterface();
      //expect(instance).to.be();
    });

    it('should have the property baseToOrderRate (base name: "base_to_order_rate")', function() {
      // uncomment below and update the code to test the property baseToOrderRate
      //var instance = new MagentoB2B.SalesDataCreditmemoInterface();
      //expect(instance).to.be();
    });

    it('should have the property billingAddressId (base name: "billing_address_id")', function() {
      // uncomment below and update the code to test the property billingAddressId
      //var instance = new MagentoB2B.SalesDataCreditmemoInterface();
      //expect(instance).to.be();
    });

    it('should have the property comments (base name: "comments")', function() {
      // uncomment below and update the code to test the property comments
      //var instance = new MagentoB2B.SalesDataCreditmemoInterface();
      //expect(instance).to.be();
    });

    it('should have the property createdAt (base name: "created_at")', function() {
      // uncomment below and update the code to test the property createdAt
      //var instance = new MagentoB2B.SalesDataCreditmemoInterface();
      //expect(instance).to.be();
    });

    it('should have the property creditmemoStatus (base name: "creditmemo_status")', function() {
      // uncomment below and update the code to test the property creditmemoStatus
      //var instance = new MagentoB2B.SalesDataCreditmemoInterface();
      //expect(instance).to.be();
    });

    it('should have the property discountAmount (base name: "discount_amount")', function() {
      // uncomment below and update the code to test the property discountAmount
      //var instance = new MagentoB2B.SalesDataCreditmemoInterface();
      //expect(instance).to.be();
    });

    it('should have the property discountDescription (base name: "discount_description")', function() {
      // uncomment below and update the code to test the property discountDescription
      //var instance = new MagentoB2B.SalesDataCreditmemoInterface();
      //expect(instance).to.be();
    });

    it('should have the property discountTaxCompensationAmount (base name: "discount_tax_compensation_amount")', function() {
      // uncomment below and update the code to test the property discountTaxCompensationAmount
      //var instance = new MagentoB2B.SalesDataCreditmemoInterface();
      //expect(instance).to.be();
    });

    it('should have the property emailSent (base name: "email_sent")', function() {
      // uncomment below and update the code to test the property emailSent
      //var instance = new MagentoB2B.SalesDataCreditmemoInterface();
      //expect(instance).to.be();
    });

    it('should have the property entityId (base name: "entity_id")', function() {
      // uncomment below and update the code to test the property entityId
      //var instance = new MagentoB2B.SalesDataCreditmemoInterface();
      //expect(instance).to.be();
    });

    it('should have the property extensionAttributes (base name: "extension_attributes")', function() {
      // uncomment below and update the code to test the property extensionAttributes
      //var instance = new MagentoB2B.SalesDataCreditmemoInterface();
      //expect(instance).to.be();
    });

    it('should have the property globalCurrencyCode (base name: "global_currency_code")', function() {
      // uncomment below and update the code to test the property globalCurrencyCode
      //var instance = new MagentoB2B.SalesDataCreditmemoInterface();
      //expect(instance).to.be();
    });

    it('should have the property grandTotal (base name: "grand_total")', function() {
      // uncomment below and update the code to test the property grandTotal
      //var instance = new MagentoB2B.SalesDataCreditmemoInterface();
      //expect(instance).to.be();
    });

    it('should have the property incrementId (base name: "increment_id")', function() {
      // uncomment below and update the code to test the property incrementId
      //var instance = new MagentoB2B.SalesDataCreditmemoInterface();
      //expect(instance).to.be();
    });

    it('should have the property invoiceId (base name: "invoice_id")', function() {
      // uncomment below and update the code to test the property invoiceId
      //var instance = new MagentoB2B.SalesDataCreditmemoInterface();
      //expect(instance).to.be();
    });

    it('should have the property items (base name: "items")', function() {
      // uncomment below and update the code to test the property items
      //var instance = new MagentoB2B.SalesDataCreditmemoInterface();
      //expect(instance).to.be();
    });

    it('should have the property orderCurrencyCode (base name: "order_currency_code")', function() {
      // uncomment below and update the code to test the property orderCurrencyCode
      //var instance = new MagentoB2B.SalesDataCreditmemoInterface();
      //expect(instance).to.be();
    });

    it('should have the property orderId (base name: "order_id")', function() {
      // uncomment below and update the code to test the property orderId
      //var instance = new MagentoB2B.SalesDataCreditmemoInterface();
      //expect(instance).to.be();
    });

    it('should have the property shippingAddressId (base name: "shipping_address_id")', function() {
      // uncomment below and update the code to test the property shippingAddressId
      //var instance = new MagentoB2B.SalesDataCreditmemoInterface();
      //expect(instance).to.be();
    });

    it('should have the property shippingAmount (base name: "shipping_amount")', function() {
      // uncomment below and update the code to test the property shippingAmount
      //var instance = new MagentoB2B.SalesDataCreditmemoInterface();
      //expect(instance).to.be();
    });

    it('should have the property shippingDiscountTaxCompensationAmount (base name: "shipping_discount_tax_compensation_amount")', function() {
      // uncomment below and update the code to test the property shippingDiscountTaxCompensationAmount
      //var instance = new MagentoB2B.SalesDataCreditmemoInterface();
      //expect(instance).to.be();
    });

    it('should have the property shippingInclTax (base name: "shipping_incl_tax")', function() {
      // uncomment below and update the code to test the property shippingInclTax
      //var instance = new MagentoB2B.SalesDataCreditmemoInterface();
      //expect(instance).to.be();
    });

    it('should have the property shippingTaxAmount (base name: "shipping_tax_amount")', function() {
      // uncomment below and update the code to test the property shippingTaxAmount
      //var instance = new MagentoB2B.SalesDataCreditmemoInterface();
      //expect(instance).to.be();
    });

    it('should have the property state (base name: "state")', function() {
      // uncomment below and update the code to test the property state
      //var instance = new MagentoB2B.SalesDataCreditmemoInterface();
      //expect(instance).to.be();
    });

    it('should have the property storeCurrencyCode (base name: "store_currency_code")', function() {
      // uncomment below and update the code to test the property storeCurrencyCode
      //var instance = new MagentoB2B.SalesDataCreditmemoInterface();
      //expect(instance).to.be();
    });

    it('should have the property storeId (base name: "store_id")', function() {
      // uncomment below and update the code to test the property storeId
      //var instance = new MagentoB2B.SalesDataCreditmemoInterface();
      //expect(instance).to.be();
    });

    it('should have the property storeToBaseRate (base name: "store_to_base_rate")', function() {
      // uncomment below and update the code to test the property storeToBaseRate
      //var instance = new MagentoB2B.SalesDataCreditmemoInterface();
      //expect(instance).to.be();
    });

    it('should have the property storeToOrderRate (base name: "store_to_order_rate")', function() {
      // uncomment below and update the code to test the property storeToOrderRate
      //var instance = new MagentoB2B.SalesDataCreditmemoInterface();
      //expect(instance).to.be();
    });

    it('should have the property subtotal (base name: "subtotal")', function() {
      // uncomment below and update the code to test the property subtotal
      //var instance = new MagentoB2B.SalesDataCreditmemoInterface();
      //expect(instance).to.be();
    });

    it('should have the property subtotalInclTax (base name: "subtotal_incl_tax")', function() {
      // uncomment below and update the code to test the property subtotalInclTax
      //var instance = new MagentoB2B.SalesDataCreditmemoInterface();
      //expect(instance).to.be();
    });

    it('should have the property taxAmount (base name: "tax_amount")', function() {
      // uncomment below and update the code to test the property taxAmount
      //var instance = new MagentoB2B.SalesDataCreditmemoInterface();
      //expect(instance).to.be();
    });

    it('should have the property transactionId (base name: "transaction_id")', function() {
      // uncomment below and update the code to test the property transactionId
      //var instance = new MagentoB2B.SalesDataCreditmemoInterface();
      //expect(instance).to.be();
    });

    it('should have the property updatedAt (base name: "updated_at")', function() {
      // uncomment below and update the code to test the property updatedAt
      //var instance = new MagentoB2B.SalesDataCreditmemoInterface();
      //expect(instance).to.be();
    });

  });

}));
