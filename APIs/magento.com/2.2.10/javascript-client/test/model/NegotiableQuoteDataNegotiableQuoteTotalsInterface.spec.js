/**
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MagentoB2B);
  }
}(this, function(expect, MagentoB2B) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new MagentoB2B.NegotiableQuoteDataNegotiableQuoteTotalsInterface();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('NegotiableQuoteDataNegotiableQuoteTotalsInterface', function() {
    it('should create an instance of NegotiableQuoteDataNegotiableQuoteTotalsInterface', function() {
      // uncomment below and update the code to test NegotiableQuoteDataNegotiableQuoteTotalsInterface
      //var instance = new MagentoB2B.NegotiableQuoteDataNegotiableQuoteTotalsInterface();
      //expect(instance).to.be.a(MagentoB2B.NegotiableQuoteDataNegotiableQuoteTotalsInterface);
    });

    it('should have the property baseCostTotal (base name: "base_cost_total")', function() {
      // uncomment below and update the code to test the property baseCostTotal
      //var instance = new MagentoB2B.NegotiableQuoteDataNegotiableQuoteTotalsInterface();
      //expect(instance).to.be();
    });

    it('should have the property baseOriginalPriceInclTax (base name: "base_original_price_incl_tax")', function() {
      // uncomment below and update the code to test the property baseOriginalPriceInclTax
      //var instance = new MagentoB2B.NegotiableQuoteDataNegotiableQuoteTotalsInterface();
      //expect(instance).to.be();
    });

    it('should have the property baseOriginalTax (base name: "base_original_tax")', function() {
      // uncomment below and update the code to test the property baseOriginalTax
      //var instance = new MagentoB2B.NegotiableQuoteDataNegotiableQuoteTotalsInterface();
      //expect(instance).to.be();
    });

    it('should have the property baseOriginalTotal (base name: "base_original_total")', function() {
      // uncomment below and update the code to test the property baseOriginalTotal
      //var instance = new MagentoB2B.NegotiableQuoteDataNegotiableQuoteTotalsInterface();
      //expect(instance).to.be();
    });

    it('should have the property baseToQuoteRate (base name: "base_to_quote_rate")', function() {
      // uncomment below and update the code to test the property baseToQuoteRate
      //var instance = new MagentoB2B.NegotiableQuoteDataNegotiableQuoteTotalsInterface();
      //expect(instance).to.be();
    });

    it('should have the property costTotal (base name: "cost_total")', function() {
      // uncomment below and update the code to test the property costTotal
      //var instance = new MagentoB2B.NegotiableQuoteDataNegotiableQuoteTotalsInterface();
      //expect(instance).to.be();
    });

    it('should have the property createdAt (base name: "created_at")', function() {
      // uncomment below and update the code to test the property createdAt
      //var instance = new MagentoB2B.NegotiableQuoteDataNegotiableQuoteTotalsInterface();
      //expect(instance).to.be();
    });

    it('should have the property customerGroup (base name: "customer_group")', function() {
      // uncomment below and update the code to test the property customerGroup
      //var instance = new MagentoB2B.NegotiableQuoteDataNegotiableQuoteTotalsInterface();
      //expect(instance).to.be();
    });

    it('should have the property itemsCount (base name: "items_count")', function() {
      // uncomment below and update the code to test the property itemsCount
      //var instance = new MagentoB2B.NegotiableQuoteDataNegotiableQuoteTotalsInterface();
      //expect(instance).to.be();
    });

    it('should have the property negotiatedPriceType (base name: "negotiated_price_type")', function() {
      // uncomment below and update the code to test the property negotiatedPriceType
      //var instance = new MagentoB2B.NegotiableQuoteDataNegotiableQuoteTotalsInterface();
      //expect(instance).to.be();
    });

    it('should have the property negotiatedPriceValue (base name: "negotiated_price_value")', function() {
      // uncomment below and update the code to test the property negotiatedPriceValue
      //var instance = new MagentoB2B.NegotiableQuoteDataNegotiableQuoteTotalsInterface();
      //expect(instance).to.be();
    });

    it('should have the property originalPriceInclTax (base name: "original_price_incl_tax")', function() {
      // uncomment below and update the code to test the property originalPriceInclTax
      //var instance = new MagentoB2B.NegotiableQuoteDataNegotiableQuoteTotalsInterface();
      //expect(instance).to.be();
    });

    it('should have the property originalTax (base name: "original_tax")', function() {
      // uncomment below and update the code to test the property originalTax
      //var instance = new MagentoB2B.NegotiableQuoteDataNegotiableQuoteTotalsInterface();
      //expect(instance).to.be();
    });

    it('should have the property originalTotal (base name: "original_total")', function() {
      // uncomment below and update the code to test the property originalTotal
      //var instance = new MagentoB2B.NegotiableQuoteDataNegotiableQuoteTotalsInterface();
      //expect(instance).to.be();
    });

    it('should have the property quoteStatus (base name: "quote_status")', function() {
      // uncomment below and update the code to test the property quoteStatus
      //var instance = new MagentoB2B.NegotiableQuoteDataNegotiableQuoteTotalsInterface();
      //expect(instance).to.be();
    });

    it('should have the property updatedAt (base name: "updated_at")', function() {
      // uncomment below and update the code to test the property updatedAt
      //var instance = new MagentoB2B.NegotiableQuoteDataNegotiableQuoteTotalsInterface();
      //expect(instance).to.be();
    });

  });

}));
