/**
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MagentoB2B);
  }
}(this, function(expect, MagentoB2B) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new MagentoB2B.NegotiableQuoteDataNegotiableQuoteInterface();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('NegotiableQuoteDataNegotiableQuoteInterface', function() {
    it('should create an instance of NegotiableQuoteDataNegotiableQuoteInterface', function() {
      // uncomment below and update the code to test NegotiableQuoteDataNegotiableQuoteInterface
      //var instance = new MagentoB2B.NegotiableQuoteDataNegotiableQuoteInterface();
      //expect(instance).to.be.a(MagentoB2B.NegotiableQuoteDataNegotiableQuoteInterface);
    });

    it('should have the property appliedRuleIds (base name: "applied_rule_ids")', function() {
      // uncomment below and update the code to test the property appliedRuleIds
      //var instance = new MagentoB2B.NegotiableQuoteDataNegotiableQuoteInterface();
      //expect(instance).to.be();
    });

    it('should have the property baseNegotiatedTotalPrice (base name: "base_negotiated_total_price")', function() {
      // uncomment below and update the code to test the property baseNegotiatedTotalPrice
      //var instance = new MagentoB2B.NegotiableQuoteDataNegotiableQuoteInterface();
      //expect(instance).to.be();
    });

    it('should have the property baseOriginalTotalPrice (base name: "base_original_total_price")', function() {
      // uncomment below and update the code to test the property baseOriginalTotalPrice
      //var instance = new MagentoB2B.NegotiableQuoteDataNegotiableQuoteInterface();
      //expect(instance).to.be();
    });

    it('should have the property creatorId (base name: "creator_id")', function() {
      // uncomment below and update the code to test the property creatorId
      //var instance = new MagentoB2B.NegotiableQuoteDataNegotiableQuoteInterface();
      //expect(instance).to.be();
    });

    it('should have the property creatorType (base name: "creator_type")', function() {
      // uncomment below and update the code to test the property creatorType
      //var instance = new MagentoB2B.NegotiableQuoteDataNegotiableQuoteInterface();
      //expect(instance).to.be();
    });

    it('should have the property deletedSku (base name: "deleted_sku")', function() {
      // uncomment below and update the code to test the property deletedSku
      //var instance = new MagentoB2B.NegotiableQuoteDataNegotiableQuoteInterface();
      //expect(instance).to.be();
    });

    it('should have the property emailNotificationStatus (base name: "email_notification_status")', function() {
      // uncomment below and update the code to test the property emailNotificationStatus
      //var instance = new MagentoB2B.NegotiableQuoteDataNegotiableQuoteInterface();
      //expect(instance).to.be();
    });

    it('should have the property expirationPeriod (base name: "expiration_period")', function() {
      // uncomment below and update the code to test the property expirationPeriod
      //var instance = new MagentoB2B.NegotiableQuoteDataNegotiableQuoteInterface();
      //expect(instance).to.be();
    });

    it('should have the property extensionAttributes (base name: "extension_attributes")', function() {
      // uncomment below and update the code to test the property extensionAttributes
      //var instance = new MagentoB2B.NegotiableQuoteDataNegotiableQuoteInterface();
      //expect(instance).to.be();
    });

    it('should have the property hasUnconfirmedChanges (base name: "has_unconfirmed_changes")', function() {
      // uncomment below and update the code to test the property hasUnconfirmedChanges
      //var instance = new MagentoB2B.NegotiableQuoteDataNegotiableQuoteInterface();
      //expect(instance).to.be();
    });

    it('should have the property isAddressDraft (base name: "is_address_draft")', function() {
      // uncomment below and update the code to test the property isAddressDraft
      //var instance = new MagentoB2B.NegotiableQuoteDataNegotiableQuoteInterface();
      //expect(instance).to.be();
    });

    it('should have the property isCustomerPriceChanged (base name: "is_customer_price_changed")', function() {
      // uncomment below and update the code to test the property isCustomerPriceChanged
      //var instance = new MagentoB2B.NegotiableQuoteDataNegotiableQuoteInterface();
      //expect(instance).to.be();
    });

    it('should have the property isRegularQuote (base name: "is_regular_quote")', function() {
      // uncomment below and update the code to test the property isRegularQuote
      //var instance = new MagentoB2B.NegotiableQuoteDataNegotiableQuoteInterface();
      //expect(instance).to.be();
    });

    it('should have the property isShippingTaxChanged (base name: "is_shipping_tax_changed")', function() {
      // uncomment below and update the code to test the property isShippingTaxChanged
      //var instance = new MagentoB2B.NegotiableQuoteDataNegotiableQuoteInterface();
      //expect(instance).to.be();
    });

    it('should have the property negotiatedPriceType (base name: "negotiated_price_type")', function() {
      // uncomment below and update the code to test the property negotiatedPriceType
      //var instance = new MagentoB2B.NegotiableQuoteDataNegotiableQuoteInterface();
      //expect(instance).to.be();
    });

    it('should have the property negotiatedPriceValue (base name: "negotiated_price_value")', function() {
      // uncomment below and update the code to test the property negotiatedPriceValue
      //var instance = new MagentoB2B.NegotiableQuoteDataNegotiableQuoteInterface();
      //expect(instance).to.be();
    });

    it('should have the property negotiatedTotalPrice (base name: "negotiated_total_price")', function() {
      // uncomment below and update the code to test the property negotiatedTotalPrice
      //var instance = new MagentoB2B.NegotiableQuoteDataNegotiableQuoteInterface();
      //expect(instance).to.be();
    });

    it('should have the property notifications (base name: "notifications")', function() {
      // uncomment below and update the code to test the property notifications
      //var instance = new MagentoB2B.NegotiableQuoteDataNegotiableQuoteInterface();
      //expect(instance).to.be();
    });

    it('should have the property originalTotalPrice (base name: "original_total_price")', function() {
      // uncomment below and update the code to test the property originalTotalPrice
      //var instance = new MagentoB2B.NegotiableQuoteDataNegotiableQuoteInterface();
      //expect(instance).to.be();
    });

    it('should have the property quoteId (base name: "quote_id")', function() {
      // uncomment below and update the code to test the property quoteId
      //var instance = new MagentoB2B.NegotiableQuoteDataNegotiableQuoteInterface();
      //expect(instance).to.be();
    });

    it('should have the property quoteName (base name: "quote_name")', function() {
      // uncomment below and update the code to test the property quoteName
      //var instance = new MagentoB2B.NegotiableQuoteDataNegotiableQuoteInterface();
      //expect(instance).to.be();
    });

    it('should have the property shippingPrice (base name: "shipping_price")', function() {
      // uncomment below and update the code to test the property shippingPrice
      //var instance = new MagentoB2B.NegotiableQuoteDataNegotiableQuoteInterface();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new MagentoB2B.NegotiableQuoteDataNegotiableQuoteInterface();
      //expect(instance).to.be();
    });

  });

}));
