/**
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MagentoB2B);
  }
}(this, function(expect, MagentoB2B) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new MagentoB2B.SalesDataOrderExtensionInterface();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('SalesDataOrderExtensionInterface', function() {
    it('should create an instance of SalesDataOrderExtensionInterface', function() {
      // uncomment below and update the code to test SalesDataOrderExtensionInterface
      //var instance = new MagentoB2B.SalesDataOrderExtensionInterface();
      //expect(instance).to.be.a(MagentoB2B.SalesDataOrderExtensionInterface);
    });

    it('should have the property amazonOrderReferenceId (base name: "amazon_order_reference_id")', function() {
      // uncomment below and update the code to test the property amazonOrderReferenceId
      //var instance = new MagentoB2B.SalesDataOrderExtensionInterface();
      //expect(instance).to.be();
    });

    it('should have the property appliedTaxes (base name: "applied_taxes")', function() {
      // uncomment below and update the code to test the property appliedTaxes
      //var instance = new MagentoB2B.SalesDataOrderExtensionInterface();
      //expect(instance).to.be();
    });

    it('should have the property baseCustomerBalanceAmount (base name: "base_customer_balance_amount")', function() {
      // uncomment below and update the code to test the property baseCustomerBalanceAmount
      //var instance = new MagentoB2B.SalesDataOrderExtensionInterface();
      //expect(instance).to.be();
    });

    it('should have the property baseCustomerBalanceInvoiced (base name: "base_customer_balance_invoiced")', function() {
      // uncomment below and update the code to test the property baseCustomerBalanceInvoiced
      //var instance = new MagentoB2B.SalesDataOrderExtensionInterface();
      //expect(instance).to.be();
    });

    it('should have the property baseCustomerBalanceRefunded (base name: "base_customer_balance_refunded")', function() {
      // uncomment below and update the code to test the property baseCustomerBalanceRefunded
      //var instance = new MagentoB2B.SalesDataOrderExtensionInterface();
      //expect(instance).to.be();
    });

    it('should have the property baseCustomerBalanceTotalRefunded (base name: "base_customer_balance_total_refunded")', function() {
      // uncomment below and update the code to test the property baseCustomerBalanceTotalRefunded
      //var instance = new MagentoB2B.SalesDataOrderExtensionInterface();
      //expect(instance).to.be();
    });

    it('should have the property baseGiftCardsAmount (base name: "base_gift_cards_amount")', function() {
      // uncomment below and update the code to test the property baseGiftCardsAmount
      //var instance = new MagentoB2B.SalesDataOrderExtensionInterface();
      //expect(instance).to.be();
    });

    it('should have the property baseGiftCardsInvoiced (base name: "base_gift_cards_invoiced")', function() {
      // uncomment below and update the code to test the property baseGiftCardsInvoiced
      //var instance = new MagentoB2B.SalesDataOrderExtensionInterface();
      //expect(instance).to.be();
    });

    it('should have the property baseGiftCardsRefunded (base name: "base_gift_cards_refunded")', function() {
      // uncomment below and update the code to test the property baseGiftCardsRefunded
      //var instance = new MagentoB2B.SalesDataOrderExtensionInterface();
      //expect(instance).to.be();
    });

    it('should have the property baseRewardCurrencyAmount (base name: "base_reward_currency_amount")', function() {
      // uncomment below and update the code to test the property baseRewardCurrencyAmount
      //var instance = new MagentoB2B.SalesDataOrderExtensionInterface();
      //expect(instance).to.be();
    });

    it('should have the property companyOrderAttributes (base name: "company_order_attributes")', function() {
      // uncomment below and update the code to test the property companyOrderAttributes
      //var instance = new MagentoB2B.SalesDataOrderExtensionInterface();
      //expect(instance).to.be();
    });

    it('should have the property convertingFromQuote (base name: "converting_from_quote")', function() {
      // uncomment below and update the code to test the property convertingFromQuote
      //var instance = new MagentoB2B.SalesDataOrderExtensionInterface();
      //expect(instance).to.be();
    });

    it('should have the property customerBalanceAmount (base name: "customer_balance_amount")', function() {
      // uncomment below and update the code to test the property customerBalanceAmount
      //var instance = new MagentoB2B.SalesDataOrderExtensionInterface();
      //expect(instance).to.be();
    });

    it('should have the property customerBalanceInvoiced (base name: "customer_balance_invoiced")', function() {
      // uncomment below and update the code to test the property customerBalanceInvoiced
      //var instance = new MagentoB2B.SalesDataOrderExtensionInterface();
      //expect(instance).to.be();
    });

    it('should have the property customerBalanceRefunded (base name: "customer_balance_refunded")', function() {
      // uncomment below and update the code to test the property customerBalanceRefunded
      //var instance = new MagentoB2B.SalesDataOrderExtensionInterface();
      //expect(instance).to.be();
    });

    it('should have the property customerBalanceTotalRefunded (base name: "customer_balance_total_refunded")', function() {
      // uncomment below and update the code to test the property customerBalanceTotalRefunded
      //var instance = new MagentoB2B.SalesDataOrderExtensionInterface();
      //expect(instance).to.be();
    });

    it('should have the property giftCards (base name: "gift_cards")', function() {
      // uncomment below and update the code to test the property giftCards
      //var instance = new MagentoB2B.SalesDataOrderExtensionInterface();
      //expect(instance).to.be();
    });

    it('should have the property giftCardsAmount (base name: "gift_cards_amount")', function() {
      // uncomment below and update the code to test the property giftCardsAmount
      //var instance = new MagentoB2B.SalesDataOrderExtensionInterface();
      //expect(instance).to.be();
    });

    it('should have the property giftCardsInvoiced (base name: "gift_cards_invoiced")', function() {
      // uncomment below and update the code to test the property giftCardsInvoiced
      //var instance = new MagentoB2B.SalesDataOrderExtensionInterface();
      //expect(instance).to.be();
    });

    it('should have the property giftCardsRefunded (base name: "gift_cards_refunded")', function() {
      // uncomment below and update the code to test the property giftCardsRefunded
      //var instance = new MagentoB2B.SalesDataOrderExtensionInterface();
      //expect(instance).to.be();
    });

    it('should have the property giftMessage (base name: "gift_message")', function() {
      // uncomment below and update the code to test the property giftMessage
      //var instance = new MagentoB2B.SalesDataOrderExtensionInterface();
      //expect(instance).to.be();
    });

    it('should have the property gwAddCard (base name: "gw_add_card")', function() {
      // uncomment below and update the code to test the property gwAddCard
      //var instance = new MagentoB2B.SalesDataOrderExtensionInterface();
      //expect(instance).to.be();
    });

    it('should have the property gwAllowGiftReceipt (base name: "gw_allow_gift_receipt")', function() {
      // uncomment below and update the code to test the property gwAllowGiftReceipt
      //var instance = new MagentoB2B.SalesDataOrderExtensionInterface();
      //expect(instance).to.be();
    });

    it('should have the property gwBasePrice (base name: "gw_base_price")', function() {
      // uncomment below and update the code to test the property gwBasePrice
      //var instance = new MagentoB2B.SalesDataOrderExtensionInterface();
      //expect(instance).to.be();
    });

    it('should have the property gwBasePriceInclTax (base name: "gw_base_price_incl_tax")', function() {
      // uncomment below and update the code to test the property gwBasePriceInclTax
      //var instance = new MagentoB2B.SalesDataOrderExtensionInterface();
      //expect(instance).to.be();
    });

    it('should have the property gwBasePriceInvoiced (base name: "gw_base_price_invoiced")', function() {
      // uncomment below and update the code to test the property gwBasePriceInvoiced
      //var instance = new MagentoB2B.SalesDataOrderExtensionInterface();
      //expect(instance).to.be();
    });

    it('should have the property gwBasePriceRefunded (base name: "gw_base_price_refunded")', function() {
      // uncomment below and update the code to test the property gwBasePriceRefunded
      //var instance = new MagentoB2B.SalesDataOrderExtensionInterface();
      //expect(instance).to.be();
    });

    it('should have the property gwBaseTaxAmount (base name: "gw_base_tax_amount")', function() {
      // uncomment below and update the code to test the property gwBaseTaxAmount
      //var instance = new MagentoB2B.SalesDataOrderExtensionInterface();
      //expect(instance).to.be();
    });

    it('should have the property gwBaseTaxAmountInvoiced (base name: "gw_base_tax_amount_invoiced")', function() {
      // uncomment below and update the code to test the property gwBaseTaxAmountInvoiced
      //var instance = new MagentoB2B.SalesDataOrderExtensionInterface();
      //expect(instance).to.be();
    });

    it('should have the property gwBaseTaxAmountRefunded (base name: "gw_base_tax_amount_refunded")', function() {
      // uncomment below and update the code to test the property gwBaseTaxAmountRefunded
      //var instance = new MagentoB2B.SalesDataOrderExtensionInterface();
      //expect(instance).to.be();
    });

    it('should have the property gwCardBasePrice (base name: "gw_card_base_price")', function() {
      // uncomment below and update the code to test the property gwCardBasePrice
      //var instance = new MagentoB2B.SalesDataOrderExtensionInterface();
      //expect(instance).to.be();
    });

    it('should have the property gwCardBasePriceInclTax (base name: "gw_card_base_price_incl_tax")', function() {
      // uncomment below and update the code to test the property gwCardBasePriceInclTax
      //var instance = new MagentoB2B.SalesDataOrderExtensionInterface();
      //expect(instance).to.be();
    });

    it('should have the property gwCardBasePriceInvoiced (base name: "gw_card_base_price_invoiced")', function() {
      // uncomment below and update the code to test the property gwCardBasePriceInvoiced
      //var instance = new MagentoB2B.SalesDataOrderExtensionInterface();
      //expect(instance).to.be();
    });

    it('should have the property gwCardBasePriceRefunded (base name: "gw_card_base_price_refunded")', function() {
      // uncomment below and update the code to test the property gwCardBasePriceRefunded
      //var instance = new MagentoB2B.SalesDataOrderExtensionInterface();
      //expect(instance).to.be();
    });

    it('should have the property gwCardBaseTaxAmount (base name: "gw_card_base_tax_amount")', function() {
      // uncomment below and update the code to test the property gwCardBaseTaxAmount
      //var instance = new MagentoB2B.SalesDataOrderExtensionInterface();
      //expect(instance).to.be();
    });

    it('should have the property gwCardBaseTaxInvoiced (base name: "gw_card_base_tax_invoiced")', function() {
      // uncomment below and update the code to test the property gwCardBaseTaxInvoiced
      //var instance = new MagentoB2B.SalesDataOrderExtensionInterface();
      //expect(instance).to.be();
    });

    it('should have the property gwCardBaseTaxRefunded (base name: "gw_card_base_tax_refunded")', function() {
      // uncomment below and update the code to test the property gwCardBaseTaxRefunded
      //var instance = new MagentoB2B.SalesDataOrderExtensionInterface();
      //expect(instance).to.be();
    });

    it('should have the property gwCardPrice (base name: "gw_card_price")', function() {
      // uncomment below and update the code to test the property gwCardPrice
      //var instance = new MagentoB2B.SalesDataOrderExtensionInterface();
      //expect(instance).to.be();
    });

    it('should have the property gwCardPriceInclTax (base name: "gw_card_price_incl_tax")', function() {
      // uncomment below and update the code to test the property gwCardPriceInclTax
      //var instance = new MagentoB2B.SalesDataOrderExtensionInterface();
      //expect(instance).to.be();
    });

    it('should have the property gwCardPriceInvoiced (base name: "gw_card_price_invoiced")', function() {
      // uncomment below and update the code to test the property gwCardPriceInvoiced
      //var instance = new MagentoB2B.SalesDataOrderExtensionInterface();
      //expect(instance).to.be();
    });

    it('should have the property gwCardPriceRefunded (base name: "gw_card_price_refunded")', function() {
      // uncomment below and update the code to test the property gwCardPriceRefunded
      //var instance = new MagentoB2B.SalesDataOrderExtensionInterface();
      //expect(instance).to.be();
    });

    it('should have the property gwCardTaxAmount (base name: "gw_card_tax_amount")', function() {
      // uncomment below and update the code to test the property gwCardTaxAmount
      //var instance = new MagentoB2B.SalesDataOrderExtensionInterface();
      //expect(instance).to.be();
    });

    it('should have the property gwCardTaxInvoiced (base name: "gw_card_tax_invoiced")', function() {
      // uncomment below and update the code to test the property gwCardTaxInvoiced
      //var instance = new MagentoB2B.SalesDataOrderExtensionInterface();
      //expect(instance).to.be();
    });

    it('should have the property gwCardTaxRefunded (base name: "gw_card_tax_refunded")', function() {
      // uncomment below and update the code to test the property gwCardTaxRefunded
      //var instance = new MagentoB2B.SalesDataOrderExtensionInterface();
      //expect(instance).to.be();
    });

    it('should have the property gwId (base name: "gw_id")', function() {
      // uncomment below and update the code to test the property gwId
      //var instance = new MagentoB2B.SalesDataOrderExtensionInterface();
      //expect(instance).to.be();
    });

    it('should have the property gwItemsBasePrice (base name: "gw_items_base_price")', function() {
      // uncomment below and update the code to test the property gwItemsBasePrice
      //var instance = new MagentoB2B.SalesDataOrderExtensionInterface();
      //expect(instance).to.be();
    });

    it('should have the property gwItemsBasePriceInclTax (base name: "gw_items_base_price_incl_tax")', function() {
      // uncomment below and update the code to test the property gwItemsBasePriceInclTax
      //var instance = new MagentoB2B.SalesDataOrderExtensionInterface();
      //expect(instance).to.be();
    });

    it('should have the property gwItemsBasePriceInvoiced (base name: "gw_items_base_price_invoiced")', function() {
      // uncomment below and update the code to test the property gwItemsBasePriceInvoiced
      //var instance = new MagentoB2B.SalesDataOrderExtensionInterface();
      //expect(instance).to.be();
    });

    it('should have the property gwItemsBasePriceRefunded (base name: "gw_items_base_price_refunded")', function() {
      // uncomment below and update the code to test the property gwItemsBasePriceRefunded
      //var instance = new MagentoB2B.SalesDataOrderExtensionInterface();
      //expect(instance).to.be();
    });

    it('should have the property gwItemsBaseTaxAmount (base name: "gw_items_base_tax_amount")', function() {
      // uncomment below and update the code to test the property gwItemsBaseTaxAmount
      //var instance = new MagentoB2B.SalesDataOrderExtensionInterface();
      //expect(instance).to.be();
    });

    it('should have the property gwItemsBaseTaxInvoiced (base name: "gw_items_base_tax_invoiced")', function() {
      // uncomment below and update the code to test the property gwItemsBaseTaxInvoiced
      //var instance = new MagentoB2B.SalesDataOrderExtensionInterface();
      //expect(instance).to.be();
    });

    it('should have the property gwItemsBaseTaxRefunded (base name: "gw_items_base_tax_refunded")', function() {
      // uncomment below and update the code to test the property gwItemsBaseTaxRefunded
      //var instance = new MagentoB2B.SalesDataOrderExtensionInterface();
      //expect(instance).to.be();
    });

    it('should have the property gwItemsPrice (base name: "gw_items_price")', function() {
      // uncomment below and update the code to test the property gwItemsPrice
      //var instance = new MagentoB2B.SalesDataOrderExtensionInterface();
      //expect(instance).to.be();
    });

    it('should have the property gwItemsPriceInclTax (base name: "gw_items_price_incl_tax")', function() {
      // uncomment below and update the code to test the property gwItemsPriceInclTax
      //var instance = new MagentoB2B.SalesDataOrderExtensionInterface();
      //expect(instance).to.be();
    });

    it('should have the property gwItemsPriceInvoiced (base name: "gw_items_price_invoiced")', function() {
      // uncomment below and update the code to test the property gwItemsPriceInvoiced
      //var instance = new MagentoB2B.SalesDataOrderExtensionInterface();
      //expect(instance).to.be();
    });

    it('should have the property gwItemsPriceRefunded (base name: "gw_items_price_refunded")', function() {
      // uncomment below and update the code to test the property gwItemsPriceRefunded
      //var instance = new MagentoB2B.SalesDataOrderExtensionInterface();
      //expect(instance).to.be();
    });

    it('should have the property gwItemsTaxAmount (base name: "gw_items_tax_amount")', function() {
      // uncomment below and update the code to test the property gwItemsTaxAmount
      //var instance = new MagentoB2B.SalesDataOrderExtensionInterface();
      //expect(instance).to.be();
    });

    it('should have the property gwItemsTaxInvoiced (base name: "gw_items_tax_invoiced")', function() {
      // uncomment below and update the code to test the property gwItemsTaxInvoiced
      //var instance = new MagentoB2B.SalesDataOrderExtensionInterface();
      //expect(instance).to.be();
    });

    it('should have the property gwItemsTaxRefunded (base name: "gw_items_tax_refunded")', function() {
      // uncomment below and update the code to test the property gwItemsTaxRefunded
      //var instance = new MagentoB2B.SalesDataOrderExtensionInterface();
      //expect(instance).to.be();
    });

    it('should have the property gwPrice (base name: "gw_price")', function() {
      // uncomment below and update the code to test the property gwPrice
      //var instance = new MagentoB2B.SalesDataOrderExtensionInterface();
      //expect(instance).to.be();
    });

    it('should have the property gwPriceInclTax (base name: "gw_price_incl_tax")', function() {
      // uncomment below and update the code to test the property gwPriceInclTax
      //var instance = new MagentoB2B.SalesDataOrderExtensionInterface();
      //expect(instance).to.be();
    });

    it('should have the property gwPriceInvoiced (base name: "gw_price_invoiced")', function() {
      // uncomment below and update the code to test the property gwPriceInvoiced
      //var instance = new MagentoB2B.SalesDataOrderExtensionInterface();
      //expect(instance).to.be();
    });

    it('should have the property gwPriceRefunded (base name: "gw_price_refunded")', function() {
      // uncomment below and update the code to test the property gwPriceRefunded
      //var instance = new MagentoB2B.SalesDataOrderExtensionInterface();
      //expect(instance).to.be();
    });

    it('should have the property gwTaxAmount (base name: "gw_tax_amount")', function() {
      // uncomment below and update the code to test the property gwTaxAmount
      //var instance = new MagentoB2B.SalesDataOrderExtensionInterface();
      //expect(instance).to.be();
    });

    it('should have the property gwTaxAmountInvoiced (base name: "gw_tax_amount_invoiced")', function() {
      // uncomment below and update the code to test the property gwTaxAmountInvoiced
      //var instance = new MagentoB2B.SalesDataOrderExtensionInterface();
      //expect(instance).to.be();
    });

    it('should have the property gwTaxAmountRefunded (base name: "gw_tax_amount_refunded")', function() {
      // uncomment below and update the code to test the property gwTaxAmountRefunded
      //var instance = new MagentoB2B.SalesDataOrderExtensionInterface();
      //expect(instance).to.be();
    });

    it('should have the property itemAppliedTaxes (base name: "item_applied_taxes")', function() {
      // uncomment below and update the code to test the property itemAppliedTaxes
      //var instance = new MagentoB2B.SalesDataOrderExtensionInterface();
      //expect(instance).to.be();
    });

    it('should have the property paymentAdditionalInfo (base name: "payment_additional_info")', function() {
      // uncomment below and update the code to test the property paymentAdditionalInfo
      //var instance = new MagentoB2B.SalesDataOrderExtensionInterface();
      //expect(instance).to.be();
    });

    it('should have the property rewardCurrencyAmount (base name: "reward_currency_amount")', function() {
      // uncomment below and update the code to test the property rewardCurrencyAmount
      //var instance = new MagentoB2B.SalesDataOrderExtensionInterface();
      //expect(instance).to.be();
    });

    it('should have the property rewardPointsBalance (base name: "reward_points_balance")', function() {
      // uncomment below and update the code to test the property rewardPointsBalance
      //var instance = new MagentoB2B.SalesDataOrderExtensionInterface();
      //expect(instance).to.be();
    });

    it('should have the property shippingAssignments (base name: "shipping_assignments")', function() {
      // uncomment below and update the code to test the property shippingAssignments
      //var instance = new MagentoB2B.SalesDataOrderExtensionInterface();
      //expect(instance).to.be();
    });

  });

}));
