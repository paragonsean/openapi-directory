/**
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MagentoB2B);
  }
}(this, function(expect, MagentoB2B) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new MagentoB2B.SalesDataOrderAddressInterface();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('SalesDataOrderAddressInterface', function() {
    it('should create an instance of SalesDataOrderAddressInterface', function() {
      // uncomment below and update the code to test SalesDataOrderAddressInterface
      //var instance = new MagentoB2B.SalesDataOrderAddressInterface();
      //expect(instance).to.be.a(MagentoB2B.SalesDataOrderAddressInterface);
    });

    it('should have the property addressType (base name: "address_type")', function() {
      // uncomment below and update the code to test the property addressType
      //var instance = new MagentoB2B.SalesDataOrderAddressInterface();
      //expect(instance).to.be();
    });

    it('should have the property city (base name: "city")', function() {
      // uncomment below and update the code to test the property city
      //var instance = new MagentoB2B.SalesDataOrderAddressInterface();
      //expect(instance).to.be();
    });

    it('should have the property company (base name: "company")', function() {
      // uncomment below and update the code to test the property company
      //var instance = new MagentoB2B.SalesDataOrderAddressInterface();
      //expect(instance).to.be();
    });

    it('should have the property countryId (base name: "country_id")', function() {
      // uncomment below and update the code to test the property countryId
      //var instance = new MagentoB2B.SalesDataOrderAddressInterface();
      //expect(instance).to.be();
    });

    it('should have the property customerAddressId (base name: "customer_address_id")', function() {
      // uncomment below and update the code to test the property customerAddressId
      //var instance = new MagentoB2B.SalesDataOrderAddressInterface();
      //expect(instance).to.be();
    });

    it('should have the property customerId (base name: "customer_id")', function() {
      // uncomment below and update the code to test the property customerId
      //var instance = new MagentoB2B.SalesDataOrderAddressInterface();
      //expect(instance).to.be();
    });

    it('should have the property email (base name: "email")', function() {
      // uncomment below and update the code to test the property email
      //var instance = new MagentoB2B.SalesDataOrderAddressInterface();
      //expect(instance).to.be();
    });

    it('should have the property entityId (base name: "entity_id")', function() {
      // uncomment below and update the code to test the property entityId
      //var instance = new MagentoB2B.SalesDataOrderAddressInterface();
      //expect(instance).to.be();
    });

    it('should have the property extensionAttributes (base name: "extension_attributes")', function() {
      // uncomment below and update the code to test the property extensionAttributes
      //var instance = new MagentoB2B.SalesDataOrderAddressInterface();
      //expect(instance).to.be();
    });

    it('should have the property fax (base name: "fax")', function() {
      // uncomment below and update the code to test the property fax
      //var instance = new MagentoB2B.SalesDataOrderAddressInterface();
      //expect(instance).to.be();
    });

    it('should have the property firstname (base name: "firstname")', function() {
      // uncomment below and update the code to test the property firstname
      //var instance = new MagentoB2B.SalesDataOrderAddressInterface();
      //expect(instance).to.be();
    });

    it('should have the property lastname (base name: "lastname")', function() {
      // uncomment below and update the code to test the property lastname
      //var instance = new MagentoB2B.SalesDataOrderAddressInterface();
      //expect(instance).to.be();
    });

    it('should have the property middlename (base name: "middlename")', function() {
      // uncomment below and update the code to test the property middlename
      //var instance = new MagentoB2B.SalesDataOrderAddressInterface();
      //expect(instance).to.be();
    });

    it('should have the property parentId (base name: "parent_id")', function() {
      // uncomment below and update the code to test the property parentId
      //var instance = new MagentoB2B.SalesDataOrderAddressInterface();
      //expect(instance).to.be();
    });

    it('should have the property postcode (base name: "postcode")', function() {
      // uncomment below and update the code to test the property postcode
      //var instance = new MagentoB2B.SalesDataOrderAddressInterface();
      //expect(instance).to.be();
    });

    it('should have the property prefix (base name: "prefix")', function() {
      // uncomment below and update the code to test the property prefix
      //var instance = new MagentoB2B.SalesDataOrderAddressInterface();
      //expect(instance).to.be();
    });

    it('should have the property region (base name: "region")', function() {
      // uncomment below and update the code to test the property region
      //var instance = new MagentoB2B.SalesDataOrderAddressInterface();
      //expect(instance).to.be();
    });

    it('should have the property regionCode (base name: "region_code")', function() {
      // uncomment below and update the code to test the property regionCode
      //var instance = new MagentoB2B.SalesDataOrderAddressInterface();
      //expect(instance).to.be();
    });

    it('should have the property regionId (base name: "region_id")', function() {
      // uncomment below and update the code to test the property regionId
      //var instance = new MagentoB2B.SalesDataOrderAddressInterface();
      //expect(instance).to.be();
    });

    it('should have the property street (base name: "street")', function() {
      // uncomment below and update the code to test the property street
      //var instance = new MagentoB2B.SalesDataOrderAddressInterface();
      //expect(instance).to.be();
    });

    it('should have the property suffix (base name: "suffix")', function() {
      // uncomment below and update the code to test the property suffix
      //var instance = new MagentoB2B.SalesDataOrderAddressInterface();
      //expect(instance).to.be();
    });

    it('should have the property telephone (base name: "telephone")', function() {
      // uncomment below and update the code to test the property telephone
      //var instance = new MagentoB2B.SalesDataOrderAddressInterface();
      //expect(instance).to.be();
    });

    it('should have the property vatId (base name: "vat_id")', function() {
      // uncomment below and update the code to test the property vatId
      //var instance = new MagentoB2B.SalesDataOrderAddressInterface();
      //expect(instance).to.be();
    });

    it('should have the property vatIsValid (base name: "vat_is_valid")', function() {
      // uncomment below and update the code to test the property vatIsValid
      //var instance = new MagentoB2B.SalesDataOrderAddressInterface();
      //expect(instance).to.be();
    });

    it('should have the property vatRequestDate (base name: "vat_request_date")', function() {
      // uncomment below and update the code to test the property vatRequestDate
      //var instance = new MagentoB2B.SalesDataOrderAddressInterface();
      //expect(instance).to.be();
    });

    it('should have the property vatRequestId (base name: "vat_request_id")', function() {
      // uncomment below and update the code to test the property vatRequestId
      //var instance = new MagentoB2B.SalesDataOrderAddressInterface();
      //expect(instance).to.be();
    });

    it('should have the property vatRequestSuccess (base name: "vat_request_success")', function() {
      // uncomment below and update the code to test the property vatRequestSuccess
      //var instance = new MagentoB2B.SalesDataOrderAddressInterface();
      //expect(instance).to.be();
    });

  });

}));
