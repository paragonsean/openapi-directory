/**
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MagentoB2B);
  }
}(this, function(expect, MagentoB2B) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new MagentoB2B.SalesDataCreditmemoItemInterface();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('SalesDataCreditmemoItemInterface', function() {
    it('should create an instance of SalesDataCreditmemoItemInterface', function() {
      // uncomment below and update the code to test SalesDataCreditmemoItemInterface
      //var instance = new MagentoB2B.SalesDataCreditmemoItemInterface();
      //expect(instance).to.be.a(MagentoB2B.SalesDataCreditmemoItemInterface);
    });

    it('should have the property additionalData (base name: "additional_data")', function() {
      // uncomment below and update the code to test the property additionalData
      //var instance = new MagentoB2B.SalesDataCreditmemoItemInterface();
      //expect(instance).to.be();
    });

    it('should have the property baseCost (base name: "base_cost")', function() {
      // uncomment below and update the code to test the property baseCost
      //var instance = new MagentoB2B.SalesDataCreditmemoItemInterface();
      //expect(instance).to.be();
    });

    it('should have the property baseDiscountAmount (base name: "base_discount_amount")', function() {
      // uncomment below and update the code to test the property baseDiscountAmount
      //var instance = new MagentoB2B.SalesDataCreditmemoItemInterface();
      //expect(instance).to.be();
    });

    it('should have the property baseDiscountTaxCompensationAmount (base name: "base_discount_tax_compensation_amount")', function() {
      // uncomment below and update the code to test the property baseDiscountTaxCompensationAmount
      //var instance = new MagentoB2B.SalesDataCreditmemoItemInterface();
      //expect(instance).to.be();
    });

    it('should have the property basePrice (base name: "base_price")', function() {
      // uncomment below and update the code to test the property basePrice
      //var instance = new MagentoB2B.SalesDataCreditmemoItemInterface();
      //expect(instance).to.be();
    });

    it('should have the property basePriceInclTax (base name: "base_price_incl_tax")', function() {
      // uncomment below and update the code to test the property basePriceInclTax
      //var instance = new MagentoB2B.SalesDataCreditmemoItemInterface();
      //expect(instance).to.be();
    });

    it('should have the property baseRowTotal (base name: "base_row_total")', function() {
      // uncomment below and update the code to test the property baseRowTotal
      //var instance = new MagentoB2B.SalesDataCreditmemoItemInterface();
      //expect(instance).to.be();
    });

    it('should have the property baseRowTotalInclTax (base name: "base_row_total_incl_tax")', function() {
      // uncomment below and update the code to test the property baseRowTotalInclTax
      //var instance = new MagentoB2B.SalesDataCreditmemoItemInterface();
      //expect(instance).to.be();
    });

    it('should have the property baseTaxAmount (base name: "base_tax_amount")', function() {
      // uncomment below and update the code to test the property baseTaxAmount
      //var instance = new MagentoB2B.SalesDataCreditmemoItemInterface();
      //expect(instance).to.be();
    });

    it('should have the property baseWeeeTaxAppliedAmount (base name: "base_weee_tax_applied_amount")', function() {
      // uncomment below and update the code to test the property baseWeeeTaxAppliedAmount
      //var instance = new MagentoB2B.SalesDataCreditmemoItemInterface();
      //expect(instance).to.be();
    });

    it('should have the property baseWeeeTaxAppliedRowAmnt (base name: "base_weee_tax_applied_row_amnt")', function() {
      // uncomment below and update the code to test the property baseWeeeTaxAppliedRowAmnt
      //var instance = new MagentoB2B.SalesDataCreditmemoItemInterface();
      //expect(instance).to.be();
    });

    it('should have the property baseWeeeTaxDisposition (base name: "base_weee_tax_disposition")', function() {
      // uncomment below and update the code to test the property baseWeeeTaxDisposition
      //var instance = new MagentoB2B.SalesDataCreditmemoItemInterface();
      //expect(instance).to.be();
    });

    it('should have the property baseWeeeTaxRowDisposition (base name: "base_weee_tax_row_disposition")', function() {
      // uncomment below and update the code to test the property baseWeeeTaxRowDisposition
      //var instance = new MagentoB2B.SalesDataCreditmemoItemInterface();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new MagentoB2B.SalesDataCreditmemoItemInterface();
      //expect(instance).to.be();
    });

    it('should have the property discountAmount (base name: "discount_amount")', function() {
      // uncomment below and update the code to test the property discountAmount
      //var instance = new MagentoB2B.SalesDataCreditmemoItemInterface();
      //expect(instance).to.be();
    });

    it('should have the property discountTaxCompensationAmount (base name: "discount_tax_compensation_amount")', function() {
      // uncomment below and update the code to test the property discountTaxCompensationAmount
      //var instance = new MagentoB2B.SalesDataCreditmemoItemInterface();
      //expect(instance).to.be();
    });

    it('should have the property entityId (base name: "entity_id")', function() {
      // uncomment below and update the code to test the property entityId
      //var instance = new MagentoB2B.SalesDataCreditmemoItemInterface();
      //expect(instance).to.be();
    });

    it('should have the property extensionAttributes (base name: "extension_attributes")', function() {
      // uncomment below and update the code to test the property extensionAttributes
      //var instance = new MagentoB2B.SalesDataCreditmemoItemInterface();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new MagentoB2B.SalesDataCreditmemoItemInterface();
      //expect(instance).to.be();
    });

    it('should have the property orderItemId (base name: "order_item_id")', function() {
      // uncomment below and update the code to test the property orderItemId
      //var instance = new MagentoB2B.SalesDataCreditmemoItemInterface();
      //expect(instance).to.be();
    });

    it('should have the property parentId (base name: "parent_id")', function() {
      // uncomment below and update the code to test the property parentId
      //var instance = new MagentoB2B.SalesDataCreditmemoItemInterface();
      //expect(instance).to.be();
    });

    it('should have the property price (base name: "price")', function() {
      // uncomment below and update the code to test the property price
      //var instance = new MagentoB2B.SalesDataCreditmemoItemInterface();
      //expect(instance).to.be();
    });

    it('should have the property priceInclTax (base name: "price_incl_tax")', function() {
      // uncomment below and update the code to test the property priceInclTax
      //var instance = new MagentoB2B.SalesDataCreditmemoItemInterface();
      //expect(instance).to.be();
    });

    it('should have the property productId (base name: "product_id")', function() {
      // uncomment below and update the code to test the property productId
      //var instance = new MagentoB2B.SalesDataCreditmemoItemInterface();
      //expect(instance).to.be();
    });

    it('should have the property qty (base name: "qty")', function() {
      // uncomment below and update the code to test the property qty
      //var instance = new MagentoB2B.SalesDataCreditmemoItemInterface();
      //expect(instance).to.be();
    });

    it('should have the property rowTotal (base name: "row_total")', function() {
      // uncomment below and update the code to test the property rowTotal
      //var instance = new MagentoB2B.SalesDataCreditmemoItemInterface();
      //expect(instance).to.be();
    });

    it('should have the property rowTotalInclTax (base name: "row_total_incl_tax")', function() {
      // uncomment below and update the code to test the property rowTotalInclTax
      //var instance = new MagentoB2B.SalesDataCreditmemoItemInterface();
      //expect(instance).to.be();
    });

    it('should have the property sku (base name: "sku")', function() {
      // uncomment below and update the code to test the property sku
      //var instance = new MagentoB2B.SalesDataCreditmemoItemInterface();
      //expect(instance).to.be();
    });

    it('should have the property taxAmount (base name: "tax_amount")', function() {
      // uncomment below and update the code to test the property taxAmount
      //var instance = new MagentoB2B.SalesDataCreditmemoItemInterface();
      //expect(instance).to.be();
    });

    it('should have the property weeeTaxApplied (base name: "weee_tax_applied")', function() {
      // uncomment below and update the code to test the property weeeTaxApplied
      //var instance = new MagentoB2B.SalesDataCreditmemoItemInterface();
      //expect(instance).to.be();
    });

    it('should have the property weeeTaxAppliedAmount (base name: "weee_tax_applied_amount")', function() {
      // uncomment below and update the code to test the property weeeTaxAppliedAmount
      //var instance = new MagentoB2B.SalesDataCreditmemoItemInterface();
      //expect(instance).to.be();
    });

    it('should have the property weeeTaxAppliedRowAmount (base name: "weee_tax_applied_row_amount")', function() {
      // uncomment below and update the code to test the property weeeTaxAppliedRowAmount
      //var instance = new MagentoB2B.SalesDataCreditmemoItemInterface();
      //expect(instance).to.be();
    });

    it('should have the property weeeTaxDisposition (base name: "weee_tax_disposition")', function() {
      // uncomment below and update the code to test the property weeeTaxDisposition
      //var instance = new MagentoB2B.SalesDataCreditmemoItemInterface();
      //expect(instance).to.be();
    });

    it('should have the property weeeTaxRowDisposition (base name: "weee_tax_row_disposition")', function() {
      // uncomment below and update the code to test the property weeeTaxRowDisposition
      //var instance = new MagentoB2B.SalesDataCreditmemoItemInterface();
      //expect(instance).to.be();
    });

  });

}));
