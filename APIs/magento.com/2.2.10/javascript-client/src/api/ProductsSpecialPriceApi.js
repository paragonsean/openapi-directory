/**
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CatalogDataPriceUpdateResultInterface from '../model/CatalogDataPriceUpdateResultInterface';
import CatalogSpecialPriceStorageV1UpdatePostRequest from '../model/CatalogSpecialPriceStorageV1UpdatePostRequest';
import ErrorResponse from '../model/ErrorResponse';

/**
* ProductsSpecialPrice service.
* @module api/ProductsSpecialPriceApi
* @version 2.2.10
*/
export default class ProductsSpecialPriceApi {

    /**
    * Constructs a new ProductsSpecialPriceApi. 
    * @alias module:api/ProductsSpecialPriceApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the catalogSpecialPriceStorageV1UpdatePost operation.
     * @callback module:api/ProductsSpecialPriceApi~catalogSpecialPriceStorageV1UpdatePostCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/CatalogDataPriceUpdateResultInterface>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * products/special-price
     * Add or update product's special price. If any items will have invalid price, store id, sku or dates, they will be marked as failed and excluded from update list and \\Magento\\Catalog\\Api\\Data\\PriceUpdateResultInterface[] with problem description will be returned. If there were no failed items during update empty array will be returned. If error occurred during the update exception will be thrown.
     * @param {Object} opts Optional parameters
     * @param {module:model/CatalogSpecialPriceStorageV1UpdatePostRequest} [catalogSpecialPriceStorageV1UpdatePostRequest] 
     * @param {module:api/ProductsSpecialPriceApi~catalogSpecialPriceStorageV1UpdatePostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/CatalogDataPriceUpdateResultInterface>}
     */
    catalogSpecialPriceStorageV1UpdatePost(opts, callback) {
      opts = opts || {};
      let postBody = opts['catalogSpecialPriceStorageV1UpdatePostRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json', 'application/xml'];
      let accepts = ['application/json', 'application/xml'];
      let returnType = [CatalogDataPriceUpdateResultInterface];
      return this.apiClient.callApi(
        '/V1/products/special-price', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
