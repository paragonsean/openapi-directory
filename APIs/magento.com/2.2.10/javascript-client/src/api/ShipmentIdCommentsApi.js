/**
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ErrorResponse from '../model/ErrorResponse';
import SalesDataShipmentCommentInterface from '../model/SalesDataShipmentCommentInterface';
import SalesDataShipmentCommentSearchResultInterface from '../model/SalesDataShipmentCommentSearchResultInterface';
import SalesShipmentCommentRepositoryV1SavePostRequest from '../model/SalesShipmentCommentRepositoryV1SavePostRequest';

/**
* ShipmentIdComments service.
* @module api/ShipmentIdCommentsApi
* @version 2.2.10
*/
export default class ShipmentIdCommentsApi {

    /**
    * Constructs a new ShipmentIdCommentsApi. 
    * @alias module:api/ShipmentIdCommentsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the salesShipmentCommentRepositoryV1SavePost operation.
     * @callback module:api/ShipmentIdCommentsApi~salesShipmentCommentRepositoryV1SavePostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SalesDataShipmentCommentInterface} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * shipment/{id}/comments
     * Performs persist operations for a specified shipment comment.
     * @param {String} id 
     * @param {Object} opts Optional parameters
     * @param {module:model/SalesShipmentCommentRepositoryV1SavePostRequest} [salesShipmentCommentRepositoryV1SavePostRequest] 
     * @param {module:api/ShipmentIdCommentsApi~salesShipmentCommentRepositoryV1SavePostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SalesDataShipmentCommentInterface}
     */
    salesShipmentCommentRepositoryV1SavePost(id, opts, callback) {
      opts = opts || {};
      let postBody = opts['salesShipmentCommentRepositoryV1SavePostRequest'];
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling salesShipmentCommentRepositoryV1SavePost");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json', 'application/xml'];
      let accepts = ['application/json', 'application/xml'];
      let returnType = SalesDataShipmentCommentInterface;
      return this.apiClient.callApi(
        '/V1/shipment/{id}/comments', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the salesShipmentManagementV1GetCommentsListGet operation.
     * @callback module:api/ShipmentIdCommentsApi~salesShipmentManagementV1GetCommentsListGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SalesDataShipmentCommentSearchResultInterface} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * shipment/{id}/comments
     * Lists comments for a specified shipment.
     * @param {Number} id The shipment ID.
     * @param {module:api/ShipmentIdCommentsApi~salesShipmentManagementV1GetCommentsListGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SalesDataShipmentCommentSearchResultInterface}
     */
    salesShipmentManagementV1GetCommentsListGet(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling salesShipmentManagementV1GetCommentsListGet");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = SalesDataShipmentCommentSearchResultInterface;
      return this.apiClient.callApi(
        '/V1/shipment/{id}/comments', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
