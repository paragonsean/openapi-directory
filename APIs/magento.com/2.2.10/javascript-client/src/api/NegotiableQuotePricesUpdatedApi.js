/**
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ErrorResponse from '../model/ErrorResponse';
import NegotiableQuoteNegotiableQuotePriceManagementV1PricesUpdatedPostRequest from '../model/NegotiableQuoteNegotiableQuotePriceManagementV1PricesUpdatedPostRequest';

/**
* NegotiableQuotePricesUpdated service.
* @module api/NegotiableQuotePricesUpdatedApi
* @version 2.2.10
*/
export default class NegotiableQuotePricesUpdatedApi {

    /**
    * Constructs a new NegotiableQuotePricesUpdatedApi. 
    * @alias module:api/NegotiableQuotePricesUpdatedApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the negotiableQuoteNegotiableQuotePriceManagementV1PricesUpdatedPost operation.
     * @callback module:api/NegotiableQuotePricesUpdatedApi~negotiableQuoteNegotiableQuotePriceManagementV1PricesUpdatedPostCallback
     * @param {String} error Error message, if any.
     * @param {Boolean} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * negotiableQuote/pricesUpdated
     * Refreshes item prices, taxes, discounts, cart rules in the negotiable quote as per the latest changes in the catalog / shared catalog and in the price rules. Depending on the negotiable quote state and totals, all or just some of quote numbers will be recalculated. 'Update Prices' parameter forces refresh on any quote that is not locked for admin user, including the quotes with a negotiated price. The request can be applied to one or more quotes at the same time.
     * @param {Object} opts Optional parameters
     * @param {module:model/NegotiableQuoteNegotiableQuotePriceManagementV1PricesUpdatedPostRequest} [negotiableQuoteNegotiableQuotePriceManagementV1PricesUpdatedPostRequest] 
     * @param {module:api/NegotiableQuotePricesUpdatedApi~negotiableQuoteNegotiableQuotePriceManagementV1PricesUpdatedPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Boolean}
     */
    negotiableQuoteNegotiableQuotePriceManagementV1PricesUpdatedPost(opts, callback) {
      opts = opts || {};
      let postBody = opts['negotiableQuoteNegotiableQuotePriceManagementV1PricesUpdatedPostRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json', 'application/xml'];
      let accepts = ['application/json', 'application/xml'];
      let returnType = 'Boolean';
      return this.apiClient.callApi(
        '/V1/negotiableQuote/pricesUpdated', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
