/**
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CatalogDataPriceUpdateResultInterface from '../model/CatalogDataPriceUpdateResultInterface';
import CatalogTierPriceStorageV1ReplacePutRequest from '../model/CatalogTierPriceStorageV1ReplacePutRequest';
import ErrorResponse from '../model/ErrorResponse';

/**
* ProductsTierPrices service.
* @module api/ProductsTierPricesApi
* @version 2.2.10
*/
export default class ProductsTierPricesApi {

    /**
    * Constructs a new ProductsTierPricesApi. 
    * @alias module:api/ProductsTierPricesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the catalogTierPriceStorageV1ReplacePut operation.
     * @callback module:api/ProductsTierPricesApi~catalogTierPriceStorageV1ReplacePutCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/CatalogDataPriceUpdateResultInterface>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * products/tier-prices
     * Remove existing tier prices and replace them with the new ones. If any items will have invalid price, price type, website id, sku, customer group or quantity, they will be marked as failed and excluded from replace list and \\Magento\\Catalog\\Api\\Data\\PriceUpdateResultInterface[] with problem description will be returned. If there were no failed items during update empty array will be returned. If error occurred during the update exception will be thrown.
     * @param {Object} opts Optional parameters
     * @param {module:model/CatalogTierPriceStorageV1ReplacePutRequest} [catalogTierPriceStorageV1ReplacePutRequest] 
     * @param {module:api/ProductsTierPricesApi~catalogTierPriceStorageV1ReplacePutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/CatalogDataPriceUpdateResultInterface>}
     */
    catalogTierPriceStorageV1ReplacePut(opts, callback) {
      opts = opts || {};
      let postBody = opts['catalogTierPriceStorageV1ReplacePutRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json', 'application/xml'];
      let accepts = ['application/json', 'application/xml'];
      let returnType = [CatalogDataPriceUpdateResultInterface];
      return this.apiClient.callApi(
        '/V1/products/tier-prices', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the catalogTierPriceStorageV1UpdatePost operation.
     * @callback module:api/ProductsTierPricesApi~catalogTierPriceStorageV1UpdatePostCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/CatalogDataPriceUpdateResultInterface>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * products/tier-prices
     * Add or update product prices. If any items will have invalid price, price type, website id, sku, customer group or quantity, they will be marked as failed and excluded from update list and \\Magento\\Catalog\\Api\\Data\\PriceUpdateResultInterface[] with problem description will be returned. If there were no failed items during update empty array will be returned. If error occurred during the update exception will be thrown.
     * @param {Object} opts Optional parameters
     * @param {module:model/CatalogTierPriceStorageV1ReplacePutRequest} [catalogTierPriceStorageV1ReplacePutRequest] 
     * @param {module:api/ProductsTierPricesApi~catalogTierPriceStorageV1UpdatePostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/CatalogDataPriceUpdateResultInterface>}
     */
    catalogTierPriceStorageV1UpdatePost(opts, callback) {
      opts = opts || {};
      let postBody = opts['catalogTierPriceStorageV1ReplacePutRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json', 'application/xml'];
      let accepts = ['application/json', 'application/xml'];
      let returnType = [CatalogDataPriceUpdateResultInterface];
      return this.apiClient.callApi(
        '/V1/products/tier-prices', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
