/**
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CatalogDataProductInterface from './CatalogDataProductInterface';
import ConfigurableProductDataOptionInterface from './ConfigurableProductDataOptionInterface';

/**
 * The ConfigurableProductConfigurableProductManagementV1GenerateVariationPutRequest model module.
 * @module model/ConfigurableProductConfigurableProductManagementV1GenerateVariationPutRequest
 * @version 2.2.10
 */
class ConfigurableProductConfigurableProductManagementV1GenerateVariationPutRequest {
    /**
     * Constructs a new <code>ConfigurableProductConfigurableProductManagementV1GenerateVariationPutRequest</code>.
     * @alias module:model/ConfigurableProductConfigurableProductManagementV1GenerateVariationPutRequest
     * @param options {Array.<module:model/ConfigurableProductDataOptionInterface>} 
     * @param product {module:model/CatalogDataProductInterface} 
     */
    constructor(options, product) { 
        
        ConfigurableProductConfigurableProductManagementV1GenerateVariationPutRequest.initialize(this, options, product);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, options, product) { 
        obj['options'] = options;
        obj['product'] = product;
    }

    /**
     * Constructs a <code>ConfigurableProductConfigurableProductManagementV1GenerateVariationPutRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ConfigurableProductConfigurableProductManagementV1GenerateVariationPutRequest} obj Optional instance to populate.
     * @return {module:model/ConfigurableProductConfigurableProductManagementV1GenerateVariationPutRequest} The populated <code>ConfigurableProductConfigurableProductManagementV1GenerateVariationPutRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ConfigurableProductConfigurableProductManagementV1GenerateVariationPutRequest();

            if (data.hasOwnProperty('options')) {
                obj['options'] = ApiClient.convertToType(data['options'], [ConfigurableProductDataOptionInterface]);
            }
            if (data.hasOwnProperty('product')) {
                obj['product'] = CatalogDataProductInterface.constructFromObject(data['product']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ConfigurableProductConfigurableProductManagementV1GenerateVariationPutRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ConfigurableProductConfigurableProductManagementV1GenerateVariationPutRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ConfigurableProductConfigurableProductManagementV1GenerateVariationPutRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['options']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['options'])) {
                throw new Error("Expected the field `options` to be an array in the JSON data but got " + data['options']);
            }
            // validate the optional field `options` (array)
            for (const item of data['options']) {
                ConfigurableProductDataOptionInterface.validateJSON(item);
            };
        }
        // validate the optional field `product`
        if (data['product']) { // data not null
          CatalogDataProductInterface.validateJSON(data['product']);
        }

        return true;
    }


}

ConfigurableProductConfigurableProductManagementV1GenerateVariationPutRequest.RequiredProperties = ["options", "product"];

/**
 * @member {Array.<module:model/ConfigurableProductDataOptionInterface>} options
 */
ConfigurableProductConfigurableProductManagementV1GenerateVariationPutRequest.prototype['options'] = undefined;

/**
 * @member {module:model/CatalogDataProductInterface} product
 */
ConfigurableProductConfigurableProductManagementV1GenerateVariationPutRequest.prototype['product'] = undefined;






export default ConfigurableProductConfigurableProductManagementV1GenerateVariationPutRequest;

