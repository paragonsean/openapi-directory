/**
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import FrameworkAttributeInterface from './FrameworkAttributeInterface';
import QuoteDataAddressInterface from './QuoteDataAddressInterface';

/**
 * The CheckoutDataTotalsInformationInterface model module.
 * @module model/CheckoutDataTotalsInformationInterface
 * @version 2.2.10
 */
class CheckoutDataTotalsInformationInterface {
    /**
     * Constructs a new <code>CheckoutDataTotalsInformationInterface</code>.
     * Interface TotalsInformationInterface
     * @alias module:model/CheckoutDataTotalsInformationInterface
     * @param address {module:model/QuoteDataAddressInterface} 
     */
    constructor(address) { 
        
        CheckoutDataTotalsInformationInterface.initialize(this, address);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, address) { 
        obj['address'] = address;
    }

    /**
     * Constructs a <code>CheckoutDataTotalsInformationInterface</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CheckoutDataTotalsInformationInterface} obj Optional instance to populate.
     * @return {module:model/CheckoutDataTotalsInformationInterface} The populated <code>CheckoutDataTotalsInformationInterface</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CheckoutDataTotalsInformationInterface();

            if (data.hasOwnProperty('address')) {
                obj['address'] = QuoteDataAddressInterface.constructFromObject(data['address']);
            }
            if (data.hasOwnProperty('custom_attributes')) {
                obj['custom_attributes'] = ApiClient.convertToType(data['custom_attributes'], [FrameworkAttributeInterface]);
            }
            if (data.hasOwnProperty('extension_attributes')) {
                obj['extension_attributes'] = ApiClient.convertToType(data['extension_attributes'], Object);
            }
            if (data.hasOwnProperty('shipping_carrier_code')) {
                obj['shipping_carrier_code'] = ApiClient.convertToType(data['shipping_carrier_code'], 'String');
            }
            if (data.hasOwnProperty('shipping_method_code')) {
                obj['shipping_method_code'] = ApiClient.convertToType(data['shipping_method_code'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CheckoutDataTotalsInformationInterface</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CheckoutDataTotalsInformationInterface</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CheckoutDataTotalsInformationInterface.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `address`
        if (data['address']) { // data not null
          QuoteDataAddressInterface.validateJSON(data['address']);
        }
        if (data['custom_attributes']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['custom_attributes'])) {
                throw new Error("Expected the field `custom_attributes` to be an array in the JSON data but got " + data['custom_attributes']);
            }
            // validate the optional field `custom_attributes` (array)
            for (const item of data['custom_attributes']) {
                FrameworkAttributeInterface.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['shipping_carrier_code'] && !(typeof data['shipping_carrier_code'] === 'string' || data['shipping_carrier_code'] instanceof String)) {
            throw new Error("Expected the field `shipping_carrier_code` to be a primitive type in the JSON string but got " + data['shipping_carrier_code']);
        }
        // ensure the json data is a string
        if (data['shipping_method_code'] && !(typeof data['shipping_method_code'] === 'string' || data['shipping_method_code'] instanceof String)) {
            throw new Error("Expected the field `shipping_method_code` to be a primitive type in the JSON string but got " + data['shipping_method_code']);
        }

        return true;
    }


}

CheckoutDataTotalsInformationInterface.RequiredProperties = ["address"];

/**
 * @member {module:model/QuoteDataAddressInterface} address
 */
CheckoutDataTotalsInformationInterface.prototype['address'] = undefined;

/**
 * Custom attributes values.
 * @member {Array.<module:model/FrameworkAttributeInterface>} custom_attributes
 */
CheckoutDataTotalsInformationInterface.prototype['custom_attributes'] = undefined;

/**
 * ExtensionInterface class for @see \\Magento\\Checkout\\Api\\Data\\TotalsInformationInterface
 * @member {Object} extension_attributes
 */
CheckoutDataTotalsInformationInterface.prototype['extension_attributes'] = undefined;

/**
 * Carrier code
 * @member {String} shipping_carrier_code
 */
CheckoutDataTotalsInformationInterface.prototype['shipping_carrier_code'] = undefined;

/**
 * Shipping method code
 * @member {String} shipping_method_code
 */
CheckoutDataTotalsInformationInterface.prototype['shipping_method_code'] = undefined;






export default CheckoutDataTotalsInformationInterface;

