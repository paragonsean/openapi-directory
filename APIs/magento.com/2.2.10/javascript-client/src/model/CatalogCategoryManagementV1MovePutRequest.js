/**
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CatalogCategoryManagementV1MovePutRequest model module.
 * @module model/CatalogCategoryManagementV1MovePutRequest
 * @version 2.2.10
 */
class CatalogCategoryManagementV1MovePutRequest {
    /**
     * Constructs a new <code>CatalogCategoryManagementV1MovePutRequest</code>.
     * @alias module:model/CatalogCategoryManagementV1MovePutRequest
     * @param parentId {Number} 
     */
    constructor(parentId) { 
        
        CatalogCategoryManagementV1MovePutRequest.initialize(this, parentId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, parentId) { 
        obj['parentId'] = parentId;
    }

    /**
     * Constructs a <code>CatalogCategoryManagementV1MovePutRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CatalogCategoryManagementV1MovePutRequest} obj Optional instance to populate.
     * @return {module:model/CatalogCategoryManagementV1MovePutRequest} The populated <code>CatalogCategoryManagementV1MovePutRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CatalogCategoryManagementV1MovePutRequest();

            if (data.hasOwnProperty('afterId')) {
                obj['afterId'] = ApiClient.convertToType(data['afterId'], 'Number');
            }
            if (data.hasOwnProperty('parentId')) {
                obj['parentId'] = ApiClient.convertToType(data['parentId'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CatalogCategoryManagementV1MovePutRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CatalogCategoryManagementV1MovePutRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CatalogCategoryManagementV1MovePutRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }

        return true;
    }


}

CatalogCategoryManagementV1MovePutRequest.RequiredProperties = ["parentId"];

/**
 * @member {Number} afterId
 */
CatalogCategoryManagementV1MovePutRequest.prototype['afterId'] = undefined;

/**
 * @member {Number} parentId
 */
CatalogCategoryManagementV1MovePutRequest.prototype['parentId'] = undefined;






export default CatalogCategoryManagementV1MovePutRequest;

