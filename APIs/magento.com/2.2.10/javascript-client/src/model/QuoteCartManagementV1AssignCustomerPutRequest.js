/**
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The QuoteCartManagementV1AssignCustomerPutRequest model module.
 * @module model/QuoteCartManagementV1AssignCustomerPutRequest
 * @version 2.2.10
 */
class QuoteCartManagementV1AssignCustomerPutRequest {
    /**
     * Constructs a new <code>QuoteCartManagementV1AssignCustomerPutRequest</code>.
     * @alias module:model/QuoteCartManagementV1AssignCustomerPutRequest
     * @param customerId {Number} The customer ID.
     * @param storeId {Number} 
     */
    constructor(customerId, storeId) { 
        
        QuoteCartManagementV1AssignCustomerPutRequest.initialize(this, customerId, storeId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, customerId, storeId) { 
        obj['customerId'] = customerId;
        obj['storeId'] = storeId;
    }

    /**
     * Constructs a <code>QuoteCartManagementV1AssignCustomerPutRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/QuoteCartManagementV1AssignCustomerPutRequest} obj Optional instance to populate.
     * @return {module:model/QuoteCartManagementV1AssignCustomerPutRequest} The populated <code>QuoteCartManagementV1AssignCustomerPutRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new QuoteCartManagementV1AssignCustomerPutRequest();

            if (data.hasOwnProperty('customerId')) {
                obj['customerId'] = ApiClient.convertToType(data['customerId'], 'Number');
            }
            if (data.hasOwnProperty('storeId')) {
                obj['storeId'] = ApiClient.convertToType(data['storeId'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>QuoteCartManagementV1AssignCustomerPutRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>QuoteCartManagementV1AssignCustomerPutRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of QuoteCartManagementV1AssignCustomerPutRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }

        return true;
    }


}

QuoteCartManagementV1AssignCustomerPutRequest.RequiredProperties = ["customerId", "storeId"];

/**
 * The customer ID.
 * @member {Number} customerId
 */
QuoteCartManagementV1AssignCustomerPutRequest.prototype['customerId'] = undefined;

/**
 * @member {Number} storeId
 */
QuoteCartManagementV1AssignCustomerPutRequest.prototype['storeId'] = undefined;






export default QuoteCartManagementV1AssignCustomerPutRequest;

