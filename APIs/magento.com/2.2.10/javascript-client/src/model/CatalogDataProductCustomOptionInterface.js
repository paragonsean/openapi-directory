/**
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CatalogDataProductCustomOptionExtensionInterface from './CatalogDataProductCustomOptionExtensionInterface';
import CatalogDataProductCustomOptionValuesInterface from './CatalogDataProductCustomOptionValuesInterface';

/**
 * The CatalogDataProductCustomOptionInterface model module.
 * @module model/CatalogDataProductCustomOptionInterface
 * @version 2.2.10
 */
class CatalogDataProductCustomOptionInterface {
    /**
     * Constructs a new <code>CatalogDataProductCustomOptionInterface</code>.
     * 
     * @alias module:model/CatalogDataProductCustomOptionInterface
     * @param isRequire {Boolean} Is require
     * @param productSku {String} Product SKU
     * @param sortOrder {Number} Sort order
     * @param title {String} Option title
     * @param type {String} Option type
     */
    constructor(isRequire, productSku, sortOrder, title, type) { 
        
        CatalogDataProductCustomOptionInterface.initialize(this, isRequire, productSku, sortOrder, title, type);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, isRequire, productSku, sortOrder, title, type) { 
        obj['is_require'] = isRequire;
        obj['product_sku'] = productSku;
        obj['sort_order'] = sortOrder;
        obj['title'] = title;
        obj['type'] = type;
    }

    /**
     * Constructs a <code>CatalogDataProductCustomOptionInterface</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CatalogDataProductCustomOptionInterface} obj Optional instance to populate.
     * @return {module:model/CatalogDataProductCustomOptionInterface} The populated <code>CatalogDataProductCustomOptionInterface</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CatalogDataProductCustomOptionInterface();

            if (data.hasOwnProperty('extension_attributes')) {
                obj['extension_attributes'] = CatalogDataProductCustomOptionExtensionInterface.constructFromObject(data['extension_attributes']);
            }
            if (data.hasOwnProperty('file_extension')) {
                obj['file_extension'] = ApiClient.convertToType(data['file_extension'], 'String');
            }
            if (data.hasOwnProperty('image_size_x')) {
                obj['image_size_x'] = ApiClient.convertToType(data['image_size_x'], 'Number');
            }
            if (data.hasOwnProperty('image_size_y')) {
                obj['image_size_y'] = ApiClient.convertToType(data['image_size_y'], 'Number');
            }
            if (data.hasOwnProperty('is_require')) {
                obj['is_require'] = ApiClient.convertToType(data['is_require'], 'Boolean');
            }
            if (data.hasOwnProperty('max_characters')) {
                obj['max_characters'] = ApiClient.convertToType(data['max_characters'], 'Number');
            }
            if (data.hasOwnProperty('option_id')) {
                obj['option_id'] = ApiClient.convertToType(data['option_id'], 'Number');
            }
            if (data.hasOwnProperty('price')) {
                obj['price'] = ApiClient.convertToType(data['price'], 'Number');
            }
            if (data.hasOwnProperty('price_type')) {
                obj['price_type'] = ApiClient.convertToType(data['price_type'], 'String');
            }
            if (data.hasOwnProperty('product_sku')) {
                obj['product_sku'] = ApiClient.convertToType(data['product_sku'], 'String');
            }
            if (data.hasOwnProperty('sku')) {
                obj['sku'] = ApiClient.convertToType(data['sku'], 'String');
            }
            if (data.hasOwnProperty('sort_order')) {
                obj['sort_order'] = ApiClient.convertToType(data['sort_order'], 'Number');
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('values')) {
                obj['values'] = ApiClient.convertToType(data['values'], [CatalogDataProductCustomOptionValuesInterface]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CatalogDataProductCustomOptionInterface</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CatalogDataProductCustomOptionInterface</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CatalogDataProductCustomOptionInterface.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `extension_attributes`
        if (data['extension_attributes']) { // data not null
          CatalogDataProductCustomOptionExtensionInterface.validateJSON(data['extension_attributes']);
        }
        // ensure the json data is a string
        if (data['file_extension'] && !(typeof data['file_extension'] === 'string' || data['file_extension'] instanceof String)) {
            throw new Error("Expected the field `file_extension` to be a primitive type in the JSON string but got " + data['file_extension']);
        }
        // ensure the json data is a string
        if (data['price_type'] && !(typeof data['price_type'] === 'string' || data['price_type'] instanceof String)) {
            throw new Error("Expected the field `price_type` to be a primitive type in the JSON string but got " + data['price_type']);
        }
        // ensure the json data is a string
        if (data['product_sku'] && !(typeof data['product_sku'] === 'string' || data['product_sku'] instanceof String)) {
            throw new Error("Expected the field `product_sku` to be a primitive type in the JSON string but got " + data['product_sku']);
        }
        // ensure the json data is a string
        if (data['sku'] && !(typeof data['sku'] === 'string' || data['sku'] instanceof String)) {
            throw new Error("Expected the field `sku` to be a primitive type in the JSON string but got " + data['sku']);
        }
        // ensure the json data is a string
        if (data['title'] && !(typeof data['title'] === 'string' || data['title'] instanceof String)) {
            throw new Error("Expected the field `title` to be a primitive type in the JSON string but got " + data['title']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }
        if (data['values']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['values'])) {
                throw new Error("Expected the field `values` to be an array in the JSON data but got " + data['values']);
            }
            // validate the optional field `values` (array)
            for (const item of data['values']) {
                CatalogDataProductCustomOptionValuesInterface.validateJSON(item);
            };
        }

        return true;
    }


}

CatalogDataProductCustomOptionInterface.RequiredProperties = ["is_require", "product_sku", "sort_order", "title", "type"];

/**
 * @member {module:model/CatalogDataProductCustomOptionExtensionInterface} extension_attributes
 */
CatalogDataProductCustomOptionInterface.prototype['extension_attributes'] = undefined;

/**
 * @member {String} file_extension
 */
CatalogDataProductCustomOptionInterface.prototype['file_extension'] = undefined;

/**
 * @member {Number} image_size_x
 */
CatalogDataProductCustomOptionInterface.prototype['image_size_x'] = undefined;

/**
 * @member {Number} image_size_y
 */
CatalogDataProductCustomOptionInterface.prototype['image_size_y'] = undefined;

/**
 * Is require
 * @member {Boolean} is_require
 */
CatalogDataProductCustomOptionInterface.prototype['is_require'] = undefined;

/**
 * @member {Number} max_characters
 */
CatalogDataProductCustomOptionInterface.prototype['max_characters'] = undefined;

/**
 * Option id
 * @member {Number} option_id
 */
CatalogDataProductCustomOptionInterface.prototype['option_id'] = undefined;

/**
 * Price
 * @member {Number} price
 */
CatalogDataProductCustomOptionInterface.prototype['price'] = undefined;

/**
 * Price type
 * @member {String} price_type
 */
CatalogDataProductCustomOptionInterface.prototype['price_type'] = undefined;

/**
 * Product SKU
 * @member {String} product_sku
 */
CatalogDataProductCustomOptionInterface.prototype['product_sku'] = undefined;

/**
 * Sku
 * @member {String} sku
 */
CatalogDataProductCustomOptionInterface.prototype['sku'] = undefined;

/**
 * Sort order
 * @member {Number} sort_order
 */
CatalogDataProductCustomOptionInterface.prototype['sort_order'] = undefined;

/**
 * Option title
 * @member {String} title
 */
CatalogDataProductCustomOptionInterface.prototype['title'] = undefined;

/**
 * Option type
 * @member {String} type
 */
CatalogDataProductCustomOptionInterface.prototype['type'] = undefined;

/**
 * @member {Array.<module:model/CatalogDataProductCustomOptionValuesInterface>} values
 */
CatalogDataProductCustomOptionInterface.prototype['values'] = undefined;






export default CatalogDataProductCustomOptionInterface;

