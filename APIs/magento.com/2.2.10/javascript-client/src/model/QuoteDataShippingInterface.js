/**
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import QuoteDataAddressInterface from './QuoteDataAddressInterface';

/**
 * The QuoteDataShippingInterface model module.
 * @module model/QuoteDataShippingInterface
 * @version 2.2.10
 */
class QuoteDataShippingInterface {
    /**
     * Constructs a new <code>QuoteDataShippingInterface</code>.
     * Interface ShippingInterface
     * @alias module:model/QuoteDataShippingInterface
     * @param address {module:model/QuoteDataAddressInterface} 
     * @param method {String} Shipping method
     */
    constructor(address, method) { 
        
        QuoteDataShippingInterface.initialize(this, address, method);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, address, method) { 
        obj['address'] = address;
        obj['method'] = method;
    }

    /**
     * Constructs a <code>QuoteDataShippingInterface</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/QuoteDataShippingInterface} obj Optional instance to populate.
     * @return {module:model/QuoteDataShippingInterface} The populated <code>QuoteDataShippingInterface</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new QuoteDataShippingInterface();

            if (data.hasOwnProperty('address')) {
                obj['address'] = QuoteDataAddressInterface.constructFromObject(data['address']);
            }
            if (data.hasOwnProperty('extension_attributes')) {
                obj['extension_attributes'] = ApiClient.convertToType(data['extension_attributes'], Object);
            }
            if (data.hasOwnProperty('method')) {
                obj['method'] = ApiClient.convertToType(data['method'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>QuoteDataShippingInterface</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>QuoteDataShippingInterface</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of QuoteDataShippingInterface.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `address`
        if (data['address']) { // data not null
          QuoteDataAddressInterface.validateJSON(data['address']);
        }
        // ensure the json data is a string
        if (data['method'] && !(typeof data['method'] === 'string' || data['method'] instanceof String)) {
            throw new Error("Expected the field `method` to be a primitive type in the JSON string but got " + data['method']);
        }

        return true;
    }


}

QuoteDataShippingInterface.RequiredProperties = ["address", "method"];

/**
 * @member {module:model/QuoteDataAddressInterface} address
 */
QuoteDataShippingInterface.prototype['address'] = undefined;

/**
 * ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\ShippingInterface
 * @member {Object} extension_attributes
 */
QuoteDataShippingInterface.prototype['extension_attributes'] = undefined;

/**
 * Shipping method
 * @member {String} method
 */
QuoteDataShippingInterface.prototype['method'] = undefined;






export default QuoteDataShippingInterface;

