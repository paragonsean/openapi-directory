/**
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import FrameworkAttributeInterface from './FrameworkAttributeInterface';

/**
 * The CatalogDataCategoryInterface model module.
 * @module model/CatalogDataCategoryInterface
 * @version 2.2.10
 */
class CatalogDataCategoryInterface {
    /**
     * Constructs a new <code>CatalogDataCategoryInterface</code>.
     * 
     * @alias module:model/CatalogDataCategoryInterface
     */
    constructor() { 
        
        CatalogDataCategoryInterface.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CatalogDataCategoryInterface</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CatalogDataCategoryInterface} obj Optional instance to populate.
     * @return {module:model/CatalogDataCategoryInterface} The populated <code>CatalogDataCategoryInterface</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CatalogDataCategoryInterface();

            if (data.hasOwnProperty('available_sort_by')) {
                obj['available_sort_by'] = ApiClient.convertToType(data['available_sort_by'], ['String']);
            }
            if (data.hasOwnProperty('children')) {
                obj['children'] = ApiClient.convertToType(data['children'], 'String');
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'String');
            }
            if (data.hasOwnProperty('custom_attributes')) {
                obj['custom_attributes'] = ApiClient.convertToType(data['custom_attributes'], [FrameworkAttributeInterface]);
            }
            if (data.hasOwnProperty('extension_attributes')) {
                obj['extension_attributes'] = ApiClient.convertToType(data['extension_attributes'], Object);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('include_in_menu')) {
                obj['include_in_menu'] = ApiClient.convertToType(data['include_in_menu'], 'Boolean');
            }
            if (data.hasOwnProperty('is_active')) {
                obj['is_active'] = ApiClient.convertToType(data['is_active'], 'Boolean');
            }
            if (data.hasOwnProperty('level')) {
                obj['level'] = ApiClient.convertToType(data['level'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('parent_id')) {
                obj['parent_id'] = ApiClient.convertToType(data['parent_id'], 'Number');
            }
            if (data.hasOwnProperty('path')) {
                obj['path'] = ApiClient.convertToType(data['path'], 'String');
            }
            if (data.hasOwnProperty('position')) {
                obj['position'] = ApiClient.convertToType(data['position'], 'Number');
            }
            if (data.hasOwnProperty('updated_at')) {
                obj['updated_at'] = ApiClient.convertToType(data['updated_at'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CatalogDataCategoryInterface</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CatalogDataCategoryInterface</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['available_sort_by'])) {
            throw new Error("Expected the field `available_sort_by` to be an array in the JSON data but got " + data['available_sort_by']);
        }
        // ensure the json data is a string
        if (data['children'] && !(typeof data['children'] === 'string' || data['children'] instanceof String)) {
            throw new Error("Expected the field `children` to be a primitive type in the JSON string but got " + data['children']);
        }
        // ensure the json data is a string
        if (data['created_at'] && !(typeof data['created_at'] === 'string' || data['created_at'] instanceof String)) {
            throw new Error("Expected the field `created_at` to be a primitive type in the JSON string but got " + data['created_at']);
        }
        if (data['custom_attributes']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['custom_attributes'])) {
                throw new Error("Expected the field `custom_attributes` to be an array in the JSON data but got " + data['custom_attributes']);
            }
            // validate the optional field `custom_attributes` (array)
            for (const item of data['custom_attributes']) {
                FrameworkAttributeInterface.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['path'] && !(typeof data['path'] === 'string' || data['path'] instanceof String)) {
            throw new Error("Expected the field `path` to be a primitive type in the JSON string but got " + data['path']);
        }
        // ensure the json data is a string
        if (data['updated_at'] && !(typeof data['updated_at'] === 'string' || data['updated_at'] instanceof String)) {
            throw new Error("Expected the field `updated_at` to be a primitive type in the JSON string but got " + data['updated_at']);
        }

        return true;
    }


}



/**
 * @member {Array.<String>} available_sort_by
 */
CatalogDataCategoryInterface.prototype['available_sort_by'] = undefined;

/**
 * @member {String} children
 */
CatalogDataCategoryInterface.prototype['children'] = undefined;

/**
 * @member {String} created_at
 */
CatalogDataCategoryInterface.prototype['created_at'] = undefined;

/**
 * Custom attributes values.
 * @member {Array.<module:model/FrameworkAttributeInterface>} custom_attributes
 */
CatalogDataCategoryInterface.prototype['custom_attributes'] = undefined;

/**
 * ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\CategoryInterface
 * @member {Object} extension_attributes
 */
CatalogDataCategoryInterface.prototype['extension_attributes'] = undefined;

/**
 * @member {Number} id
 */
CatalogDataCategoryInterface.prototype['id'] = undefined;

/**
 * @member {Boolean} include_in_menu
 */
CatalogDataCategoryInterface.prototype['include_in_menu'] = undefined;

/**
 * Whether category is active
 * @member {Boolean} is_active
 */
CatalogDataCategoryInterface.prototype['is_active'] = undefined;

/**
 * Category level
 * @member {Number} level
 */
CatalogDataCategoryInterface.prototype['level'] = undefined;

/**
 * Category name
 * @member {String} name
 */
CatalogDataCategoryInterface.prototype['name'] = undefined;

/**
 * Parent category ID
 * @member {Number} parent_id
 */
CatalogDataCategoryInterface.prototype['parent_id'] = undefined;

/**
 * @member {String} path
 */
CatalogDataCategoryInterface.prototype['path'] = undefined;

/**
 * Category position
 * @member {Number} position
 */
CatalogDataCategoryInterface.prototype['position'] = undefined;

/**
 * @member {String} updated_at
 */
CatalogDataCategoryInterface.prototype['updated_at'] = undefined;






export default CatalogDataCategoryInterface;

