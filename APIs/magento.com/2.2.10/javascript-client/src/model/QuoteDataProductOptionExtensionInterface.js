/**
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BundleDataBundleOptionInterface from './BundleDataBundleOptionInterface';
import CatalogDataCustomOptionInterface from './CatalogDataCustomOptionInterface';
import ConfigurableProductDataConfigurableItemOptionValueInterface from './ConfigurableProductDataConfigurableItemOptionValueInterface';
import DownloadableDataDownloadableOptionInterface from './DownloadableDataDownloadableOptionInterface';
import GiftCardDataGiftCardOptionInterface from './GiftCardDataGiftCardOptionInterface';

/**
 * The QuoteDataProductOptionExtensionInterface model module.
 * @module model/QuoteDataProductOptionExtensionInterface
 * @version 2.2.10
 */
class QuoteDataProductOptionExtensionInterface {
    /**
     * Constructs a new <code>QuoteDataProductOptionExtensionInterface</code>.
     * ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\ProductOptionInterface
     * @alias module:model/QuoteDataProductOptionExtensionInterface
     */
    constructor() { 
        
        QuoteDataProductOptionExtensionInterface.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>QuoteDataProductOptionExtensionInterface</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/QuoteDataProductOptionExtensionInterface} obj Optional instance to populate.
     * @return {module:model/QuoteDataProductOptionExtensionInterface} The populated <code>QuoteDataProductOptionExtensionInterface</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new QuoteDataProductOptionExtensionInterface();

            if (data.hasOwnProperty('bundle_options')) {
                obj['bundle_options'] = ApiClient.convertToType(data['bundle_options'], [BundleDataBundleOptionInterface]);
            }
            if (data.hasOwnProperty('configurable_item_options')) {
                obj['configurable_item_options'] = ApiClient.convertToType(data['configurable_item_options'], [ConfigurableProductDataConfigurableItemOptionValueInterface]);
            }
            if (data.hasOwnProperty('custom_options')) {
                obj['custom_options'] = ApiClient.convertToType(data['custom_options'], [CatalogDataCustomOptionInterface]);
            }
            if (data.hasOwnProperty('downloadable_option')) {
                obj['downloadable_option'] = DownloadableDataDownloadableOptionInterface.constructFromObject(data['downloadable_option']);
            }
            if (data.hasOwnProperty('giftcard_item_option')) {
                obj['giftcard_item_option'] = GiftCardDataGiftCardOptionInterface.constructFromObject(data['giftcard_item_option']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>QuoteDataProductOptionExtensionInterface</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>QuoteDataProductOptionExtensionInterface</code>.
     */
    static validateJSON(data) {
        if (data['bundle_options']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['bundle_options'])) {
                throw new Error("Expected the field `bundle_options` to be an array in the JSON data but got " + data['bundle_options']);
            }
            // validate the optional field `bundle_options` (array)
            for (const item of data['bundle_options']) {
                BundleDataBundleOptionInterface.validateJSON(item);
            };
        }
        if (data['configurable_item_options']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['configurable_item_options'])) {
                throw new Error("Expected the field `configurable_item_options` to be an array in the JSON data but got " + data['configurable_item_options']);
            }
            // validate the optional field `configurable_item_options` (array)
            for (const item of data['configurable_item_options']) {
                ConfigurableProductDataConfigurableItemOptionValueInterface.validateJSON(item);
            };
        }
        if (data['custom_options']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['custom_options'])) {
                throw new Error("Expected the field `custom_options` to be an array in the JSON data but got " + data['custom_options']);
            }
            // validate the optional field `custom_options` (array)
            for (const item of data['custom_options']) {
                CatalogDataCustomOptionInterface.validateJSON(item);
            };
        }
        // validate the optional field `downloadable_option`
        if (data['downloadable_option']) { // data not null
          DownloadableDataDownloadableOptionInterface.validateJSON(data['downloadable_option']);
        }
        // validate the optional field `giftcard_item_option`
        if (data['giftcard_item_option']) { // data not null
          GiftCardDataGiftCardOptionInterface.validateJSON(data['giftcard_item_option']);
        }

        return true;
    }


}



/**
 * @member {Array.<module:model/BundleDataBundleOptionInterface>} bundle_options
 */
QuoteDataProductOptionExtensionInterface.prototype['bundle_options'] = undefined;

/**
 * @member {Array.<module:model/ConfigurableProductDataConfigurableItemOptionValueInterface>} configurable_item_options
 */
QuoteDataProductOptionExtensionInterface.prototype['configurable_item_options'] = undefined;

/**
 * @member {Array.<module:model/CatalogDataCustomOptionInterface>} custom_options
 */
QuoteDataProductOptionExtensionInterface.prototype['custom_options'] = undefined;

/**
 * @member {module:model/DownloadableDataDownloadableOptionInterface} downloadable_option
 */
QuoteDataProductOptionExtensionInterface.prototype['downloadable_option'] = undefined;

/**
 * @member {module:model/GiftCardDataGiftCardOptionInterface} giftcard_item_option
 */
QuoteDataProductOptionExtensionInterface.prototype['giftcard_item_option'] = undefined;






export default QuoteDataProductOptionExtensionInterface;

