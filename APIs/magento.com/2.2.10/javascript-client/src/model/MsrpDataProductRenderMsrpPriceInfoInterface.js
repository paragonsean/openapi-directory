/**
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The MsrpDataProductRenderMsrpPriceInfoInterface model module.
 * @module model/MsrpDataProductRenderMsrpPriceInfoInterface
 * @version 2.2.10
 */
class MsrpDataProductRenderMsrpPriceInfoInterface {
    /**
     * Constructs a new <code>MsrpDataProductRenderMsrpPriceInfoInterface</code>.
     * Price interface.
     * @alias module:model/MsrpDataProductRenderMsrpPriceInfoInterface
     * @param explanationMessage {String} 
     * @param isApplicable {String} 
     * @param isShownPriceOnGesture {String} 
     * @param msrpMessage {String} 
     * @param msrpPrice {String} 
     */
    constructor(explanationMessage, isApplicable, isShownPriceOnGesture, msrpMessage, msrpPrice) { 
        
        MsrpDataProductRenderMsrpPriceInfoInterface.initialize(this, explanationMessage, isApplicable, isShownPriceOnGesture, msrpMessage, msrpPrice);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, explanationMessage, isApplicable, isShownPriceOnGesture, msrpMessage, msrpPrice) { 
        obj['explanation_message'] = explanationMessage;
        obj['is_applicable'] = isApplicable;
        obj['is_shown_price_on_gesture'] = isShownPriceOnGesture;
        obj['msrp_message'] = msrpMessage;
        obj['msrp_price'] = msrpPrice;
    }

    /**
     * Constructs a <code>MsrpDataProductRenderMsrpPriceInfoInterface</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MsrpDataProductRenderMsrpPriceInfoInterface} obj Optional instance to populate.
     * @return {module:model/MsrpDataProductRenderMsrpPriceInfoInterface} The populated <code>MsrpDataProductRenderMsrpPriceInfoInterface</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MsrpDataProductRenderMsrpPriceInfoInterface();

            if (data.hasOwnProperty('explanation_message')) {
                obj['explanation_message'] = ApiClient.convertToType(data['explanation_message'], 'String');
            }
            if (data.hasOwnProperty('extension_attributes')) {
                obj['extension_attributes'] = ApiClient.convertToType(data['extension_attributes'], Object);
            }
            if (data.hasOwnProperty('is_applicable')) {
                obj['is_applicable'] = ApiClient.convertToType(data['is_applicable'], 'String');
            }
            if (data.hasOwnProperty('is_shown_price_on_gesture')) {
                obj['is_shown_price_on_gesture'] = ApiClient.convertToType(data['is_shown_price_on_gesture'], 'String');
            }
            if (data.hasOwnProperty('msrp_message')) {
                obj['msrp_message'] = ApiClient.convertToType(data['msrp_message'], 'String');
            }
            if (data.hasOwnProperty('msrp_price')) {
                obj['msrp_price'] = ApiClient.convertToType(data['msrp_price'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MsrpDataProductRenderMsrpPriceInfoInterface</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MsrpDataProductRenderMsrpPriceInfoInterface</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of MsrpDataProductRenderMsrpPriceInfoInterface.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['explanation_message'] && !(typeof data['explanation_message'] === 'string' || data['explanation_message'] instanceof String)) {
            throw new Error("Expected the field `explanation_message` to be a primitive type in the JSON string but got " + data['explanation_message']);
        }
        // ensure the json data is a string
        if (data['is_applicable'] && !(typeof data['is_applicable'] === 'string' || data['is_applicable'] instanceof String)) {
            throw new Error("Expected the field `is_applicable` to be a primitive type in the JSON string but got " + data['is_applicable']);
        }
        // ensure the json data is a string
        if (data['is_shown_price_on_gesture'] && !(typeof data['is_shown_price_on_gesture'] === 'string' || data['is_shown_price_on_gesture'] instanceof String)) {
            throw new Error("Expected the field `is_shown_price_on_gesture` to be a primitive type in the JSON string but got " + data['is_shown_price_on_gesture']);
        }
        // ensure the json data is a string
        if (data['msrp_message'] && !(typeof data['msrp_message'] === 'string' || data['msrp_message'] instanceof String)) {
            throw new Error("Expected the field `msrp_message` to be a primitive type in the JSON string but got " + data['msrp_message']);
        }
        // ensure the json data is a string
        if (data['msrp_price'] && !(typeof data['msrp_price'] === 'string' || data['msrp_price'] instanceof String)) {
            throw new Error("Expected the field `msrp_price` to be a primitive type in the JSON string but got " + data['msrp_price']);
        }

        return true;
    }


}

MsrpDataProductRenderMsrpPriceInfoInterface.RequiredProperties = ["explanation_message", "is_applicable", "is_shown_price_on_gesture", "msrp_message", "msrp_price"];

/**
 * @member {String} explanation_message
 */
MsrpDataProductRenderMsrpPriceInfoInterface.prototype['explanation_message'] = undefined;

/**
 * ExtensionInterface class for @see \\Magento\\Msrp\\Api\\Data\\ProductRender\\MsrpPriceInfoInterface
 * @member {Object} extension_attributes
 */
MsrpDataProductRenderMsrpPriceInfoInterface.prototype['extension_attributes'] = undefined;

/**
 * @member {String} is_applicable
 */
MsrpDataProductRenderMsrpPriceInfoInterface.prototype['is_applicable'] = undefined;

/**
 * @member {String} is_shown_price_on_gesture
 */
MsrpDataProductRenderMsrpPriceInfoInterface.prototype['is_shown_price_on_gesture'] = undefined;

/**
 * @member {String} msrp_message
 */
MsrpDataProductRenderMsrpPriceInfoInterface.prototype['msrp_message'] = undefined;

/**
 * @member {String} msrp_price
 */
MsrpDataProductRenderMsrpPriceInfoInterface.prototype['msrp_price'] = undefined;






export default MsrpDataProductRenderMsrpPriceInfoInterface;

