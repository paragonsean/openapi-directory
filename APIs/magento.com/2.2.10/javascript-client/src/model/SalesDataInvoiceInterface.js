/**
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SalesDataInvoiceCommentInterface from './SalesDataInvoiceCommentInterface';
import SalesDataInvoiceExtensionInterface from './SalesDataInvoiceExtensionInterface';
import SalesDataInvoiceItemInterface from './SalesDataInvoiceItemInterface';

/**
 * The SalesDataInvoiceInterface model module.
 * @module model/SalesDataInvoiceInterface
 * @version 2.2.10
 */
class SalesDataInvoiceInterface {
    /**
     * Constructs a new <code>SalesDataInvoiceInterface</code>.
     * Invoice interface. An invoice is a record of the receipt of payment for an order.
     * @alias module:model/SalesDataInvoiceInterface
     * @param items {Array.<module:model/SalesDataInvoiceItemInterface>} Array of invoice items.
     * @param orderId {Number} Order ID.
     * @param totalQty {Number} Total quantity.
     */
    constructor(items, orderId, totalQty) { 
        
        SalesDataInvoiceInterface.initialize(this, items, orderId, totalQty);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, items, orderId, totalQty) { 
        obj['items'] = items;
        obj['order_id'] = orderId;
        obj['total_qty'] = totalQty;
    }

    /**
     * Constructs a <code>SalesDataInvoiceInterface</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SalesDataInvoiceInterface} obj Optional instance to populate.
     * @return {module:model/SalesDataInvoiceInterface} The populated <code>SalesDataInvoiceInterface</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SalesDataInvoiceInterface();

            if (data.hasOwnProperty('base_currency_code')) {
                obj['base_currency_code'] = ApiClient.convertToType(data['base_currency_code'], 'String');
            }
            if (data.hasOwnProperty('base_discount_amount')) {
                obj['base_discount_amount'] = ApiClient.convertToType(data['base_discount_amount'], 'Number');
            }
            if (data.hasOwnProperty('base_discount_tax_compensation_amount')) {
                obj['base_discount_tax_compensation_amount'] = ApiClient.convertToType(data['base_discount_tax_compensation_amount'], 'Number');
            }
            if (data.hasOwnProperty('base_grand_total')) {
                obj['base_grand_total'] = ApiClient.convertToType(data['base_grand_total'], 'Number');
            }
            if (data.hasOwnProperty('base_shipping_amount')) {
                obj['base_shipping_amount'] = ApiClient.convertToType(data['base_shipping_amount'], 'Number');
            }
            if (data.hasOwnProperty('base_shipping_discount_tax_compensation_amnt')) {
                obj['base_shipping_discount_tax_compensation_amnt'] = ApiClient.convertToType(data['base_shipping_discount_tax_compensation_amnt'], 'Number');
            }
            if (data.hasOwnProperty('base_shipping_incl_tax')) {
                obj['base_shipping_incl_tax'] = ApiClient.convertToType(data['base_shipping_incl_tax'], 'Number');
            }
            if (data.hasOwnProperty('base_shipping_tax_amount')) {
                obj['base_shipping_tax_amount'] = ApiClient.convertToType(data['base_shipping_tax_amount'], 'Number');
            }
            if (data.hasOwnProperty('base_subtotal')) {
                obj['base_subtotal'] = ApiClient.convertToType(data['base_subtotal'], 'Number');
            }
            if (data.hasOwnProperty('base_subtotal_incl_tax')) {
                obj['base_subtotal_incl_tax'] = ApiClient.convertToType(data['base_subtotal_incl_tax'], 'Number');
            }
            if (data.hasOwnProperty('base_tax_amount')) {
                obj['base_tax_amount'] = ApiClient.convertToType(data['base_tax_amount'], 'Number');
            }
            if (data.hasOwnProperty('base_to_global_rate')) {
                obj['base_to_global_rate'] = ApiClient.convertToType(data['base_to_global_rate'], 'Number');
            }
            if (data.hasOwnProperty('base_to_order_rate')) {
                obj['base_to_order_rate'] = ApiClient.convertToType(data['base_to_order_rate'], 'Number');
            }
            if (data.hasOwnProperty('base_total_refunded')) {
                obj['base_total_refunded'] = ApiClient.convertToType(data['base_total_refunded'], 'Number');
            }
            if (data.hasOwnProperty('billing_address_id')) {
                obj['billing_address_id'] = ApiClient.convertToType(data['billing_address_id'], 'Number');
            }
            if (data.hasOwnProperty('can_void_flag')) {
                obj['can_void_flag'] = ApiClient.convertToType(data['can_void_flag'], 'Number');
            }
            if (data.hasOwnProperty('comments')) {
                obj['comments'] = ApiClient.convertToType(data['comments'], [SalesDataInvoiceCommentInterface]);
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'String');
            }
            if (data.hasOwnProperty('discount_amount')) {
                obj['discount_amount'] = ApiClient.convertToType(data['discount_amount'], 'Number');
            }
            if (data.hasOwnProperty('discount_description')) {
                obj['discount_description'] = ApiClient.convertToType(data['discount_description'], 'String');
            }
            if (data.hasOwnProperty('discount_tax_compensation_amount')) {
                obj['discount_tax_compensation_amount'] = ApiClient.convertToType(data['discount_tax_compensation_amount'], 'Number');
            }
            if (data.hasOwnProperty('email_sent')) {
                obj['email_sent'] = ApiClient.convertToType(data['email_sent'], 'Number');
            }
            if (data.hasOwnProperty('entity_id')) {
                obj['entity_id'] = ApiClient.convertToType(data['entity_id'], 'Number');
            }
            if (data.hasOwnProperty('extension_attributes')) {
                obj['extension_attributes'] = SalesDataInvoiceExtensionInterface.constructFromObject(data['extension_attributes']);
            }
            if (data.hasOwnProperty('global_currency_code')) {
                obj['global_currency_code'] = ApiClient.convertToType(data['global_currency_code'], 'String');
            }
            if (data.hasOwnProperty('grand_total')) {
                obj['grand_total'] = ApiClient.convertToType(data['grand_total'], 'Number');
            }
            if (data.hasOwnProperty('increment_id')) {
                obj['increment_id'] = ApiClient.convertToType(data['increment_id'], 'String');
            }
            if (data.hasOwnProperty('is_used_for_refund')) {
                obj['is_used_for_refund'] = ApiClient.convertToType(data['is_used_for_refund'], 'Number');
            }
            if (data.hasOwnProperty('items')) {
                obj['items'] = ApiClient.convertToType(data['items'], [SalesDataInvoiceItemInterface]);
            }
            if (data.hasOwnProperty('order_currency_code')) {
                obj['order_currency_code'] = ApiClient.convertToType(data['order_currency_code'], 'String');
            }
            if (data.hasOwnProperty('order_id')) {
                obj['order_id'] = ApiClient.convertToType(data['order_id'], 'Number');
            }
            if (data.hasOwnProperty('shipping_address_id')) {
                obj['shipping_address_id'] = ApiClient.convertToType(data['shipping_address_id'], 'Number');
            }
            if (data.hasOwnProperty('shipping_amount')) {
                obj['shipping_amount'] = ApiClient.convertToType(data['shipping_amount'], 'Number');
            }
            if (data.hasOwnProperty('shipping_discount_tax_compensation_amount')) {
                obj['shipping_discount_tax_compensation_amount'] = ApiClient.convertToType(data['shipping_discount_tax_compensation_amount'], 'Number');
            }
            if (data.hasOwnProperty('shipping_incl_tax')) {
                obj['shipping_incl_tax'] = ApiClient.convertToType(data['shipping_incl_tax'], 'Number');
            }
            if (data.hasOwnProperty('shipping_tax_amount')) {
                obj['shipping_tax_amount'] = ApiClient.convertToType(data['shipping_tax_amount'], 'Number');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'Number');
            }
            if (data.hasOwnProperty('store_currency_code')) {
                obj['store_currency_code'] = ApiClient.convertToType(data['store_currency_code'], 'String');
            }
            if (data.hasOwnProperty('store_id')) {
                obj['store_id'] = ApiClient.convertToType(data['store_id'], 'Number');
            }
            if (data.hasOwnProperty('store_to_base_rate')) {
                obj['store_to_base_rate'] = ApiClient.convertToType(data['store_to_base_rate'], 'Number');
            }
            if (data.hasOwnProperty('store_to_order_rate')) {
                obj['store_to_order_rate'] = ApiClient.convertToType(data['store_to_order_rate'], 'Number');
            }
            if (data.hasOwnProperty('subtotal')) {
                obj['subtotal'] = ApiClient.convertToType(data['subtotal'], 'Number');
            }
            if (data.hasOwnProperty('subtotal_incl_tax')) {
                obj['subtotal_incl_tax'] = ApiClient.convertToType(data['subtotal_incl_tax'], 'Number');
            }
            if (data.hasOwnProperty('tax_amount')) {
                obj['tax_amount'] = ApiClient.convertToType(data['tax_amount'], 'Number');
            }
            if (data.hasOwnProperty('total_qty')) {
                obj['total_qty'] = ApiClient.convertToType(data['total_qty'], 'Number');
            }
            if (data.hasOwnProperty('transaction_id')) {
                obj['transaction_id'] = ApiClient.convertToType(data['transaction_id'], 'String');
            }
            if (data.hasOwnProperty('updated_at')) {
                obj['updated_at'] = ApiClient.convertToType(data['updated_at'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SalesDataInvoiceInterface</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SalesDataInvoiceInterface</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of SalesDataInvoiceInterface.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['base_currency_code'] && !(typeof data['base_currency_code'] === 'string' || data['base_currency_code'] instanceof String)) {
            throw new Error("Expected the field `base_currency_code` to be a primitive type in the JSON string but got " + data['base_currency_code']);
        }
        if (data['comments']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['comments'])) {
                throw new Error("Expected the field `comments` to be an array in the JSON data but got " + data['comments']);
            }
            // validate the optional field `comments` (array)
            for (const item of data['comments']) {
                SalesDataInvoiceCommentInterface.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['created_at'] && !(typeof data['created_at'] === 'string' || data['created_at'] instanceof String)) {
            throw new Error("Expected the field `created_at` to be a primitive type in the JSON string but got " + data['created_at']);
        }
        // ensure the json data is a string
        if (data['discount_description'] && !(typeof data['discount_description'] === 'string' || data['discount_description'] instanceof String)) {
            throw new Error("Expected the field `discount_description` to be a primitive type in the JSON string but got " + data['discount_description']);
        }
        // validate the optional field `extension_attributes`
        if (data['extension_attributes']) { // data not null
          SalesDataInvoiceExtensionInterface.validateJSON(data['extension_attributes']);
        }
        // ensure the json data is a string
        if (data['global_currency_code'] && !(typeof data['global_currency_code'] === 'string' || data['global_currency_code'] instanceof String)) {
            throw new Error("Expected the field `global_currency_code` to be a primitive type in the JSON string but got " + data['global_currency_code']);
        }
        // ensure the json data is a string
        if (data['increment_id'] && !(typeof data['increment_id'] === 'string' || data['increment_id'] instanceof String)) {
            throw new Error("Expected the field `increment_id` to be a primitive type in the JSON string but got " + data['increment_id']);
        }
        if (data['items']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['items'])) {
                throw new Error("Expected the field `items` to be an array in the JSON data but got " + data['items']);
            }
            // validate the optional field `items` (array)
            for (const item of data['items']) {
                SalesDataInvoiceItemInterface.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['order_currency_code'] && !(typeof data['order_currency_code'] === 'string' || data['order_currency_code'] instanceof String)) {
            throw new Error("Expected the field `order_currency_code` to be a primitive type in the JSON string but got " + data['order_currency_code']);
        }
        // ensure the json data is a string
        if (data['store_currency_code'] && !(typeof data['store_currency_code'] === 'string' || data['store_currency_code'] instanceof String)) {
            throw new Error("Expected the field `store_currency_code` to be a primitive type in the JSON string but got " + data['store_currency_code']);
        }
        // ensure the json data is a string
        if (data['transaction_id'] && !(typeof data['transaction_id'] === 'string' || data['transaction_id'] instanceof String)) {
            throw new Error("Expected the field `transaction_id` to be a primitive type in the JSON string but got " + data['transaction_id']);
        }
        // ensure the json data is a string
        if (data['updated_at'] && !(typeof data['updated_at'] === 'string' || data['updated_at'] instanceof String)) {
            throw new Error("Expected the field `updated_at` to be a primitive type in the JSON string but got " + data['updated_at']);
        }

        return true;
    }


}

SalesDataInvoiceInterface.RequiredProperties = ["items", "order_id", "total_qty"];

/**
 * Base currency code.
 * @member {String} base_currency_code
 */
SalesDataInvoiceInterface.prototype['base_currency_code'] = undefined;

/**
 * Base discount amount.
 * @member {Number} base_discount_amount
 */
SalesDataInvoiceInterface.prototype['base_discount_amount'] = undefined;

/**
 * Base discount tax compensation amount.
 * @member {Number} base_discount_tax_compensation_amount
 */
SalesDataInvoiceInterface.prototype['base_discount_tax_compensation_amount'] = undefined;

/**
 * Base grand total.
 * @member {Number} base_grand_total
 */
SalesDataInvoiceInterface.prototype['base_grand_total'] = undefined;

/**
 * Base shipping amount.
 * @member {Number} base_shipping_amount
 */
SalesDataInvoiceInterface.prototype['base_shipping_amount'] = undefined;

/**
 * Base shipping discount tax compensation amount.
 * @member {Number} base_shipping_discount_tax_compensation_amnt
 */
SalesDataInvoiceInterface.prototype['base_shipping_discount_tax_compensation_amnt'] = undefined;

/**
 * Base shipping including tax.
 * @member {Number} base_shipping_incl_tax
 */
SalesDataInvoiceInterface.prototype['base_shipping_incl_tax'] = undefined;

/**
 * Base shipping tax amount.
 * @member {Number} base_shipping_tax_amount
 */
SalesDataInvoiceInterface.prototype['base_shipping_tax_amount'] = undefined;

/**
 * Base subtotal.
 * @member {Number} base_subtotal
 */
SalesDataInvoiceInterface.prototype['base_subtotal'] = undefined;

/**
 * Base subtotal including tax.
 * @member {Number} base_subtotal_incl_tax
 */
SalesDataInvoiceInterface.prototype['base_subtotal_incl_tax'] = undefined;

/**
 * Base tax amount.
 * @member {Number} base_tax_amount
 */
SalesDataInvoiceInterface.prototype['base_tax_amount'] = undefined;

/**
 * Base-to-global rate.
 * @member {Number} base_to_global_rate
 */
SalesDataInvoiceInterface.prototype['base_to_global_rate'] = undefined;

/**
 * Base-to-order rate.
 * @member {Number} base_to_order_rate
 */
SalesDataInvoiceInterface.prototype['base_to_order_rate'] = undefined;

/**
 * Base total refunded.
 * @member {Number} base_total_refunded
 */
SalesDataInvoiceInterface.prototype['base_total_refunded'] = undefined;

/**
 * Billing address ID.
 * @member {Number} billing_address_id
 */
SalesDataInvoiceInterface.prototype['billing_address_id'] = undefined;

/**
 * Can void flag value.
 * @member {Number} can_void_flag
 */
SalesDataInvoiceInterface.prototype['can_void_flag'] = undefined;

/**
 * Array of any invoice comments. Otherwise, null.
 * @member {Array.<module:model/SalesDataInvoiceCommentInterface>} comments
 */
SalesDataInvoiceInterface.prototype['comments'] = undefined;

/**
 * Created-at timestamp.
 * @member {String} created_at
 */
SalesDataInvoiceInterface.prototype['created_at'] = undefined;

/**
 * Discount amount.
 * @member {Number} discount_amount
 */
SalesDataInvoiceInterface.prototype['discount_amount'] = undefined;

/**
 * Discount description.
 * @member {String} discount_description
 */
SalesDataInvoiceInterface.prototype['discount_description'] = undefined;

/**
 * Discount tax compensation amount.
 * @member {Number} discount_tax_compensation_amount
 */
SalesDataInvoiceInterface.prototype['discount_tax_compensation_amount'] = undefined;

/**
 * Email-sent flag value.
 * @member {Number} email_sent
 */
SalesDataInvoiceInterface.prototype['email_sent'] = undefined;

/**
 * Invoice ID.
 * @member {Number} entity_id
 */
SalesDataInvoiceInterface.prototype['entity_id'] = undefined;

/**
 * @member {module:model/SalesDataInvoiceExtensionInterface} extension_attributes
 */
SalesDataInvoiceInterface.prototype['extension_attributes'] = undefined;

/**
 * Global currency code.
 * @member {String} global_currency_code
 */
SalesDataInvoiceInterface.prototype['global_currency_code'] = undefined;

/**
 * Grand total.
 * @member {Number} grand_total
 */
SalesDataInvoiceInterface.prototype['grand_total'] = undefined;

/**
 * Increment ID.
 * @member {String} increment_id
 */
SalesDataInvoiceInterface.prototype['increment_id'] = undefined;

/**
 * Is-used-for-refund flag value.
 * @member {Number} is_used_for_refund
 */
SalesDataInvoiceInterface.prototype['is_used_for_refund'] = undefined;

/**
 * Array of invoice items.
 * @member {Array.<module:model/SalesDataInvoiceItemInterface>} items
 */
SalesDataInvoiceInterface.prototype['items'] = undefined;

/**
 * Order currency code.
 * @member {String} order_currency_code
 */
SalesDataInvoiceInterface.prototype['order_currency_code'] = undefined;

/**
 * Order ID.
 * @member {Number} order_id
 */
SalesDataInvoiceInterface.prototype['order_id'] = undefined;

/**
 * Shipping address ID.
 * @member {Number} shipping_address_id
 */
SalesDataInvoiceInterface.prototype['shipping_address_id'] = undefined;

/**
 * Shipping amount.
 * @member {Number} shipping_amount
 */
SalesDataInvoiceInterface.prototype['shipping_amount'] = undefined;

/**
 * Shipping discount tax compensation amount.
 * @member {Number} shipping_discount_tax_compensation_amount
 */
SalesDataInvoiceInterface.prototype['shipping_discount_tax_compensation_amount'] = undefined;

/**
 * Shipping including tax.
 * @member {Number} shipping_incl_tax
 */
SalesDataInvoiceInterface.prototype['shipping_incl_tax'] = undefined;

/**
 * Shipping tax amount.
 * @member {Number} shipping_tax_amount
 */
SalesDataInvoiceInterface.prototype['shipping_tax_amount'] = undefined;

/**
 * State.
 * @member {Number} state
 */
SalesDataInvoiceInterface.prototype['state'] = undefined;

/**
 * Store currency code.
 * @member {String} store_currency_code
 */
SalesDataInvoiceInterface.prototype['store_currency_code'] = undefined;

/**
 * Store ID.
 * @member {Number} store_id
 */
SalesDataInvoiceInterface.prototype['store_id'] = undefined;

/**
 * Store-to-base rate.
 * @member {Number} store_to_base_rate
 */
SalesDataInvoiceInterface.prototype['store_to_base_rate'] = undefined;

/**
 * Store-to-order rate.
 * @member {Number} store_to_order_rate
 */
SalesDataInvoiceInterface.prototype['store_to_order_rate'] = undefined;

/**
 * Subtotal.
 * @member {Number} subtotal
 */
SalesDataInvoiceInterface.prototype['subtotal'] = undefined;

/**
 * Subtotal including tax.
 * @member {Number} subtotal_incl_tax
 */
SalesDataInvoiceInterface.prototype['subtotal_incl_tax'] = undefined;

/**
 * Tax amount.
 * @member {Number} tax_amount
 */
SalesDataInvoiceInterface.prototype['tax_amount'] = undefined;

/**
 * Total quantity.
 * @member {Number} total_qty
 */
SalesDataInvoiceInterface.prototype['total_qty'] = undefined;

/**
 * Transaction ID.
 * @member {String} transaction_id
 */
SalesDataInvoiceInterface.prototype['transaction_id'] = undefined;

/**
 * Updated-at timestamp.
 * @member {String} updated_at
 */
SalesDataInvoiceInterface.prototype['updated_at'] = undefined;






export default SalesDataInvoiceInterface;

