/**
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The RmaDataItemInterface model module.
 * @module model/RmaDataItemInterface
 * @version 2.2.10
 */
class RmaDataItemInterface {
    /**
     * Constructs a new <code>RmaDataItemInterface</code>.
     * Interface CategoryInterface
     * @alias module:model/RmaDataItemInterface
     * @param condition {String} Condition
     * @param entityId {Number} Id
     * @param orderItemId {Number} Order_item_id
     * @param qtyApproved {Number} Qty_approved
     * @param qtyAuthorized {Number} Qty_authorized
     * @param qtyRequested {Number} Qty_requested
     * @param qtyReturned {Number} Qty_returned
     * @param reason {String} Reason
     * @param resolution {String} Resolution
     * @param rmaEntityId {Number} RMA id
     * @param status {String} Status
     */
    constructor(condition, entityId, orderItemId, qtyApproved, qtyAuthorized, qtyRequested, qtyReturned, reason, resolution, rmaEntityId, status) { 
        
        RmaDataItemInterface.initialize(this, condition, entityId, orderItemId, qtyApproved, qtyAuthorized, qtyRequested, qtyReturned, reason, resolution, rmaEntityId, status);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, condition, entityId, orderItemId, qtyApproved, qtyAuthorized, qtyRequested, qtyReturned, reason, resolution, rmaEntityId, status) { 
        obj['condition'] = condition;
        obj['entity_id'] = entityId;
        obj['order_item_id'] = orderItemId;
        obj['qty_approved'] = qtyApproved;
        obj['qty_authorized'] = qtyAuthorized;
        obj['qty_requested'] = qtyRequested;
        obj['qty_returned'] = qtyReturned;
        obj['reason'] = reason;
        obj['resolution'] = resolution;
        obj['rma_entity_id'] = rmaEntityId;
        obj['status'] = status;
    }

    /**
     * Constructs a <code>RmaDataItemInterface</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RmaDataItemInterface} obj Optional instance to populate.
     * @return {module:model/RmaDataItemInterface} The populated <code>RmaDataItemInterface</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RmaDataItemInterface();

            if (data.hasOwnProperty('condition')) {
                obj['condition'] = ApiClient.convertToType(data['condition'], 'String');
            }
            if (data.hasOwnProperty('entity_id')) {
                obj['entity_id'] = ApiClient.convertToType(data['entity_id'], 'Number');
            }
            if (data.hasOwnProperty('extension_attributes')) {
                obj['extension_attributes'] = ApiClient.convertToType(data['extension_attributes'], Object);
            }
            if (data.hasOwnProperty('order_item_id')) {
                obj['order_item_id'] = ApiClient.convertToType(data['order_item_id'], 'Number');
            }
            if (data.hasOwnProperty('qty_approved')) {
                obj['qty_approved'] = ApiClient.convertToType(data['qty_approved'], 'Number');
            }
            if (data.hasOwnProperty('qty_authorized')) {
                obj['qty_authorized'] = ApiClient.convertToType(data['qty_authorized'], 'Number');
            }
            if (data.hasOwnProperty('qty_requested')) {
                obj['qty_requested'] = ApiClient.convertToType(data['qty_requested'], 'Number');
            }
            if (data.hasOwnProperty('qty_returned')) {
                obj['qty_returned'] = ApiClient.convertToType(data['qty_returned'], 'Number');
            }
            if (data.hasOwnProperty('reason')) {
                obj['reason'] = ApiClient.convertToType(data['reason'], 'String');
            }
            if (data.hasOwnProperty('resolution')) {
                obj['resolution'] = ApiClient.convertToType(data['resolution'], 'String');
            }
            if (data.hasOwnProperty('rma_entity_id')) {
                obj['rma_entity_id'] = ApiClient.convertToType(data['rma_entity_id'], 'Number');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RmaDataItemInterface</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RmaDataItemInterface</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of RmaDataItemInterface.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['condition'] && !(typeof data['condition'] === 'string' || data['condition'] instanceof String)) {
            throw new Error("Expected the field `condition` to be a primitive type in the JSON string but got " + data['condition']);
        }
        // ensure the json data is a string
        if (data['reason'] && !(typeof data['reason'] === 'string' || data['reason'] instanceof String)) {
            throw new Error("Expected the field `reason` to be a primitive type in the JSON string but got " + data['reason']);
        }
        // ensure the json data is a string
        if (data['resolution'] && !(typeof data['resolution'] === 'string' || data['resolution'] instanceof String)) {
            throw new Error("Expected the field `resolution` to be a primitive type in the JSON string but got " + data['resolution']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }

        return true;
    }


}

RmaDataItemInterface.RequiredProperties = ["condition", "entity_id", "order_item_id", "qty_approved", "qty_authorized", "qty_requested", "qty_returned", "reason", "resolution", "rma_entity_id", "status"];

/**
 * Condition
 * @member {String} condition
 */
RmaDataItemInterface.prototype['condition'] = undefined;

/**
 * Id
 * @member {Number} entity_id
 */
RmaDataItemInterface.prototype['entity_id'] = undefined;

/**
 * ExtensionInterface class for @see \\Magento\\Rma\\Api\\Data\\ItemInterface
 * @member {Object} extension_attributes
 */
RmaDataItemInterface.prototype['extension_attributes'] = undefined;

/**
 * Order_item_id
 * @member {Number} order_item_id
 */
RmaDataItemInterface.prototype['order_item_id'] = undefined;

/**
 * Qty_approved
 * @member {Number} qty_approved
 */
RmaDataItemInterface.prototype['qty_approved'] = undefined;

/**
 * Qty_authorized
 * @member {Number} qty_authorized
 */
RmaDataItemInterface.prototype['qty_authorized'] = undefined;

/**
 * Qty_requested
 * @member {Number} qty_requested
 */
RmaDataItemInterface.prototype['qty_requested'] = undefined;

/**
 * Qty_returned
 * @member {Number} qty_returned
 */
RmaDataItemInterface.prototype['qty_returned'] = undefined;

/**
 * Reason
 * @member {String} reason
 */
RmaDataItemInterface.prototype['reason'] = undefined;

/**
 * Resolution
 * @member {String} resolution
 */
RmaDataItemInterface.prototype['resolution'] = undefined;

/**
 * RMA id
 * @member {Number} rma_entity_id
 */
RmaDataItemInterface.prototype['rma_entity_id'] = undefined;

/**
 * Status
 * @member {String} status
 */
RmaDataItemInterface.prototype['status'] = undefined;






export default RmaDataItemInterface;

