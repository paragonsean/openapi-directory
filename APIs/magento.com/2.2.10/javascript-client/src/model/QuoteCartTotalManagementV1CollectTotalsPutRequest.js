/**
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import QuoteDataPaymentInterface from './QuoteDataPaymentInterface';
import QuoteDataTotalsAdditionalDataInterface from './QuoteDataTotalsAdditionalDataInterface';

/**
 * The QuoteCartTotalManagementV1CollectTotalsPutRequest model module.
 * @module model/QuoteCartTotalManagementV1CollectTotalsPutRequest
 * @version 2.2.10
 */
class QuoteCartTotalManagementV1CollectTotalsPutRequest {
    /**
     * Constructs a new <code>QuoteCartTotalManagementV1CollectTotalsPutRequest</code>.
     * @alias module:model/QuoteCartTotalManagementV1CollectTotalsPutRequest
     * @param paymentMethod {module:model/QuoteDataPaymentInterface} 
     */
    constructor(paymentMethod) { 
        
        QuoteCartTotalManagementV1CollectTotalsPutRequest.initialize(this, paymentMethod);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, paymentMethod) { 
        obj['paymentMethod'] = paymentMethod;
    }

    /**
     * Constructs a <code>QuoteCartTotalManagementV1CollectTotalsPutRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/QuoteCartTotalManagementV1CollectTotalsPutRequest} obj Optional instance to populate.
     * @return {module:model/QuoteCartTotalManagementV1CollectTotalsPutRequest} The populated <code>QuoteCartTotalManagementV1CollectTotalsPutRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new QuoteCartTotalManagementV1CollectTotalsPutRequest();

            if (data.hasOwnProperty('additionalData')) {
                obj['additionalData'] = QuoteDataTotalsAdditionalDataInterface.constructFromObject(data['additionalData']);
            }
            if (data.hasOwnProperty('paymentMethod')) {
                obj['paymentMethod'] = QuoteDataPaymentInterface.constructFromObject(data['paymentMethod']);
            }
            if (data.hasOwnProperty('shippingCarrierCode')) {
                obj['shippingCarrierCode'] = ApiClient.convertToType(data['shippingCarrierCode'], 'String');
            }
            if (data.hasOwnProperty('shippingMethodCode')) {
                obj['shippingMethodCode'] = ApiClient.convertToType(data['shippingMethodCode'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>QuoteCartTotalManagementV1CollectTotalsPutRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>QuoteCartTotalManagementV1CollectTotalsPutRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of QuoteCartTotalManagementV1CollectTotalsPutRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `additionalData`
        if (data['additionalData']) { // data not null
          QuoteDataTotalsAdditionalDataInterface.validateJSON(data['additionalData']);
        }
        // validate the optional field `paymentMethod`
        if (data['paymentMethod']) { // data not null
          QuoteDataPaymentInterface.validateJSON(data['paymentMethod']);
        }
        // ensure the json data is a string
        if (data['shippingCarrierCode'] && !(typeof data['shippingCarrierCode'] === 'string' || data['shippingCarrierCode'] instanceof String)) {
            throw new Error("Expected the field `shippingCarrierCode` to be a primitive type in the JSON string but got " + data['shippingCarrierCode']);
        }
        // ensure the json data is a string
        if (data['shippingMethodCode'] && !(typeof data['shippingMethodCode'] === 'string' || data['shippingMethodCode'] instanceof String)) {
            throw new Error("Expected the field `shippingMethodCode` to be a primitive type in the JSON string but got " + data['shippingMethodCode']);
        }

        return true;
    }


}

QuoteCartTotalManagementV1CollectTotalsPutRequest.RequiredProperties = ["paymentMethod"];

/**
 * @member {module:model/QuoteDataTotalsAdditionalDataInterface} additionalData
 */
QuoteCartTotalManagementV1CollectTotalsPutRequest.prototype['additionalData'] = undefined;

/**
 * @member {module:model/QuoteDataPaymentInterface} paymentMethod
 */
QuoteCartTotalManagementV1CollectTotalsPutRequest.prototype['paymentMethod'] = undefined;

/**
 * The carrier code.
 * @member {String} shippingCarrierCode
 */
QuoteCartTotalManagementV1CollectTotalsPutRequest.prototype['shippingCarrierCode'] = undefined;

/**
 * The shipping method code.
 * @member {String} shippingMethodCode
 */
QuoteCartTotalManagementV1CollectTotalsPutRequest.prototype['shippingMethodCode'] = undefined;






export default QuoteCartTotalManagementV1CollectTotalsPutRequest;

