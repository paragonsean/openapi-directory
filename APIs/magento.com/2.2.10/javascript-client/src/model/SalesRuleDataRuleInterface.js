/**
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SalesRuleDataConditionInterface from './SalesRuleDataConditionInterface';
import SalesRuleDataRuleExtensionInterface from './SalesRuleDataRuleExtensionInterface';
import SalesRuleDataRuleLabelInterface from './SalesRuleDataRuleLabelInterface';

/**
 * The SalesRuleDataRuleInterface model module.
 * @module model/SalesRuleDataRuleInterface
 * @version 2.2.10
 */
class SalesRuleDataRuleInterface {
    /**
     * Constructs a new <code>SalesRuleDataRuleInterface</code>.
     * Interface RuleInterface
     * @alias module:model/SalesRuleDataRuleInterface
     * @param applyToShipping {Boolean} The rule applies to shipping
     * @param couponType {String} Coupon type
     * @param customerGroupIds {Array.<Number>} Ids of customer groups that the rule applies to
     * @param discountAmount {Number} Discount amount
     * @param discountStep {Number} Discount step
     * @param isActive {Boolean} The coupon is active
     * @param isAdvanced {Boolean} Is this field needed
     * @param isRss {Boolean} Whether the rule is in RSS
     * @param sortOrder {Number} Sort order
     * @param stopRulesProcessing {Boolean} To stop rule processing
     * @param timesUsed {Number} How many times the rule has been used
     * @param useAutoGeneration {Boolean} To auto generate coupon
     * @param usesPerCoupon {Number} Limit of uses per coupon
     * @param usesPerCustomer {Number} Number of uses per customer
     * @param websiteIds {Array.<Number>} A list of websites the rule applies to
     */
    constructor(applyToShipping, couponType, customerGroupIds, discountAmount, discountStep, isActive, isAdvanced, isRss, sortOrder, stopRulesProcessing, timesUsed, useAutoGeneration, usesPerCoupon, usesPerCustomer, websiteIds) { 
        
        SalesRuleDataRuleInterface.initialize(this, applyToShipping, couponType, customerGroupIds, discountAmount, discountStep, isActive, isAdvanced, isRss, sortOrder, stopRulesProcessing, timesUsed, useAutoGeneration, usesPerCoupon, usesPerCustomer, websiteIds);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, applyToShipping, couponType, customerGroupIds, discountAmount, discountStep, isActive, isAdvanced, isRss, sortOrder, stopRulesProcessing, timesUsed, useAutoGeneration, usesPerCoupon, usesPerCustomer, websiteIds) { 
        obj['apply_to_shipping'] = applyToShipping;
        obj['coupon_type'] = couponType;
        obj['customer_group_ids'] = customerGroupIds;
        obj['discount_amount'] = discountAmount;
        obj['discount_step'] = discountStep;
        obj['is_active'] = isActive;
        obj['is_advanced'] = isAdvanced;
        obj['is_rss'] = isRss;
        obj['sort_order'] = sortOrder;
        obj['stop_rules_processing'] = stopRulesProcessing;
        obj['times_used'] = timesUsed;
        obj['use_auto_generation'] = useAutoGeneration;
        obj['uses_per_coupon'] = usesPerCoupon;
        obj['uses_per_customer'] = usesPerCustomer;
        obj['website_ids'] = websiteIds;
    }

    /**
     * Constructs a <code>SalesRuleDataRuleInterface</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SalesRuleDataRuleInterface} obj Optional instance to populate.
     * @return {module:model/SalesRuleDataRuleInterface} The populated <code>SalesRuleDataRuleInterface</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SalesRuleDataRuleInterface();

            if (data.hasOwnProperty('action_condition')) {
                obj['action_condition'] = SalesRuleDataConditionInterface.constructFromObject(data['action_condition']);
            }
            if (data.hasOwnProperty('apply_to_shipping')) {
                obj['apply_to_shipping'] = ApiClient.convertToType(data['apply_to_shipping'], 'Boolean');
            }
            if (data.hasOwnProperty('condition')) {
                obj['condition'] = SalesRuleDataConditionInterface.constructFromObject(data['condition']);
            }
            if (data.hasOwnProperty('coupon_type')) {
                obj['coupon_type'] = ApiClient.convertToType(data['coupon_type'], 'String');
            }
            if (data.hasOwnProperty('customer_group_ids')) {
                obj['customer_group_ids'] = ApiClient.convertToType(data['customer_group_ids'], ['Number']);
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('discount_amount')) {
                obj['discount_amount'] = ApiClient.convertToType(data['discount_amount'], 'Number');
            }
            if (data.hasOwnProperty('discount_qty')) {
                obj['discount_qty'] = ApiClient.convertToType(data['discount_qty'], 'Number');
            }
            if (data.hasOwnProperty('discount_step')) {
                obj['discount_step'] = ApiClient.convertToType(data['discount_step'], 'Number');
            }
            if (data.hasOwnProperty('extension_attributes')) {
                obj['extension_attributes'] = SalesRuleDataRuleExtensionInterface.constructFromObject(data['extension_attributes']);
            }
            if (data.hasOwnProperty('from_date')) {
                obj['from_date'] = ApiClient.convertToType(data['from_date'], 'String');
            }
            if (data.hasOwnProperty('is_active')) {
                obj['is_active'] = ApiClient.convertToType(data['is_active'], 'Boolean');
            }
            if (data.hasOwnProperty('is_advanced')) {
                obj['is_advanced'] = ApiClient.convertToType(data['is_advanced'], 'Boolean');
            }
            if (data.hasOwnProperty('is_rss')) {
                obj['is_rss'] = ApiClient.convertToType(data['is_rss'], 'Boolean');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('product_ids')) {
                obj['product_ids'] = ApiClient.convertToType(data['product_ids'], ['Number']);
            }
            if (data.hasOwnProperty('rule_id')) {
                obj['rule_id'] = ApiClient.convertToType(data['rule_id'], 'Number');
            }
            if (data.hasOwnProperty('simple_action')) {
                obj['simple_action'] = ApiClient.convertToType(data['simple_action'], 'String');
            }
            if (data.hasOwnProperty('simple_free_shipping')) {
                obj['simple_free_shipping'] = ApiClient.convertToType(data['simple_free_shipping'], 'String');
            }
            if (data.hasOwnProperty('sort_order')) {
                obj['sort_order'] = ApiClient.convertToType(data['sort_order'], 'Number');
            }
            if (data.hasOwnProperty('stop_rules_processing')) {
                obj['stop_rules_processing'] = ApiClient.convertToType(data['stop_rules_processing'], 'Boolean');
            }
            if (data.hasOwnProperty('store_labels')) {
                obj['store_labels'] = ApiClient.convertToType(data['store_labels'], [SalesRuleDataRuleLabelInterface]);
            }
            if (data.hasOwnProperty('times_used')) {
                obj['times_used'] = ApiClient.convertToType(data['times_used'], 'Number');
            }
            if (data.hasOwnProperty('to_date')) {
                obj['to_date'] = ApiClient.convertToType(data['to_date'], 'String');
            }
            if (data.hasOwnProperty('use_auto_generation')) {
                obj['use_auto_generation'] = ApiClient.convertToType(data['use_auto_generation'], 'Boolean');
            }
            if (data.hasOwnProperty('uses_per_coupon')) {
                obj['uses_per_coupon'] = ApiClient.convertToType(data['uses_per_coupon'], 'Number');
            }
            if (data.hasOwnProperty('uses_per_customer')) {
                obj['uses_per_customer'] = ApiClient.convertToType(data['uses_per_customer'], 'Number');
            }
            if (data.hasOwnProperty('website_ids')) {
                obj['website_ids'] = ApiClient.convertToType(data['website_ids'], ['Number']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SalesRuleDataRuleInterface</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SalesRuleDataRuleInterface</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of SalesRuleDataRuleInterface.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `action_condition`
        if (data['action_condition']) { // data not null
          SalesRuleDataConditionInterface.validateJSON(data['action_condition']);
        }
        // validate the optional field `condition`
        if (data['condition']) { // data not null
          SalesRuleDataConditionInterface.validateJSON(data['condition']);
        }
        // ensure the json data is a string
        if (data['coupon_type'] && !(typeof data['coupon_type'] === 'string' || data['coupon_type'] instanceof String)) {
            throw new Error("Expected the field `coupon_type` to be a primitive type in the JSON string but got " + data['coupon_type']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['customer_group_ids'])) {
            throw new Error("Expected the field `customer_group_ids` to be an array in the JSON data but got " + data['customer_group_ids']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // validate the optional field `extension_attributes`
        if (data['extension_attributes']) { // data not null
          SalesRuleDataRuleExtensionInterface.validateJSON(data['extension_attributes']);
        }
        // ensure the json data is a string
        if (data['from_date'] && !(typeof data['from_date'] === 'string' || data['from_date'] instanceof String)) {
            throw new Error("Expected the field `from_date` to be a primitive type in the JSON string but got " + data['from_date']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['product_ids'])) {
            throw new Error("Expected the field `product_ids` to be an array in the JSON data but got " + data['product_ids']);
        }
        // ensure the json data is a string
        if (data['simple_action'] && !(typeof data['simple_action'] === 'string' || data['simple_action'] instanceof String)) {
            throw new Error("Expected the field `simple_action` to be a primitive type in the JSON string but got " + data['simple_action']);
        }
        // ensure the json data is a string
        if (data['simple_free_shipping'] && !(typeof data['simple_free_shipping'] === 'string' || data['simple_free_shipping'] instanceof String)) {
            throw new Error("Expected the field `simple_free_shipping` to be a primitive type in the JSON string but got " + data['simple_free_shipping']);
        }
        if (data['store_labels']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['store_labels'])) {
                throw new Error("Expected the field `store_labels` to be an array in the JSON data but got " + data['store_labels']);
            }
            // validate the optional field `store_labels` (array)
            for (const item of data['store_labels']) {
                SalesRuleDataRuleLabelInterface.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['to_date'] && !(typeof data['to_date'] === 'string' || data['to_date'] instanceof String)) {
            throw new Error("Expected the field `to_date` to be a primitive type in the JSON string but got " + data['to_date']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['website_ids'])) {
            throw new Error("Expected the field `website_ids` to be an array in the JSON data but got " + data['website_ids']);
        }

        return true;
    }


}

SalesRuleDataRuleInterface.RequiredProperties = ["apply_to_shipping", "coupon_type", "customer_group_ids", "discount_amount", "discount_step", "is_active", "is_advanced", "is_rss", "sort_order", "stop_rules_processing", "times_used", "use_auto_generation", "uses_per_coupon", "uses_per_customer", "website_ids"];

/**
 * @member {module:model/SalesRuleDataConditionInterface} action_condition
 */
SalesRuleDataRuleInterface.prototype['action_condition'] = undefined;

/**
 * The rule applies to shipping
 * @member {Boolean} apply_to_shipping
 */
SalesRuleDataRuleInterface.prototype['apply_to_shipping'] = undefined;

/**
 * @member {module:model/SalesRuleDataConditionInterface} condition
 */
SalesRuleDataRuleInterface.prototype['condition'] = undefined;

/**
 * Coupon type
 * @member {String} coupon_type
 */
SalesRuleDataRuleInterface.prototype['coupon_type'] = undefined;

/**
 * Ids of customer groups that the rule applies to
 * @member {Array.<Number>} customer_group_ids
 */
SalesRuleDataRuleInterface.prototype['customer_group_ids'] = undefined;

/**
 * Description
 * @member {String} description
 */
SalesRuleDataRuleInterface.prototype['description'] = undefined;

/**
 * Discount amount
 * @member {Number} discount_amount
 */
SalesRuleDataRuleInterface.prototype['discount_amount'] = undefined;

/**
 * Maximum qty discount is applied
 * @member {Number} discount_qty
 */
SalesRuleDataRuleInterface.prototype['discount_qty'] = undefined;

/**
 * Discount step
 * @member {Number} discount_step
 */
SalesRuleDataRuleInterface.prototype['discount_step'] = undefined;

/**
 * @member {module:model/SalesRuleDataRuleExtensionInterface} extension_attributes
 */
SalesRuleDataRuleInterface.prototype['extension_attributes'] = undefined;

/**
 * The start date when the coupon is active
 * @member {String} from_date
 */
SalesRuleDataRuleInterface.prototype['from_date'] = undefined;

/**
 * The coupon is active
 * @member {Boolean} is_active
 */
SalesRuleDataRuleInterface.prototype['is_active'] = undefined;

/**
 * Is this field needed
 * @member {Boolean} is_advanced
 */
SalesRuleDataRuleInterface.prototype['is_advanced'] = undefined;

/**
 * Whether the rule is in RSS
 * @member {Boolean} is_rss
 */
SalesRuleDataRuleInterface.prototype['is_rss'] = undefined;

/**
 * Rule name
 * @member {String} name
 */
SalesRuleDataRuleInterface.prototype['name'] = undefined;

/**
 * Product ids
 * @member {Array.<Number>} product_ids
 */
SalesRuleDataRuleInterface.prototype['product_ids'] = undefined;

/**
 * Rule id
 * @member {Number} rule_id
 */
SalesRuleDataRuleInterface.prototype['rule_id'] = undefined;

/**
 * Simple action of the rule
 * @member {String} simple_action
 */
SalesRuleDataRuleInterface.prototype['simple_action'] = undefined;

/**
 * To grant free shipping
 * @member {String} simple_free_shipping
 */
SalesRuleDataRuleInterface.prototype['simple_free_shipping'] = undefined;

/**
 * Sort order
 * @member {Number} sort_order
 */
SalesRuleDataRuleInterface.prototype['sort_order'] = undefined;

/**
 * To stop rule processing
 * @member {Boolean} stop_rules_processing
 */
SalesRuleDataRuleInterface.prototype['stop_rules_processing'] = undefined;

/**
 * Display label
 * @member {Array.<module:model/SalesRuleDataRuleLabelInterface>} store_labels
 */
SalesRuleDataRuleInterface.prototype['store_labels'] = undefined;

/**
 * How many times the rule has been used
 * @member {Number} times_used
 */
SalesRuleDataRuleInterface.prototype['times_used'] = undefined;

/**
 * The end date when the coupon is active
 * @member {String} to_date
 */
SalesRuleDataRuleInterface.prototype['to_date'] = undefined;

/**
 * To auto generate coupon
 * @member {Boolean} use_auto_generation
 */
SalesRuleDataRuleInterface.prototype['use_auto_generation'] = undefined;

/**
 * Limit of uses per coupon
 * @member {Number} uses_per_coupon
 */
SalesRuleDataRuleInterface.prototype['uses_per_coupon'] = undefined;

/**
 * Number of uses per customer
 * @member {Number} uses_per_customer
 */
SalesRuleDataRuleInterface.prototype['uses_per_customer'] = undefined;

/**
 * A list of websites the rule applies to
 * @member {Array.<Number>} website_ids
 */
SalesRuleDataRuleInterface.prototype['website_ids'] = undefined;






export default SalesRuleDataRuleInterface;

