/**
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The FrameworkAttributeInterface model module.
 * @module model/FrameworkAttributeInterface
 * @version 2.2.10
 */
class FrameworkAttributeInterface {
    /**
     * Constructs a new <code>FrameworkAttributeInterface</code>.
     * Interface for custom attribute value.
     * @alias module:model/FrameworkAttributeInterface
     * @param attributeCode {String} Attribute code
     * @param value {String} Attribute value
     */
    constructor(attributeCode, value) { 
        
        FrameworkAttributeInterface.initialize(this, attributeCode, value);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, attributeCode, value) { 
        obj['attribute_code'] = attributeCode;
        obj['value'] = value;
    }

    /**
     * Constructs a <code>FrameworkAttributeInterface</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FrameworkAttributeInterface} obj Optional instance to populate.
     * @return {module:model/FrameworkAttributeInterface} The populated <code>FrameworkAttributeInterface</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FrameworkAttributeInterface();

            if (data.hasOwnProperty('attribute_code')) {
                obj['attribute_code'] = ApiClient.convertToType(data['attribute_code'], 'String');
            }
            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FrameworkAttributeInterface</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FrameworkAttributeInterface</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of FrameworkAttributeInterface.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['attribute_code'] && !(typeof data['attribute_code'] === 'string' || data['attribute_code'] instanceof String)) {
            throw new Error("Expected the field `attribute_code` to be a primitive type in the JSON string but got " + data['attribute_code']);
        }
        // ensure the json data is a string
        if (data['value'] && !(typeof data['value'] === 'string' || data['value'] instanceof String)) {
            throw new Error("Expected the field `value` to be a primitive type in the JSON string but got " + data['value']);
        }

        return true;
    }


}

FrameworkAttributeInterface.RequiredProperties = ["attribute_code", "value"];

/**
 * Attribute code
 * @member {String} attribute_code
 */
FrameworkAttributeInterface.prototype['attribute_code'] = undefined;

/**
 * Attribute value
 * @member {String} value
 */
FrameworkAttributeInterface.prototype['value'] = undefined;






export default FrameworkAttributeInterface;

