/**
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CompanyDataPermissionInterface from './CompanyDataPermissionInterface';

/**
 * The CompanyDataRoleInterface model module.
 * @module model/CompanyDataRoleInterface
 * @version 2.2.10
 */
class CompanyDataRoleInterface {
    /**
     * Constructs a new <code>CompanyDataRoleInterface</code>.
     * Role data transfer object interface.
     * @alias module:model/CompanyDataRoleInterface
     * @param permissions {Array.<module:model/CompanyDataPermissionInterface>} Permissions.
     */
    constructor(permissions) { 
        
        CompanyDataRoleInterface.initialize(this, permissions);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, permissions) { 
        obj['permissions'] = permissions;
    }

    /**
     * Constructs a <code>CompanyDataRoleInterface</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CompanyDataRoleInterface} obj Optional instance to populate.
     * @return {module:model/CompanyDataRoleInterface} The populated <code>CompanyDataRoleInterface</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CompanyDataRoleInterface();

            if (data.hasOwnProperty('company_id')) {
                obj['company_id'] = ApiClient.convertToType(data['company_id'], 'Number');
            }
            if (data.hasOwnProperty('extension_attributes')) {
                obj['extension_attributes'] = ApiClient.convertToType(data['extension_attributes'], Object);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('permissions')) {
                obj['permissions'] = ApiClient.convertToType(data['permissions'], [CompanyDataPermissionInterface]);
            }
            if (data.hasOwnProperty('role_name')) {
                obj['role_name'] = ApiClient.convertToType(data['role_name'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CompanyDataRoleInterface</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CompanyDataRoleInterface</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CompanyDataRoleInterface.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['permissions']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['permissions'])) {
                throw new Error("Expected the field `permissions` to be an array in the JSON data but got " + data['permissions']);
            }
            // validate the optional field `permissions` (array)
            for (const item of data['permissions']) {
                CompanyDataPermissionInterface.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['role_name'] && !(typeof data['role_name'] === 'string' || data['role_name'] instanceof String)) {
            throw new Error("Expected the field `role_name` to be a primitive type in the JSON string but got " + data['role_name']);
        }

        return true;
    }


}

CompanyDataRoleInterface.RequiredProperties = ["permissions"];

/**
 * Company id.
 * @member {Number} company_id
 */
CompanyDataRoleInterface.prototype['company_id'] = undefined;

/**
 * ExtensionInterface class for @see \\Magento\\Company\\Api\\Data\\RoleInterface
 * @member {Object} extension_attributes
 */
CompanyDataRoleInterface.prototype['extension_attributes'] = undefined;

/**
 * Role id.
 * @member {Number} id
 */
CompanyDataRoleInterface.prototype['id'] = undefined;

/**
 * Permissions.
 * @member {Array.<module:model/CompanyDataPermissionInterface>} permissions
 */
CompanyDataRoleInterface.prototype['permissions'] = undefined;

/**
 * Role name.
 * @member {String} role_name
 */
CompanyDataRoleInterface.prototype['role_name'] = undefined;






export default CompanyDataRoleInterface;

