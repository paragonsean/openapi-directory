/**
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CatalogDataProductLinkExtensionInterface from './CatalogDataProductLinkExtensionInterface';

/**
 * The CatalogDataProductLinkInterface model module.
 * @module model/CatalogDataProductLinkInterface
 * @version 2.2.10
 */
class CatalogDataProductLinkInterface {
    /**
     * Constructs a new <code>CatalogDataProductLinkInterface</code>.
     * 
     * @alias module:model/CatalogDataProductLinkInterface
     * @param linkType {String} Link type
     * @param linkedProductSku {String} Linked product sku
     * @param linkedProductType {String} Linked product type (simple, virtual, etc)
     * @param position {Number} Linked item position
     * @param sku {String} SKU
     */
    constructor(linkType, linkedProductSku, linkedProductType, position, sku) { 
        
        CatalogDataProductLinkInterface.initialize(this, linkType, linkedProductSku, linkedProductType, position, sku);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, linkType, linkedProductSku, linkedProductType, position, sku) { 
        obj['link_type'] = linkType;
        obj['linked_product_sku'] = linkedProductSku;
        obj['linked_product_type'] = linkedProductType;
        obj['position'] = position;
        obj['sku'] = sku;
    }

    /**
     * Constructs a <code>CatalogDataProductLinkInterface</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CatalogDataProductLinkInterface} obj Optional instance to populate.
     * @return {module:model/CatalogDataProductLinkInterface} The populated <code>CatalogDataProductLinkInterface</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CatalogDataProductLinkInterface();

            if (data.hasOwnProperty('extension_attributes')) {
                obj['extension_attributes'] = CatalogDataProductLinkExtensionInterface.constructFromObject(data['extension_attributes']);
            }
            if (data.hasOwnProperty('link_type')) {
                obj['link_type'] = ApiClient.convertToType(data['link_type'], 'String');
            }
            if (data.hasOwnProperty('linked_product_sku')) {
                obj['linked_product_sku'] = ApiClient.convertToType(data['linked_product_sku'], 'String');
            }
            if (data.hasOwnProperty('linked_product_type')) {
                obj['linked_product_type'] = ApiClient.convertToType(data['linked_product_type'], 'String');
            }
            if (data.hasOwnProperty('position')) {
                obj['position'] = ApiClient.convertToType(data['position'], 'Number');
            }
            if (data.hasOwnProperty('sku')) {
                obj['sku'] = ApiClient.convertToType(data['sku'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CatalogDataProductLinkInterface</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CatalogDataProductLinkInterface</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CatalogDataProductLinkInterface.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `extension_attributes`
        if (data['extension_attributes']) { // data not null
          CatalogDataProductLinkExtensionInterface.validateJSON(data['extension_attributes']);
        }
        // ensure the json data is a string
        if (data['link_type'] && !(typeof data['link_type'] === 'string' || data['link_type'] instanceof String)) {
            throw new Error("Expected the field `link_type` to be a primitive type in the JSON string but got " + data['link_type']);
        }
        // ensure the json data is a string
        if (data['linked_product_sku'] && !(typeof data['linked_product_sku'] === 'string' || data['linked_product_sku'] instanceof String)) {
            throw new Error("Expected the field `linked_product_sku` to be a primitive type in the JSON string but got " + data['linked_product_sku']);
        }
        // ensure the json data is a string
        if (data['linked_product_type'] && !(typeof data['linked_product_type'] === 'string' || data['linked_product_type'] instanceof String)) {
            throw new Error("Expected the field `linked_product_type` to be a primitive type in the JSON string but got " + data['linked_product_type']);
        }
        // ensure the json data is a string
        if (data['sku'] && !(typeof data['sku'] === 'string' || data['sku'] instanceof String)) {
            throw new Error("Expected the field `sku` to be a primitive type in the JSON string but got " + data['sku']);
        }

        return true;
    }


}

CatalogDataProductLinkInterface.RequiredProperties = ["link_type", "linked_product_sku", "linked_product_type", "position", "sku"];

/**
 * @member {module:model/CatalogDataProductLinkExtensionInterface} extension_attributes
 */
CatalogDataProductLinkInterface.prototype['extension_attributes'] = undefined;

/**
 * Link type
 * @member {String} link_type
 */
CatalogDataProductLinkInterface.prototype['link_type'] = undefined;

/**
 * Linked product sku
 * @member {String} linked_product_sku
 */
CatalogDataProductLinkInterface.prototype['linked_product_sku'] = undefined;

/**
 * Linked product type (simple, virtual, etc)
 * @member {String} linked_product_type
 */
CatalogDataProductLinkInterface.prototype['linked_product_type'] = undefined;

/**
 * Linked item position
 * @member {Number} position
 */
CatalogDataProductLinkInterface.prototype['position'] = undefined;

/**
 * SKU
 * @member {String} sku
 */
CatalogDataProductLinkInterface.prototype['sku'] = undefined;






export default CatalogDataProductLinkInterface;

