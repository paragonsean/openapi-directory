/**
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GiftMessageDataMessageExtensionInterface from './GiftMessageDataMessageExtensionInterface';

/**
 * The GiftMessageDataMessageInterface model module.
 * @module model/GiftMessageDataMessageInterface
 * @version 2.2.10
 */
class GiftMessageDataMessageInterface {
    /**
     * Constructs a new <code>GiftMessageDataMessageInterface</code>.
     * Interface MessageInterface
     * @alias module:model/GiftMessageDataMessageInterface
     * @param message {String} Message text.
     * @param recipient {String} Recipient name.
     * @param sender {String} Sender name.
     */
    constructor(message, recipient, sender) { 
        
        GiftMessageDataMessageInterface.initialize(this, message, recipient, sender);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, message, recipient, sender) { 
        obj['message'] = message;
        obj['recipient'] = recipient;
        obj['sender'] = sender;
    }

    /**
     * Constructs a <code>GiftMessageDataMessageInterface</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GiftMessageDataMessageInterface} obj Optional instance to populate.
     * @return {module:model/GiftMessageDataMessageInterface} The populated <code>GiftMessageDataMessageInterface</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GiftMessageDataMessageInterface();

            if (data.hasOwnProperty('customer_id')) {
                obj['customer_id'] = ApiClient.convertToType(data['customer_id'], 'Number');
            }
            if (data.hasOwnProperty('extension_attributes')) {
                obj['extension_attributes'] = GiftMessageDataMessageExtensionInterface.constructFromObject(data['extension_attributes']);
            }
            if (data.hasOwnProperty('gift_message_id')) {
                obj['gift_message_id'] = ApiClient.convertToType(data['gift_message_id'], 'Number');
            }
            if (data.hasOwnProperty('message')) {
                obj['message'] = ApiClient.convertToType(data['message'], 'String');
            }
            if (data.hasOwnProperty('recipient')) {
                obj['recipient'] = ApiClient.convertToType(data['recipient'], 'String');
            }
            if (data.hasOwnProperty('sender')) {
                obj['sender'] = ApiClient.convertToType(data['sender'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GiftMessageDataMessageInterface</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GiftMessageDataMessageInterface</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of GiftMessageDataMessageInterface.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `extension_attributes`
        if (data['extension_attributes']) { // data not null
          GiftMessageDataMessageExtensionInterface.validateJSON(data['extension_attributes']);
        }
        // ensure the json data is a string
        if (data['message'] && !(typeof data['message'] === 'string' || data['message'] instanceof String)) {
            throw new Error("Expected the field `message` to be a primitive type in the JSON string but got " + data['message']);
        }
        // ensure the json data is a string
        if (data['recipient'] && !(typeof data['recipient'] === 'string' || data['recipient'] instanceof String)) {
            throw new Error("Expected the field `recipient` to be a primitive type in the JSON string but got " + data['recipient']);
        }
        // ensure the json data is a string
        if (data['sender'] && !(typeof data['sender'] === 'string' || data['sender'] instanceof String)) {
            throw new Error("Expected the field `sender` to be a primitive type in the JSON string but got " + data['sender']);
        }

        return true;
    }


}

GiftMessageDataMessageInterface.RequiredProperties = ["message", "recipient", "sender"];

/**
 * Customer ID. Otherwise, null.
 * @member {Number} customer_id
 */
GiftMessageDataMessageInterface.prototype['customer_id'] = undefined;

/**
 * @member {module:model/GiftMessageDataMessageExtensionInterface} extension_attributes
 */
GiftMessageDataMessageInterface.prototype['extension_attributes'] = undefined;

/**
 * Gift message ID. Otherwise, null.
 * @member {Number} gift_message_id
 */
GiftMessageDataMessageInterface.prototype['gift_message_id'] = undefined;

/**
 * Message text.
 * @member {String} message
 */
GiftMessageDataMessageInterface.prototype['message'] = undefined;

/**
 * Recipient name.
 * @member {String} recipient
 */
GiftMessageDataMessageInterface.prototype['recipient'] = undefined;

/**
 * Sender name.
 * @member {String} sender
 */
GiftMessageDataMessageInterface.prototype['sender'] = undefined;






export default GiftMessageDataMessageInterface;

