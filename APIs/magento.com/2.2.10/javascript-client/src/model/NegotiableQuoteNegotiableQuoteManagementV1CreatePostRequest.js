/**
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import NegotiableQuoteDataAttachmentContentInterface from './NegotiableQuoteDataAttachmentContentInterface';

/**
 * The NegotiableQuoteNegotiableQuoteManagementV1CreatePostRequest model module.
 * @module model/NegotiableQuoteNegotiableQuoteManagementV1CreatePostRequest
 * @version 2.2.10
 */
class NegotiableQuoteNegotiableQuoteManagementV1CreatePostRequest {
    /**
     * Constructs a new <code>NegotiableQuoteNegotiableQuoteManagementV1CreatePostRequest</code>.
     * @alias module:model/NegotiableQuoteNegotiableQuoteManagementV1CreatePostRequest
     * @param quoteId {Number} 
     * @param quoteName {String} 
     */
    constructor(quoteId, quoteName) { 
        
        NegotiableQuoteNegotiableQuoteManagementV1CreatePostRequest.initialize(this, quoteId, quoteName);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, quoteId, quoteName) { 
        obj['quoteId'] = quoteId;
        obj['quoteName'] = quoteName;
    }

    /**
     * Constructs a <code>NegotiableQuoteNegotiableQuoteManagementV1CreatePostRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/NegotiableQuoteNegotiableQuoteManagementV1CreatePostRequest} obj Optional instance to populate.
     * @return {module:model/NegotiableQuoteNegotiableQuoteManagementV1CreatePostRequest} The populated <code>NegotiableQuoteNegotiableQuoteManagementV1CreatePostRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new NegotiableQuoteNegotiableQuoteManagementV1CreatePostRequest();

            if (data.hasOwnProperty('comment')) {
                obj['comment'] = ApiClient.convertToType(data['comment'], 'String');
            }
            if (data.hasOwnProperty('files')) {
                obj['files'] = ApiClient.convertToType(data['files'], [NegotiableQuoteDataAttachmentContentInterface]);
            }
            if (data.hasOwnProperty('quoteId')) {
                obj['quoteId'] = ApiClient.convertToType(data['quoteId'], 'Number');
            }
            if (data.hasOwnProperty('quoteName')) {
                obj['quoteName'] = ApiClient.convertToType(data['quoteName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>NegotiableQuoteNegotiableQuoteManagementV1CreatePostRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>NegotiableQuoteNegotiableQuoteManagementV1CreatePostRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of NegotiableQuoteNegotiableQuoteManagementV1CreatePostRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['comment'] && !(typeof data['comment'] === 'string' || data['comment'] instanceof String)) {
            throw new Error("Expected the field `comment` to be a primitive type in the JSON string but got " + data['comment']);
        }
        if (data['files']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['files'])) {
                throw new Error("Expected the field `files` to be an array in the JSON data but got " + data['files']);
            }
            // validate the optional field `files` (array)
            for (const item of data['files']) {
                NegotiableQuoteDataAttachmentContentInterface.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['quoteName'] && !(typeof data['quoteName'] === 'string' || data['quoteName'] instanceof String)) {
            throw new Error("Expected the field `quoteName` to be a primitive type in the JSON string but got " + data['quoteName']);
        }

        return true;
    }


}

NegotiableQuoteNegotiableQuoteManagementV1CreatePostRequest.RequiredProperties = ["quoteId", "quoteName"];

/**
 * @member {String} comment
 */
NegotiableQuoteNegotiableQuoteManagementV1CreatePostRequest.prototype['comment'] = undefined;

/**
 * @member {Array.<module:model/NegotiableQuoteDataAttachmentContentInterface>} files
 */
NegotiableQuoteNegotiableQuoteManagementV1CreatePostRequest.prototype['files'] = undefined;

/**
 * @member {Number} quoteId
 */
NegotiableQuoteNegotiableQuoteManagementV1CreatePostRequest.prototype['quoteId'] = undefined;

/**
 * @member {String} quoteName
 */
NegotiableQuoteNegotiableQuoteManagementV1CreatePostRequest.prototype['quoteName'] = undefined;






export default NegotiableQuoteNegotiableQuoteManagementV1CreatePostRequest;

