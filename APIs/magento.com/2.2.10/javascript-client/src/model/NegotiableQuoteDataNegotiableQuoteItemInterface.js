/**
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The NegotiableQuoteDataNegotiableQuoteItemInterface model module.
 * @module model/NegotiableQuoteDataNegotiableQuoteItemInterface
 * @version 2.2.10
 */
class NegotiableQuoteDataNegotiableQuoteItemInterface {
    /**
     * Constructs a new <code>NegotiableQuoteDataNegotiableQuoteItemInterface</code>.
     * Interface CompanyQuoteConfigInterface
     * @alias module:model/NegotiableQuoteDataNegotiableQuoteItemInterface
     * @param itemId {Number} Quote item id
     * @param originalDiscountAmount {Number} Quote item original discount amount
     * @param originalPrice {Number} Quote item original price
     * @param originalTaxAmount {Number} Quote item original tax amount
     */
    constructor(itemId, originalDiscountAmount, originalPrice, originalTaxAmount) { 
        
        NegotiableQuoteDataNegotiableQuoteItemInterface.initialize(this, itemId, originalDiscountAmount, originalPrice, originalTaxAmount);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, itemId, originalDiscountAmount, originalPrice, originalTaxAmount) { 
        obj['item_id'] = itemId;
        obj['original_discount_amount'] = originalDiscountAmount;
        obj['original_price'] = originalPrice;
        obj['original_tax_amount'] = originalTaxAmount;
    }

    /**
     * Constructs a <code>NegotiableQuoteDataNegotiableQuoteItemInterface</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/NegotiableQuoteDataNegotiableQuoteItemInterface} obj Optional instance to populate.
     * @return {module:model/NegotiableQuoteDataNegotiableQuoteItemInterface} The populated <code>NegotiableQuoteDataNegotiableQuoteItemInterface</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new NegotiableQuoteDataNegotiableQuoteItemInterface();

            if (data.hasOwnProperty('extension_attributes')) {
                obj['extension_attributes'] = ApiClient.convertToType(data['extension_attributes'], Object);
            }
            if (data.hasOwnProperty('item_id')) {
                obj['item_id'] = ApiClient.convertToType(data['item_id'], 'Number');
            }
            if (data.hasOwnProperty('original_discount_amount')) {
                obj['original_discount_amount'] = ApiClient.convertToType(data['original_discount_amount'], 'Number');
            }
            if (data.hasOwnProperty('original_price')) {
                obj['original_price'] = ApiClient.convertToType(data['original_price'], 'Number');
            }
            if (data.hasOwnProperty('original_tax_amount')) {
                obj['original_tax_amount'] = ApiClient.convertToType(data['original_tax_amount'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>NegotiableQuoteDataNegotiableQuoteItemInterface</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>NegotiableQuoteDataNegotiableQuoteItemInterface</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of NegotiableQuoteDataNegotiableQuoteItemInterface.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }

        return true;
    }


}

NegotiableQuoteDataNegotiableQuoteItemInterface.RequiredProperties = ["item_id", "original_discount_amount", "original_price", "original_tax_amount"];

/**
 * ExtensionInterface class for @see \\Magento\\NegotiableQuote\\Api\\Data\\NegotiableQuoteItemInterface
 * @member {Object} extension_attributes
 */
NegotiableQuoteDataNegotiableQuoteItemInterface.prototype['extension_attributes'] = undefined;

/**
 * Quote item id
 * @member {Number} item_id
 */
NegotiableQuoteDataNegotiableQuoteItemInterface.prototype['item_id'] = undefined;

/**
 * Quote item original discount amount
 * @member {Number} original_discount_amount
 */
NegotiableQuoteDataNegotiableQuoteItemInterface.prototype['original_discount_amount'] = undefined;

/**
 * Quote item original price
 * @member {Number} original_price
 */
NegotiableQuoteDataNegotiableQuoteItemInterface.prototype['original_price'] = undefined;

/**
 * Quote item original tax amount
 * @member {Number} original_tax_amount
 */
NegotiableQuoteDataNegotiableQuoteItemInterface.prototype['original_tax_amount'] = undefined;






export default NegotiableQuoteDataNegotiableQuoteItemInterface;

