/**
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TaxDataGrandTotalRatesInterface from './TaxDataGrandTotalRatesInterface';

/**
 * The TaxDataGrandTotalDetailsInterface model module.
 * @module model/TaxDataGrandTotalDetailsInterface
 * @version 2.2.10
 */
class TaxDataGrandTotalDetailsInterface {
    /**
     * Constructs a new <code>TaxDataGrandTotalDetailsInterface</code>.
     * Interface GrandTotalDetailsInterface
     * @alias module:model/TaxDataGrandTotalDetailsInterface
     * @param amount {Number} Tax amount value
     * @param groupId {Number} Group identifier
     * @param rates {Array.<module:model/TaxDataGrandTotalRatesInterface>} Tax rates info
     */
    constructor(amount, groupId, rates) { 
        
        TaxDataGrandTotalDetailsInterface.initialize(this, amount, groupId, rates);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, amount, groupId, rates) { 
        obj['amount'] = amount;
        obj['group_id'] = groupId;
        obj['rates'] = rates;
    }

    /**
     * Constructs a <code>TaxDataGrandTotalDetailsInterface</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TaxDataGrandTotalDetailsInterface} obj Optional instance to populate.
     * @return {module:model/TaxDataGrandTotalDetailsInterface} The populated <code>TaxDataGrandTotalDetailsInterface</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TaxDataGrandTotalDetailsInterface();

            if (data.hasOwnProperty('amount')) {
                obj['amount'] = ApiClient.convertToType(data['amount'], 'Number');
            }
            if (data.hasOwnProperty('group_id')) {
                obj['group_id'] = ApiClient.convertToType(data['group_id'], 'Number');
            }
            if (data.hasOwnProperty('rates')) {
                obj['rates'] = ApiClient.convertToType(data['rates'], [TaxDataGrandTotalRatesInterface]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TaxDataGrandTotalDetailsInterface</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TaxDataGrandTotalDetailsInterface</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of TaxDataGrandTotalDetailsInterface.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['rates']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['rates'])) {
                throw new Error("Expected the field `rates` to be an array in the JSON data but got " + data['rates']);
            }
            // validate the optional field `rates` (array)
            for (const item of data['rates']) {
                TaxDataGrandTotalRatesInterface.validateJSON(item);
            };
        }

        return true;
    }


}

TaxDataGrandTotalDetailsInterface.RequiredProperties = ["amount", "group_id", "rates"];

/**
 * Tax amount value
 * @member {Number} amount
 */
TaxDataGrandTotalDetailsInterface.prototype['amount'] = undefined;

/**
 * Group identifier
 * @member {Number} group_id
 */
TaxDataGrandTotalDetailsInterface.prototype['group_id'] = undefined;

/**
 * Tax rates info
 * @member {Array.<module:model/TaxDataGrandTotalRatesInterface>} rates
 */
TaxDataGrandTotalDetailsInterface.prototype['rates'] = undefined;






export default TaxDataGrandTotalDetailsInterface;

