/**
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The QuoteDataPaymentMethodInterface model module.
 * @module model/QuoteDataPaymentMethodInterface
 * @version 2.2.10
 */
class QuoteDataPaymentMethodInterface {
    /**
     * Constructs a new <code>QuoteDataPaymentMethodInterface</code>.
     * Interface PaymentMethodInterface
     * @alias module:model/QuoteDataPaymentMethodInterface
     * @param code {String} Payment method code
     * @param title {String} Payment method title
     */
    constructor(code, title) { 
        
        QuoteDataPaymentMethodInterface.initialize(this, code, title);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, code, title) { 
        obj['code'] = code;
        obj['title'] = title;
    }

    /**
     * Constructs a <code>QuoteDataPaymentMethodInterface</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/QuoteDataPaymentMethodInterface} obj Optional instance to populate.
     * @return {module:model/QuoteDataPaymentMethodInterface} The populated <code>QuoteDataPaymentMethodInterface</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new QuoteDataPaymentMethodInterface();

            if (data.hasOwnProperty('code')) {
                obj['code'] = ApiClient.convertToType(data['code'], 'String');
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>QuoteDataPaymentMethodInterface</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>QuoteDataPaymentMethodInterface</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of QuoteDataPaymentMethodInterface.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['code'] && !(typeof data['code'] === 'string' || data['code'] instanceof String)) {
            throw new Error("Expected the field `code` to be a primitive type in the JSON string but got " + data['code']);
        }
        // ensure the json data is a string
        if (data['title'] && !(typeof data['title'] === 'string' || data['title'] instanceof String)) {
            throw new Error("Expected the field `title` to be a primitive type in the JSON string but got " + data['title']);
        }

        return true;
    }


}

QuoteDataPaymentMethodInterface.RequiredProperties = ["code", "title"];

/**
 * Payment method code
 * @member {String} code
 */
QuoteDataPaymentMethodInterface.prototype['code'] = undefined;

/**
 * Payment method title
 * @member {String} title
 */
QuoteDataPaymentMethodInterface.prototype['title'] = undefined;






export default QuoteDataPaymentMethodInterface;

