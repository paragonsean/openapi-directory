/**
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CompanyCreditDataHistoryDataInterface model module.
 * @module model/CompanyCreditDataHistoryDataInterface
 * @version 2.2.10
 */
class CompanyCreditDataHistoryDataInterface {
    /**
     * Constructs a new <code>CompanyCreditDataHistoryDataInterface</code>.
     * History data transfer object interface.
     * @alias module:model/CompanyCreditDataHistoryDataInterface
     * @param amount {Number} Amount.
     * @param balance {Number} Outstanding balance.
     * @param creditLimit {Number} Credit limit.
     * @param rate {Number} Currency rate between credit and operation currencies.
     */
    constructor(amount, balance, creditLimit, rate) { 
        
        CompanyCreditDataHistoryDataInterface.initialize(this, amount, balance, creditLimit, rate);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, amount, balance, creditLimit, rate) { 
        obj['amount'] = amount;
        obj['balance'] = balance;
        obj['credit_limit'] = creditLimit;
        obj['rate'] = rate;
    }

    /**
     * Constructs a <code>CompanyCreditDataHistoryDataInterface</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CompanyCreditDataHistoryDataInterface} obj Optional instance to populate.
     * @return {module:model/CompanyCreditDataHistoryDataInterface} The populated <code>CompanyCreditDataHistoryDataInterface</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CompanyCreditDataHistoryDataInterface();

            if (data.hasOwnProperty('amount')) {
                obj['amount'] = ApiClient.convertToType(data['amount'], 'Number');
            }
            if (data.hasOwnProperty('available_limit')) {
                obj['available_limit'] = ApiClient.convertToType(data['available_limit'], 'Number');
            }
            if (data.hasOwnProperty('balance')) {
                obj['balance'] = ApiClient.convertToType(data['balance'], 'Number');
            }
            if (data.hasOwnProperty('comment')) {
                obj['comment'] = ApiClient.convertToType(data['comment'], 'String');
            }
            if (data.hasOwnProperty('company_credit_id')) {
                obj['company_credit_id'] = ApiClient.convertToType(data['company_credit_id'], 'Number');
            }
            if (data.hasOwnProperty('credit_limit')) {
                obj['credit_limit'] = ApiClient.convertToType(data['credit_limit'], 'Number');
            }
            if (data.hasOwnProperty('currency_credit')) {
                obj['currency_credit'] = ApiClient.convertToType(data['currency_credit'], 'String');
            }
            if (data.hasOwnProperty('currency_operation')) {
                obj['currency_operation'] = ApiClient.convertToType(data['currency_operation'], 'String');
            }
            if (data.hasOwnProperty('datetime')) {
                obj['datetime'] = ApiClient.convertToType(data['datetime'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('purchase_order')) {
                obj['purchase_order'] = ApiClient.convertToType(data['purchase_order'], 'String');
            }
            if (data.hasOwnProperty('rate')) {
                obj['rate'] = ApiClient.convertToType(data['rate'], 'Number');
            }
            if (data.hasOwnProperty('rate_credit')) {
                obj['rate_credit'] = ApiClient.convertToType(data['rate_credit'], 'Number');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'Number');
            }
            if (data.hasOwnProperty('user_id')) {
                obj['user_id'] = ApiClient.convertToType(data['user_id'], 'Number');
            }
            if (data.hasOwnProperty('user_type')) {
                obj['user_type'] = ApiClient.convertToType(data['user_type'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CompanyCreditDataHistoryDataInterface</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CompanyCreditDataHistoryDataInterface</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CompanyCreditDataHistoryDataInterface.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['comment'] && !(typeof data['comment'] === 'string' || data['comment'] instanceof String)) {
            throw new Error("Expected the field `comment` to be a primitive type in the JSON string but got " + data['comment']);
        }
        // ensure the json data is a string
        if (data['currency_credit'] && !(typeof data['currency_credit'] === 'string' || data['currency_credit'] instanceof String)) {
            throw new Error("Expected the field `currency_credit` to be a primitive type in the JSON string but got " + data['currency_credit']);
        }
        // ensure the json data is a string
        if (data['currency_operation'] && !(typeof data['currency_operation'] === 'string' || data['currency_operation'] instanceof String)) {
            throw new Error("Expected the field `currency_operation` to be a primitive type in the JSON string but got " + data['currency_operation']);
        }
        // ensure the json data is a string
        if (data['datetime'] && !(typeof data['datetime'] === 'string' || data['datetime'] instanceof String)) {
            throw new Error("Expected the field `datetime` to be a primitive type in the JSON string but got " + data['datetime']);
        }
        // ensure the json data is a string
        if (data['purchase_order'] && !(typeof data['purchase_order'] === 'string' || data['purchase_order'] instanceof String)) {
            throw new Error("Expected the field `purchase_order` to be a primitive type in the JSON string but got " + data['purchase_order']);
        }

        return true;
    }


}

CompanyCreditDataHistoryDataInterface.RequiredProperties = ["amount", "balance", "credit_limit", "rate"];

/**
 * Amount.
 * @member {Number} amount
 */
CompanyCreditDataHistoryDataInterface.prototype['amount'] = undefined;

/**
 * Available limit.
 * @member {Number} available_limit
 */
CompanyCreditDataHistoryDataInterface.prototype['available_limit'] = undefined;

/**
 * Outstanding balance.
 * @member {Number} balance
 */
CompanyCreditDataHistoryDataInterface.prototype['balance'] = undefined;

/**
 * Comment.
 * @member {String} comment
 */
CompanyCreditDataHistoryDataInterface.prototype['comment'] = undefined;

/**
 * Company credit id.
 * @member {Number} company_credit_id
 */
CompanyCreditDataHistoryDataInterface.prototype['company_credit_id'] = undefined;

/**
 * Credit limit.
 * @member {Number} credit_limit
 */
CompanyCreditDataHistoryDataInterface.prototype['credit_limit'] = undefined;

/**
 * Currency code of credit.
 * @member {String} currency_credit
 */
CompanyCreditDataHistoryDataInterface.prototype['currency_credit'] = undefined;

/**
 * Currency code of operation.
 * @member {String} currency_operation
 */
CompanyCreditDataHistoryDataInterface.prototype['currency_operation'] = undefined;

/**
 * Operation datetime.
 * @member {String} datetime
 */
CompanyCreditDataHistoryDataInterface.prototype['datetime'] = undefined;

/**
 * ID.
 * @member {Number} id
 */
CompanyCreditDataHistoryDataInterface.prototype['id'] = undefined;

/**
 * Purchase Order number.
 * @member {String} purchase_order
 */
CompanyCreditDataHistoryDataInterface.prototype['purchase_order'] = undefined;

/**
 * Currency rate between credit and operation currencies.
 * @member {Number} rate
 */
CompanyCreditDataHistoryDataInterface.prototype['rate'] = undefined;

/**
 * Rate between credit and base currencies.
 * @member {Number} rate_credit
 */
CompanyCreditDataHistoryDataInterface.prototype['rate_credit'] = undefined;

/**
 * Type of operation.
 * @member {Number} type
 */
CompanyCreditDataHistoryDataInterface.prototype['type'] = undefined;

/**
 * User Id.
 * @member {Number} user_id
 */
CompanyCreditDataHistoryDataInterface.prototype['user_id'] = undefined;

/**
 * User type: integration, admin, customer.
 * @member {Number} user_type
 */
CompanyCreditDataHistoryDataInterface.prototype['user_type'] = undefined;






export default CompanyCreditDataHistoryDataInterface;

