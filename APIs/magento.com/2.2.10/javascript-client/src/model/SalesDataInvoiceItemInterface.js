/**
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SalesDataInvoiceItemExtensionInterface from './SalesDataInvoiceItemExtensionInterface';

/**
 * The SalesDataInvoiceItemInterface model module.
 * @module model/SalesDataInvoiceItemInterface
 * @version 2.2.10
 */
class SalesDataInvoiceItemInterface {
    /**
     * Constructs a new <code>SalesDataInvoiceItemInterface</code>.
     * Invoice item interface. An invoice is a record of the receipt of payment for an order. An invoice item is a purchased item in an invoice.
     * @alias module:model/SalesDataInvoiceItemInterface
     * @param orderItemId {Number} Order item ID.
     * @param qty {Number} Quantity.
     * @param sku {String} SKU.
     */
    constructor(orderItemId, qty, sku) { 
        
        SalesDataInvoiceItemInterface.initialize(this, orderItemId, qty, sku);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, orderItemId, qty, sku) { 
        obj['order_item_id'] = orderItemId;
        obj['qty'] = qty;
        obj['sku'] = sku;
    }

    /**
     * Constructs a <code>SalesDataInvoiceItemInterface</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SalesDataInvoiceItemInterface} obj Optional instance to populate.
     * @return {module:model/SalesDataInvoiceItemInterface} The populated <code>SalesDataInvoiceItemInterface</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SalesDataInvoiceItemInterface();

            if (data.hasOwnProperty('additional_data')) {
                obj['additional_data'] = ApiClient.convertToType(data['additional_data'], 'String');
            }
            if (data.hasOwnProperty('base_cost')) {
                obj['base_cost'] = ApiClient.convertToType(data['base_cost'], 'Number');
            }
            if (data.hasOwnProperty('base_discount_amount')) {
                obj['base_discount_amount'] = ApiClient.convertToType(data['base_discount_amount'], 'Number');
            }
            if (data.hasOwnProperty('base_discount_tax_compensation_amount')) {
                obj['base_discount_tax_compensation_amount'] = ApiClient.convertToType(data['base_discount_tax_compensation_amount'], 'Number');
            }
            if (data.hasOwnProperty('base_price')) {
                obj['base_price'] = ApiClient.convertToType(data['base_price'], 'Number');
            }
            if (data.hasOwnProperty('base_price_incl_tax')) {
                obj['base_price_incl_tax'] = ApiClient.convertToType(data['base_price_incl_tax'], 'Number');
            }
            if (data.hasOwnProperty('base_row_total')) {
                obj['base_row_total'] = ApiClient.convertToType(data['base_row_total'], 'Number');
            }
            if (data.hasOwnProperty('base_row_total_incl_tax')) {
                obj['base_row_total_incl_tax'] = ApiClient.convertToType(data['base_row_total_incl_tax'], 'Number');
            }
            if (data.hasOwnProperty('base_tax_amount')) {
                obj['base_tax_amount'] = ApiClient.convertToType(data['base_tax_amount'], 'Number');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('discount_amount')) {
                obj['discount_amount'] = ApiClient.convertToType(data['discount_amount'], 'Number');
            }
            if (data.hasOwnProperty('discount_tax_compensation_amount')) {
                obj['discount_tax_compensation_amount'] = ApiClient.convertToType(data['discount_tax_compensation_amount'], 'Number');
            }
            if (data.hasOwnProperty('entity_id')) {
                obj['entity_id'] = ApiClient.convertToType(data['entity_id'], 'Number');
            }
            if (data.hasOwnProperty('extension_attributes')) {
                obj['extension_attributes'] = SalesDataInvoiceItemExtensionInterface.constructFromObject(data['extension_attributes']);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('order_item_id')) {
                obj['order_item_id'] = ApiClient.convertToType(data['order_item_id'], 'Number');
            }
            if (data.hasOwnProperty('parent_id')) {
                obj['parent_id'] = ApiClient.convertToType(data['parent_id'], 'Number');
            }
            if (data.hasOwnProperty('price')) {
                obj['price'] = ApiClient.convertToType(data['price'], 'Number');
            }
            if (data.hasOwnProperty('price_incl_tax')) {
                obj['price_incl_tax'] = ApiClient.convertToType(data['price_incl_tax'], 'Number');
            }
            if (data.hasOwnProperty('product_id')) {
                obj['product_id'] = ApiClient.convertToType(data['product_id'], 'Number');
            }
            if (data.hasOwnProperty('qty')) {
                obj['qty'] = ApiClient.convertToType(data['qty'], 'Number');
            }
            if (data.hasOwnProperty('row_total')) {
                obj['row_total'] = ApiClient.convertToType(data['row_total'], 'Number');
            }
            if (data.hasOwnProperty('row_total_incl_tax')) {
                obj['row_total_incl_tax'] = ApiClient.convertToType(data['row_total_incl_tax'], 'Number');
            }
            if (data.hasOwnProperty('sku')) {
                obj['sku'] = ApiClient.convertToType(data['sku'], 'String');
            }
            if (data.hasOwnProperty('tax_amount')) {
                obj['tax_amount'] = ApiClient.convertToType(data['tax_amount'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SalesDataInvoiceItemInterface</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SalesDataInvoiceItemInterface</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of SalesDataInvoiceItemInterface.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['additional_data'] && !(typeof data['additional_data'] === 'string' || data['additional_data'] instanceof String)) {
            throw new Error("Expected the field `additional_data` to be a primitive type in the JSON string but got " + data['additional_data']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // validate the optional field `extension_attributes`
        if (data['extension_attributes']) { // data not null
          SalesDataInvoiceItemExtensionInterface.validateJSON(data['extension_attributes']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['sku'] && !(typeof data['sku'] === 'string' || data['sku'] instanceof String)) {
            throw new Error("Expected the field `sku` to be a primitive type in the JSON string but got " + data['sku']);
        }

        return true;
    }


}

SalesDataInvoiceItemInterface.RequiredProperties = ["order_item_id", "qty", "sku"];

/**
 * Additional data.
 * @member {String} additional_data
 */
SalesDataInvoiceItemInterface.prototype['additional_data'] = undefined;

/**
 * Base cost.
 * @member {Number} base_cost
 */
SalesDataInvoiceItemInterface.prototype['base_cost'] = undefined;

/**
 * Base discount amount.
 * @member {Number} base_discount_amount
 */
SalesDataInvoiceItemInterface.prototype['base_discount_amount'] = undefined;

/**
 * Base discount tax compensation amount.
 * @member {Number} base_discount_tax_compensation_amount
 */
SalesDataInvoiceItemInterface.prototype['base_discount_tax_compensation_amount'] = undefined;

/**
 * Base price.
 * @member {Number} base_price
 */
SalesDataInvoiceItemInterface.prototype['base_price'] = undefined;

/**
 * Base price including tax.
 * @member {Number} base_price_incl_tax
 */
SalesDataInvoiceItemInterface.prototype['base_price_incl_tax'] = undefined;

/**
 * Base row total.
 * @member {Number} base_row_total
 */
SalesDataInvoiceItemInterface.prototype['base_row_total'] = undefined;

/**
 * Base row total including tax.
 * @member {Number} base_row_total_incl_tax
 */
SalesDataInvoiceItemInterface.prototype['base_row_total_incl_tax'] = undefined;

/**
 * Base tax amount.
 * @member {Number} base_tax_amount
 */
SalesDataInvoiceItemInterface.prototype['base_tax_amount'] = undefined;

/**
 * Description.
 * @member {String} description
 */
SalesDataInvoiceItemInterface.prototype['description'] = undefined;

/**
 * Discount amount.
 * @member {Number} discount_amount
 */
SalesDataInvoiceItemInterface.prototype['discount_amount'] = undefined;

/**
 * Discount tax compensation amount.
 * @member {Number} discount_tax_compensation_amount
 */
SalesDataInvoiceItemInterface.prototype['discount_tax_compensation_amount'] = undefined;

/**
 * Invoice item ID.
 * @member {Number} entity_id
 */
SalesDataInvoiceItemInterface.prototype['entity_id'] = undefined;

/**
 * @member {module:model/SalesDataInvoiceItemExtensionInterface} extension_attributes
 */
SalesDataInvoiceItemInterface.prototype['extension_attributes'] = undefined;

/**
 * Name.
 * @member {String} name
 */
SalesDataInvoiceItemInterface.prototype['name'] = undefined;

/**
 * Order item ID.
 * @member {Number} order_item_id
 */
SalesDataInvoiceItemInterface.prototype['order_item_id'] = undefined;

/**
 * Parent ID.
 * @member {Number} parent_id
 */
SalesDataInvoiceItemInterface.prototype['parent_id'] = undefined;

/**
 * Price.
 * @member {Number} price
 */
SalesDataInvoiceItemInterface.prototype['price'] = undefined;

/**
 * Price including tax.
 * @member {Number} price_incl_tax
 */
SalesDataInvoiceItemInterface.prototype['price_incl_tax'] = undefined;

/**
 * Product ID.
 * @member {Number} product_id
 */
SalesDataInvoiceItemInterface.prototype['product_id'] = undefined;

/**
 * Quantity.
 * @member {Number} qty
 */
SalesDataInvoiceItemInterface.prototype['qty'] = undefined;

/**
 * Row total.
 * @member {Number} row_total
 */
SalesDataInvoiceItemInterface.prototype['row_total'] = undefined;

/**
 * Row total including tax.
 * @member {Number} row_total_incl_tax
 */
SalesDataInvoiceItemInterface.prototype['row_total_incl_tax'] = undefined;

/**
 * SKU.
 * @member {String} sku
 */
SalesDataInvoiceItemInterface.prototype['sku'] = undefined;

/**
 * Tax amount.
 * @member {Number} tax_amount
 */
SalesDataInvoiceItemInterface.prototype['tax_amount'] = undefined;






export default SalesDataInvoiceItemInterface;

