/**
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DirectoryDataExchangeRateInterface model module.
 * @module model/DirectoryDataExchangeRateInterface
 * @version 2.2.10
 */
class DirectoryDataExchangeRateInterface {
    /**
     * Constructs a new <code>DirectoryDataExchangeRateInterface</code>.
     * Exchange Rate interface.
     * @alias module:model/DirectoryDataExchangeRateInterface
     * @param currencyTo {String} The currency code associated with the exchange rate.
     * @param rate {Number} The exchange rate for the associated currency and the store's base currency.
     */
    constructor(currencyTo, rate) { 
        
        DirectoryDataExchangeRateInterface.initialize(this, currencyTo, rate);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, currencyTo, rate) { 
        obj['currency_to'] = currencyTo;
        obj['rate'] = rate;
    }

    /**
     * Constructs a <code>DirectoryDataExchangeRateInterface</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DirectoryDataExchangeRateInterface} obj Optional instance to populate.
     * @return {module:model/DirectoryDataExchangeRateInterface} The populated <code>DirectoryDataExchangeRateInterface</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DirectoryDataExchangeRateInterface();

            if (data.hasOwnProperty('currency_to')) {
                obj['currency_to'] = ApiClient.convertToType(data['currency_to'], 'String');
            }
            if (data.hasOwnProperty('extension_attributes')) {
                obj['extension_attributes'] = ApiClient.convertToType(data['extension_attributes'], Object);
            }
            if (data.hasOwnProperty('rate')) {
                obj['rate'] = ApiClient.convertToType(data['rate'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DirectoryDataExchangeRateInterface</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DirectoryDataExchangeRateInterface</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of DirectoryDataExchangeRateInterface.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['currency_to'] && !(typeof data['currency_to'] === 'string' || data['currency_to'] instanceof String)) {
            throw new Error("Expected the field `currency_to` to be a primitive type in the JSON string but got " + data['currency_to']);
        }

        return true;
    }


}

DirectoryDataExchangeRateInterface.RequiredProperties = ["currency_to", "rate"];

/**
 * The currency code associated with the exchange rate.
 * @member {String} currency_to
 */
DirectoryDataExchangeRateInterface.prototype['currency_to'] = undefined;

/**
 * ExtensionInterface class for @see \\Magento\\Directory\\Api\\Data\\ExchangeRateInterface
 * @member {Object} extension_attributes
 */
DirectoryDataExchangeRateInterface.prototype['extension_attributes'] = undefined;

/**
 * The exchange rate for the associated currency and the store's base currency.
 * @member {Number} rate
 */
DirectoryDataExchangeRateInterface.prototype['rate'] = undefined;






export default DirectoryDataExchangeRateInterface;

