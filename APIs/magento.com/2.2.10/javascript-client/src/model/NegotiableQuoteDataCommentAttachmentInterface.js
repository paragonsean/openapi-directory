/**
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The NegotiableQuoteDataCommentAttachmentInterface model module.
 * @module model/NegotiableQuoteDataCommentAttachmentInterface
 * @version 2.2.10
 */
class NegotiableQuoteDataCommentAttachmentInterface {
    /**
     * Constructs a new <code>NegotiableQuoteDataCommentAttachmentInterface</code>.
     * Interface for quote comment attachment.
     * @alias module:model/NegotiableQuoteDataCommentAttachmentInterface
     * @param attachmentId {Number} Attachment ID.
     * @param commentId {Number} Comment ID.
     * @param fileName {String} File name.
     * @param filePath {String} File path.
     * @param fileType {String} File type.
     */
    constructor(attachmentId, commentId, fileName, filePath, fileType) { 
        
        NegotiableQuoteDataCommentAttachmentInterface.initialize(this, attachmentId, commentId, fileName, filePath, fileType);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, attachmentId, commentId, fileName, filePath, fileType) { 
        obj['attachment_id'] = attachmentId;
        obj['comment_id'] = commentId;
        obj['file_name'] = fileName;
        obj['file_path'] = filePath;
        obj['file_type'] = fileType;
    }

    /**
     * Constructs a <code>NegotiableQuoteDataCommentAttachmentInterface</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/NegotiableQuoteDataCommentAttachmentInterface} obj Optional instance to populate.
     * @return {module:model/NegotiableQuoteDataCommentAttachmentInterface} The populated <code>NegotiableQuoteDataCommentAttachmentInterface</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new NegotiableQuoteDataCommentAttachmentInterface();

            if (data.hasOwnProperty('attachment_id')) {
                obj['attachment_id'] = ApiClient.convertToType(data['attachment_id'], 'Number');
            }
            if (data.hasOwnProperty('comment_id')) {
                obj['comment_id'] = ApiClient.convertToType(data['comment_id'], 'Number');
            }
            if (data.hasOwnProperty('extension_attributes')) {
                obj['extension_attributes'] = ApiClient.convertToType(data['extension_attributes'], Object);
            }
            if (data.hasOwnProperty('file_name')) {
                obj['file_name'] = ApiClient.convertToType(data['file_name'], 'String');
            }
            if (data.hasOwnProperty('file_path')) {
                obj['file_path'] = ApiClient.convertToType(data['file_path'], 'String');
            }
            if (data.hasOwnProperty('file_type')) {
                obj['file_type'] = ApiClient.convertToType(data['file_type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>NegotiableQuoteDataCommentAttachmentInterface</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>NegotiableQuoteDataCommentAttachmentInterface</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of NegotiableQuoteDataCommentAttachmentInterface.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['file_name'] && !(typeof data['file_name'] === 'string' || data['file_name'] instanceof String)) {
            throw new Error("Expected the field `file_name` to be a primitive type in the JSON string but got " + data['file_name']);
        }
        // ensure the json data is a string
        if (data['file_path'] && !(typeof data['file_path'] === 'string' || data['file_path'] instanceof String)) {
            throw new Error("Expected the field `file_path` to be a primitive type in the JSON string but got " + data['file_path']);
        }
        // ensure the json data is a string
        if (data['file_type'] && !(typeof data['file_type'] === 'string' || data['file_type'] instanceof String)) {
            throw new Error("Expected the field `file_type` to be a primitive type in the JSON string but got " + data['file_type']);
        }

        return true;
    }


}

NegotiableQuoteDataCommentAttachmentInterface.RequiredProperties = ["attachment_id", "comment_id", "file_name", "file_path", "file_type"];

/**
 * Attachment ID.
 * @member {Number} attachment_id
 */
NegotiableQuoteDataCommentAttachmentInterface.prototype['attachment_id'] = undefined;

/**
 * Comment ID.
 * @member {Number} comment_id
 */
NegotiableQuoteDataCommentAttachmentInterface.prototype['comment_id'] = undefined;

/**
 * ExtensionInterface class for @see \\Magento\\NegotiableQuote\\Api\\Data\\CommentAttachmentInterface
 * @member {Object} extension_attributes
 */
NegotiableQuoteDataCommentAttachmentInterface.prototype['extension_attributes'] = undefined;

/**
 * File name.
 * @member {String} file_name
 */
NegotiableQuoteDataCommentAttachmentInterface.prototype['file_name'] = undefined;

/**
 * File path.
 * @member {String} file_path
 */
NegotiableQuoteDataCommentAttachmentInterface.prototype['file_path'] = undefined;

/**
 * File type.
 * @member {String} file_type
 */
NegotiableQuoteDataCommentAttachmentInterface.prototype['file_type'] = undefined;






export default NegotiableQuoteDataCommentAttachmentInterface;

