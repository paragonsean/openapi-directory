/**
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GiftMessageDataMessageInterface from './GiftMessageDataMessageInterface';

/**
 * The QuoteDataTotalsAdditionalDataExtensionInterface model module.
 * @module model/QuoteDataTotalsAdditionalDataExtensionInterface
 * @version 2.2.10
 */
class QuoteDataTotalsAdditionalDataExtensionInterface {
    /**
     * Constructs a new <code>QuoteDataTotalsAdditionalDataExtensionInterface</code>.
     * ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\TotalsAdditionalDataInterface
     * @alias module:model/QuoteDataTotalsAdditionalDataExtensionInterface
     */
    constructor() { 
        
        QuoteDataTotalsAdditionalDataExtensionInterface.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>QuoteDataTotalsAdditionalDataExtensionInterface</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/QuoteDataTotalsAdditionalDataExtensionInterface} obj Optional instance to populate.
     * @return {module:model/QuoteDataTotalsAdditionalDataExtensionInterface} The populated <code>QuoteDataTotalsAdditionalDataExtensionInterface</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new QuoteDataTotalsAdditionalDataExtensionInterface();

            if (data.hasOwnProperty('gift_messages')) {
                obj['gift_messages'] = ApiClient.convertToType(data['gift_messages'], [GiftMessageDataMessageInterface]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>QuoteDataTotalsAdditionalDataExtensionInterface</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>QuoteDataTotalsAdditionalDataExtensionInterface</code>.
     */
    static validateJSON(data) {
        if (data['gift_messages']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['gift_messages'])) {
                throw new Error("Expected the field `gift_messages` to be an array in the JSON data but got " + data['gift_messages']);
            }
            // validate the optional field `gift_messages` (array)
            for (const item of data['gift_messages']) {
                GiftMessageDataMessageInterface.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {Array.<module:model/GiftMessageDataMessageInterface>} gift_messages
 */
QuoteDataTotalsAdditionalDataExtensionInterface.prototype['gift_messages'] = undefined;






export default QuoteDataTotalsAdditionalDataExtensionInterface;

