/**
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CatalogDataPriceUpdateResultInterface model module.
 * @module model/CatalogDataPriceUpdateResultInterface
 * @version 2.2.10
 */
class CatalogDataPriceUpdateResultInterface {
    /**
     * Constructs a new <code>CatalogDataPriceUpdateResultInterface</code>.
     * Interface returned in case of incorrect price passed to efficient price API.
     * @alias module:model/CatalogDataPriceUpdateResultInterface
     * @param message {String} Error message, that contains description of error occurred during price update.
     * @param parameters {Array.<String>} Parameters, that could be displayed in error message placeholders.
     */
    constructor(message, parameters) { 
        
        CatalogDataPriceUpdateResultInterface.initialize(this, message, parameters);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, message, parameters) { 
        obj['message'] = message;
        obj['parameters'] = parameters;
    }

    /**
     * Constructs a <code>CatalogDataPriceUpdateResultInterface</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CatalogDataPriceUpdateResultInterface} obj Optional instance to populate.
     * @return {module:model/CatalogDataPriceUpdateResultInterface} The populated <code>CatalogDataPriceUpdateResultInterface</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CatalogDataPriceUpdateResultInterface();

            if (data.hasOwnProperty('extension_attributes')) {
                obj['extension_attributes'] = ApiClient.convertToType(data['extension_attributes'], Object);
            }
            if (data.hasOwnProperty('message')) {
                obj['message'] = ApiClient.convertToType(data['message'], 'String');
            }
            if (data.hasOwnProperty('parameters')) {
                obj['parameters'] = ApiClient.convertToType(data['parameters'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CatalogDataPriceUpdateResultInterface</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CatalogDataPriceUpdateResultInterface</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CatalogDataPriceUpdateResultInterface.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['message'] && !(typeof data['message'] === 'string' || data['message'] instanceof String)) {
            throw new Error("Expected the field `message` to be a primitive type in the JSON string but got " + data['message']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['parameters'])) {
            throw new Error("Expected the field `parameters` to be an array in the JSON data but got " + data['parameters']);
        }

        return true;
    }


}

CatalogDataPriceUpdateResultInterface.RequiredProperties = ["message", "parameters"];

/**
 * ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\PriceUpdateResultInterface
 * @member {Object} extension_attributes
 */
CatalogDataPriceUpdateResultInterface.prototype['extension_attributes'] = undefined;

/**
 * Error message, that contains description of error occurred during price update.
 * @member {String} message
 */
CatalogDataPriceUpdateResultInterface.prototype['message'] = undefined;

/**
 * Parameters, that could be displayed in error message placeholders.
 * @member {Array.<String>} parameters
 */
CatalogDataPriceUpdateResultInterface.prototype['parameters'] = undefined;






export default CatalogDataPriceUpdateResultInterface;

