/**
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CustomerDataAddressInterface from './CustomerDataAddressInterface';
import CustomerDataCustomerExtensionInterface from './CustomerDataCustomerExtensionInterface';
import FrameworkAttributeInterface from './FrameworkAttributeInterface';

/**
 * The CustomerDataCustomerInterface model module.
 * @module model/CustomerDataCustomerInterface
 * @version 2.2.10
 */
class CustomerDataCustomerInterface {
    /**
     * Constructs a new <code>CustomerDataCustomerInterface</code>.
     * Customer interface.
     * @alias module:model/CustomerDataCustomerInterface
     * @param email {String} Email address
     * @param firstname {String} First name
     * @param lastname {String} Last name
     */
    constructor(email, firstname, lastname) { 
        
        CustomerDataCustomerInterface.initialize(this, email, firstname, lastname);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, email, firstname, lastname) { 
        obj['email'] = email;
        obj['firstname'] = firstname;
        obj['lastname'] = lastname;
    }

    /**
     * Constructs a <code>CustomerDataCustomerInterface</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CustomerDataCustomerInterface} obj Optional instance to populate.
     * @return {module:model/CustomerDataCustomerInterface} The populated <code>CustomerDataCustomerInterface</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CustomerDataCustomerInterface();

            if (data.hasOwnProperty('addresses')) {
                obj['addresses'] = ApiClient.convertToType(data['addresses'], [CustomerDataAddressInterface]);
            }
            if (data.hasOwnProperty('confirmation')) {
                obj['confirmation'] = ApiClient.convertToType(data['confirmation'], 'String');
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'String');
            }
            if (data.hasOwnProperty('created_in')) {
                obj['created_in'] = ApiClient.convertToType(data['created_in'], 'String');
            }
            if (data.hasOwnProperty('custom_attributes')) {
                obj['custom_attributes'] = ApiClient.convertToType(data['custom_attributes'], [FrameworkAttributeInterface]);
            }
            if (data.hasOwnProperty('default_billing')) {
                obj['default_billing'] = ApiClient.convertToType(data['default_billing'], 'String');
            }
            if (data.hasOwnProperty('default_shipping')) {
                obj['default_shipping'] = ApiClient.convertToType(data['default_shipping'], 'String');
            }
            if (data.hasOwnProperty('disable_auto_group_change')) {
                obj['disable_auto_group_change'] = ApiClient.convertToType(data['disable_auto_group_change'], 'Number');
            }
            if (data.hasOwnProperty('dob')) {
                obj['dob'] = ApiClient.convertToType(data['dob'], 'String');
            }
            if (data.hasOwnProperty('email')) {
                obj['email'] = ApiClient.convertToType(data['email'], 'String');
            }
            if (data.hasOwnProperty('extension_attributes')) {
                obj['extension_attributes'] = CustomerDataCustomerExtensionInterface.constructFromObject(data['extension_attributes']);
            }
            if (data.hasOwnProperty('firstname')) {
                obj['firstname'] = ApiClient.convertToType(data['firstname'], 'String');
            }
            if (data.hasOwnProperty('gender')) {
                obj['gender'] = ApiClient.convertToType(data['gender'], 'Number');
            }
            if (data.hasOwnProperty('group_id')) {
                obj['group_id'] = ApiClient.convertToType(data['group_id'], 'Number');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('lastname')) {
                obj['lastname'] = ApiClient.convertToType(data['lastname'], 'String');
            }
            if (data.hasOwnProperty('middlename')) {
                obj['middlename'] = ApiClient.convertToType(data['middlename'], 'String');
            }
            if (data.hasOwnProperty('prefix')) {
                obj['prefix'] = ApiClient.convertToType(data['prefix'], 'String');
            }
            if (data.hasOwnProperty('store_id')) {
                obj['store_id'] = ApiClient.convertToType(data['store_id'], 'Number');
            }
            if (data.hasOwnProperty('suffix')) {
                obj['suffix'] = ApiClient.convertToType(data['suffix'], 'String');
            }
            if (data.hasOwnProperty('taxvat')) {
                obj['taxvat'] = ApiClient.convertToType(data['taxvat'], 'String');
            }
            if (data.hasOwnProperty('updated_at')) {
                obj['updated_at'] = ApiClient.convertToType(data['updated_at'], 'String');
            }
            if (data.hasOwnProperty('website_id')) {
                obj['website_id'] = ApiClient.convertToType(data['website_id'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CustomerDataCustomerInterface</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CustomerDataCustomerInterface</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CustomerDataCustomerInterface.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['addresses']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['addresses'])) {
                throw new Error("Expected the field `addresses` to be an array in the JSON data but got " + data['addresses']);
            }
            // validate the optional field `addresses` (array)
            for (const item of data['addresses']) {
                CustomerDataAddressInterface.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['confirmation'] && !(typeof data['confirmation'] === 'string' || data['confirmation'] instanceof String)) {
            throw new Error("Expected the field `confirmation` to be a primitive type in the JSON string but got " + data['confirmation']);
        }
        // ensure the json data is a string
        if (data['created_at'] && !(typeof data['created_at'] === 'string' || data['created_at'] instanceof String)) {
            throw new Error("Expected the field `created_at` to be a primitive type in the JSON string but got " + data['created_at']);
        }
        // ensure the json data is a string
        if (data['created_in'] && !(typeof data['created_in'] === 'string' || data['created_in'] instanceof String)) {
            throw new Error("Expected the field `created_in` to be a primitive type in the JSON string but got " + data['created_in']);
        }
        if (data['custom_attributes']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['custom_attributes'])) {
                throw new Error("Expected the field `custom_attributes` to be an array in the JSON data but got " + data['custom_attributes']);
            }
            // validate the optional field `custom_attributes` (array)
            for (const item of data['custom_attributes']) {
                FrameworkAttributeInterface.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['default_billing'] && !(typeof data['default_billing'] === 'string' || data['default_billing'] instanceof String)) {
            throw new Error("Expected the field `default_billing` to be a primitive type in the JSON string but got " + data['default_billing']);
        }
        // ensure the json data is a string
        if (data['default_shipping'] && !(typeof data['default_shipping'] === 'string' || data['default_shipping'] instanceof String)) {
            throw new Error("Expected the field `default_shipping` to be a primitive type in the JSON string but got " + data['default_shipping']);
        }
        // ensure the json data is a string
        if (data['dob'] && !(typeof data['dob'] === 'string' || data['dob'] instanceof String)) {
            throw new Error("Expected the field `dob` to be a primitive type in the JSON string but got " + data['dob']);
        }
        // ensure the json data is a string
        if (data['email'] && !(typeof data['email'] === 'string' || data['email'] instanceof String)) {
            throw new Error("Expected the field `email` to be a primitive type in the JSON string but got " + data['email']);
        }
        // validate the optional field `extension_attributes`
        if (data['extension_attributes']) { // data not null
          CustomerDataCustomerExtensionInterface.validateJSON(data['extension_attributes']);
        }
        // ensure the json data is a string
        if (data['firstname'] && !(typeof data['firstname'] === 'string' || data['firstname'] instanceof String)) {
            throw new Error("Expected the field `firstname` to be a primitive type in the JSON string but got " + data['firstname']);
        }
        // ensure the json data is a string
        if (data['lastname'] && !(typeof data['lastname'] === 'string' || data['lastname'] instanceof String)) {
            throw new Error("Expected the field `lastname` to be a primitive type in the JSON string but got " + data['lastname']);
        }
        // ensure the json data is a string
        if (data['middlename'] && !(typeof data['middlename'] === 'string' || data['middlename'] instanceof String)) {
            throw new Error("Expected the field `middlename` to be a primitive type in the JSON string but got " + data['middlename']);
        }
        // ensure the json data is a string
        if (data['prefix'] && !(typeof data['prefix'] === 'string' || data['prefix'] instanceof String)) {
            throw new Error("Expected the field `prefix` to be a primitive type in the JSON string but got " + data['prefix']);
        }
        // ensure the json data is a string
        if (data['suffix'] && !(typeof data['suffix'] === 'string' || data['suffix'] instanceof String)) {
            throw new Error("Expected the field `suffix` to be a primitive type in the JSON string but got " + data['suffix']);
        }
        // ensure the json data is a string
        if (data['taxvat'] && !(typeof data['taxvat'] === 'string' || data['taxvat'] instanceof String)) {
            throw new Error("Expected the field `taxvat` to be a primitive type in the JSON string but got " + data['taxvat']);
        }
        // ensure the json data is a string
        if (data['updated_at'] && !(typeof data['updated_at'] === 'string' || data['updated_at'] instanceof String)) {
            throw new Error("Expected the field `updated_at` to be a primitive type in the JSON string but got " + data['updated_at']);
        }

        return true;
    }


}

CustomerDataCustomerInterface.RequiredProperties = ["email", "firstname", "lastname"];

/**
 * Customer addresses.
 * @member {Array.<module:model/CustomerDataAddressInterface>} addresses
 */
CustomerDataCustomerInterface.prototype['addresses'] = undefined;

/**
 * Confirmation
 * @member {String} confirmation
 */
CustomerDataCustomerInterface.prototype['confirmation'] = undefined;

/**
 * Created at time
 * @member {String} created_at
 */
CustomerDataCustomerInterface.prototype['created_at'] = undefined;

/**
 * Created in area
 * @member {String} created_in
 */
CustomerDataCustomerInterface.prototype['created_in'] = undefined;

/**
 * Custom attributes values.
 * @member {Array.<module:model/FrameworkAttributeInterface>} custom_attributes
 */
CustomerDataCustomerInterface.prototype['custom_attributes'] = undefined;

/**
 * Default billing address id
 * @member {String} default_billing
 */
CustomerDataCustomerInterface.prototype['default_billing'] = undefined;

/**
 * Default shipping address id
 * @member {String} default_shipping
 */
CustomerDataCustomerInterface.prototype['default_shipping'] = undefined;

/**
 * Disable auto group change flag.
 * @member {Number} disable_auto_group_change
 */
CustomerDataCustomerInterface.prototype['disable_auto_group_change'] = undefined;

/**
 * Date of birth
 * @member {String} dob
 */
CustomerDataCustomerInterface.prototype['dob'] = undefined;

/**
 * Email address
 * @member {String} email
 */
CustomerDataCustomerInterface.prototype['email'] = undefined;

/**
 * @member {module:model/CustomerDataCustomerExtensionInterface} extension_attributes
 */
CustomerDataCustomerInterface.prototype['extension_attributes'] = undefined;

/**
 * First name
 * @member {String} firstname
 */
CustomerDataCustomerInterface.prototype['firstname'] = undefined;

/**
 * Gender
 * @member {Number} gender
 */
CustomerDataCustomerInterface.prototype['gender'] = undefined;

/**
 * Group id
 * @member {Number} group_id
 */
CustomerDataCustomerInterface.prototype['group_id'] = undefined;

/**
 * Customer id
 * @member {Number} id
 */
CustomerDataCustomerInterface.prototype['id'] = undefined;

/**
 * Last name
 * @member {String} lastname
 */
CustomerDataCustomerInterface.prototype['lastname'] = undefined;

/**
 * Middle name
 * @member {String} middlename
 */
CustomerDataCustomerInterface.prototype['middlename'] = undefined;

/**
 * Prefix
 * @member {String} prefix
 */
CustomerDataCustomerInterface.prototype['prefix'] = undefined;

/**
 * Store id
 * @member {Number} store_id
 */
CustomerDataCustomerInterface.prototype['store_id'] = undefined;

/**
 * Suffix
 * @member {String} suffix
 */
CustomerDataCustomerInterface.prototype['suffix'] = undefined;

/**
 * Tax Vat
 * @member {String} taxvat
 */
CustomerDataCustomerInterface.prototype['taxvat'] = undefined;

/**
 * Updated at time
 * @member {String} updated_at
 */
CustomerDataCustomerInterface.prototype['updated_at'] = undefined;

/**
 * Website id
 * @member {Number} website_id
 */
CustomerDataCustomerInterface.prototype['website_id'] = undefined;






export default CustomerDataCustomerInterface;

