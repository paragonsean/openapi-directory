/**
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CatalogDataCustomOptionExtensionInterface from './CatalogDataCustomOptionExtensionInterface';

/**
 * The CatalogDataCustomOptionInterface model module.
 * @module model/CatalogDataCustomOptionInterface
 * @version 2.2.10
 */
class CatalogDataCustomOptionInterface {
    /**
     * Constructs a new <code>CatalogDataCustomOptionInterface</code>.
     * Interface CustomOptionInterface
     * @alias module:model/CatalogDataCustomOptionInterface
     * @param optionId {String} Option id
     * @param optionValue {String} Option value
     */
    constructor(optionId, optionValue) { 
        
        CatalogDataCustomOptionInterface.initialize(this, optionId, optionValue);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, optionId, optionValue) { 
        obj['option_id'] = optionId;
        obj['option_value'] = optionValue;
    }

    /**
     * Constructs a <code>CatalogDataCustomOptionInterface</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CatalogDataCustomOptionInterface} obj Optional instance to populate.
     * @return {module:model/CatalogDataCustomOptionInterface} The populated <code>CatalogDataCustomOptionInterface</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CatalogDataCustomOptionInterface();

            if (data.hasOwnProperty('extension_attributes')) {
                obj['extension_attributes'] = CatalogDataCustomOptionExtensionInterface.constructFromObject(data['extension_attributes']);
            }
            if (data.hasOwnProperty('option_id')) {
                obj['option_id'] = ApiClient.convertToType(data['option_id'], 'String');
            }
            if (data.hasOwnProperty('option_value')) {
                obj['option_value'] = ApiClient.convertToType(data['option_value'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CatalogDataCustomOptionInterface</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CatalogDataCustomOptionInterface</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CatalogDataCustomOptionInterface.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `extension_attributes`
        if (data['extension_attributes']) { // data not null
          CatalogDataCustomOptionExtensionInterface.validateJSON(data['extension_attributes']);
        }
        // ensure the json data is a string
        if (data['option_id'] && !(typeof data['option_id'] === 'string' || data['option_id'] instanceof String)) {
            throw new Error("Expected the field `option_id` to be a primitive type in the JSON string but got " + data['option_id']);
        }
        // ensure the json data is a string
        if (data['option_value'] && !(typeof data['option_value'] === 'string' || data['option_value'] instanceof String)) {
            throw new Error("Expected the field `option_value` to be a primitive type in the JSON string but got " + data['option_value']);
        }

        return true;
    }


}

CatalogDataCustomOptionInterface.RequiredProperties = ["option_id", "option_value"];

/**
 * @member {module:model/CatalogDataCustomOptionExtensionInterface} extension_attributes
 */
CatalogDataCustomOptionInterface.prototype['extension_attributes'] = undefined;

/**
 * Option id
 * @member {String} option_id
 */
CatalogDataCustomOptionInterface.prototype['option_id'] = undefined;

/**
 * Option value
 * @member {String} option_value
 */
CatalogDataCustomOptionInterface.prototype['option_value'] = undefined;






export default CatalogDataCustomOptionInterface;

