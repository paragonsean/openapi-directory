/**
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TaxDataOrderTaxDetailsAppliedTaxInterface from './TaxDataOrderTaxDetailsAppliedTaxInterface';

/**
 * The TaxDataOrderTaxDetailsItemInterface model module.
 * @module model/TaxDataOrderTaxDetailsItemInterface
 * @version 2.2.10
 */
class TaxDataOrderTaxDetailsItemInterface {
    /**
     * Constructs a new <code>TaxDataOrderTaxDetailsItemInterface</code>.
     * Interface OrderTaxDetailsItemInterface
     * @alias module:model/TaxDataOrderTaxDetailsItemInterface
     */
    constructor() { 
        
        TaxDataOrderTaxDetailsItemInterface.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TaxDataOrderTaxDetailsItemInterface</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TaxDataOrderTaxDetailsItemInterface} obj Optional instance to populate.
     * @return {module:model/TaxDataOrderTaxDetailsItemInterface} The populated <code>TaxDataOrderTaxDetailsItemInterface</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TaxDataOrderTaxDetailsItemInterface();

            if (data.hasOwnProperty('applied_taxes')) {
                obj['applied_taxes'] = ApiClient.convertToType(data['applied_taxes'], [TaxDataOrderTaxDetailsAppliedTaxInterface]);
            }
            if (data.hasOwnProperty('associated_item_id')) {
                obj['associated_item_id'] = ApiClient.convertToType(data['associated_item_id'], 'Number');
            }
            if (data.hasOwnProperty('extension_attributes')) {
                obj['extension_attributes'] = ApiClient.convertToType(data['extension_attributes'], Object);
            }
            if (data.hasOwnProperty('item_id')) {
                obj['item_id'] = ApiClient.convertToType(data['item_id'], 'Number');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TaxDataOrderTaxDetailsItemInterface</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TaxDataOrderTaxDetailsItemInterface</code>.
     */
    static validateJSON(data) {
        if (data['applied_taxes']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['applied_taxes'])) {
                throw new Error("Expected the field `applied_taxes` to be an array in the JSON data but got " + data['applied_taxes']);
            }
            // validate the optional field `applied_taxes` (array)
            for (const item of data['applied_taxes']) {
                TaxDataOrderTaxDetailsAppliedTaxInterface.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}



/**
 * Applied taxes
 * @member {Array.<module:model/TaxDataOrderTaxDetailsAppliedTaxInterface>} applied_taxes
 */
TaxDataOrderTaxDetailsItemInterface.prototype['applied_taxes'] = undefined;

/**
 * Associated item id if this item is associated with another item, null otherwise
 * @member {Number} associated_item_id
 */
TaxDataOrderTaxDetailsItemInterface.prototype['associated_item_id'] = undefined;

/**
 * ExtensionInterface class for @see \\Magento\\Tax\\Api\\Data\\OrderTaxDetailsItemInterface
 * @member {Object} extension_attributes
 */
TaxDataOrderTaxDetailsItemInterface.prototype['extension_attributes'] = undefined;

/**
 * Item id if this item is a product
 * @member {Number} item_id
 */
TaxDataOrderTaxDetailsItemInterface.prototype['item_id'] = undefined;

/**
 * Type (shipping, product, weee, gift wrapping, etc)
 * @member {String} type
 */
TaxDataOrderTaxDetailsItemInterface.prototype['type'] = undefined;






export default TaxDataOrderTaxDetailsItemInterface;

