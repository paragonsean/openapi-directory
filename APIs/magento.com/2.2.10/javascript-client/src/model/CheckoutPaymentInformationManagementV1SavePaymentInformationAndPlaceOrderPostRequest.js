/**
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import QuoteDataAddressInterface from './QuoteDataAddressInterface';
import QuoteDataPaymentInterface from './QuoteDataPaymentInterface';

/**
 * The CheckoutPaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostRequest model module.
 * @module model/CheckoutPaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostRequest
 * @version 2.2.10
 */
class CheckoutPaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostRequest {
    /**
     * Constructs a new <code>CheckoutPaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostRequest</code>.
     * @alias module:model/CheckoutPaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostRequest
     * @param paymentMethod {module:model/QuoteDataPaymentInterface} 
     */
    constructor(paymentMethod) { 
        
        CheckoutPaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostRequest.initialize(this, paymentMethod);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, paymentMethod) { 
        obj['paymentMethod'] = paymentMethod;
    }

    /**
     * Constructs a <code>CheckoutPaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CheckoutPaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostRequest} obj Optional instance to populate.
     * @return {module:model/CheckoutPaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostRequest} The populated <code>CheckoutPaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CheckoutPaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostRequest();

            if (data.hasOwnProperty('billingAddress')) {
                obj['billingAddress'] = QuoteDataAddressInterface.constructFromObject(data['billingAddress']);
            }
            if (data.hasOwnProperty('paymentMethod')) {
                obj['paymentMethod'] = QuoteDataPaymentInterface.constructFromObject(data['paymentMethod']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CheckoutPaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CheckoutPaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CheckoutPaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `billingAddress`
        if (data['billingAddress']) { // data not null
          QuoteDataAddressInterface.validateJSON(data['billingAddress']);
        }
        // validate the optional field `paymentMethod`
        if (data['paymentMethod']) { // data not null
          QuoteDataPaymentInterface.validateJSON(data['paymentMethod']);
        }

        return true;
    }


}

CheckoutPaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostRequest.RequiredProperties = ["paymentMethod"];

/**
 * @member {module:model/QuoteDataAddressInterface} billingAddress
 */
CheckoutPaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostRequest.prototype['billingAddress'] = undefined;

/**
 * @member {module:model/QuoteDataPaymentInterface} paymentMethod
 */
CheckoutPaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostRequest.prototype['paymentMethod'] = undefined;






export default CheckoutPaymentInformationManagementV1SavePaymentInformationAndPlaceOrderPostRequest;

