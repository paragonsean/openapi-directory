/**
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BundleDataLinkInterface from './BundleDataLinkInterface';

/**
 * The BundleDataOptionInterface model module.
 * @module model/BundleDataOptionInterface
 * @version 2.2.10
 */
class BundleDataOptionInterface {
    /**
     * Constructs a new <code>BundleDataOptionInterface</code>.
     * Interface OptionInterface
     * @alias module:model/BundleDataOptionInterface
     */
    constructor() { 
        
        BundleDataOptionInterface.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BundleDataOptionInterface</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BundleDataOptionInterface} obj Optional instance to populate.
     * @return {module:model/BundleDataOptionInterface} The populated <code>BundleDataOptionInterface</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BundleDataOptionInterface();

            if (data.hasOwnProperty('extension_attributes')) {
                obj['extension_attributes'] = ApiClient.convertToType(data['extension_attributes'], Object);
            }
            if (data.hasOwnProperty('option_id')) {
                obj['option_id'] = ApiClient.convertToType(data['option_id'], 'Number');
            }
            if (data.hasOwnProperty('position')) {
                obj['position'] = ApiClient.convertToType(data['position'], 'Number');
            }
            if (data.hasOwnProperty('product_links')) {
                obj['product_links'] = ApiClient.convertToType(data['product_links'], [BundleDataLinkInterface]);
            }
            if (data.hasOwnProperty('required')) {
                obj['required'] = ApiClient.convertToType(data['required'], 'Boolean');
            }
            if (data.hasOwnProperty('sku')) {
                obj['sku'] = ApiClient.convertToType(data['sku'], 'String');
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BundleDataOptionInterface</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BundleDataOptionInterface</code>.
     */
    static validateJSON(data) {
        if (data['product_links']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['product_links'])) {
                throw new Error("Expected the field `product_links` to be an array in the JSON data but got " + data['product_links']);
            }
            // validate the optional field `product_links` (array)
            for (const item of data['product_links']) {
                BundleDataLinkInterface.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['sku'] && !(typeof data['sku'] === 'string' || data['sku'] instanceof String)) {
            throw new Error("Expected the field `sku` to be a primitive type in the JSON string but got " + data['sku']);
        }
        // ensure the json data is a string
        if (data['title'] && !(typeof data['title'] === 'string' || data['title'] instanceof String)) {
            throw new Error("Expected the field `title` to be a primitive type in the JSON string but got " + data['title']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}



/**
 * ExtensionInterface class for @see \\Magento\\Bundle\\Api\\Data\\OptionInterface
 * @member {Object} extension_attributes
 */
BundleDataOptionInterface.prototype['extension_attributes'] = undefined;

/**
 * Option id
 * @member {Number} option_id
 */
BundleDataOptionInterface.prototype['option_id'] = undefined;

/**
 * Option position
 * @member {Number} position
 */
BundleDataOptionInterface.prototype['position'] = undefined;

/**
 * Product links
 * @member {Array.<module:model/BundleDataLinkInterface>} product_links
 */
BundleDataOptionInterface.prototype['product_links'] = undefined;

/**
 * Is required option
 * @member {Boolean} required
 */
BundleDataOptionInterface.prototype['required'] = undefined;

/**
 * Product sku
 * @member {String} sku
 */
BundleDataOptionInterface.prototype['sku'] = undefined;

/**
 * Option title
 * @member {String} title
 */
BundleDataOptionInterface.prototype['title'] = undefined;

/**
 * Input type
 * @member {String} type
 */
BundleDataOptionInterface.prototype['type'] = undefined;






export default BundleDataOptionInterface;

