/**
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CompanyCreditDataCreditBalanceOptionsInterface model module.
 * @module model/CompanyCreditDataCreditBalanceOptionsInterface
 * @version 2.2.10
 */
class CompanyCreditDataCreditBalanceOptionsInterface {
    /**
     * Constructs a new <code>CompanyCreditDataCreditBalanceOptionsInterface</code>.
     * Credit balance data transfer object interface.
     * @alias module:model/CompanyCreditDataCreditBalanceOptionsInterface
     * @param currencyBase {String} Currency base.
     * @param currencyDisplay {String} Currency display.
     * @param orderIncrement {String} Order increment.
     * @param purchaseOrder {String} Purchase order number.
     */
    constructor(currencyBase, currencyDisplay, orderIncrement, purchaseOrder) { 
        
        CompanyCreditDataCreditBalanceOptionsInterface.initialize(this, currencyBase, currencyDisplay, orderIncrement, purchaseOrder);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, currencyBase, currencyDisplay, orderIncrement, purchaseOrder) { 
        obj['currency_base'] = currencyBase;
        obj['currency_display'] = currencyDisplay;
        obj['order_increment'] = orderIncrement;
        obj['purchase_order'] = purchaseOrder;
    }

    /**
     * Constructs a <code>CompanyCreditDataCreditBalanceOptionsInterface</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CompanyCreditDataCreditBalanceOptionsInterface} obj Optional instance to populate.
     * @return {module:model/CompanyCreditDataCreditBalanceOptionsInterface} The populated <code>CompanyCreditDataCreditBalanceOptionsInterface</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CompanyCreditDataCreditBalanceOptionsInterface();

            if (data.hasOwnProperty('currency_base')) {
                obj['currency_base'] = ApiClient.convertToType(data['currency_base'], 'String');
            }
            if (data.hasOwnProperty('currency_display')) {
                obj['currency_display'] = ApiClient.convertToType(data['currency_display'], 'String');
            }
            if (data.hasOwnProperty('order_increment')) {
                obj['order_increment'] = ApiClient.convertToType(data['order_increment'], 'String');
            }
            if (data.hasOwnProperty('purchase_order')) {
                obj['purchase_order'] = ApiClient.convertToType(data['purchase_order'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CompanyCreditDataCreditBalanceOptionsInterface</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CompanyCreditDataCreditBalanceOptionsInterface</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CompanyCreditDataCreditBalanceOptionsInterface.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['currency_base'] && !(typeof data['currency_base'] === 'string' || data['currency_base'] instanceof String)) {
            throw new Error("Expected the field `currency_base` to be a primitive type in the JSON string but got " + data['currency_base']);
        }
        // ensure the json data is a string
        if (data['currency_display'] && !(typeof data['currency_display'] === 'string' || data['currency_display'] instanceof String)) {
            throw new Error("Expected the field `currency_display` to be a primitive type in the JSON string but got " + data['currency_display']);
        }
        // ensure the json data is a string
        if (data['order_increment'] && !(typeof data['order_increment'] === 'string' || data['order_increment'] instanceof String)) {
            throw new Error("Expected the field `order_increment` to be a primitive type in the JSON string but got " + data['order_increment']);
        }
        // ensure the json data is a string
        if (data['purchase_order'] && !(typeof data['purchase_order'] === 'string' || data['purchase_order'] instanceof String)) {
            throw new Error("Expected the field `purchase_order` to be a primitive type in the JSON string but got " + data['purchase_order']);
        }

        return true;
    }


}

CompanyCreditDataCreditBalanceOptionsInterface.RequiredProperties = ["currency_base", "currency_display", "order_increment", "purchase_order"];

/**
 * Currency base.
 * @member {String} currency_base
 */
CompanyCreditDataCreditBalanceOptionsInterface.prototype['currency_base'] = undefined;

/**
 * Currency display.
 * @member {String} currency_display
 */
CompanyCreditDataCreditBalanceOptionsInterface.prototype['currency_display'] = undefined;

/**
 * Order increment.
 * @member {String} order_increment
 */
CompanyCreditDataCreditBalanceOptionsInterface.prototype['order_increment'] = undefined;

/**
 * Purchase order number.
 * @member {String} purchase_order
 */
CompanyCreditDataCreditBalanceOptionsInterface.prototype['purchase_order'] = undefined;






export default CompanyCreditDataCreditBalanceOptionsInterface;

