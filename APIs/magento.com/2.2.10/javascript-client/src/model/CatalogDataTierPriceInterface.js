/**
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CatalogDataTierPriceInterface model module.
 * @module model/CatalogDataTierPriceInterface
 * @version 2.2.10
 */
class CatalogDataTierPriceInterface {
    /**
     * Constructs a new <code>CatalogDataTierPriceInterface</code>.
     * Tier price interface.
     * @alias module:model/CatalogDataTierPriceInterface
     * @param customerGroup {String} Customer group.
     * @param price {Number} Tier price.
     * @param priceType {String} Tier price type.
     * @param quantity {Number} Quantity.
     * @param sku {String} SKU.
     * @param websiteId {Number} Website id.
     */
    constructor(customerGroup, price, priceType, quantity, sku, websiteId) { 
        
        CatalogDataTierPriceInterface.initialize(this, customerGroup, price, priceType, quantity, sku, websiteId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, customerGroup, price, priceType, quantity, sku, websiteId) { 
        obj['customer_group'] = customerGroup;
        obj['price'] = price;
        obj['price_type'] = priceType;
        obj['quantity'] = quantity;
        obj['sku'] = sku;
        obj['website_id'] = websiteId;
    }

    /**
     * Constructs a <code>CatalogDataTierPriceInterface</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CatalogDataTierPriceInterface} obj Optional instance to populate.
     * @return {module:model/CatalogDataTierPriceInterface} The populated <code>CatalogDataTierPriceInterface</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CatalogDataTierPriceInterface();

            if (data.hasOwnProperty('customer_group')) {
                obj['customer_group'] = ApiClient.convertToType(data['customer_group'], 'String');
            }
            if (data.hasOwnProperty('extension_attributes')) {
                obj['extension_attributes'] = ApiClient.convertToType(data['extension_attributes'], Object);
            }
            if (data.hasOwnProperty('price')) {
                obj['price'] = ApiClient.convertToType(data['price'], 'Number');
            }
            if (data.hasOwnProperty('price_type')) {
                obj['price_type'] = ApiClient.convertToType(data['price_type'], 'String');
            }
            if (data.hasOwnProperty('quantity')) {
                obj['quantity'] = ApiClient.convertToType(data['quantity'], 'Number');
            }
            if (data.hasOwnProperty('sku')) {
                obj['sku'] = ApiClient.convertToType(data['sku'], 'String');
            }
            if (data.hasOwnProperty('website_id')) {
                obj['website_id'] = ApiClient.convertToType(data['website_id'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CatalogDataTierPriceInterface</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CatalogDataTierPriceInterface</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CatalogDataTierPriceInterface.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['customer_group'] && !(typeof data['customer_group'] === 'string' || data['customer_group'] instanceof String)) {
            throw new Error("Expected the field `customer_group` to be a primitive type in the JSON string but got " + data['customer_group']);
        }
        // ensure the json data is a string
        if (data['price_type'] && !(typeof data['price_type'] === 'string' || data['price_type'] instanceof String)) {
            throw new Error("Expected the field `price_type` to be a primitive type in the JSON string but got " + data['price_type']);
        }
        // ensure the json data is a string
        if (data['sku'] && !(typeof data['sku'] === 'string' || data['sku'] instanceof String)) {
            throw new Error("Expected the field `sku` to be a primitive type in the JSON string but got " + data['sku']);
        }

        return true;
    }


}

CatalogDataTierPriceInterface.RequiredProperties = ["customer_group", "price", "price_type", "quantity", "sku", "website_id"];

/**
 * Customer group.
 * @member {String} customer_group
 */
CatalogDataTierPriceInterface.prototype['customer_group'] = undefined;

/**
 * ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\TierPriceInterface
 * @member {Object} extension_attributes
 */
CatalogDataTierPriceInterface.prototype['extension_attributes'] = undefined;

/**
 * Tier price.
 * @member {Number} price
 */
CatalogDataTierPriceInterface.prototype['price'] = undefined;

/**
 * Tier price type.
 * @member {String} price_type
 */
CatalogDataTierPriceInterface.prototype['price_type'] = undefined;

/**
 * Quantity.
 * @member {Number} quantity
 */
CatalogDataTierPriceInterface.prototype['quantity'] = undefined;

/**
 * SKU.
 * @member {String} sku
 */
CatalogDataTierPriceInterface.prototype['sku'] = undefined;

/**
 * Website id.
 * @member {Number} website_id
 */
CatalogDataTierPriceInterface.prototype['website_id'] = undefined;






export default CatalogDataTierPriceInterface;

