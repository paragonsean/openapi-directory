/**
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The StoreDataWebsiteInterface model module.
 * @module model/StoreDataWebsiteInterface
 * @version 2.2.10
 */
class StoreDataWebsiteInterface {
    /**
     * Constructs a new <code>StoreDataWebsiteInterface</code>.
     * Website interface
     * @alias module:model/StoreDataWebsiteInterface
     * @param code {String} 
     * @param defaultGroupId {Number} 
     * @param id {Number} 
     * @param name {String} Website name
     */
    constructor(code, defaultGroupId, id, name) { 
        
        StoreDataWebsiteInterface.initialize(this, code, defaultGroupId, id, name);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, code, defaultGroupId, id, name) { 
        obj['code'] = code;
        obj['default_group_id'] = defaultGroupId;
        obj['id'] = id;
        obj['name'] = name;
    }

    /**
     * Constructs a <code>StoreDataWebsiteInterface</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/StoreDataWebsiteInterface} obj Optional instance to populate.
     * @return {module:model/StoreDataWebsiteInterface} The populated <code>StoreDataWebsiteInterface</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new StoreDataWebsiteInterface();

            if (data.hasOwnProperty('code')) {
                obj['code'] = ApiClient.convertToType(data['code'], 'String');
            }
            if (data.hasOwnProperty('default_group_id')) {
                obj['default_group_id'] = ApiClient.convertToType(data['default_group_id'], 'Number');
            }
            if (data.hasOwnProperty('extension_attributes')) {
                obj['extension_attributes'] = ApiClient.convertToType(data['extension_attributes'], Object);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>StoreDataWebsiteInterface</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>StoreDataWebsiteInterface</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of StoreDataWebsiteInterface.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['code'] && !(typeof data['code'] === 'string' || data['code'] instanceof String)) {
            throw new Error("Expected the field `code` to be a primitive type in the JSON string but got " + data['code']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }

        return true;
    }


}

StoreDataWebsiteInterface.RequiredProperties = ["code", "default_group_id", "id", "name"];

/**
 * @member {String} code
 */
StoreDataWebsiteInterface.prototype['code'] = undefined;

/**
 * @member {Number} default_group_id
 */
StoreDataWebsiteInterface.prototype['default_group_id'] = undefined;

/**
 * ExtensionInterface class for @see \\Magento\\Store\\Api\\Data\\WebsiteInterface
 * @member {Object} extension_attributes
 */
StoreDataWebsiteInterface.prototype['extension_attributes'] = undefined;

/**
 * @member {Number} id
 */
StoreDataWebsiteInterface.prototype['id'] = undefined;

/**
 * Website name
 * @member {String} name
 */
StoreDataWebsiteInterface.prototype['name'] = undefined;






export default StoreDataWebsiteInterface;

