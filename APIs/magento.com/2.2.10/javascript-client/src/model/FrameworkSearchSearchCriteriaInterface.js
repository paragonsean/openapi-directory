/**
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import FrameworkSearchFilterGroup from './FrameworkSearchFilterGroup';
import FrameworkSortOrder from './FrameworkSortOrder';

/**
 * The FrameworkSearchSearchCriteriaInterface model module.
 * @module model/FrameworkSearchSearchCriteriaInterface
 * @version 2.2.10
 */
class FrameworkSearchSearchCriteriaInterface {
    /**
     * Constructs a new <code>FrameworkSearchSearchCriteriaInterface</code>.
     * Interface SearchCriteriaInterface
     * @alias module:model/FrameworkSearchSearchCriteriaInterface
     * @param filterGroups {Array.<module:model/FrameworkSearchFilterGroup>} A list of filter groups.
     * @param requestName {String} 
     */
    constructor(filterGroups, requestName) { 
        
        FrameworkSearchSearchCriteriaInterface.initialize(this, filterGroups, requestName);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, filterGroups, requestName) { 
        obj['filter_groups'] = filterGroups;
        obj['request_name'] = requestName;
    }

    /**
     * Constructs a <code>FrameworkSearchSearchCriteriaInterface</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FrameworkSearchSearchCriteriaInterface} obj Optional instance to populate.
     * @return {module:model/FrameworkSearchSearchCriteriaInterface} The populated <code>FrameworkSearchSearchCriteriaInterface</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FrameworkSearchSearchCriteriaInterface();

            if (data.hasOwnProperty('current_page')) {
                obj['current_page'] = ApiClient.convertToType(data['current_page'], 'Number');
            }
            if (data.hasOwnProperty('filter_groups')) {
                obj['filter_groups'] = ApiClient.convertToType(data['filter_groups'], [FrameworkSearchFilterGroup]);
            }
            if (data.hasOwnProperty('page_size')) {
                obj['page_size'] = ApiClient.convertToType(data['page_size'], 'Number');
            }
            if (data.hasOwnProperty('request_name')) {
                obj['request_name'] = ApiClient.convertToType(data['request_name'], 'String');
            }
            if (data.hasOwnProperty('sort_orders')) {
                obj['sort_orders'] = ApiClient.convertToType(data['sort_orders'], [FrameworkSortOrder]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FrameworkSearchSearchCriteriaInterface</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FrameworkSearchSearchCriteriaInterface</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of FrameworkSearchSearchCriteriaInterface.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['filter_groups']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['filter_groups'])) {
                throw new Error("Expected the field `filter_groups` to be an array in the JSON data but got " + data['filter_groups']);
            }
            // validate the optional field `filter_groups` (array)
            for (const item of data['filter_groups']) {
                FrameworkSearchFilterGroup.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['request_name'] && !(typeof data['request_name'] === 'string' || data['request_name'] instanceof String)) {
            throw new Error("Expected the field `request_name` to be a primitive type in the JSON string but got " + data['request_name']);
        }
        if (data['sort_orders']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['sort_orders'])) {
                throw new Error("Expected the field `sort_orders` to be an array in the JSON data but got " + data['sort_orders']);
            }
            // validate the optional field `sort_orders` (array)
            for (const item of data['sort_orders']) {
                FrameworkSortOrder.validateJSON(item);
            };
        }

        return true;
    }


}

FrameworkSearchSearchCriteriaInterface.RequiredProperties = ["filter_groups", "request_name"];

/**
 * Current page.
 * @member {Number} current_page
 */
FrameworkSearchSearchCriteriaInterface.prototype['current_page'] = undefined;

/**
 * A list of filter groups.
 * @member {Array.<module:model/FrameworkSearchFilterGroup>} filter_groups
 */
FrameworkSearchSearchCriteriaInterface.prototype['filter_groups'] = undefined;

/**
 * Page size.
 * @member {Number} page_size
 */
FrameworkSearchSearchCriteriaInterface.prototype['page_size'] = undefined;

/**
 * @member {String} request_name
 */
FrameworkSearchSearchCriteriaInterface.prototype['request_name'] = undefined;

/**
 * Sort order.
 * @member {Array.<module:model/FrameworkSortOrder>} sort_orders
 */
FrameworkSearchSearchCriteriaInterface.prototype['sort_orders'] = undefined;






export default FrameworkSearchSearchCriteriaInterface;

