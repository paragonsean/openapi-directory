/**
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The VaultDataPaymentTokenInterface model module.
 * @module model/VaultDataPaymentTokenInterface
 * @version 2.2.10
 */
class VaultDataPaymentTokenInterface {
    /**
     * Constructs a new <code>VaultDataPaymentTokenInterface</code>.
     * Gateway vault payment token interface.
     * @alias module:model/VaultDataPaymentTokenInterface
     * @param gatewayToken {String} Gateway token ID
     * @param isActive {Boolean} Is active.
     * @param isVisible {Boolean} Is visible.
     * @param paymentMethodCode {String} Payment method code
     * @param publicHash {String} Public hash
     * @param tokenDetails {String} Token details
     * @param type {String} Type
     */
    constructor(gatewayToken, isActive, isVisible, paymentMethodCode, publicHash, tokenDetails, type) { 
        
        VaultDataPaymentTokenInterface.initialize(this, gatewayToken, isActive, isVisible, paymentMethodCode, publicHash, tokenDetails, type);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, gatewayToken, isActive, isVisible, paymentMethodCode, publicHash, tokenDetails, type) { 
        obj['gateway_token'] = gatewayToken;
        obj['is_active'] = isActive;
        obj['is_visible'] = isVisible;
        obj['payment_method_code'] = paymentMethodCode;
        obj['public_hash'] = publicHash;
        obj['token_details'] = tokenDetails;
        obj['type'] = type;
    }

    /**
     * Constructs a <code>VaultDataPaymentTokenInterface</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VaultDataPaymentTokenInterface} obj Optional instance to populate.
     * @return {module:model/VaultDataPaymentTokenInterface} The populated <code>VaultDataPaymentTokenInterface</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VaultDataPaymentTokenInterface();

            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'String');
            }
            if (data.hasOwnProperty('customer_id')) {
                obj['customer_id'] = ApiClient.convertToType(data['customer_id'], 'Number');
            }
            if (data.hasOwnProperty('entity_id')) {
                obj['entity_id'] = ApiClient.convertToType(data['entity_id'], 'Number');
            }
            if (data.hasOwnProperty('expires_at')) {
                obj['expires_at'] = ApiClient.convertToType(data['expires_at'], 'String');
            }
            if (data.hasOwnProperty('gateway_token')) {
                obj['gateway_token'] = ApiClient.convertToType(data['gateway_token'], 'String');
            }
            if (data.hasOwnProperty('is_active')) {
                obj['is_active'] = ApiClient.convertToType(data['is_active'], 'Boolean');
            }
            if (data.hasOwnProperty('is_visible')) {
                obj['is_visible'] = ApiClient.convertToType(data['is_visible'], 'Boolean');
            }
            if (data.hasOwnProperty('payment_method_code')) {
                obj['payment_method_code'] = ApiClient.convertToType(data['payment_method_code'], 'String');
            }
            if (data.hasOwnProperty('public_hash')) {
                obj['public_hash'] = ApiClient.convertToType(data['public_hash'], 'String');
            }
            if (data.hasOwnProperty('token_details')) {
                obj['token_details'] = ApiClient.convertToType(data['token_details'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>VaultDataPaymentTokenInterface</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>VaultDataPaymentTokenInterface</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of VaultDataPaymentTokenInterface.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['created_at'] && !(typeof data['created_at'] === 'string' || data['created_at'] instanceof String)) {
            throw new Error("Expected the field `created_at` to be a primitive type in the JSON string but got " + data['created_at']);
        }
        // ensure the json data is a string
        if (data['expires_at'] && !(typeof data['expires_at'] === 'string' || data['expires_at'] instanceof String)) {
            throw new Error("Expected the field `expires_at` to be a primitive type in the JSON string but got " + data['expires_at']);
        }
        // ensure the json data is a string
        if (data['gateway_token'] && !(typeof data['gateway_token'] === 'string' || data['gateway_token'] instanceof String)) {
            throw new Error("Expected the field `gateway_token` to be a primitive type in the JSON string but got " + data['gateway_token']);
        }
        // ensure the json data is a string
        if (data['payment_method_code'] && !(typeof data['payment_method_code'] === 'string' || data['payment_method_code'] instanceof String)) {
            throw new Error("Expected the field `payment_method_code` to be a primitive type in the JSON string but got " + data['payment_method_code']);
        }
        // ensure the json data is a string
        if (data['public_hash'] && !(typeof data['public_hash'] === 'string' || data['public_hash'] instanceof String)) {
            throw new Error("Expected the field `public_hash` to be a primitive type in the JSON string but got " + data['public_hash']);
        }
        // ensure the json data is a string
        if (data['token_details'] && !(typeof data['token_details'] === 'string' || data['token_details'] instanceof String)) {
            throw new Error("Expected the field `token_details` to be a primitive type in the JSON string but got " + data['token_details']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}

VaultDataPaymentTokenInterface.RequiredProperties = ["gateway_token", "is_active", "is_visible", "payment_method_code", "public_hash", "token_details", "type"];

/**
 * Token creation timestamp
 * @member {String} created_at
 */
VaultDataPaymentTokenInterface.prototype['created_at'] = undefined;

/**
 * Customer ID.
 * @member {Number} customer_id
 */
VaultDataPaymentTokenInterface.prototype['customer_id'] = undefined;

/**
 * Entity ID.
 * @member {Number} entity_id
 */
VaultDataPaymentTokenInterface.prototype['entity_id'] = undefined;

/**
 * Token expiration timestamp
 * @member {String} expires_at
 */
VaultDataPaymentTokenInterface.prototype['expires_at'] = undefined;

/**
 * Gateway token ID
 * @member {String} gateway_token
 */
VaultDataPaymentTokenInterface.prototype['gateway_token'] = undefined;

/**
 * Is active.
 * @member {Boolean} is_active
 */
VaultDataPaymentTokenInterface.prototype['is_active'] = undefined;

/**
 * Is visible.
 * @member {Boolean} is_visible
 */
VaultDataPaymentTokenInterface.prototype['is_visible'] = undefined;

/**
 * Payment method code
 * @member {String} payment_method_code
 */
VaultDataPaymentTokenInterface.prototype['payment_method_code'] = undefined;

/**
 * Public hash
 * @member {String} public_hash
 */
VaultDataPaymentTokenInterface.prototype['public_hash'] = undefined;

/**
 * Token details
 * @member {String} token_details
 */
VaultDataPaymentTokenInterface.prototype['token_details'] = undefined;

/**
 * Type
 * @member {String} type
 */
VaultDataPaymentTokenInterface.prototype['type'] = undefined;






export default VaultDataPaymentTokenInterface;

