/**
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CatalogInventoryDataStockItemInterface from './CatalogInventoryDataStockItemInterface';

/**
 * The CatalogInventoryDataStockStatusInterface model module.
 * @module model/CatalogInventoryDataStockStatusInterface
 * @version 2.2.10
 */
class CatalogInventoryDataStockStatusInterface {
    /**
     * Constructs a new <code>CatalogInventoryDataStockStatusInterface</code>.
     * Interface StockStatusInterface
     * @alias module:model/CatalogInventoryDataStockStatusInterface
     * @param productId {Number} 
     * @param qty {Number} 
     * @param stockId {Number} 
     * @param stockItem {module:model/CatalogInventoryDataStockItemInterface} 
     * @param stockStatus {Number} 
     */
    constructor(productId, qty, stockId, stockItem, stockStatus) { 
        
        CatalogInventoryDataStockStatusInterface.initialize(this, productId, qty, stockId, stockItem, stockStatus);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, productId, qty, stockId, stockItem, stockStatus) { 
        obj['product_id'] = productId;
        obj['qty'] = qty;
        obj['stock_id'] = stockId;
        obj['stock_item'] = stockItem;
        obj['stock_status'] = stockStatus;
    }

    /**
     * Constructs a <code>CatalogInventoryDataStockStatusInterface</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CatalogInventoryDataStockStatusInterface} obj Optional instance to populate.
     * @return {module:model/CatalogInventoryDataStockStatusInterface} The populated <code>CatalogInventoryDataStockStatusInterface</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CatalogInventoryDataStockStatusInterface();

            if (data.hasOwnProperty('extension_attributes')) {
                obj['extension_attributes'] = ApiClient.convertToType(data['extension_attributes'], Object);
            }
            if (data.hasOwnProperty('product_id')) {
                obj['product_id'] = ApiClient.convertToType(data['product_id'], 'Number');
            }
            if (data.hasOwnProperty('qty')) {
                obj['qty'] = ApiClient.convertToType(data['qty'], 'Number');
            }
            if (data.hasOwnProperty('stock_id')) {
                obj['stock_id'] = ApiClient.convertToType(data['stock_id'], 'Number');
            }
            if (data.hasOwnProperty('stock_item')) {
                obj['stock_item'] = CatalogInventoryDataStockItemInterface.constructFromObject(data['stock_item']);
            }
            if (data.hasOwnProperty('stock_status')) {
                obj['stock_status'] = ApiClient.convertToType(data['stock_status'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CatalogInventoryDataStockStatusInterface</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CatalogInventoryDataStockStatusInterface</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CatalogInventoryDataStockStatusInterface.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `stock_item`
        if (data['stock_item']) { // data not null
          CatalogInventoryDataStockItemInterface.validateJSON(data['stock_item']);
        }

        return true;
    }


}

CatalogInventoryDataStockStatusInterface.RequiredProperties = ["product_id", "qty", "stock_id", "stock_item", "stock_status"];

/**
 * ExtensionInterface class for @see \\Magento\\CatalogInventory\\Api\\Data\\StockStatusInterface
 * @member {Object} extension_attributes
 */
CatalogInventoryDataStockStatusInterface.prototype['extension_attributes'] = undefined;

/**
 * @member {Number} product_id
 */
CatalogInventoryDataStockStatusInterface.prototype['product_id'] = undefined;

/**
 * @member {Number} qty
 */
CatalogInventoryDataStockStatusInterface.prototype['qty'] = undefined;

/**
 * @member {Number} stock_id
 */
CatalogInventoryDataStockStatusInterface.prototype['stock_id'] = undefined;

/**
 * @member {module:model/CatalogInventoryDataStockItemInterface} stock_item
 */
CatalogInventoryDataStockStatusInterface.prototype['stock_item'] = undefined;

/**
 * @member {Number} stock_status
 */
CatalogInventoryDataStockStatusInterface.prototype['stock_status'] = undefined;






export default CatalogInventoryDataStockStatusInterface;

