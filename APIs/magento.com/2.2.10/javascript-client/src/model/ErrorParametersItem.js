/**
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ErrorParametersItem model module.
 * @module model/ErrorParametersItem
 * @version 2.2.10
 */
class ErrorParametersItem {
    /**
     * Constructs a new <code>ErrorParametersItem</code>.
     * Error parameters item
     * @alias module:model/ErrorParametersItem
     */
    constructor() { 
        
        ErrorParametersItem.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ErrorParametersItem</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ErrorParametersItem} obj Optional instance to populate.
     * @return {module:model/ErrorParametersItem} The populated <code>ErrorParametersItem</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ErrorParametersItem();

            if (data.hasOwnProperty('fieldName')) {
                obj['fieldName'] = ApiClient.convertToType(data['fieldName'], 'String');
            }
            if (data.hasOwnProperty('fieldValue')) {
                obj['fieldValue'] = ApiClient.convertToType(data['fieldValue'], 'String');
            }
            if (data.hasOwnProperty('resources')) {
                obj['resources'] = ApiClient.convertToType(data['resources'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ErrorParametersItem</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ErrorParametersItem</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['fieldName'] && !(typeof data['fieldName'] === 'string' || data['fieldName'] instanceof String)) {
            throw new Error("Expected the field `fieldName` to be a primitive type in the JSON string but got " + data['fieldName']);
        }
        // ensure the json data is a string
        if (data['fieldValue'] && !(typeof data['fieldValue'] === 'string' || data['fieldValue'] instanceof String)) {
            throw new Error("Expected the field `fieldValue` to be a primitive type in the JSON string but got " + data['fieldValue']);
        }
        // ensure the json data is a string
        if (data['resources'] && !(typeof data['resources'] === 'string' || data['resources'] instanceof String)) {
            throw new Error("Expected the field `resources` to be a primitive type in the JSON string but got " + data['resources']);
        }

        return true;
    }


}



/**
 * Missing or invalid field name
 * @member {String} fieldName
 */
ErrorParametersItem.prototype['fieldName'] = undefined;

/**
 * Incorrect field value
 * @member {String} fieldValue
 */
ErrorParametersItem.prototype['fieldValue'] = undefined;

/**
 * ACL resource
 * @member {String} resources
 */
ErrorParametersItem.prototype['resources'] = undefined;






export default ErrorParametersItem;

