/**
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EavDataAttributeFrontendLabelInterface from './EavDataAttributeFrontendLabelInterface';
import EavDataAttributeOptionInterface from './EavDataAttributeOptionInterface';
import EavDataAttributeValidationRuleInterface from './EavDataAttributeValidationRuleInterface';
import FrameworkAttributeInterface from './FrameworkAttributeInterface';

/**
 * The CatalogDataProductAttributeInterface model module.
 * @module model/CatalogDataProductAttributeInterface
 * @version 2.2.10
 */
class CatalogDataProductAttributeInterface {
    /**
     * Constructs a new <code>CatalogDataProductAttributeInterface</code>.
     * 
     * @alias module:model/CatalogDataProductAttributeInterface
     * @param attributeCode {String} Code of the attribute.
     * @param entityTypeId {String} Entity type id
     * @param frontendInput {String} HTML for input element.
     * @param frontendLabels {Array.<module:model/EavDataAttributeFrontendLabelInterface>} Frontend label for each store
     * @param isRequired {Boolean} Attribute is required.
     */
    constructor(attributeCode, entityTypeId, frontendInput, frontendLabels, isRequired) { 
        
        CatalogDataProductAttributeInterface.initialize(this, attributeCode, entityTypeId, frontendInput, frontendLabels, isRequired);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, attributeCode, entityTypeId, frontendInput, frontendLabels, isRequired) { 
        obj['attribute_code'] = attributeCode;
        obj['entity_type_id'] = entityTypeId;
        obj['frontend_input'] = frontendInput;
        obj['frontend_labels'] = frontendLabels;
        obj['is_required'] = isRequired;
    }

    /**
     * Constructs a <code>CatalogDataProductAttributeInterface</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CatalogDataProductAttributeInterface} obj Optional instance to populate.
     * @return {module:model/CatalogDataProductAttributeInterface} The populated <code>CatalogDataProductAttributeInterface</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CatalogDataProductAttributeInterface();

            if (data.hasOwnProperty('apply_to')) {
                obj['apply_to'] = ApiClient.convertToType(data['apply_to'], ['String']);
            }
            if (data.hasOwnProperty('attribute_code')) {
                obj['attribute_code'] = ApiClient.convertToType(data['attribute_code'], 'String');
            }
            if (data.hasOwnProperty('attribute_id')) {
                obj['attribute_id'] = ApiClient.convertToType(data['attribute_id'], 'Number');
            }
            if (data.hasOwnProperty('backend_model')) {
                obj['backend_model'] = ApiClient.convertToType(data['backend_model'], 'String');
            }
            if (data.hasOwnProperty('backend_type')) {
                obj['backend_type'] = ApiClient.convertToType(data['backend_type'], 'String');
            }
            if (data.hasOwnProperty('custom_attributes')) {
                obj['custom_attributes'] = ApiClient.convertToType(data['custom_attributes'], [FrameworkAttributeInterface]);
            }
            if (data.hasOwnProperty('default_frontend_label')) {
                obj['default_frontend_label'] = ApiClient.convertToType(data['default_frontend_label'], 'String');
            }
            if (data.hasOwnProperty('default_value')) {
                obj['default_value'] = ApiClient.convertToType(data['default_value'], 'String');
            }
            if (data.hasOwnProperty('entity_type_id')) {
                obj['entity_type_id'] = ApiClient.convertToType(data['entity_type_id'], 'String');
            }
            if (data.hasOwnProperty('extension_attributes')) {
                obj['extension_attributes'] = ApiClient.convertToType(data['extension_attributes'], Object);
            }
            if (data.hasOwnProperty('frontend_class')) {
                obj['frontend_class'] = ApiClient.convertToType(data['frontend_class'], 'String');
            }
            if (data.hasOwnProperty('frontend_input')) {
                obj['frontend_input'] = ApiClient.convertToType(data['frontend_input'], 'String');
            }
            if (data.hasOwnProperty('frontend_labels')) {
                obj['frontend_labels'] = ApiClient.convertToType(data['frontend_labels'], [EavDataAttributeFrontendLabelInterface]);
            }
            if (data.hasOwnProperty('is_comparable')) {
                obj['is_comparable'] = ApiClient.convertToType(data['is_comparable'], 'String');
            }
            if (data.hasOwnProperty('is_filterable')) {
                obj['is_filterable'] = ApiClient.convertToType(data['is_filterable'], 'Boolean');
            }
            if (data.hasOwnProperty('is_filterable_in_grid')) {
                obj['is_filterable_in_grid'] = ApiClient.convertToType(data['is_filterable_in_grid'], 'Boolean');
            }
            if (data.hasOwnProperty('is_filterable_in_search')) {
                obj['is_filterable_in_search'] = ApiClient.convertToType(data['is_filterable_in_search'], 'Boolean');
            }
            if (data.hasOwnProperty('is_html_allowed_on_front')) {
                obj['is_html_allowed_on_front'] = ApiClient.convertToType(data['is_html_allowed_on_front'], 'Boolean');
            }
            if (data.hasOwnProperty('is_required')) {
                obj['is_required'] = ApiClient.convertToType(data['is_required'], 'Boolean');
            }
            if (data.hasOwnProperty('is_searchable')) {
                obj['is_searchable'] = ApiClient.convertToType(data['is_searchable'], 'String');
            }
            if (data.hasOwnProperty('is_unique')) {
                obj['is_unique'] = ApiClient.convertToType(data['is_unique'], 'String');
            }
            if (data.hasOwnProperty('is_used_for_promo_rules')) {
                obj['is_used_for_promo_rules'] = ApiClient.convertToType(data['is_used_for_promo_rules'], 'String');
            }
            if (data.hasOwnProperty('is_used_in_grid')) {
                obj['is_used_in_grid'] = ApiClient.convertToType(data['is_used_in_grid'], 'Boolean');
            }
            if (data.hasOwnProperty('is_user_defined')) {
                obj['is_user_defined'] = ApiClient.convertToType(data['is_user_defined'], 'Boolean');
            }
            if (data.hasOwnProperty('is_visible')) {
                obj['is_visible'] = ApiClient.convertToType(data['is_visible'], 'Boolean');
            }
            if (data.hasOwnProperty('is_visible_in_advanced_search')) {
                obj['is_visible_in_advanced_search'] = ApiClient.convertToType(data['is_visible_in_advanced_search'], 'String');
            }
            if (data.hasOwnProperty('is_visible_in_grid')) {
                obj['is_visible_in_grid'] = ApiClient.convertToType(data['is_visible_in_grid'], 'Boolean');
            }
            if (data.hasOwnProperty('is_visible_on_front')) {
                obj['is_visible_on_front'] = ApiClient.convertToType(data['is_visible_on_front'], 'String');
            }
            if (data.hasOwnProperty('is_wysiwyg_enabled')) {
                obj['is_wysiwyg_enabled'] = ApiClient.convertToType(data['is_wysiwyg_enabled'], 'Boolean');
            }
            if (data.hasOwnProperty('note')) {
                obj['note'] = ApiClient.convertToType(data['note'], 'String');
            }
            if (data.hasOwnProperty('options')) {
                obj['options'] = ApiClient.convertToType(data['options'], [EavDataAttributeOptionInterface]);
            }
            if (data.hasOwnProperty('position')) {
                obj['position'] = ApiClient.convertToType(data['position'], 'Number');
            }
            if (data.hasOwnProperty('scope')) {
                obj['scope'] = ApiClient.convertToType(data['scope'], 'String');
            }
            if (data.hasOwnProperty('source_model')) {
                obj['source_model'] = ApiClient.convertToType(data['source_model'], 'String');
            }
            if (data.hasOwnProperty('used_for_sort_by')) {
                obj['used_for_sort_by'] = ApiClient.convertToType(data['used_for_sort_by'], 'Boolean');
            }
            if (data.hasOwnProperty('used_in_product_listing')) {
                obj['used_in_product_listing'] = ApiClient.convertToType(data['used_in_product_listing'], 'String');
            }
            if (data.hasOwnProperty('validation_rules')) {
                obj['validation_rules'] = ApiClient.convertToType(data['validation_rules'], [EavDataAttributeValidationRuleInterface]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CatalogDataProductAttributeInterface</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CatalogDataProductAttributeInterface</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CatalogDataProductAttributeInterface.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is an array
        if (!Array.isArray(data['apply_to'])) {
            throw new Error("Expected the field `apply_to` to be an array in the JSON data but got " + data['apply_to']);
        }
        // ensure the json data is a string
        if (data['attribute_code'] && !(typeof data['attribute_code'] === 'string' || data['attribute_code'] instanceof String)) {
            throw new Error("Expected the field `attribute_code` to be a primitive type in the JSON string but got " + data['attribute_code']);
        }
        // ensure the json data is a string
        if (data['backend_model'] && !(typeof data['backend_model'] === 'string' || data['backend_model'] instanceof String)) {
            throw new Error("Expected the field `backend_model` to be a primitive type in the JSON string but got " + data['backend_model']);
        }
        // ensure the json data is a string
        if (data['backend_type'] && !(typeof data['backend_type'] === 'string' || data['backend_type'] instanceof String)) {
            throw new Error("Expected the field `backend_type` to be a primitive type in the JSON string but got " + data['backend_type']);
        }
        if (data['custom_attributes']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['custom_attributes'])) {
                throw new Error("Expected the field `custom_attributes` to be an array in the JSON data but got " + data['custom_attributes']);
            }
            // validate the optional field `custom_attributes` (array)
            for (const item of data['custom_attributes']) {
                FrameworkAttributeInterface.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['default_frontend_label'] && !(typeof data['default_frontend_label'] === 'string' || data['default_frontend_label'] instanceof String)) {
            throw new Error("Expected the field `default_frontend_label` to be a primitive type in the JSON string but got " + data['default_frontend_label']);
        }
        // ensure the json data is a string
        if (data['default_value'] && !(typeof data['default_value'] === 'string' || data['default_value'] instanceof String)) {
            throw new Error("Expected the field `default_value` to be a primitive type in the JSON string but got " + data['default_value']);
        }
        // ensure the json data is a string
        if (data['entity_type_id'] && !(typeof data['entity_type_id'] === 'string' || data['entity_type_id'] instanceof String)) {
            throw new Error("Expected the field `entity_type_id` to be a primitive type in the JSON string but got " + data['entity_type_id']);
        }
        // ensure the json data is a string
        if (data['frontend_class'] && !(typeof data['frontend_class'] === 'string' || data['frontend_class'] instanceof String)) {
            throw new Error("Expected the field `frontend_class` to be a primitive type in the JSON string but got " + data['frontend_class']);
        }
        // ensure the json data is a string
        if (data['frontend_input'] && !(typeof data['frontend_input'] === 'string' || data['frontend_input'] instanceof String)) {
            throw new Error("Expected the field `frontend_input` to be a primitive type in the JSON string but got " + data['frontend_input']);
        }
        if (data['frontend_labels']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['frontend_labels'])) {
                throw new Error("Expected the field `frontend_labels` to be an array in the JSON data but got " + data['frontend_labels']);
            }
            // validate the optional field `frontend_labels` (array)
            for (const item of data['frontend_labels']) {
                EavDataAttributeFrontendLabelInterface.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['is_comparable'] && !(typeof data['is_comparable'] === 'string' || data['is_comparable'] instanceof String)) {
            throw new Error("Expected the field `is_comparable` to be a primitive type in the JSON string but got " + data['is_comparable']);
        }
        // ensure the json data is a string
        if (data['is_searchable'] && !(typeof data['is_searchable'] === 'string' || data['is_searchable'] instanceof String)) {
            throw new Error("Expected the field `is_searchable` to be a primitive type in the JSON string but got " + data['is_searchable']);
        }
        // ensure the json data is a string
        if (data['is_unique'] && !(typeof data['is_unique'] === 'string' || data['is_unique'] instanceof String)) {
            throw new Error("Expected the field `is_unique` to be a primitive type in the JSON string but got " + data['is_unique']);
        }
        // ensure the json data is a string
        if (data['is_used_for_promo_rules'] && !(typeof data['is_used_for_promo_rules'] === 'string' || data['is_used_for_promo_rules'] instanceof String)) {
            throw new Error("Expected the field `is_used_for_promo_rules` to be a primitive type in the JSON string but got " + data['is_used_for_promo_rules']);
        }
        // ensure the json data is a string
        if (data['is_visible_in_advanced_search'] && !(typeof data['is_visible_in_advanced_search'] === 'string' || data['is_visible_in_advanced_search'] instanceof String)) {
            throw new Error("Expected the field `is_visible_in_advanced_search` to be a primitive type in the JSON string but got " + data['is_visible_in_advanced_search']);
        }
        // ensure the json data is a string
        if (data['is_visible_on_front'] && !(typeof data['is_visible_on_front'] === 'string' || data['is_visible_on_front'] instanceof String)) {
            throw new Error("Expected the field `is_visible_on_front` to be a primitive type in the JSON string but got " + data['is_visible_on_front']);
        }
        // ensure the json data is a string
        if (data['note'] && !(typeof data['note'] === 'string' || data['note'] instanceof String)) {
            throw new Error("Expected the field `note` to be a primitive type in the JSON string but got " + data['note']);
        }
        if (data['options']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['options'])) {
                throw new Error("Expected the field `options` to be an array in the JSON data but got " + data['options']);
            }
            // validate the optional field `options` (array)
            for (const item of data['options']) {
                EavDataAttributeOptionInterface.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['scope'] && !(typeof data['scope'] === 'string' || data['scope'] instanceof String)) {
            throw new Error("Expected the field `scope` to be a primitive type in the JSON string but got " + data['scope']);
        }
        // ensure the json data is a string
        if (data['source_model'] && !(typeof data['source_model'] === 'string' || data['source_model'] instanceof String)) {
            throw new Error("Expected the field `source_model` to be a primitive type in the JSON string but got " + data['source_model']);
        }
        // ensure the json data is a string
        if (data['used_in_product_listing'] && !(typeof data['used_in_product_listing'] === 'string' || data['used_in_product_listing'] instanceof String)) {
            throw new Error("Expected the field `used_in_product_listing` to be a primitive type in the JSON string but got " + data['used_in_product_listing']);
        }
        if (data['validation_rules']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['validation_rules'])) {
                throw new Error("Expected the field `validation_rules` to be an array in the JSON data but got " + data['validation_rules']);
            }
            // validate the optional field `validation_rules` (array)
            for (const item of data['validation_rules']) {
                EavDataAttributeValidationRuleInterface.validateJSON(item);
            };
        }

        return true;
    }


}

CatalogDataProductAttributeInterface.RequiredProperties = ["attribute_code", "entity_type_id", "frontend_input", "frontend_labels", "is_required"];

/**
 * Apply to value for the element
 * @member {Array.<String>} apply_to
 */
CatalogDataProductAttributeInterface.prototype['apply_to'] = undefined;

/**
 * Code of the attribute.
 * @member {String} attribute_code
 */
CatalogDataProductAttributeInterface.prototype['attribute_code'] = undefined;

/**
 * Id of the attribute.
 * @member {Number} attribute_id
 */
CatalogDataProductAttributeInterface.prototype['attribute_id'] = undefined;

/**
 * Backend model
 * @member {String} backend_model
 */
CatalogDataProductAttributeInterface.prototype['backend_model'] = undefined;

/**
 * Backend type.
 * @member {String} backend_type
 */
CatalogDataProductAttributeInterface.prototype['backend_type'] = undefined;

/**
 * Custom attributes values.
 * @member {Array.<module:model/FrameworkAttributeInterface>} custom_attributes
 */
CatalogDataProductAttributeInterface.prototype['custom_attributes'] = undefined;

/**
 * Frontend label for default store
 * @member {String} default_frontend_label
 */
CatalogDataProductAttributeInterface.prototype['default_frontend_label'] = undefined;

/**
 * Default value for the element.
 * @member {String} default_value
 */
CatalogDataProductAttributeInterface.prototype['default_value'] = undefined;

/**
 * Entity type id
 * @member {String} entity_type_id
 */
CatalogDataProductAttributeInterface.prototype['entity_type_id'] = undefined;

/**
 * ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\EavAttributeInterface
 * @member {Object} extension_attributes
 */
CatalogDataProductAttributeInterface.prototype['extension_attributes'] = undefined;

/**
 * Frontend class of attribute
 * @member {String} frontend_class
 */
CatalogDataProductAttributeInterface.prototype['frontend_class'] = undefined;

/**
 * HTML for input element.
 * @member {String} frontend_input
 */
CatalogDataProductAttributeInterface.prototype['frontend_input'] = undefined;

/**
 * Frontend label for each store
 * @member {Array.<module:model/EavDataAttributeFrontendLabelInterface>} frontend_labels
 */
CatalogDataProductAttributeInterface.prototype['frontend_labels'] = undefined;

/**
 * The attribute can be compared on the frontend
 * @member {String} is_comparable
 */
CatalogDataProductAttributeInterface.prototype['is_comparable'] = undefined;

/**
 * It used in layered navigation
 * @member {Boolean} is_filterable
 */
CatalogDataProductAttributeInterface.prototype['is_filterable'] = undefined;

/**
 * It is filterable in catalog product grid
 * @member {Boolean} is_filterable_in_grid
 */
CatalogDataProductAttributeInterface.prototype['is_filterable_in_grid'] = undefined;

/**
 * It is used in search results layered navigation
 * @member {Boolean} is_filterable_in_search
 */
CatalogDataProductAttributeInterface.prototype['is_filterable_in_search'] = undefined;

/**
 * The HTML tags are allowed on the frontend
 * @member {Boolean} is_html_allowed_on_front
 */
CatalogDataProductAttributeInterface.prototype['is_html_allowed_on_front'] = undefined;

/**
 * Attribute is required.
 * @member {Boolean} is_required
 */
CatalogDataProductAttributeInterface.prototype['is_required'] = undefined;

/**
 * The attribute can be used in Quick Search
 * @member {String} is_searchable
 */
CatalogDataProductAttributeInterface.prototype['is_searchable'] = undefined;

/**
 * This is a unique attribute
 * @member {String} is_unique
 */
CatalogDataProductAttributeInterface.prototype['is_unique'] = undefined;

/**
 * The attribute can be used for promo rules
 * @member {String} is_used_for_promo_rules
 */
CatalogDataProductAttributeInterface.prototype['is_used_for_promo_rules'] = undefined;

/**
 * It is used in catalog product grid
 * @member {Boolean} is_used_in_grid
 */
CatalogDataProductAttributeInterface.prototype['is_used_in_grid'] = undefined;

/**
 * Current attribute has been defined by a user.
 * @member {Boolean} is_user_defined
 */
CatalogDataProductAttributeInterface.prototype['is_user_defined'] = undefined;

/**
 * Attribute is visible on frontend.
 * @member {Boolean} is_visible
 */
CatalogDataProductAttributeInterface.prototype['is_visible'] = undefined;

/**
 * The attribute can be used in Advanced Search
 * @member {String} is_visible_in_advanced_search
 */
CatalogDataProductAttributeInterface.prototype['is_visible_in_advanced_search'] = undefined;

/**
 * It is visible in catalog product grid
 * @member {Boolean} is_visible_in_grid
 */
CatalogDataProductAttributeInterface.prototype['is_visible_in_grid'] = undefined;

/**
 * The attribute is visible on the frontend
 * @member {String} is_visible_on_front
 */
CatalogDataProductAttributeInterface.prototype['is_visible_on_front'] = undefined;

/**
 * WYSIWYG flag
 * @member {Boolean} is_wysiwyg_enabled
 */
CatalogDataProductAttributeInterface.prototype['is_wysiwyg_enabled'] = undefined;

/**
 * The note attribute for the element.
 * @member {String} note
 */
CatalogDataProductAttributeInterface.prototype['note'] = undefined;

/**
 * Options of the attribute (key => value pairs for select)
 * @member {Array.<module:model/EavDataAttributeOptionInterface>} options
 */
CatalogDataProductAttributeInterface.prototype['options'] = undefined;

/**
 * Position
 * @member {Number} position
 */
CatalogDataProductAttributeInterface.prototype['position'] = undefined;

/**
 * Attribute scope
 * @member {String} scope
 */
CatalogDataProductAttributeInterface.prototype['scope'] = undefined;

/**
 * Source model
 * @member {String} source_model
 */
CatalogDataProductAttributeInterface.prototype['source_model'] = undefined;

/**
 * It is used for sorting in product listing
 * @member {Boolean} used_for_sort_by
 */
CatalogDataProductAttributeInterface.prototype['used_for_sort_by'] = undefined;

/**
 * The attribute can be used in product listing
 * @member {String} used_in_product_listing
 */
CatalogDataProductAttributeInterface.prototype['used_in_product_listing'] = undefined;

/**
 * Validation rules.
 * @member {Array.<module:model/EavDataAttributeValidationRuleInterface>} validation_rules
 */
CatalogDataProductAttributeInterface.prototype['validation_rules'] = undefined;






export default CatalogDataProductAttributeInterface;

