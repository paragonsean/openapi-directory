/**
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The TemandoShippingDataOrderShippingExperienceInterface model module.
 * @module model/TemandoShippingDataOrderShippingExperienceInterface
 * @version 2.2.10
 */
class TemandoShippingDataOrderShippingExperienceInterface {
    /**
     * Constructs a new <code>TemandoShippingDataOrderShippingExperienceInterface</code>.
     * Temando Shipping Experience Interface Local representation of a shipping rate in checkout. A set of shipping experiences is the result of creating an order at the Temando platform. (!) Needs to reside in Api namespace because selected shipping experience is exposed to public as a ShippingInterface extension attribute.
     * @alias module:model/TemandoShippingDataOrderShippingExperienceInterface
     * @param code {String} 
     * @param cost {Number} 
     * @param label {String} 
     */
    constructor(code, cost, label) { 
        
        TemandoShippingDataOrderShippingExperienceInterface.initialize(this, code, cost, label);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, code, cost, label) { 
        obj['code'] = code;
        obj['cost'] = cost;
        obj['label'] = label;
    }

    /**
     * Constructs a <code>TemandoShippingDataOrderShippingExperienceInterface</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TemandoShippingDataOrderShippingExperienceInterface} obj Optional instance to populate.
     * @return {module:model/TemandoShippingDataOrderShippingExperienceInterface} The populated <code>TemandoShippingDataOrderShippingExperienceInterface</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TemandoShippingDataOrderShippingExperienceInterface();

            if (data.hasOwnProperty('code')) {
                obj['code'] = ApiClient.convertToType(data['code'], 'String');
            }
            if (data.hasOwnProperty('cost')) {
                obj['cost'] = ApiClient.convertToType(data['cost'], 'Number');
            }
            if (data.hasOwnProperty('label')) {
                obj['label'] = ApiClient.convertToType(data['label'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TemandoShippingDataOrderShippingExperienceInterface</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TemandoShippingDataOrderShippingExperienceInterface</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of TemandoShippingDataOrderShippingExperienceInterface.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['code'] && !(typeof data['code'] === 'string' || data['code'] instanceof String)) {
            throw new Error("Expected the field `code` to be a primitive type in the JSON string but got " + data['code']);
        }
        // ensure the json data is a string
        if (data['label'] && !(typeof data['label'] === 'string' || data['label'] instanceof String)) {
            throw new Error("Expected the field `label` to be a primitive type in the JSON string but got " + data['label']);
        }

        return true;
    }


}

TemandoShippingDataOrderShippingExperienceInterface.RequiredProperties = ["code", "cost", "label"];

/**
 * @member {String} code
 */
TemandoShippingDataOrderShippingExperienceInterface.prototype['code'] = undefined;

/**
 * @member {Number} cost
 */
TemandoShippingDataOrderShippingExperienceInterface.prototype['cost'] = undefined;

/**
 * @member {String} label
 */
TemandoShippingDataOrderShippingExperienceInterface.prototype['label'] = undefined;






export default TemandoShippingDataOrderShippingExperienceInterface;

