/**
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SalesDataCreditmemoCommentInterface from './SalesDataCreditmemoCommentInterface';
import SalesDataCreditmemoExtensionInterface from './SalesDataCreditmemoExtensionInterface';
import SalesDataCreditmemoItemInterface from './SalesDataCreditmemoItemInterface';

/**
 * The SalesDataCreditmemoInterface model module.
 * @module model/SalesDataCreditmemoInterface
 * @version 2.2.10
 */
class SalesDataCreditmemoInterface {
    /**
     * Constructs a new <code>SalesDataCreditmemoInterface</code>.
     * Credit memo interface. After a customer places and pays for an order and an invoice has been issued, the merchant can create a credit memo to refund all or part of the amount paid for any returned or undelivered items. The memo restores funds to the customer account so that the customer can make future purchases.
     * @alias module:model/SalesDataCreditmemoInterface
     * @param items {Array.<module:model/SalesDataCreditmemoItemInterface>} Array of credit memo items.
     * @param orderId {Number} Credit memo order ID.
     */
    constructor(items, orderId) { 
        
        SalesDataCreditmemoInterface.initialize(this, items, orderId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, items, orderId) { 
        obj['items'] = items;
        obj['order_id'] = orderId;
    }

    /**
     * Constructs a <code>SalesDataCreditmemoInterface</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SalesDataCreditmemoInterface} obj Optional instance to populate.
     * @return {module:model/SalesDataCreditmemoInterface} The populated <code>SalesDataCreditmemoInterface</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SalesDataCreditmemoInterface();

            if (data.hasOwnProperty('adjustment')) {
                obj['adjustment'] = ApiClient.convertToType(data['adjustment'], 'Number');
            }
            if (data.hasOwnProperty('adjustment_negative')) {
                obj['adjustment_negative'] = ApiClient.convertToType(data['adjustment_negative'], 'Number');
            }
            if (data.hasOwnProperty('adjustment_positive')) {
                obj['adjustment_positive'] = ApiClient.convertToType(data['adjustment_positive'], 'Number');
            }
            if (data.hasOwnProperty('base_adjustment')) {
                obj['base_adjustment'] = ApiClient.convertToType(data['base_adjustment'], 'Number');
            }
            if (data.hasOwnProperty('base_adjustment_negative')) {
                obj['base_adjustment_negative'] = ApiClient.convertToType(data['base_adjustment_negative'], 'Number');
            }
            if (data.hasOwnProperty('base_adjustment_positive')) {
                obj['base_adjustment_positive'] = ApiClient.convertToType(data['base_adjustment_positive'], 'Number');
            }
            if (data.hasOwnProperty('base_currency_code')) {
                obj['base_currency_code'] = ApiClient.convertToType(data['base_currency_code'], 'String');
            }
            if (data.hasOwnProperty('base_discount_amount')) {
                obj['base_discount_amount'] = ApiClient.convertToType(data['base_discount_amount'], 'Number');
            }
            if (data.hasOwnProperty('base_discount_tax_compensation_amount')) {
                obj['base_discount_tax_compensation_amount'] = ApiClient.convertToType(data['base_discount_tax_compensation_amount'], 'Number');
            }
            if (data.hasOwnProperty('base_grand_total')) {
                obj['base_grand_total'] = ApiClient.convertToType(data['base_grand_total'], 'Number');
            }
            if (data.hasOwnProperty('base_shipping_amount')) {
                obj['base_shipping_amount'] = ApiClient.convertToType(data['base_shipping_amount'], 'Number');
            }
            if (data.hasOwnProperty('base_shipping_discount_tax_compensation_amnt')) {
                obj['base_shipping_discount_tax_compensation_amnt'] = ApiClient.convertToType(data['base_shipping_discount_tax_compensation_amnt'], 'Number');
            }
            if (data.hasOwnProperty('base_shipping_incl_tax')) {
                obj['base_shipping_incl_tax'] = ApiClient.convertToType(data['base_shipping_incl_tax'], 'Number');
            }
            if (data.hasOwnProperty('base_shipping_tax_amount')) {
                obj['base_shipping_tax_amount'] = ApiClient.convertToType(data['base_shipping_tax_amount'], 'Number');
            }
            if (data.hasOwnProperty('base_subtotal')) {
                obj['base_subtotal'] = ApiClient.convertToType(data['base_subtotal'], 'Number');
            }
            if (data.hasOwnProperty('base_subtotal_incl_tax')) {
                obj['base_subtotal_incl_tax'] = ApiClient.convertToType(data['base_subtotal_incl_tax'], 'Number');
            }
            if (data.hasOwnProperty('base_tax_amount')) {
                obj['base_tax_amount'] = ApiClient.convertToType(data['base_tax_amount'], 'Number');
            }
            if (data.hasOwnProperty('base_to_global_rate')) {
                obj['base_to_global_rate'] = ApiClient.convertToType(data['base_to_global_rate'], 'Number');
            }
            if (data.hasOwnProperty('base_to_order_rate')) {
                obj['base_to_order_rate'] = ApiClient.convertToType(data['base_to_order_rate'], 'Number');
            }
            if (data.hasOwnProperty('billing_address_id')) {
                obj['billing_address_id'] = ApiClient.convertToType(data['billing_address_id'], 'Number');
            }
            if (data.hasOwnProperty('comments')) {
                obj['comments'] = ApiClient.convertToType(data['comments'], [SalesDataCreditmemoCommentInterface]);
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'String');
            }
            if (data.hasOwnProperty('creditmemo_status')) {
                obj['creditmemo_status'] = ApiClient.convertToType(data['creditmemo_status'], 'Number');
            }
            if (data.hasOwnProperty('discount_amount')) {
                obj['discount_amount'] = ApiClient.convertToType(data['discount_amount'], 'Number');
            }
            if (data.hasOwnProperty('discount_description')) {
                obj['discount_description'] = ApiClient.convertToType(data['discount_description'], 'String');
            }
            if (data.hasOwnProperty('discount_tax_compensation_amount')) {
                obj['discount_tax_compensation_amount'] = ApiClient.convertToType(data['discount_tax_compensation_amount'], 'Number');
            }
            if (data.hasOwnProperty('email_sent')) {
                obj['email_sent'] = ApiClient.convertToType(data['email_sent'], 'Number');
            }
            if (data.hasOwnProperty('entity_id')) {
                obj['entity_id'] = ApiClient.convertToType(data['entity_id'], 'Number');
            }
            if (data.hasOwnProperty('extension_attributes')) {
                obj['extension_attributes'] = SalesDataCreditmemoExtensionInterface.constructFromObject(data['extension_attributes']);
            }
            if (data.hasOwnProperty('global_currency_code')) {
                obj['global_currency_code'] = ApiClient.convertToType(data['global_currency_code'], 'String');
            }
            if (data.hasOwnProperty('grand_total')) {
                obj['grand_total'] = ApiClient.convertToType(data['grand_total'], 'Number');
            }
            if (data.hasOwnProperty('increment_id')) {
                obj['increment_id'] = ApiClient.convertToType(data['increment_id'], 'String');
            }
            if (data.hasOwnProperty('invoice_id')) {
                obj['invoice_id'] = ApiClient.convertToType(data['invoice_id'], 'Number');
            }
            if (data.hasOwnProperty('items')) {
                obj['items'] = ApiClient.convertToType(data['items'], [SalesDataCreditmemoItemInterface]);
            }
            if (data.hasOwnProperty('order_currency_code')) {
                obj['order_currency_code'] = ApiClient.convertToType(data['order_currency_code'], 'String');
            }
            if (data.hasOwnProperty('order_id')) {
                obj['order_id'] = ApiClient.convertToType(data['order_id'], 'Number');
            }
            if (data.hasOwnProperty('shipping_address_id')) {
                obj['shipping_address_id'] = ApiClient.convertToType(data['shipping_address_id'], 'Number');
            }
            if (data.hasOwnProperty('shipping_amount')) {
                obj['shipping_amount'] = ApiClient.convertToType(data['shipping_amount'], 'Number');
            }
            if (data.hasOwnProperty('shipping_discount_tax_compensation_amount')) {
                obj['shipping_discount_tax_compensation_amount'] = ApiClient.convertToType(data['shipping_discount_tax_compensation_amount'], 'Number');
            }
            if (data.hasOwnProperty('shipping_incl_tax')) {
                obj['shipping_incl_tax'] = ApiClient.convertToType(data['shipping_incl_tax'], 'Number');
            }
            if (data.hasOwnProperty('shipping_tax_amount')) {
                obj['shipping_tax_amount'] = ApiClient.convertToType(data['shipping_tax_amount'], 'Number');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'Number');
            }
            if (data.hasOwnProperty('store_currency_code')) {
                obj['store_currency_code'] = ApiClient.convertToType(data['store_currency_code'], 'String');
            }
            if (data.hasOwnProperty('store_id')) {
                obj['store_id'] = ApiClient.convertToType(data['store_id'], 'Number');
            }
            if (data.hasOwnProperty('store_to_base_rate')) {
                obj['store_to_base_rate'] = ApiClient.convertToType(data['store_to_base_rate'], 'Number');
            }
            if (data.hasOwnProperty('store_to_order_rate')) {
                obj['store_to_order_rate'] = ApiClient.convertToType(data['store_to_order_rate'], 'Number');
            }
            if (data.hasOwnProperty('subtotal')) {
                obj['subtotal'] = ApiClient.convertToType(data['subtotal'], 'Number');
            }
            if (data.hasOwnProperty('subtotal_incl_tax')) {
                obj['subtotal_incl_tax'] = ApiClient.convertToType(data['subtotal_incl_tax'], 'Number');
            }
            if (data.hasOwnProperty('tax_amount')) {
                obj['tax_amount'] = ApiClient.convertToType(data['tax_amount'], 'Number');
            }
            if (data.hasOwnProperty('transaction_id')) {
                obj['transaction_id'] = ApiClient.convertToType(data['transaction_id'], 'String');
            }
            if (data.hasOwnProperty('updated_at')) {
                obj['updated_at'] = ApiClient.convertToType(data['updated_at'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SalesDataCreditmemoInterface</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SalesDataCreditmemoInterface</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of SalesDataCreditmemoInterface.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['base_currency_code'] && !(typeof data['base_currency_code'] === 'string' || data['base_currency_code'] instanceof String)) {
            throw new Error("Expected the field `base_currency_code` to be a primitive type in the JSON string but got " + data['base_currency_code']);
        }
        if (data['comments']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['comments'])) {
                throw new Error("Expected the field `comments` to be an array in the JSON data but got " + data['comments']);
            }
            // validate the optional field `comments` (array)
            for (const item of data['comments']) {
                SalesDataCreditmemoCommentInterface.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['created_at'] && !(typeof data['created_at'] === 'string' || data['created_at'] instanceof String)) {
            throw new Error("Expected the field `created_at` to be a primitive type in the JSON string but got " + data['created_at']);
        }
        // ensure the json data is a string
        if (data['discount_description'] && !(typeof data['discount_description'] === 'string' || data['discount_description'] instanceof String)) {
            throw new Error("Expected the field `discount_description` to be a primitive type in the JSON string but got " + data['discount_description']);
        }
        // validate the optional field `extension_attributes`
        if (data['extension_attributes']) { // data not null
          SalesDataCreditmemoExtensionInterface.validateJSON(data['extension_attributes']);
        }
        // ensure the json data is a string
        if (data['global_currency_code'] && !(typeof data['global_currency_code'] === 'string' || data['global_currency_code'] instanceof String)) {
            throw new Error("Expected the field `global_currency_code` to be a primitive type in the JSON string but got " + data['global_currency_code']);
        }
        // ensure the json data is a string
        if (data['increment_id'] && !(typeof data['increment_id'] === 'string' || data['increment_id'] instanceof String)) {
            throw new Error("Expected the field `increment_id` to be a primitive type in the JSON string but got " + data['increment_id']);
        }
        if (data['items']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['items'])) {
                throw new Error("Expected the field `items` to be an array in the JSON data but got " + data['items']);
            }
            // validate the optional field `items` (array)
            for (const item of data['items']) {
                SalesDataCreditmemoItemInterface.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['order_currency_code'] && !(typeof data['order_currency_code'] === 'string' || data['order_currency_code'] instanceof String)) {
            throw new Error("Expected the field `order_currency_code` to be a primitive type in the JSON string but got " + data['order_currency_code']);
        }
        // ensure the json data is a string
        if (data['store_currency_code'] && !(typeof data['store_currency_code'] === 'string' || data['store_currency_code'] instanceof String)) {
            throw new Error("Expected the field `store_currency_code` to be a primitive type in the JSON string but got " + data['store_currency_code']);
        }
        // ensure the json data is a string
        if (data['transaction_id'] && !(typeof data['transaction_id'] === 'string' || data['transaction_id'] instanceof String)) {
            throw new Error("Expected the field `transaction_id` to be a primitive type in the JSON string but got " + data['transaction_id']);
        }
        // ensure the json data is a string
        if (data['updated_at'] && !(typeof data['updated_at'] === 'string' || data['updated_at'] instanceof String)) {
            throw new Error("Expected the field `updated_at` to be a primitive type in the JSON string but got " + data['updated_at']);
        }

        return true;
    }


}

SalesDataCreditmemoInterface.RequiredProperties = ["items", "order_id"];

/**
 * Credit memo adjustment.
 * @member {Number} adjustment
 */
SalesDataCreditmemoInterface.prototype['adjustment'] = undefined;

/**
 * Credit memo negative adjustment.
 * @member {Number} adjustment_negative
 */
SalesDataCreditmemoInterface.prototype['adjustment_negative'] = undefined;

/**
 * Credit memo positive adjustment.
 * @member {Number} adjustment_positive
 */
SalesDataCreditmemoInterface.prototype['adjustment_positive'] = undefined;

/**
 * Credit memo base adjustment.
 * @member {Number} base_adjustment
 */
SalesDataCreditmemoInterface.prototype['base_adjustment'] = undefined;

/**
 * Credit memo negative base adjustment.
 * @member {Number} base_adjustment_negative
 */
SalesDataCreditmemoInterface.prototype['base_adjustment_negative'] = undefined;

/**
 * Credit memo positive base adjustment.
 * @member {Number} base_adjustment_positive
 */
SalesDataCreditmemoInterface.prototype['base_adjustment_positive'] = undefined;

/**
 * Credit memo base currency code.
 * @member {String} base_currency_code
 */
SalesDataCreditmemoInterface.prototype['base_currency_code'] = undefined;

/**
 * Credit memo base discount amount.
 * @member {Number} base_discount_amount
 */
SalesDataCreditmemoInterface.prototype['base_discount_amount'] = undefined;

/**
 * Credit memo base discount tax compensation amount.
 * @member {Number} base_discount_tax_compensation_amount
 */
SalesDataCreditmemoInterface.prototype['base_discount_tax_compensation_amount'] = undefined;

/**
 * Credit memo base grand total.
 * @member {Number} base_grand_total
 */
SalesDataCreditmemoInterface.prototype['base_grand_total'] = undefined;

/**
 * Credit memo base shipping amount.
 * @member {Number} base_shipping_amount
 */
SalesDataCreditmemoInterface.prototype['base_shipping_amount'] = undefined;

/**
 * Credit memo base shipping discount tax compensation amount.
 * @member {Number} base_shipping_discount_tax_compensation_amnt
 */
SalesDataCreditmemoInterface.prototype['base_shipping_discount_tax_compensation_amnt'] = undefined;

/**
 * Credit memo base shipping including tax.
 * @member {Number} base_shipping_incl_tax
 */
SalesDataCreditmemoInterface.prototype['base_shipping_incl_tax'] = undefined;

/**
 * Credit memo base shipping tax amount.
 * @member {Number} base_shipping_tax_amount
 */
SalesDataCreditmemoInterface.prototype['base_shipping_tax_amount'] = undefined;

/**
 * Credit memo base subtotal.
 * @member {Number} base_subtotal
 */
SalesDataCreditmemoInterface.prototype['base_subtotal'] = undefined;

/**
 * Credit memo base subtotal including tax.
 * @member {Number} base_subtotal_incl_tax
 */
SalesDataCreditmemoInterface.prototype['base_subtotal_incl_tax'] = undefined;

/**
 * Credit memo base tax amount.
 * @member {Number} base_tax_amount
 */
SalesDataCreditmemoInterface.prototype['base_tax_amount'] = undefined;

/**
 * Credit memo base-to-global rate.
 * @member {Number} base_to_global_rate
 */
SalesDataCreditmemoInterface.prototype['base_to_global_rate'] = undefined;

/**
 * Credit memo base-to-order rate.
 * @member {Number} base_to_order_rate
 */
SalesDataCreditmemoInterface.prototype['base_to_order_rate'] = undefined;

/**
 * Credit memo billing address ID.
 * @member {Number} billing_address_id
 */
SalesDataCreditmemoInterface.prototype['billing_address_id'] = undefined;

/**
 * Array of any credit memo comments. Otherwise, null.
 * @member {Array.<module:model/SalesDataCreditmemoCommentInterface>} comments
 */
SalesDataCreditmemoInterface.prototype['comments'] = undefined;

/**
 * Credit memo created-at timestamp.
 * @member {String} created_at
 */
SalesDataCreditmemoInterface.prototype['created_at'] = undefined;

/**
 * Credit memo status.
 * @member {Number} creditmemo_status
 */
SalesDataCreditmemoInterface.prototype['creditmemo_status'] = undefined;

/**
 * Credit memo discount amount.
 * @member {Number} discount_amount
 */
SalesDataCreditmemoInterface.prototype['discount_amount'] = undefined;

/**
 * Credit memo discount description.
 * @member {String} discount_description
 */
SalesDataCreditmemoInterface.prototype['discount_description'] = undefined;

/**
 * Credit memo discount tax compensation amount.
 * @member {Number} discount_tax_compensation_amount
 */
SalesDataCreditmemoInterface.prototype['discount_tax_compensation_amount'] = undefined;

/**
 * Credit memo email sent flag value.
 * @member {Number} email_sent
 */
SalesDataCreditmemoInterface.prototype['email_sent'] = undefined;

/**
 * Credit memo ID.
 * @member {Number} entity_id
 */
SalesDataCreditmemoInterface.prototype['entity_id'] = undefined;

/**
 * @member {module:model/SalesDataCreditmemoExtensionInterface} extension_attributes
 */
SalesDataCreditmemoInterface.prototype['extension_attributes'] = undefined;

/**
 * Credit memo global currency code.
 * @member {String} global_currency_code
 */
SalesDataCreditmemoInterface.prototype['global_currency_code'] = undefined;

/**
 * Credit memo grand total.
 * @member {Number} grand_total
 */
SalesDataCreditmemoInterface.prototype['grand_total'] = undefined;

/**
 * Credit memo increment ID.
 * @member {String} increment_id
 */
SalesDataCreditmemoInterface.prototype['increment_id'] = undefined;

/**
 * Credit memo invoice ID.
 * @member {Number} invoice_id
 */
SalesDataCreditmemoInterface.prototype['invoice_id'] = undefined;

/**
 * Array of credit memo items.
 * @member {Array.<module:model/SalesDataCreditmemoItemInterface>} items
 */
SalesDataCreditmemoInterface.prototype['items'] = undefined;

/**
 * Credit memo order currency code.
 * @member {String} order_currency_code
 */
SalesDataCreditmemoInterface.prototype['order_currency_code'] = undefined;

/**
 * Credit memo order ID.
 * @member {Number} order_id
 */
SalesDataCreditmemoInterface.prototype['order_id'] = undefined;

/**
 * Credit memo shipping address ID.
 * @member {Number} shipping_address_id
 */
SalesDataCreditmemoInterface.prototype['shipping_address_id'] = undefined;

/**
 * Credit memo shipping amount.
 * @member {Number} shipping_amount
 */
SalesDataCreditmemoInterface.prototype['shipping_amount'] = undefined;

/**
 * Credit memo shipping discount tax compensation amount.
 * @member {Number} shipping_discount_tax_compensation_amount
 */
SalesDataCreditmemoInterface.prototype['shipping_discount_tax_compensation_amount'] = undefined;

/**
 * Credit memo shipping including tax.
 * @member {Number} shipping_incl_tax
 */
SalesDataCreditmemoInterface.prototype['shipping_incl_tax'] = undefined;

/**
 * Credit memo shipping tax amount.
 * @member {Number} shipping_tax_amount
 */
SalesDataCreditmemoInterface.prototype['shipping_tax_amount'] = undefined;

/**
 * Credit memo state.
 * @member {Number} state
 */
SalesDataCreditmemoInterface.prototype['state'] = undefined;

/**
 * Credit memo store currency code.
 * @member {String} store_currency_code
 */
SalesDataCreditmemoInterface.prototype['store_currency_code'] = undefined;

/**
 * Credit memo store ID.
 * @member {Number} store_id
 */
SalesDataCreditmemoInterface.prototype['store_id'] = undefined;

/**
 * Credit memo store-to-base rate.
 * @member {Number} store_to_base_rate
 */
SalesDataCreditmemoInterface.prototype['store_to_base_rate'] = undefined;

/**
 * Credit memo store-to-order rate.
 * @member {Number} store_to_order_rate
 */
SalesDataCreditmemoInterface.prototype['store_to_order_rate'] = undefined;

/**
 * Credit memo subtotal.
 * @member {Number} subtotal
 */
SalesDataCreditmemoInterface.prototype['subtotal'] = undefined;

/**
 * Credit memo subtotal including tax.
 * @member {Number} subtotal_incl_tax
 */
SalesDataCreditmemoInterface.prototype['subtotal_incl_tax'] = undefined;

/**
 * Credit memo tax amount.
 * @member {Number} tax_amount
 */
SalesDataCreditmemoInterface.prototype['tax_amount'] = undefined;

/**
 * Credit memo transaction ID.
 * @member {String} transaction_id
 */
SalesDataCreditmemoInterface.prototype['transaction_id'] = undefined;

/**
 * Credit memo updated-at timestamp.
 * @member {String} updated_at
 */
SalesDataCreditmemoInterface.prototype['updated_at'] = undefined;






export default SalesDataCreditmemoInterface;

