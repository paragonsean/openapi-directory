/**
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import NegotiableQuoteDataNegotiableQuoteTotalsInterface from './NegotiableQuoteDataNegotiableQuoteTotalsInterface';

/**
 * The QuoteDataTotalsExtensionInterface model module.
 * @module model/QuoteDataTotalsExtensionInterface
 * @version 2.2.10
 */
class QuoteDataTotalsExtensionInterface {
    /**
     * Constructs a new <code>QuoteDataTotalsExtensionInterface</code>.
     * ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\TotalsInterface
     * @alias module:model/QuoteDataTotalsExtensionInterface
     */
    constructor() { 
        
        QuoteDataTotalsExtensionInterface.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>QuoteDataTotalsExtensionInterface</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/QuoteDataTotalsExtensionInterface} obj Optional instance to populate.
     * @return {module:model/QuoteDataTotalsExtensionInterface} The populated <code>QuoteDataTotalsExtensionInterface</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new QuoteDataTotalsExtensionInterface();

            if (data.hasOwnProperty('base_customer_balance_amount')) {
                obj['base_customer_balance_amount'] = ApiClient.convertToType(data['base_customer_balance_amount'], 'Number');
            }
            if (data.hasOwnProperty('base_reward_currency_amount')) {
                obj['base_reward_currency_amount'] = ApiClient.convertToType(data['base_reward_currency_amount'], 'Number');
            }
            if (data.hasOwnProperty('coupon_label')) {
                obj['coupon_label'] = ApiClient.convertToType(data['coupon_label'], 'String');
            }
            if (data.hasOwnProperty('customer_balance_amount')) {
                obj['customer_balance_amount'] = ApiClient.convertToType(data['customer_balance_amount'], 'Number');
            }
            if (data.hasOwnProperty('negotiable_quote_totals')) {
                obj['negotiable_quote_totals'] = NegotiableQuoteDataNegotiableQuoteTotalsInterface.constructFromObject(data['negotiable_quote_totals']);
            }
            if (data.hasOwnProperty('reward_currency_amount')) {
                obj['reward_currency_amount'] = ApiClient.convertToType(data['reward_currency_amount'], 'Number');
            }
            if (data.hasOwnProperty('reward_points_balance')) {
                obj['reward_points_balance'] = ApiClient.convertToType(data['reward_points_balance'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>QuoteDataTotalsExtensionInterface</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>QuoteDataTotalsExtensionInterface</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['coupon_label'] && !(typeof data['coupon_label'] === 'string' || data['coupon_label'] instanceof String)) {
            throw new Error("Expected the field `coupon_label` to be a primitive type in the JSON string but got " + data['coupon_label']);
        }
        // validate the optional field `negotiable_quote_totals`
        if (data['negotiable_quote_totals']) { // data not null
          NegotiableQuoteDataNegotiableQuoteTotalsInterface.validateJSON(data['negotiable_quote_totals']);
        }

        return true;
    }


}



/**
 * @member {Number} base_customer_balance_amount
 */
QuoteDataTotalsExtensionInterface.prototype['base_customer_balance_amount'] = undefined;

/**
 * @member {Number} base_reward_currency_amount
 */
QuoteDataTotalsExtensionInterface.prototype['base_reward_currency_amount'] = undefined;

/**
 * @member {String} coupon_label
 */
QuoteDataTotalsExtensionInterface.prototype['coupon_label'] = undefined;

/**
 * @member {Number} customer_balance_amount
 */
QuoteDataTotalsExtensionInterface.prototype['customer_balance_amount'] = undefined;

/**
 * @member {module:model/NegotiableQuoteDataNegotiableQuoteTotalsInterface} negotiable_quote_totals
 */
QuoteDataTotalsExtensionInterface.prototype['negotiable_quote_totals'] = undefined;

/**
 * @member {Number} reward_currency_amount
 */
QuoteDataTotalsExtensionInterface.prototype['reward_currency_amount'] = undefined;

/**
 * @member {Number} reward_points_balance
 */
QuoteDataTotalsExtensionInterface.prototype['reward_points_balance'] = undefined;






export default QuoteDataTotalsExtensionInterface;

