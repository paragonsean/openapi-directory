/**
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The WeeeDataProductRenderWeeeAdjustmentAttributeInterface model module.
 * @module model/WeeeDataProductRenderWeeeAdjustmentAttributeInterface
 * @version 2.2.10
 */
class WeeeDataProductRenderWeeeAdjustmentAttributeInterface {
    /**
     * Constructs a new <code>WeeeDataProductRenderWeeeAdjustmentAttributeInterface</code>.
     * List of all weee attributes, their amounts, etc.., that product has
     * @alias module:model/WeeeDataProductRenderWeeeAdjustmentAttributeInterface
     * @param amount {String} Weee attribute amount
     * @param amountExclTax {String} Product amount exclude tax
     * @param attributeCode {String} Weee attribute code
     * @param extensionAttributes {Object} ExtensionInterface class for @see \\Magento\\Weee\\Api\\Data\\ProductRender\\WeeeAdjustmentAttributeInterface
     * @param taxAmount {String} Tax which is calculated to fixed product tax attribute
     * @param taxAmountInclTax {String} Tax amount of weee attribute
     */
    constructor(amount, amountExclTax, attributeCode, extensionAttributes, taxAmount, taxAmountInclTax) { 
        
        WeeeDataProductRenderWeeeAdjustmentAttributeInterface.initialize(this, amount, amountExclTax, attributeCode, extensionAttributes, taxAmount, taxAmountInclTax);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, amount, amountExclTax, attributeCode, extensionAttributes, taxAmount, taxAmountInclTax) { 
        obj['amount'] = amount;
        obj['amount_excl_tax'] = amountExclTax;
        obj['attribute_code'] = attributeCode;
        obj['extension_attributes'] = extensionAttributes;
        obj['tax_amount'] = taxAmount;
        obj['tax_amount_incl_tax'] = taxAmountInclTax;
    }

    /**
     * Constructs a <code>WeeeDataProductRenderWeeeAdjustmentAttributeInterface</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/WeeeDataProductRenderWeeeAdjustmentAttributeInterface} obj Optional instance to populate.
     * @return {module:model/WeeeDataProductRenderWeeeAdjustmentAttributeInterface} The populated <code>WeeeDataProductRenderWeeeAdjustmentAttributeInterface</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WeeeDataProductRenderWeeeAdjustmentAttributeInterface();

            if (data.hasOwnProperty('amount')) {
                obj['amount'] = ApiClient.convertToType(data['amount'], 'String');
            }
            if (data.hasOwnProperty('amount_excl_tax')) {
                obj['amount_excl_tax'] = ApiClient.convertToType(data['amount_excl_tax'], 'String');
            }
            if (data.hasOwnProperty('attribute_code')) {
                obj['attribute_code'] = ApiClient.convertToType(data['attribute_code'], 'String');
            }
            if (data.hasOwnProperty('extension_attributes')) {
                obj['extension_attributes'] = ApiClient.convertToType(data['extension_attributes'], Object);
            }
            if (data.hasOwnProperty('tax_amount')) {
                obj['tax_amount'] = ApiClient.convertToType(data['tax_amount'], 'String');
            }
            if (data.hasOwnProperty('tax_amount_incl_tax')) {
                obj['tax_amount_incl_tax'] = ApiClient.convertToType(data['tax_amount_incl_tax'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>WeeeDataProductRenderWeeeAdjustmentAttributeInterface</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>WeeeDataProductRenderWeeeAdjustmentAttributeInterface</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of WeeeDataProductRenderWeeeAdjustmentAttributeInterface.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['amount'] && !(typeof data['amount'] === 'string' || data['amount'] instanceof String)) {
            throw new Error("Expected the field `amount` to be a primitive type in the JSON string but got " + data['amount']);
        }
        // ensure the json data is a string
        if (data['amount_excl_tax'] && !(typeof data['amount_excl_tax'] === 'string' || data['amount_excl_tax'] instanceof String)) {
            throw new Error("Expected the field `amount_excl_tax` to be a primitive type in the JSON string but got " + data['amount_excl_tax']);
        }
        // ensure the json data is a string
        if (data['attribute_code'] && !(typeof data['attribute_code'] === 'string' || data['attribute_code'] instanceof String)) {
            throw new Error("Expected the field `attribute_code` to be a primitive type in the JSON string but got " + data['attribute_code']);
        }
        // ensure the json data is a string
        if (data['tax_amount'] && !(typeof data['tax_amount'] === 'string' || data['tax_amount'] instanceof String)) {
            throw new Error("Expected the field `tax_amount` to be a primitive type in the JSON string but got " + data['tax_amount']);
        }
        // ensure the json data is a string
        if (data['tax_amount_incl_tax'] && !(typeof data['tax_amount_incl_tax'] === 'string' || data['tax_amount_incl_tax'] instanceof String)) {
            throw new Error("Expected the field `tax_amount_incl_tax` to be a primitive type in the JSON string but got " + data['tax_amount_incl_tax']);
        }

        return true;
    }


}

WeeeDataProductRenderWeeeAdjustmentAttributeInterface.RequiredProperties = ["amount", "amount_excl_tax", "attribute_code", "extension_attributes", "tax_amount", "tax_amount_incl_tax"];

/**
 * Weee attribute amount
 * @member {String} amount
 */
WeeeDataProductRenderWeeeAdjustmentAttributeInterface.prototype['amount'] = undefined;

/**
 * Product amount exclude tax
 * @member {String} amount_excl_tax
 */
WeeeDataProductRenderWeeeAdjustmentAttributeInterface.prototype['amount_excl_tax'] = undefined;

/**
 * Weee attribute code
 * @member {String} attribute_code
 */
WeeeDataProductRenderWeeeAdjustmentAttributeInterface.prototype['attribute_code'] = undefined;

/**
 * ExtensionInterface class for @see \\Magento\\Weee\\Api\\Data\\ProductRender\\WeeeAdjustmentAttributeInterface
 * @member {Object} extension_attributes
 */
WeeeDataProductRenderWeeeAdjustmentAttributeInterface.prototype['extension_attributes'] = undefined;

/**
 * Tax which is calculated to fixed product tax attribute
 * @member {String} tax_amount
 */
WeeeDataProductRenderWeeeAdjustmentAttributeInterface.prototype['tax_amount'] = undefined;

/**
 * Tax amount of weee attribute
 * @member {String} tax_amount_incl_tax
 */
WeeeDataProductRenderWeeeAdjustmentAttributeInterface.prototype['tax_amount_incl_tax'] = undefined;






export default WeeeDataProductRenderWeeeAdjustmentAttributeInterface;

