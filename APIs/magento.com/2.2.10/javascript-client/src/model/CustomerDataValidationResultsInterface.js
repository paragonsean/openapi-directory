/**
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CustomerDataValidationResultsInterface model module.
 * @module model/CustomerDataValidationResultsInterface
 * @version 2.2.10
 */
class CustomerDataValidationResultsInterface {
    /**
     * Constructs a new <code>CustomerDataValidationResultsInterface</code>.
     * Validation results interface.
     * @alias module:model/CustomerDataValidationResultsInterface
     * @param messages {Array.<String>} Error messages as array in case of validation failure, else return empty array.
     * @param valid {Boolean} If the provided data is valid.
     */
    constructor(messages, valid) { 
        
        CustomerDataValidationResultsInterface.initialize(this, messages, valid);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, messages, valid) { 
        obj['messages'] = messages;
        obj['valid'] = valid;
    }

    /**
     * Constructs a <code>CustomerDataValidationResultsInterface</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CustomerDataValidationResultsInterface} obj Optional instance to populate.
     * @return {module:model/CustomerDataValidationResultsInterface} The populated <code>CustomerDataValidationResultsInterface</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CustomerDataValidationResultsInterface();

            if (data.hasOwnProperty('messages')) {
                obj['messages'] = ApiClient.convertToType(data['messages'], ['String']);
            }
            if (data.hasOwnProperty('valid')) {
                obj['valid'] = ApiClient.convertToType(data['valid'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CustomerDataValidationResultsInterface</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CustomerDataValidationResultsInterface</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CustomerDataValidationResultsInterface.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is an array
        if (!Array.isArray(data['messages'])) {
            throw new Error("Expected the field `messages` to be an array in the JSON data but got " + data['messages']);
        }

        return true;
    }


}

CustomerDataValidationResultsInterface.RequiredProperties = ["messages", "valid"];

/**
 * Error messages as array in case of validation failure, else return empty array.
 * @member {Array.<String>} messages
 */
CustomerDataValidationResultsInterface.prototype['messages'] = undefined;

/**
 * If the provided data is valid.
 * @member {Boolean} valid
 */
CustomerDataValidationResultsInterface.prototype['valid'] = undefined;






export default CustomerDataValidationResultsInterface;

