/**
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TaxDataOrderTaxDetailsAppliedTaxExtensionInterface from './TaxDataOrderTaxDetailsAppliedTaxExtensionInterface';

/**
 * The TaxDataOrderTaxDetailsAppliedTaxInterface model module.
 * @module model/TaxDataOrderTaxDetailsAppliedTaxInterface
 * @version 2.2.10
 */
class TaxDataOrderTaxDetailsAppliedTaxInterface {
    /**
     * Constructs a new <code>TaxDataOrderTaxDetailsAppliedTaxInterface</code>.
     * Interface OrderTaxDetailsAppliedTaxInterface
     * @alias module:model/TaxDataOrderTaxDetailsAppliedTaxInterface
     * @param amount {Number} Tax amount
     * @param baseAmount {Number} Tax amount in base currency
     */
    constructor(amount, baseAmount) { 
        
        TaxDataOrderTaxDetailsAppliedTaxInterface.initialize(this, amount, baseAmount);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, amount, baseAmount) { 
        obj['amount'] = amount;
        obj['base_amount'] = baseAmount;
    }

    /**
     * Constructs a <code>TaxDataOrderTaxDetailsAppliedTaxInterface</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TaxDataOrderTaxDetailsAppliedTaxInterface} obj Optional instance to populate.
     * @return {module:model/TaxDataOrderTaxDetailsAppliedTaxInterface} The populated <code>TaxDataOrderTaxDetailsAppliedTaxInterface</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TaxDataOrderTaxDetailsAppliedTaxInterface();

            if (data.hasOwnProperty('amount')) {
                obj['amount'] = ApiClient.convertToType(data['amount'], 'Number');
            }
            if (data.hasOwnProperty('base_amount')) {
                obj['base_amount'] = ApiClient.convertToType(data['base_amount'], 'Number');
            }
            if (data.hasOwnProperty('code')) {
                obj['code'] = ApiClient.convertToType(data['code'], 'String');
            }
            if (data.hasOwnProperty('extension_attributes')) {
                obj['extension_attributes'] = TaxDataOrderTaxDetailsAppliedTaxExtensionInterface.constructFromObject(data['extension_attributes']);
            }
            if (data.hasOwnProperty('percent')) {
                obj['percent'] = ApiClient.convertToType(data['percent'], 'Number');
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TaxDataOrderTaxDetailsAppliedTaxInterface</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TaxDataOrderTaxDetailsAppliedTaxInterface</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of TaxDataOrderTaxDetailsAppliedTaxInterface.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['code'] && !(typeof data['code'] === 'string' || data['code'] instanceof String)) {
            throw new Error("Expected the field `code` to be a primitive type in the JSON string but got " + data['code']);
        }
        // validate the optional field `extension_attributes`
        if (data['extension_attributes']) { // data not null
          TaxDataOrderTaxDetailsAppliedTaxExtensionInterface.validateJSON(data['extension_attributes']);
        }
        // ensure the json data is a string
        if (data['title'] && !(typeof data['title'] === 'string' || data['title'] instanceof String)) {
            throw new Error("Expected the field `title` to be a primitive type in the JSON string but got " + data['title']);
        }

        return true;
    }


}

TaxDataOrderTaxDetailsAppliedTaxInterface.RequiredProperties = ["amount", "base_amount"];

/**
 * Tax amount
 * @member {Number} amount
 */
TaxDataOrderTaxDetailsAppliedTaxInterface.prototype['amount'] = undefined;

/**
 * Tax amount in base currency
 * @member {Number} base_amount
 */
TaxDataOrderTaxDetailsAppliedTaxInterface.prototype['base_amount'] = undefined;

/**
 * Code
 * @member {String} code
 */
TaxDataOrderTaxDetailsAppliedTaxInterface.prototype['code'] = undefined;

/**
 * @member {module:model/TaxDataOrderTaxDetailsAppliedTaxExtensionInterface} extension_attributes
 */
TaxDataOrderTaxDetailsAppliedTaxInterface.prototype['extension_attributes'] = undefined;

/**
 * Tax Percent
 * @member {Number} percent
 */
TaxDataOrderTaxDetailsAppliedTaxInterface.prototype['percent'] = undefined;

/**
 * Title
 * @member {String} title
 */
TaxDataOrderTaxDetailsAppliedTaxInterface.prototype['title'] = undefined;






export default TaxDataOrderTaxDetailsAppliedTaxInterface;

