/**
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ConfigurableProductDataOptionValueInterface from './ConfigurableProductDataOptionValueInterface';

/**
 * The ConfigurableProductDataOptionInterface model module.
 * @module model/ConfigurableProductDataOptionInterface
 * @version 2.2.10
 */
class ConfigurableProductDataOptionInterface {
    /**
     * Constructs a new <code>ConfigurableProductDataOptionInterface</code>.
     * Interface OptionInterface
     * @alias module:model/ConfigurableProductDataOptionInterface
     */
    constructor() { 
        
        ConfigurableProductDataOptionInterface.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ConfigurableProductDataOptionInterface</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ConfigurableProductDataOptionInterface} obj Optional instance to populate.
     * @return {module:model/ConfigurableProductDataOptionInterface} The populated <code>ConfigurableProductDataOptionInterface</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ConfigurableProductDataOptionInterface();

            if (data.hasOwnProperty('attribute_id')) {
                obj['attribute_id'] = ApiClient.convertToType(data['attribute_id'], 'String');
            }
            if (data.hasOwnProperty('extension_attributes')) {
                obj['extension_attributes'] = ApiClient.convertToType(data['extension_attributes'], Object);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('is_use_default')) {
                obj['is_use_default'] = ApiClient.convertToType(data['is_use_default'], 'Boolean');
            }
            if (data.hasOwnProperty('label')) {
                obj['label'] = ApiClient.convertToType(data['label'], 'String');
            }
            if (data.hasOwnProperty('position')) {
                obj['position'] = ApiClient.convertToType(data['position'], 'Number');
            }
            if (data.hasOwnProperty('product_id')) {
                obj['product_id'] = ApiClient.convertToType(data['product_id'], 'Number');
            }
            if (data.hasOwnProperty('values')) {
                obj['values'] = ApiClient.convertToType(data['values'], [ConfigurableProductDataOptionValueInterface]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ConfigurableProductDataOptionInterface</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ConfigurableProductDataOptionInterface</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['attribute_id'] && !(typeof data['attribute_id'] === 'string' || data['attribute_id'] instanceof String)) {
            throw new Error("Expected the field `attribute_id` to be a primitive type in the JSON string but got " + data['attribute_id']);
        }
        // ensure the json data is a string
        if (data['label'] && !(typeof data['label'] === 'string' || data['label'] instanceof String)) {
            throw new Error("Expected the field `label` to be a primitive type in the JSON string but got " + data['label']);
        }
        if (data['values']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['values'])) {
                throw new Error("Expected the field `values` to be an array in the JSON data but got " + data['values']);
            }
            // validate the optional field `values` (array)
            for (const item of data['values']) {
                ConfigurableProductDataOptionValueInterface.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {String} attribute_id
 */
ConfigurableProductDataOptionInterface.prototype['attribute_id'] = undefined;

/**
 * ExtensionInterface class for @see \\Magento\\ConfigurableProduct\\Api\\Data\\OptionInterface
 * @member {Object} extension_attributes
 */
ConfigurableProductDataOptionInterface.prototype['extension_attributes'] = undefined;

/**
 * @member {Number} id
 */
ConfigurableProductDataOptionInterface.prototype['id'] = undefined;

/**
 * @member {Boolean} is_use_default
 */
ConfigurableProductDataOptionInterface.prototype['is_use_default'] = undefined;

/**
 * @member {String} label
 */
ConfigurableProductDataOptionInterface.prototype['label'] = undefined;

/**
 * @member {Number} position
 */
ConfigurableProductDataOptionInterface.prototype['position'] = undefined;

/**
 * @member {Number} product_id
 */
ConfigurableProductDataOptionInterface.prototype['product_id'] = undefined;

/**
 * @member {Array.<module:model/ConfigurableProductDataOptionValueInterface>} values
 */
ConfigurableProductDataOptionInterface.prototype['values'] = undefined;






export default ConfigurableProductDataOptionInterface;

