/**
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import QuoteDataTotalSegmentExtensionInterface from './QuoteDataTotalSegmentExtensionInterface';

/**
 * The QuoteDataTotalSegmentInterface model module.
 * @module model/QuoteDataTotalSegmentInterface
 * @version 2.2.10
 */
class QuoteDataTotalSegmentInterface {
    /**
     * Constructs a new <code>QuoteDataTotalSegmentInterface</code>.
     * Interface TotalsInterface
     * @alias module:model/QuoteDataTotalSegmentInterface
     * @param code {String} Code
     * @param value {Number} Total value
     */
    constructor(code, value) { 
        
        QuoteDataTotalSegmentInterface.initialize(this, code, value);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, code, value) { 
        obj['code'] = code;
        obj['value'] = value;
    }

    /**
     * Constructs a <code>QuoteDataTotalSegmentInterface</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/QuoteDataTotalSegmentInterface} obj Optional instance to populate.
     * @return {module:model/QuoteDataTotalSegmentInterface} The populated <code>QuoteDataTotalSegmentInterface</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new QuoteDataTotalSegmentInterface();

            if (data.hasOwnProperty('area')) {
                obj['area'] = ApiClient.convertToType(data['area'], 'String');
            }
            if (data.hasOwnProperty('code')) {
                obj['code'] = ApiClient.convertToType(data['code'], 'String');
            }
            if (data.hasOwnProperty('extension_attributes')) {
                obj['extension_attributes'] = QuoteDataTotalSegmentExtensionInterface.constructFromObject(data['extension_attributes']);
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>QuoteDataTotalSegmentInterface</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>QuoteDataTotalSegmentInterface</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of QuoteDataTotalSegmentInterface.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['area'] && !(typeof data['area'] === 'string' || data['area'] instanceof String)) {
            throw new Error("Expected the field `area` to be a primitive type in the JSON string but got " + data['area']);
        }
        // ensure the json data is a string
        if (data['code'] && !(typeof data['code'] === 'string' || data['code'] instanceof String)) {
            throw new Error("Expected the field `code` to be a primitive type in the JSON string but got " + data['code']);
        }
        // validate the optional field `extension_attributes`
        if (data['extension_attributes']) { // data not null
          QuoteDataTotalSegmentExtensionInterface.validateJSON(data['extension_attributes']);
        }
        // ensure the json data is a string
        if (data['title'] && !(typeof data['title'] === 'string' || data['title'] instanceof String)) {
            throw new Error("Expected the field `title` to be a primitive type in the JSON string but got " + data['title']);
        }

        return true;
    }


}

QuoteDataTotalSegmentInterface.RequiredProperties = ["code", "value"];

/**
 * Display area code.
 * @member {String} area
 */
QuoteDataTotalSegmentInterface.prototype['area'] = undefined;

/**
 * Code
 * @member {String} code
 */
QuoteDataTotalSegmentInterface.prototype['code'] = undefined;

/**
 * @member {module:model/QuoteDataTotalSegmentExtensionInterface} extension_attributes
 */
QuoteDataTotalSegmentInterface.prototype['extension_attributes'] = undefined;

/**
 * Total title
 * @member {String} title
 */
QuoteDataTotalSegmentInterface.prototype['title'] = undefined;

/**
 * Total value
 * @member {Number} value
 */
QuoteDataTotalSegmentInterface.prototype['value'] = undefined;






export default QuoteDataTotalSegmentInterface;

