/*
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Interface TotalInterface
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:00:51.810681-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class SalesDataTotalInterface {
  public static final String SERIALIZED_NAME_BASE_SHIPPING_AMOUNT = "base_shipping_amount";
  @SerializedName(SERIALIZED_NAME_BASE_SHIPPING_AMOUNT)
  private BigDecimal baseShippingAmount;

  public static final String SERIALIZED_NAME_BASE_SHIPPING_CANCELED = "base_shipping_canceled";
  @SerializedName(SERIALIZED_NAME_BASE_SHIPPING_CANCELED)
  private BigDecimal baseShippingCanceled;

  public static final String SERIALIZED_NAME_BASE_SHIPPING_DISCOUNT_AMOUNT = "base_shipping_discount_amount";
  @SerializedName(SERIALIZED_NAME_BASE_SHIPPING_DISCOUNT_AMOUNT)
  private BigDecimal baseShippingDiscountAmount;

  public static final String SERIALIZED_NAME_BASE_SHIPPING_DISCOUNT_TAX_COMPENSATION_AMNT = "base_shipping_discount_tax_compensation_amnt";
  @SerializedName(SERIALIZED_NAME_BASE_SHIPPING_DISCOUNT_TAX_COMPENSATION_AMNT)
  private BigDecimal baseShippingDiscountTaxCompensationAmnt;

  public static final String SERIALIZED_NAME_BASE_SHIPPING_INCL_TAX = "base_shipping_incl_tax";
  @SerializedName(SERIALIZED_NAME_BASE_SHIPPING_INCL_TAX)
  private BigDecimal baseShippingInclTax;

  public static final String SERIALIZED_NAME_BASE_SHIPPING_INVOICED = "base_shipping_invoiced";
  @SerializedName(SERIALIZED_NAME_BASE_SHIPPING_INVOICED)
  private BigDecimal baseShippingInvoiced;

  public static final String SERIALIZED_NAME_BASE_SHIPPING_REFUNDED = "base_shipping_refunded";
  @SerializedName(SERIALIZED_NAME_BASE_SHIPPING_REFUNDED)
  private BigDecimal baseShippingRefunded;

  public static final String SERIALIZED_NAME_BASE_SHIPPING_TAX_AMOUNT = "base_shipping_tax_amount";
  @SerializedName(SERIALIZED_NAME_BASE_SHIPPING_TAX_AMOUNT)
  private BigDecimal baseShippingTaxAmount;

  public static final String SERIALIZED_NAME_BASE_SHIPPING_TAX_REFUNDED = "base_shipping_tax_refunded";
  @SerializedName(SERIALIZED_NAME_BASE_SHIPPING_TAX_REFUNDED)
  private BigDecimal baseShippingTaxRefunded;

  public static final String SERIALIZED_NAME_EXTENSION_ATTRIBUTES = "extension_attributes";
  @SerializedName(SERIALIZED_NAME_EXTENSION_ATTRIBUTES)
  private Object extensionAttributes;

  public static final String SERIALIZED_NAME_SHIPPING_AMOUNT = "shipping_amount";
  @SerializedName(SERIALIZED_NAME_SHIPPING_AMOUNT)
  private BigDecimal shippingAmount;

  public static final String SERIALIZED_NAME_SHIPPING_CANCELED = "shipping_canceled";
  @SerializedName(SERIALIZED_NAME_SHIPPING_CANCELED)
  private BigDecimal shippingCanceled;

  public static final String SERIALIZED_NAME_SHIPPING_DISCOUNT_AMOUNT = "shipping_discount_amount";
  @SerializedName(SERIALIZED_NAME_SHIPPING_DISCOUNT_AMOUNT)
  private BigDecimal shippingDiscountAmount;

  public static final String SERIALIZED_NAME_SHIPPING_DISCOUNT_TAX_COMPENSATION_AMOUNT = "shipping_discount_tax_compensation_amount";
  @SerializedName(SERIALIZED_NAME_SHIPPING_DISCOUNT_TAX_COMPENSATION_AMOUNT)
  private BigDecimal shippingDiscountTaxCompensationAmount;

  public static final String SERIALIZED_NAME_SHIPPING_INCL_TAX = "shipping_incl_tax";
  @SerializedName(SERIALIZED_NAME_SHIPPING_INCL_TAX)
  private BigDecimal shippingInclTax;

  public static final String SERIALIZED_NAME_SHIPPING_INVOICED = "shipping_invoiced";
  @SerializedName(SERIALIZED_NAME_SHIPPING_INVOICED)
  private BigDecimal shippingInvoiced;

  public static final String SERIALIZED_NAME_SHIPPING_REFUNDED = "shipping_refunded";
  @SerializedName(SERIALIZED_NAME_SHIPPING_REFUNDED)
  private BigDecimal shippingRefunded;

  public static final String SERIALIZED_NAME_SHIPPING_TAX_AMOUNT = "shipping_tax_amount";
  @SerializedName(SERIALIZED_NAME_SHIPPING_TAX_AMOUNT)
  private BigDecimal shippingTaxAmount;

  public static final String SERIALIZED_NAME_SHIPPING_TAX_REFUNDED = "shipping_tax_refunded";
  @SerializedName(SERIALIZED_NAME_SHIPPING_TAX_REFUNDED)
  private BigDecimal shippingTaxRefunded;

  public SalesDataTotalInterface() {
  }

  public SalesDataTotalInterface baseShippingAmount(BigDecimal baseShippingAmount) {
    this.baseShippingAmount = baseShippingAmount;
    return this;
  }

  /**
   * Base shipping amount.
   * @return baseShippingAmount
   */
  @javax.annotation.Nullable
  public BigDecimal getBaseShippingAmount() {
    return baseShippingAmount;
  }

  public void setBaseShippingAmount(BigDecimal baseShippingAmount) {
    this.baseShippingAmount = baseShippingAmount;
  }


  public SalesDataTotalInterface baseShippingCanceled(BigDecimal baseShippingCanceled) {
    this.baseShippingCanceled = baseShippingCanceled;
    return this;
  }

  /**
   * Base shipping canceled.
   * @return baseShippingCanceled
   */
  @javax.annotation.Nullable
  public BigDecimal getBaseShippingCanceled() {
    return baseShippingCanceled;
  }

  public void setBaseShippingCanceled(BigDecimal baseShippingCanceled) {
    this.baseShippingCanceled = baseShippingCanceled;
  }


  public SalesDataTotalInterface baseShippingDiscountAmount(BigDecimal baseShippingDiscountAmount) {
    this.baseShippingDiscountAmount = baseShippingDiscountAmount;
    return this;
  }

  /**
   * Base shipping discount amount.
   * @return baseShippingDiscountAmount
   */
  @javax.annotation.Nullable
  public BigDecimal getBaseShippingDiscountAmount() {
    return baseShippingDiscountAmount;
  }

  public void setBaseShippingDiscountAmount(BigDecimal baseShippingDiscountAmount) {
    this.baseShippingDiscountAmount = baseShippingDiscountAmount;
  }


  public SalesDataTotalInterface baseShippingDiscountTaxCompensationAmnt(BigDecimal baseShippingDiscountTaxCompensationAmnt) {
    this.baseShippingDiscountTaxCompensationAmnt = baseShippingDiscountTaxCompensationAmnt;
    return this;
  }

  /**
   * Base shipping discount tax compensation amount.
   * @return baseShippingDiscountTaxCompensationAmnt
   */
  @javax.annotation.Nullable
  public BigDecimal getBaseShippingDiscountTaxCompensationAmnt() {
    return baseShippingDiscountTaxCompensationAmnt;
  }

  public void setBaseShippingDiscountTaxCompensationAmnt(BigDecimal baseShippingDiscountTaxCompensationAmnt) {
    this.baseShippingDiscountTaxCompensationAmnt = baseShippingDiscountTaxCompensationAmnt;
  }


  public SalesDataTotalInterface baseShippingInclTax(BigDecimal baseShippingInclTax) {
    this.baseShippingInclTax = baseShippingInclTax;
    return this;
  }

  /**
   * Base shipping including tax.
   * @return baseShippingInclTax
   */
  @javax.annotation.Nullable
  public BigDecimal getBaseShippingInclTax() {
    return baseShippingInclTax;
  }

  public void setBaseShippingInclTax(BigDecimal baseShippingInclTax) {
    this.baseShippingInclTax = baseShippingInclTax;
  }


  public SalesDataTotalInterface baseShippingInvoiced(BigDecimal baseShippingInvoiced) {
    this.baseShippingInvoiced = baseShippingInvoiced;
    return this;
  }

  /**
   * Base shipping invoiced.
   * @return baseShippingInvoiced
   */
  @javax.annotation.Nullable
  public BigDecimal getBaseShippingInvoiced() {
    return baseShippingInvoiced;
  }

  public void setBaseShippingInvoiced(BigDecimal baseShippingInvoiced) {
    this.baseShippingInvoiced = baseShippingInvoiced;
  }


  public SalesDataTotalInterface baseShippingRefunded(BigDecimal baseShippingRefunded) {
    this.baseShippingRefunded = baseShippingRefunded;
    return this;
  }

  /**
   * Base shipping refunded.
   * @return baseShippingRefunded
   */
  @javax.annotation.Nullable
  public BigDecimal getBaseShippingRefunded() {
    return baseShippingRefunded;
  }

  public void setBaseShippingRefunded(BigDecimal baseShippingRefunded) {
    this.baseShippingRefunded = baseShippingRefunded;
  }


  public SalesDataTotalInterface baseShippingTaxAmount(BigDecimal baseShippingTaxAmount) {
    this.baseShippingTaxAmount = baseShippingTaxAmount;
    return this;
  }

  /**
   * Base shipping tax amount.
   * @return baseShippingTaxAmount
   */
  @javax.annotation.Nullable
  public BigDecimal getBaseShippingTaxAmount() {
    return baseShippingTaxAmount;
  }

  public void setBaseShippingTaxAmount(BigDecimal baseShippingTaxAmount) {
    this.baseShippingTaxAmount = baseShippingTaxAmount;
  }


  public SalesDataTotalInterface baseShippingTaxRefunded(BigDecimal baseShippingTaxRefunded) {
    this.baseShippingTaxRefunded = baseShippingTaxRefunded;
    return this;
  }

  /**
   * Base shipping tax refunded.
   * @return baseShippingTaxRefunded
   */
  @javax.annotation.Nullable
  public BigDecimal getBaseShippingTaxRefunded() {
    return baseShippingTaxRefunded;
  }

  public void setBaseShippingTaxRefunded(BigDecimal baseShippingTaxRefunded) {
    this.baseShippingTaxRefunded = baseShippingTaxRefunded;
  }


  public SalesDataTotalInterface extensionAttributes(Object extensionAttributes) {
    this.extensionAttributes = extensionAttributes;
    return this;
  }

  /**
   * ExtensionInterface class for @see \\Magento\\Sales\\Api\\Data\\TotalInterface
   * @return extensionAttributes
   */
  @javax.annotation.Nullable
  public Object getExtensionAttributes() {
    return extensionAttributes;
  }

  public void setExtensionAttributes(Object extensionAttributes) {
    this.extensionAttributes = extensionAttributes;
  }


  public SalesDataTotalInterface shippingAmount(BigDecimal shippingAmount) {
    this.shippingAmount = shippingAmount;
    return this;
  }

  /**
   * Shipping amount.
   * @return shippingAmount
   */
  @javax.annotation.Nullable
  public BigDecimal getShippingAmount() {
    return shippingAmount;
  }

  public void setShippingAmount(BigDecimal shippingAmount) {
    this.shippingAmount = shippingAmount;
  }


  public SalesDataTotalInterface shippingCanceled(BigDecimal shippingCanceled) {
    this.shippingCanceled = shippingCanceled;
    return this;
  }

  /**
   * Shipping canceled amount.
   * @return shippingCanceled
   */
  @javax.annotation.Nullable
  public BigDecimal getShippingCanceled() {
    return shippingCanceled;
  }

  public void setShippingCanceled(BigDecimal shippingCanceled) {
    this.shippingCanceled = shippingCanceled;
  }


  public SalesDataTotalInterface shippingDiscountAmount(BigDecimal shippingDiscountAmount) {
    this.shippingDiscountAmount = shippingDiscountAmount;
    return this;
  }

  /**
   * Shipping discount amount.
   * @return shippingDiscountAmount
   */
  @javax.annotation.Nullable
  public BigDecimal getShippingDiscountAmount() {
    return shippingDiscountAmount;
  }

  public void setShippingDiscountAmount(BigDecimal shippingDiscountAmount) {
    this.shippingDiscountAmount = shippingDiscountAmount;
  }


  public SalesDataTotalInterface shippingDiscountTaxCompensationAmount(BigDecimal shippingDiscountTaxCompensationAmount) {
    this.shippingDiscountTaxCompensationAmount = shippingDiscountTaxCompensationAmount;
    return this;
  }

  /**
   * Shipping discount tax compensation amount.
   * @return shippingDiscountTaxCompensationAmount
   */
  @javax.annotation.Nullable
  public BigDecimal getShippingDiscountTaxCompensationAmount() {
    return shippingDiscountTaxCompensationAmount;
  }

  public void setShippingDiscountTaxCompensationAmount(BigDecimal shippingDiscountTaxCompensationAmount) {
    this.shippingDiscountTaxCompensationAmount = shippingDiscountTaxCompensationAmount;
  }


  public SalesDataTotalInterface shippingInclTax(BigDecimal shippingInclTax) {
    this.shippingInclTax = shippingInclTax;
    return this;
  }

  /**
   * Shipping including tax amount.
   * @return shippingInclTax
   */
  @javax.annotation.Nullable
  public BigDecimal getShippingInclTax() {
    return shippingInclTax;
  }

  public void setShippingInclTax(BigDecimal shippingInclTax) {
    this.shippingInclTax = shippingInclTax;
  }


  public SalesDataTotalInterface shippingInvoiced(BigDecimal shippingInvoiced) {
    this.shippingInvoiced = shippingInvoiced;
    return this;
  }

  /**
   * Shipping invoiced amount.
   * @return shippingInvoiced
   */
  @javax.annotation.Nullable
  public BigDecimal getShippingInvoiced() {
    return shippingInvoiced;
  }

  public void setShippingInvoiced(BigDecimal shippingInvoiced) {
    this.shippingInvoiced = shippingInvoiced;
  }


  public SalesDataTotalInterface shippingRefunded(BigDecimal shippingRefunded) {
    this.shippingRefunded = shippingRefunded;
    return this;
  }

  /**
   * Shipping refunded amount.
   * @return shippingRefunded
   */
  @javax.annotation.Nullable
  public BigDecimal getShippingRefunded() {
    return shippingRefunded;
  }

  public void setShippingRefunded(BigDecimal shippingRefunded) {
    this.shippingRefunded = shippingRefunded;
  }


  public SalesDataTotalInterface shippingTaxAmount(BigDecimal shippingTaxAmount) {
    this.shippingTaxAmount = shippingTaxAmount;
    return this;
  }

  /**
   * Shipping tax amount.
   * @return shippingTaxAmount
   */
  @javax.annotation.Nullable
  public BigDecimal getShippingTaxAmount() {
    return shippingTaxAmount;
  }

  public void setShippingTaxAmount(BigDecimal shippingTaxAmount) {
    this.shippingTaxAmount = shippingTaxAmount;
  }


  public SalesDataTotalInterface shippingTaxRefunded(BigDecimal shippingTaxRefunded) {
    this.shippingTaxRefunded = shippingTaxRefunded;
    return this;
  }

  /**
   * Shipping tax refunded amount.
   * @return shippingTaxRefunded
   */
  @javax.annotation.Nullable
  public BigDecimal getShippingTaxRefunded() {
    return shippingTaxRefunded;
  }

  public void setShippingTaxRefunded(BigDecimal shippingTaxRefunded) {
    this.shippingTaxRefunded = shippingTaxRefunded;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SalesDataTotalInterface salesDataTotalInterface = (SalesDataTotalInterface) o;
    return Objects.equals(this.baseShippingAmount, salesDataTotalInterface.baseShippingAmount) &&
        Objects.equals(this.baseShippingCanceled, salesDataTotalInterface.baseShippingCanceled) &&
        Objects.equals(this.baseShippingDiscountAmount, salesDataTotalInterface.baseShippingDiscountAmount) &&
        Objects.equals(this.baseShippingDiscountTaxCompensationAmnt, salesDataTotalInterface.baseShippingDiscountTaxCompensationAmnt) &&
        Objects.equals(this.baseShippingInclTax, salesDataTotalInterface.baseShippingInclTax) &&
        Objects.equals(this.baseShippingInvoiced, salesDataTotalInterface.baseShippingInvoiced) &&
        Objects.equals(this.baseShippingRefunded, salesDataTotalInterface.baseShippingRefunded) &&
        Objects.equals(this.baseShippingTaxAmount, salesDataTotalInterface.baseShippingTaxAmount) &&
        Objects.equals(this.baseShippingTaxRefunded, salesDataTotalInterface.baseShippingTaxRefunded) &&
        Objects.equals(this.extensionAttributes, salesDataTotalInterface.extensionAttributes) &&
        Objects.equals(this.shippingAmount, salesDataTotalInterface.shippingAmount) &&
        Objects.equals(this.shippingCanceled, salesDataTotalInterface.shippingCanceled) &&
        Objects.equals(this.shippingDiscountAmount, salesDataTotalInterface.shippingDiscountAmount) &&
        Objects.equals(this.shippingDiscountTaxCompensationAmount, salesDataTotalInterface.shippingDiscountTaxCompensationAmount) &&
        Objects.equals(this.shippingInclTax, salesDataTotalInterface.shippingInclTax) &&
        Objects.equals(this.shippingInvoiced, salesDataTotalInterface.shippingInvoiced) &&
        Objects.equals(this.shippingRefunded, salesDataTotalInterface.shippingRefunded) &&
        Objects.equals(this.shippingTaxAmount, salesDataTotalInterface.shippingTaxAmount) &&
        Objects.equals(this.shippingTaxRefunded, salesDataTotalInterface.shippingTaxRefunded);
  }

  @Override
  public int hashCode() {
    return Objects.hash(baseShippingAmount, baseShippingCanceled, baseShippingDiscountAmount, baseShippingDiscountTaxCompensationAmnt, baseShippingInclTax, baseShippingInvoiced, baseShippingRefunded, baseShippingTaxAmount, baseShippingTaxRefunded, extensionAttributes, shippingAmount, shippingCanceled, shippingDiscountAmount, shippingDiscountTaxCompensationAmount, shippingInclTax, shippingInvoiced, shippingRefunded, shippingTaxAmount, shippingTaxRefunded);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SalesDataTotalInterface {\n");
    sb.append("    baseShippingAmount: ").append(toIndentedString(baseShippingAmount)).append("\n");
    sb.append("    baseShippingCanceled: ").append(toIndentedString(baseShippingCanceled)).append("\n");
    sb.append("    baseShippingDiscountAmount: ").append(toIndentedString(baseShippingDiscountAmount)).append("\n");
    sb.append("    baseShippingDiscountTaxCompensationAmnt: ").append(toIndentedString(baseShippingDiscountTaxCompensationAmnt)).append("\n");
    sb.append("    baseShippingInclTax: ").append(toIndentedString(baseShippingInclTax)).append("\n");
    sb.append("    baseShippingInvoiced: ").append(toIndentedString(baseShippingInvoiced)).append("\n");
    sb.append("    baseShippingRefunded: ").append(toIndentedString(baseShippingRefunded)).append("\n");
    sb.append("    baseShippingTaxAmount: ").append(toIndentedString(baseShippingTaxAmount)).append("\n");
    sb.append("    baseShippingTaxRefunded: ").append(toIndentedString(baseShippingTaxRefunded)).append("\n");
    sb.append("    extensionAttributes: ").append(toIndentedString(extensionAttributes)).append("\n");
    sb.append("    shippingAmount: ").append(toIndentedString(shippingAmount)).append("\n");
    sb.append("    shippingCanceled: ").append(toIndentedString(shippingCanceled)).append("\n");
    sb.append("    shippingDiscountAmount: ").append(toIndentedString(shippingDiscountAmount)).append("\n");
    sb.append("    shippingDiscountTaxCompensationAmount: ").append(toIndentedString(shippingDiscountTaxCompensationAmount)).append("\n");
    sb.append("    shippingInclTax: ").append(toIndentedString(shippingInclTax)).append("\n");
    sb.append("    shippingInvoiced: ").append(toIndentedString(shippingInvoiced)).append("\n");
    sb.append("    shippingRefunded: ").append(toIndentedString(shippingRefunded)).append("\n");
    sb.append("    shippingTaxAmount: ").append(toIndentedString(shippingTaxAmount)).append("\n");
    sb.append("    shippingTaxRefunded: ").append(toIndentedString(shippingTaxRefunded)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("base_shipping_amount");
    openapiFields.add("base_shipping_canceled");
    openapiFields.add("base_shipping_discount_amount");
    openapiFields.add("base_shipping_discount_tax_compensation_amnt");
    openapiFields.add("base_shipping_incl_tax");
    openapiFields.add("base_shipping_invoiced");
    openapiFields.add("base_shipping_refunded");
    openapiFields.add("base_shipping_tax_amount");
    openapiFields.add("base_shipping_tax_refunded");
    openapiFields.add("extension_attributes");
    openapiFields.add("shipping_amount");
    openapiFields.add("shipping_canceled");
    openapiFields.add("shipping_discount_amount");
    openapiFields.add("shipping_discount_tax_compensation_amount");
    openapiFields.add("shipping_incl_tax");
    openapiFields.add("shipping_invoiced");
    openapiFields.add("shipping_refunded");
    openapiFields.add("shipping_tax_amount");
    openapiFields.add("shipping_tax_refunded");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to SalesDataTotalInterface
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!SalesDataTotalInterface.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in SalesDataTotalInterface is not found in the empty JSON string", SalesDataTotalInterface.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!SalesDataTotalInterface.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `SalesDataTotalInterface` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SalesDataTotalInterface.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SalesDataTotalInterface' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SalesDataTotalInterface> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SalesDataTotalInterface.class));

       return (TypeAdapter<T>) new TypeAdapter<SalesDataTotalInterface>() {
           @Override
           public void write(JsonWriter out, SalesDataTotalInterface value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public SalesDataTotalInterface read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of SalesDataTotalInterface given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of SalesDataTotalInterface
   * @throws IOException if the JSON string is invalid with respect to SalesDataTotalInterface
   */
  public static SalesDataTotalInterface fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SalesDataTotalInterface.class);
  }

  /**
   * Convert an instance of SalesDataTotalInterface to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

