/*
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CMS page interface.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:00:51.810681-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CmsDataPageInterface {
  public static final String SERIALIZED_NAME_ACTIVE = "active";
  @SerializedName(SERIALIZED_NAME_ACTIVE)
  private Boolean active;

  public static final String SERIALIZED_NAME_CONTENT = "content";
  @SerializedName(SERIALIZED_NAME_CONTENT)
  private String content;

  public static final String SERIALIZED_NAME_CONTENT_HEADING = "content_heading";
  @SerializedName(SERIALIZED_NAME_CONTENT_HEADING)
  private String contentHeading;

  public static final String SERIALIZED_NAME_CREATION_TIME = "creation_time";
  @SerializedName(SERIALIZED_NAME_CREATION_TIME)
  private String creationTime;

  public static final String SERIALIZED_NAME_CUSTOM_LAYOUT_UPDATE_XML = "custom_layout_update_xml";
  @SerializedName(SERIALIZED_NAME_CUSTOM_LAYOUT_UPDATE_XML)
  private String customLayoutUpdateXml;

  public static final String SERIALIZED_NAME_CUSTOM_ROOT_TEMPLATE = "custom_root_template";
  @SerializedName(SERIALIZED_NAME_CUSTOM_ROOT_TEMPLATE)
  private String customRootTemplate;

  public static final String SERIALIZED_NAME_CUSTOM_THEME = "custom_theme";
  @SerializedName(SERIALIZED_NAME_CUSTOM_THEME)
  private String customTheme;

  public static final String SERIALIZED_NAME_CUSTOM_THEME_FROM = "custom_theme_from";
  @SerializedName(SERIALIZED_NAME_CUSTOM_THEME_FROM)
  private String customThemeFrom;

  public static final String SERIALIZED_NAME_CUSTOM_THEME_TO = "custom_theme_to";
  @SerializedName(SERIALIZED_NAME_CUSTOM_THEME_TO)
  private String customThemeTo;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_IDENTIFIER = "identifier";
  @SerializedName(SERIALIZED_NAME_IDENTIFIER)
  private String identifier;

  public static final String SERIALIZED_NAME_LAYOUT_UPDATE_XML = "layout_update_xml";
  @SerializedName(SERIALIZED_NAME_LAYOUT_UPDATE_XML)
  private String layoutUpdateXml;

  public static final String SERIALIZED_NAME_META_DESCRIPTION = "meta_description";
  @SerializedName(SERIALIZED_NAME_META_DESCRIPTION)
  private String metaDescription;

  public static final String SERIALIZED_NAME_META_KEYWORDS = "meta_keywords";
  @SerializedName(SERIALIZED_NAME_META_KEYWORDS)
  private String metaKeywords;

  public static final String SERIALIZED_NAME_META_TITLE = "meta_title";
  @SerializedName(SERIALIZED_NAME_META_TITLE)
  private String metaTitle;

  public static final String SERIALIZED_NAME_PAGE_LAYOUT = "page_layout";
  @SerializedName(SERIALIZED_NAME_PAGE_LAYOUT)
  private String pageLayout;

  public static final String SERIALIZED_NAME_SORT_ORDER = "sort_order";
  @SerializedName(SERIALIZED_NAME_SORT_ORDER)
  private String sortOrder;

  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public static final String SERIALIZED_NAME_UPDATE_TIME = "update_time";
  @SerializedName(SERIALIZED_NAME_UPDATE_TIME)
  private String updateTime;

  public CmsDataPageInterface() {
  }

  public CmsDataPageInterface active(Boolean active) {
    this.active = active;
    return this;
  }

  /**
   * Active
   * @return active
   */
  @javax.annotation.Nullable
  public Boolean getActive() {
    return active;
  }

  public void setActive(Boolean active) {
    this.active = active;
  }


  public CmsDataPageInterface content(String content) {
    this.content = content;
    return this;
  }

  /**
   * Content
   * @return content
   */
  @javax.annotation.Nullable
  public String getContent() {
    return content;
  }

  public void setContent(String content) {
    this.content = content;
  }


  public CmsDataPageInterface contentHeading(String contentHeading) {
    this.contentHeading = contentHeading;
    return this;
  }

  /**
   * Content heading
   * @return contentHeading
   */
  @javax.annotation.Nullable
  public String getContentHeading() {
    return contentHeading;
  }

  public void setContentHeading(String contentHeading) {
    this.contentHeading = contentHeading;
  }


  public CmsDataPageInterface creationTime(String creationTime) {
    this.creationTime = creationTime;
    return this;
  }

  /**
   * Creation time
   * @return creationTime
   */
  @javax.annotation.Nullable
  public String getCreationTime() {
    return creationTime;
  }

  public void setCreationTime(String creationTime) {
    this.creationTime = creationTime;
  }


  public CmsDataPageInterface customLayoutUpdateXml(String customLayoutUpdateXml) {
    this.customLayoutUpdateXml = customLayoutUpdateXml;
    return this;
  }

  /**
   * Custom layout update xml
   * @return customLayoutUpdateXml
   */
  @javax.annotation.Nullable
  public String getCustomLayoutUpdateXml() {
    return customLayoutUpdateXml;
  }

  public void setCustomLayoutUpdateXml(String customLayoutUpdateXml) {
    this.customLayoutUpdateXml = customLayoutUpdateXml;
  }


  public CmsDataPageInterface customRootTemplate(String customRootTemplate) {
    this.customRootTemplate = customRootTemplate;
    return this;
  }

  /**
   * Custom root template
   * @return customRootTemplate
   */
  @javax.annotation.Nullable
  public String getCustomRootTemplate() {
    return customRootTemplate;
  }

  public void setCustomRootTemplate(String customRootTemplate) {
    this.customRootTemplate = customRootTemplate;
  }


  public CmsDataPageInterface customTheme(String customTheme) {
    this.customTheme = customTheme;
    return this;
  }

  /**
   * Custom theme
   * @return customTheme
   */
  @javax.annotation.Nullable
  public String getCustomTheme() {
    return customTheme;
  }

  public void setCustomTheme(String customTheme) {
    this.customTheme = customTheme;
  }


  public CmsDataPageInterface customThemeFrom(String customThemeFrom) {
    this.customThemeFrom = customThemeFrom;
    return this;
  }

  /**
   * Custom theme from
   * @return customThemeFrom
   */
  @javax.annotation.Nullable
  public String getCustomThemeFrom() {
    return customThemeFrom;
  }

  public void setCustomThemeFrom(String customThemeFrom) {
    this.customThemeFrom = customThemeFrom;
  }


  public CmsDataPageInterface customThemeTo(String customThemeTo) {
    this.customThemeTo = customThemeTo;
    return this;
  }

  /**
   * Custom theme to
   * @return customThemeTo
   */
  @javax.annotation.Nullable
  public String getCustomThemeTo() {
    return customThemeTo;
  }

  public void setCustomThemeTo(String customThemeTo) {
    this.customThemeTo = customThemeTo;
  }


  public CmsDataPageInterface id(Integer id) {
    this.id = id;
    return this;
  }

  /**
   * ID
   * @return id
   */
  @javax.annotation.Nullable
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }


  public CmsDataPageInterface identifier(String identifier) {
    this.identifier = identifier;
    return this;
  }

  /**
   * Identifier
   * @return identifier
   */
  @javax.annotation.Nonnull
  public String getIdentifier() {
    return identifier;
  }

  public void setIdentifier(String identifier) {
    this.identifier = identifier;
  }


  public CmsDataPageInterface layoutUpdateXml(String layoutUpdateXml) {
    this.layoutUpdateXml = layoutUpdateXml;
    return this;
  }

  /**
   * Layout update xml
   * @return layoutUpdateXml
   */
  @javax.annotation.Nullable
  public String getLayoutUpdateXml() {
    return layoutUpdateXml;
  }

  public void setLayoutUpdateXml(String layoutUpdateXml) {
    this.layoutUpdateXml = layoutUpdateXml;
  }


  public CmsDataPageInterface metaDescription(String metaDescription) {
    this.metaDescription = metaDescription;
    return this;
  }

  /**
   * Meta description
   * @return metaDescription
   */
  @javax.annotation.Nullable
  public String getMetaDescription() {
    return metaDescription;
  }

  public void setMetaDescription(String metaDescription) {
    this.metaDescription = metaDescription;
  }


  public CmsDataPageInterface metaKeywords(String metaKeywords) {
    this.metaKeywords = metaKeywords;
    return this;
  }

  /**
   * Meta keywords
   * @return metaKeywords
   */
  @javax.annotation.Nullable
  public String getMetaKeywords() {
    return metaKeywords;
  }

  public void setMetaKeywords(String metaKeywords) {
    this.metaKeywords = metaKeywords;
  }


  public CmsDataPageInterface metaTitle(String metaTitle) {
    this.metaTitle = metaTitle;
    return this;
  }

  /**
   * Meta title
   * @return metaTitle
   */
  @javax.annotation.Nullable
  public String getMetaTitle() {
    return metaTitle;
  }

  public void setMetaTitle(String metaTitle) {
    this.metaTitle = metaTitle;
  }


  public CmsDataPageInterface pageLayout(String pageLayout) {
    this.pageLayout = pageLayout;
    return this;
  }

  /**
   * Page layout
   * @return pageLayout
   */
  @javax.annotation.Nullable
  public String getPageLayout() {
    return pageLayout;
  }

  public void setPageLayout(String pageLayout) {
    this.pageLayout = pageLayout;
  }


  public CmsDataPageInterface sortOrder(String sortOrder) {
    this.sortOrder = sortOrder;
    return this;
  }

  /**
   * Sort order
   * @return sortOrder
   */
  @javax.annotation.Nullable
  public String getSortOrder() {
    return sortOrder;
  }

  public void setSortOrder(String sortOrder) {
    this.sortOrder = sortOrder;
  }


  public CmsDataPageInterface title(String title) {
    this.title = title;
    return this;
  }

  /**
   * Title
   * @return title
   */
  @javax.annotation.Nullable
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }


  public CmsDataPageInterface updateTime(String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  /**
   * Update time
   * @return updateTime
   */
  @javax.annotation.Nullable
  public String getUpdateTime() {
    return updateTime;
  }

  public void setUpdateTime(String updateTime) {
    this.updateTime = updateTime;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CmsDataPageInterface cmsDataPageInterface = (CmsDataPageInterface) o;
    return Objects.equals(this.active, cmsDataPageInterface.active) &&
        Objects.equals(this.content, cmsDataPageInterface.content) &&
        Objects.equals(this.contentHeading, cmsDataPageInterface.contentHeading) &&
        Objects.equals(this.creationTime, cmsDataPageInterface.creationTime) &&
        Objects.equals(this.customLayoutUpdateXml, cmsDataPageInterface.customLayoutUpdateXml) &&
        Objects.equals(this.customRootTemplate, cmsDataPageInterface.customRootTemplate) &&
        Objects.equals(this.customTheme, cmsDataPageInterface.customTheme) &&
        Objects.equals(this.customThemeFrom, cmsDataPageInterface.customThemeFrom) &&
        Objects.equals(this.customThemeTo, cmsDataPageInterface.customThemeTo) &&
        Objects.equals(this.id, cmsDataPageInterface.id) &&
        Objects.equals(this.identifier, cmsDataPageInterface.identifier) &&
        Objects.equals(this.layoutUpdateXml, cmsDataPageInterface.layoutUpdateXml) &&
        Objects.equals(this.metaDescription, cmsDataPageInterface.metaDescription) &&
        Objects.equals(this.metaKeywords, cmsDataPageInterface.metaKeywords) &&
        Objects.equals(this.metaTitle, cmsDataPageInterface.metaTitle) &&
        Objects.equals(this.pageLayout, cmsDataPageInterface.pageLayout) &&
        Objects.equals(this.sortOrder, cmsDataPageInterface.sortOrder) &&
        Objects.equals(this.title, cmsDataPageInterface.title) &&
        Objects.equals(this.updateTime, cmsDataPageInterface.updateTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(active, content, contentHeading, creationTime, customLayoutUpdateXml, customRootTemplate, customTheme, customThemeFrom, customThemeTo, id, identifier, layoutUpdateXml, metaDescription, metaKeywords, metaTitle, pageLayout, sortOrder, title, updateTime);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CmsDataPageInterface {\n");
    sb.append("    active: ").append(toIndentedString(active)).append("\n");
    sb.append("    content: ").append(toIndentedString(content)).append("\n");
    sb.append("    contentHeading: ").append(toIndentedString(contentHeading)).append("\n");
    sb.append("    creationTime: ").append(toIndentedString(creationTime)).append("\n");
    sb.append("    customLayoutUpdateXml: ").append(toIndentedString(customLayoutUpdateXml)).append("\n");
    sb.append("    customRootTemplate: ").append(toIndentedString(customRootTemplate)).append("\n");
    sb.append("    customTheme: ").append(toIndentedString(customTheme)).append("\n");
    sb.append("    customThemeFrom: ").append(toIndentedString(customThemeFrom)).append("\n");
    sb.append("    customThemeTo: ").append(toIndentedString(customThemeTo)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    identifier: ").append(toIndentedString(identifier)).append("\n");
    sb.append("    layoutUpdateXml: ").append(toIndentedString(layoutUpdateXml)).append("\n");
    sb.append("    metaDescription: ").append(toIndentedString(metaDescription)).append("\n");
    sb.append("    metaKeywords: ").append(toIndentedString(metaKeywords)).append("\n");
    sb.append("    metaTitle: ").append(toIndentedString(metaTitle)).append("\n");
    sb.append("    pageLayout: ").append(toIndentedString(pageLayout)).append("\n");
    sb.append("    sortOrder: ").append(toIndentedString(sortOrder)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    updateTime: ").append(toIndentedString(updateTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("active");
    openapiFields.add("content");
    openapiFields.add("content_heading");
    openapiFields.add("creation_time");
    openapiFields.add("custom_layout_update_xml");
    openapiFields.add("custom_root_template");
    openapiFields.add("custom_theme");
    openapiFields.add("custom_theme_from");
    openapiFields.add("custom_theme_to");
    openapiFields.add("id");
    openapiFields.add("identifier");
    openapiFields.add("layout_update_xml");
    openapiFields.add("meta_description");
    openapiFields.add("meta_keywords");
    openapiFields.add("meta_title");
    openapiFields.add("page_layout");
    openapiFields.add("sort_order");
    openapiFields.add("title");
    openapiFields.add("update_time");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("identifier");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CmsDataPageInterface
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CmsDataPageInterface.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CmsDataPageInterface is not found in the empty JSON string", CmsDataPageInterface.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CmsDataPageInterface.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CmsDataPageInterface` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CmsDataPageInterface.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("content") != null && !jsonObj.get("content").isJsonNull()) && !jsonObj.get("content").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `content` to be a primitive type in the JSON string but got `%s`", jsonObj.get("content").toString()));
      }
      if ((jsonObj.get("content_heading") != null && !jsonObj.get("content_heading").isJsonNull()) && !jsonObj.get("content_heading").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `content_heading` to be a primitive type in the JSON string but got `%s`", jsonObj.get("content_heading").toString()));
      }
      if ((jsonObj.get("creation_time") != null && !jsonObj.get("creation_time").isJsonNull()) && !jsonObj.get("creation_time").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `creation_time` to be a primitive type in the JSON string but got `%s`", jsonObj.get("creation_time").toString()));
      }
      if ((jsonObj.get("custom_layout_update_xml") != null && !jsonObj.get("custom_layout_update_xml").isJsonNull()) && !jsonObj.get("custom_layout_update_xml").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `custom_layout_update_xml` to be a primitive type in the JSON string but got `%s`", jsonObj.get("custom_layout_update_xml").toString()));
      }
      if ((jsonObj.get("custom_root_template") != null && !jsonObj.get("custom_root_template").isJsonNull()) && !jsonObj.get("custom_root_template").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `custom_root_template` to be a primitive type in the JSON string but got `%s`", jsonObj.get("custom_root_template").toString()));
      }
      if ((jsonObj.get("custom_theme") != null && !jsonObj.get("custom_theme").isJsonNull()) && !jsonObj.get("custom_theme").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `custom_theme` to be a primitive type in the JSON string but got `%s`", jsonObj.get("custom_theme").toString()));
      }
      if ((jsonObj.get("custom_theme_from") != null && !jsonObj.get("custom_theme_from").isJsonNull()) && !jsonObj.get("custom_theme_from").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `custom_theme_from` to be a primitive type in the JSON string but got `%s`", jsonObj.get("custom_theme_from").toString()));
      }
      if ((jsonObj.get("custom_theme_to") != null && !jsonObj.get("custom_theme_to").isJsonNull()) && !jsonObj.get("custom_theme_to").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `custom_theme_to` to be a primitive type in the JSON string but got `%s`", jsonObj.get("custom_theme_to").toString()));
      }
      if (!jsonObj.get("identifier").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `identifier` to be a primitive type in the JSON string but got `%s`", jsonObj.get("identifier").toString()));
      }
      if ((jsonObj.get("layout_update_xml") != null && !jsonObj.get("layout_update_xml").isJsonNull()) && !jsonObj.get("layout_update_xml").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `layout_update_xml` to be a primitive type in the JSON string but got `%s`", jsonObj.get("layout_update_xml").toString()));
      }
      if ((jsonObj.get("meta_description") != null && !jsonObj.get("meta_description").isJsonNull()) && !jsonObj.get("meta_description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `meta_description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("meta_description").toString()));
      }
      if ((jsonObj.get("meta_keywords") != null && !jsonObj.get("meta_keywords").isJsonNull()) && !jsonObj.get("meta_keywords").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `meta_keywords` to be a primitive type in the JSON string but got `%s`", jsonObj.get("meta_keywords").toString()));
      }
      if ((jsonObj.get("meta_title") != null && !jsonObj.get("meta_title").isJsonNull()) && !jsonObj.get("meta_title").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `meta_title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("meta_title").toString()));
      }
      if ((jsonObj.get("page_layout") != null && !jsonObj.get("page_layout").isJsonNull()) && !jsonObj.get("page_layout").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `page_layout` to be a primitive type in the JSON string but got `%s`", jsonObj.get("page_layout").toString()));
      }
      if ((jsonObj.get("sort_order") != null && !jsonObj.get("sort_order").isJsonNull()) && !jsonObj.get("sort_order").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sort_order` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sort_order").toString()));
      }
      if ((jsonObj.get("title") != null && !jsonObj.get("title").isJsonNull()) && !jsonObj.get("title").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("title").toString()));
      }
      if ((jsonObj.get("update_time") != null && !jsonObj.get("update_time").isJsonNull()) && !jsonObj.get("update_time").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `update_time` to be a primitive type in the JSON string but got `%s`", jsonObj.get("update_time").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CmsDataPageInterface.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CmsDataPageInterface' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CmsDataPageInterface> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CmsDataPageInterface.class));

       return (TypeAdapter<T>) new TypeAdapter<CmsDataPageInterface>() {
           @Override
           public void write(JsonWriter out, CmsDataPageInterface value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CmsDataPageInterface read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CmsDataPageInterface given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CmsDataPageInterface
   * @throws IOException if the JSON string is invalid with respect to CmsDataPageInterface
   */
  public static CmsDataPageInterface fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CmsDataPageInterface.class);
  }

  /**
   * Convert an instance of CmsDataPageInterface to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

