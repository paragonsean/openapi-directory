/*
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Interface LinkInterface
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:00:51.810681-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class BundleDataLinkInterface {
  public static final String SERIALIZED_NAME_CAN_CHANGE_QUANTITY = "can_change_quantity";
  @SerializedName(SERIALIZED_NAME_CAN_CHANGE_QUANTITY)
  private Integer canChangeQuantity;

  public static final String SERIALIZED_NAME_EXTENSION_ATTRIBUTES = "extension_attributes";
  @SerializedName(SERIALIZED_NAME_EXTENSION_ATTRIBUTES)
  private Object extensionAttributes;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_IS_DEFAULT = "is_default";
  @SerializedName(SERIALIZED_NAME_IS_DEFAULT)
  private Boolean isDefault;

  public static final String SERIALIZED_NAME_OPTION_ID = "option_id";
  @SerializedName(SERIALIZED_NAME_OPTION_ID)
  private Integer optionId;

  public static final String SERIALIZED_NAME_POSITION = "position";
  @SerializedName(SERIALIZED_NAME_POSITION)
  private Integer position;

  public static final String SERIALIZED_NAME_PRICE = "price";
  @SerializedName(SERIALIZED_NAME_PRICE)
  private BigDecimal price;

  public static final String SERIALIZED_NAME_PRICE_TYPE = "price_type";
  @SerializedName(SERIALIZED_NAME_PRICE_TYPE)
  private Integer priceType;

  public static final String SERIALIZED_NAME_QTY = "qty";
  @SerializedName(SERIALIZED_NAME_QTY)
  private BigDecimal qty;

  public static final String SERIALIZED_NAME_SKU = "sku";
  @SerializedName(SERIALIZED_NAME_SKU)
  private String sku;

  public BundleDataLinkInterface() {
  }

  public BundleDataLinkInterface canChangeQuantity(Integer canChangeQuantity) {
    this.canChangeQuantity = canChangeQuantity;
    return this;
  }

  /**
   * Whether quantity could be changed
   * @return canChangeQuantity
   */
  @javax.annotation.Nullable
  public Integer getCanChangeQuantity() {
    return canChangeQuantity;
  }

  public void setCanChangeQuantity(Integer canChangeQuantity) {
    this.canChangeQuantity = canChangeQuantity;
  }


  public BundleDataLinkInterface extensionAttributes(Object extensionAttributes) {
    this.extensionAttributes = extensionAttributes;
    return this;
  }

  /**
   * ExtensionInterface class for @see \\Magento\\Bundle\\Api\\Data\\LinkInterface
   * @return extensionAttributes
   */
  @javax.annotation.Nullable
  public Object getExtensionAttributes() {
    return extensionAttributes;
  }

  public void setExtensionAttributes(Object extensionAttributes) {
    this.extensionAttributes = extensionAttributes;
  }


  public BundleDataLinkInterface id(String id) {
    this.id = id;
    return this;
  }

  /**
   * The identifier
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public BundleDataLinkInterface isDefault(Boolean isDefault) {
    this.isDefault = isDefault;
    return this;
  }

  /**
   * Is default
   * @return isDefault
   */
  @javax.annotation.Nonnull
  public Boolean getIsDefault() {
    return isDefault;
  }

  public void setIsDefault(Boolean isDefault) {
    this.isDefault = isDefault;
  }


  public BundleDataLinkInterface optionId(Integer optionId) {
    this.optionId = optionId;
    return this;
  }

  /**
   * Option id
   * @return optionId
   */
  @javax.annotation.Nullable
  public Integer getOptionId() {
    return optionId;
  }

  public void setOptionId(Integer optionId) {
    this.optionId = optionId;
  }


  public BundleDataLinkInterface position(Integer position) {
    this.position = position;
    return this;
  }

  /**
   * Position
   * @return position
   */
  @javax.annotation.Nullable
  public Integer getPosition() {
    return position;
  }

  public void setPosition(Integer position) {
    this.position = position;
  }


  public BundleDataLinkInterface price(BigDecimal price) {
    this.price = price;
    return this;
  }

  /**
   * Price
   * @return price
   */
  @javax.annotation.Nonnull
  public BigDecimal getPrice() {
    return price;
  }

  public void setPrice(BigDecimal price) {
    this.price = price;
  }


  public BundleDataLinkInterface priceType(Integer priceType) {
    this.priceType = priceType;
    return this;
  }

  /**
   * Price type
   * @return priceType
   */
  @javax.annotation.Nonnull
  public Integer getPriceType() {
    return priceType;
  }

  public void setPriceType(Integer priceType) {
    this.priceType = priceType;
  }


  public BundleDataLinkInterface qty(BigDecimal qty) {
    this.qty = qty;
    return this;
  }

  /**
   * Qty
   * @return qty
   */
  @javax.annotation.Nullable
  public BigDecimal getQty() {
    return qty;
  }

  public void setQty(BigDecimal qty) {
    this.qty = qty;
  }


  public BundleDataLinkInterface sku(String sku) {
    this.sku = sku;
    return this;
  }

  /**
   * Linked product sku
   * @return sku
   */
  @javax.annotation.Nullable
  public String getSku() {
    return sku;
  }

  public void setSku(String sku) {
    this.sku = sku;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BundleDataLinkInterface bundleDataLinkInterface = (BundleDataLinkInterface) o;
    return Objects.equals(this.canChangeQuantity, bundleDataLinkInterface.canChangeQuantity) &&
        Objects.equals(this.extensionAttributes, bundleDataLinkInterface.extensionAttributes) &&
        Objects.equals(this.id, bundleDataLinkInterface.id) &&
        Objects.equals(this.isDefault, bundleDataLinkInterface.isDefault) &&
        Objects.equals(this.optionId, bundleDataLinkInterface.optionId) &&
        Objects.equals(this.position, bundleDataLinkInterface.position) &&
        Objects.equals(this.price, bundleDataLinkInterface.price) &&
        Objects.equals(this.priceType, bundleDataLinkInterface.priceType) &&
        Objects.equals(this.qty, bundleDataLinkInterface.qty) &&
        Objects.equals(this.sku, bundleDataLinkInterface.sku);
  }

  @Override
  public int hashCode() {
    return Objects.hash(canChangeQuantity, extensionAttributes, id, isDefault, optionId, position, price, priceType, qty, sku);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BundleDataLinkInterface {\n");
    sb.append("    canChangeQuantity: ").append(toIndentedString(canChangeQuantity)).append("\n");
    sb.append("    extensionAttributes: ").append(toIndentedString(extensionAttributes)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    isDefault: ").append(toIndentedString(isDefault)).append("\n");
    sb.append("    optionId: ").append(toIndentedString(optionId)).append("\n");
    sb.append("    position: ").append(toIndentedString(position)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    priceType: ").append(toIndentedString(priceType)).append("\n");
    sb.append("    qty: ").append(toIndentedString(qty)).append("\n");
    sb.append("    sku: ").append(toIndentedString(sku)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("can_change_quantity");
    openapiFields.add("extension_attributes");
    openapiFields.add("id");
    openapiFields.add("is_default");
    openapiFields.add("option_id");
    openapiFields.add("position");
    openapiFields.add("price");
    openapiFields.add("price_type");
    openapiFields.add("qty");
    openapiFields.add("sku");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("is_default");
    openapiRequiredFields.add("price");
    openapiRequiredFields.add("price_type");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to BundleDataLinkInterface
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!BundleDataLinkInterface.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in BundleDataLinkInterface is not found in the empty JSON string", BundleDataLinkInterface.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!BundleDataLinkInterface.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `BundleDataLinkInterface` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : BundleDataLinkInterface.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("sku") != null && !jsonObj.get("sku").isJsonNull()) && !jsonObj.get("sku").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sku` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sku").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!BundleDataLinkInterface.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'BundleDataLinkInterface' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<BundleDataLinkInterface> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(BundleDataLinkInterface.class));

       return (TypeAdapter<T>) new TypeAdapter<BundleDataLinkInterface>() {
           @Override
           public void write(JsonWriter out, BundleDataLinkInterface value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public BundleDataLinkInterface read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of BundleDataLinkInterface given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of BundleDataLinkInterface
   * @throws IOException if the JSON string is invalid with respect to BundleDataLinkInterface
   */
  public static BundleDataLinkInterface fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, BundleDataLinkInterface.class);
  }

  /**
   * Convert an instance of BundleDataLinkInterface to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

