/*
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Interface CouponInterface
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:00:51.810681-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class SalesRuleDataCouponInterface {
  public static final String SERIALIZED_NAME_CODE = "code";
  @SerializedName(SERIALIZED_NAME_CODE)
  private String code;

  public static final String SERIALIZED_NAME_COUPON_ID = "coupon_id";
  @SerializedName(SERIALIZED_NAME_COUPON_ID)
  private Integer couponId;

  public static final String SERIALIZED_NAME_CREATED_AT = "created_at";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private String createdAt;

  public static final String SERIALIZED_NAME_EXPIRATION_DATE = "expiration_date";
  @SerializedName(SERIALIZED_NAME_EXPIRATION_DATE)
  private String expirationDate;

  public static final String SERIALIZED_NAME_EXTENSION_ATTRIBUTES = "extension_attributes";
  @SerializedName(SERIALIZED_NAME_EXTENSION_ATTRIBUTES)
  private Object extensionAttributes;

  public static final String SERIALIZED_NAME_IS_PRIMARY = "is_primary";
  @SerializedName(SERIALIZED_NAME_IS_PRIMARY)
  private Boolean isPrimary;

  public static final String SERIALIZED_NAME_RULE_ID = "rule_id";
  @SerializedName(SERIALIZED_NAME_RULE_ID)
  private Integer ruleId;

  public static final String SERIALIZED_NAME_TIMES_USED = "times_used";
  @SerializedName(SERIALIZED_NAME_TIMES_USED)
  private Integer timesUsed;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private Integer type;

  public static final String SERIALIZED_NAME_USAGE_LIMIT = "usage_limit";
  @SerializedName(SERIALIZED_NAME_USAGE_LIMIT)
  private Integer usageLimit;

  public static final String SERIALIZED_NAME_USAGE_PER_CUSTOMER = "usage_per_customer";
  @SerializedName(SERIALIZED_NAME_USAGE_PER_CUSTOMER)
  private Integer usagePerCustomer;

  public SalesRuleDataCouponInterface() {
  }

  public SalesRuleDataCouponInterface code(String code) {
    this.code = code;
    return this;
  }

  /**
   * Coupon code
   * @return code
   */
  @javax.annotation.Nullable
  public String getCode() {
    return code;
  }

  public void setCode(String code) {
    this.code = code;
  }


  public SalesRuleDataCouponInterface couponId(Integer couponId) {
    this.couponId = couponId;
    return this;
  }

  /**
   * Coupon id
   * @return couponId
   */
  @javax.annotation.Nullable
  public Integer getCouponId() {
    return couponId;
  }

  public void setCouponId(Integer couponId) {
    this.couponId = couponId;
  }


  public SalesRuleDataCouponInterface createdAt(String createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  /**
   * When the coupon is created
   * @return createdAt
   */
  @javax.annotation.Nullable
  public String getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(String createdAt) {
    this.createdAt = createdAt;
  }


  public SalesRuleDataCouponInterface expirationDate(String expirationDate) {
    this.expirationDate = expirationDate;
    return this;
  }

  /**
   * Expiration date
   * @return expirationDate
   */
  @javax.annotation.Nullable
  public String getExpirationDate() {
    return expirationDate;
  }

  public void setExpirationDate(String expirationDate) {
    this.expirationDate = expirationDate;
  }


  public SalesRuleDataCouponInterface extensionAttributes(Object extensionAttributes) {
    this.extensionAttributes = extensionAttributes;
    return this;
  }

  /**
   * ExtensionInterface class for @see \\Magento\\SalesRule\\Api\\Data\\CouponInterface
   * @return extensionAttributes
   */
  @javax.annotation.Nullable
  public Object getExtensionAttributes() {
    return extensionAttributes;
  }

  public void setExtensionAttributes(Object extensionAttributes) {
    this.extensionAttributes = extensionAttributes;
  }


  public SalesRuleDataCouponInterface isPrimary(Boolean isPrimary) {
    this.isPrimary = isPrimary;
    return this;
  }

  /**
   * The coupon is primary coupon for the rule that it&#39;s associated with
   * @return isPrimary
   */
  @javax.annotation.Nonnull
  public Boolean getIsPrimary() {
    return isPrimary;
  }

  public void setIsPrimary(Boolean isPrimary) {
    this.isPrimary = isPrimary;
  }


  public SalesRuleDataCouponInterface ruleId(Integer ruleId) {
    this.ruleId = ruleId;
    return this;
  }

  /**
   * The id of the rule associated with the coupon
   * @return ruleId
   */
  @javax.annotation.Nonnull
  public Integer getRuleId() {
    return ruleId;
  }

  public void setRuleId(Integer ruleId) {
    this.ruleId = ruleId;
  }


  public SalesRuleDataCouponInterface timesUsed(Integer timesUsed) {
    this.timesUsed = timesUsed;
    return this;
  }

  /**
   * The number of times the coupon has been used
   * @return timesUsed
   */
  @javax.annotation.Nonnull
  public Integer getTimesUsed() {
    return timesUsed;
  }

  public void setTimesUsed(Integer timesUsed) {
    this.timesUsed = timesUsed;
  }


  public SalesRuleDataCouponInterface type(Integer type) {
    this.type = type;
    return this;
  }

  /**
   * Of coupon
   * @return type
   */
  @javax.annotation.Nullable
  public Integer getType() {
    return type;
  }

  public void setType(Integer type) {
    this.type = type;
  }


  public SalesRuleDataCouponInterface usageLimit(Integer usageLimit) {
    this.usageLimit = usageLimit;
    return this;
  }

  /**
   * Usage limit
   * @return usageLimit
   */
  @javax.annotation.Nullable
  public Integer getUsageLimit() {
    return usageLimit;
  }

  public void setUsageLimit(Integer usageLimit) {
    this.usageLimit = usageLimit;
  }


  public SalesRuleDataCouponInterface usagePerCustomer(Integer usagePerCustomer) {
    this.usagePerCustomer = usagePerCustomer;
    return this;
  }

  /**
   * Usage limit per customer
   * @return usagePerCustomer
   */
  @javax.annotation.Nullable
  public Integer getUsagePerCustomer() {
    return usagePerCustomer;
  }

  public void setUsagePerCustomer(Integer usagePerCustomer) {
    this.usagePerCustomer = usagePerCustomer;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SalesRuleDataCouponInterface salesRuleDataCouponInterface = (SalesRuleDataCouponInterface) o;
    return Objects.equals(this.code, salesRuleDataCouponInterface.code) &&
        Objects.equals(this.couponId, salesRuleDataCouponInterface.couponId) &&
        Objects.equals(this.createdAt, salesRuleDataCouponInterface.createdAt) &&
        Objects.equals(this.expirationDate, salesRuleDataCouponInterface.expirationDate) &&
        Objects.equals(this.extensionAttributes, salesRuleDataCouponInterface.extensionAttributes) &&
        Objects.equals(this.isPrimary, salesRuleDataCouponInterface.isPrimary) &&
        Objects.equals(this.ruleId, salesRuleDataCouponInterface.ruleId) &&
        Objects.equals(this.timesUsed, salesRuleDataCouponInterface.timesUsed) &&
        Objects.equals(this.type, salesRuleDataCouponInterface.type) &&
        Objects.equals(this.usageLimit, salesRuleDataCouponInterface.usageLimit) &&
        Objects.equals(this.usagePerCustomer, salesRuleDataCouponInterface.usagePerCustomer);
  }

  @Override
  public int hashCode() {
    return Objects.hash(code, couponId, createdAt, expirationDate, extensionAttributes, isPrimary, ruleId, timesUsed, type, usageLimit, usagePerCustomer);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SalesRuleDataCouponInterface {\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    couponId: ").append(toIndentedString(couponId)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    expirationDate: ").append(toIndentedString(expirationDate)).append("\n");
    sb.append("    extensionAttributes: ").append(toIndentedString(extensionAttributes)).append("\n");
    sb.append("    isPrimary: ").append(toIndentedString(isPrimary)).append("\n");
    sb.append("    ruleId: ").append(toIndentedString(ruleId)).append("\n");
    sb.append("    timesUsed: ").append(toIndentedString(timesUsed)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    usageLimit: ").append(toIndentedString(usageLimit)).append("\n");
    sb.append("    usagePerCustomer: ").append(toIndentedString(usagePerCustomer)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("code");
    openapiFields.add("coupon_id");
    openapiFields.add("created_at");
    openapiFields.add("expiration_date");
    openapiFields.add("extension_attributes");
    openapiFields.add("is_primary");
    openapiFields.add("rule_id");
    openapiFields.add("times_used");
    openapiFields.add("type");
    openapiFields.add("usage_limit");
    openapiFields.add("usage_per_customer");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("is_primary");
    openapiRequiredFields.add("rule_id");
    openapiRequiredFields.add("times_used");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to SalesRuleDataCouponInterface
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!SalesRuleDataCouponInterface.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in SalesRuleDataCouponInterface is not found in the empty JSON string", SalesRuleDataCouponInterface.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!SalesRuleDataCouponInterface.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `SalesRuleDataCouponInterface` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : SalesRuleDataCouponInterface.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("code") != null && !jsonObj.get("code").isJsonNull()) && !jsonObj.get("code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("code").toString()));
      }
      if ((jsonObj.get("created_at") != null && !jsonObj.get("created_at").isJsonNull()) && !jsonObj.get("created_at").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `created_at` to be a primitive type in the JSON string but got `%s`", jsonObj.get("created_at").toString()));
      }
      if ((jsonObj.get("expiration_date") != null && !jsonObj.get("expiration_date").isJsonNull()) && !jsonObj.get("expiration_date").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `expiration_date` to be a primitive type in the JSON string but got `%s`", jsonObj.get("expiration_date").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SalesRuleDataCouponInterface.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SalesRuleDataCouponInterface' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SalesRuleDataCouponInterface> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SalesRuleDataCouponInterface.class));

       return (TypeAdapter<T>) new TypeAdapter<SalesRuleDataCouponInterface>() {
           @Override
           public void write(JsonWriter out, SalesRuleDataCouponInterface value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public SalesRuleDataCouponInterface read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of SalesRuleDataCouponInterface given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of SalesRuleDataCouponInterface
   * @throws IOException if the JSON string is invalid with respect to SalesRuleDataCouponInterface
   */
  public static SalesRuleDataCouponInterface fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SalesRuleDataCouponInterface.class);
  }

  /**
   * Convert an instance of SalesRuleDataCouponInterface to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

