/*
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Credit Limit data transfer object interface.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:00:51.810681-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CompanyCreditDataCreditLimitInterface {
  public static final String SERIALIZED_NAME_AVAILABLE_LIMIT = "available_limit";
  @SerializedName(SERIALIZED_NAME_AVAILABLE_LIMIT)
  private BigDecimal availableLimit;

  public static final String SERIALIZED_NAME_BALANCE = "balance";
  @SerializedName(SERIALIZED_NAME_BALANCE)
  private BigDecimal balance;

  public static final String SERIALIZED_NAME_COMPANY_ID = "company_id";
  @SerializedName(SERIALIZED_NAME_COMPANY_ID)
  private Integer companyId;

  public static final String SERIALIZED_NAME_CREDIT_COMMENT = "credit_comment";
  @SerializedName(SERIALIZED_NAME_CREDIT_COMMENT)
  private String creditComment;

  public static final String SERIALIZED_NAME_CREDIT_LIMIT = "credit_limit";
  @SerializedName(SERIALIZED_NAME_CREDIT_LIMIT)
  private BigDecimal creditLimit;

  public static final String SERIALIZED_NAME_CURRENCY_CODE = "currency_code";
  @SerializedName(SERIALIZED_NAME_CURRENCY_CODE)
  private String currencyCode;

  public static final String SERIALIZED_NAME_EXCEED_LIMIT = "exceed_limit";
  @SerializedName(SERIALIZED_NAME_EXCEED_LIMIT)
  private Boolean exceedLimit;

  public static final String SERIALIZED_NAME_EXTENSION_ATTRIBUTES = "extension_attributes";
  @SerializedName(SERIALIZED_NAME_EXTENSION_ATTRIBUTES)
  private Object extensionAttributes;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public CompanyCreditDataCreditLimitInterface() {
  }

  public CompanyCreditDataCreditLimitInterface availableLimit(BigDecimal availableLimit) {
    this.availableLimit = availableLimit;
    return this;
  }

  /**
   * Available Limit.
   * @return availableLimit
   */
  @javax.annotation.Nullable
  public BigDecimal getAvailableLimit() {
    return availableLimit;
  }

  public void setAvailableLimit(BigDecimal availableLimit) {
    this.availableLimit = availableLimit;
  }


  public CompanyCreditDataCreditLimitInterface balance(BigDecimal balance) {
    this.balance = balance;
    return this;
  }

  /**
   * Balance.
   * @return balance
   */
  @javax.annotation.Nullable
  public BigDecimal getBalance() {
    return balance;
  }

  public void setBalance(BigDecimal balance) {
    this.balance = balance;
  }


  public CompanyCreditDataCreditLimitInterface companyId(Integer companyId) {
    this.companyId = companyId;
    return this;
  }

  /**
   * Company id.
   * @return companyId
   */
  @javax.annotation.Nullable
  public Integer getCompanyId() {
    return companyId;
  }

  public void setCompanyId(Integer companyId) {
    this.companyId = companyId;
  }


  public CompanyCreditDataCreditLimitInterface creditComment(String creditComment) {
    this.creditComment = creditComment;
    return this;
  }

  /**
   * Credit comment for company credit history.
   * @return creditComment
   */
  @javax.annotation.Nullable
  public String getCreditComment() {
    return creditComment;
  }

  public void setCreditComment(String creditComment) {
    this.creditComment = creditComment;
  }


  public CompanyCreditDataCreditLimitInterface creditLimit(BigDecimal creditLimit) {
    this.creditLimit = creditLimit;
    return this;
  }

  /**
   * Credit Limit.
   * @return creditLimit
   */
  @javax.annotation.Nullable
  public BigDecimal getCreditLimit() {
    return creditLimit;
  }

  public void setCreditLimit(BigDecimal creditLimit) {
    this.creditLimit = creditLimit;
  }


  public CompanyCreditDataCreditLimitInterface currencyCode(String currencyCode) {
    this.currencyCode = currencyCode;
    return this;
  }

  /**
   * Currency Code.
   * @return currencyCode
   */
  @javax.annotation.Nullable
  public String getCurrencyCode() {
    return currencyCode;
  }

  public void setCurrencyCode(String currencyCode) {
    this.currencyCode = currencyCode;
  }


  public CompanyCreditDataCreditLimitInterface exceedLimit(Boolean exceedLimit) {
    this.exceedLimit = exceedLimit;
    return this;
  }

  /**
   * Exceed Limit.
   * @return exceedLimit
   */
  @javax.annotation.Nonnull
  public Boolean getExceedLimit() {
    return exceedLimit;
  }

  public void setExceedLimit(Boolean exceedLimit) {
    this.exceedLimit = exceedLimit;
  }


  public CompanyCreditDataCreditLimitInterface extensionAttributes(Object extensionAttributes) {
    this.extensionAttributes = extensionAttributes;
    return this;
  }

  /**
   * ExtensionInterface class for @see \\Magento\\CompanyCredit\\Api\\Data\\CreditLimitInterface
   * @return extensionAttributes
   */
  @javax.annotation.Nullable
  public Object getExtensionAttributes() {
    return extensionAttributes;
  }

  public void setExtensionAttributes(Object extensionAttributes) {
    this.extensionAttributes = extensionAttributes;
  }


  public CompanyCreditDataCreditLimitInterface id(Integer id) {
    this.id = id;
    return this;
  }

  /**
   * ID.
   * @return id
   */
  @javax.annotation.Nullable
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CompanyCreditDataCreditLimitInterface companyCreditDataCreditLimitInterface = (CompanyCreditDataCreditLimitInterface) o;
    return Objects.equals(this.availableLimit, companyCreditDataCreditLimitInterface.availableLimit) &&
        Objects.equals(this.balance, companyCreditDataCreditLimitInterface.balance) &&
        Objects.equals(this.companyId, companyCreditDataCreditLimitInterface.companyId) &&
        Objects.equals(this.creditComment, companyCreditDataCreditLimitInterface.creditComment) &&
        Objects.equals(this.creditLimit, companyCreditDataCreditLimitInterface.creditLimit) &&
        Objects.equals(this.currencyCode, companyCreditDataCreditLimitInterface.currencyCode) &&
        Objects.equals(this.exceedLimit, companyCreditDataCreditLimitInterface.exceedLimit) &&
        Objects.equals(this.extensionAttributes, companyCreditDataCreditLimitInterface.extensionAttributes) &&
        Objects.equals(this.id, companyCreditDataCreditLimitInterface.id);
  }

  @Override
  public int hashCode() {
    return Objects.hash(availableLimit, balance, companyId, creditComment, creditLimit, currencyCode, exceedLimit, extensionAttributes, id);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CompanyCreditDataCreditLimitInterface {\n");
    sb.append("    availableLimit: ").append(toIndentedString(availableLimit)).append("\n");
    sb.append("    balance: ").append(toIndentedString(balance)).append("\n");
    sb.append("    companyId: ").append(toIndentedString(companyId)).append("\n");
    sb.append("    creditComment: ").append(toIndentedString(creditComment)).append("\n");
    sb.append("    creditLimit: ").append(toIndentedString(creditLimit)).append("\n");
    sb.append("    currencyCode: ").append(toIndentedString(currencyCode)).append("\n");
    sb.append("    exceedLimit: ").append(toIndentedString(exceedLimit)).append("\n");
    sb.append("    extensionAttributes: ").append(toIndentedString(extensionAttributes)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("available_limit");
    openapiFields.add("balance");
    openapiFields.add("company_id");
    openapiFields.add("credit_comment");
    openapiFields.add("credit_limit");
    openapiFields.add("currency_code");
    openapiFields.add("exceed_limit");
    openapiFields.add("extension_attributes");
    openapiFields.add("id");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("exceed_limit");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CompanyCreditDataCreditLimitInterface
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CompanyCreditDataCreditLimitInterface.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CompanyCreditDataCreditLimitInterface is not found in the empty JSON string", CompanyCreditDataCreditLimitInterface.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CompanyCreditDataCreditLimitInterface.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CompanyCreditDataCreditLimitInterface` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CompanyCreditDataCreditLimitInterface.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("credit_comment") != null && !jsonObj.get("credit_comment").isJsonNull()) && !jsonObj.get("credit_comment").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `credit_comment` to be a primitive type in the JSON string but got `%s`", jsonObj.get("credit_comment").toString()));
      }
      if ((jsonObj.get("currency_code") != null && !jsonObj.get("currency_code").isJsonNull()) && !jsonObj.get("currency_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `currency_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("currency_code").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CompanyCreditDataCreditLimitInterface.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CompanyCreditDataCreditLimitInterface' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CompanyCreditDataCreditLimitInterface> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CompanyCreditDataCreditLimitInterface.class));

       return (TypeAdapter<T>) new TypeAdapter<CompanyCreditDataCreditLimitInterface>() {
           @Override
           public void write(JsonWriter out, CompanyCreditDataCreditLimitInterface value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CompanyCreditDataCreditLimitInterface read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CompanyCreditDataCreditLimitInterface given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CompanyCreditDataCreditLimitInterface
   * @throws IOException if the JSON string is invalid with respect to CompanyCreditDataCreditLimitInterface
   */
  public static CompanyCreditDataCreditLimitInterface fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CompanyCreditDataCreditLimitInterface.class);
  }

  /**
   * Convert an instance of CompanyCreditDataCreditLimitInterface to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

