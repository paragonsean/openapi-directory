/*
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.SalesDataCreditmemoCommentInterface;
import org.openapitools.client.model.SalesDataCreditmemoExtensionInterface;
import org.openapitools.client.model.SalesDataCreditmemoItemInterface;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Credit memo interface. After a customer places and pays for an order and an invoice has been issued, the merchant can create a credit memo to refund all or part of the amount paid for any returned or undelivered items. The memo restores funds to the customer account so that the customer can make future purchases.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:00:51.810681-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class SalesDataCreditmemoInterface {
  public static final String SERIALIZED_NAME_ADJUSTMENT = "adjustment";
  @SerializedName(SERIALIZED_NAME_ADJUSTMENT)
  private BigDecimal adjustment;

  public static final String SERIALIZED_NAME_ADJUSTMENT_NEGATIVE = "adjustment_negative";
  @SerializedName(SERIALIZED_NAME_ADJUSTMENT_NEGATIVE)
  private BigDecimal adjustmentNegative;

  public static final String SERIALIZED_NAME_ADJUSTMENT_POSITIVE = "adjustment_positive";
  @SerializedName(SERIALIZED_NAME_ADJUSTMENT_POSITIVE)
  private BigDecimal adjustmentPositive;

  public static final String SERIALIZED_NAME_BASE_ADJUSTMENT = "base_adjustment";
  @SerializedName(SERIALIZED_NAME_BASE_ADJUSTMENT)
  private BigDecimal baseAdjustment;

  public static final String SERIALIZED_NAME_BASE_ADJUSTMENT_NEGATIVE = "base_adjustment_negative";
  @SerializedName(SERIALIZED_NAME_BASE_ADJUSTMENT_NEGATIVE)
  private BigDecimal baseAdjustmentNegative;

  public static final String SERIALIZED_NAME_BASE_ADJUSTMENT_POSITIVE = "base_adjustment_positive";
  @SerializedName(SERIALIZED_NAME_BASE_ADJUSTMENT_POSITIVE)
  private BigDecimal baseAdjustmentPositive;

  public static final String SERIALIZED_NAME_BASE_CURRENCY_CODE = "base_currency_code";
  @SerializedName(SERIALIZED_NAME_BASE_CURRENCY_CODE)
  private String baseCurrencyCode;

  public static final String SERIALIZED_NAME_BASE_DISCOUNT_AMOUNT = "base_discount_amount";
  @SerializedName(SERIALIZED_NAME_BASE_DISCOUNT_AMOUNT)
  private BigDecimal baseDiscountAmount;

  public static final String SERIALIZED_NAME_BASE_DISCOUNT_TAX_COMPENSATION_AMOUNT = "base_discount_tax_compensation_amount";
  @SerializedName(SERIALIZED_NAME_BASE_DISCOUNT_TAX_COMPENSATION_AMOUNT)
  private BigDecimal baseDiscountTaxCompensationAmount;

  public static final String SERIALIZED_NAME_BASE_GRAND_TOTAL = "base_grand_total";
  @SerializedName(SERIALIZED_NAME_BASE_GRAND_TOTAL)
  private BigDecimal baseGrandTotal;

  public static final String SERIALIZED_NAME_BASE_SHIPPING_AMOUNT = "base_shipping_amount";
  @SerializedName(SERIALIZED_NAME_BASE_SHIPPING_AMOUNT)
  private BigDecimal baseShippingAmount;

  public static final String SERIALIZED_NAME_BASE_SHIPPING_DISCOUNT_TAX_COMPENSATION_AMNT = "base_shipping_discount_tax_compensation_amnt";
  @SerializedName(SERIALIZED_NAME_BASE_SHIPPING_DISCOUNT_TAX_COMPENSATION_AMNT)
  private BigDecimal baseShippingDiscountTaxCompensationAmnt;

  public static final String SERIALIZED_NAME_BASE_SHIPPING_INCL_TAX = "base_shipping_incl_tax";
  @SerializedName(SERIALIZED_NAME_BASE_SHIPPING_INCL_TAX)
  private BigDecimal baseShippingInclTax;

  public static final String SERIALIZED_NAME_BASE_SHIPPING_TAX_AMOUNT = "base_shipping_tax_amount";
  @SerializedName(SERIALIZED_NAME_BASE_SHIPPING_TAX_AMOUNT)
  private BigDecimal baseShippingTaxAmount;

  public static final String SERIALIZED_NAME_BASE_SUBTOTAL = "base_subtotal";
  @SerializedName(SERIALIZED_NAME_BASE_SUBTOTAL)
  private BigDecimal baseSubtotal;

  public static final String SERIALIZED_NAME_BASE_SUBTOTAL_INCL_TAX = "base_subtotal_incl_tax";
  @SerializedName(SERIALIZED_NAME_BASE_SUBTOTAL_INCL_TAX)
  private BigDecimal baseSubtotalInclTax;

  public static final String SERIALIZED_NAME_BASE_TAX_AMOUNT = "base_tax_amount";
  @SerializedName(SERIALIZED_NAME_BASE_TAX_AMOUNT)
  private BigDecimal baseTaxAmount;

  public static final String SERIALIZED_NAME_BASE_TO_GLOBAL_RATE = "base_to_global_rate";
  @SerializedName(SERIALIZED_NAME_BASE_TO_GLOBAL_RATE)
  private BigDecimal baseToGlobalRate;

  public static final String SERIALIZED_NAME_BASE_TO_ORDER_RATE = "base_to_order_rate";
  @SerializedName(SERIALIZED_NAME_BASE_TO_ORDER_RATE)
  private BigDecimal baseToOrderRate;

  public static final String SERIALIZED_NAME_BILLING_ADDRESS_ID = "billing_address_id";
  @SerializedName(SERIALIZED_NAME_BILLING_ADDRESS_ID)
  private Integer billingAddressId;

  public static final String SERIALIZED_NAME_COMMENTS = "comments";
  @SerializedName(SERIALIZED_NAME_COMMENTS)
  private List<SalesDataCreditmemoCommentInterface> comments = new ArrayList<>();

  public static final String SERIALIZED_NAME_CREATED_AT = "created_at";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private String createdAt;

  public static final String SERIALIZED_NAME_CREDITMEMO_STATUS = "creditmemo_status";
  @SerializedName(SERIALIZED_NAME_CREDITMEMO_STATUS)
  private Integer creditmemoStatus;

  public static final String SERIALIZED_NAME_DISCOUNT_AMOUNT = "discount_amount";
  @SerializedName(SERIALIZED_NAME_DISCOUNT_AMOUNT)
  private BigDecimal discountAmount;

  public static final String SERIALIZED_NAME_DISCOUNT_DESCRIPTION = "discount_description";
  @SerializedName(SERIALIZED_NAME_DISCOUNT_DESCRIPTION)
  private String discountDescription;

  public static final String SERIALIZED_NAME_DISCOUNT_TAX_COMPENSATION_AMOUNT = "discount_tax_compensation_amount";
  @SerializedName(SERIALIZED_NAME_DISCOUNT_TAX_COMPENSATION_AMOUNT)
  private BigDecimal discountTaxCompensationAmount;

  public static final String SERIALIZED_NAME_EMAIL_SENT = "email_sent";
  @SerializedName(SERIALIZED_NAME_EMAIL_SENT)
  private Integer emailSent;

  public static final String SERIALIZED_NAME_ENTITY_ID = "entity_id";
  @SerializedName(SERIALIZED_NAME_ENTITY_ID)
  private Integer entityId;

  public static final String SERIALIZED_NAME_EXTENSION_ATTRIBUTES = "extension_attributes";
  @SerializedName(SERIALIZED_NAME_EXTENSION_ATTRIBUTES)
  private SalesDataCreditmemoExtensionInterface extensionAttributes;

  public static final String SERIALIZED_NAME_GLOBAL_CURRENCY_CODE = "global_currency_code";
  @SerializedName(SERIALIZED_NAME_GLOBAL_CURRENCY_CODE)
  private String globalCurrencyCode;

  public static final String SERIALIZED_NAME_GRAND_TOTAL = "grand_total";
  @SerializedName(SERIALIZED_NAME_GRAND_TOTAL)
  private BigDecimal grandTotal;

  public static final String SERIALIZED_NAME_INCREMENT_ID = "increment_id";
  @SerializedName(SERIALIZED_NAME_INCREMENT_ID)
  private String incrementId;

  public static final String SERIALIZED_NAME_INVOICE_ID = "invoice_id";
  @SerializedName(SERIALIZED_NAME_INVOICE_ID)
  private Integer invoiceId;

  public static final String SERIALIZED_NAME_ITEMS = "items";
  @SerializedName(SERIALIZED_NAME_ITEMS)
  private List<SalesDataCreditmemoItemInterface> items = new ArrayList<>();

  public static final String SERIALIZED_NAME_ORDER_CURRENCY_CODE = "order_currency_code";
  @SerializedName(SERIALIZED_NAME_ORDER_CURRENCY_CODE)
  private String orderCurrencyCode;

  public static final String SERIALIZED_NAME_ORDER_ID = "order_id";
  @SerializedName(SERIALIZED_NAME_ORDER_ID)
  private Integer orderId;

  public static final String SERIALIZED_NAME_SHIPPING_ADDRESS_ID = "shipping_address_id";
  @SerializedName(SERIALIZED_NAME_SHIPPING_ADDRESS_ID)
  private Integer shippingAddressId;

  public static final String SERIALIZED_NAME_SHIPPING_AMOUNT = "shipping_amount";
  @SerializedName(SERIALIZED_NAME_SHIPPING_AMOUNT)
  private BigDecimal shippingAmount;

  public static final String SERIALIZED_NAME_SHIPPING_DISCOUNT_TAX_COMPENSATION_AMOUNT = "shipping_discount_tax_compensation_amount";
  @SerializedName(SERIALIZED_NAME_SHIPPING_DISCOUNT_TAX_COMPENSATION_AMOUNT)
  private BigDecimal shippingDiscountTaxCompensationAmount;

  public static final String SERIALIZED_NAME_SHIPPING_INCL_TAX = "shipping_incl_tax";
  @SerializedName(SERIALIZED_NAME_SHIPPING_INCL_TAX)
  private BigDecimal shippingInclTax;

  public static final String SERIALIZED_NAME_SHIPPING_TAX_AMOUNT = "shipping_tax_amount";
  @SerializedName(SERIALIZED_NAME_SHIPPING_TAX_AMOUNT)
  private BigDecimal shippingTaxAmount;

  public static final String SERIALIZED_NAME_STATE = "state";
  @SerializedName(SERIALIZED_NAME_STATE)
  private Integer state;

  public static final String SERIALIZED_NAME_STORE_CURRENCY_CODE = "store_currency_code";
  @SerializedName(SERIALIZED_NAME_STORE_CURRENCY_CODE)
  private String storeCurrencyCode;

  public static final String SERIALIZED_NAME_STORE_ID = "store_id";
  @SerializedName(SERIALIZED_NAME_STORE_ID)
  private Integer storeId;

  public static final String SERIALIZED_NAME_STORE_TO_BASE_RATE = "store_to_base_rate";
  @SerializedName(SERIALIZED_NAME_STORE_TO_BASE_RATE)
  private BigDecimal storeToBaseRate;

  public static final String SERIALIZED_NAME_STORE_TO_ORDER_RATE = "store_to_order_rate";
  @SerializedName(SERIALIZED_NAME_STORE_TO_ORDER_RATE)
  private BigDecimal storeToOrderRate;

  public static final String SERIALIZED_NAME_SUBTOTAL = "subtotal";
  @SerializedName(SERIALIZED_NAME_SUBTOTAL)
  private BigDecimal subtotal;

  public static final String SERIALIZED_NAME_SUBTOTAL_INCL_TAX = "subtotal_incl_tax";
  @SerializedName(SERIALIZED_NAME_SUBTOTAL_INCL_TAX)
  private BigDecimal subtotalInclTax;

  public static final String SERIALIZED_NAME_TAX_AMOUNT = "tax_amount";
  @SerializedName(SERIALIZED_NAME_TAX_AMOUNT)
  private BigDecimal taxAmount;

  public static final String SERIALIZED_NAME_TRANSACTION_ID = "transaction_id";
  @SerializedName(SERIALIZED_NAME_TRANSACTION_ID)
  private String transactionId;

  public static final String SERIALIZED_NAME_UPDATED_AT = "updated_at";
  @SerializedName(SERIALIZED_NAME_UPDATED_AT)
  private String updatedAt;

  public SalesDataCreditmemoInterface() {
  }

  public SalesDataCreditmemoInterface adjustment(BigDecimal adjustment) {
    this.adjustment = adjustment;
    return this;
  }

  /**
   * Credit memo adjustment.
   * @return adjustment
   */
  @javax.annotation.Nullable
  public BigDecimal getAdjustment() {
    return adjustment;
  }

  public void setAdjustment(BigDecimal adjustment) {
    this.adjustment = adjustment;
  }


  public SalesDataCreditmemoInterface adjustmentNegative(BigDecimal adjustmentNegative) {
    this.adjustmentNegative = adjustmentNegative;
    return this;
  }

  /**
   * Credit memo negative adjustment.
   * @return adjustmentNegative
   */
  @javax.annotation.Nullable
  public BigDecimal getAdjustmentNegative() {
    return adjustmentNegative;
  }

  public void setAdjustmentNegative(BigDecimal adjustmentNegative) {
    this.adjustmentNegative = adjustmentNegative;
  }


  public SalesDataCreditmemoInterface adjustmentPositive(BigDecimal adjustmentPositive) {
    this.adjustmentPositive = adjustmentPositive;
    return this;
  }

  /**
   * Credit memo positive adjustment.
   * @return adjustmentPositive
   */
  @javax.annotation.Nullable
  public BigDecimal getAdjustmentPositive() {
    return adjustmentPositive;
  }

  public void setAdjustmentPositive(BigDecimal adjustmentPositive) {
    this.adjustmentPositive = adjustmentPositive;
  }


  public SalesDataCreditmemoInterface baseAdjustment(BigDecimal baseAdjustment) {
    this.baseAdjustment = baseAdjustment;
    return this;
  }

  /**
   * Credit memo base adjustment.
   * @return baseAdjustment
   */
  @javax.annotation.Nullable
  public BigDecimal getBaseAdjustment() {
    return baseAdjustment;
  }

  public void setBaseAdjustment(BigDecimal baseAdjustment) {
    this.baseAdjustment = baseAdjustment;
  }


  public SalesDataCreditmemoInterface baseAdjustmentNegative(BigDecimal baseAdjustmentNegative) {
    this.baseAdjustmentNegative = baseAdjustmentNegative;
    return this;
  }

  /**
   * Credit memo negative base adjustment.
   * @return baseAdjustmentNegative
   */
  @javax.annotation.Nullable
  public BigDecimal getBaseAdjustmentNegative() {
    return baseAdjustmentNegative;
  }

  public void setBaseAdjustmentNegative(BigDecimal baseAdjustmentNegative) {
    this.baseAdjustmentNegative = baseAdjustmentNegative;
  }


  public SalesDataCreditmemoInterface baseAdjustmentPositive(BigDecimal baseAdjustmentPositive) {
    this.baseAdjustmentPositive = baseAdjustmentPositive;
    return this;
  }

  /**
   * Credit memo positive base adjustment.
   * @return baseAdjustmentPositive
   */
  @javax.annotation.Nullable
  public BigDecimal getBaseAdjustmentPositive() {
    return baseAdjustmentPositive;
  }

  public void setBaseAdjustmentPositive(BigDecimal baseAdjustmentPositive) {
    this.baseAdjustmentPositive = baseAdjustmentPositive;
  }


  public SalesDataCreditmemoInterface baseCurrencyCode(String baseCurrencyCode) {
    this.baseCurrencyCode = baseCurrencyCode;
    return this;
  }

  /**
   * Credit memo base currency code.
   * @return baseCurrencyCode
   */
  @javax.annotation.Nullable
  public String getBaseCurrencyCode() {
    return baseCurrencyCode;
  }

  public void setBaseCurrencyCode(String baseCurrencyCode) {
    this.baseCurrencyCode = baseCurrencyCode;
  }


  public SalesDataCreditmemoInterface baseDiscountAmount(BigDecimal baseDiscountAmount) {
    this.baseDiscountAmount = baseDiscountAmount;
    return this;
  }

  /**
   * Credit memo base discount amount.
   * @return baseDiscountAmount
   */
  @javax.annotation.Nullable
  public BigDecimal getBaseDiscountAmount() {
    return baseDiscountAmount;
  }

  public void setBaseDiscountAmount(BigDecimal baseDiscountAmount) {
    this.baseDiscountAmount = baseDiscountAmount;
  }


  public SalesDataCreditmemoInterface baseDiscountTaxCompensationAmount(BigDecimal baseDiscountTaxCompensationAmount) {
    this.baseDiscountTaxCompensationAmount = baseDiscountTaxCompensationAmount;
    return this;
  }

  /**
   * Credit memo base discount tax compensation amount.
   * @return baseDiscountTaxCompensationAmount
   */
  @javax.annotation.Nullable
  public BigDecimal getBaseDiscountTaxCompensationAmount() {
    return baseDiscountTaxCompensationAmount;
  }

  public void setBaseDiscountTaxCompensationAmount(BigDecimal baseDiscountTaxCompensationAmount) {
    this.baseDiscountTaxCompensationAmount = baseDiscountTaxCompensationAmount;
  }


  public SalesDataCreditmemoInterface baseGrandTotal(BigDecimal baseGrandTotal) {
    this.baseGrandTotal = baseGrandTotal;
    return this;
  }

  /**
   * Credit memo base grand total.
   * @return baseGrandTotal
   */
  @javax.annotation.Nullable
  public BigDecimal getBaseGrandTotal() {
    return baseGrandTotal;
  }

  public void setBaseGrandTotal(BigDecimal baseGrandTotal) {
    this.baseGrandTotal = baseGrandTotal;
  }


  public SalesDataCreditmemoInterface baseShippingAmount(BigDecimal baseShippingAmount) {
    this.baseShippingAmount = baseShippingAmount;
    return this;
  }

  /**
   * Credit memo base shipping amount.
   * @return baseShippingAmount
   */
  @javax.annotation.Nullable
  public BigDecimal getBaseShippingAmount() {
    return baseShippingAmount;
  }

  public void setBaseShippingAmount(BigDecimal baseShippingAmount) {
    this.baseShippingAmount = baseShippingAmount;
  }


  public SalesDataCreditmemoInterface baseShippingDiscountTaxCompensationAmnt(BigDecimal baseShippingDiscountTaxCompensationAmnt) {
    this.baseShippingDiscountTaxCompensationAmnt = baseShippingDiscountTaxCompensationAmnt;
    return this;
  }

  /**
   * Credit memo base shipping discount tax compensation amount.
   * @return baseShippingDiscountTaxCompensationAmnt
   */
  @javax.annotation.Nullable
  public BigDecimal getBaseShippingDiscountTaxCompensationAmnt() {
    return baseShippingDiscountTaxCompensationAmnt;
  }

  public void setBaseShippingDiscountTaxCompensationAmnt(BigDecimal baseShippingDiscountTaxCompensationAmnt) {
    this.baseShippingDiscountTaxCompensationAmnt = baseShippingDiscountTaxCompensationAmnt;
  }


  public SalesDataCreditmemoInterface baseShippingInclTax(BigDecimal baseShippingInclTax) {
    this.baseShippingInclTax = baseShippingInclTax;
    return this;
  }

  /**
   * Credit memo base shipping including tax.
   * @return baseShippingInclTax
   */
  @javax.annotation.Nullable
  public BigDecimal getBaseShippingInclTax() {
    return baseShippingInclTax;
  }

  public void setBaseShippingInclTax(BigDecimal baseShippingInclTax) {
    this.baseShippingInclTax = baseShippingInclTax;
  }


  public SalesDataCreditmemoInterface baseShippingTaxAmount(BigDecimal baseShippingTaxAmount) {
    this.baseShippingTaxAmount = baseShippingTaxAmount;
    return this;
  }

  /**
   * Credit memo base shipping tax amount.
   * @return baseShippingTaxAmount
   */
  @javax.annotation.Nullable
  public BigDecimal getBaseShippingTaxAmount() {
    return baseShippingTaxAmount;
  }

  public void setBaseShippingTaxAmount(BigDecimal baseShippingTaxAmount) {
    this.baseShippingTaxAmount = baseShippingTaxAmount;
  }


  public SalesDataCreditmemoInterface baseSubtotal(BigDecimal baseSubtotal) {
    this.baseSubtotal = baseSubtotal;
    return this;
  }

  /**
   * Credit memo base subtotal.
   * @return baseSubtotal
   */
  @javax.annotation.Nullable
  public BigDecimal getBaseSubtotal() {
    return baseSubtotal;
  }

  public void setBaseSubtotal(BigDecimal baseSubtotal) {
    this.baseSubtotal = baseSubtotal;
  }


  public SalesDataCreditmemoInterface baseSubtotalInclTax(BigDecimal baseSubtotalInclTax) {
    this.baseSubtotalInclTax = baseSubtotalInclTax;
    return this;
  }

  /**
   * Credit memo base subtotal including tax.
   * @return baseSubtotalInclTax
   */
  @javax.annotation.Nullable
  public BigDecimal getBaseSubtotalInclTax() {
    return baseSubtotalInclTax;
  }

  public void setBaseSubtotalInclTax(BigDecimal baseSubtotalInclTax) {
    this.baseSubtotalInclTax = baseSubtotalInclTax;
  }


  public SalesDataCreditmemoInterface baseTaxAmount(BigDecimal baseTaxAmount) {
    this.baseTaxAmount = baseTaxAmount;
    return this;
  }

  /**
   * Credit memo base tax amount.
   * @return baseTaxAmount
   */
  @javax.annotation.Nullable
  public BigDecimal getBaseTaxAmount() {
    return baseTaxAmount;
  }

  public void setBaseTaxAmount(BigDecimal baseTaxAmount) {
    this.baseTaxAmount = baseTaxAmount;
  }


  public SalesDataCreditmemoInterface baseToGlobalRate(BigDecimal baseToGlobalRate) {
    this.baseToGlobalRate = baseToGlobalRate;
    return this;
  }

  /**
   * Credit memo base-to-global rate.
   * @return baseToGlobalRate
   */
  @javax.annotation.Nullable
  public BigDecimal getBaseToGlobalRate() {
    return baseToGlobalRate;
  }

  public void setBaseToGlobalRate(BigDecimal baseToGlobalRate) {
    this.baseToGlobalRate = baseToGlobalRate;
  }


  public SalesDataCreditmemoInterface baseToOrderRate(BigDecimal baseToOrderRate) {
    this.baseToOrderRate = baseToOrderRate;
    return this;
  }

  /**
   * Credit memo base-to-order rate.
   * @return baseToOrderRate
   */
  @javax.annotation.Nullable
  public BigDecimal getBaseToOrderRate() {
    return baseToOrderRate;
  }

  public void setBaseToOrderRate(BigDecimal baseToOrderRate) {
    this.baseToOrderRate = baseToOrderRate;
  }


  public SalesDataCreditmemoInterface billingAddressId(Integer billingAddressId) {
    this.billingAddressId = billingAddressId;
    return this;
  }

  /**
   * Credit memo billing address ID.
   * @return billingAddressId
   */
  @javax.annotation.Nullable
  public Integer getBillingAddressId() {
    return billingAddressId;
  }

  public void setBillingAddressId(Integer billingAddressId) {
    this.billingAddressId = billingAddressId;
  }


  public SalesDataCreditmemoInterface comments(List<SalesDataCreditmemoCommentInterface> comments) {
    this.comments = comments;
    return this;
  }

  public SalesDataCreditmemoInterface addCommentsItem(SalesDataCreditmemoCommentInterface commentsItem) {
    if (this.comments == null) {
      this.comments = new ArrayList<>();
    }
    this.comments.add(commentsItem);
    return this;
  }

  /**
   * Array of any credit memo comments. Otherwise, null.
   * @return comments
   */
  @javax.annotation.Nullable
  public List<SalesDataCreditmemoCommentInterface> getComments() {
    return comments;
  }

  public void setComments(List<SalesDataCreditmemoCommentInterface> comments) {
    this.comments = comments;
  }


  public SalesDataCreditmemoInterface createdAt(String createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  /**
   * Credit memo created-at timestamp.
   * @return createdAt
   */
  @javax.annotation.Nullable
  public String getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(String createdAt) {
    this.createdAt = createdAt;
  }


  public SalesDataCreditmemoInterface creditmemoStatus(Integer creditmemoStatus) {
    this.creditmemoStatus = creditmemoStatus;
    return this;
  }

  /**
   * Credit memo status.
   * @return creditmemoStatus
   */
  @javax.annotation.Nullable
  public Integer getCreditmemoStatus() {
    return creditmemoStatus;
  }

  public void setCreditmemoStatus(Integer creditmemoStatus) {
    this.creditmemoStatus = creditmemoStatus;
  }


  public SalesDataCreditmemoInterface discountAmount(BigDecimal discountAmount) {
    this.discountAmount = discountAmount;
    return this;
  }

  /**
   * Credit memo discount amount.
   * @return discountAmount
   */
  @javax.annotation.Nullable
  public BigDecimal getDiscountAmount() {
    return discountAmount;
  }

  public void setDiscountAmount(BigDecimal discountAmount) {
    this.discountAmount = discountAmount;
  }


  public SalesDataCreditmemoInterface discountDescription(String discountDescription) {
    this.discountDescription = discountDescription;
    return this;
  }

  /**
   * Credit memo discount description.
   * @return discountDescription
   */
  @javax.annotation.Nullable
  public String getDiscountDescription() {
    return discountDescription;
  }

  public void setDiscountDescription(String discountDescription) {
    this.discountDescription = discountDescription;
  }


  public SalesDataCreditmemoInterface discountTaxCompensationAmount(BigDecimal discountTaxCompensationAmount) {
    this.discountTaxCompensationAmount = discountTaxCompensationAmount;
    return this;
  }

  /**
   * Credit memo discount tax compensation amount.
   * @return discountTaxCompensationAmount
   */
  @javax.annotation.Nullable
  public BigDecimal getDiscountTaxCompensationAmount() {
    return discountTaxCompensationAmount;
  }

  public void setDiscountTaxCompensationAmount(BigDecimal discountTaxCompensationAmount) {
    this.discountTaxCompensationAmount = discountTaxCompensationAmount;
  }


  public SalesDataCreditmemoInterface emailSent(Integer emailSent) {
    this.emailSent = emailSent;
    return this;
  }

  /**
   * Credit memo email sent flag value.
   * @return emailSent
   */
  @javax.annotation.Nullable
  public Integer getEmailSent() {
    return emailSent;
  }

  public void setEmailSent(Integer emailSent) {
    this.emailSent = emailSent;
  }


  public SalesDataCreditmemoInterface entityId(Integer entityId) {
    this.entityId = entityId;
    return this;
  }

  /**
   * Credit memo ID.
   * @return entityId
   */
  @javax.annotation.Nullable
  public Integer getEntityId() {
    return entityId;
  }

  public void setEntityId(Integer entityId) {
    this.entityId = entityId;
  }


  public SalesDataCreditmemoInterface extensionAttributes(SalesDataCreditmemoExtensionInterface extensionAttributes) {
    this.extensionAttributes = extensionAttributes;
    return this;
  }

  /**
   * Get extensionAttributes
   * @return extensionAttributes
   */
  @javax.annotation.Nullable
  public SalesDataCreditmemoExtensionInterface getExtensionAttributes() {
    return extensionAttributes;
  }

  public void setExtensionAttributes(SalesDataCreditmemoExtensionInterface extensionAttributes) {
    this.extensionAttributes = extensionAttributes;
  }


  public SalesDataCreditmemoInterface globalCurrencyCode(String globalCurrencyCode) {
    this.globalCurrencyCode = globalCurrencyCode;
    return this;
  }

  /**
   * Credit memo global currency code.
   * @return globalCurrencyCode
   */
  @javax.annotation.Nullable
  public String getGlobalCurrencyCode() {
    return globalCurrencyCode;
  }

  public void setGlobalCurrencyCode(String globalCurrencyCode) {
    this.globalCurrencyCode = globalCurrencyCode;
  }


  public SalesDataCreditmemoInterface grandTotal(BigDecimal grandTotal) {
    this.grandTotal = grandTotal;
    return this;
  }

  /**
   * Credit memo grand total.
   * @return grandTotal
   */
  @javax.annotation.Nullable
  public BigDecimal getGrandTotal() {
    return grandTotal;
  }

  public void setGrandTotal(BigDecimal grandTotal) {
    this.grandTotal = grandTotal;
  }


  public SalesDataCreditmemoInterface incrementId(String incrementId) {
    this.incrementId = incrementId;
    return this;
  }

  /**
   * Credit memo increment ID.
   * @return incrementId
   */
  @javax.annotation.Nullable
  public String getIncrementId() {
    return incrementId;
  }

  public void setIncrementId(String incrementId) {
    this.incrementId = incrementId;
  }


  public SalesDataCreditmemoInterface invoiceId(Integer invoiceId) {
    this.invoiceId = invoiceId;
    return this;
  }

  /**
   * Credit memo invoice ID.
   * @return invoiceId
   */
  @javax.annotation.Nullable
  public Integer getInvoiceId() {
    return invoiceId;
  }

  public void setInvoiceId(Integer invoiceId) {
    this.invoiceId = invoiceId;
  }


  public SalesDataCreditmemoInterface items(List<SalesDataCreditmemoItemInterface> items) {
    this.items = items;
    return this;
  }

  public SalesDataCreditmemoInterface addItemsItem(SalesDataCreditmemoItemInterface itemsItem) {
    if (this.items == null) {
      this.items = new ArrayList<>();
    }
    this.items.add(itemsItem);
    return this;
  }

  /**
   * Array of credit memo items.
   * @return items
   */
  @javax.annotation.Nonnull
  public List<SalesDataCreditmemoItemInterface> getItems() {
    return items;
  }

  public void setItems(List<SalesDataCreditmemoItemInterface> items) {
    this.items = items;
  }


  public SalesDataCreditmemoInterface orderCurrencyCode(String orderCurrencyCode) {
    this.orderCurrencyCode = orderCurrencyCode;
    return this;
  }

  /**
   * Credit memo order currency code.
   * @return orderCurrencyCode
   */
  @javax.annotation.Nullable
  public String getOrderCurrencyCode() {
    return orderCurrencyCode;
  }

  public void setOrderCurrencyCode(String orderCurrencyCode) {
    this.orderCurrencyCode = orderCurrencyCode;
  }


  public SalesDataCreditmemoInterface orderId(Integer orderId) {
    this.orderId = orderId;
    return this;
  }

  /**
   * Credit memo order ID.
   * @return orderId
   */
  @javax.annotation.Nonnull
  public Integer getOrderId() {
    return orderId;
  }

  public void setOrderId(Integer orderId) {
    this.orderId = orderId;
  }


  public SalesDataCreditmemoInterface shippingAddressId(Integer shippingAddressId) {
    this.shippingAddressId = shippingAddressId;
    return this;
  }

  /**
   * Credit memo shipping address ID.
   * @return shippingAddressId
   */
  @javax.annotation.Nullable
  public Integer getShippingAddressId() {
    return shippingAddressId;
  }

  public void setShippingAddressId(Integer shippingAddressId) {
    this.shippingAddressId = shippingAddressId;
  }


  public SalesDataCreditmemoInterface shippingAmount(BigDecimal shippingAmount) {
    this.shippingAmount = shippingAmount;
    return this;
  }

  /**
   * Credit memo shipping amount.
   * @return shippingAmount
   */
  @javax.annotation.Nullable
  public BigDecimal getShippingAmount() {
    return shippingAmount;
  }

  public void setShippingAmount(BigDecimal shippingAmount) {
    this.shippingAmount = shippingAmount;
  }


  public SalesDataCreditmemoInterface shippingDiscountTaxCompensationAmount(BigDecimal shippingDiscountTaxCompensationAmount) {
    this.shippingDiscountTaxCompensationAmount = shippingDiscountTaxCompensationAmount;
    return this;
  }

  /**
   * Credit memo shipping discount tax compensation amount.
   * @return shippingDiscountTaxCompensationAmount
   */
  @javax.annotation.Nullable
  public BigDecimal getShippingDiscountTaxCompensationAmount() {
    return shippingDiscountTaxCompensationAmount;
  }

  public void setShippingDiscountTaxCompensationAmount(BigDecimal shippingDiscountTaxCompensationAmount) {
    this.shippingDiscountTaxCompensationAmount = shippingDiscountTaxCompensationAmount;
  }


  public SalesDataCreditmemoInterface shippingInclTax(BigDecimal shippingInclTax) {
    this.shippingInclTax = shippingInclTax;
    return this;
  }

  /**
   * Credit memo shipping including tax.
   * @return shippingInclTax
   */
  @javax.annotation.Nullable
  public BigDecimal getShippingInclTax() {
    return shippingInclTax;
  }

  public void setShippingInclTax(BigDecimal shippingInclTax) {
    this.shippingInclTax = shippingInclTax;
  }


  public SalesDataCreditmemoInterface shippingTaxAmount(BigDecimal shippingTaxAmount) {
    this.shippingTaxAmount = shippingTaxAmount;
    return this;
  }

  /**
   * Credit memo shipping tax amount.
   * @return shippingTaxAmount
   */
  @javax.annotation.Nullable
  public BigDecimal getShippingTaxAmount() {
    return shippingTaxAmount;
  }

  public void setShippingTaxAmount(BigDecimal shippingTaxAmount) {
    this.shippingTaxAmount = shippingTaxAmount;
  }


  public SalesDataCreditmemoInterface state(Integer state) {
    this.state = state;
    return this;
  }

  /**
   * Credit memo state.
   * @return state
   */
  @javax.annotation.Nullable
  public Integer getState() {
    return state;
  }

  public void setState(Integer state) {
    this.state = state;
  }


  public SalesDataCreditmemoInterface storeCurrencyCode(String storeCurrencyCode) {
    this.storeCurrencyCode = storeCurrencyCode;
    return this;
  }

  /**
   * Credit memo store currency code.
   * @return storeCurrencyCode
   */
  @javax.annotation.Nullable
  public String getStoreCurrencyCode() {
    return storeCurrencyCode;
  }

  public void setStoreCurrencyCode(String storeCurrencyCode) {
    this.storeCurrencyCode = storeCurrencyCode;
  }


  public SalesDataCreditmemoInterface storeId(Integer storeId) {
    this.storeId = storeId;
    return this;
  }

  /**
   * Credit memo store ID.
   * @return storeId
   */
  @javax.annotation.Nullable
  public Integer getStoreId() {
    return storeId;
  }

  public void setStoreId(Integer storeId) {
    this.storeId = storeId;
  }


  public SalesDataCreditmemoInterface storeToBaseRate(BigDecimal storeToBaseRate) {
    this.storeToBaseRate = storeToBaseRate;
    return this;
  }

  /**
   * Credit memo store-to-base rate.
   * @return storeToBaseRate
   */
  @javax.annotation.Nullable
  public BigDecimal getStoreToBaseRate() {
    return storeToBaseRate;
  }

  public void setStoreToBaseRate(BigDecimal storeToBaseRate) {
    this.storeToBaseRate = storeToBaseRate;
  }


  public SalesDataCreditmemoInterface storeToOrderRate(BigDecimal storeToOrderRate) {
    this.storeToOrderRate = storeToOrderRate;
    return this;
  }

  /**
   * Credit memo store-to-order rate.
   * @return storeToOrderRate
   */
  @javax.annotation.Nullable
  public BigDecimal getStoreToOrderRate() {
    return storeToOrderRate;
  }

  public void setStoreToOrderRate(BigDecimal storeToOrderRate) {
    this.storeToOrderRate = storeToOrderRate;
  }


  public SalesDataCreditmemoInterface subtotal(BigDecimal subtotal) {
    this.subtotal = subtotal;
    return this;
  }

  /**
   * Credit memo subtotal.
   * @return subtotal
   */
  @javax.annotation.Nullable
  public BigDecimal getSubtotal() {
    return subtotal;
  }

  public void setSubtotal(BigDecimal subtotal) {
    this.subtotal = subtotal;
  }


  public SalesDataCreditmemoInterface subtotalInclTax(BigDecimal subtotalInclTax) {
    this.subtotalInclTax = subtotalInclTax;
    return this;
  }

  /**
   * Credit memo subtotal including tax.
   * @return subtotalInclTax
   */
  @javax.annotation.Nullable
  public BigDecimal getSubtotalInclTax() {
    return subtotalInclTax;
  }

  public void setSubtotalInclTax(BigDecimal subtotalInclTax) {
    this.subtotalInclTax = subtotalInclTax;
  }


  public SalesDataCreditmemoInterface taxAmount(BigDecimal taxAmount) {
    this.taxAmount = taxAmount;
    return this;
  }

  /**
   * Credit memo tax amount.
   * @return taxAmount
   */
  @javax.annotation.Nullable
  public BigDecimal getTaxAmount() {
    return taxAmount;
  }

  public void setTaxAmount(BigDecimal taxAmount) {
    this.taxAmount = taxAmount;
  }


  public SalesDataCreditmemoInterface transactionId(String transactionId) {
    this.transactionId = transactionId;
    return this;
  }

  /**
   * Credit memo transaction ID.
   * @return transactionId
   */
  @javax.annotation.Nullable
  public String getTransactionId() {
    return transactionId;
  }

  public void setTransactionId(String transactionId) {
    this.transactionId = transactionId;
  }


  public SalesDataCreditmemoInterface updatedAt(String updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

  /**
   * Credit memo updated-at timestamp.
   * @return updatedAt
   */
  @javax.annotation.Nullable
  public String getUpdatedAt() {
    return updatedAt;
  }

  public void setUpdatedAt(String updatedAt) {
    this.updatedAt = updatedAt;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SalesDataCreditmemoInterface salesDataCreditmemoInterface = (SalesDataCreditmemoInterface) o;
    return Objects.equals(this.adjustment, salesDataCreditmemoInterface.adjustment) &&
        Objects.equals(this.adjustmentNegative, salesDataCreditmemoInterface.adjustmentNegative) &&
        Objects.equals(this.adjustmentPositive, salesDataCreditmemoInterface.adjustmentPositive) &&
        Objects.equals(this.baseAdjustment, salesDataCreditmemoInterface.baseAdjustment) &&
        Objects.equals(this.baseAdjustmentNegative, salesDataCreditmemoInterface.baseAdjustmentNegative) &&
        Objects.equals(this.baseAdjustmentPositive, salesDataCreditmemoInterface.baseAdjustmentPositive) &&
        Objects.equals(this.baseCurrencyCode, salesDataCreditmemoInterface.baseCurrencyCode) &&
        Objects.equals(this.baseDiscountAmount, salesDataCreditmemoInterface.baseDiscountAmount) &&
        Objects.equals(this.baseDiscountTaxCompensationAmount, salesDataCreditmemoInterface.baseDiscountTaxCompensationAmount) &&
        Objects.equals(this.baseGrandTotal, salesDataCreditmemoInterface.baseGrandTotal) &&
        Objects.equals(this.baseShippingAmount, salesDataCreditmemoInterface.baseShippingAmount) &&
        Objects.equals(this.baseShippingDiscountTaxCompensationAmnt, salesDataCreditmemoInterface.baseShippingDiscountTaxCompensationAmnt) &&
        Objects.equals(this.baseShippingInclTax, salesDataCreditmemoInterface.baseShippingInclTax) &&
        Objects.equals(this.baseShippingTaxAmount, salesDataCreditmemoInterface.baseShippingTaxAmount) &&
        Objects.equals(this.baseSubtotal, salesDataCreditmemoInterface.baseSubtotal) &&
        Objects.equals(this.baseSubtotalInclTax, salesDataCreditmemoInterface.baseSubtotalInclTax) &&
        Objects.equals(this.baseTaxAmount, salesDataCreditmemoInterface.baseTaxAmount) &&
        Objects.equals(this.baseToGlobalRate, salesDataCreditmemoInterface.baseToGlobalRate) &&
        Objects.equals(this.baseToOrderRate, salesDataCreditmemoInterface.baseToOrderRate) &&
        Objects.equals(this.billingAddressId, salesDataCreditmemoInterface.billingAddressId) &&
        Objects.equals(this.comments, salesDataCreditmemoInterface.comments) &&
        Objects.equals(this.createdAt, salesDataCreditmemoInterface.createdAt) &&
        Objects.equals(this.creditmemoStatus, salesDataCreditmemoInterface.creditmemoStatus) &&
        Objects.equals(this.discountAmount, salesDataCreditmemoInterface.discountAmount) &&
        Objects.equals(this.discountDescription, salesDataCreditmemoInterface.discountDescription) &&
        Objects.equals(this.discountTaxCompensationAmount, salesDataCreditmemoInterface.discountTaxCompensationAmount) &&
        Objects.equals(this.emailSent, salesDataCreditmemoInterface.emailSent) &&
        Objects.equals(this.entityId, salesDataCreditmemoInterface.entityId) &&
        Objects.equals(this.extensionAttributes, salesDataCreditmemoInterface.extensionAttributes) &&
        Objects.equals(this.globalCurrencyCode, salesDataCreditmemoInterface.globalCurrencyCode) &&
        Objects.equals(this.grandTotal, salesDataCreditmemoInterface.grandTotal) &&
        Objects.equals(this.incrementId, salesDataCreditmemoInterface.incrementId) &&
        Objects.equals(this.invoiceId, salesDataCreditmemoInterface.invoiceId) &&
        Objects.equals(this.items, salesDataCreditmemoInterface.items) &&
        Objects.equals(this.orderCurrencyCode, salesDataCreditmemoInterface.orderCurrencyCode) &&
        Objects.equals(this.orderId, salesDataCreditmemoInterface.orderId) &&
        Objects.equals(this.shippingAddressId, salesDataCreditmemoInterface.shippingAddressId) &&
        Objects.equals(this.shippingAmount, salesDataCreditmemoInterface.shippingAmount) &&
        Objects.equals(this.shippingDiscountTaxCompensationAmount, salesDataCreditmemoInterface.shippingDiscountTaxCompensationAmount) &&
        Objects.equals(this.shippingInclTax, salesDataCreditmemoInterface.shippingInclTax) &&
        Objects.equals(this.shippingTaxAmount, salesDataCreditmemoInterface.shippingTaxAmount) &&
        Objects.equals(this.state, salesDataCreditmemoInterface.state) &&
        Objects.equals(this.storeCurrencyCode, salesDataCreditmemoInterface.storeCurrencyCode) &&
        Objects.equals(this.storeId, salesDataCreditmemoInterface.storeId) &&
        Objects.equals(this.storeToBaseRate, salesDataCreditmemoInterface.storeToBaseRate) &&
        Objects.equals(this.storeToOrderRate, salesDataCreditmemoInterface.storeToOrderRate) &&
        Objects.equals(this.subtotal, salesDataCreditmemoInterface.subtotal) &&
        Objects.equals(this.subtotalInclTax, salesDataCreditmemoInterface.subtotalInclTax) &&
        Objects.equals(this.taxAmount, salesDataCreditmemoInterface.taxAmount) &&
        Objects.equals(this.transactionId, salesDataCreditmemoInterface.transactionId) &&
        Objects.equals(this.updatedAt, salesDataCreditmemoInterface.updatedAt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(adjustment, adjustmentNegative, adjustmentPositive, baseAdjustment, baseAdjustmentNegative, baseAdjustmentPositive, baseCurrencyCode, baseDiscountAmount, baseDiscountTaxCompensationAmount, baseGrandTotal, baseShippingAmount, baseShippingDiscountTaxCompensationAmnt, baseShippingInclTax, baseShippingTaxAmount, baseSubtotal, baseSubtotalInclTax, baseTaxAmount, baseToGlobalRate, baseToOrderRate, billingAddressId, comments, createdAt, creditmemoStatus, discountAmount, discountDescription, discountTaxCompensationAmount, emailSent, entityId, extensionAttributes, globalCurrencyCode, grandTotal, incrementId, invoiceId, items, orderCurrencyCode, orderId, shippingAddressId, shippingAmount, shippingDiscountTaxCompensationAmount, shippingInclTax, shippingTaxAmount, state, storeCurrencyCode, storeId, storeToBaseRate, storeToOrderRate, subtotal, subtotalInclTax, taxAmount, transactionId, updatedAt);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SalesDataCreditmemoInterface {\n");
    sb.append("    adjustment: ").append(toIndentedString(adjustment)).append("\n");
    sb.append("    adjustmentNegative: ").append(toIndentedString(adjustmentNegative)).append("\n");
    sb.append("    adjustmentPositive: ").append(toIndentedString(adjustmentPositive)).append("\n");
    sb.append("    baseAdjustment: ").append(toIndentedString(baseAdjustment)).append("\n");
    sb.append("    baseAdjustmentNegative: ").append(toIndentedString(baseAdjustmentNegative)).append("\n");
    sb.append("    baseAdjustmentPositive: ").append(toIndentedString(baseAdjustmentPositive)).append("\n");
    sb.append("    baseCurrencyCode: ").append(toIndentedString(baseCurrencyCode)).append("\n");
    sb.append("    baseDiscountAmount: ").append(toIndentedString(baseDiscountAmount)).append("\n");
    sb.append("    baseDiscountTaxCompensationAmount: ").append(toIndentedString(baseDiscountTaxCompensationAmount)).append("\n");
    sb.append("    baseGrandTotal: ").append(toIndentedString(baseGrandTotal)).append("\n");
    sb.append("    baseShippingAmount: ").append(toIndentedString(baseShippingAmount)).append("\n");
    sb.append("    baseShippingDiscountTaxCompensationAmnt: ").append(toIndentedString(baseShippingDiscountTaxCompensationAmnt)).append("\n");
    sb.append("    baseShippingInclTax: ").append(toIndentedString(baseShippingInclTax)).append("\n");
    sb.append("    baseShippingTaxAmount: ").append(toIndentedString(baseShippingTaxAmount)).append("\n");
    sb.append("    baseSubtotal: ").append(toIndentedString(baseSubtotal)).append("\n");
    sb.append("    baseSubtotalInclTax: ").append(toIndentedString(baseSubtotalInclTax)).append("\n");
    sb.append("    baseTaxAmount: ").append(toIndentedString(baseTaxAmount)).append("\n");
    sb.append("    baseToGlobalRate: ").append(toIndentedString(baseToGlobalRate)).append("\n");
    sb.append("    baseToOrderRate: ").append(toIndentedString(baseToOrderRate)).append("\n");
    sb.append("    billingAddressId: ").append(toIndentedString(billingAddressId)).append("\n");
    sb.append("    comments: ").append(toIndentedString(comments)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    creditmemoStatus: ").append(toIndentedString(creditmemoStatus)).append("\n");
    sb.append("    discountAmount: ").append(toIndentedString(discountAmount)).append("\n");
    sb.append("    discountDescription: ").append(toIndentedString(discountDescription)).append("\n");
    sb.append("    discountTaxCompensationAmount: ").append(toIndentedString(discountTaxCompensationAmount)).append("\n");
    sb.append("    emailSent: ").append(toIndentedString(emailSent)).append("\n");
    sb.append("    entityId: ").append(toIndentedString(entityId)).append("\n");
    sb.append("    extensionAttributes: ").append(toIndentedString(extensionAttributes)).append("\n");
    sb.append("    globalCurrencyCode: ").append(toIndentedString(globalCurrencyCode)).append("\n");
    sb.append("    grandTotal: ").append(toIndentedString(grandTotal)).append("\n");
    sb.append("    incrementId: ").append(toIndentedString(incrementId)).append("\n");
    sb.append("    invoiceId: ").append(toIndentedString(invoiceId)).append("\n");
    sb.append("    items: ").append(toIndentedString(items)).append("\n");
    sb.append("    orderCurrencyCode: ").append(toIndentedString(orderCurrencyCode)).append("\n");
    sb.append("    orderId: ").append(toIndentedString(orderId)).append("\n");
    sb.append("    shippingAddressId: ").append(toIndentedString(shippingAddressId)).append("\n");
    sb.append("    shippingAmount: ").append(toIndentedString(shippingAmount)).append("\n");
    sb.append("    shippingDiscountTaxCompensationAmount: ").append(toIndentedString(shippingDiscountTaxCompensationAmount)).append("\n");
    sb.append("    shippingInclTax: ").append(toIndentedString(shippingInclTax)).append("\n");
    sb.append("    shippingTaxAmount: ").append(toIndentedString(shippingTaxAmount)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    storeCurrencyCode: ").append(toIndentedString(storeCurrencyCode)).append("\n");
    sb.append("    storeId: ").append(toIndentedString(storeId)).append("\n");
    sb.append("    storeToBaseRate: ").append(toIndentedString(storeToBaseRate)).append("\n");
    sb.append("    storeToOrderRate: ").append(toIndentedString(storeToOrderRate)).append("\n");
    sb.append("    subtotal: ").append(toIndentedString(subtotal)).append("\n");
    sb.append("    subtotalInclTax: ").append(toIndentedString(subtotalInclTax)).append("\n");
    sb.append("    taxAmount: ").append(toIndentedString(taxAmount)).append("\n");
    sb.append("    transactionId: ").append(toIndentedString(transactionId)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("adjustment");
    openapiFields.add("adjustment_negative");
    openapiFields.add("adjustment_positive");
    openapiFields.add("base_adjustment");
    openapiFields.add("base_adjustment_negative");
    openapiFields.add("base_adjustment_positive");
    openapiFields.add("base_currency_code");
    openapiFields.add("base_discount_amount");
    openapiFields.add("base_discount_tax_compensation_amount");
    openapiFields.add("base_grand_total");
    openapiFields.add("base_shipping_amount");
    openapiFields.add("base_shipping_discount_tax_compensation_amnt");
    openapiFields.add("base_shipping_incl_tax");
    openapiFields.add("base_shipping_tax_amount");
    openapiFields.add("base_subtotal");
    openapiFields.add("base_subtotal_incl_tax");
    openapiFields.add("base_tax_amount");
    openapiFields.add("base_to_global_rate");
    openapiFields.add("base_to_order_rate");
    openapiFields.add("billing_address_id");
    openapiFields.add("comments");
    openapiFields.add("created_at");
    openapiFields.add("creditmemo_status");
    openapiFields.add("discount_amount");
    openapiFields.add("discount_description");
    openapiFields.add("discount_tax_compensation_amount");
    openapiFields.add("email_sent");
    openapiFields.add("entity_id");
    openapiFields.add("extension_attributes");
    openapiFields.add("global_currency_code");
    openapiFields.add("grand_total");
    openapiFields.add("increment_id");
    openapiFields.add("invoice_id");
    openapiFields.add("items");
    openapiFields.add("order_currency_code");
    openapiFields.add("order_id");
    openapiFields.add("shipping_address_id");
    openapiFields.add("shipping_amount");
    openapiFields.add("shipping_discount_tax_compensation_amount");
    openapiFields.add("shipping_incl_tax");
    openapiFields.add("shipping_tax_amount");
    openapiFields.add("state");
    openapiFields.add("store_currency_code");
    openapiFields.add("store_id");
    openapiFields.add("store_to_base_rate");
    openapiFields.add("store_to_order_rate");
    openapiFields.add("subtotal");
    openapiFields.add("subtotal_incl_tax");
    openapiFields.add("tax_amount");
    openapiFields.add("transaction_id");
    openapiFields.add("updated_at");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("items");
    openapiRequiredFields.add("order_id");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to SalesDataCreditmemoInterface
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!SalesDataCreditmemoInterface.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in SalesDataCreditmemoInterface is not found in the empty JSON string", SalesDataCreditmemoInterface.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!SalesDataCreditmemoInterface.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `SalesDataCreditmemoInterface` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : SalesDataCreditmemoInterface.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("base_currency_code") != null && !jsonObj.get("base_currency_code").isJsonNull()) && !jsonObj.get("base_currency_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `base_currency_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("base_currency_code").toString()));
      }
      if (jsonObj.get("comments") != null && !jsonObj.get("comments").isJsonNull()) {
        JsonArray jsonArraycomments = jsonObj.getAsJsonArray("comments");
        if (jsonArraycomments != null) {
          // ensure the json data is an array
          if (!jsonObj.get("comments").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `comments` to be an array in the JSON string but got `%s`", jsonObj.get("comments").toString()));
          }

          // validate the optional field `comments` (array)
          for (int i = 0; i < jsonArraycomments.size(); i++) {
            SalesDataCreditmemoCommentInterface.validateJsonElement(jsonArraycomments.get(i));
          };
        }
      }
      if ((jsonObj.get("created_at") != null && !jsonObj.get("created_at").isJsonNull()) && !jsonObj.get("created_at").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `created_at` to be a primitive type in the JSON string but got `%s`", jsonObj.get("created_at").toString()));
      }
      if ((jsonObj.get("discount_description") != null && !jsonObj.get("discount_description").isJsonNull()) && !jsonObj.get("discount_description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `discount_description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("discount_description").toString()));
      }
      // validate the optional field `extension_attributes`
      if (jsonObj.get("extension_attributes") != null && !jsonObj.get("extension_attributes").isJsonNull()) {
        SalesDataCreditmemoExtensionInterface.validateJsonElement(jsonObj.get("extension_attributes"));
      }
      if ((jsonObj.get("global_currency_code") != null && !jsonObj.get("global_currency_code").isJsonNull()) && !jsonObj.get("global_currency_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `global_currency_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("global_currency_code").toString()));
      }
      if ((jsonObj.get("increment_id") != null && !jsonObj.get("increment_id").isJsonNull()) && !jsonObj.get("increment_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `increment_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("increment_id").toString()));
      }
      // ensure the json data is an array
      if (!jsonObj.get("items").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `items` to be an array in the JSON string but got `%s`", jsonObj.get("items").toString()));
      }

      JsonArray jsonArrayitems = jsonObj.getAsJsonArray("items");
      // validate the required field `items` (array)
      for (int i = 0; i < jsonArrayitems.size(); i++) {
        SalesDataCreditmemoItemInterface.validateJsonElement(jsonArrayitems.get(i));
      };
      if ((jsonObj.get("order_currency_code") != null && !jsonObj.get("order_currency_code").isJsonNull()) && !jsonObj.get("order_currency_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `order_currency_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("order_currency_code").toString()));
      }
      if ((jsonObj.get("store_currency_code") != null && !jsonObj.get("store_currency_code").isJsonNull()) && !jsonObj.get("store_currency_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `store_currency_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("store_currency_code").toString()));
      }
      if ((jsonObj.get("transaction_id") != null && !jsonObj.get("transaction_id").isJsonNull()) && !jsonObj.get("transaction_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `transaction_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("transaction_id").toString()));
      }
      if ((jsonObj.get("updated_at") != null && !jsonObj.get("updated_at").isJsonNull()) && !jsonObj.get("updated_at").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `updated_at` to be a primitive type in the JSON string but got `%s`", jsonObj.get("updated_at").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SalesDataCreditmemoInterface.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SalesDataCreditmemoInterface' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SalesDataCreditmemoInterface> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SalesDataCreditmemoInterface.class));

       return (TypeAdapter<T>) new TypeAdapter<SalesDataCreditmemoInterface>() {
           @Override
           public void write(JsonWriter out, SalesDataCreditmemoInterface value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public SalesDataCreditmemoInterface read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of SalesDataCreditmemoInterface given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of SalesDataCreditmemoInterface
   * @throws IOException if the JSON string is invalid with respect to SalesDataCreditmemoInterface
   */
  public static SalesDataCreditmemoInterface fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SalesDataCreditmemoInterface.class);
  }

  /**
   * Convert an instance of SalesDataCreditmemoInterface to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

