/*
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Interface ShippingMethodInterface
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:00:51.810681-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class QuoteDataShippingMethodInterface {
  public static final String SERIALIZED_NAME_AMOUNT = "amount";
  @SerializedName(SERIALIZED_NAME_AMOUNT)
  private BigDecimal amount;

  public static final String SERIALIZED_NAME_AVAILABLE = "available";
  @SerializedName(SERIALIZED_NAME_AVAILABLE)
  private Boolean available;

  public static final String SERIALIZED_NAME_BASE_AMOUNT = "base_amount";
  @SerializedName(SERIALIZED_NAME_BASE_AMOUNT)
  private BigDecimal baseAmount;

  public static final String SERIALIZED_NAME_CARRIER_CODE = "carrier_code";
  @SerializedName(SERIALIZED_NAME_CARRIER_CODE)
  private String carrierCode;

  public static final String SERIALIZED_NAME_CARRIER_TITLE = "carrier_title";
  @SerializedName(SERIALIZED_NAME_CARRIER_TITLE)
  private String carrierTitle;

  public static final String SERIALIZED_NAME_ERROR_MESSAGE = "error_message";
  @SerializedName(SERIALIZED_NAME_ERROR_MESSAGE)
  private String errorMessage;

  public static final String SERIALIZED_NAME_EXTENSION_ATTRIBUTES = "extension_attributes";
  @SerializedName(SERIALIZED_NAME_EXTENSION_ATTRIBUTES)
  private Object extensionAttributes;

  public static final String SERIALIZED_NAME_METHOD_CODE = "method_code";
  @SerializedName(SERIALIZED_NAME_METHOD_CODE)
  private String methodCode;

  public static final String SERIALIZED_NAME_METHOD_TITLE = "method_title";
  @SerializedName(SERIALIZED_NAME_METHOD_TITLE)
  private String methodTitle;

  public static final String SERIALIZED_NAME_PRICE_EXCL_TAX = "price_excl_tax";
  @SerializedName(SERIALIZED_NAME_PRICE_EXCL_TAX)
  private BigDecimal priceExclTax;

  public static final String SERIALIZED_NAME_PRICE_INCL_TAX = "price_incl_tax";
  @SerializedName(SERIALIZED_NAME_PRICE_INCL_TAX)
  private BigDecimal priceInclTax;

  public QuoteDataShippingMethodInterface() {
  }

  public QuoteDataShippingMethodInterface amount(BigDecimal amount) {
    this.amount = amount;
    return this;
  }

  /**
   * Shipping amount in store currency.
   * @return amount
   */
  @javax.annotation.Nonnull
  public BigDecimal getAmount() {
    return amount;
  }

  public void setAmount(BigDecimal amount) {
    this.amount = amount;
  }


  public QuoteDataShippingMethodInterface available(Boolean available) {
    this.available = available;
    return this;
  }

  /**
   * The value of the availability flag for the current shipping method.
   * @return available
   */
  @javax.annotation.Nonnull
  public Boolean getAvailable() {
    return available;
  }

  public void setAvailable(Boolean available) {
    this.available = available;
  }


  public QuoteDataShippingMethodInterface baseAmount(BigDecimal baseAmount) {
    this.baseAmount = baseAmount;
    return this;
  }

  /**
   * Shipping amount in base currency.
   * @return baseAmount
   */
  @javax.annotation.Nonnull
  public BigDecimal getBaseAmount() {
    return baseAmount;
  }

  public void setBaseAmount(BigDecimal baseAmount) {
    this.baseAmount = baseAmount;
  }


  public QuoteDataShippingMethodInterface carrierCode(String carrierCode) {
    this.carrierCode = carrierCode;
    return this;
  }

  /**
   * Shipping carrier code.
   * @return carrierCode
   */
  @javax.annotation.Nonnull
  public String getCarrierCode() {
    return carrierCode;
  }

  public void setCarrierCode(String carrierCode) {
    this.carrierCode = carrierCode;
  }


  public QuoteDataShippingMethodInterface carrierTitle(String carrierTitle) {
    this.carrierTitle = carrierTitle;
    return this;
  }

  /**
   * Shipping carrier title. Otherwise, null.
   * @return carrierTitle
   */
  @javax.annotation.Nullable
  public String getCarrierTitle() {
    return carrierTitle;
  }

  public void setCarrierTitle(String carrierTitle) {
    this.carrierTitle = carrierTitle;
  }


  public QuoteDataShippingMethodInterface errorMessage(String errorMessage) {
    this.errorMessage = errorMessage;
    return this;
  }

  /**
   * Shipping Error message.
   * @return errorMessage
   */
  @javax.annotation.Nonnull
  public String getErrorMessage() {
    return errorMessage;
  }

  public void setErrorMessage(String errorMessage) {
    this.errorMessage = errorMessage;
  }


  public QuoteDataShippingMethodInterface extensionAttributes(Object extensionAttributes) {
    this.extensionAttributes = extensionAttributes;
    return this;
  }

  /**
   * ExtensionInterface class for @see \\Magento\\Quote\\Api\\Data\\ShippingMethodInterface
   * @return extensionAttributes
   */
  @javax.annotation.Nullable
  public Object getExtensionAttributes() {
    return extensionAttributes;
  }

  public void setExtensionAttributes(Object extensionAttributes) {
    this.extensionAttributes = extensionAttributes;
  }


  public QuoteDataShippingMethodInterface methodCode(String methodCode) {
    this.methodCode = methodCode;
    return this;
  }

  /**
   * Shipping method code.
   * @return methodCode
   */
  @javax.annotation.Nonnull
  public String getMethodCode() {
    return methodCode;
  }

  public void setMethodCode(String methodCode) {
    this.methodCode = methodCode;
  }


  public QuoteDataShippingMethodInterface methodTitle(String methodTitle) {
    this.methodTitle = methodTitle;
    return this;
  }

  /**
   * Shipping method title. Otherwise, null.
   * @return methodTitle
   */
  @javax.annotation.Nullable
  public String getMethodTitle() {
    return methodTitle;
  }

  public void setMethodTitle(String methodTitle) {
    this.methodTitle = methodTitle;
  }


  public QuoteDataShippingMethodInterface priceExclTax(BigDecimal priceExclTax) {
    this.priceExclTax = priceExclTax;
    return this;
  }

  /**
   * Shipping price excl tax.
   * @return priceExclTax
   */
  @javax.annotation.Nonnull
  public BigDecimal getPriceExclTax() {
    return priceExclTax;
  }

  public void setPriceExclTax(BigDecimal priceExclTax) {
    this.priceExclTax = priceExclTax;
  }


  public QuoteDataShippingMethodInterface priceInclTax(BigDecimal priceInclTax) {
    this.priceInclTax = priceInclTax;
    return this;
  }

  /**
   * Shipping price incl tax.
   * @return priceInclTax
   */
  @javax.annotation.Nonnull
  public BigDecimal getPriceInclTax() {
    return priceInclTax;
  }

  public void setPriceInclTax(BigDecimal priceInclTax) {
    this.priceInclTax = priceInclTax;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    QuoteDataShippingMethodInterface quoteDataShippingMethodInterface = (QuoteDataShippingMethodInterface) o;
    return Objects.equals(this.amount, quoteDataShippingMethodInterface.amount) &&
        Objects.equals(this.available, quoteDataShippingMethodInterface.available) &&
        Objects.equals(this.baseAmount, quoteDataShippingMethodInterface.baseAmount) &&
        Objects.equals(this.carrierCode, quoteDataShippingMethodInterface.carrierCode) &&
        Objects.equals(this.carrierTitle, quoteDataShippingMethodInterface.carrierTitle) &&
        Objects.equals(this.errorMessage, quoteDataShippingMethodInterface.errorMessage) &&
        Objects.equals(this.extensionAttributes, quoteDataShippingMethodInterface.extensionAttributes) &&
        Objects.equals(this.methodCode, quoteDataShippingMethodInterface.methodCode) &&
        Objects.equals(this.methodTitle, quoteDataShippingMethodInterface.methodTitle) &&
        Objects.equals(this.priceExclTax, quoteDataShippingMethodInterface.priceExclTax) &&
        Objects.equals(this.priceInclTax, quoteDataShippingMethodInterface.priceInclTax);
  }

  @Override
  public int hashCode() {
    return Objects.hash(amount, available, baseAmount, carrierCode, carrierTitle, errorMessage, extensionAttributes, methodCode, methodTitle, priceExclTax, priceInclTax);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class QuoteDataShippingMethodInterface {\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    available: ").append(toIndentedString(available)).append("\n");
    sb.append("    baseAmount: ").append(toIndentedString(baseAmount)).append("\n");
    sb.append("    carrierCode: ").append(toIndentedString(carrierCode)).append("\n");
    sb.append("    carrierTitle: ").append(toIndentedString(carrierTitle)).append("\n");
    sb.append("    errorMessage: ").append(toIndentedString(errorMessage)).append("\n");
    sb.append("    extensionAttributes: ").append(toIndentedString(extensionAttributes)).append("\n");
    sb.append("    methodCode: ").append(toIndentedString(methodCode)).append("\n");
    sb.append("    methodTitle: ").append(toIndentedString(methodTitle)).append("\n");
    sb.append("    priceExclTax: ").append(toIndentedString(priceExclTax)).append("\n");
    sb.append("    priceInclTax: ").append(toIndentedString(priceInclTax)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("amount");
    openapiFields.add("available");
    openapiFields.add("base_amount");
    openapiFields.add("carrier_code");
    openapiFields.add("carrier_title");
    openapiFields.add("error_message");
    openapiFields.add("extension_attributes");
    openapiFields.add("method_code");
    openapiFields.add("method_title");
    openapiFields.add("price_excl_tax");
    openapiFields.add("price_incl_tax");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("amount");
    openapiRequiredFields.add("available");
    openapiRequiredFields.add("base_amount");
    openapiRequiredFields.add("carrier_code");
    openapiRequiredFields.add("error_message");
    openapiRequiredFields.add("method_code");
    openapiRequiredFields.add("price_excl_tax");
    openapiRequiredFields.add("price_incl_tax");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to QuoteDataShippingMethodInterface
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!QuoteDataShippingMethodInterface.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in QuoteDataShippingMethodInterface is not found in the empty JSON string", QuoteDataShippingMethodInterface.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!QuoteDataShippingMethodInterface.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `QuoteDataShippingMethodInterface` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : QuoteDataShippingMethodInterface.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("carrier_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `carrier_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("carrier_code").toString()));
      }
      if ((jsonObj.get("carrier_title") != null && !jsonObj.get("carrier_title").isJsonNull()) && !jsonObj.get("carrier_title").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `carrier_title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("carrier_title").toString()));
      }
      if (!jsonObj.get("error_message").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `error_message` to be a primitive type in the JSON string but got `%s`", jsonObj.get("error_message").toString()));
      }
      if (!jsonObj.get("method_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `method_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("method_code").toString()));
      }
      if ((jsonObj.get("method_title") != null && !jsonObj.get("method_title").isJsonNull()) && !jsonObj.get("method_title").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `method_title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("method_title").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!QuoteDataShippingMethodInterface.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'QuoteDataShippingMethodInterface' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<QuoteDataShippingMethodInterface> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(QuoteDataShippingMethodInterface.class));

       return (TypeAdapter<T>) new TypeAdapter<QuoteDataShippingMethodInterface>() {
           @Override
           public void write(JsonWriter out, QuoteDataShippingMethodInterface value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public QuoteDataShippingMethodInterface read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of QuoteDataShippingMethodInterface given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of QuoteDataShippingMethodInterface
   * @throws IOException if the JSON string is invalid with respect to QuoteDataShippingMethodInterface
   */
  public static QuoteDataShippingMethodInterface fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, QuoteDataShippingMethodInterface.class);
  }

  /**
   * Convert an instance of QuoteDataShippingMethodInterface to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

