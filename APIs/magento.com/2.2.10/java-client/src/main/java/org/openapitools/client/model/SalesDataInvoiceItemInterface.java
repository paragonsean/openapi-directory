/*
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.Arrays;
import org.openapitools.client.model.SalesDataInvoiceItemExtensionInterface;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Invoice item interface. An invoice is a record of the receipt of payment for an order. An invoice item is a purchased item in an invoice.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:00:51.810681-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class SalesDataInvoiceItemInterface {
  public static final String SERIALIZED_NAME_ADDITIONAL_DATA = "additional_data";
  @SerializedName(SERIALIZED_NAME_ADDITIONAL_DATA)
  private String additionalData;

  public static final String SERIALIZED_NAME_BASE_COST = "base_cost";
  @SerializedName(SERIALIZED_NAME_BASE_COST)
  private BigDecimal baseCost;

  public static final String SERIALIZED_NAME_BASE_DISCOUNT_AMOUNT = "base_discount_amount";
  @SerializedName(SERIALIZED_NAME_BASE_DISCOUNT_AMOUNT)
  private BigDecimal baseDiscountAmount;

  public static final String SERIALIZED_NAME_BASE_DISCOUNT_TAX_COMPENSATION_AMOUNT = "base_discount_tax_compensation_amount";
  @SerializedName(SERIALIZED_NAME_BASE_DISCOUNT_TAX_COMPENSATION_AMOUNT)
  private BigDecimal baseDiscountTaxCompensationAmount;

  public static final String SERIALIZED_NAME_BASE_PRICE = "base_price";
  @SerializedName(SERIALIZED_NAME_BASE_PRICE)
  private BigDecimal basePrice;

  public static final String SERIALIZED_NAME_BASE_PRICE_INCL_TAX = "base_price_incl_tax";
  @SerializedName(SERIALIZED_NAME_BASE_PRICE_INCL_TAX)
  private BigDecimal basePriceInclTax;

  public static final String SERIALIZED_NAME_BASE_ROW_TOTAL = "base_row_total";
  @SerializedName(SERIALIZED_NAME_BASE_ROW_TOTAL)
  private BigDecimal baseRowTotal;

  public static final String SERIALIZED_NAME_BASE_ROW_TOTAL_INCL_TAX = "base_row_total_incl_tax";
  @SerializedName(SERIALIZED_NAME_BASE_ROW_TOTAL_INCL_TAX)
  private BigDecimal baseRowTotalInclTax;

  public static final String SERIALIZED_NAME_BASE_TAX_AMOUNT = "base_tax_amount";
  @SerializedName(SERIALIZED_NAME_BASE_TAX_AMOUNT)
  private BigDecimal baseTaxAmount;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_DISCOUNT_AMOUNT = "discount_amount";
  @SerializedName(SERIALIZED_NAME_DISCOUNT_AMOUNT)
  private BigDecimal discountAmount;

  public static final String SERIALIZED_NAME_DISCOUNT_TAX_COMPENSATION_AMOUNT = "discount_tax_compensation_amount";
  @SerializedName(SERIALIZED_NAME_DISCOUNT_TAX_COMPENSATION_AMOUNT)
  private BigDecimal discountTaxCompensationAmount;

  public static final String SERIALIZED_NAME_ENTITY_ID = "entity_id";
  @SerializedName(SERIALIZED_NAME_ENTITY_ID)
  private Integer entityId;

  public static final String SERIALIZED_NAME_EXTENSION_ATTRIBUTES = "extension_attributes";
  @SerializedName(SERIALIZED_NAME_EXTENSION_ATTRIBUTES)
  private SalesDataInvoiceItemExtensionInterface extensionAttributes;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_ORDER_ITEM_ID = "order_item_id";
  @SerializedName(SERIALIZED_NAME_ORDER_ITEM_ID)
  private Integer orderItemId;

  public static final String SERIALIZED_NAME_PARENT_ID = "parent_id";
  @SerializedName(SERIALIZED_NAME_PARENT_ID)
  private Integer parentId;

  public static final String SERIALIZED_NAME_PRICE = "price";
  @SerializedName(SERIALIZED_NAME_PRICE)
  private BigDecimal price;

  public static final String SERIALIZED_NAME_PRICE_INCL_TAX = "price_incl_tax";
  @SerializedName(SERIALIZED_NAME_PRICE_INCL_TAX)
  private BigDecimal priceInclTax;

  public static final String SERIALIZED_NAME_PRODUCT_ID = "product_id";
  @SerializedName(SERIALIZED_NAME_PRODUCT_ID)
  private Integer productId;

  public static final String SERIALIZED_NAME_QTY = "qty";
  @SerializedName(SERIALIZED_NAME_QTY)
  private BigDecimal qty;

  public static final String SERIALIZED_NAME_ROW_TOTAL = "row_total";
  @SerializedName(SERIALIZED_NAME_ROW_TOTAL)
  private BigDecimal rowTotal;

  public static final String SERIALIZED_NAME_ROW_TOTAL_INCL_TAX = "row_total_incl_tax";
  @SerializedName(SERIALIZED_NAME_ROW_TOTAL_INCL_TAX)
  private BigDecimal rowTotalInclTax;

  public static final String SERIALIZED_NAME_SKU = "sku";
  @SerializedName(SERIALIZED_NAME_SKU)
  private String sku;

  public static final String SERIALIZED_NAME_TAX_AMOUNT = "tax_amount";
  @SerializedName(SERIALIZED_NAME_TAX_AMOUNT)
  private BigDecimal taxAmount;

  public SalesDataInvoiceItemInterface() {
  }

  public SalesDataInvoiceItemInterface additionalData(String additionalData) {
    this.additionalData = additionalData;
    return this;
  }

  /**
   * Additional data.
   * @return additionalData
   */
  @javax.annotation.Nullable
  public String getAdditionalData() {
    return additionalData;
  }

  public void setAdditionalData(String additionalData) {
    this.additionalData = additionalData;
  }


  public SalesDataInvoiceItemInterface baseCost(BigDecimal baseCost) {
    this.baseCost = baseCost;
    return this;
  }

  /**
   * Base cost.
   * @return baseCost
   */
  @javax.annotation.Nullable
  public BigDecimal getBaseCost() {
    return baseCost;
  }

  public void setBaseCost(BigDecimal baseCost) {
    this.baseCost = baseCost;
  }


  public SalesDataInvoiceItemInterface baseDiscountAmount(BigDecimal baseDiscountAmount) {
    this.baseDiscountAmount = baseDiscountAmount;
    return this;
  }

  /**
   * Base discount amount.
   * @return baseDiscountAmount
   */
  @javax.annotation.Nullable
  public BigDecimal getBaseDiscountAmount() {
    return baseDiscountAmount;
  }

  public void setBaseDiscountAmount(BigDecimal baseDiscountAmount) {
    this.baseDiscountAmount = baseDiscountAmount;
  }


  public SalesDataInvoiceItemInterface baseDiscountTaxCompensationAmount(BigDecimal baseDiscountTaxCompensationAmount) {
    this.baseDiscountTaxCompensationAmount = baseDiscountTaxCompensationAmount;
    return this;
  }

  /**
   * Base discount tax compensation amount.
   * @return baseDiscountTaxCompensationAmount
   */
  @javax.annotation.Nullable
  public BigDecimal getBaseDiscountTaxCompensationAmount() {
    return baseDiscountTaxCompensationAmount;
  }

  public void setBaseDiscountTaxCompensationAmount(BigDecimal baseDiscountTaxCompensationAmount) {
    this.baseDiscountTaxCompensationAmount = baseDiscountTaxCompensationAmount;
  }


  public SalesDataInvoiceItemInterface basePrice(BigDecimal basePrice) {
    this.basePrice = basePrice;
    return this;
  }

  /**
   * Base price.
   * @return basePrice
   */
  @javax.annotation.Nullable
  public BigDecimal getBasePrice() {
    return basePrice;
  }

  public void setBasePrice(BigDecimal basePrice) {
    this.basePrice = basePrice;
  }


  public SalesDataInvoiceItemInterface basePriceInclTax(BigDecimal basePriceInclTax) {
    this.basePriceInclTax = basePriceInclTax;
    return this;
  }

  /**
   * Base price including tax.
   * @return basePriceInclTax
   */
  @javax.annotation.Nullable
  public BigDecimal getBasePriceInclTax() {
    return basePriceInclTax;
  }

  public void setBasePriceInclTax(BigDecimal basePriceInclTax) {
    this.basePriceInclTax = basePriceInclTax;
  }


  public SalesDataInvoiceItemInterface baseRowTotal(BigDecimal baseRowTotal) {
    this.baseRowTotal = baseRowTotal;
    return this;
  }

  /**
   * Base row total.
   * @return baseRowTotal
   */
  @javax.annotation.Nullable
  public BigDecimal getBaseRowTotal() {
    return baseRowTotal;
  }

  public void setBaseRowTotal(BigDecimal baseRowTotal) {
    this.baseRowTotal = baseRowTotal;
  }


  public SalesDataInvoiceItemInterface baseRowTotalInclTax(BigDecimal baseRowTotalInclTax) {
    this.baseRowTotalInclTax = baseRowTotalInclTax;
    return this;
  }

  /**
   * Base row total including tax.
   * @return baseRowTotalInclTax
   */
  @javax.annotation.Nullable
  public BigDecimal getBaseRowTotalInclTax() {
    return baseRowTotalInclTax;
  }

  public void setBaseRowTotalInclTax(BigDecimal baseRowTotalInclTax) {
    this.baseRowTotalInclTax = baseRowTotalInclTax;
  }


  public SalesDataInvoiceItemInterface baseTaxAmount(BigDecimal baseTaxAmount) {
    this.baseTaxAmount = baseTaxAmount;
    return this;
  }

  /**
   * Base tax amount.
   * @return baseTaxAmount
   */
  @javax.annotation.Nullable
  public BigDecimal getBaseTaxAmount() {
    return baseTaxAmount;
  }

  public void setBaseTaxAmount(BigDecimal baseTaxAmount) {
    this.baseTaxAmount = baseTaxAmount;
  }


  public SalesDataInvoiceItemInterface description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Description.
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public SalesDataInvoiceItemInterface discountAmount(BigDecimal discountAmount) {
    this.discountAmount = discountAmount;
    return this;
  }

  /**
   * Discount amount.
   * @return discountAmount
   */
  @javax.annotation.Nullable
  public BigDecimal getDiscountAmount() {
    return discountAmount;
  }

  public void setDiscountAmount(BigDecimal discountAmount) {
    this.discountAmount = discountAmount;
  }


  public SalesDataInvoiceItemInterface discountTaxCompensationAmount(BigDecimal discountTaxCompensationAmount) {
    this.discountTaxCompensationAmount = discountTaxCompensationAmount;
    return this;
  }

  /**
   * Discount tax compensation amount.
   * @return discountTaxCompensationAmount
   */
  @javax.annotation.Nullable
  public BigDecimal getDiscountTaxCompensationAmount() {
    return discountTaxCompensationAmount;
  }

  public void setDiscountTaxCompensationAmount(BigDecimal discountTaxCompensationAmount) {
    this.discountTaxCompensationAmount = discountTaxCompensationAmount;
  }


  public SalesDataInvoiceItemInterface entityId(Integer entityId) {
    this.entityId = entityId;
    return this;
  }

  /**
   * Invoice item ID.
   * @return entityId
   */
  @javax.annotation.Nullable
  public Integer getEntityId() {
    return entityId;
  }

  public void setEntityId(Integer entityId) {
    this.entityId = entityId;
  }


  public SalesDataInvoiceItemInterface extensionAttributes(SalesDataInvoiceItemExtensionInterface extensionAttributes) {
    this.extensionAttributes = extensionAttributes;
    return this;
  }

  /**
   * Get extensionAttributes
   * @return extensionAttributes
   */
  @javax.annotation.Nullable
  public SalesDataInvoiceItemExtensionInterface getExtensionAttributes() {
    return extensionAttributes;
  }

  public void setExtensionAttributes(SalesDataInvoiceItemExtensionInterface extensionAttributes) {
    this.extensionAttributes = extensionAttributes;
  }


  public SalesDataInvoiceItemInterface name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Name.
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public SalesDataInvoiceItemInterface orderItemId(Integer orderItemId) {
    this.orderItemId = orderItemId;
    return this;
  }

  /**
   * Order item ID.
   * @return orderItemId
   */
  @javax.annotation.Nonnull
  public Integer getOrderItemId() {
    return orderItemId;
  }

  public void setOrderItemId(Integer orderItemId) {
    this.orderItemId = orderItemId;
  }


  public SalesDataInvoiceItemInterface parentId(Integer parentId) {
    this.parentId = parentId;
    return this;
  }

  /**
   * Parent ID.
   * @return parentId
   */
  @javax.annotation.Nullable
  public Integer getParentId() {
    return parentId;
  }

  public void setParentId(Integer parentId) {
    this.parentId = parentId;
  }


  public SalesDataInvoiceItemInterface price(BigDecimal price) {
    this.price = price;
    return this;
  }

  /**
   * Price.
   * @return price
   */
  @javax.annotation.Nullable
  public BigDecimal getPrice() {
    return price;
  }

  public void setPrice(BigDecimal price) {
    this.price = price;
  }


  public SalesDataInvoiceItemInterface priceInclTax(BigDecimal priceInclTax) {
    this.priceInclTax = priceInclTax;
    return this;
  }

  /**
   * Price including tax.
   * @return priceInclTax
   */
  @javax.annotation.Nullable
  public BigDecimal getPriceInclTax() {
    return priceInclTax;
  }

  public void setPriceInclTax(BigDecimal priceInclTax) {
    this.priceInclTax = priceInclTax;
  }


  public SalesDataInvoiceItemInterface productId(Integer productId) {
    this.productId = productId;
    return this;
  }

  /**
   * Product ID.
   * @return productId
   */
  @javax.annotation.Nullable
  public Integer getProductId() {
    return productId;
  }

  public void setProductId(Integer productId) {
    this.productId = productId;
  }


  public SalesDataInvoiceItemInterface qty(BigDecimal qty) {
    this.qty = qty;
    return this;
  }

  /**
   * Quantity.
   * @return qty
   */
  @javax.annotation.Nonnull
  public BigDecimal getQty() {
    return qty;
  }

  public void setQty(BigDecimal qty) {
    this.qty = qty;
  }


  public SalesDataInvoiceItemInterface rowTotal(BigDecimal rowTotal) {
    this.rowTotal = rowTotal;
    return this;
  }

  /**
   * Row total.
   * @return rowTotal
   */
  @javax.annotation.Nullable
  public BigDecimal getRowTotal() {
    return rowTotal;
  }

  public void setRowTotal(BigDecimal rowTotal) {
    this.rowTotal = rowTotal;
  }


  public SalesDataInvoiceItemInterface rowTotalInclTax(BigDecimal rowTotalInclTax) {
    this.rowTotalInclTax = rowTotalInclTax;
    return this;
  }

  /**
   * Row total including tax.
   * @return rowTotalInclTax
   */
  @javax.annotation.Nullable
  public BigDecimal getRowTotalInclTax() {
    return rowTotalInclTax;
  }

  public void setRowTotalInclTax(BigDecimal rowTotalInclTax) {
    this.rowTotalInclTax = rowTotalInclTax;
  }


  public SalesDataInvoiceItemInterface sku(String sku) {
    this.sku = sku;
    return this;
  }

  /**
   * SKU.
   * @return sku
   */
  @javax.annotation.Nonnull
  public String getSku() {
    return sku;
  }

  public void setSku(String sku) {
    this.sku = sku;
  }


  public SalesDataInvoiceItemInterface taxAmount(BigDecimal taxAmount) {
    this.taxAmount = taxAmount;
    return this;
  }

  /**
   * Tax amount.
   * @return taxAmount
   */
  @javax.annotation.Nullable
  public BigDecimal getTaxAmount() {
    return taxAmount;
  }

  public void setTaxAmount(BigDecimal taxAmount) {
    this.taxAmount = taxAmount;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SalesDataInvoiceItemInterface salesDataInvoiceItemInterface = (SalesDataInvoiceItemInterface) o;
    return Objects.equals(this.additionalData, salesDataInvoiceItemInterface.additionalData) &&
        Objects.equals(this.baseCost, salesDataInvoiceItemInterface.baseCost) &&
        Objects.equals(this.baseDiscountAmount, salesDataInvoiceItemInterface.baseDiscountAmount) &&
        Objects.equals(this.baseDiscountTaxCompensationAmount, salesDataInvoiceItemInterface.baseDiscountTaxCompensationAmount) &&
        Objects.equals(this.basePrice, salesDataInvoiceItemInterface.basePrice) &&
        Objects.equals(this.basePriceInclTax, salesDataInvoiceItemInterface.basePriceInclTax) &&
        Objects.equals(this.baseRowTotal, salesDataInvoiceItemInterface.baseRowTotal) &&
        Objects.equals(this.baseRowTotalInclTax, salesDataInvoiceItemInterface.baseRowTotalInclTax) &&
        Objects.equals(this.baseTaxAmount, salesDataInvoiceItemInterface.baseTaxAmount) &&
        Objects.equals(this.description, salesDataInvoiceItemInterface.description) &&
        Objects.equals(this.discountAmount, salesDataInvoiceItemInterface.discountAmount) &&
        Objects.equals(this.discountTaxCompensationAmount, salesDataInvoiceItemInterface.discountTaxCompensationAmount) &&
        Objects.equals(this.entityId, salesDataInvoiceItemInterface.entityId) &&
        Objects.equals(this.extensionAttributes, salesDataInvoiceItemInterface.extensionAttributes) &&
        Objects.equals(this.name, salesDataInvoiceItemInterface.name) &&
        Objects.equals(this.orderItemId, salesDataInvoiceItemInterface.orderItemId) &&
        Objects.equals(this.parentId, salesDataInvoiceItemInterface.parentId) &&
        Objects.equals(this.price, salesDataInvoiceItemInterface.price) &&
        Objects.equals(this.priceInclTax, salesDataInvoiceItemInterface.priceInclTax) &&
        Objects.equals(this.productId, salesDataInvoiceItemInterface.productId) &&
        Objects.equals(this.qty, salesDataInvoiceItemInterface.qty) &&
        Objects.equals(this.rowTotal, salesDataInvoiceItemInterface.rowTotal) &&
        Objects.equals(this.rowTotalInclTax, salesDataInvoiceItemInterface.rowTotalInclTax) &&
        Objects.equals(this.sku, salesDataInvoiceItemInterface.sku) &&
        Objects.equals(this.taxAmount, salesDataInvoiceItemInterface.taxAmount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(additionalData, baseCost, baseDiscountAmount, baseDiscountTaxCompensationAmount, basePrice, basePriceInclTax, baseRowTotal, baseRowTotalInclTax, baseTaxAmount, description, discountAmount, discountTaxCompensationAmount, entityId, extensionAttributes, name, orderItemId, parentId, price, priceInclTax, productId, qty, rowTotal, rowTotalInclTax, sku, taxAmount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SalesDataInvoiceItemInterface {\n");
    sb.append("    additionalData: ").append(toIndentedString(additionalData)).append("\n");
    sb.append("    baseCost: ").append(toIndentedString(baseCost)).append("\n");
    sb.append("    baseDiscountAmount: ").append(toIndentedString(baseDiscountAmount)).append("\n");
    sb.append("    baseDiscountTaxCompensationAmount: ").append(toIndentedString(baseDiscountTaxCompensationAmount)).append("\n");
    sb.append("    basePrice: ").append(toIndentedString(basePrice)).append("\n");
    sb.append("    basePriceInclTax: ").append(toIndentedString(basePriceInclTax)).append("\n");
    sb.append("    baseRowTotal: ").append(toIndentedString(baseRowTotal)).append("\n");
    sb.append("    baseRowTotalInclTax: ").append(toIndentedString(baseRowTotalInclTax)).append("\n");
    sb.append("    baseTaxAmount: ").append(toIndentedString(baseTaxAmount)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    discountAmount: ").append(toIndentedString(discountAmount)).append("\n");
    sb.append("    discountTaxCompensationAmount: ").append(toIndentedString(discountTaxCompensationAmount)).append("\n");
    sb.append("    entityId: ").append(toIndentedString(entityId)).append("\n");
    sb.append("    extensionAttributes: ").append(toIndentedString(extensionAttributes)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    orderItemId: ").append(toIndentedString(orderItemId)).append("\n");
    sb.append("    parentId: ").append(toIndentedString(parentId)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    priceInclTax: ").append(toIndentedString(priceInclTax)).append("\n");
    sb.append("    productId: ").append(toIndentedString(productId)).append("\n");
    sb.append("    qty: ").append(toIndentedString(qty)).append("\n");
    sb.append("    rowTotal: ").append(toIndentedString(rowTotal)).append("\n");
    sb.append("    rowTotalInclTax: ").append(toIndentedString(rowTotalInclTax)).append("\n");
    sb.append("    sku: ").append(toIndentedString(sku)).append("\n");
    sb.append("    taxAmount: ").append(toIndentedString(taxAmount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("additional_data");
    openapiFields.add("base_cost");
    openapiFields.add("base_discount_amount");
    openapiFields.add("base_discount_tax_compensation_amount");
    openapiFields.add("base_price");
    openapiFields.add("base_price_incl_tax");
    openapiFields.add("base_row_total");
    openapiFields.add("base_row_total_incl_tax");
    openapiFields.add("base_tax_amount");
    openapiFields.add("description");
    openapiFields.add("discount_amount");
    openapiFields.add("discount_tax_compensation_amount");
    openapiFields.add("entity_id");
    openapiFields.add("extension_attributes");
    openapiFields.add("name");
    openapiFields.add("order_item_id");
    openapiFields.add("parent_id");
    openapiFields.add("price");
    openapiFields.add("price_incl_tax");
    openapiFields.add("product_id");
    openapiFields.add("qty");
    openapiFields.add("row_total");
    openapiFields.add("row_total_incl_tax");
    openapiFields.add("sku");
    openapiFields.add("tax_amount");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("order_item_id");
    openapiRequiredFields.add("qty");
    openapiRequiredFields.add("sku");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to SalesDataInvoiceItemInterface
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!SalesDataInvoiceItemInterface.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in SalesDataInvoiceItemInterface is not found in the empty JSON string", SalesDataInvoiceItemInterface.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!SalesDataInvoiceItemInterface.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `SalesDataInvoiceItemInterface` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : SalesDataInvoiceItemInterface.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("additional_data") != null && !jsonObj.get("additional_data").isJsonNull()) && !jsonObj.get("additional_data").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `additional_data` to be a primitive type in the JSON string but got `%s`", jsonObj.get("additional_data").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      // validate the optional field `extension_attributes`
      if (jsonObj.get("extension_attributes") != null && !jsonObj.get("extension_attributes").isJsonNull()) {
        SalesDataInvoiceItemExtensionInterface.validateJsonElement(jsonObj.get("extension_attributes"));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if (!jsonObj.get("sku").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sku` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sku").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SalesDataInvoiceItemInterface.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SalesDataInvoiceItemInterface' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SalesDataInvoiceItemInterface> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SalesDataInvoiceItemInterface.class));

       return (TypeAdapter<T>) new TypeAdapter<SalesDataInvoiceItemInterface>() {
           @Override
           public void write(JsonWriter out, SalesDataInvoiceItemInterface value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public SalesDataInvoiceItemInterface read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of SalesDataInvoiceItemInterface given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of SalesDataInvoiceItemInterface
   * @throws IOException if the JSON string is invalid with respect to SalesDataInvoiceItemInterface
   */
  public static SalesDataInvoiceItemInterface fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SalesDataInvoiceItemInterface.class);
  }

  /**
   * Convert an instance of SalesDataInvoiceItemInterface to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

