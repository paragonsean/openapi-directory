/*
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CouponGenerationSpecInterface
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:00:51.810681-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class SalesRuleDataCouponGenerationSpecInterface {
  public static final String SERIALIZED_NAME_DELIMITER = "delimiter";
  @SerializedName(SERIALIZED_NAME_DELIMITER)
  private String delimiter;

  public static final String SERIALIZED_NAME_DELIMITER_AT_EVERY = "delimiter_at_every";
  @SerializedName(SERIALIZED_NAME_DELIMITER_AT_EVERY)
  private Integer delimiterAtEvery;

  public static final String SERIALIZED_NAME_EXTENSION_ATTRIBUTES = "extension_attributes";
  @SerializedName(SERIALIZED_NAME_EXTENSION_ATTRIBUTES)
  private Object extensionAttributes;

  public static final String SERIALIZED_NAME_FORMAT = "format";
  @SerializedName(SERIALIZED_NAME_FORMAT)
  private String format;

  public static final String SERIALIZED_NAME_LENGTH = "length";
  @SerializedName(SERIALIZED_NAME_LENGTH)
  private Integer length;

  public static final String SERIALIZED_NAME_PREFIX = "prefix";
  @SerializedName(SERIALIZED_NAME_PREFIX)
  private String prefix;

  public static final String SERIALIZED_NAME_QUANTITY = "quantity";
  @SerializedName(SERIALIZED_NAME_QUANTITY)
  private Integer quantity;

  public static final String SERIALIZED_NAME_RULE_ID = "rule_id";
  @SerializedName(SERIALIZED_NAME_RULE_ID)
  private Integer ruleId;

  public static final String SERIALIZED_NAME_SUFFIX = "suffix";
  @SerializedName(SERIALIZED_NAME_SUFFIX)
  private String suffix;

  public SalesRuleDataCouponGenerationSpecInterface() {
  }

  public SalesRuleDataCouponGenerationSpecInterface delimiter(String delimiter) {
    this.delimiter = delimiter;
    return this;
  }

  /**
   * The delimiter
   * @return delimiter
   */
  @javax.annotation.Nullable
  public String getDelimiter() {
    return delimiter;
  }

  public void setDelimiter(String delimiter) {
    this.delimiter = delimiter;
  }


  public SalesRuleDataCouponGenerationSpecInterface delimiterAtEvery(Integer delimiterAtEvery) {
    this.delimiterAtEvery = delimiterAtEvery;
    return this;
  }

  /**
   * The spacing where the delimiter should exist
   * @return delimiterAtEvery
   */
  @javax.annotation.Nullable
  public Integer getDelimiterAtEvery() {
    return delimiterAtEvery;
  }

  public void setDelimiterAtEvery(Integer delimiterAtEvery) {
    this.delimiterAtEvery = delimiterAtEvery;
  }


  public SalesRuleDataCouponGenerationSpecInterface extensionAttributes(Object extensionAttributes) {
    this.extensionAttributes = extensionAttributes;
    return this;
  }

  /**
   * ExtensionInterface class for @see \\Magento\\SalesRule\\Api\\Data\\CouponGenerationSpecInterface
   * @return extensionAttributes
   */
  @javax.annotation.Nullable
  public Object getExtensionAttributes() {
    return extensionAttributes;
  }

  public void setExtensionAttributes(Object extensionAttributes) {
    this.extensionAttributes = extensionAttributes;
  }


  public SalesRuleDataCouponGenerationSpecInterface format(String format) {
    this.format = format;
    return this;
  }

  /**
   * Format of generated coupon code
   * @return format
   */
  @javax.annotation.Nonnull
  public String getFormat() {
    return format;
  }

  public void setFormat(String format) {
    this.format = format;
  }


  public SalesRuleDataCouponGenerationSpecInterface length(Integer length) {
    this.length = length;
    return this;
  }

  /**
   * Length of coupon code
   * @return length
   */
  @javax.annotation.Nonnull
  public Integer getLength() {
    return length;
  }

  public void setLength(Integer length) {
    this.length = length;
  }


  public SalesRuleDataCouponGenerationSpecInterface prefix(String prefix) {
    this.prefix = prefix;
    return this;
  }

  /**
   * The prefix
   * @return prefix
   */
  @javax.annotation.Nullable
  public String getPrefix() {
    return prefix;
  }

  public void setPrefix(String prefix) {
    this.prefix = prefix;
  }


  public SalesRuleDataCouponGenerationSpecInterface quantity(Integer quantity) {
    this.quantity = quantity;
    return this;
  }

  /**
   * Of coupons to generate
   * @return quantity
   */
  @javax.annotation.Nonnull
  public Integer getQuantity() {
    return quantity;
  }

  public void setQuantity(Integer quantity) {
    this.quantity = quantity;
  }


  public SalesRuleDataCouponGenerationSpecInterface ruleId(Integer ruleId) {
    this.ruleId = ruleId;
    return this;
  }

  /**
   * The id of the rule associated with the coupon
   * @return ruleId
   */
  @javax.annotation.Nonnull
  public Integer getRuleId() {
    return ruleId;
  }

  public void setRuleId(Integer ruleId) {
    this.ruleId = ruleId;
  }


  public SalesRuleDataCouponGenerationSpecInterface suffix(String suffix) {
    this.suffix = suffix;
    return this;
  }

  /**
   * The suffix
   * @return suffix
   */
  @javax.annotation.Nullable
  public String getSuffix() {
    return suffix;
  }

  public void setSuffix(String suffix) {
    this.suffix = suffix;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SalesRuleDataCouponGenerationSpecInterface salesRuleDataCouponGenerationSpecInterface = (SalesRuleDataCouponGenerationSpecInterface) o;
    return Objects.equals(this.delimiter, salesRuleDataCouponGenerationSpecInterface.delimiter) &&
        Objects.equals(this.delimiterAtEvery, salesRuleDataCouponGenerationSpecInterface.delimiterAtEvery) &&
        Objects.equals(this.extensionAttributes, salesRuleDataCouponGenerationSpecInterface.extensionAttributes) &&
        Objects.equals(this.format, salesRuleDataCouponGenerationSpecInterface.format) &&
        Objects.equals(this.length, salesRuleDataCouponGenerationSpecInterface.length) &&
        Objects.equals(this.prefix, salesRuleDataCouponGenerationSpecInterface.prefix) &&
        Objects.equals(this.quantity, salesRuleDataCouponGenerationSpecInterface.quantity) &&
        Objects.equals(this.ruleId, salesRuleDataCouponGenerationSpecInterface.ruleId) &&
        Objects.equals(this.suffix, salesRuleDataCouponGenerationSpecInterface.suffix);
  }

  @Override
  public int hashCode() {
    return Objects.hash(delimiter, delimiterAtEvery, extensionAttributes, format, length, prefix, quantity, ruleId, suffix);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SalesRuleDataCouponGenerationSpecInterface {\n");
    sb.append("    delimiter: ").append(toIndentedString(delimiter)).append("\n");
    sb.append("    delimiterAtEvery: ").append(toIndentedString(delimiterAtEvery)).append("\n");
    sb.append("    extensionAttributes: ").append(toIndentedString(extensionAttributes)).append("\n");
    sb.append("    format: ").append(toIndentedString(format)).append("\n");
    sb.append("    length: ").append(toIndentedString(length)).append("\n");
    sb.append("    prefix: ").append(toIndentedString(prefix)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    ruleId: ").append(toIndentedString(ruleId)).append("\n");
    sb.append("    suffix: ").append(toIndentedString(suffix)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("delimiter");
    openapiFields.add("delimiter_at_every");
    openapiFields.add("extension_attributes");
    openapiFields.add("format");
    openapiFields.add("length");
    openapiFields.add("prefix");
    openapiFields.add("quantity");
    openapiFields.add("rule_id");
    openapiFields.add("suffix");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("format");
    openapiRequiredFields.add("length");
    openapiRequiredFields.add("quantity");
    openapiRequiredFields.add("rule_id");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to SalesRuleDataCouponGenerationSpecInterface
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!SalesRuleDataCouponGenerationSpecInterface.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in SalesRuleDataCouponGenerationSpecInterface is not found in the empty JSON string", SalesRuleDataCouponGenerationSpecInterface.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!SalesRuleDataCouponGenerationSpecInterface.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `SalesRuleDataCouponGenerationSpecInterface` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : SalesRuleDataCouponGenerationSpecInterface.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("delimiter") != null && !jsonObj.get("delimiter").isJsonNull()) && !jsonObj.get("delimiter").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `delimiter` to be a primitive type in the JSON string but got `%s`", jsonObj.get("delimiter").toString()));
      }
      if (!jsonObj.get("format").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `format` to be a primitive type in the JSON string but got `%s`", jsonObj.get("format").toString()));
      }
      if ((jsonObj.get("prefix") != null && !jsonObj.get("prefix").isJsonNull()) && !jsonObj.get("prefix").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `prefix` to be a primitive type in the JSON string but got `%s`", jsonObj.get("prefix").toString()));
      }
      if ((jsonObj.get("suffix") != null && !jsonObj.get("suffix").isJsonNull()) && !jsonObj.get("suffix").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `suffix` to be a primitive type in the JSON string but got `%s`", jsonObj.get("suffix").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SalesRuleDataCouponGenerationSpecInterface.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SalesRuleDataCouponGenerationSpecInterface' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SalesRuleDataCouponGenerationSpecInterface> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SalesRuleDataCouponGenerationSpecInterface.class));

       return (TypeAdapter<T>) new TypeAdapter<SalesRuleDataCouponGenerationSpecInterface>() {
           @Override
           public void write(JsonWriter out, SalesRuleDataCouponGenerationSpecInterface value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public SalesRuleDataCouponGenerationSpecInterface read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of SalesRuleDataCouponGenerationSpecInterface given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of SalesRuleDataCouponGenerationSpecInterface
   * @throws IOException if the JSON string is invalid with respect to SalesRuleDataCouponGenerationSpecInterface
   */
  public static SalesRuleDataCouponGenerationSpecInterface fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SalesRuleDataCouponGenerationSpecInterface.class);
  }

  /**
   * Convert an instance of SalesRuleDataCouponGenerationSpecInterface to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

