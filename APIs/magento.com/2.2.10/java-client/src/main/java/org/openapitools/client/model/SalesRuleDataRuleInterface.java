/*
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.SalesRuleDataConditionInterface;
import org.openapitools.client.model.SalesRuleDataRuleExtensionInterface;
import org.openapitools.client.model.SalesRuleDataRuleLabelInterface;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Interface RuleInterface
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:00:51.810681-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class SalesRuleDataRuleInterface {
  public static final String SERIALIZED_NAME_ACTION_CONDITION = "action_condition";
  @SerializedName(SERIALIZED_NAME_ACTION_CONDITION)
  private SalesRuleDataConditionInterface actionCondition;

  public static final String SERIALIZED_NAME_APPLY_TO_SHIPPING = "apply_to_shipping";
  @SerializedName(SERIALIZED_NAME_APPLY_TO_SHIPPING)
  private Boolean applyToShipping;

  public static final String SERIALIZED_NAME_CONDITION = "condition";
  @SerializedName(SERIALIZED_NAME_CONDITION)
  private SalesRuleDataConditionInterface condition;

  public static final String SERIALIZED_NAME_COUPON_TYPE = "coupon_type";
  @SerializedName(SERIALIZED_NAME_COUPON_TYPE)
  private String couponType;

  public static final String SERIALIZED_NAME_CUSTOMER_GROUP_IDS = "customer_group_ids";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_GROUP_IDS)
  private List<Integer> customerGroupIds = new ArrayList<>();

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_DISCOUNT_AMOUNT = "discount_amount";
  @SerializedName(SERIALIZED_NAME_DISCOUNT_AMOUNT)
  private BigDecimal discountAmount;

  public static final String SERIALIZED_NAME_DISCOUNT_QTY = "discount_qty";
  @SerializedName(SERIALIZED_NAME_DISCOUNT_QTY)
  private BigDecimal discountQty;

  public static final String SERIALIZED_NAME_DISCOUNT_STEP = "discount_step";
  @SerializedName(SERIALIZED_NAME_DISCOUNT_STEP)
  private Integer discountStep;

  public static final String SERIALIZED_NAME_EXTENSION_ATTRIBUTES = "extension_attributes";
  @SerializedName(SERIALIZED_NAME_EXTENSION_ATTRIBUTES)
  private SalesRuleDataRuleExtensionInterface extensionAttributes;

  public static final String SERIALIZED_NAME_FROM_DATE = "from_date";
  @SerializedName(SERIALIZED_NAME_FROM_DATE)
  private String fromDate;

  public static final String SERIALIZED_NAME_IS_ACTIVE = "is_active";
  @SerializedName(SERIALIZED_NAME_IS_ACTIVE)
  private Boolean isActive;

  public static final String SERIALIZED_NAME_IS_ADVANCED = "is_advanced";
  @SerializedName(SERIALIZED_NAME_IS_ADVANCED)
  private Boolean isAdvanced;

  public static final String SERIALIZED_NAME_IS_RSS = "is_rss";
  @SerializedName(SERIALIZED_NAME_IS_RSS)
  private Boolean isRss;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PRODUCT_IDS = "product_ids";
  @SerializedName(SERIALIZED_NAME_PRODUCT_IDS)
  private List<Integer> productIds = new ArrayList<>();

  public static final String SERIALIZED_NAME_RULE_ID = "rule_id";
  @SerializedName(SERIALIZED_NAME_RULE_ID)
  private Integer ruleId;

  public static final String SERIALIZED_NAME_SIMPLE_ACTION = "simple_action";
  @SerializedName(SERIALIZED_NAME_SIMPLE_ACTION)
  private String simpleAction;

  public static final String SERIALIZED_NAME_SIMPLE_FREE_SHIPPING = "simple_free_shipping";
  @SerializedName(SERIALIZED_NAME_SIMPLE_FREE_SHIPPING)
  private String simpleFreeShipping;

  public static final String SERIALIZED_NAME_SORT_ORDER = "sort_order";
  @SerializedName(SERIALIZED_NAME_SORT_ORDER)
  private Integer sortOrder;

  public static final String SERIALIZED_NAME_STOP_RULES_PROCESSING = "stop_rules_processing";
  @SerializedName(SERIALIZED_NAME_STOP_RULES_PROCESSING)
  private Boolean stopRulesProcessing;

  public static final String SERIALIZED_NAME_STORE_LABELS = "store_labels";
  @SerializedName(SERIALIZED_NAME_STORE_LABELS)
  private List<SalesRuleDataRuleLabelInterface> storeLabels = new ArrayList<>();

  public static final String SERIALIZED_NAME_TIMES_USED = "times_used";
  @SerializedName(SERIALIZED_NAME_TIMES_USED)
  private Integer timesUsed;

  public static final String SERIALIZED_NAME_TO_DATE = "to_date";
  @SerializedName(SERIALIZED_NAME_TO_DATE)
  private String toDate;

  public static final String SERIALIZED_NAME_USE_AUTO_GENERATION = "use_auto_generation";
  @SerializedName(SERIALIZED_NAME_USE_AUTO_GENERATION)
  private Boolean useAutoGeneration;

  public static final String SERIALIZED_NAME_USES_PER_COUPON = "uses_per_coupon";
  @SerializedName(SERIALIZED_NAME_USES_PER_COUPON)
  private Integer usesPerCoupon;

  public static final String SERIALIZED_NAME_USES_PER_CUSTOMER = "uses_per_customer";
  @SerializedName(SERIALIZED_NAME_USES_PER_CUSTOMER)
  private Integer usesPerCustomer;

  public static final String SERIALIZED_NAME_WEBSITE_IDS = "website_ids";
  @SerializedName(SERIALIZED_NAME_WEBSITE_IDS)
  private List<Integer> websiteIds = new ArrayList<>();

  public SalesRuleDataRuleInterface() {
  }

  public SalesRuleDataRuleInterface actionCondition(SalesRuleDataConditionInterface actionCondition) {
    this.actionCondition = actionCondition;
    return this;
  }

  /**
   * Get actionCondition
   * @return actionCondition
   */
  @javax.annotation.Nullable
  public SalesRuleDataConditionInterface getActionCondition() {
    return actionCondition;
  }

  public void setActionCondition(SalesRuleDataConditionInterface actionCondition) {
    this.actionCondition = actionCondition;
  }


  public SalesRuleDataRuleInterface applyToShipping(Boolean applyToShipping) {
    this.applyToShipping = applyToShipping;
    return this;
  }

  /**
   * The rule applies to shipping
   * @return applyToShipping
   */
  @javax.annotation.Nonnull
  public Boolean getApplyToShipping() {
    return applyToShipping;
  }

  public void setApplyToShipping(Boolean applyToShipping) {
    this.applyToShipping = applyToShipping;
  }


  public SalesRuleDataRuleInterface condition(SalesRuleDataConditionInterface condition) {
    this.condition = condition;
    return this;
  }

  /**
   * Get condition
   * @return condition
   */
  @javax.annotation.Nullable
  public SalesRuleDataConditionInterface getCondition() {
    return condition;
  }

  public void setCondition(SalesRuleDataConditionInterface condition) {
    this.condition = condition;
  }


  public SalesRuleDataRuleInterface couponType(String couponType) {
    this.couponType = couponType;
    return this;
  }

  /**
   * Coupon type
   * @return couponType
   */
  @javax.annotation.Nonnull
  public String getCouponType() {
    return couponType;
  }

  public void setCouponType(String couponType) {
    this.couponType = couponType;
  }


  public SalesRuleDataRuleInterface customerGroupIds(List<Integer> customerGroupIds) {
    this.customerGroupIds = customerGroupIds;
    return this;
  }

  public SalesRuleDataRuleInterface addCustomerGroupIdsItem(Integer customerGroupIdsItem) {
    if (this.customerGroupIds == null) {
      this.customerGroupIds = new ArrayList<>();
    }
    this.customerGroupIds.add(customerGroupIdsItem);
    return this;
  }

  /**
   * Ids of customer groups that the rule applies to
   * @return customerGroupIds
   */
  @javax.annotation.Nonnull
  public List<Integer> getCustomerGroupIds() {
    return customerGroupIds;
  }

  public void setCustomerGroupIds(List<Integer> customerGroupIds) {
    this.customerGroupIds = customerGroupIds;
  }


  public SalesRuleDataRuleInterface description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Description
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public SalesRuleDataRuleInterface discountAmount(BigDecimal discountAmount) {
    this.discountAmount = discountAmount;
    return this;
  }

  /**
   * Discount amount
   * @return discountAmount
   */
  @javax.annotation.Nonnull
  public BigDecimal getDiscountAmount() {
    return discountAmount;
  }

  public void setDiscountAmount(BigDecimal discountAmount) {
    this.discountAmount = discountAmount;
  }


  public SalesRuleDataRuleInterface discountQty(BigDecimal discountQty) {
    this.discountQty = discountQty;
    return this;
  }

  /**
   * Maximum qty discount is applied
   * @return discountQty
   */
  @javax.annotation.Nullable
  public BigDecimal getDiscountQty() {
    return discountQty;
  }

  public void setDiscountQty(BigDecimal discountQty) {
    this.discountQty = discountQty;
  }


  public SalesRuleDataRuleInterface discountStep(Integer discountStep) {
    this.discountStep = discountStep;
    return this;
  }

  /**
   * Discount step
   * @return discountStep
   */
  @javax.annotation.Nonnull
  public Integer getDiscountStep() {
    return discountStep;
  }

  public void setDiscountStep(Integer discountStep) {
    this.discountStep = discountStep;
  }


  public SalesRuleDataRuleInterface extensionAttributes(SalesRuleDataRuleExtensionInterface extensionAttributes) {
    this.extensionAttributes = extensionAttributes;
    return this;
  }

  /**
   * Get extensionAttributes
   * @return extensionAttributes
   */
  @javax.annotation.Nullable
  public SalesRuleDataRuleExtensionInterface getExtensionAttributes() {
    return extensionAttributes;
  }

  public void setExtensionAttributes(SalesRuleDataRuleExtensionInterface extensionAttributes) {
    this.extensionAttributes = extensionAttributes;
  }


  public SalesRuleDataRuleInterface fromDate(String fromDate) {
    this.fromDate = fromDate;
    return this;
  }

  /**
   * The start date when the coupon is active
   * @return fromDate
   */
  @javax.annotation.Nullable
  public String getFromDate() {
    return fromDate;
  }

  public void setFromDate(String fromDate) {
    this.fromDate = fromDate;
  }


  public SalesRuleDataRuleInterface isActive(Boolean isActive) {
    this.isActive = isActive;
    return this;
  }

  /**
   * The coupon is active
   * @return isActive
   */
  @javax.annotation.Nonnull
  public Boolean getIsActive() {
    return isActive;
  }

  public void setIsActive(Boolean isActive) {
    this.isActive = isActive;
  }


  public SalesRuleDataRuleInterface isAdvanced(Boolean isAdvanced) {
    this.isAdvanced = isAdvanced;
    return this;
  }

  /**
   * Is this field needed
   * @return isAdvanced
   */
  @javax.annotation.Nonnull
  public Boolean getIsAdvanced() {
    return isAdvanced;
  }

  public void setIsAdvanced(Boolean isAdvanced) {
    this.isAdvanced = isAdvanced;
  }


  public SalesRuleDataRuleInterface isRss(Boolean isRss) {
    this.isRss = isRss;
    return this;
  }

  /**
   * Whether the rule is in RSS
   * @return isRss
   */
  @javax.annotation.Nonnull
  public Boolean getIsRss() {
    return isRss;
  }

  public void setIsRss(Boolean isRss) {
    this.isRss = isRss;
  }


  public SalesRuleDataRuleInterface name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Rule name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public SalesRuleDataRuleInterface productIds(List<Integer> productIds) {
    this.productIds = productIds;
    return this;
  }

  public SalesRuleDataRuleInterface addProductIdsItem(Integer productIdsItem) {
    if (this.productIds == null) {
      this.productIds = new ArrayList<>();
    }
    this.productIds.add(productIdsItem);
    return this;
  }

  /**
   * Product ids
   * @return productIds
   */
  @javax.annotation.Nullable
  public List<Integer> getProductIds() {
    return productIds;
  }

  public void setProductIds(List<Integer> productIds) {
    this.productIds = productIds;
  }


  public SalesRuleDataRuleInterface ruleId(Integer ruleId) {
    this.ruleId = ruleId;
    return this;
  }

  /**
   * Rule id
   * @return ruleId
   */
  @javax.annotation.Nullable
  public Integer getRuleId() {
    return ruleId;
  }

  public void setRuleId(Integer ruleId) {
    this.ruleId = ruleId;
  }


  public SalesRuleDataRuleInterface simpleAction(String simpleAction) {
    this.simpleAction = simpleAction;
    return this;
  }

  /**
   * Simple action of the rule
   * @return simpleAction
   */
  @javax.annotation.Nullable
  public String getSimpleAction() {
    return simpleAction;
  }

  public void setSimpleAction(String simpleAction) {
    this.simpleAction = simpleAction;
  }


  public SalesRuleDataRuleInterface simpleFreeShipping(String simpleFreeShipping) {
    this.simpleFreeShipping = simpleFreeShipping;
    return this;
  }

  /**
   * To grant free shipping
   * @return simpleFreeShipping
   */
  @javax.annotation.Nullable
  public String getSimpleFreeShipping() {
    return simpleFreeShipping;
  }

  public void setSimpleFreeShipping(String simpleFreeShipping) {
    this.simpleFreeShipping = simpleFreeShipping;
  }


  public SalesRuleDataRuleInterface sortOrder(Integer sortOrder) {
    this.sortOrder = sortOrder;
    return this;
  }

  /**
   * Sort order
   * @return sortOrder
   */
  @javax.annotation.Nonnull
  public Integer getSortOrder() {
    return sortOrder;
  }

  public void setSortOrder(Integer sortOrder) {
    this.sortOrder = sortOrder;
  }


  public SalesRuleDataRuleInterface stopRulesProcessing(Boolean stopRulesProcessing) {
    this.stopRulesProcessing = stopRulesProcessing;
    return this;
  }

  /**
   * To stop rule processing
   * @return stopRulesProcessing
   */
  @javax.annotation.Nonnull
  public Boolean getStopRulesProcessing() {
    return stopRulesProcessing;
  }

  public void setStopRulesProcessing(Boolean stopRulesProcessing) {
    this.stopRulesProcessing = stopRulesProcessing;
  }


  public SalesRuleDataRuleInterface storeLabels(List<SalesRuleDataRuleLabelInterface> storeLabels) {
    this.storeLabels = storeLabels;
    return this;
  }

  public SalesRuleDataRuleInterface addStoreLabelsItem(SalesRuleDataRuleLabelInterface storeLabelsItem) {
    if (this.storeLabels == null) {
      this.storeLabels = new ArrayList<>();
    }
    this.storeLabels.add(storeLabelsItem);
    return this;
  }

  /**
   * Display label
   * @return storeLabels
   */
  @javax.annotation.Nullable
  public List<SalesRuleDataRuleLabelInterface> getStoreLabels() {
    return storeLabels;
  }

  public void setStoreLabels(List<SalesRuleDataRuleLabelInterface> storeLabels) {
    this.storeLabels = storeLabels;
  }


  public SalesRuleDataRuleInterface timesUsed(Integer timesUsed) {
    this.timesUsed = timesUsed;
    return this;
  }

  /**
   * How many times the rule has been used
   * @return timesUsed
   */
  @javax.annotation.Nonnull
  public Integer getTimesUsed() {
    return timesUsed;
  }

  public void setTimesUsed(Integer timesUsed) {
    this.timesUsed = timesUsed;
  }


  public SalesRuleDataRuleInterface toDate(String toDate) {
    this.toDate = toDate;
    return this;
  }

  /**
   * The end date when the coupon is active
   * @return toDate
   */
  @javax.annotation.Nullable
  public String getToDate() {
    return toDate;
  }

  public void setToDate(String toDate) {
    this.toDate = toDate;
  }


  public SalesRuleDataRuleInterface useAutoGeneration(Boolean useAutoGeneration) {
    this.useAutoGeneration = useAutoGeneration;
    return this;
  }

  /**
   * To auto generate coupon
   * @return useAutoGeneration
   */
  @javax.annotation.Nonnull
  public Boolean getUseAutoGeneration() {
    return useAutoGeneration;
  }

  public void setUseAutoGeneration(Boolean useAutoGeneration) {
    this.useAutoGeneration = useAutoGeneration;
  }


  public SalesRuleDataRuleInterface usesPerCoupon(Integer usesPerCoupon) {
    this.usesPerCoupon = usesPerCoupon;
    return this;
  }

  /**
   * Limit of uses per coupon
   * @return usesPerCoupon
   */
  @javax.annotation.Nonnull
  public Integer getUsesPerCoupon() {
    return usesPerCoupon;
  }

  public void setUsesPerCoupon(Integer usesPerCoupon) {
    this.usesPerCoupon = usesPerCoupon;
  }


  public SalesRuleDataRuleInterface usesPerCustomer(Integer usesPerCustomer) {
    this.usesPerCustomer = usesPerCustomer;
    return this;
  }

  /**
   * Number of uses per customer
   * @return usesPerCustomer
   */
  @javax.annotation.Nonnull
  public Integer getUsesPerCustomer() {
    return usesPerCustomer;
  }

  public void setUsesPerCustomer(Integer usesPerCustomer) {
    this.usesPerCustomer = usesPerCustomer;
  }


  public SalesRuleDataRuleInterface websiteIds(List<Integer> websiteIds) {
    this.websiteIds = websiteIds;
    return this;
  }

  public SalesRuleDataRuleInterface addWebsiteIdsItem(Integer websiteIdsItem) {
    if (this.websiteIds == null) {
      this.websiteIds = new ArrayList<>();
    }
    this.websiteIds.add(websiteIdsItem);
    return this;
  }

  /**
   * A list of websites the rule applies to
   * @return websiteIds
   */
  @javax.annotation.Nonnull
  public List<Integer> getWebsiteIds() {
    return websiteIds;
  }

  public void setWebsiteIds(List<Integer> websiteIds) {
    this.websiteIds = websiteIds;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SalesRuleDataRuleInterface salesRuleDataRuleInterface = (SalesRuleDataRuleInterface) o;
    return Objects.equals(this.actionCondition, salesRuleDataRuleInterface.actionCondition) &&
        Objects.equals(this.applyToShipping, salesRuleDataRuleInterface.applyToShipping) &&
        Objects.equals(this.condition, salesRuleDataRuleInterface.condition) &&
        Objects.equals(this.couponType, salesRuleDataRuleInterface.couponType) &&
        Objects.equals(this.customerGroupIds, salesRuleDataRuleInterface.customerGroupIds) &&
        Objects.equals(this.description, salesRuleDataRuleInterface.description) &&
        Objects.equals(this.discountAmount, salesRuleDataRuleInterface.discountAmount) &&
        Objects.equals(this.discountQty, salesRuleDataRuleInterface.discountQty) &&
        Objects.equals(this.discountStep, salesRuleDataRuleInterface.discountStep) &&
        Objects.equals(this.extensionAttributes, salesRuleDataRuleInterface.extensionAttributes) &&
        Objects.equals(this.fromDate, salesRuleDataRuleInterface.fromDate) &&
        Objects.equals(this.isActive, salesRuleDataRuleInterface.isActive) &&
        Objects.equals(this.isAdvanced, salesRuleDataRuleInterface.isAdvanced) &&
        Objects.equals(this.isRss, salesRuleDataRuleInterface.isRss) &&
        Objects.equals(this.name, salesRuleDataRuleInterface.name) &&
        Objects.equals(this.productIds, salesRuleDataRuleInterface.productIds) &&
        Objects.equals(this.ruleId, salesRuleDataRuleInterface.ruleId) &&
        Objects.equals(this.simpleAction, salesRuleDataRuleInterface.simpleAction) &&
        Objects.equals(this.simpleFreeShipping, salesRuleDataRuleInterface.simpleFreeShipping) &&
        Objects.equals(this.sortOrder, salesRuleDataRuleInterface.sortOrder) &&
        Objects.equals(this.stopRulesProcessing, salesRuleDataRuleInterface.stopRulesProcessing) &&
        Objects.equals(this.storeLabels, salesRuleDataRuleInterface.storeLabels) &&
        Objects.equals(this.timesUsed, salesRuleDataRuleInterface.timesUsed) &&
        Objects.equals(this.toDate, salesRuleDataRuleInterface.toDate) &&
        Objects.equals(this.useAutoGeneration, salesRuleDataRuleInterface.useAutoGeneration) &&
        Objects.equals(this.usesPerCoupon, salesRuleDataRuleInterface.usesPerCoupon) &&
        Objects.equals(this.usesPerCustomer, salesRuleDataRuleInterface.usesPerCustomer) &&
        Objects.equals(this.websiteIds, salesRuleDataRuleInterface.websiteIds);
  }

  @Override
  public int hashCode() {
    return Objects.hash(actionCondition, applyToShipping, condition, couponType, customerGroupIds, description, discountAmount, discountQty, discountStep, extensionAttributes, fromDate, isActive, isAdvanced, isRss, name, productIds, ruleId, simpleAction, simpleFreeShipping, sortOrder, stopRulesProcessing, storeLabels, timesUsed, toDate, useAutoGeneration, usesPerCoupon, usesPerCustomer, websiteIds);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SalesRuleDataRuleInterface {\n");
    sb.append("    actionCondition: ").append(toIndentedString(actionCondition)).append("\n");
    sb.append("    applyToShipping: ").append(toIndentedString(applyToShipping)).append("\n");
    sb.append("    condition: ").append(toIndentedString(condition)).append("\n");
    sb.append("    couponType: ").append(toIndentedString(couponType)).append("\n");
    sb.append("    customerGroupIds: ").append(toIndentedString(customerGroupIds)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    discountAmount: ").append(toIndentedString(discountAmount)).append("\n");
    sb.append("    discountQty: ").append(toIndentedString(discountQty)).append("\n");
    sb.append("    discountStep: ").append(toIndentedString(discountStep)).append("\n");
    sb.append("    extensionAttributes: ").append(toIndentedString(extensionAttributes)).append("\n");
    sb.append("    fromDate: ").append(toIndentedString(fromDate)).append("\n");
    sb.append("    isActive: ").append(toIndentedString(isActive)).append("\n");
    sb.append("    isAdvanced: ").append(toIndentedString(isAdvanced)).append("\n");
    sb.append("    isRss: ").append(toIndentedString(isRss)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    productIds: ").append(toIndentedString(productIds)).append("\n");
    sb.append("    ruleId: ").append(toIndentedString(ruleId)).append("\n");
    sb.append("    simpleAction: ").append(toIndentedString(simpleAction)).append("\n");
    sb.append("    simpleFreeShipping: ").append(toIndentedString(simpleFreeShipping)).append("\n");
    sb.append("    sortOrder: ").append(toIndentedString(sortOrder)).append("\n");
    sb.append("    stopRulesProcessing: ").append(toIndentedString(stopRulesProcessing)).append("\n");
    sb.append("    storeLabels: ").append(toIndentedString(storeLabels)).append("\n");
    sb.append("    timesUsed: ").append(toIndentedString(timesUsed)).append("\n");
    sb.append("    toDate: ").append(toIndentedString(toDate)).append("\n");
    sb.append("    useAutoGeneration: ").append(toIndentedString(useAutoGeneration)).append("\n");
    sb.append("    usesPerCoupon: ").append(toIndentedString(usesPerCoupon)).append("\n");
    sb.append("    usesPerCustomer: ").append(toIndentedString(usesPerCustomer)).append("\n");
    sb.append("    websiteIds: ").append(toIndentedString(websiteIds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("action_condition");
    openapiFields.add("apply_to_shipping");
    openapiFields.add("condition");
    openapiFields.add("coupon_type");
    openapiFields.add("customer_group_ids");
    openapiFields.add("description");
    openapiFields.add("discount_amount");
    openapiFields.add("discount_qty");
    openapiFields.add("discount_step");
    openapiFields.add("extension_attributes");
    openapiFields.add("from_date");
    openapiFields.add("is_active");
    openapiFields.add("is_advanced");
    openapiFields.add("is_rss");
    openapiFields.add("name");
    openapiFields.add("product_ids");
    openapiFields.add("rule_id");
    openapiFields.add("simple_action");
    openapiFields.add("simple_free_shipping");
    openapiFields.add("sort_order");
    openapiFields.add("stop_rules_processing");
    openapiFields.add("store_labels");
    openapiFields.add("times_used");
    openapiFields.add("to_date");
    openapiFields.add("use_auto_generation");
    openapiFields.add("uses_per_coupon");
    openapiFields.add("uses_per_customer");
    openapiFields.add("website_ids");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("apply_to_shipping");
    openapiRequiredFields.add("coupon_type");
    openapiRequiredFields.add("customer_group_ids");
    openapiRequiredFields.add("discount_amount");
    openapiRequiredFields.add("discount_step");
    openapiRequiredFields.add("is_active");
    openapiRequiredFields.add("is_advanced");
    openapiRequiredFields.add("is_rss");
    openapiRequiredFields.add("sort_order");
    openapiRequiredFields.add("stop_rules_processing");
    openapiRequiredFields.add("times_used");
    openapiRequiredFields.add("use_auto_generation");
    openapiRequiredFields.add("uses_per_coupon");
    openapiRequiredFields.add("uses_per_customer");
    openapiRequiredFields.add("website_ids");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to SalesRuleDataRuleInterface
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!SalesRuleDataRuleInterface.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in SalesRuleDataRuleInterface is not found in the empty JSON string", SalesRuleDataRuleInterface.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!SalesRuleDataRuleInterface.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `SalesRuleDataRuleInterface` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : SalesRuleDataRuleInterface.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `action_condition`
      if (jsonObj.get("action_condition") != null && !jsonObj.get("action_condition").isJsonNull()) {
        SalesRuleDataConditionInterface.validateJsonElement(jsonObj.get("action_condition"));
      }
      // validate the optional field `condition`
      if (jsonObj.get("condition") != null && !jsonObj.get("condition").isJsonNull()) {
        SalesRuleDataConditionInterface.validateJsonElement(jsonObj.get("condition"));
      }
      if (!jsonObj.get("coupon_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `coupon_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("coupon_type").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("customer_group_ids") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("customer_group_ids").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `customer_group_ids` to be an array in the JSON string but got `%s`", jsonObj.get("customer_group_ids").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      // validate the optional field `extension_attributes`
      if (jsonObj.get("extension_attributes") != null && !jsonObj.get("extension_attributes").isJsonNull()) {
        SalesRuleDataRuleExtensionInterface.validateJsonElement(jsonObj.get("extension_attributes"));
      }
      if ((jsonObj.get("from_date") != null && !jsonObj.get("from_date").isJsonNull()) && !jsonObj.get("from_date").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `from_date` to be a primitive type in the JSON string but got `%s`", jsonObj.get("from_date").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("product_ids") != null && !jsonObj.get("product_ids").isJsonNull() && !jsonObj.get("product_ids").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `product_ids` to be an array in the JSON string but got `%s`", jsonObj.get("product_ids").toString()));
      }
      if ((jsonObj.get("simple_action") != null && !jsonObj.get("simple_action").isJsonNull()) && !jsonObj.get("simple_action").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `simple_action` to be a primitive type in the JSON string but got `%s`", jsonObj.get("simple_action").toString()));
      }
      if ((jsonObj.get("simple_free_shipping") != null && !jsonObj.get("simple_free_shipping").isJsonNull()) && !jsonObj.get("simple_free_shipping").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `simple_free_shipping` to be a primitive type in the JSON string but got `%s`", jsonObj.get("simple_free_shipping").toString()));
      }
      if (jsonObj.get("store_labels") != null && !jsonObj.get("store_labels").isJsonNull()) {
        JsonArray jsonArraystoreLabels = jsonObj.getAsJsonArray("store_labels");
        if (jsonArraystoreLabels != null) {
          // ensure the json data is an array
          if (!jsonObj.get("store_labels").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `store_labels` to be an array in the JSON string but got `%s`", jsonObj.get("store_labels").toString()));
          }

          // validate the optional field `store_labels` (array)
          for (int i = 0; i < jsonArraystoreLabels.size(); i++) {
            SalesRuleDataRuleLabelInterface.validateJsonElement(jsonArraystoreLabels.get(i));
          };
        }
      }
      if ((jsonObj.get("to_date") != null && !jsonObj.get("to_date").isJsonNull()) && !jsonObj.get("to_date").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `to_date` to be a primitive type in the JSON string but got `%s`", jsonObj.get("to_date").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("website_ids") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("website_ids").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `website_ids` to be an array in the JSON string but got `%s`", jsonObj.get("website_ids").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SalesRuleDataRuleInterface.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SalesRuleDataRuleInterface' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SalesRuleDataRuleInterface> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SalesRuleDataRuleInterface.class));

       return (TypeAdapter<T>) new TypeAdapter<SalesRuleDataRuleInterface>() {
           @Override
           public void write(JsonWriter out, SalesRuleDataRuleInterface value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public SalesRuleDataRuleInterface read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of SalesRuleDataRuleInterface given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of SalesRuleDataRuleInterface
   * @throws IOException if the JSON string is invalid with respect to SalesRuleDataRuleInterface
   */
  public static SalesRuleDataRuleInterface fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SalesRuleDataRuleInterface.class);
  }

  /**
   * Convert an instance of SalesRuleDataRuleInterface to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

