/*
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AsynchronousOperationsDataDetailedOperationStatusInterface;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Interface BulkStatusInterface Bulk summary data with list of operations items full data.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:00:51.810681-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AsynchronousOperationsDataDetailedBulkOperationsStatusInterface {
  public static final String SERIALIZED_NAME_BULK_ID = "bulk_id";
  @SerializedName(SERIALIZED_NAME_BULK_ID)
  private String bulkId;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_EXTENSION_ATTRIBUTES = "extension_attributes";
  @SerializedName(SERIALIZED_NAME_EXTENSION_ATTRIBUTES)
  private Object extensionAttributes;

  public static final String SERIALIZED_NAME_OPERATION_COUNT = "operation_count";
  @SerializedName(SERIALIZED_NAME_OPERATION_COUNT)
  private Integer operationCount;

  public static final String SERIALIZED_NAME_OPERATIONS_LIST = "operations_list";
  @SerializedName(SERIALIZED_NAME_OPERATIONS_LIST)
  private List<AsynchronousOperationsDataDetailedOperationStatusInterface> operationsList = new ArrayList<>();

  public static final String SERIALIZED_NAME_START_TIME = "start_time";
  @SerializedName(SERIALIZED_NAME_START_TIME)
  private String startTime;

  public static final String SERIALIZED_NAME_USER_ID = "user_id";
  @SerializedName(SERIALIZED_NAME_USER_ID)
  private Integer userId;

  public AsynchronousOperationsDataDetailedBulkOperationsStatusInterface() {
  }

  public AsynchronousOperationsDataDetailedBulkOperationsStatusInterface bulkId(String bulkId) {
    this.bulkId = bulkId;
    return this;
  }

  /**
   * Bulk uuid
   * @return bulkId
   */
  @javax.annotation.Nonnull
  public String getBulkId() {
    return bulkId;
  }

  public void setBulkId(String bulkId) {
    this.bulkId = bulkId;
  }


  public AsynchronousOperationsDataDetailedBulkOperationsStatusInterface description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Bulk description
   * @return description
   */
  @javax.annotation.Nonnull
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public AsynchronousOperationsDataDetailedBulkOperationsStatusInterface extensionAttributes(Object extensionAttributes) {
    this.extensionAttributes = extensionAttributes;
    return this;
  }

  /**
   * ExtensionInterface class for @see \\Magento\\AsynchronousOperations\\Api\\Data\\BulkSummaryInterface
   * @return extensionAttributes
   */
  @javax.annotation.Nullable
  public Object getExtensionAttributes() {
    return extensionAttributes;
  }

  public void setExtensionAttributes(Object extensionAttributes) {
    this.extensionAttributes = extensionAttributes;
  }


  public AsynchronousOperationsDataDetailedBulkOperationsStatusInterface operationCount(Integer operationCount) {
    this.operationCount = operationCount;
    return this;
  }

  /**
   * Total number of operations scheduled in scope of this bulk
   * @return operationCount
   */
  @javax.annotation.Nonnull
  public Integer getOperationCount() {
    return operationCount;
  }

  public void setOperationCount(Integer operationCount) {
    this.operationCount = operationCount;
  }


  public AsynchronousOperationsDataDetailedBulkOperationsStatusInterface operationsList(List<AsynchronousOperationsDataDetailedOperationStatusInterface> operationsList) {
    this.operationsList = operationsList;
    return this;
  }

  public AsynchronousOperationsDataDetailedBulkOperationsStatusInterface addOperationsListItem(AsynchronousOperationsDataDetailedOperationStatusInterface operationsListItem) {
    if (this.operationsList == null) {
      this.operationsList = new ArrayList<>();
    }
    this.operationsList.add(operationsListItem);
    return this;
  }

  /**
   * Operations list.
   * @return operationsList
   */
  @javax.annotation.Nonnull
  public List<AsynchronousOperationsDataDetailedOperationStatusInterface> getOperationsList() {
    return operationsList;
  }

  public void setOperationsList(List<AsynchronousOperationsDataDetailedOperationStatusInterface> operationsList) {
    this.operationsList = operationsList;
  }


  public AsynchronousOperationsDataDetailedBulkOperationsStatusInterface startTime(String startTime) {
    this.startTime = startTime;
    return this;
  }

  /**
   * Bulk scheduled time
   * @return startTime
   */
  @javax.annotation.Nonnull
  public String getStartTime() {
    return startTime;
  }

  public void setStartTime(String startTime) {
    this.startTime = startTime;
  }


  public AsynchronousOperationsDataDetailedBulkOperationsStatusInterface userId(Integer userId) {
    this.userId = userId;
    return this;
  }

  /**
   * User id
   * @return userId
   */
  @javax.annotation.Nonnull
  public Integer getUserId() {
    return userId;
  }

  public void setUserId(Integer userId) {
    this.userId = userId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AsynchronousOperationsDataDetailedBulkOperationsStatusInterface asynchronousOperationsDataDetailedBulkOperationsStatusInterface = (AsynchronousOperationsDataDetailedBulkOperationsStatusInterface) o;
    return Objects.equals(this.bulkId, asynchronousOperationsDataDetailedBulkOperationsStatusInterface.bulkId) &&
        Objects.equals(this.description, asynchronousOperationsDataDetailedBulkOperationsStatusInterface.description) &&
        Objects.equals(this.extensionAttributes, asynchronousOperationsDataDetailedBulkOperationsStatusInterface.extensionAttributes) &&
        Objects.equals(this.operationCount, asynchronousOperationsDataDetailedBulkOperationsStatusInterface.operationCount) &&
        Objects.equals(this.operationsList, asynchronousOperationsDataDetailedBulkOperationsStatusInterface.operationsList) &&
        Objects.equals(this.startTime, asynchronousOperationsDataDetailedBulkOperationsStatusInterface.startTime) &&
        Objects.equals(this.userId, asynchronousOperationsDataDetailedBulkOperationsStatusInterface.userId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bulkId, description, extensionAttributes, operationCount, operationsList, startTime, userId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AsynchronousOperationsDataDetailedBulkOperationsStatusInterface {\n");
    sb.append("    bulkId: ").append(toIndentedString(bulkId)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    extensionAttributes: ").append(toIndentedString(extensionAttributes)).append("\n");
    sb.append("    operationCount: ").append(toIndentedString(operationCount)).append("\n");
    sb.append("    operationsList: ").append(toIndentedString(operationsList)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("bulk_id");
    openapiFields.add("description");
    openapiFields.add("extension_attributes");
    openapiFields.add("operation_count");
    openapiFields.add("operations_list");
    openapiFields.add("start_time");
    openapiFields.add("user_id");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("bulk_id");
    openapiRequiredFields.add("description");
    openapiRequiredFields.add("operation_count");
    openapiRequiredFields.add("operations_list");
    openapiRequiredFields.add("start_time");
    openapiRequiredFields.add("user_id");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AsynchronousOperationsDataDetailedBulkOperationsStatusInterface
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AsynchronousOperationsDataDetailedBulkOperationsStatusInterface.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AsynchronousOperationsDataDetailedBulkOperationsStatusInterface is not found in the empty JSON string", AsynchronousOperationsDataDetailedBulkOperationsStatusInterface.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AsynchronousOperationsDataDetailedBulkOperationsStatusInterface.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AsynchronousOperationsDataDetailedBulkOperationsStatusInterface` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : AsynchronousOperationsDataDetailedBulkOperationsStatusInterface.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("bulk_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bulk_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bulk_id").toString()));
      }
      if (!jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      // ensure the json data is an array
      if (!jsonObj.get("operations_list").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `operations_list` to be an array in the JSON string but got `%s`", jsonObj.get("operations_list").toString()));
      }

      JsonArray jsonArrayoperationsList = jsonObj.getAsJsonArray("operations_list");
      // validate the required field `operations_list` (array)
      for (int i = 0; i < jsonArrayoperationsList.size(); i++) {
        AsynchronousOperationsDataDetailedOperationStatusInterface.validateJsonElement(jsonArrayoperationsList.get(i));
      };
      if (!jsonObj.get("start_time").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `start_time` to be a primitive type in the JSON string but got `%s`", jsonObj.get("start_time").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AsynchronousOperationsDataDetailedBulkOperationsStatusInterface.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AsynchronousOperationsDataDetailedBulkOperationsStatusInterface' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AsynchronousOperationsDataDetailedBulkOperationsStatusInterface> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AsynchronousOperationsDataDetailedBulkOperationsStatusInterface.class));

       return (TypeAdapter<T>) new TypeAdapter<AsynchronousOperationsDataDetailedBulkOperationsStatusInterface>() {
           @Override
           public void write(JsonWriter out, AsynchronousOperationsDataDetailedBulkOperationsStatusInterface value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AsynchronousOperationsDataDetailedBulkOperationsStatusInterface read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AsynchronousOperationsDataDetailedBulkOperationsStatusInterface given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AsynchronousOperationsDataDetailedBulkOperationsStatusInterface
   * @throws IOException if the JSON string is invalid with respect to AsynchronousOperationsDataDetailedBulkOperationsStatusInterface
   */
  public static AsynchronousOperationsDataDetailedBulkOperationsStatusInterface fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AsynchronousOperationsDataDetailedBulkOperationsStatusInterface.class);
  }

  /**
   * Convert an instance of AsynchronousOperationsDataDetailedBulkOperationsStatusInterface to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

