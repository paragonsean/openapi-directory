/*
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.CompanyDataCompanyCustomerInterface;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ExtensionInterface class for @see \\Magento\\Customer\\Api\\Data\\CustomerInterface
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:00:51.810681-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CustomerDataCustomerExtensionInterface {
  public static final String SERIALIZED_NAME_AMAZON_ID = "amazon_id";
  @SerializedName(SERIALIZED_NAME_AMAZON_ID)
  private String amazonId;

  public static final String SERIALIZED_NAME_COMPANY_ATTRIBUTES = "company_attributes";
  @SerializedName(SERIALIZED_NAME_COMPANY_ATTRIBUTES)
  private CompanyDataCompanyCustomerInterface companyAttributes;

  public static final String SERIALIZED_NAME_IS_SUBSCRIBED = "is_subscribed";
  @SerializedName(SERIALIZED_NAME_IS_SUBSCRIBED)
  private Boolean isSubscribed;

  public static final String SERIALIZED_NAME_VERTEX_CUSTOMER_CODE = "vertex_customer_code";
  @SerializedName(SERIALIZED_NAME_VERTEX_CUSTOMER_CODE)
  private String vertexCustomerCode;

  public CustomerDataCustomerExtensionInterface() {
  }

  public CustomerDataCustomerExtensionInterface amazonId(String amazonId) {
    this.amazonId = amazonId;
    return this;
  }

  /**
   * Get amazonId
   * @return amazonId
   */
  @javax.annotation.Nullable
  public String getAmazonId() {
    return amazonId;
  }

  public void setAmazonId(String amazonId) {
    this.amazonId = amazonId;
  }


  public CustomerDataCustomerExtensionInterface companyAttributes(CompanyDataCompanyCustomerInterface companyAttributes) {
    this.companyAttributes = companyAttributes;
    return this;
  }

  /**
   * Get companyAttributes
   * @return companyAttributes
   */
  @javax.annotation.Nullable
  public CompanyDataCompanyCustomerInterface getCompanyAttributes() {
    return companyAttributes;
  }

  public void setCompanyAttributes(CompanyDataCompanyCustomerInterface companyAttributes) {
    this.companyAttributes = companyAttributes;
  }


  public CustomerDataCustomerExtensionInterface isSubscribed(Boolean isSubscribed) {
    this.isSubscribed = isSubscribed;
    return this;
  }

  /**
   * Get isSubscribed
   * @return isSubscribed
   */
  @javax.annotation.Nullable
  public Boolean getIsSubscribed() {
    return isSubscribed;
  }

  public void setIsSubscribed(Boolean isSubscribed) {
    this.isSubscribed = isSubscribed;
  }


  public CustomerDataCustomerExtensionInterface vertexCustomerCode(String vertexCustomerCode) {
    this.vertexCustomerCode = vertexCustomerCode;
    return this;
  }

  /**
   * Get vertexCustomerCode
   * @return vertexCustomerCode
   */
  @javax.annotation.Nullable
  public String getVertexCustomerCode() {
    return vertexCustomerCode;
  }

  public void setVertexCustomerCode(String vertexCustomerCode) {
    this.vertexCustomerCode = vertexCustomerCode;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CustomerDataCustomerExtensionInterface customerDataCustomerExtensionInterface = (CustomerDataCustomerExtensionInterface) o;
    return Objects.equals(this.amazonId, customerDataCustomerExtensionInterface.amazonId) &&
        Objects.equals(this.companyAttributes, customerDataCustomerExtensionInterface.companyAttributes) &&
        Objects.equals(this.isSubscribed, customerDataCustomerExtensionInterface.isSubscribed) &&
        Objects.equals(this.vertexCustomerCode, customerDataCustomerExtensionInterface.vertexCustomerCode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(amazonId, companyAttributes, isSubscribed, vertexCustomerCode);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CustomerDataCustomerExtensionInterface {\n");
    sb.append("    amazonId: ").append(toIndentedString(amazonId)).append("\n");
    sb.append("    companyAttributes: ").append(toIndentedString(companyAttributes)).append("\n");
    sb.append("    isSubscribed: ").append(toIndentedString(isSubscribed)).append("\n");
    sb.append("    vertexCustomerCode: ").append(toIndentedString(vertexCustomerCode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("amazon_id");
    openapiFields.add("company_attributes");
    openapiFields.add("is_subscribed");
    openapiFields.add("vertex_customer_code");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CustomerDataCustomerExtensionInterface
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CustomerDataCustomerExtensionInterface.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CustomerDataCustomerExtensionInterface is not found in the empty JSON string", CustomerDataCustomerExtensionInterface.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CustomerDataCustomerExtensionInterface.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CustomerDataCustomerExtensionInterface` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("amazon_id") != null && !jsonObj.get("amazon_id").isJsonNull()) && !jsonObj.get("amazon_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `amazon_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("amazon_id").toString()));
      }
      // validate the optional field `company_attributes`
      if (jsonObj.get("company_attributes") != null && !jsonObj.get("company_attributes").isJsonNull()) {
        CompanyDataCompanyCustomerInterface.validateJsonElement(jsonObj.get("company_attributes"));
      }
      if ((jsonObj.get("vertex_customer_code") != null && !jsonObj.get("vertex_customer_code").isJsonNull()) && !jsonObj.get("vertex_customer_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `vertex_customer_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("vertex_customer_code").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CustomerDataCustomerExtensionInterface.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CustomerDataCustomerExtensionInterface' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CustomerDataCustomerExtensionInterface> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CustomerDataCustomerExtensionInterface.class));

       return (TypeAdapter<T>) new TypeAdapter<CustomerDataCustomerExtensionInterface>() {
           @Override
           public void write(JsonWriter out, CustomerDataCustomerExtensionInterface value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CustomerDataCustomerExtensionInterface read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CustomerDataCustomerExtensionInterface given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CustomerDataCustomerExtensionInterface
   * @throws IOException if the JSON string is invalid with respect to CustomerDataCustomerExtensionInterface
   */
  public static CustomerDataCustomerExtensionInterface fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CustomerDataCustomerExtensionInterface.class);
  }

  /**
   * Convert an instance of CustomerDataCustomerExtensionInterface to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

