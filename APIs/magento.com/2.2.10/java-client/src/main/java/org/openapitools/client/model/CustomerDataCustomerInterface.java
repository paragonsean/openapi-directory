/*
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CustomerDataAddressInterface;
import org.openapitools.client.model.CustomerDataCustomerExtensionInterface;
import org.openapitools.client.model.FrameworkAttributeInterface;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Customer interface.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:00:51.810681-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CustomerDataCustomerInterface {
  public static final String SERIALIZED_NAME_ADDRESSES = "addresses";
  @SerializedName(SERIALIZED_NAME_ADDRESSES)
  private List<CustomerDataAddressInterface> addresses = new ArrayList<>();

  public static final String SERIALIZED_NAME_CONFIRMATION = "confirmation";
  @SerializedName(SERIALIZED_NAME_CONFIRMATION)
  private String confirmation;

  public static final String SERIALIZED_NAME_CREATED_AT = "created_at";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private String createdAt;

  public static final String SERIALIZED_NAME_CREATED_IN = "created_in";
  @SerializedName(SERIALIZED_NAME_CREATED_IN)
  private String createdIn;

  public static final String SERIALIZED_NAME_CUSTOM_ATTRIBUTES = "custom_attributes";
  @SerializedName(SERIALIZED_NAME_CUSTOM_ATTRIBUTES)
  private List<FrameworkAttributeInterface> customAttributes = new ArrayList<>();

  public static final String SERIALIZED_NAME_DEFAULT_BILLING = "default_billing";
  @SerializedName(SERIALIZED_NAME_DEFAULT_BILLING)
  private String defaultBilling;

  public static final String SERIALIZED_NAME_DEFAULT_SHIPPING = "default_shipping";
  @SerializedName(SERIALIZED_NAME_DEFAULT_SHIPPING)
  private String defaultShipping;

  public static final String SERIALIZED_NAME_DISABLE_AUTO_GROUP_CHANGE = "disable_auto_group_change";
  @SerializedName(SERIALIZED_NAME_DISABLE_AUTO_GROUP_CHANGE)
  private Integer disableAutoGroupChange;

  public static final String SERIALIZED_NAME_DOB = "dob";
  @SerializedName(SERIALIZED_NAME_DOB)
  private String dob;

  public static final String SERIALIZED_NAME_EMAIL = "email";
  @SerializedName(SERIALIZED_NAME_EMAIL)
  private String email;

  public static final String SERIALIZED_NAME_EXTENSION_ATTRIBUTES = "extension_attributes";
  @SerializedName(SERIALIZED_NAME_EXTENSION_ATTRIBUTES)
  private CustomerDataCustomerExtensionInterface extensionAttributes;

  public static final String SERIALIZED_NAME_FIRSTNAME = "firstname";
  @SerializedName(SERIALIZED_NAME_FIRSTNAME)
  private String firstname;

  public static final String SERIALIZED_NAME_GENDER = "gender";
  @SerializedName(SERIALIZED_NAME_GENDER)
  private Integer gender;

  public static final String SERIALIZED_NAME_GROUP_ID = "group_id";
  @SerializedName(SERIALIZED_NAME_GROUP_ID)
  private Integer groupId;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_LASTNAME = "lastname";
  @SerializedName(SERIALIZED_NAME_LASTNAME)
  private String lastname;

  public static final String SERIALIZED_NAME_MIDDLENAME = "middlename";
  @SerializedName(SERIALIZED_NAME_MIDDLENAME)
  private String middlename;

  public static final String SERIALIZED_NAME_PREFIX = "prefix";
  @SerializedName(SERIALIZED_NAME_PREFIX)
  private String prefix;

  public static final String SERIALIZED_NAME_STORE_ID = "store_id";
  @SerializedName(SERIALIZED_NAME_STORE_ID)
  private Integer storeId;

  public static final String SERIALIZED_NAME_SUFFIX = "suffix";
  @SerializedName(SERIALIZED_NAME_SUFFIX)
  private String suffix;

  public static final String SERIALIZED_NAME_TAXVAT = "taxvat";
  @SerializedName(SERIALIZED_NAME_TAXVAT)
  private String taxvat;

  public static final String SERIALIZED_NAME_UPDATED_AT = "updated_at";
  @SerializedName(SERIALIZED_NAME_UPDATED_AT)
  private String updatedAt;

  public static final String SERIALIZED_NAME_WEBSITE_ID = "website_id";
  @SerializedName(SERIALIZED_NAME_WEBSITE_ID)
  private Integer websiteId;

  public CustomerDataCustomerInterface() {
  }

  public CustomerDataCustomerInterface addresses(List<CustomerDataAddressInterface> addresses) {
    this.addresses = addresses;
    return this;
  }

  public CustomerDataCustomerInterface addAddressesItem(CustomerDataAddressInterface addressesItem) {
    if (this.addresses == null) {
      this.addresses = new ArrayList<>();
    }
    this.addresses.add(addressesItem);
    return this;
  }

  /**
   * Customer addresses.
   * @return addresses
   */
  @javax.annotation.Nullable
  public List<CustomerDataAddressInterface> getAddresses() {
    return addresses;
  }

  public void setAddresses(List<CustomerDataAddressInterface> addresses) {
    this.addresses = addresses;
  }


  public CustomerDataCustomerInterface confirmation(String confirmation) {
    this.confirmation = confirmation;
    return this;
  }

  /**
   * Confirmation
   * @return confirmation
   */
  @javax.annotation.Nullable
  public String getConfirmation() {
    return confirmation;
  }

  public void setConfirmation(String confirmation) {
    this.confirmation = confirmation;
  }


  public CustomerDataCustomerInterface createdAt(String createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  /**
   * Created at time
   * @return createdAt
   */
  @javax.annotation.Nullable
  public String getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(String createdAt) {
    this.createdAt = createdAt;
  }


  public CustomerDataCustomerInterface createdIn(String createdIn) {
    this.createdIn = createdIn;
    return this;
  }

  /**
   * Created in area
   * @return createdIn
   */
  @javax.annotation.Nullable
  public String getCreatedIn() {
    return createdIn;
  }

  public void setCreatedIn(String createdIn) {
    this.createdIn = createdIn;
  }


  public CustomerDataCustomerInterface customAttributes(List<FrameworkAttributeInterface> customAttributes) {
    this.customAttributes = customAttributes;
    return this;
  }

  public CustomerDataCustomerInterface addCustomAttributesItem(FrameworkAttributeInterface customAttributesItem) {
    if (this.customAttributes == null) {
      this.customAttributes = new ArrayList<>();
    }
    this.customAttributes.add(customAttributesItem);
    return this;
  }

  /**
   * Custom attributes values.
   * @return customAttributes
   */
  @javax.annotation.Nullable
  public List<FrameworkAttributeInterface> getCustomAttributes() {
    return customAttributes;
  }

  public void setCustomAttributes(List<FrameworkAttributeInterface> customAttributes) {
    this.customAttributes = customAttributes;
  }


  public CustomerDataCustomerInterface defaultBilling(String defaultBilling) {
    this.defaultBilling = defaultBilling;
    return this;
  }

  /**
   * Default billing address id
   * @return defaultBilling
   */
  @javax.annotation.Nullable
  public String getDefaultBilling() {
    return defaultBilling;
  }

  public void setDefaultBilling(String defaultBilling) {
    this.defaultBilling = defaultBilling;
  }


  public CustomerDataCustomerInterface defaultShipping(String defaultShipping) {
    this.defaultShipping = defaultShipping;
    return this;
  }

  /**
   * Default shipping address id
   * @return defaultShipping
   */
  @javax.annotation.Nullable
  public String getDefaultShipping() {
    return defaultShipping;
  }

  public void setDefaultShipping(String defaultShipping) {
    this.defaultShipping = defaultShipping;
  }


  public CustomerDataCustomerInterface disableAutoGroupChange(Integer disableAutoGroupChange) {
    this.disableAutoGroupChange = disableAutoGroupChange;
    return this;
  }

  /**
   * Disable auto group change flag.
   * @return disableAutoGroupChange
   */
  @javax.annotation.Nullable
  public Integer getDisableAutoGroupChange() {
    return disableAutoGroupChange;
  }

  public void setDisableAutoGroupChange(Integer disableAutoGroupChange) {
    this.disableAutoGroupChange = disableAutoGroupChange;
  }


  public CustomerDataCustomerInterface dob(String dob) {
    this.dob = dob;
    return this;
  }

  /**
   * Date of birth
   * @return dob
   */
  @javax.annotation.Nullable
  public String getDob() {
    return dob;
  }

  public void setDob(String dob) {
    this.dob = dob;
  }


  public CustomerDataCustomerInterface email(String email) {
    this.email = email;
    return this;
  }

  /**
   * Email address
   * @return email
   */
  @javax.annotation.Nonnull
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }


  public CustomerDataCustomerInterface extensionAttributes(CustomerDataCustomerExtensionInterface extensionAttributes) {
    this.extensionAttributes = extensionAttributes;
    return this;
  }

  /**
   * Get extensionAttributes
   * @return extensionAttributes
   */
  @javax.annotation.Nullable
  public CustomerDataCustomerExtensionInterface getExtensionAttributes() {
    return extensionAttributes;
  }

  public void setExtensionAttributes(CustomerDataCustomerExtensionInterface extensionAttributes) {
    this.extensionAttributes = extensionAttributes;
  }


  public CustomerDataCustomerInterface firstname(String firstname) {
    this.firstname = firstname;
    return this;
  }

  /**
   * First name
   * @return firstname
   */
  @javax.annotation.Nonnull
  public String getFirstname() {
    return firstname;
  }

  public void setFirstname(String firstname) {
    this.firstname = firstname;
  }


  public CustomerDataCustomerInterface gender(Integer gender) {
    this.gender = gender;
    return this;
  }

  /**
   * Gender
   * @return gender
   */
  @javax.annotation.Nullable
  public Integer getGender() {
    return gender;
  }

  public void setGender(Integer gender) {
    this.gender = gender;
  }


  public CustomerDataCustomerInterface groupId(Integer groupId) {
    this.groupId = groupId;
    return this;
  }

  /**
   * Group id
   * @return groupId
   */
  @javax.annotation.Nullable
  public Integer getGroupId() {
    return groupId;
  }

  public void setGroupId(Integer groupId) {
    this.groupId = groupId;
  }


  public CustomerDataCustomerInterface id(Integer id) {
    this.id = id;
    return this;
  }

  /**
   * Customer id
   * @return id
   */
  @javax.annotation.Nullable
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }


  public CustomerDataCustomerInterface lastname(String lastname) {
    this.lastname = lastname;
    return this;
  }

  /**
   * Last name
   * @return lastname
   */
  @javax.annotation.Nonnull
  public String getLastname() {
    return lastname;
  }

  public void setLastname(String lastname) {
    this.lastname = lastname;
  }


  public CustomerDataCustomerInterface middlename(String middlename) {
    this.middlename = middlename;
    return this;
  }

  /**
   * Middle name
   * @return middlename
   */
  @javax.annotation.Nullable
  public String getMiddlename() {
    return middlename;
  }

  public void setMiddlename(String middlename) {
    this.middlename = middlename;
  }


  public CustomerDataCustomerInterface prefix(String prefix) {
    this.prefix = prefix;
    return this;
  }

  /**
   * Prefix
   * @return prefix
   */
  @javax.annotation.Nullable
  public String getPrefix() {
    return prefix;
  }

  public void setPrefix(String prefix) {
    this.prefix = prefix;
  }


  public CustomerDataCustomerInterface storeId(Integer storeId) {
    this.storeId = storeId;
    return this;
  }

  /**
   * Store id
   * @return storeId
   */
  @javax.annotation.Nullable
  public Integer getStoreId() {
    return storeId;
  }

  public void setStoreId(Integer storeId) {
    this.storeId = storeId;
  }


  public CustomerDataCustomerInterface suffix(String suffix) {
    this.suffix = suffix;
    return this;
  }

  /**
   * Suffix
   * @return suffix
   */
  @javax.annotation.Nullable
  public String getSuffix() {
    return suffix;
  }

  public void setSuffix(String suffix) {
    this.suffix = suffix;
  }


  public CustomerDataCustomerInterface taxvat(String taxvat) {
    this.taxvat = taxvat;
    return this;
  }

  /**
   * Tax Vat
   * @return taxvat
   */
  @javax.annotation.Nullable
  public String getTaxvat() {
    return taxvat;
  }

  public void setTaxvat(String taxvat) {
    this.taxvat = taxvat;
  }


  public CustomerDataCustomerInterface updatedAt(String updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

  /**
   * Updated at time
   * @return updatedAt
   */
  @javax.annotation.Nullable
  public String getUpdatedAt() {
    return updatedAt;
  }

  public void setUpdatedAt(String updatedAt) {
    this.updatedAt = updatedAt;
  }


  public CustomerDataCustomerInterface websiteId(Integer websiteId) {
    this.websiteId = websiteId;
    return this;
  }

  /**
   * Website id
   * @return websiteId
   */
  @javax.annotation.Nullable
  public Integer getWebsiteId() {
    return websiteId;
  }

  public void setWebsiteId(Integer websiteId) {
    this.websiteId = websiteId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CustomerDataCustomerInterface customerDataCustomerInterface = (CustomerDataCustomerInterface) o;
    return Objects.equals(this.addresses, customerDataCustomerInterface.addresses) &&
        Objects.equals(this.confirmation, customerDataCustomerInterface.confirmation) &&
        Objects.equals(this.createdAt, customerDataCustomerInterface.createdAt) &&
        Objects.equals(this.createdIn, customerDataCustomerInterface.createdIn) &&
        Objects.equals(this.customAttributes, customerDataCustomerInterface.customAttributes) &&
        Objects.equals(this.defaultBilling, customerDataCustomerInterface.defaultBilling) &&
        Objects.equals(this.defaultShipping, customerDataCustomerInterface.defaultShipping) &&
        Objects.equals(this.disableAutoGroupChange, customerDataCustomerInterface.disableAutoGroupChange) &&
        Objects.equals(this.dob, customerDataCustomerInterface.dob) &&
        Objects.equals(this.email, customerDataCustomerInterface.email) &&
        Objects.equals(this.extensionAttributes, customerDataCustomerInterface.extensionAttributes) &&
        Objects.equals(this.firstname, customerDataCustomerInterface.firstname) &&
        Objects.equals(this.gender, customerDataCustomerInterface.gender) &&
        Objects.equals(this.groupId, customerDataCustomerInterface.groupId) &&
        Objects.equals(this.id, customerDataCustomerInterface.id) &&
        Objects.equals(this.lastname, customerDataCustomerInterface.lastname) &&
        Objects.equals(this.middlename, customerDataCustomerInterface.middlename) &&
        Objects.equals(this.prefix, customerDataCustomerInterface.prefix) &&
        Objects.equals(this.storeId, customerDataCustomerInterface.storeId) &&
        Objects.equals(this.suffix, customerDataCustomerInterface.suffix) &&
        Objects.equals(this.taxvat, customerDataCustomerInterface.taxvat) &&
        Objects.equals(this.updatedAt, customerDataCustomerInterface.updatedAt) &&
        Objects.equals(this.websiteId, customerDataCustomerInterface.websiteId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(addresses, confirmation, createdAt, createdIn, customAttributes, defaultBilling, defaultShipping, disableAutoGroupChange, dob, email, extensionAttributes, firstname, gender, groupId, id, lastname, middlename, prefix, storeId, suffix, taxvat, updatedAt, websiteId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CustomerDataCustomerInterface {\n");
    sb.append("    addresses: ").append(toIndentedString(addresses)).append("\n");
    sb.append("    confirmation: ").append(toIndentedString(confirmation)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    createdIn: ").append(toIndentedString(createdIn)).append("\n");
    sb.append("    customAttributes: ").append(toIndentedString(customAttributes)).append("\n");
    sb.append("    defaultBilling: ").append(toIndentedString(defaultBilling)).append("\n");
    sb.append("    defaultShipping: ").append(toIndentedString(defaultShipping)).append("\n");
    sb.append("    disableAutoGroupChange: ").append(toIndentedString(disableAutoGroupChange)).append("\n");
    sb.append("    dob: ").append(toIndentedString(dob)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    extensionAttributes: ").append(toIndentedString(extensionAttributes)).append("\n");
    sb.append("    firstname: ").append(toIndentedString(firstname)).append("\n");
    sb.append("    gender: ").append(toIndentedString(gender)).append("\n");
    sb.append("    groupId: ").append(toIndentedString(groupId)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    lastname: ").append(toIndentedString(lastname)).append("\n");
    sb.append("    middlename: ").append(toIndentedString(middlename)).append("\n");
    sb.append("    prefix: ").append(toIndentedString(prefix)).append("\n");
    sb.append("    storeId: ").append(toIndentedString(storeId)).append("\n");
    sb.append("    suffix: ").append(toIndentedString(suffix)).append("\n");
    sb.append("    taxvat: ").append(toIndentedString(taxvat)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    websiteId: ").append(toIndentedString(websiteId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("addresses");
    openapiFields.add("confirmation");
    openapiFields.add("created_at");
    openapiFields.add("created_in");
    openapiFields.add("custom_attributes");
    openapiFields.add("default_billing");
    openapiFields.add("default_shipping");
    openapiFields.add("disable_auto_group_change");
    openapiFields.add("dob");
    openapiFields.add("email");
    openapiFields.add("extension_attributes");
    openapiFields.add("firstname");
    openapiFields.add("gender");
    openapiFields.add("group_id");
    openapiFields.add("id");
    openapiFields.add("lastname");
    openapiFields.add("middlename");
    openapiFields.add("prefix");
    openapiFields.add("store_id");
    openapiFields.add("suffix");
    openapiFields.add("taxvat");
    openapiFields.add("updated_at");
    openapiFields.add("website_id");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("email");
    openapiRequiredFields.add("firstname");
    openapiRequiredFields.add("lastname");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CustomerDataCustomerInterface
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CustomerDataCustomerInterface.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CustomerDataCustomerInterface is not found in the empty JSON string", CustomerDataCustomerInterface.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CustomerDataCustomerInterface.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CustomerDataCustomerInterface` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CustomerDataCustomerInterface.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("addresses") != null && !jsonObj.get("addresses").isJsonNull()) {
        JsonArray jsonArrayaddresses = jsonObj.getAsJsonArray("addresses");
        if (jsonArrayaddresses != null) {
          // ensure the json data is an array
          if (!jsonObj.get("addresses").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `addresses` to be an array in the JSON string but got `%s`", jsonObj.get("addresses").toString()));
          }

          // validate the optional field `addresses` (array)
          for (int i = 0; i < jsonArrayaddresses.size(); i++) {
            CustomerDataAddressInterface.validateJsonElement(jsonArrayaddresses.get(i));
          };
        }
      }
      if ((jsonObj.get("confirmation") != null && !jsonObj.get("confirmation").isJsonNull()) && !jsonObj.get("confirmation").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `confirmation` to be a primitive type in the JSON string but got `%s`", jsonObj.get("confirmation").toString()));
      }
      if ((jsonObj.get("created_at") != null && !jsonObj.get("created_at").isJsonNull()) && !jsonObj.get("created_at").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `created_at` to be a primitive type in the JSON string but got `%s`", jsonObj.get("created_at").toString()));
      }
      if ((jsonObj.get("created_in") != null && !jsonObj.get("created_in").isJsonNull()) && !jsonObj.get("created_in").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `created_in` to be a primitive type in the JSON string but got `%s`", jsonObj.get("created_in").toString()));
      }
      if (jsonObj.get("custom_attributes") != null && !jsonObj.get("custom_attributes").isJsonNull()) {
        JsonArray jsonArraycustomAttributes = jsonObj.getAsJsonArray("custom_attributes");
        if (jsonArraycustomAttributes != null) {
          // ensure the json data is an array
          if (!jsonObj.get("custom_attributes").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `custom_attributes` to be an array in the JSON string but got `%s`", jsonObj.get("custom_attributes").toString()));
          }

          // validate the optional field `custom_attributes` (array)
          for (int i = 0; i < jsonArraycustomAttributes.size(); i++) {
            FrameworkAttributeInterface.validateJsonElement(jsonArraycustomAttributes.get(i));
          };
        }
      }
      if ((jsonObj.get("default_billing") != null && !jsonObj.get("default_billing").isJsonNull()) && !jsonObj.get("default_billing").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `default_billing` to be a primitive type in the JSON string but got `%s`", jsonObj.get("default_billing").toString()));
      }
      if ((jsonObj.get("default_shipping") != null && !jsonObj.get("default_shipping").isJsonNull()) && !jsonObj.get("default_shipping").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `default_shipping` to be a primitive type in the JSON string but got `%s`", jsonObj.get("default_shipping").toString()));
      }
      if ((jsonObj.get("dob") != null && !jsonObj.get("dob").isJsonNull()) && !jsonObj.get("dob").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dob` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dob").toString()));
      }
      if (!jsonObj.get("email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("email").toString()));
      }
      // validate the optional field `extension_attributes`
      if (jsonObj.get("extension_attributes") != null && !jsonObj.get("extension_attributes").isJsonNull()) {
        CustomerDataCustomerExtensionInterface.validateJsonElement(jsonObj.get("extension_attributes"));
      }
      if (!jsonObj.get("firstname").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `firstname` to be a primitive type in the JSON string but got `%s`", jsonObj.get("firstname").toString()));
      }
      if (!jsonObj.get("lastname").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastname` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastname").toString()));
      }
      if ((jsonObj.get("middlename") != null && !jsonObj.get("middlename").isJsonNull()) && !jsonObj.get("middlename").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `middlename` to be a primitive type in the JSON string but got `%s`", jsonObj.get("middlename").toString()));
      }
      if ((jsonObj.get("prefix") != null && !jsonObj.get("prefix").isJsonNull()) && !jsonObj.get("prefix").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `prefix` to be a primitive type in the JSON string but got `%s`", jsonObj.get("prefix").toString()));
      }
      if ((jsonObj.get("suffix") != null && !jsonObj.get("suffix").isJsonNull()) && !jsonObj.get("suffix").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `suffix` to be a primitive type in the JSON string but got `%s`", jsonObj.get("suffix").toString()));
      }
      if ((jsonObj.get("taxvat") != null && !jsonObj.get("taxvat").isJsonNull()) && !jsonObj.get("taxvat").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `taxvat` to be a primitive type in the JSON string but got `%s`", jsonObj.get("taxvat").toString()));
      }
      if ((jsonObj.get("updated_at") != null && !jsonObj.get("updated_at").isJsonNull()) && !jsonObj.get("updated_at").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `updated_at` to be a primitive type in the JSON string but got `%s`", jsonObj.get("updated_at").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CustomerDataCustomerInterface.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CustomerDataCustomerInterface' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CustomerDataCustomerInterface> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CustomerDataCustomerInterface.class));

       return (TypeAdapter<T>) new TypeAdapter<CustomerDataCustomerInterface>() {
           @Override
           public void write(JsonWriter out, CustomerDataCustomerInterface value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CustomerDataCustomerInterface read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CustomerDataCustomerInterface given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CustomerDataCustomerInterface
   * @throws IOException if the JSON string is invalid with respect to CustomerDataCustomerInterface
   */
  public static CustomerDataCustomerInterface fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CustomerDataCustomerInterface.class);
  }

  /**
   * Convert an instance of CustomerDataCustomerInterface to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

