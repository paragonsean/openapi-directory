/*
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.SalesDataOrderPaymentExtensionInterface;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Order payment interface. An order is a document that a web store issues to a customer. Magento generates a sales order that lists the product items, billing and shipping addresses, and shipping and payment methods. A corresponding external document, known as a purchase order, is emailed to the customer.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:00:51.810681-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class SalesDataOrderPaymentInterface {
  public static final String SERIALIZED_NAME_ACCOUNT_STATUS = "account_status";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_STATUS)
  private String accountStatus;

  public static final String SERIALIZED_NAME_ADDITIONAL_DATA = "additional_data";
  @SerializedName(SERIALIZED_NAME_ADDITIONAL_DATA)
  private String additionalData;

  public static final String SERIALIZED_NAME_ADDITIONAL_INFORMATION = "additional_information";
  @SerializedName(SERIALIZED_NAME_ADDITIONAL_INFORMATION)
  private List<String> additionalInformation = new ArrayList<>();

  public static final String SERIALIZED_NAME_ADDRESS_STATUS = "address_status";
  @SerializedName(SERIALIZED_NAME_ADDRESS_STATUS)
  private String addressStatus;

  public static final String SERIALIZED_NAME_AMOUNT_AUTHORIZED = "amount_authorized";
  @SerializedName(SERIALIZED_NAME_AMOUNT_AUTHORIZED)
  private BigDecimal amountAuthorized;

  public static final String SERIALIZED_NAME_AMOUNT_CANCELED = "amount_canceled";
  @SerializedName(SERIALIZED_NAME_AMOUNT_CANCELED)
  private BigDecimal amountCanceled;

  public static final String SERIALIZED_NAME_AMOUNT_ORDERED = "amount_ordered";
  @SerializedName(SERIALIZED_NAME_AMOUNT_ORDERED)
  private BigDecimal amountOrdered;

  public static final String SERIALIZED_NAME_AMOUNT_PAID = "amount_paid";
  @SerializedName(SERIALIZED_NAME_AMOUNT_PAID)
  private BigDecimal amountPaid;

  public static final String SERIALIZED_NAME_AMOUNT_REFUNDED = "amount_refunded";
  @SerializedName(SERIALIZED_NAME_AMOUNT_REFUNDED)
  private BigDecimal amountRefunded;

  public static final String SERIALIZED_NAME_ANET_TRANS_METHOD = "anet_trans_method";
  @SerializedName(SERIALIZED_NAME_ANET_TRANS_METHOD)
  private String anetTransMethod;

  public static final String SERIALIZED_NAME_BASE_AMOUNT_AUTHORIZED = "base_amount_authorized";
  @SerializedName(SERIALIZED_NAME_BASE_AMOUNT_AUTHORIZED)
  private BigDecimal baseAmountAuthorized;

  public static final String SERIALIZED_NAME_BASE_AMOUNT_CANCELED = "base_amount_canceled";
  @SerializedName(SERIALIZED_NAME_BASE_AMOUNT_CANCELED)
  private BigDecimal baseAmountCanceled;

  public static final String SERIALIZED_NAME_BASE_AMOUNT_ORDERED = "base_amount_ordered";
  @SerializedName(SERIALIZED_NAME_BASE_AMOUNT_ORDERED)
  private BigDecimal baseAmountOrdered;

  public static final String SERIALIZED_NAME_BASE_AMOUNT_PAID = "base_amount_paid";
  @SerializedName(SERIALIZED_NAME_BASE_AMOUNT_PAID)
  private BigDecimal baseAmountPaid;

  public static final String SERIALIZED_NAME_BASE_AMOUNT_PAID_ONLINE = "base_amount_paid_online";
  @SerializedName(SERIALIZED_NAME_BASE_AMOUNT_PAID_ONLINE)
  private BigDecimal baseAmountPaidOnline;

  public static final String SERIALIZED_NAME_BASE_AMOUNT_REFUNDED = "base_amount_refunded";
  @SerializedName(SERIALIZED_NAME_BASE_AMOUNT_REFUNDED)
  private BigDecimal baseAmountRefunded;

  public static final String SERIALIZED_NAME_BASE_AMOUNT_REFUNDED_ONLINE = "base_amount_refunded_online";
  @SerializedName(SERIALIZED_NAME_BASE_AMOUNT_REFUNDED_ONLINE)
  private BigDecimal baseAmountRefundedOnline;

  public static final String SERIALIZED_NAME_BASE_SHIPPING_AMOUNT = "base_shipping_amount";
  @SerializedName(SERIALIZED_NAME_BASE_SHIPPING_AMOUNT)
  private BigDecimal baseShippingAmount;

  public static final String SERIALIZED_NAME_BASE_SHIPPING_CAPTURED = "base_shipping_captured";
  @SerializedName(SERIALIZED_NAME_BASE_SHIPPING_CAPTURED)
  private BigDecimal baseShippingCaptured;

  public static final String SERIALIZED_NAME_BASE_SHIPPING_REFUNDED = "base_shipping_refunded";
  @SerializedName(SERIALIZED_NAME_BASE_SHIPPING_REFUNDED)
  private BigDecimal baseShippingRefunded;

  public static final String SERIALIZED_NAME_CC_APPROVAL = "cc_approval";
  @SerializedName(SERIALIZED_NAME_CC_APPROVAL)
  private String ccApproval;

  public static final String SERIALIZED_NAME_CC_AVS_STATUS = "cc_avs_status";
  @SerializedName(SERIALIZED_NAME_CC_AVS_STATUS)
  private String ccAvsStatus;

  public static final String SERIALIZED_NAME_CC_CID_STATUS = "cc_cid_status";
  @SerializedName(SERIALIZED_NAME_CC_CID_STATUS)
  private String ccCidStatus;

  public static final String SERIALIZED_NAME_CC_DEBUG_REQUEST_BODY = "cc_debug_request_body";
  @SerializedName(SERIALIZED_NAME_CC_DEBUG_REQUEST_BODY)
  private String ccDebugRequestBody;

  public static final String SERIALIZED_NAME_CC_DEBUG_RESPONSE_BODY = "cc_debug_response_body";
  @SerializedName(SERIALIZED_NAME_CC_DEBUG_RESPONSE_BODY)
  private String ccDebugResponseBody;

  public static final String SERIALIZED_NAME_CC_DEBUG_RESPONSE_SERIALIZED = "cc_debug_response_serialized";
  @SerializedName(SERIALIZED_NAME_CC_DEBUG_RESPONSE_SERIALIZED)
  private String ccDebugResponseSerialized;

  public static final String SERIALIZED_NAME_CC_EXP_MONTH = "cc_exp_month";
  @SerializedName(SERIALIZED_NAME_CC_EXP_MONTH)
  private String ccExpMonth;

  public static final String SERIALIZED_NAME_CC_EXP_YEAR = "cc_exp_year";
  @SerializedName(SERIALIZED_NAME_CC_EXP_YEAR)
  private String ccExpYear;

  public static final String SERIALIZED_NAME_CC_LAST4 = "cc_last4";
  @SerializedName(SERIALIZED_NAME_CC_LAST4)
  private String ccLast4;

  public static final String SERIALIZED_NAME_CC_NUMBER_ENC = "cc_number_enc";
  @SerializedName(SERIALIZED_NAME_CC_NUMBER_ENC)
  private String ccNumberEnc;

  public static final String SERIALIZED_NAME_CC_OWNER = "cc_owner";
  @SerializedName(SERIALIZED_NAME_CC_OWNER)
  private String ccOwner;

  public static final String SERIALIZED_NAME_CC_SECURE_VERIFY = "cc_secure_verify";
  @SerializedName(SERIALIZED_NAME_CC_SECURE_VERIFY)
  private String ccSecureVerify;

  public static final String SERIALIZED_NAME_CC_SS_ISSUE = "cc_ss_issue";
  @SerializedName(SERIALIZED_NAME_CC_SS_ISSUE)
  private String ccSsIssue;

  public static final String SERIALIZED_NAME_CC_SS_START_MONTH = "cc_ss_start_month";
  @SerializedName(SERIALIZED_NAME_CC_SS_START_MONTH)
  private String ccSsStartMonth;

  public static final String SERIALIZED_NAME_CC_SS_START_YEAR = "cc_ss_start_year";
  @SerializedName(SERIALIZED_NAME_CC_SS_START_YEAR)
  private String ccSsStartYear;

  public static final String SERIALIZED_NAME_CC_STATUS = "cc_status";
  @SerializedName(SERIALIZED_NAME_CC_STATUS)
  private String ccStatus;

  public static final String SERIALIZED_NAME_CC_STATUS_DESCRIPTION = "cc_status_description";
  @SerializedName(SERIALIZED_NAME_CC_STATUS_DESCRIPTION)
  private String ccStatusDescription;

  public static final String SERIALIZED_NAME_CC_TRANS_ID = "cc_trans_id";
  @SerializedName(SERIALIZED_NAME_CC_TRANS_ID)
  private String ccTransId;

  public static final String SERIALIZED_NAME_CC_TYPE = "cc_type";
  @SerializedName(SERIALIZED_NAME_CC_TYPE)
  private String ccType;

  public static final String SERIALIZED_NAME_ECHECK_ACCOUNT_NAME = "echeck_account_name";
  @SerializedName(SERIALIZED_NAME_ECHECK_ACCOUNT_NAME)
  private String echeckAccountName;

  public static final String SERIALIZED_NAME_ECHECK_ACCOUNT_TYPE = "echeck_account_type";
  @SerializedName(SERIALIZED_NAME_ECHECK_ACCOUNT_TYPE)
  private String echeckAccountType;

  public static final String SERIALIZED_NAME_ECHECK_BANK_NAME = "echeck_bank_name";
  @SerializedName(SERIALIZED_NAME_ECHECK_BANK_NAME)
  private String echeckBankName;

  public static final String SERIALIZED_NAME_ECHECK_ROUTING_NUMBER = "echeck_routing_number";
  @SerializedName(SERIALIZED_NAME_ECHECK_ROUTING_NUMBER)
  private String echeckRoutingNumber;

  public static final String SERIALIZED_NAME_ECHECK_TYPE = "echeck_type";
  @SerializedName(SERIALIZED_NAME_ECHECK_TYPE)
  private String echeckType;

  public static final String SERIALIZED_NAME_ENTITY_ID = "entity_id";
  @SerializedName(SERIALIZED_NAME_ENTITY_ID)
  private Integer entityId;

  public static final String SERIALIZED_NAME_EXTENSION_ATTRIBUTES = "extension_attributes";
  @SerializedName(SERIALIZED_NAME_EXTENSION_ATTRIBUTES)
  private SalesDataOrderPaymentExtensionInterface extensionAttributes;

  public static final String SERIALIZED_NAME_LAST_TRANS_ID = "last_trans_id";
  @SerializedName(SERIALIZED_NAME_LAST_TRANS_ID)
  private String lastTransId;

  public static final String SERIALIZED_NAME_METHOD = "method";
  @SerializedName(SERIALIZED_NAME_METHOD)
  private String method;

  public static final String SERIALIZED_NAME_PARENT_ID = "parent_id";
  @SerializedName(SERIALIZED_NAME_PARENT_ID)
  private Integer parentId;

  public static final String SERIALIZED_NAME_PO_NUMBER = "po_number";
  @SerializedName(SERIALIZED_NAME_PO_NUMBER)
  private String poNumber;

  public static final String SERIALIZED_NAME_PROTECTION_ELIGIBILITY = "protection_eligibility";
  @SerializedName(SERIALIZED_NAME_PROTECTION_ELIGIBILITY)
  private String protectionEligibility;

  public static final String SERIALIZED_NAME_QUOTE_PAYMENT_ID = "quote_payment_id";
  @SerializedName(SERIALIZED_NAME_QUOTE_PAYMENT_ID)
  private Integer quotePaymentId;

  public static final String SERIALIZED_NAME_SHIPPING_AMOUNT = "shipping_amount";
  @SerializedName(SERIALIZED_NAME_SHIPPING_AMOUNT)
  private BigDecimal shippingAmount;

  public static final String SERIALIZED_NAME_SHIPPING_CAPTURED = "shipping_captured";
  @SerializedName(SERIALIZED_NAME_SHIPPING_CAPTURED)
  private BigDecimal shippingCaptured;

  public static final String SERIALIZED_NAME_SHIPPING_REFUNDED = "shipping_refunded";
  @SerializedName(SERIALIZED_NAME_SHIPPING_REFUNDED)
  private BigDecimal shippingRefunded;

  public SalesDataOrderPaymentInterface() {
  }

  public SalesDataOrderPaymentInterface accountStatus(String accountStatus) {
    this.accountStatus = accountStatus;
    return this;
  }

  /**
   * Account status.
   * @return accountStatus
   */
  @javax.annotation.Nonnull
  public String getAccountStatus() {
    return accountStatus;
  }

  public void setAccountStatus(String accountStatus) {
    this.accountStatus = accountStatus;
  }


  public SalesDataOrderPaymentInterface additionalData(String additionalData) {
    this.additionalData = additionalData;
    return this;
  }

  /**
   * Additional data.
   * @return additionalData
   */
  @javax.annotation.Nullable
  public String getAdditionalData() {
    return additionalData;
  }

  public void setAdditionalData(String additionalData) {
    this.additionalData = additionalData;
  }


  public SalesDataOrderPaymentInterface additionalInformation(List<String> additionalInformation) {
    this.additionalInformation = additionalInformation;
    return this;
  }

  public SalesDataOrderPaymentInterface addAdditionalInformationItem(String additionalInformationItem) {
    if (this.additionalInformation == null) {
      this.additionalInformation = new ArrayList<>();
    }
    this.additionalInformation.add(additionalInformationItem);
    return this;
  }

  /**
   * Array of additional information.
   * @return additionalInformation
   */
  @javax.annotation.Nonnull
  public List<String> getAdditionalInformation() {
    return additionalInformation;
  }

  public void setAdditionalInformation(List<String> additionalInformation) {
    this.additionalInformation = additionalInformation;
  }


  public SalesDataOrderPaymentInterface addressStatus(String addressStatus) {
    this.addressStatus = addressStatus;
    return this;
  }

  /**
   * Address status.
   * @return addressStatus
   */
  @javax.annotation.Nullable
  public String getAddressStatus() {
    return addressStatus;
  }

  public void setAddressStatus(String addressStatus) {
    this.addressStatus = addressStatus;
  }


  public SalesDataOrderPaymentInterface amountAuthorized(BigDecimal amountAuthorized) {
    this.amountAuthorized = amountAuthorized;
    return this;
  }

  /**
   * Amount authorized.
   * @return amountAuthorized
   */
  @javax.annotation.Nullable
  public BigDecimal getAmountAuthorized() {
    return amountAuthorized;
  }

  public void setAmountAuthorized(BigDecimal amountAuthorized) {
    this.amountAuthorized = amountAuthorized;
  }


  public SalesDataOrderPaymentInterface amountCanceled(BigDecimal amountCanceled) {
    this.amountCanceled = amountCanceled;
    return this;
  }

  /**
   * Amount canceled.
   * @return amountCanceled
   */
  @javax.annotation.Nullable
  public BigDecimal getAmountCanceled() {
    return amountCanceled;
  }

  public void setAmountCanceled(BigDecimal amountCanceled) {
    this.amountCanceled = amountCanceled;
  }


  public SalesDataOrderPaymentInterface amountOrdered(BigDecimal amountOrdered) {
    this.amountOrdered = amountOrdered;
    return this;
  }

  /**
   * Amount ordered.
   * @return amountOrdered
   */
  @javax.annotation.Nullable
  public BigDecimal getAmountOrdered() {
    return amountOrdered;
  }

  public void setAmountOrdered(BigDecimal amountOrdered) {
    this.amountOrdered = amountOrdered;
  }


  public SalesDataOrderPaymentInterface amountPaid(BigDecimal amountPaid) {
    this.amountPaid = amountPaid;
    return this;
  }

  /**
   * Amount paid.
   * @return amountPaid
   */
  @javax.annotation.Nullable
  public BigDecimal getAmountPaid() {
    return amountPaid;
  }

  public void setAmountPaid(BigDecimal amountPaid) {
    this.amountPaid = amountPaid;
  }


  public SalesDataOrderPaymentInterface amountRefunded(BigDecimal amountRefunded) {
    this.amountRefunded = amountRefunded;
    return this;
  }

  /**
   * Amount refunded.
   * @return amountRefunded
   */
  @javax.annotation.Nullable
  public BigDecimal getAmountRefunded() {
    return amountRefunded;
  }

  public void setAmountRefunded(BigDecimal amountRefunded) {
    this.amountRefunded = amountRefunded;
  }


  public SalesDataOrderPaymentInterface anetTransMethod(String anetTransMethod) {
    this.anetTransMethod = anetTransMethod;
    return this;
  }

  /**
   * Anet transaction method.
   * @return anetTransMethod
   */
  @javax.annotation.Nullable
  public String getAnetTransMethod() {
    return anetTransMethod;
  }

  public void setAnetTransMethod(String anetTransMethod) {
    this.anetTransMethod = anetTransMethod;
  }


  public SalesDataOrderPaymentInterface baseAmountAuthorized(BigDecimal baseAmountAuthorized) {
    this.baseAmountAuthorized = baseAmountAuthorized;
    return this;
  }

  /**
   * Base amount authorized.
   * @return baseAmountAuthorized
   */
  @javax.annotation.Nullable
  public BigDecimal getBaseAmountAuthorized() {
    return baseAmountAuthorized;
  }

  public void setBaseAmountAuthorized(BigDecimal baseAmountAuthorized) {
    this.baseAmountAuthorized = baseAmountAuthorized;
  }


  public SalesDataOrderPaymentInterface baseAmountCanceled(BigDecimal baseAmountCanceled) {
    this.baseAmountCanceled = baseAmountCanceled;
    return this;
  }

  /**
   * Base amount canceled.
   * @return baseAmountCanceled
   */
  @javax.annotation.Nullable
  public BigDecimal getBaseAmountCanceled() {
    return baseAmountCanceled;
  }

  public void setBaseAmountCanceled(BigDecimal baseAmountCanceled) {
    this.baseAmountCanceled = baseAmountCanceled;
  }


  public SalesDataOrderPaymentInterface baseAmountOrdered(BigDecimal baseAmountOrdered) {
    this.baseAmountOrdered = baseAmountOrdered;
    return this;
  }

  /**
   * Base amount ordered.
   * @return baseAmountOrdered
   */
  @javax.annotation.Nullable
  public BigDecimal getBaseAmountOrdered() {
    return baseAmountOrdered;
  }

  public void setBaseAmountOrdered(BigDecimal baseAmountOrdered) {
    this.baseAmountOrdered = baseAmountOrdered;
  }


  public SalesDataOrderPaymentInterface baseAmountPaid(BigDecimal baseAmountPaid) {
    this.baseAmountPaid = baseAmountPaid;
    return this;
  }

  /**
   * Base amount paid.
   * @return baseAmountPaid
   */
  @javax.annotation.Nullable
  public BigDecimal getBaseAmountPaid() {
    return baseAmountPaid;
  }

  public void setBaseAmountPaid(BigDecimal baseAmountPaid) {
    this.baseAmountPaid = baseAmountPaid;
  }


  public SalesDataOrderPaymentInterface baseAmountPaidOnline(BigDecimal baseAmountPaidOnline) {
    this.baseAmountPaidOnline = baseAmountPaidOnline;
    return this;
  }

  /**
   * Base amount paid online.
   * @return baseAmountPaidOnline
   */
  @javax.annotation.Nullable
  public BigDecimal getBaseAmountPaidOnline() {
    return baseAmountPaidOnline;
  }

  public void setBaseAmountPaidOnline(BigDecimal baseAmountPaidOnline) {
    this.baseAmountPaidOnline = baseAmountPaidOnline;
  }


  public SalesDataOrderPaymentInterface baseAmountRefunded(BigDecimal baseAmountRefunded) {
    this.baseAmountRefunded = baseAmountRefunded;
    return this;
  }

  /**
   * Base amount refunded.
   * @return baseAmountRefunded
   */
  @javax.annotation.Nullable
  public BigDecimal getBaseAmountRefunded() {
    return baseAmountRefunded;
  }

  public void setBaseAmountRefunded(BigDecimal baseAmountRefunded) {
    this.baseAmountRefunded = baseAmountRefunded;
  }


  public SalesDataOrderPaymentInterface baseAmountRefundedOnline(BigDecimal baseAmountRefundedOnline) {
    this.baseAmountRefundedOnline = baseAmountRefundedOnline;
    return this;
  }

  /**
   * Base amount refunded online.
   * @return baseAmountRefundedOnline
   */
  @javax.annotation.Nullable
  public BigDecimal getBaseAmountRefundedOnline() {
    return baseAmountRefundedOnline;
  }

  public void setBaseAmountRefundedOnline(BigDecimal baseAmountRefundedOnline) {
    this.baseAmountRefundedOnline = baseAmountRefundedOnline;
  }


  public SalesDataOrderPaymentInterface baseShippingAmount(BigDecimal baseShippingAmount) {
    this.baseShippingAmount = baseShippingAmount;
    return this;
  }

  /**
   * Base shipping amount.
   * @return baseShippingAmount
   */
  @javax.annotation.Nullable
  public BigDecimal getBaseShippingAmount() {
    return baseShippingAmount;
  }

  public void setBaseShippingAmount(BigDecimal baseShippingAmount) {
    this.baseShippingAmount = baseShippingAmount;
  }


  public SalesDataOrderPaymentInterface baseShippingCaptured(BigDecimal baseShippingCaptured) {
    this.baseShippingCaptured = baseShippingCaptured;
    return this;
  }

  /**
   * Base shipping captured amount.
   * @return baseShippingCaptured
   */
  @javax.annotation.Nullable
  public BigDecimal getBaseShippingCaptured() {
    return baseShippingCaptured;
  }

  public void setBaseShippingCaptured(BigDecimal baseShippingCaptured) {
    this.baseShippingCaptured = baseShippingCaptured;
  }


  public SalesDataOrderPaymentInterface baseShippingRefunded(BigDecimal baseShippingRefunded) {
    this.baseShippingRefunded = baseShippingRefunded;
    return this;
  }

  /**
   * Base shipping refunded amount.
   * @return baseShippingRefunded
   */
  @javax.annotation.Nullable
  public BigDecimal getBaseShippingRefunded() {
    return baseShippingRefunded;
  }

  public void setBaseShippingRefunded(BigDecimal baseShippingRefunded) {
    this.baseShippingRefunded = baseShippingRefunded;
  }


  public SalesDataOrderPaymentInterface ccApproval(String ccApproval) {
    this.ccApproval = ccApproval;
    return this;
  }

  /**
   * Credit card approval.
   * @return ccApproval
   */
  @javax.annotation.Nullable
  public String getCcApproval() {
    return ccApproval;
  }

  public void setCcApproval(String ccApproval) {
    this.ccApproval = ccApproval;
  }


  public SalesDataOrderPaymentInterface ccAvsStatus(String ccAvsStatus) {
    this.ccAvsStatus = ccAvsStatus;
    return this;
  }

  /**
   * Credit card avs status.
   * @return ccAvsStatus
   */
  @javax.annotation.Nullable
  public String getCcAvsStatus() {
    return ccAvsStatus;
  }

  public void setCcAvsStatus(String ccAvsStatus) {
    this.ccAvsStatus = ccAvsStatus;
  }


  public SalesDataOrderPaymentInterface ccCidStatus(String ccCidStatus) {
    this.ccCidStatus = ccCidStatus;
    return this;
  }

  /**
   * Credit card CID status.
   * @return ccCidStatus
   */
  @javax.annotation.Nullable
  public String getCcCidStatus() {
    return ccCidStatus;
  }

  public void setCcCidStatus(String ccCidStatus) {
    this.ccCidStatus = ccCidStatus;
  }


  public SalesDataOrderPaymentInterface ccDebugRequestBody(String ccDebugRequestBody) {
    this.ccDebugRequestBody = ccDebugRequestBody;
    return this;
  }

  /**
   * Credit card debug request body.
   * @return ccDebugRequestBody
   */
  @javax.annotation.Nullable
  public String getCcDebugRequestBody() {
    return ccDebugRequestBody;
  }

  public void setCcDebugRequestBody(String ccDebugRequestBody) {
    this.ccDebugRequestBody = ccDebugRequestBody;
  }


  public SalesDataOrderPaymentInterface ccDebugResponseBody(String ccDebugResponseBody) {
    this.ccDebugResponseBody = ccDebugResponseBody;
    return this;
  }

  /**
   * Credit card debug response body.
   * @return ccDebugResponseBody
   */
  @javax.annotation.Nullable
  public String getCcDebugResponseBody() {
    return ccDebugResponseBody;
  }

  public void setCcDebugResponseBody(String ccDebugResponseBody) {
    this.ccDebugResponseBody = ccDebugResponseBody;
  }


  public SalesDataOrderPaymentInterface ccDebugResponseSerialized(String ccDebugResponseSerialized) {
    this.ccDebugResponseSerialized = ccDebugResponseSerialized;
    return this;
  }

  /**
   * Credit card debug response serialized.
   * @return ccDebugResponseSerialized
   */
  @javax.annotation.Nullable
  public String getCcDebugResponseSerialized() {
    return ccDebugResponseSerialized;
  }

  public void setCcDebugResponseSerialized(String ccDebugResponseSerialized) {
    this.ccDebugResponseSerialized = ccDebugResponseSerialized;
  }


  public SalesDataOrderPaymentInterface ccExpMonth(String ccExpMonth) {
    this.ccExpMonth = ccExpMonth;
    return this;
  }

  /**
   * Credit card expiration month.
   * @return ccExpMonth
   */
  @javax.annotation.Nullable
  public String getCcExpMonth() {
    return ccExpMonth;
  }

  public void setCcExpMonth(String ccExpMonth) {
    this.ccExpMonth = ccExpMonth;
  }


  public SalesDataOrderPaymentInterface ccExpYear(String ccExpYear) {
    this.ccExpYear = ccExpYear;
    return this;
  }

  /**
   * Credit card expiration year.
   * @return ccExpYear
   */
  @javax.annotation.Nullable
  public String getCcExpYear() {
    return ccExpYear;
  }

  public void setCcExpYear(String ccExpYear) {
    this.ccExpYear = ccExpYear;
  }


  public SalesDataOrderPaymentInterface ccLast4(String ccLast4) {
    this.ccLast4 = ccLast4;
    return this;
  }

  /**
   * Last four digits of the credit card.
   * @return ccLast4
   */
  @javax.annotation.Nonnull
  public String getCcLast4() {
    return ccLast4;
  }

  public void setCcLast4(String ccLast4) {
    this.ccLast4 = ccLast4;
  }


  public SalesDataOrderPaymentInterface ccNumberEnc(String ccNumberEnc) {
    this.ccNumberEnc = ccNumberEnc;
    return this;
  }

  /**
   * Encrypted credit card number.
   * @return ccNumberEnc
   */
  @javax.annotation.Nullable
  public String getCcNumberEnc() {
    return ccNumberEnc;
  }

  public void setCcNumberEnc(String ccNumberEnc) {
    this.ccNumberEnc = ccNumberEnc;
  }


  public SalesDataOrderPaymentInterface ccOwner(String ccOwner) {
    this.ccOwner = ccOwner;
    return this;
  }

  /**
   * Credit card number.
   * @return ccOwner
   */
  @javax.annotation.Nullable
  public String getCcOwner() {
    return ccOwner;
  }

  public void setCcOwner(String ccOwner) {
    this.ccOwner = ccOwner;
  }


  public SalesDataOrderPaymentInterface ccSecureVerify(String ccSecureVerify) {
    this.ccSecureVerify = ccSecureVerify;
    return this;
  }

  /**
   * Credit card secure verify.
   * @return ccSecureVerify
   */
  @javax.annotation.Nullable
  public String getCcSecureVerify() {
    return ccSecureVerify;
  }

  public void setCcSecureVerify(String ccSecureVerify) {
    this.ccSecureVerify = ccSecureVerify;
  }


  public SalesDataOrderPaymentInterface ccSsIssue(String ccSsIssue) {
    this.ccSsIssue = ccSsIssue;
    return this;
  }

  /**
   * Credit card SS issue.
   * @return ccSsIssue
   */
  @javax.annotation.Nullable
  public String getCcSsIssue() {
    return ccSsIssue;
  }

  public void setCcSsIssue(String ccSsIssue) {
    this.ccSsIssue = ccSsIssue;
  }


  public SalesDataOrderPaymentInterface ccSsStartMonth(String ccSsStartMonth) {
    this.ccSsStartMonth = ccSsStartMonth;
    return this;
  }

  /**
   * Credit card SS start month.
   * @return ccSsStartMonth
   */
  @javax.annotation.Nullable
  public String getCcSsStartMonth() {
    return ccSsStartMonth;
  }

  public void setCcSsStartMonth(String ccSsStartMonth) {
    this.ccSsStartMonth = ccSsStartMonth;
  }


  public SalesDataOrderPaymentInterface ccSsStartYear(String ccSsStartYear) {
    this.ccSsStartYear = ccSsStartYear;
    return this;
  }

  /**
   * Credit card SS start year.
   * @return ccSsStartYear
   */
  @javax.annotation.Nullable
  public String getCcSsStartYear() {
    return ccSsStartYear;
  }

  public void setCcSsStartYear(String ccSsStartYear) {
    this.ccSsStartYear = ccSsStartYear;
  }


  public SalesDataOrderPaymentInterface ccStatus(String ccStatus) {
    this.ccStatus = ccStatus;
    return this;
  }

  /**
   * Credit card status.
   * @return ccStatus
   */
  @javax.annotation.Nullable
  public String getCcStatus() {
    return ccStatus;
  }

  public void setCcStatus(String ccStatus) {
    this.ccStatus = ccStatus;
  }


  public SalesDataOrderPaymentInterface ccStatusDescription(String ccStatusDescription) {
    this.ccStatusDescription = ccStatusDescription;
    return this;
  }

  /**
   * Credit card status description.
   * @return ccStatusDescription
   */
  @javax.annotation.Nullable
  public String getCcStatusDescription() {
    return ccStatusDescription;
  }

  public void setCcStatusDescription(String ccStatusDescription) {
    this.ccStatusDescription = ccStatusDescription;
  }


  public SalesDataOrderPaymentInterface ccTransId(String ccTransId) {
    this.ccTransId = ccTransId;
    return this;
  }

  /**
   * Credit card transaction ID.
   * @return ccTransId
   */
  @javax.annotation.Nullable
  public String getCcTransId() {
    return ccTransId;
  }

  public void setCcTransId(String ccTransId) {
    this.ccTransId = ccTransId;
  }


  public SalesDataOrderPaymentInterface ccType(String ccType) {
    this.ccType = ccType;
    return this;
  }

  /**
   * Credit card type.
   * @return ccType
   */
  @javax.annotation.Nullable
  public String getCcType() {
    return ccType;
  }

  public void setCcType(String ccType) {
    this.ccType = ccType;
  }


  public SalesDataOrderPaymentInterface echeckAccountName(String echeckAccountName) {
    this.echeckAccountName = echeckAccountName;
    return this;
  }

  /**
   * eCheck account name.
   * @return echeckAccountName
   */
  @javax.annotation.Nullable
  public String getEcheckAccountName() {
    return echeckAccountName;
  }

  public void setEcheckAccountName(String echeckAccountName) {
    this.echeckAccountName = echeckAccountName;
  }


  public SalesDataOrderPaymentInterface echeckAccountType(String echeckAccountType) {
    this.echeckAccountType = echeckAccountType;
    return this;
  }

  /**
   * eCheck account type.
   * @return echeckAccountType
   */
  @javax.annotation.Nullable
  public String getEcheckAccountType() {
    return echeckAccountType;
  }

  public void setEcheckAccountType(String echeckAccountType) {
    this.echeckAccountType = echeckAccountType;
  }


  public SalesDataOrderPaymentInterface echeckBankName(String echeckBankName) {
    this.echeckBankName = echeckBankName;
    return this;
  }

  /**
   * eCheck bank name.
   * @return echeckBankName
   */
  @javax.annotation.Nullable
  public String getEcheckBankName() {
    return echeckBankName;
  }

  public void setEcheckBankName(String echeckBankName) {
    this.echeckBankName = echeckBankName;
  }


  public SalesDataOrderPaymentInterface echeckRoutingNumber(String echeckRoutingNumber) {
    this.echeckRoutingNumber = echeckRoutingNumber;
    return this;
  }

  /**
   * eCheck routing number.
   * @return echeckRoutingNumber
   */
  @javax.annotation.Nullable
  public String getEcheckRoutingNumber() {
    return echeckRoutingNumber;
  }

  public void setEcheckRoutingNumber(String echeckRoutingNumber) {
    this.echeckRoutingNumber = echeckRoutingNumber;
  }


  public SalesDataOrderPaymentInterface echeckType(String echeckType) {
    this.echeckType = echeckType;
    return this;
  }

  /**
   * eCheck type.
   * @return echeckType
   */
  @javax.annotation.Nullable
  public String getEcheckType() {
    return echeckType;
  }

  public void setEcheckType(String echeckType) {
    this.echeckType = echeckType;
  }


  public SalesDataOrderPaymentInterface entityId(Integer entityId) {
    this.entityId = entityId;
    return this;
  }

  /**
   * Entity ID.
   * @return entityId
   */
  @javax.annotation.Nullable
  public Integer getEntityId() {
    return entityId;
  }

  public void setEntityId(Integer entityId) {
    this.entityId = entityId;
  }


  public SalesDataOrderPaymentInterface extensionAttributes(SalesDataOrderPaymentExtensionInterface extensionAttributes) {
    this.extensionAttributes = extensionAttributes;
    return this;
  }

  /**
   * Get extensionAttributes
   * @return extensionAttributes
   */
  @javax.annotation.Nullable
  public SalesDataOrderPaymentExtensionInterface getExtensionAttributes() {
    return extensionAttributes;
  }

  public void setExtensionAttributes(SalesDataOrderPaymentExtensionInterface extensionAttributes) {
    this.extensionAttributes = extensionAttributes;
  }


  public SalesDataOrderPaymentInterface lastTransId(String lastTransId) {
    this.lastTransId = lastTransId;
    return this;
  }

  /**
   * Last transaction ID.
   * @return lastTransId
   */
  @javax.annotation.Nullable
  public String getLastTransId() {
    return lastTransId;
  }

  public void setLastTransId(String lastTransId) {
    this.lastTransId = lastTransId;
  }


  public SalesDataOrderPaymentInterface method(String method) {
    this.method = method;
    return this;
  }

  /**
   * Method.
   * @return method
   */
  @javax.annotation.Nonnull
  public String getMethod() {
    return method;
  }

  public void setMethod(String method) {
    this.method = method;
  }


  public SalesDataOrderPaymentInterface parentId(Integer parentId) {
    this.parentId = parentId;
    return this;
  }

  /**
   * Parent ID.
   * @return parentId
   */
  @javax.annotation.Nullable
  public Integer getParentId() {
    return parentId;
  }

  public void setParentId(Integer parentId) {
    this.parentId = parentId;
  }


  public SalesDataOrderPaymentInterface poNumber(String poNumber) {
    this.poNumber = poNumber;
    return this;
  }

  /**
   * PO number.
   * @return poNumber
   */
  @javax.annotation.Nullable
  public String getPoNumber() {
    return poNumber;
  }

  public void setPoNumber(String poNumber) {
    this.poNumber = poNumber;
  }


  public SalesDataOrderPaymentInterface protectionEligibility(String protectionEligibility) {
    this.protectionEligibility = protectionEligibility;
    return this;
  }

  /**
   * Protection eligibility.
   * @return protectionEligibility
   */
  @javax.annotation.Nullable
  public String getProtectionEligibility() {
    return protectionEligibility;
  }

  public void setProtectionEligibility(String protectionEligibility) {
    this.protectionEligibility = protectionEligibility;
  }


  public SalesDataOrderPaymentInterface quotePaymentId(Integer quotePaymentId) {
    this.quotePaymentId = quotePaymentId;
    return this;
  }

  /**
   * Quote payment ID.
   * @return quotePaymentId
   */
  @javax.annotation.Nullable
  public Integer getQuotePaymentId() {
    return quotePaymentId;
  }

  public void setQuotePaymentId(Integer quotePaymentId) {
    this.quotePaymentId = quotePaymentId;
  }


  public SalesDataOrderPaymentInterface shippingAmount(BigDecimal shippingAmount) {
    this.shippingAmount = shippingAmount;
    return this;
  }

  /**
   * Shipping amount.
   * @return shippingAmount
   */
  @javax.annotation.Nullable
  public BigDecimal getShippingAmount() {
    return shippingAmount;
  }

  public void setShippingAmount(BigDecimal shippingAmount) {
    this.shippingAmount = shippingAmount;
  }


  public SalesDataOrderPaymentInterface shippingCaptured(BigDecimal shippingCaptured) {
    this.shippingCaptured = shippingCaptured;
    return this;
  }

  /**
   * Shipping captured.
   * @return shippingCaptured
   */
  @javax.annotation.Nullable
  public BigDecimal getShippingCaptured() {
    return shippingCaptured;
  }

  public void setShippingCaptured(BigDecimal shippingCaptured) {
    this.shippingCaptured = shippingCaptured;
  }


  public SalesDataOrderPaymentInterface shippingRefunded(BigDecimal shippingRefunded) {
    this.shippingRefunded = shippingRefunded;
    return this;
  }

  /**
   * Shipping refunded.
   * @return shippingRefunded
   */
  @javax.annotation.Nullable
  public BigDecimal getShippingRefunded() {
    return shippingRefunded;
  }

  public void setShippingRefunded(BigDecimal shippingRefunded) {
    this.shippingRefunded = shippingRefunded;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SalesDataOrderPaymentInterface salesDataOrderPaymentInterface = (SalesDataOrderPaymentInterface) o;
    return Objects.equals(this.accountStatus, salesDataOrderPaymentInterface.accountStatus) &&
        Objects.equals(this.additionalData, salesDataOrderPaymentInterface.additionalData) &&
        Objects.equals(this.additionalInformation, salesDataOrderPaymentInterface.additionalInformation) &&
        Objects.equals(this.addressStatus, salesDataOrderPaymentInterface.addressStatus) &&
        Objects.equals(this.amountAuthorized, salesDataOrderPaymentInterface.amountAuthorized) &&
        Objects.equals(this.amountCanceled, salesDataOrderPaymentInterface.amountCanceled) &&
        Objects.equals(this.amountOrdered, salesDataOrderPaymentInterface.amountOrdered) &&
        Objects.equals(this.amountPaid, salesDataOrderPaymentInterface.amountPaid) &&
        Objects.equals(this.amountRefunded, salesDataOrderPaymentInterface.amountRefunded) &&
        Objects.equals(this.anetTransMethod, salesDataOrderPaymentInterface.anetTransMethod) &&
        Objects.equals(this.baseAmountAuthorized, salesDataOrderPaymentInterface.baseAmountAuthorized) &&
        Objects.equals(this.baseAmountCanceled, salesDataOrderPaymentInterface.baseAmountCanceled) &&
        Objects.equals(this.baseAmountOrdered, salesDataOrderPaymentInterface.baseAmountOrdered) &&
        Objects.equals(this.baseAmountPaid, salesDataOrderPaymentInterface.baseAmountPaid) &&
        Objects.equals(this.baseAmountPaidOnline, salesDataOrderPaymentInterface.baseAmountPaidOnline) &&
        Objects.equals(this.baseAmountRefunded, salesDataOrderPaymentInterface.baseAmountRefunded) &&
        Objects.equals(this.baseAmountRefundedOnline, salesDataOrderPaymentInterface.baseAmountRefundedOnline) &&
        Objects.equals(this.baseShippingAmount, salesDataOrderPaymentInterface.baseShippingAmount) &&
        Objects.equals(this.baseShippingCaptured, salesDataOrderPaymentInterface.baseShippingCaptured) &&
        Objects.equals(this.baseShippingRefunded, salesDataOrderPaymentInterface.baseShippingRefunded) &&
        Objects.equals(this.ccApproval, salesDataOrderPaymentInterface.ccApproval) &&
        Objects.equals(this.ccAvsStatus, salesDataOrderPaymentInterface.ccAvsStatus) &&
        Objects.equals(this.ccCidStatus, salesDataOrderPaymentInterface.ccCidStatus) &&
        Objects.equals(this.ccDebugRequestBody, salesDataOrderPaymentInterface.ccDebugRequestBody) &&
        Objects.equals(this.ccDebugResponseBody, salesDataOrderPaymentInterface.ccDebugResponseBody) &&
        Objects.equals(this.ccDebugResponseSerialized, salesDataOrderPaymentInterface.ccDebugResponseSerialized) &&
        Objects.equals(this.ccExpMonth, salesDataOrderPaymentInterface.ccExpMonth) &&
        Objects.equals(this.ccExpYear, salesDataOrderPaymentInterface.ccExpYear) &&
        Objects.equals(this.ccLast4, salesDataOrderPaymentInterface.ccLast4) &&
        Objects.equals(this.ccNumberEnc, salesDataOrderPaymentInterface.ccNumberEnc) &&
        Objects.equals(this.ccOwner, salesDataOrderPaymentInterface.ccOwner) &&
        Objects.equals(this.ccSecureVerify, salesDataOrderPaymentInterface.ccSecureVerify) &&
        Objects.equals(this.ccSsIssue, salesDataOrderPaymentInterface.ccSsIssue) &&
        Objects.equals(this.ccSsStartMonth, salesDataOrderPaymentInterface.ccSsStartMonth) &&
        Objects.equals(this.ccSsStartYear, salesDataOrderPaymentInterface.ccSsStartYear) &&
        Objects.equals(this.ccStatus, salesDataOrderPaymentInterface.ccStatus) &&
        Objects.equals(this.ccStatusDescription, salesDataOrderPaymentInterface.ccStatusDescription) &&
        Objects.equals(this.ccTransId, salesDataOrderPaymentInterface.ccTransId) &&
        Objects.equals(this.ccType, salesDataOrderPaymentInterface.ccType) &&
        Objects.equals(this.echeckAccountName, salesDataOrderPaymentInterface.echeckAccountName) &&
        Objects.equals(this.echeckAccountType, salesDataOrderPaymentInterface.echeckAccountType) &&
        Objects.equals(this.echeckBankName, salesDataOrderPaymentInterface.echeckBankName) &&
        Objects.equals(this.echeckRoutingNumber, salesDataOrderPaymentInterface.echeckRoutingNumber) &&
        Objects.equals(this.echeckType, salesDataOrderPaymentInterface.echeckType) &&
        Objects.equals(this.entityId, salesDataOrderPaymentInterface.entityId) &&
        Objects.equals(this.extensionAttributes, salesDataOrderPaymentInterface.extensionAttributes) &&
        Objects.equals(this.lastTransId, salesDataOrderPaymentInterface.lastTransId) &&
        Objects.equals(this.method, salesDataOrderPaymentInterface.method) &&
        Objects.equals(this.parentId, salesDataOrderPaymentInterface.parentId) &&
        Objects.equals(this.poNumber, salesDataOrderPaymentInterface.poNumber) &&
        Objects.equals(this.protectionEligibility, salesDataOrderPaymentInterface.protectionEligibility) &&
        Objects.equals(this.quotePaymentId, salesDataOrderPaymentInterface.quotePaymentId) &&
        Objects.equals(this.shippingAmount, salesDataOrderPaymentInterface.shippingAmount) &&
        Objects.equals(this.shippingCaptured, salesDataOrderPaymentInterface.shippingCaptured) &&
        Objects.equals(this.shippingRefunded, salesDataOrderPaymentInterface.shippingRefunded);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountStatus, additionalData, additionalInformation, addressStatus, amountAuthorized, amountCanceled, amountOrdered, amountPaid, amountRefunded, anetTransMethod, baseAmountAuthorized, baseAmountCanceled, baseAmountOrdered, baseAmountPaid, baseAmountPaidOnline, baseAmountRefunded, baseAmountRefundedOnline, baseShippingAmount, baseShippingCaptured, baseShippingRefunded, ccApproval, ccAvsStatus, ccCidStatus, ccDebugRequestBody, ccDebugResponseBody, ccDebugResponseSerialized, ccExpMonth, ccExpYear, ccLast4, ccNumberEnc, ccOwner, ccSecureVerify, ccSsIssue, ccSsStartMonth, ccSsStartYear, ccStatus, ccStatusDescription, ccTransId, ccType, echeckAccountName, echeckAccountType, echeckBankName, echeckRoutingNumber, echeckType, entityId, extensionAttributes, lastTransId, method, parentId, poNumber, protectionEligibility, quotePaymentId, shippingAmount, shippingCaptured, shippingRefunded);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SalesDataOrderPaymentInterface {\n");
    sb.append("    accountStatus: ").append(toIndentedString(accountStatus)).append("\n");
    sb.append("    additionalData: ").append(toIndentedString(additionalData)).append("\n");
    sb.append("    additionalInformation: ").append(toIndentedString(additionalInformation)).append("\n");
    sb.append("    addressStatus: ").append(toIndentedString(addressStatus)).append("\n");
    sb.append("    amountAuthorized: ").append(toIndentedString(amountAuthorized)).append("\n");
    sb.append("    amountCanceled: ").append(toIndentedString(amountCanceled)).append("\n");
    sb.append("    amountOrdered: ").append(toIndentedString(amountOrdered)).append("\n");
    sb.append("    amountPaid: ").append(toIndentedString(amountPaid)).append("\n");
    sb.append("    amountRefunded: ").append(toIndentedString(amountRefunded)).append("\n");
    sb.append("    anetTransMethod: ").append(toIndentedString(anetTransMethod)).append("\n");
    sb.append("    baseAmountAuthorized: ").append(toIndentedString(baseAmountAuthorized)).append("\n");
    sb.append("    baseAmountCanceled: ").append(toIndentedString(baseAmountCanceled)).append("\n");
    sb.append("    baseAmountOrdered: ").append(toIndentedString(baseAmountOrdered)).append("\n");
    sb.append("    baseAmountPaid: ").append(toIndentedString(baseAmountPaid)).append("\n");
    sb.append("    baseAmountPaidOnline: ").append(toIndentedString(baseAmountPaidOnline)).append("\n");
    sb.append("    baseAmountRefunded: ").append(toIndentedString(baseAmountRefunded)).append("\n");
    sb.append("    baseAmountRefundedOnline: ").append(toIndentedString(baseAmountRefundedOnline)).append("\n");
    sb.append("    baseShippingAmount: ").append(toIndentedString(baseShippingAmount)).append("\n");
    sb.append("    baseShippingCaptured: ").append(toIndentedString(baseShippingCaptured)).append("\n");
    sb.append("    baseShippingRefunded: ").append(toIndentedString(baseShippingRefunded)).append("\n");
    sb.append("    ccApproval: ").append(toIndentedString(ccApproval)).append("\n");
    sb.append("    ccAvsStatus: ").append(toIndentedString(ccAvsStatus)).append("\n");
    sb.append("    ccCidStatus: ").append(toIndentedString(ccCidStatus)).append("\n");
    sb.append("    ccDebugRequestBody: ").append(toIndentedString(ccDebugRequestBody)).append("\n");
    sb.append("    ccDebugResponseBody: ").append(toIndentedString(ccDebugResponseBody)).append("\n");
    sb.append("    ccDebugResponseSerialized: ").append(toIndentedString(ccDebugResponseSerialized)).append("\n");
    sb.append("    ccExpMonth: ").append(toIndentedString(ccExpMonth)).append("\n");
    sb.append("    ccExpYear: ").append(toIndentedString(ccExpYear)).append("\n");
    sb.append("    ccLast4: ").append(toIndentedString(ccLast4)).append("\n");
    sb.append("    ccNumberEnc: ").append(toIndentedString(ccNumberEnc)).append("\n");
    sb.append("    ccOwner: ").append(toIndentedString(ccOwner)).append("\n");
    sb.append("    ccSecureVerify: ").append(toIndentedString(ccSecureVerify)).append("\n");
    sb.append("    ccSsIssue: ").append(toIndentedString(ccSsIssue)).append("\n");
    sb.append("    ccSsStartMonth: ").append(toIndentedString(ccSsStartMonth)).append("\n");
    sb.append("    ccSsStartYear: ").append(toIndentedString(ccSsStartYear)).append("\n");
    sb.append("    ccStatus: ").append(toIndentedString(ccStatus)).append("\n");
    sb.append("    ccStatusDescription: ").append(toIndentedString(ccStatusDescription)).append("\n");
    sb.append("    ccTransId: ").append(toIndentedString(ccTransId)).append("\n");
    sb.append("    ccType: ").append(toIndentedString(ccType)).append("\n");
    sb.append("    echeckAccountName: ").append(toIndentedString(echeckAccountName)).append("\n");
    sb.append("    echeckAccountType: ").append(toIndentedString(echeckAccountType)).append("\n");
    sb.append("    echeckBankName: ").append(toIndentedString(echeckBankName)).append("\n");
    sb.append("    echeckRoutingNumber: ").append(toIndentedString(echeckRoutingNumber)).append("\n");
    sb.append("    echeckType: ").append(toIndentedString(echeckType)).append("\n");
    sb.append("    entityId: ").append(toIndentedString(entityId)).append("\n");
    sb.append("    extensionAttributes: ").append(toIndentedString(extensionAttributes)).append("\n");
    sb.append("    lastTransId: ").append(toIndentedString(lastTransId)).append("\n");
    sb.append("    method: ").append(toIndentedString(method)).append("\n");
    sb.append("    parentId: ").append(toIndentedString(parentId)).append("\n");
    sb.append("    poNumber: ").append(toIndentedString(poNumber)).append("\n");
    sb.append("    protectionEligibility: ").append(toIndentedString(protectionEligibility)).append("\n");
    sb.append("    quotePaymentId: ").append(toIndentedString(quotePaymentId)).append("\n");
    sb.append("    shippingAmount: ").append(toIndentedString(shippingAmount)).append("\n");
    sb.append("    shippingCaptured: ").append(toIndentedString(shippingCaptured)).append("\n");
    sb.append("    shippingRefunded: ").append(toIndentedString(shippingRefunded)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("account_status");
    openapiFields.add("additional_data");
    openapiFields.add("additional_information");
    openapiFields.add("address_status");
    openapiFields.add("amount_authorized");
    openapiFields.add("amount_canceled");
    openapiFields.add("amount_ordered");
    openapiFields.add("amount_paid");
    openapiFields.add("amount_refunded");
    openapiFields.add("anet_trans_method");
    openapiFields.add("base_amount_authorized");
    openapiFields.add("base_amount_canceled");
    openapiFields.add("base_amount_ordered");
    openapiFields.add("base_amount_paid");
    openapiFields.add("base_amount_paid_online");
    openapiFields.add("base_amount_refunded");
    openapiFields.add("base_amount_refunded_online");
    openapiFields.add("base_shipping_amount");
    openapiFields.add("base_shipping_captured");
    openapiFields.add("base_shipping_refunded");
    openapiFields.add("cc_approval");
    openapiFields.add("cc_avs_status");
    openapiFields.add("cc_cid_status");
    openapiFields.add("cc_debug_request_body");
    openapiFields.add("cc_debug_response_body");
    openapiFields.add("cc_debug_response_serialized");
    openapiFields.add("cc_exp_month");
    openapiFields.add("cc_exp_year");
    openapiFields.add("cc_last4");
    openapiFields.add("cc_number_enc");
    openapiFields.add("cc_owner");
    openapiFields.add("cc_secure_verify");
    openapiFields.add("cc_ss_issue");
    openapiFields.add("cc_ss_start_month");
    openapiFields.add("cc_ss_start_year");
    openapiFields.add("cc_status");
    openapiFields.add("cc_status_description");
    openapiFields.add("cc_trans_id");
    openapiFields.add("cc_type");
    openapiFields.add("echeck_account_name");
    openapiFields.add("echeck_account_type");
    openapiFields.add("echeck_bank_name");
    openapiFields.add("echeck_routing_number");
    openapiFields.add("echeck_type");
    openapiFields.add("entity_id");
    openapiFields.add("extension_attributes");
    openapiFields.add("last_trans_id");
    openapiFields.add("method");
    openapiFields.add("parent_id");
    openapiFields.add("po_number");
    openapiFields.add("protection_eligibility");
    openapiFields.add("quote_payment_id");
    openapiFields.add("shipping_amount");
    openapiFields.add("shipping_captured");
    openapiFields.add("shipping_refunded");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("account_status");
    openapiRequiredFields.add("additional_information");
    openapiRequiredFields.add("cc_last4");
    openapiRequiredFields.add("method");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to SalesDataOrderPaymentInterface
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!SalesDataOrderPaymentInterface.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in SalesDataOrderPaymentInterface is not found in the empty JSON string", SalesDataOrderPaymentInterface.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!SalesDataOrderPaymentInterface.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `SalesDataOrderPaymentInterface` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : SalesDataOrderPaymentInterface.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("account_status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `account_status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("account_status").toString()));
      }
      if ((jsonObj.get("additional_data") != null && !jsonObj.get("additional_data").isJsonNull()) && !jsonObj.get("additional_data").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `additional_data` to be a primitive type in the JSON string but got `%s`", jsonObj.get("additional_data").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("additional_information") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("additional_information").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `additional_information` to be an array in the JSON string but got `%s`", jsonObj.get("additional_information").toString()));
      }
      if ((jsonObj.get("address_status") != null && !jsonObj.get("address_status").isJsonNull()) && !jsonObj.get("address_status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `address_status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("address_status").toString()));
      }
      if ((jsonObj.get("anet_trans_method") != null && !jsonObj.get("anet_trans_method").isJsonNull()) && !jsonObj.get("anet_trans_method").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `anet_trans_method` to be a primitive type in the JSON string but got `%s`", jsonObj.get("anet_trans_method").toString()));
      }
      if ((jsonObj.get("cc_approval") != null && !jsonObj.get("cc_approval").isJsonNull()) && !jsonObj.get("cc_approval").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cc_approval` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cc_approval").toString()));
      }
      if ((jsonObj.get("cc_avs_status") != null && !jsonObj.get("cc_avs_status").isJsonNull()) && !jsonObj.get("cc_avs_status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cc_avs_status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cc_avs_status").toString()));
      }
      if ((jsonObj.get("cc_cid_status") != null && !jsonObj.get("cc_cid_status").isJsonNull()) && !jsonObj.get("cc_cid_status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cc_cid_status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cc_cid_status").toString()));
      }
      if ((jsonObj.get("cc_debug_request_body") != null && !jsonObj.get("cc_debug_request_body").isJsonNull()) && !jsonObj.get("cc_debug_request_body").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cc_debug_request_body` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cc_debug_request_body").toString()));
      }
      if ((jsonObj.get("cc_debug_response_body") != null && !jsonObj.get("cc_debug_response_body").isJsonNull()) && !jsonObj.get("cc_debug_response_body").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cc_debug_response_body` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cc_debug_response_body").toString()));
      }
      if ((jsonObj.get("cc_debug_response_serialized") != null && !jsonObj.get("cc_debug_response_serialized").isJsonNull()) && !jsonObj.get("cc_debug_response_serialized").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cc_debug_response_serialized` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cc_debug_response_serialized").toString()));
      }
      if ((jsonObj.get("cc_exp_month") != null && !jsonObj.get("cc_exp_month").isJsonNull()) && !jsonObj.get("cc_exp_month").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cc_exp_month` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cc_exp_month").toString()));
      }
      if ((jsonObj.get("cc_exp_year") != null && !jsonObj.get("cc_exp_year").isJsonNull()) && !jsonObj.get("cc_exp_year").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cc_exp_year` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cc_exp_year").toString()));
      }
      if (!jsonObj.get("cc_last4").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cc_last4` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cc_last4").toString()));
      }
      if ((jsonObj.get("cc_number_enc") != null && !jsonObj.get("cc_number_enc").isJsonNull()) && !jsonObj.get("cc_number_enc").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cc_number_enc` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cc_number_enc").toString()));
      }
      if ((jsonObj.get("cc_owner") != null && !jsonObj.get("cc_owner").isJsonNull()) && !jsonObj.get("cc_owner").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cc_owner` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cc_owner").toString()));
      }
      if ((jsonObj.get("cc_secure_verify") != null && !jsonObj.get("cc_secure_verify").isJsonNull()) && !jsonObj.get("cc_secure_verify").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cc_secure_verify` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cc_secure_verify").toString()));
      }
      if ((jsonObj.get("cc_ss_issue") != null && !jsonObj.get("cc_ss_issue").isJsonNull()) && !jsonObj.get("cc_ss_issue").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cc_ss_issue` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cc_ss_issue").toString()));
      }
      if ((jsonObj.get("cc_ss_start_month") != null && !jsonObj.get("cc_ss_start_month").isJsonNull()) && !jsonObj.get("cc_ss_start_month").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cc_ss_start_month` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cc_ss_start_month").toString()));
      }
      if ((jsonObj.get("cc_ss_start_year") != null && !jsonObj.get("cc_ss_start_year").isJsonNull()) && !jsonObj.get("cc_ss_start_year").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cc_ss_start_year` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cc_ss_start_year").toString()));
      }
      if ((jsonObj.get("cc_status") != null && !jsonObj.get("cc_status").isJsonNull()) && !jsonObj.get("cc_status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cc_status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cc_status").toString()));
      }
      if ((jsonObj.get("cc_status_description") != null && !jsonObj.get("cc_status_description").isJsonNull()) && !jsonObj.get("cc_status_description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cc_status_description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cc_status_description").toString()));
      }
      if ((jsonObj.get("cc_trans_id") != null && !jsonObj.get("cc_trans_id").isJsonNull()) && !jsonObj.get("cc_trans_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cc_trans_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cc_trans_id").toString()));
      }
      if ((jsonObj.get("cc_type") != null && !jsonObj.get("cc_type").isJsonNull()) && !jsonObj.get("cc_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cc_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cc_type").toString()));
      }
      if ((jsonObj.get("echeck_account_name") != null && !jsonObj.get("echeck_account_name").isJsonNull()) && !jsonObj.get("echeck_account_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `echeck_account_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("echeck_account_name").toString()));
      }
      if ((jsonObj.get("echeck_account_type") != null && !jsonObj.get("echeck_account_type").isJsonNull()) && !jsonObj.get("echeck_account_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `echeck_account_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("echeck_account_type").toString()));
      }
      if ((jsonObj.get("echeck_bank_name") != null && !jsonObj.get("echeck_bank_name").isJsonNull()) && !jsonObj.get("echeck_bank_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `echeck_bank_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("echeck_bank_name").toString()));
      }
      if ((jsonObj.get("echeck_routing_number") != null && !jsonObj.get("echeck_routing_number").isJsonNull()) && !jsonObj.get("echeck_routing_number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `echeck_routing_number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("echeck_routing_number").toString()));
      }
      if ((jsonObj.get("echeck_type") != null && !jsonObj.get("echeck_type").isJsonNull()) && !jsonObj.get("echeck_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `echeck_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("echeck_type").toString()));
      }
      // validate the optional field `extension_attributes`
      if (jsonObj.get("extension_attributes") != null && !jsonObj.get("extension_attributes").isJsonNull()) {
        SalesDataOrderPaymentExtensionInterface.validateJsonElement(jsonObj.get("extension_attributes"));
      }
      if ((jsonObj.get("last_trans_id") != null && !jsonObj.get("last_trans_id").isJsonNull()) && !jsonObj.get("last_trans_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `last_trans_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("last_trans_id").toString()));
      }
      if (!jsonObj.get("method").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `method` to be a primitive type in the JSON string but got `%s`", jsonObj.get("method").toString()));
      }
      if ((jsonObj.get("po_number") != null && !jsonObj.get("po_number").isJsonNull()) && !jsonObj.get("po_number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `po_number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("po_number").toString()));
      }
      if ((jsonObj.get("protection_eligibility") != null && !jsonObj.get("protection_eligibility").isJsonNull()) && !jsonObj.get("protection_eligibility").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `protection_eligibility` to be a primitive type in the JSON string but got `%s`", jsonObj.get("protection_eligibility").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SalesDataOrderPaymentInterface.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SalesDataOrderPaymentInterface' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SalesDataOrderPaymentInterface> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SalesDataOrderPaymentInterface.class));

       return (TypeAdapter<T>) new TypeAdapter<SalesDataOrderPaymentInterface>() {
           @Override
           public void write(JsonWriter out, SalesDataOrderPaymentInterface value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public SalesDataOrderPaymentInterface read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of SalesDataOrderPaymentInterface given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of SalesDataOrderPaymentInterface
   * @throws IOException if the JSON string is invalid with respect to SalesDataOrderPaymentInterface
   */
  public static SalesDataOrderPaymentInterface fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SalesDataOrderPaymentInterface.class);
  }

  /**
   * Convert an instance of SalesDataOrderPaymentInterface to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

