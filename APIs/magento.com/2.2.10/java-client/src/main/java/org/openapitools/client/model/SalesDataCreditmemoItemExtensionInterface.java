/*
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ExtensionInterface class for @see \\Magento\\Sales\\Api\\Data\\CreditmemoItemInterface
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:00:51.810681-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class SalesDataCreditmemoItemExtensionInterface {
  public static final String SERIALIZED_NAME_INVOICE_TEXT_CODES = "invoice_text_codes";
  @SerializedName(SERIALIZED_NAME_INVOICE_TEXT_CODES)
  private List<String> invoiceTextCodes = new ArrayList<>();

  public static final String SERIALIZED_NAME_TAX_CODES = "tax_codes";
  @SerializedName(SERIALIZED_NAME_TAX_CODES)
  private List<String> taxCodes = new ArrayList<>();

  public static final String SERIALIZED_NAME_VERTEX_TAX_CODES = "vertex_tax_codes";
  @SerializedName(SERIALIZED_NAME_VERTEX_TAX_CODES)
  private List<String> vertexTaxCodes = new ArrayList<>();

  public SalesDataCreditmemoItemExtensionInterface() {
  }

  public SalesDataCreditmemoItemExtensionInterface invoiceTextCodes(List<String> invoiceTextCodes) {
    this.invoiceTextCodes = invoiceTextCodes;
    return this;
  }

  public SalesDataCreditmemoItemExtensionInterface addInvoiceTextCodesItem(String invoiceTextCodesItem) {
    if (this.invoiceTextCodes == null) {
      this.invoiceTextCodes = new ArrayList<>();
    }
    this.invoiceTextCodes.add(invoiceTextCodesItem);
    return this;
  }

  /**
   * Get invoiceTextCodes
   * @return invoiceTextCodes
   */
  @javax.annotation.Nullable
  public List<String> getInvoiceTextCodes() {
    return invoiceTextCodes;
  }

  public void setInvoiceTextCodes(List<String> invoiceTextCodes) {
    this.invoiceTextCodes = invoiceTextCodes;
  }


  public SalesDataCreditmemoItemExtensionInterface taxCodes(List<String> taxCodes) {
    this.taxCodes = taxCodes;
    return this;
  }

  public SalesDataCreditmemoItemExtensionInterface addTaxCodesItem(String taxCodesItem) {
    if (this.taxCodes == null) {
      this.taxCodes = new ArrayList<>();
    }
    this.taxCodes.add(taxCodesItem);
    return this;
  }

  /**
   * Get taxCodes
   * @return taxCodes
   */
  @javax.annotation.Nullable
  public List<String> getTaxCodes() {
    return taxCodes;
  }

  public void setTaxCodes(List<String> taxCodes) {
    this.taxCodes = taxCodes;
  }


  public SalesDataCreditmemoItemExtensionInterface vertexTaxCodes(List<String> vertexTaxCodes) {
    this.vertexTaxCodes = vertexTaxCodes;
    return this;
  }

  public SalesDataCreditmemoItemExtensionInterface addVertexTaxCodesItem(String vertexTaxCodesItem) {
    if (this.vertexTaxCodes == null) {
      this.vertexTaxCodes = new ArrayList<>();
    }
    this.vertexTaxCodes.add(vertexTaxCodesItem);
    return this;
  }

  /**
   * Get vertexTaxCodes
   * @return vertexTaxCodes
   */
  @javax.annotation.Nullable
  public List<String> getVertexTaxCodes() {
    return vertexTaxCodes;
  }

  public void setVertexTaxCodes(List<String> vertexTaxCodes) {
    this.vertexTaxCodes = vertexTaxCodes;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SalesDataCreditmemoItemExtensionInterface salesDataCreditmemoItemExtensionInterface = (SalesDataCreditmemoItemExtensionInterface) o;
    return Objects.equals(this.invoiceTextCodes, salesDataCreditmemoItemExtensionInterface.invoiceTextCodes) &&
        Objects.equals(this.taxCodes, salesDataCreditmemoItemExtensionInterface.taxCodes) &&
        Objects.equals(this.vertexTaxCodes, salesDataCreditmemoItemExtensionInterface.vertexTaxCodes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(invoiceTextCodes, taxCodes, vertexTaxCodes);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SalesDataCreditmemoItemExtensionInterface {\n");
    sb.append("    invoiceTextCodes: ").append(toIndentedString(invoiceTextCodes)).append("\n");
    sb.append("    taxCodes: ").append(toIndentedString(taxCodes)).append("\n");
    sb.append("    vertexTaxCodes: ").append(toIndentedString(vertexTaxCodes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("invoice_text_codes");
    openapiFields.add("tax_codes");
    openapiFields.add("vertex_tax_codes");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to SalesDataCreditmemoItemExtensionInterface
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!SalesDataCreditmemoItemExtensionInterface.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in SalesDataCreditmemoItemExtensionInterface is not found in the empty JSON string", SalesDataCreditmemoItemExtensionInterface.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!SalesDataCreditmemoItemExtensionInterface.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `SalesDataCreditmemoItemExtensionInterface` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // ensure the optional json data is an array if present
      if (jsonObj.get("invoice_text_codes") != null && !jsonObj.get("invoice_text_codes").isJsonNull() && !jsonObj.get("invoice_text_codes").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `invoice_text_codes` to be an array in the JSON string but got `%s`", jsonObj.get("invoice_text_codes").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("tax_codes") != null && !jsonObj.get("tax_codes").isJsonNull() && !jsonObj.get("tax_codes").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `tax_codes` to be an array in the JSON string but got `%s`", jsonObj.get("tax_codes").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("vertex_tax_codes") != null && !jsonObj.get("vertex_tax_codes").isJsonNull() && !jsonObj.get("vertex_tax_codes").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `vertex_tax_codes` to be an array in the JSON string but got `%s`", jsonObj.get("vertex_tax_codes").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SalesDataCreditmemoItemExtensionInterface.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SalesDataCreditmemoItemExtensionInterface' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SalesDataCreditmemoItemExtensionInterface> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SalesDataCreditmemoItemExtensionInterface.class));

       return (TypeAdapter<T>) new TypeAdapter<SalesDataCreditmemoItemExtensionInterface>() {
           @Override
           public void write(JsonWriter out, SalesDataCreditmemoItemExtensionInterface value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public SalesDataCreditmemoItemExtensionInterface read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of SalesDataCreditmemoItemExtensionInterface given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of SalesDataCreditmemoItemExtensionInterface
   * @throws IOException if the JSON string is invalid with respect to SalesDataCreditmemoItemExtensionInterface
   */
  public static SalesDataCreditmemoItemExtensionInterface fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SalesDataCreditmemoItemExtensionInterface.class);
  }

  /**
   * Convert an instance of SalesDataCreditmemoItemExtensionInterface to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

