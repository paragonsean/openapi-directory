/*
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ExtensionInterface class for @see \\Magento\\Sales\\Api\\Data\\ShipmentInterface
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:00:51.810681-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class SalesDataShipmentExtensionInterface {
  public static final String SERIALIZED_NAME_EXT_LOCATION_ID = "ext_location_id";
  @SerializedName(SERIALIZED_NAME_EXT_LOCATION_ID)
  private String extLocationId;

  public static final String SERIALIZED_NAME_EXT_RETURN_SHIPMENT_ID = "ext_return_shipment_id";
  @SerializedName(SERIALIZED_NAME_EXT_RETURN_SHIPMENT_ID)
  private String extReturnShipmentId;

  public static final String SERIALIZED_NAME_EXT_SHIPMENT_ID = "ext_shipment_id";
  @SerializedName(SERIALIZED_NAME_EXT_SHIPMENT_ID)
  private String extShipmentId;

  public static final String SERIALIZED_NAME_EXT_TRACKING_REFERENCE = "ext_tracking_reference";
  @SerializedName(SERIALIZED_NAME_EXT_TRACKING_REFERENCE)
  private String extTrackingReference;

  public static final String SERIALIZED_NAME_EXT_TRACKING_URL = "ext_tracking_url";
  @SerializedName(SERIALIZED_NAME_EXT_TRACKING_URL)
  private String extTrackingUrl;

  public SalesDataShipmentExtensionInterface() {
  }

  public SalesDataShipmentExtensionInterface extLocationId(String extLocationId) {
    this.extLocationId = extLocationId;
    return this;
  }

  /**
   * Get extLocationId
   * @return extLocationId
   */
  @javax.annotation.Nullable
  public String getExtLocationId() {
    return extLocationId;
  }

  public void setExtLocationId(String extLocationId) {
    this.extLocationId = extLocationId;
  }


  public SalesDataShipmentExtensionInterface extReturnShipmentId(String extReturnShipmentId) {
    this.extReturnShipmentId = extReturnShipmentId;
    return this;
  }

  /**
   * Get extReturnShipmentId
   * @return extReturnShipmentId
   */
  @javax.annotation.Nullable
  public String getExtReturnShipmentId() {
    return extReturnShipmentId;
  }

  public void setExtReturnShipmentId(String extReturnShipmentId) {
    this.extReturnShipmentId = extReturnShipmentId;
  }


  public SalesDataShipmentExtensionInterface extShipmentId(String extShipmentId) {
    this.extShipmentId = extShipmentId;
    return this;
  }

  /**
   * Get extShipmentId
   * @return extShipmentId
   */
  @javax.annotation.Nullable
  public String getExtShipmentId() {
    return extShipmentId;
  }

  public void setExtShipmentId(String extShipmentId) {
    this.extShipmentId = extShipmentId;
  }


  public SalesDataShipmentExtensionInterface extTrackingReference(String extTrackingReference) {
    this.extTrackingReference = extTrackingReference;
    return this;
  }

  /**
   * Get extTrackingReference
   * @return extTrackingReference
   */
  @javax.annotation.Nullable
  public String getExtTrackingReference() {
    return extTrackingReference;
  }

  public void setExtTrackingReference(String extTrackingReference) {
    this.extTrackingReference = extTrackingReference;
  }


  public SalesDataShipmentExtensionInterface extTrackingUrl(String extTrackingUrl) {
    this.extTrackingUrl = extTrackingUrl;
    return this;
  }

  /**
   * Get extTrackingUrl
   * @return extTrackingUrl
   */
  @javax.annotation.Nullable
  public String getExtTrackingUrl() {
    return extTrackingUrl;
  }

  public void setExtTrackingUrl(String extTrackingUrl) {
    this.extTrackingUrl = extTrackingUrl;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SalesDataShipmentExtensionInterface salesDataShipmentExtensionInterface = (SalesDataShipmentExtensionInterface) o;
    return Objects.equals(this.extLocationId, salesDataShipmentExtensionInterface.extLocationId) &&
        Objects.equals(this.extReturnShipmentId, salesDataShipmentExtensionInterface.extReturnShipmentId) &&
        Objects.equals(this.extShipmentId, salesDataShipmentExtensionInterface.extShipmentId) &&
        Objects.equals(this.extTrackingReference, salesDataShipmentExtensionInterface.extTrackingReference) &&
        Objects.equals(this.extTrackingUrl, salesDataShipmentExtensionInterface.extTrackingUrl);
  }

  @Override
  public int hashCode() {
    return Objects.hash(extLocationId, extReturnShipmentId, extShipmentId, extTrackingReference, extTrackingUrl);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SalesDataShipmentExtensionInterface {\n");
    sb.append("    extLocationId: ").append(toIndentedString(extLocationId)).append("\n");
    sb.append("    extReturnShipmentId: ").append(toIndentedString(extReturnShipmentId)).append("\n");
    sb.append("    extShipmentId: ").append(toIndentedString(extShipmentId)).append("\n");
    sb.append("    extTrackingReference: ").append(toIndentedString(extTrackingReference)).append("\n");
    sb.append("    extTrackingUrl: ").append(toIndentedString(extTrackingUrl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ext_location_id");
    openapiFields.add("ext_return_shipment_id");
    openapiFields.add("ext_shipment_id");
    openapiFields.add("ext_tracking_reference");
    openapiFields.add("ext_tracking_url");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to SalesDataShipmentExtensionInterface
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!SalesDataShipmentExtensionInterface.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in SalesDataShipmentExtensionInterface is not found in the empty JSON string", SalesDataShipmentExtensionInterface.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!SalesDataShipmentExtensionInterface.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `SalesDataShipmentExtensionInterface` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("ext_location_id") != null && !jsonObj.get("ext_location_id").isJsonNull()) && !jsonObj.get("ext_location_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ext_location_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ext_location_id").toString()));
      }
      if ((jsonObj.get("ext_return_shipment_id") != null && !jsonObj.get("ext_return_shipment_id").isJsonNull()) && !jsonObj.get("ext_return_shipment_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ext_return_shipment_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ext_return_shipment_id").toString()));
      }
      if ((jsonObj.get("ext_shipment_id") != null && !jsonObj.get("ext_shipment_id").isJsonNull()) && !jsonObj.get("ext_shipment_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ext_shipment_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ext_shipment_id").toString()));
      }
      if ((jsonObj.get("ext_tracking_reference") != null && !jsonObj.get("ext_tracking_reference").isJsonNull()) && !jsonObj.get("ext_tracking_reference").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ext_tracking_reference` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ext_tracking_reference").toString()));
      }
      if ((jsonObj.get("ext_tracking_url") != null && !jsonObj.get("ext_tracking_url").isJsonNull()) && !jsonObj.get("ext_tracking_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ext_tracking_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ext_tracking_url").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SalesDataShipmentExtensionInterface.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SalesDataShipmentExtensionInterface' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SalesDataShipmentExtensionInterface> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SalesDataShipmentExtensionInterface.class));

       return (TypeAdapter<T>) new TypeAdapter<SalesDataShipmentExtensionInterface>() {
           @Override
           public void write(JsonWriter out, SalesDataShipmentExtensionInterface value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public SalesDataShipmentExtensionInterface read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of SalesDataShipmentExtensionInterface given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of SalesDataShipmentExtensionInterface
   * @throws IOException if the JSON string is invalid with respect to SalesDataShipmentExtensionInterface
   */
  public static SalesDataShipmentExtensionInterface fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SalesDataShipmentExtensionInterface.class);
  }

  /**
   * Convert an instance of SalesDataShipmentExtensionInterface to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

