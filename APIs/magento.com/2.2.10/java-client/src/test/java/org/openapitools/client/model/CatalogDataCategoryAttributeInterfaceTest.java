/*
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.EavDataAttributeFrontendLabelInterface;
import org.openapitools.client.model.EavDataAttributeOptionInterface;
import org.openapitools.client.model.EavDataAttributeValidationRuleInterface;
import org.openapitools.client.model.FrameworkAttributeInterface;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for CatalogDataCategoryAttributeInterface
 */
public class CatalogDataCategoryAttributeInterfaceTest {
    private final CatalogDataCategoryAttributeInterface model = new CatalogDataCategoryAttributeInterface();

    /**
     * Model tests for CatalogDataCategoryAttributeInterface
     */
    @Test
    public void testCatalogDataCategoryAttributeInterface() {
        // TODO: test CatalogDataCategoryAttributeInterface
    }

    /**
     * Test the property 'applyTo'
     */
    @Test
    public void applyToTest() {
        // TODO: test applyTo
    }

    /**
     * Test the property 'attributeCode'
     */
    @Test
    public void attributeCodeTest() {
        // TODO: test attributeCode
    }

    /**
     * Test the property 'attributeId'
     */
    @Test
    public void attributeIdTest() {
        // TODO: test attributeId
    }

    /**
     * Test the property 'backendModel'
     */
    @Test
    public void backendModelTest() {
        // TODO: test backendModel
    }

    /**
     * Test the property 'backendType'
     */
    @Test
    public void backendTypeTest() {
        // TODO: test backendType
    }

    /**
     * Test the property 'customAttributes'
     */
    @Test
    public void customAttributesTest() {
        // TODO: test customAttributes
    }

    /**
     * Test the property 'defaultFrontendLabel'
     */
    @Test
    public void defaultFrontendLabelTest() {
        // TODO: test defaultFrontendLabel
    }

    /**
     * Test the property 'defaultValue'
     */
    @Test
    public void defaultValueTest() {
        // TODO: test defaultValue
    }

    /**
     * Test the property 'entityTypeId'
     */
    @Test
    public void entityTypeIdTest() {
        // TODO: test entityTypeId
    }

    /**
     * Test the property 'extensionAttributes'
     */
    @Test
    public void extensionAttributesTest() {
        // TODO: test extensionAttributes
    }

    /**
     * Test the property 'frontendClass'
     */
    @Test
    public void frontendClassTest() {
        // TODO: test frontendClass
    }

    /**
     * Test the property 'frontendInput'
     */
    @Test
    public void frontendInputTest() {
        // TODO: test frontendInput
    }

    /**
     * Test the property 'frontendLabels'
     */
    @Test
    public void frontendLabelsTest() {
        // TODO: test frontendLabels
    }

    /**
     * Test the property 'isComparable'
     */
    @Test
    public void isComparableTest() {
        // TODO: test isComparable
    }

    /**
     * Test the property 'isFilterable'
     */
    @Test
    public void isFilterableTest() {
        // TODO: test isFilterable
    }

    /**
     * Test the property 'isFilterableInGrid'
     */
    @Test
    public void isFilterableInGridTest() {
        // TODO: test isFilterableInGrid
    }

    /**
     * Test the property 'isFilterableInSearch'
     */
    @Test
    public void isFilterableInSearchTest() {
        // TODO: test isFilterableInSearch
    }

    /**
     * Test the property 'isHtmlAllowedOnFront'
     */
    @Test
    public void isHtmlAllowedOnFrontTest() {
        // TODO: test isHtmlAllowedOnFront
    }

    /**
     * Test the property 'isRequired'
     */
    @Test
    public void isRequiredTest() {
        // TODO: test isRequired
    }

    /**
     * Test the property 'isSearchable'
     */
    @Test
    public void isSearchableTest() {
        // TODO: test isSearchable
    }

    /**
     * Test the property 'isUnique'
     */
    @Test
    public void isUniqueTest() {
        // TODO: test isUnique
    }

    /**
     * Test the property 'isUsedForPromoRules'
     */
    @Test
    public void isUsedForPromoRulesTest() {
        // TODO: test isUsedForPromoRules
    }

    /**
     * Test the property 'isUsedInGrid'
     */
    @Test
    public void isUsedInGridTest() {
        // TODO: test isUsedInGrid
    }

    /**
     * Test the property 'isUserDefined'
     */
    @Test
    public void isUserDefinedTest() {
        // TODO: test isUserDefined
    }

    /**
     * Test the property 'isVisible'
     */
    @Test
    public void isVisibleTest() {
        // TODO: test isVisible
    }

    /**
     * Test the property 'isVisibleInAdvancedSearch'
     */
    @Test
    public void isVisibleInAdvancedSearchTest() {
        // TODO: test isVisibleInAdvancedSearch
    }

    /**
     * Test the property 'isVisibleInGrid'
     */
    @Test
    public void isVisibleInGridTest() {
        // TODO: test isVisibleInGrid
    }

    /**
     * Test the property 'isVisibleOnFront'
     */
    @Test
    public void isVisibleOnFrontTest() {
        // TODO: test isVisibleOnFront
    }

    /**
     * Test the property 'isWysiwygEnabled'
     */
    @Test
    public void isWysiwygEnabledTest() {
        // TODO: test isWysiwygEnabled
    }

    /**
     * Test the property 'note'
     */
    @Test
    public void noteTest() {
        // TODO: test note
    }

    /**
     * Test the property 'options'
     */
    @Test
    public void optionsTest() {
        // TODO: test options
    }

    /**
     * Test the property 'position'
     */
    @Test
    public void positionTest() {
        // TODO: test position
    }

    /**
     * Test the property 'scope'
     */
    @Test
    public void scopeTest() {
        // TODO: test scope
    }

    /**
     * Test the property 'sourceModel'
     */
    @Test
    public void sourceModelTest() {
        // TODO: test sourceModel
    }

    /**
     * Test the property 'usedForSortBy'
     */
    @Test
    public void usedForSortByTest() {
        // TODO: test usedForSortBy
    }

    /**
     * Test the property 'usedInProductListing'
     */
    @Test
    public void usedInProductListingTest() {
        // TODO: test usedInProductListing
    }

    /**
     * Test the property 'validationRules'
     */
    @Test
    public void validationRulesTest() {
        // TODO: test validationRules
    }

}
