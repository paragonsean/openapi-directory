/*
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CatalogCostStorageV1UpdatePostRequest;
import org.openapitools.client.model.CatalogDataPriceUpdateResultInterface;
import org.openapitools.client.model.ErrorResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ProductsCostApi
 */
@Disabled
public class ProductsCostApiTest {

    private final ProductsCostApi api = new ProductsCostApi();

    /**
     * products/cost
     *
     * Add or update product cost. Input item should correspond to \\Magento\\Catalog\\Api\\Data\\CostInterface. If any items will have invalid cost, store id or sku, they will be marked as failed and excluded from update list and \\Magento\\Catalog\\Api\\Data\\PriceUpdateResultInterface[] with problem description will be returned. If there were no failed items during update empty array will be returned. If error occurred during the update exception will be thrown.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void catalogCostStorageV1UpdatePostTest() throws ApiException {
        CatalogCostStorageV1UpdatePostRequest catalogCostStorageV1UpdatePostRequest = null;
        List<CatalogDataPriceUpdateResultInterface> response = api.catalogCostStorageV1UpdatePost(catalogCostStorageV1UpdatePostRequest);
        // TODO: test validations
    }

}
