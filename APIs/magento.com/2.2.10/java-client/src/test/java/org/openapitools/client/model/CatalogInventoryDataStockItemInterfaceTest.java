/*
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.Arrays;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for CatalogInventoryDataStockItemInterface
 */
public class CatalogInventoryDataStockItemInterfaceTest {
    private final CatalogInventoryDataStockItemInterface model = new CatalogInventoryDataStockItemInterface();

    /**
     * Model tests for CatalogInventoryDataStockItemInterface
     */
    @Test
    public void testCatalogInventoryDataStockItemInterface() {
        // TODO: test CatalogInventoryDataStockItemInterface
    }

    /**
     * Test the property 'backorders'
     */
    @Test
    public void backordersTest() {
        // TODO: test backorders
    }

    /**
     * Test the property 'enableQtyIncrements'
     */
    @Test
    public void enableQtyIncrementsTest() {
        // TODO: test enableQtyIncrements
    }

    /**
     * Test the property 'extensionAttributes'
     */
    @Test
    public void extensionAttributesTest() {
        // TODO: test extensionAttributes
    }

    /**
     * Test the property 'isDecimalDivided'
     */
    @Test
    public void isDecimalDividedTest() {
        // TODO: test isDecimalDivided
    }

    /**
     * Test the property 'isInStock'
     */
    @Test
    public void isInStockTest() {
        // TODO: test isInStock
    }

    /**
     * Test the property 'isQtyDecimal'
     */
    @Test
    public void isQtyDecimalTest() {
        // TODO: test isQtyDecimal
    }

    /**
     * Test the property 'itemId'
     */
    @Test
    public void itemIdTest() {
        // TODO: test itemId
    }

    /**
     * Test the property 'lowStockDate'
     */
    @Test
    public void lowStockDateTest() {
        // TODO: test lowStockDate
    }

    /**
     * Test the property 'manageStock'
     */
    @Test
    public void manageStockTest() {
        // TODO: test manageStock
    }

    /**
     * Test the property 'maxSaleQty'
     */
    @Test
    public void maxSaleQtyTest() {
        // TODO: test maxSaleQty
    }

    /**
     * Test the property 'minQty'
     */
    @Test
    public void minQtyTest() {
        // TODO: test minQty
    }

    /**
     * Test the property 'minSaleQty'
     */
    @Test
    public void minSaleQtyTest() {
        // TODO: test minSaleQty
    }

    /**
     * Test the property 'notifyStockQty'
     */
    @Test
    public void notifyStockQtyTest() {
        // TODO: test notifyStockQty
    }

    /**
     * Test the property 'productId'
     */
    @Test
    public void productIdTest() {
        // TODO: test productId
    }

    /**
     * Test the property 'qty'
     */
    @Test
    public void qtyTest() {
        // TODO: test qty
    }

    /**
     * Test the property 'qtyIncrements'
     */
    @Test
    public void qtyIncrementsTest() {
        // TODO: test qtyIncrements
    }

    /**
     * Test the property 'showDefaultNotificationMessage'
     */
    @Test
    public void showDefaultNotificationMessageTest() {
        // TODO: test showDefaultNotificationMessage
    }

    /**
     * Test the property 'stockId'
     */
    @Test
    public void stockIdTest() {
        // TODO: test stockId
    }

    /**
     * Test the property 'stockStatusChangedAuto'
     */
    @Test
    public void stockStatusChangedAutoTest() {
        // TODO: test stockStatusChangedAuto
    }

    /**
     * Test the property 'useConfigBackorders'
     */
    @Test
    public void useConfigBackordersTest() {
        // TODO: test useConfigBackorders
    }

    /**
     * Test the property 'useConfigEnableQtyInc'
     */
    @Test
    public void useConfigEnableQtyIncTest() {
        // TODO: test useConfigEnableQtyInc
    }

    /**
     * Test the property 'useConfigManageStock'
     */
    @Test
    public void useConfigManageStockTest() {
        // TODO: test useConfigManageStock
    }

    /**
     * Test the property 'useConfigMaxSaleQty'
     */
    @Test
    public void useConfigMaxSaleQtyTest() {
        // TODO: test useConfigMaxSaleQty
    }

    /**
     * Test the property 'useConfigMinQty'
     */
    @Test
    public void useConfigMinQtyTest() {
        // TODO: test useConfigMinQty
    }

    /**
     * Test the property 'useConfigMinSaleQty'
     */
    @Test
    public void useConfigMinSaleQtyTest() {
        // TODO: test useConfigMinSaleQty
    }

    /**
     * Test the property 'useConfigNotifyStockQty'
     */
    @Test
    public void useConfigNotifyStockQtyTest() {
        // TODO: test useConfigNotifyStockQty
    }

    /**
     * Test the property 'useConfigQtyIncrements'
     */
    @Test
    public void useConfigQtyIncrementsTest() {
        // TODO: test useConfigQtyIncrements
    }

}
