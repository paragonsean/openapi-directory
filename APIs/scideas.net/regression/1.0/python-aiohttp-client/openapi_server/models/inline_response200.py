# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.error import Error
from openapi_server.models.result import Result
from openapi_server.models.result_calls import ResultCalls
from openapi_server.models.result_standardized_coefficients import ResultStandardizedCoefficients
from openapi_server import util


class InlineResponse200(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, calls: ResultCalls=None, data_count: int=None, dates_converted_to: str=None, footer: str=None, header: str=None, number_observations: int=None, number_tests: int=None, outcome_variable: str=None, paid: str=None, pdf: str=None, prediction_mean_accuracy: int=None, standardized_coefficients: List[ResultStandardizedCoefficients]=None, summary: List[object]=None, tested_variables: List[str]=None, error: str=None):
        """InlineResponse200 - a model defined in OpenAPI

        :param calls: The calls of this InlineResponse200.
        :param data_count: The data_count of this InlineResponse200.
        :param dates_converted_to: The dates_converted_to of this InlineResponse200.
        :param footer: The footer of this InlineResponse200.
        :param header: The header of this InlineResponse200.
        :param number_observations: The number_observations of this InlineResponse200.
        :param number_tests: The number_tests of this InlineResponse200.
        :param outcome_variable: The outcome_variable of this InlineResponse200.
        :param paid: The paid of this InlineResponse200.
        :param pdf: The pdf of this InlineResponse200.
        :param prediction_mean_accuracy: The prediction_mean_accuracy of this InlineResponse200.
        :param standardized_coefficients: The standardized_coefficients of this InlineResponse200.
        :param summary: The summary of this InlineResponse200.
        :param tested_variables: The tested_variables of this InlineResponse200.
        :param error: The error of this InlineResponse200.
        """
        self.openapi_types = {
            'calls': ResultCalls,
            'data_count': int,
            'dates_converted_to': str,
            'footer': str,
            'header': str,
            'number_observations': int,
            'number_tests': int,
            'outcome_variable': str,
            'paid': str,
            'pdf': str,
            'prediction_mean_accuracy': int,
            'standardized_coefficients': List[ResultStandardizedCoefficients],
            'summary': List[object],
            'tested_variables': List[str],
            'error': str
        }

        self.attribute_map = {
            'calls': 'calls&quot;',
            'data_count': 'data_count',
            'dates_converted_to': 'dates_converted_to',
            'footer': 'footer',
            'header': 'header',
            'number_observations': 'number_observations',
            'number_tests': 'number_tests',
            'outcome_variable': 'outcome_variable',
            'paid': 'paid',
            'pdf': 'pdf',
            'prediction_mean_accuracy': 'prediction_mean_accuracy',
            'standardized_coefficients': 'standardized_coefficients',
            'summary': 'summary',
            'tested_variables': 'tested_variables',
            'error': 'error'
        }

        self._calls = calls
        self._data_count = data_count
        self._dates_converted_to = dates_converted_to
        self._footer = footer
        self._header = header
        self._number_observations = number_observations
        self._number_tests = number_tests
        self._outcome_variable = outcome_variable
        self._paid = paid
        self._pdf = pdf
        self._prediction_mean_accuracy = prediction_mean_accuracy
        self._standardized_coefficients = standardized_coefficients
        self._summary = summary
        self._tested_variables = tested_variables
        self._error = error

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InlineResponse200':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The inline_response_200 of this InlineResponse200.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def calls(self):
        """Gets the calls of this InlineResponse200.


        :return: The calls of this InlineResponse200.
        :rtype: ResultCalls
        """
        return self._calls

    @calls.setter
    def calls(self, calls):
        """Sets the calls of this InlineResponse200.


        :param calls: The calls of this InlineResponse200.
        :type calls: ResultCalls
        """

        self._calls = calls

    @property
    def data_count(self):
        """Gets the data_count of this InlineResponse200.

        number of data rows processed

        :return: The data_count of this InlineResponse200.
        :rtype: int
        """
        return self._data_count

    @data_count.setter
    def data_count(self, data_count):
        """Sets the data_count of this InlineResponse200.

        number of data rows processed

        :param data_count: The data_count of this InlineResponse200.
        :type data_count: int
        """

        self._data_count = data_count

    @property
    def dates_converted_to(self):
        """Gets the dates_converted_to of this InlineResponse200.

        either month or week

        :return: The dates_converted_to of this InlineResponse200.
        :rtype: str
        """
        return self._dates_converted_to

    @dates_converted_to.setter
    def dates_converted_to(self, dates_converted_to):
        """Sets the dates_converted_to of this InlineResponse200.

        either month or week

        :param dates_converted_to: The dates_converted_to of this InlineResponse200.
        :type dates_converted_to: str
        """

        self._dates_converted_to = dates_converted_to

    @property
    def footer(self):
        """Gets the footer of this InlineResponse200.

        text for pdf footer

        :return: The footer of this InlineResponse200.
        :rtype: str
        """
        return self._footer

    @footer.setter
    def footer(self, footer):
        """Sets the footer of this InlineResponse200.

        text for pdf footer

        :param footer: The footer of this InlineResponse200.
        :type footer: str
        """

        self._footer = footer

    @property
    def header(self):
        """Gets the header of this InlineResponse200.

        text for pdf header

        :return: The header of this InlineResponse200.
        :rtype: str
        """
        return self._header

    @header.setter
    def header(self, header):
        """Sets the header of this InlineResponse200.

        text for pdf header

        :param header: The header of this InlineResponse200.
        :type header: str
        """

        self._header = header

    @property
    def number_observations(self):
        """Gets the number_observations of this InlineResponse200.

        number of data rows used for analysis

        :return: The number_observations of this InlineResponse200.
        :rtype: int
        """
        return self._number_observations

    @number_observations.setter
    def number_observations(self, number_observations):
        """Sets the number_observations of this InlineResponse200.

        number of data rows used for analysis

        :param number_observations: The number_observations of this InlineResponse200.
        :type number_observations: int
        """

        self._number_observations = number_observations

    @property
    def number_tests(self):
        """Gets the number_tests of this InlineResponse200.

        number of data rows used to test model accuracy

        :return: The number_tests of this InlineResponse200.
        :rtype: int
        """
        return self._number_tests

    @number_tests.setter
    def number_tests(self, number_tests):
        """Sets the number_tests of this InlineResponse200.

        number of data rows used to test model accuracy

        :param number_tests: The number_tests of this InlineResponse200.
        :type number_tests: int
        """

        self._number_tests = number_tests

    @property
    def outcome_variable(self):
        """Gets the outcome_variable of this InlineResponse200.

        the name of the variable processed as the outcome

        :return: The outcome_variable of this InlineResponse200.
        :rtype: str
        """
        return self._outcome_variable

    @outcome_variable.setter
    def outcome_variable(self, outcome_variable):
        """Sets the outcome_variable of this InlineResponse200.

        the name of the variable processed as the outcome

        :param outcome_variable: The outcome_variable of this InlineResponse200.
        :type outcome_variable: str
        """

        self._outcome_variable = outcome_variable

    @property
    def paid(self):
        """Gets the paid of this InlineResponse200.

        yes if paid subscriber, otherwise no

        :return: The paid of this InlineResponse200.
        :rtype: str
        """
        return self._paid

    @paid.setter
    def paid(self, paid):
        """Sets the paid of this InlineResponse200.

        yes if paid subscriber, otherwise no

        :param paid: The paid of this InlineResponse200.
        :type paid: str
        """

        self._paid = paid

    @property
    def pdf(self):
        """Gets the pdf of this InlineResponse200.

        url of pdf summary

        :return: The pdf of this InlineResponse200.
        :rtype: str
        """
        return self._pdf

    @pdf.setter
    def pdf(self, pdf):
        """Sets the pdf of this InlineResponse200.

        url of pdf summary

        :param pdf: The pdf of this InlineResponse200.
        :type pdf: str
        """

        self._pdf = pdf

    @property
    def prediction_mean_accuracy(self):
        """Gets the prediction_mean_accuracy of this InlineResponse200.

        percentage accuracy of model created

        :return: The prediction_mean_accuracy of this InlineResponse200.
        :rtype: int
        """
        return self._prediction_mean_accuracy

    @prediction_mean_accuracy.setter
    def prediction_mean_accuracy(self, prediction_mean_accuracy):
        """Sets the prediction_mean_accuracy of this InlineResponse200.

        percentage accuracy of model created

        :param prediction_mean_accuracy: The prediction_mean_accuracy of this InlineResponse200.
        :type prediction_mean_accuracy: int
        """

        self._prediction_mean_accuracy = prediction_mean_accuracy

    @property
    def standardized_coefficients(self):
        """Gets the standardized_coefficients of this InlineResponse200.


        :return: The standardized_coefficients of this InlineResponse200.
        :rtype: List[ResultStandardizedCoefficients]
        """
        return self._standardized_coefficients

    @standardized_coefficients.setter
    def standardized_coefficients(self, standardized_coefficients):
        """Sets the standardized_coefficients of this InlineResponse200.


        :param standardized_coefficients: The standardized_coefficients of this InlineResponse200.
        :type standardized_coefficients: List[ResultStandardizedCoefficients]
        """

        self._standardized_coefficients = standardized_coefficients

    @property
    def summary(self):
        """Gets the summary of this InlineResponse200.


        :return: The summary of this InlineResponse200.
        :rtype: List[object]
        """
        return self._summary

    @summary.setter
    def summary(self, summary):
        """Sets the summary of this InlineResponse200.


        :param summary: The summary of this InlineResponse200.
        :type summary: List[object]
        """

        self._summary = summary

    @property
    def tested_variables(self):
        """Gets the tested_variables of this InlineResponse200.


        :return: The tested_variables of this InlineResponse200.
        :rtype: List[str]
        """
        return self._tested_variables

    @tested_variables.setter
    def tested_variables(self, tested_variables):
        """Sets the tested_variables of this InlineResponse200.


        :param tested_variables: The tested_variables of this InlineResponse200.
        :type tested_variables: List[str]
        """

        self._tested_variables = tested_variables

    @property
    def error(self):
        """Gets the error of this InlineResponse200.

        an error description

        :return: The error of this InlineResponse200.
        :rtype: str
        """
        return self._error

    @error.setter
    def error(self, error):
        """Sets the error of this InlineResponse200.

        an error description

        :param error: The error of this InlineResponse200.
        :type error: str
        """

        self._error = error
