/**
 * Regression analysis api
 * This data processing api uses regression analysis to allow you to find out which contributing variables have the most effect on an outcome. For example does buyer location or price most effect sales ?
 *
 * The version of the OpenAPI document: 1.0
 * Contact: software@scideas.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIResult.h
 *
 * 
 */

#ifndef OAIResult_H
#define OAIResult_H

#include <QJsonObject>

#include "OAIObject.h"
#include "OAIResult_calls.h"
#include "OAIResult_standardized_coefficients.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIResult_calls;
class OAIResult_standardized_coefficients;

class OAIResult : public OAIObject {
public:
    OAIResult();
    OAIResult(QString json);
    ~OAIResult() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIResult_calls getCalls() const;
    void setCalls(const OAIResult_calls &calls);
    bool is_calls_Set() const;
    bool is_calls_Valid() const;

    qint32 getDataCount() const;
    void setDataCount(const qint32 &data_count);
    bool is_data_count_Set() const;
    bool is_data_count_Valid() const;

    QString getDatesConvertedTo() const;
    void setDatesConvertedTo(const QString &dates_converted_to);
    bool is_dates_converted_to_Set() const;
    bool is_dates_converted_to_Valid() const;

    QString getFooter() const;
    void setFooter(const QString &footer);
    bool is_footer_Set() const;
    bool is_footer_Valid() const;

    QString getHeader() const;
    void setHeader(const QString &header);
    bool is_header_Set() const;
    bool is_header_Valid() const;

    qint32 getNumberObservations() const;
    void setNumberObservations(const qint32 &number_observations);
    bool is_number_observations_Set() const;
    bool is_number_observations_Valid() const;

    qint32 getNumberTests() const;
    void setNumberTests(const qint32 &number_tests);
    bool is_number_tests_Set() const;
    bool is_number_tests_Valid() const;

    QString getOutcomeVariable() const;
    void setOutcomeVariable(const QString &outcome_variable);
    bool is_outcome_variable_Set() const;
    bool is_outcome_variable_Valid() const;

    QString getPaid() const;
    void setPaid(const QString &paid);
    bool is_paid_Set() const;
    bool is_paid_Valid() const;

    QString getPdf() const;
    void setPdf(const QString &pdf);
    bool is_pdf_Set() const;
    bool is_pdf_Valid() const;

    qint32 getPredictionMeanAccuracy() const;
    void setPredictionMeanAccuracy(const qint32 &prediction_mean_accuracy);
    bool is_prediction_mean_accuracy_Set() const;
    bool is_prediction_mean_accuracy_Valid() const;

    QList<OAIResult_standardized_coefficients> getStandardizedCoefficients() const;
    void setStandardizedCoefficients(const QList<OAIResult_standardized_coefficients> &standardized_coefficients);
    bool is_standardized_coefficients_Set() const;
    bool is_standardized_coefficients_Valid() const;

    QList<OAIObject> getSummary() const;
    void setSummary(const QList<OAIObject> &summary);
    bool is_summary_Set() const;
    bool is_summary_Valid() const;

    QList<QString> getTestedVariables() const;
    void setTestedVariables(const QList<QString> &tested_variables);
    bool is_tested_variables_Set() const;
    bool is_tested_variables_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIResult_calls m_calls;
    bool m_calls_isSet;
    bool m_calls_isValid;

    qint32 m_data_count;
    bool m_data_count_isSet;
    bool m_data_count_isValid;

    QString m_dates_converted_to;
    bool m_dates_converted_to_isSet;
    bool m_dates_converted_to_isValid;

    QString m_footer;
    bool m_footer_isSet;
    bool m_footer_isValid;

    QString m_header;
    bool m_header_isSet;
    bool m_header_isValid;

    qint32 m_number_observations;
    bool m_number_observations_isSet;
    bool m_number_observations_isValid;

    qint32 m_number_tests;
    bool m_number_tests_isSet;
    bool m_number_tests_isValid;

    QString m_outcome_variable;
    bool m_outcome_variable_isSet;
    bool m_outcome_variable_isValid;

    QString m_paid;
    bool m_paid_isSet;
    bool m_paid_isValid;

    QString m_pdf;
    bool m_pdf_isSet;
    bool m_pdf_isValid;

    qint32 m_prediction_mean_accuracy;
    bool m_prediction_mean_accuracy_isSet;
    bool m_prediction_mean_accuracy_isValid;

    QList<OAIResult_standardized_coefficients> m_standardized_coefficients;
    bool m_standardized_coefficients_isSet;
    bool m_standardized_coefficients_isValid;

    QList<OAIObject> m_summary;
    bool m_summary_isSet;
    bool m_summary_isValid;

    QList<QString> m_tested_variables;
    bool m_tested_variables_isSet;
    bool m_tested_variables_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIResult)

#endif // OAIResult_H
