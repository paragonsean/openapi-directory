/**
 * Regression analysis api
 * This data processing api uses regression analysis to allow you to find out which contributing variables have the most effect on an outcome. For example does buyer location or price most effect sales ?
 *
 * The version of the OpenAPI document: 1.0
 * Contact: software@scideas.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.RegressionAnalysisApi);
  }
}(this, function(expect, RegressionAnalysisApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new RegressionAnalysisApi.InlineResponse200();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('InlineResponse200', function() {
    it('should create an instance of InlineResponse200', function() {
      // uncomment below and update the code to test InlineResponse200
      //var instance = new RegressionAnalysisApi.InlineResponse200();
      //expect(instance).to.be.a(RegressionAnalysisApi.InlineResponse200);
    });

    it('should have the property calls (base name: "calls&quot;")', function() {
      // uncomment below and update the code to test the property calls
      //var instance = new RegressionAnalysisApi.InlineResponse200();
      //expect(instance).to.be();
    });

    it('should have the property dataCount (base name: "data_count")', function() {
      // uncomment below and update the code to test the property dataCount
      //var instance = new RegressionAnalysisApi.InlineResponse200();
      //expect(instance).to.be();
    });

    it('should have the property datesConvertedTo (base name: "dates_converted_to")', function() {
      // uncomment below and update the code to test the property datesConvertedTo
      //var instance = new RegressionAnalysisApi.InlineResponse200();
      //expect(instance).to.be();
    });

    it('should have the property footer (base name: "footer")', function() {
      // uncomment below and update the code to test the property footer
      //var instance = new RegressionAnalysisApi.InlineResponse200();
      //expect(instance).to.be();
    });

    it('should have the property header (base name: "header")', function() {
      // uncomment below and update the code to test the property header
      //var instance = new RegressionAnalysisApi.InlineResponse200();
      //expect(instance).to.be();
    });

    it('should have the property numberObservations (base name: "number_observations")', function() {
      // uncomment below and update the code to test the property numberObservations
      //var instance = new RegressionAnalysisApi.InlineResponse200();
      //expect(instance).to.be();
    });

    it('should have the property numberTests (base name: "number_tests")', function() {
      // uncomment below and update the code to test the property numberTests
      //var instance = new RegressionAnalysisApi.InlineResponse200();
      //expect(instance).to.be();
    });

    it('should have the property outcomeVariable (base name: "outcome_variable")', function() {
      // uncomment below and update the code to test the property outcomeVariable
      //var instance = new RegressionAnalysisApi.InlineResponse200();
      //expect(instance).to.be();
    });

    it('should have the property paid (base name: "paid")', function() {
      // uncomment below and update the code to test the property paid
      //var instance = new RegressionAnalysisApi.InlineResponse200();
      //expect(instance).to.be();
    });

    it('should have the property pdf (base name: "pdf")', function() {
      // uncomment below and update the code to test the property pdf
      //var instance = new RegressionAnalysisApi.InlineResponse200();
      //expect(instance).to.be();
    });

    it('should have the property predictionMeanAccuracy (base name: "prediction_mean_accuracy")', function() {
      // uncomment below and update the code to test the property predictionMeanAccuracy
      //var instance = new RegressionAnalysisApi.InlineResponse200();
      //expect(instance).to.be();
    });

    it('should have the property standardizedCoefficients (base name: "standardized_coefficients")', function() {
      // uncomment below and update the code to test the property standardizedCoefficients
      //var instance = new RegressionAnalysisApi.InlineResponse200();
      //expect(instance).to.be();
    });

    it('should have the property summary (base name: "summary")', function() {
      // uncomment below and update the code to test the property summary
      //var instance = new RegressionAnalysisApi.InlineResponse200();
      //expect(instance).to.be();
    });

    it('should have the property testedVariables (base name: "tested_variables")', function() {
      // uncomment below and update the code to test the property testedVariables
      //var instance = new RegressionAnalysisApi.InlineResponse200();
      //expect(instance).to.be();
    });

    it('should have the property error (base name: "error")', function() {
      // uncomment below and update the code to test the property error
      //var instance = new RegressionAnalysisApi.InlineResponse200();
      //expect(instance).to.be();
    });

  });

}));
