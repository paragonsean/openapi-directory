/**
 * Regression analysis api
 * This data processing api uses regression analysis to allow you to find out which contributing variables have the most effect on an outcome. For example does buyer location or price most effect sales ?
 *
 * The version of the OpenAPI document: 1.0
 * Contact: software@scideas.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import Error from './model/Error';
import InlineResponse200 from './model/InlineResponse200';
import RegressionApiBody from './model/RegressionApiBody';
import Result from './model/Result';
import ResultCalls from './model/ResultCalls';
import ResultStandardizedCoefficients from './model/ResultStandardizedCoefficients';
import DefaultApi from './api/DefaultApi';


/**
* This data processing api uses regression analysis to allow you to find out which contributing variables have the most effect on an outcome. For example does buyer location or price most effect sales ?.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var RegressionAnalysisApi = require('index'); // See note below*.
* var xxxSvc = new RegressionAnalysisApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new RegressionAnalysisApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new RegressionAnalysisApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new RegressionAnalysisApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The Error model constructor.
     * @property {module:model/Error}
     */
    Error,

    /**
     * The InlineResponse200 model constructor.
     * @property {module:model/InlineResponse200}
     */
    InlineResponse200,

    /**
     * The RegressionApiBody model constructor.
     * @property {module:model/RegressionApiBody}
     */
    RegressionApiBody,

    /**
     * The Result model constructor.
     * @property {module:model/Result}
     */
    Result,

    /**
     * The ResultCalls model constructor.
     * @property {module:model/ResultCalls}
     */
    ResultCalls,

    /**
     * The ResultStandardizedCoefficients model constructor.
     * @property {module:model/ResultStandardizedCoefficients}
     */
    ResultStandardizedCoefficients,

    /**
    * The DefaultApi service constructor.
    * @property {module:api/DefaultApi}
    */
    DefaultApi
};
