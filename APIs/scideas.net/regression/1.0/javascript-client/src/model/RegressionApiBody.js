/**
 * Regression analysis api
 * This data processing api uses regression analysis to allow you to find out which contributing variables have the most effect on an outcome. For example does buyer location or price most effect sales ?
 *
 * The version of the OpenAPI document: 1.0
 * Contact: software@scideas.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The RegressionApiBody model module.
 * @module model/RegressionApiBody
 * @version 1.0
 */
class RegressionApiBody {
    /**
     * Constructs a new <code>RegressionApiBody</code>.
     * @alias module:model/RegressionApiBody
     * @param data {Array.<Object>} 
     * @param key {String} api key
     * @param outcomeVariable {String} name of the desired outcome variable
     */
    constructor(data, key, outcomeVariable) { 
        
        RegressionApiBody.initialize(this, data, key, outcomeVariable);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, data, key, outcomeVariable) { 
        obj['data'] = data;
        obj['key'] = key;
        obj['outcome_variable'] = outcomeVariable;
    }

    /**
     * Constructs a <code>RegressionApiBody</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RegressionApiBody} obj Optional instance to populate.
     * @return {module:model/RegressionApiBody} The populated <code>RegressionApiBody</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RegressionApiBody();

            if (data.hasOwnProperty('convert_date_to')) {
                obj['convert_date_to'] = ApiClient.convertToType(data['convert_date_to'], 'String');
            }
            if (data.hasOwnProperty('data')) {
                obj['data'] = ApiClient.convertToType(data['data'], [Object]);
            }
            if (data.hasOwnProperty('ignore_variables')) {
                obj['ignore_variables'] = ApiClient.convertToType(data['ignore_variables'], [Object]);
            }
            if (data.hasOwnProperty('key')) {
                obj['key'] = ApiClient.convertToType(data['key'], 'String');
            }
            if (data.hasOwnProperty('outcome_variable')) {
                obj['outcome_variable'] = ApiClient.convertToType(data['outcome_variable'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RegressionApiBody</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RegressionApiBody</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of RegressionApiBody.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['convert_date_to'] && !(typeof data['convert_date_to'] === 'string' || data['convert_date_to'] instanceof String)) {
            throw new Error("Expected the field `convert_date_to` to be a primitive type in the JSON string but got " + data['convert_date_to']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['data'])) {
            throw new Error("Expected the field `data` to be an array in the JSON data but got " + data['data']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['ignore_variables'])) {
            throw new Error("Expected the field `ignore_variables` to be an array in the JSON data but got " + data['ignore_variables']);
        }
        // ensure the json data is a string
        if (data['key'] && !(typeof data['key'] === 'string' || data['key'] instanceof String)) {
            throw new Error("Expected the field `key` to be a primitive type in the JSON string but got " + data['key']);
        }
        // ensure the json data is a string
        if (data['outcome_variable'] && !(typeof data['outcome_variable'] === 'string' || data['outcome_variable'] instanceof String)) {
            throw new Error("Expected the field `outcome_variable` to be a primitive type in the JSON string but got " + data['outcome_variable']);
        }

        return true;
    }


}

RegressionApiBody.RequiredProperties = ["data", "key", "outcome_variable"];

/**
 * convert dates to either month (1-12) or week (1-52)
 * @member {String} convert_date_to
 */
RegressionApiBody.prototype['convert_date_to'] = undefined;

/**
 * @member {Array.<Object>} data
 */
RegressionApiBody.prototype['data'] = undefined;

/**
 * @member {Array.<Object>} ignore_variables
 */
RegressionApiBody.prototype['ignore_variables'] = undefined;

/**
 * api key
 * @member {String} key
 */
RegressionApiBody.prototype['key'] = undefined;

/**
 * name of the desired outcome variable
 * @member {String} outcome_variable
 */
RegressionApiBody.prototype['outcome_variable'] = undefined;






export default RegressionApiBody;

