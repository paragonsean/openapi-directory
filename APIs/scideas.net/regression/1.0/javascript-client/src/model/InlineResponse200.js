/**
 * Regression analysis api
 * This data processing api uses regression analysis to allow you to find out which contributing variables have the most effect on an outcome. For example does buyer location or price most effect sales ?
 *
 * The version of the OpenAPI document: 1.0
 * Contact: software@scideas.net
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Error from './Error';
import Result from './Result';
import ResultCalls from './ResultCalls';
import ResultStandardizedCoefficients from './ResultStandardizedCoefficients';

/**
 * The InlineResponse200 model module.
 * @module model/InlineResponse200
 * @version 1.0
 */
class InlineResponse200 {
    /**
     * Constructs a new <code>InlineResponse200</code>.
     * @alias module:model/InlineResponse200
     * @param {(module:model/Error|module:model/Result)} instance The actual instance to initialize InlineResponse200.
     */
    constructor(instance = null) {
        if (instance === null) {
            this.actualInstance = null;
            return;
        }
        var match = 0;
        var errorMessages = [];
        try {
            if (typeof instance === "Result") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                Result.validateJSON(instance); // throw an exception if no match
                // create Result from JS object
                this.actualInstance = Result.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into Result
            errorMessages.push("Failed to construct Result: " + err)
        }

        try {
            if (typeof instance === "Error") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                Error.validateJSON(instance); // throw an exception if no match
                // create Error from JS object
                this.actualInstance = Error.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into Error
            errorMessages.push("Failed to construct Error: " + err)
        }

        if (match > 1) {
            throw new Error("Multiple matches found constructing `InlineResponse200` with oneOf schemas Error, Result. Input: " + JSON.stringify(instance));
        } else if (match === 0) {
            this.actualInstance = null; // clear the actual instance in case there are multiple matches
            throw new Error("No match found constructing `InlineResponse200` with oneOf schemas Error, Result. Details: " +
                            errorMessages.join(", "));
        } else { // only 1 match
            // the input is valid
        }
    }

    /**
     * Constructs a <code>InlineResponse200</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InlineResponse200} obj Optional instance to populate.
     * @return {module:model/InlineResponse200} The populated <code>InlineResponse200</code> instance.
     */
    static constructFromObject(data, obj) {
        return new InlineResponse200(data);
    }

    /**
     * Gets the actual instance, which can be <code>Error</code>, <code>Result</code>.
     * @return {(module:model/Error|module:model/Result)} The actual instance.
     */
    getActualInstance() {
        return this.actualInstance;
    }

    /**
     * Sets the actual instance, which can be <code>Error</code>, <code>Result</code>.
     * @param {(module:model/Error|module:model/Result)} obj The actual instance.
     */
    setActualInstance(obj) {
       this.actualInstance = InlineResponse200.constructFromObject(obj).getActualInstance();
    }

    /**
     * Returns the JSON representation of the actual instance.
     * @return {string}
     */
    toJSON = function(){
        return this.getActualInstance();
    }

    /**
     * Create an instance of InlineResponse200 from a JSON string.
     * @param {string} json_string JSON string.
     * @return {module:model/InlineResponse200} An instance of InlineResponse200.
     */
    static fromJSON = function(json_string){
        return InlineResponse200.constructFromObject(JSON.parse(json_string));
    }
}

/**
 * @member {module:model/ResultCalls} calls&quot;
 */
InlineResponse200.prototype['calls&quot;'] = undefined;

/**
 * number of data rows processed
 * @member {Number} data_count
 */
InlineResponse200.prototype['data_count'] = undefined;

/**
 * either month or week
 * @member {String} dates_converted_to
 */
InlineResponse200.prototype['dates_converted_to'] = undefined;

/**
 * text for pdf footer
 * @member {String} footer
 */
InlineResponse200.prototype['footer'] = undefined;

/**
 * text for pdf header
 * @member {String} header
 */
InlineResponse200.prototype['header'] = undefined;

/**
 * number of data rows used for analysis
 * @member {Number} number_observations
 */
InlineResponse200.prototype['number_observations'] = undefined;

/**
 * number of data rows used to test model accuracy
 * @member {Number} number_tests
 */
InlineResponse200.prototype['number_tests'] = undefined;

/**
 * the name of the variable processed as the outcome
 * @member {String} outcome_variable
 */
InlineResponse200.prototype['outcome_variable'] = undefined;

/**
 * yes if paid subscriber, otherwise no
 * @member {String} paid
 */
InlineResponse200.prototype['paid'] = undefined;

/**
 * url of pdf summary
 * @member {String} pdf
 */
InlineResponse200.prototype['pdf'] = undefined;

/**
 * percentage accuracy of model created
 * @member {Number} prediction_mean_accuracy
 */
InlineResponse200.prototype['prediction_mean_accuracy'] = undefined;

/**
 * @member {Array.<module:model/ResultStandardizedCoefficients>} standardized_coefficients
 */
InlineResponse200.prototype['standardized_coefficients'] = undefined;

/**
 * @member {Array.<Object>} summary
 */
InlineResponse200.prototype['summary'] = undefined;

/**
 * @member {Array.<String>} tested_variables
 */
InlineResponse200.prototype['tested_variables'] = undefined;

/**
 * an error description
 * @member {String} error
 */
InlineResponse200.prototype['error'] = undefined;


InlineResponse200.OneOf = ["Error", "Result"];

export default InlineResponse200;

