# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetProductInformation200ResponseIngredientsInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description: object=None, name: str=None, safety_level: object=None):
        """GetProductInformation200ResponseIngredientsInner - a model defined in OpenAPI

        :param description: The description of this GetProductInformation200ResponseIngredientsInner.
        :param name: The name of this GetProductInformation200ResponseIngredientsInner.
        :param safety_level: The safety_level of this GetProductInformation200ResponseIngredientsInner.
        """
        self.openapi_types = {
            'description': object,
            'name': str,
            'safety_level': object
        }

        self.attribute_map = {
            'description': 'description',
            'name': 'name',
            'safety_level': 'safety_level'
        }

        self._description = description
        self._name = name
        self._safety_level = safety_level

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetProductInformation200ResponseIngredientsInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The getProductInformation_200_response_ingredients_inner of this GetProductInformation200ResponseIngredientsInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self):
        """Gets the description of this GetProductInformation200ResponseIngredientsInner.


        :return: The description of this GetProductInformation200ResponseIngredientsInner.
        :rtype: object
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this GetProductInformation200ResponseIngredientsInner.


        :param description: The description of this GetProductInformation200ResponseIngredientsInner.
        :type description: object
        """

        self._description = description

    @property
    def name(self):
        """Gets the name of this GetProductInformation200ResponseIngredientsInner.


        :return: The name of this GetProductInformation200ResponseIngredientsInner.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GetProductInformation200ResponseIngredientsInner.


        :param name: The name of this GetProductInformation200ResponseIngredientsInner.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")
        if name is not None and len(name) < 1:
            raise ValueError("Invalid value for `name`, length must be greater than or equal to `1`")

        self._name = name

    @property
    def safety_level(self):
        """Gets the safety_level of this GetProductInformation200ResponseIngredientsInner.


        :return: The safety_level of this GetProductInformation200ResponseIngredientsInner.
        :rtype: object
        """
        return self._safety_level

    @safety_level.setter
    def safety_level(self, safety_level):
        """Sets the safety_level of this GetProductInformation200ResponseIngredientsInner.


        :param safety_level: The safety_level of this GetProductInformation200ResponseIngredientsInner.
        :type safety_level: object
        """

        self._safety_level = safety_level
