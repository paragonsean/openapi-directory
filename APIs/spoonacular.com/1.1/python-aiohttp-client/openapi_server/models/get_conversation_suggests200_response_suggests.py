# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_conversation_suggests200_response_suggests_inner import GetConversationSuggests200ResponseSuggestsInner
from openapi_server import util


class GetConversationSuggests200ResponseSuggests(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, : list[GetConversationSuggests200ResponseSuggestsInner]=None):
        """GetConversationSuggests200ResponseSuggests - a model defined in OpenAPI

        :param : The  of this GetConversationSuggests200ResponseSuggests.
        """
        self.openapi_types = {
            '': list[GetConversationSuggests200ResponseSuggestsInner]
        }

        self.attribute_map = {
            '': '_'
        }

        self._ = 

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetConversationSuggests200ResponseSuggests':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The getConversationSuggests_200_response_suggests of this GetConversationSuggests200ResponseSuggests.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def (self):
        """Gets the  of this GetConversationSuggests200ResponseSuggests.


        :return: The  of this GetConversationSuggests200ResponseSuggests.
        :rtype: list[GetConversationSuggests200ResponseSuggestsInner]
        """
        return self._

    @.setter
    def (self, ):
        """Sets the  of this GetConversationSuggests200ResponseSuggests.


        :param : The  of this GetConversationSuggests200ResponseSuggests.
        :type : list[GetConversationSuggests200ResponseSuggestsInner]
        """
        if  is None:
            raise ValueError("Invalid value for ``, must not be `None`")
        if  is not None and len() < 0:
            raise ValueError("Invalid value for ``, number of items must be greater than or equal to `0`")

        self._ = 
