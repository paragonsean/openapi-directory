# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_random_recipes200_response_recipes_inner import GetRandomRecipes200ResponseRecipesInner
from openapi_server import util


class GetRandomRecipes200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, recipes: list[GetRandomRecipes200ResponseRecipesInner]=None):
        """GetRandomRecipes200Response - a model defined in OpenAPI

        :param recipes: The recipes of this GetRandomRecipes200Response.
        """
        self.openapi_types = {
            'recipes': list[GetRandomRecipes200ResponseRecipesInner]
        }

        self.attribute_map = {
            'recipes': 'recipes'
        }

        self._recipes = recipes

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetRandomRecipes200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The getRandomRecipes_200_response of this GetRandomRecipes200Response.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def recipes(self):
        """Gets the recipes of this GetRandomRecipes200Response.


        :return: The recipes of this GetRandomRecipes200Response.
        :rtype: list[GetRandomRecipes200ResponseRecipesInner]
        """
        return self._recipes

    @recipes.setter
    def recipes(self, recipes):
        """Sets the recipes of this GetRandomRecipes200Response.


        :param recipes: The recipes of this GetRandomRecipes200Response.
        :type recipes: list[GetRandomRecipes200ResponseRecipesInner]
        """
        if recipes is None:
            raise ValueError("Invalid value for `recipes`, must not be `None`")
        if recipes is not None and len(recipes) < 0:
            raise ValueError("Invalid value for `recipes`, number of items must be greater than or equal to `0`")

        self._recipes = recipes
