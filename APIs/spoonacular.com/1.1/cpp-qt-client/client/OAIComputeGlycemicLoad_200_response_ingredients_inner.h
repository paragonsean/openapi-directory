/**
 * spoonacular API
 * The spoonacular Nutrition, Recipe, and Food API allows you to access over thousands of recipes, thousands of ingredients, 800,000 food products, over 100,000 menu items, and restaurants. Our food ontology and semantic recipe search engine makes it possible to search for recipes using natural language queries, such as \"gluten free brownies without sugar\" or \"low fat vegan cupcakes.\" You can automatically calculate the nutritional information for any recipe, analyze recipe costs, visualize ingredient lists, find recipes for what's in your fridge, find recipes based on special diets, nutritional requirements, or favorite ingredients, classify recipes into types and cuisines, convert ingredient amounts, or even compute an entire meal plan. With our powerful API, you can create many kinds of food and especially nutrition apps.  Special diets/dietary requirements currently available include: vegan, vegetarian, pescetarian, gluten free, grain free, dairy free, high protein, whole 30, low sodium, low carb, Paleo, ketogenic, FODMAP, and Primal.
 *
 * The version of the OpenAPI document: 1.1
 * Contact: mail@spoonacular.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIComputeGlycemicLoad_200_response_ingredients_inner.h
 *
 * 
 */

#ifndef OAIComputeGlycemicLoad_200_response_ingredients_inner_H
#define OAIComputeGlycemicLoad_200_response_ingredients_inner_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIComputeGlycemicLoad_200_response_ingredients_inner : public OAIObject {
public:
    OAIComputeGlycemicLoad_200_response_ingredients_inner();
    OAIComputeGlycemicLoad_200_response_ingredients_inner(QString json);
    ~OAIComputeGlycemicLoad_200_response_ingredients_inner() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getGlycemicIndex() const;
    void setGlycemicIndex(const double &glycemic_index);
    bool is_glycemic_index_Set() const;
    bool is_glycemic_index_Valid() const;

    double getGlycemicLoad() const;
    void setGlycemicLoad(const double &glycemic_load);
    bool is_glycemic_load_Set() const;
    bool is_glycemic_load_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getOriginal() const;
    void setOriginal(const QString &original);
    bool is_original_Set() const;
    bool is_original_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_glycemic_index;
    bool m_glycemic_index_isSet;
    bool m_glycemic_index_isValid;

    double m_glycemic_load;
    bool m_glycemic_load_isSet;
    bool m_glycemic_load_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_original;
    bool m_original_isSet;
    bool m_original_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIComputeGlycemicLoad_200_response_ingredients_inner)

#endif // OAIComputeGlycemicLoad_200_response_ingredients_inner_H
