/**
 * spoonacular API
 * The spoonacular Nutrition, Recipe, and Food API allows you to access over thousands of recipes, thousands of ingredients, 800,000 food products, over 100,000 menu items, and restaurants. Our food ontology and semantic recipe search engine makes it possible to search for recipes using natural language queries, such as \"gluten free brownies without sugar\" or \"low fat vegan cupcakes.\" You can automatically calculate the nutritional information for any recipe, analyze recipe costs, visualize ingredient lists, find recipes for what's in your fridge, find recipes based on special diets, nutritional requirements, or favorite ingredients, classify recipes into types and cuisines, convert ingredient amounts, or even compute an entire meal plan. With our powerful API, you can create many kinds of food and especially nutrition apps.  Special diets/dietary requirements currently available include: vegan, vegetarian, pescetarian, gluten free, grain free, dairy free, high protein, whole 30, low sodium, low carb, Paleo, ketogenic, FODMAP, and Primal.
 *
 * The version of the OpenAPI document: 1.1
 * Contact: mail@spoonacular.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISearchRestaurants_200_response_restaurants_inner.h
 *
 * 
 */

#ifndef OAISearchRestaurants_200_response_restaurants_inner_H
#define OAISearchRestaurants_200_response_restaurants_inner_H

#include <QJsonObject>

#include "OAIObject.h"
#include "OAISearchRestaurants_200_response_restaurants_inner_address.h"
#include "OAISearchRestaurants_200_response_restaurants_inner_local_hours.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISearchRestaurants_200_response_restaurants_inner_address;
class OAISearchRestaurants_200_response_restaurants_inner_local_hours;

class OAISearchRestaurants_200_response_restaurants_inner : public OAIObject {
public:
    OAISearchRestaurants_200_response_restaurants_inner();
    OAISearchRestaurants_200_response_restaurants_inner(QString json);
    ~OAISearchRestaurants_200_response_restaurants_inner() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getId() const;
    void setId(const QString &_id);
    bool is__id_Set() const;
    bool is__id_Valid() const;

    OAISearchRestaurants_200_response_restaurants_inner_address getAddress() const;
    void setAddress(const OAISearchRestaurants_200_response_restaurants_inner_address &address);
    bool is_address_Set() const;
    bool is_address_Valid() const;

    qint32 getAggregatedRatingCount() const;
    void setAggregatedRatingCount(const qint32 &aggregated_rating_count);
    bool is_aggregated_rating_count_Set() const;
    bool is_aggregated_rating_count_Valid() const;

    QList<QString> getCuisines() const;
    void setCuisines(const QList<QString> &cuisines);
    bool is_cuisines_Set() const;
    bool is_cuisines_Valid() const;

    bool isDeliveryEnabled() const;
    void setDeliveryEnabled(const bool &delivery_enabled);
    bool is_delivery_enabled_Set() const;
    bool is_delivery_enabled_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    qint32 getDollarSigns() const;
    void setDollarSigns(const qint32 &dollar_signs);
    bool is_dollar_signs_Set() const;
    bool is_dollar_signs_Valid() const;

    QList<QString> getFoodPhotos() const;
    void setFoodPhotos(const QList<QString> &food_photos);
    bool is_food_photos_Set() const;
    bool is_food_photos_Valid() const;

    bool isIsOpen() const;
    void setIsOpen(const bool &is_open);
    bool is_is_open_Set() const;
    bool is_is_open_Valid() const;

    OAISearchRestaurants_200_response_restaurants_inner_local_hours getLocalHours() const;
    void setLocalHours(const OAISearchRestaurants_200_response_restaurants_inner_local_hours &local_hours);
    bool is_local_hours_Set() const;
    bool is_local_hours_Valid() const;

    QList<QString> getLogoPhotos() const;
    void setLogoPhotos(const QList<QString> &logo_photos);
    bool is_logo_photos_Set() const;
    bool is_logo_photos_Valid() const;

    double getMiles() const;
    void setMiles(const double &miles);
    bool is_miles_Set() const;
    bool is_miles_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    bool isOffersFirstPartyDelivery() const;
    void setOffersFirstPartyDelivery(const bool &offers_first_party_delivery);
    bool is_offers_first_party_delivery_Set() const;
    bool is_offers_first_party_delivery_Valid() const;

    bool isOffersThirdPartyDelivery() const;
    void setOffersThirdPartyDelivery(const bool &offers_third_party_delivery);
    bool is_offers_third_party_delivery_Set() const;
    bool is_offers_third_party_delivery_Valid() const;

    qint32 getPhoneNumber() const;
    void setPhoneNumber(const qint32 &phone_number);
    bool is_phone_number_Set() const;
    bool is_phone_number_Valid() const;

    bool isPickupEnabled() const;
    void setPickupEnabled(const bool &pickup_enabled);
    bool is_pickup_enabled_Set() const;
    bool is_pickup_enabled_Valid() const;

    QList<OAIObject> getStorePhotos() const;
    void setStorePhotos(const QList<OAIObject> &store_photos);
    bool is_store_photos_Set() const;
    bool is_store_photos_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    double getWeightedRatingValue() const;
    void setWeightedRatingValue(const double &weighted_rating_value);
    bool is_weighted_rating_value_Set() const;
    bool is_weighted_rating_value_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m__id;
    bool m__id_isSet;
    bool m__id_isValid;

    OAISearchRestaurants_200_response_restaurants_inner_address m_address;
    bool m_address_isSet;
    bool m_address_isValid;

    qint32 m_aggregated_rating_count;
    bool m_aggregated_rating_count_isSet;
    bool m_aggregated_rating_count_isValid;

    QList<QString> m_cuisines;
    bool m_cuisines_isSet;
    bool m_cuisines_isValid;

    bool m_delivery_enabled;
    bool m_delivery_enabled_isSet;
    bool m_delivery_enabled_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    qint32 m_dollar_signs;
    bool m_dollar_signs_isSet;
    bool m_dollar_signs_isValid;

    QList<QString> m_food_photos;
    bool m_food_photos_isSet;
    bool m_food_photos_isValid;

    bool m_is_open;
    bool m_is_open_isSet;
    bool m_is_open_isValid;

    OAISearchRestaurants_200_response_restaurants_inner_local_hours m_local_hours;
    bool m_local_hours_isSet;
    bool m_local_hours_isValid;

    QList<QString> m_logo_photos;
    bool m_logo_photos_isSet;
    bool m_logo_photos_isValid;

    double m_miles;
    bool m_miles_isSet;
    bool m_miles_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    bool m_offers_first_party_delivery;
    bool m_offers_first_party_delivery_isSet;
    bool m_offers_first_party_delivery_isValid;

    bool m_offers_third_party_delivery;
    bool m_offers_third_party_delivery_isSet;
    bool m_offers_third_party_delivery_isValid;

    qint32 m_phone_number;
    bool m_phone_number_isSet;
    bool m_phone_number_isValid;

    bool m_pickup_enabled;
    bool m_pickup_enabled_isSet;
    bool m_pickup_enabled_isValid;

    QList<OAIObject> m_store_photos;
    bool m_store_photos_isSet;
    bool m_store_photos_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    double m_weighted_rating_value;
    bool m_weighted_rating_value_isSet;
    bool m_weighted_rating_value_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISearchRestaurants_200_response_restaurants_inner)

#endif // OAISearchRestaurants_200_response_restaurants_inner_H
