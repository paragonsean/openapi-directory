# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class JWT1(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, exp: int=None, _field: str=None, sub: str=None):
        """JWT1 - a model defined in OpenAPI

        :param exp: The exp of this JWT1.
        :param _field: The _field of this JWT1.
        :param sub: The sub of this JWT1.
        """
        self.openapi_types = {
            'exp': int,
            '_field': str,
            'sub': str
        }

        self.attribute_map = {
            'exp': 'exp',
            '_field': 'field',
            'sub': 'sub'
        }

        self._exp = exp
        self.__field = _field
        self._sub = sub

    @classmethod
    def from_dict(cls, dikt: dict) -> 'JWT1':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The JWT_1 of this JWT1.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def exp(self):
        """Gets the exp of this JWT1.


        :return: The exp of this JWT1.
        :rtype: int
        """
        return self._exp

    @exp.setter
    def exp(self, exp):
        """Sets the exp of this JWT1.


        :param exp: The exp of this JWT1.
        :type exp: int
        """

        self._exp = exp

    @property
    def _field(self):
        """Gets the _field of this JWT1.


        :return: The _field of this JWT1.
        :rtype: str
        """
        return self.__field

    @_field.setter
    def _field(self, _field):
        """Sets the _field of this JWT1.


        :param _field: The _field of this JWT1.
        :type _field: str
        """

        self.__field = _field

    @property
    def sub(self):
        """Gets the sub of this JWT1.

        base64safe encoded public signing key

        :return: The sub of this JWT1.
        :rtype: str
        """
        return self._sub

    @sub.setter
    def sub(self, sub):
        """Sets the sub of this JWT1.

        base64safe encoded public signing key

        :param sub: The sub of this JWT1.
        :type sub: str
        """

        self._sub = sub
