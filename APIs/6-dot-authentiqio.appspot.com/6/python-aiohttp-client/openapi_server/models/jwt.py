# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class JWT(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, since: datetime=None, status: str=None, sub: str=None):
        """JWT - a model defined in OpenAPI

        :param since: The since of this JWT.
        :param status: The status of this JWT.
        :param sub: The sub of this JWT.
        """
        self.openapi_types = {
            'since': datetime,
            'status': str,
            'sub': str
        }

        self.attribute_map = {
            'since': 'since',
            'status': 'status',
            'sub': 'sub'
        }

        self._since = since
        self._status = status
        self._sub = sub

    @classmethod
    def from_dict(cls, dikt: dict) -> 'JWT':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The JWT of this JWT.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def since(self):
        """Gets the since of this JWT.


        :return: The since of this JWT.
        :rtype: datetime
        """
        return self._since

    @since.setter
    def since(self, since):
        """Sets the since of this JWT.


        :param since: The since of this JWT.
        :type since: datetime
        """

        self._since = since

    @property
    def status(self):
        """Gets the status of this JWT.


        :return: The status of this JWT.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this JWT.


        :param status: The status of this JWT.
        :type status: str
        """

        self._status = status

    @property
    def sub(self):
        """Gets the sub of this JWT.

        base64safe encoded public signing key

        :return: The sub of this JWT.
        :rtype: str
        """
        return self._sub

    @sub.setter
    def sub(self, sub):
        """Sets the sub of this JWT.

        base64safe encoded public signing key

        :param sub: The sub of this JWT.
        :type sub: str
        """

        self._sub = sub
