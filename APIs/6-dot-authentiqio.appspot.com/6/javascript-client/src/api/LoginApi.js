/**
 * Authentiq API
 * Strong authentication, without the passwords.
 *
 * The version of the OpenAPI document: 6
 * Contact: hello@authentiq.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Error from '../model/Error';
import PushLoginRequest200Response from '../model/PushLoginRequest200Response';
import PushToken from '../model/PushToken';

/**
* Login service.
* @module api/LoginApi
* @version 6
*/
export default class LoginApi {

    /**
    * Constructs a new LoginApi. 
    * @alias module:api/LoginApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the pushLoginRequest operation.
     * @callback module:api/LoginApi~pushLoginRequestCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PushLoginRequest200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * push sign-in request See: https://github.com/skion/authentiq/wiki/JWT-Examples 
     * @param {String} callback URI App will connect to
     * @param {module:model/PushToken} pushToken Push Token.
     * @param {module:api/LoginApi~pushLoginRequestCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PushLoginRequest200Response}
     */
    pushLoginRequest(callback, pushToken, callback) {
      let postBody = pushToken;
      // verify the required parameter 'callback' is set
      if (callback === undefined || callback === null) {
        throw new Error("Missing the required parameter 'callback' when calling pushLoginRequest");
      }
      // verify the required parameter 'pushToken' is set
      if (pushToken === undefined || pushToken === null) {
        throw new Error("Missing the required parameter 'pushToken' when calling pushLoginRequest");
      }

      let pathParams = {
      };
      let queryParams = {
        'callback': callback
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/jwt'];
      let accepts = ['application/json', '*/*'];
      let returnType = PushLoginRequest200Response;
      return this.apiClient.callApi(
        '/login', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
