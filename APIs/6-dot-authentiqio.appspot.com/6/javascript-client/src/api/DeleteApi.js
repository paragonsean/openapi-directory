/**
 * Authentiq API
 * Strong authentication, without the passwords.
 *
 * The version of the OpenAPI document: 6
 * Contact: hello@authentiq.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Error from '../model/Error';
import KeyRevoke200Response from '../model/KeyRevoke200Response';
import KeyRevokeNosecret200Response from '../model/KeyRevokeNosecret200Response';

/**
* Delete service.
* @module api/DeleteApi
* @version 6
*/
export default class DeleteApi {

    /**
    * Constructs a new DeleteApi. 
    * @alias module:api/DeleteApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the keyRevokeNosecret_0 operation.
     * @callback module:api/DeleteApi~keyRevokeNosecret_0Callback
     * @param {String} error Error message, if any.
     * @param {module:model/KeyRevokeNosecret200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Revoke an Authentiq ID using email & phone.  If called with `email` and `phone` only, a verification code  will be sent by email. Do a second call adding `code` to  complete the revocation. 
     * @param {String} email primary email associated to Key (ID)
     * @param {String} phone primary phone number, international representation
     * @param {Object} opts Optional parameters
     * @param {String} [code] verification code sent by email
     * @param {module:api/DeleteApi~keyRevokeNosecret_0Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/KeyRevokeNosecret200Response}
     */
    keyRevokeNosecret_0(email, phone, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'email' is set
      if (email === undefined || email === null) {
        throw new Error("Missing the required parameter 'email' when calling keyRevokeNosecret_0");
      }
      // verify the required parameter 'phone' is set
      if (phone === undefined || phone === null) {
        throw new Error("Missing the required parameter 'phone' when calling keyRevokeNosecret_0");
      }

      let pathParams = {
      };
      let queryParams = {
        'email': email,
        'phone': phone,
        'code': opts['code']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', '*/*'];
      let returnType = KeyRevokeNosecret200Response;
      return this.apiClient.callApi(
        '/key', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the keyRevoke_0 operation.
     * @callback module:api/DeleteApi~keyRevoke_0Callback
     * @param {String} error Error message, if any.
     * @param {module:model/KeyRevoke200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Revoke an Identity (Key) with a revocation secret
     * @param {String} PK Public Signing Key - Authentiq ID (43 chars)
     * @param {String} secret revokation secret
     * @param {module:api/DeleteApi~keyRevoke_0Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/KeyRevoke200Response}
     */
    keyRevoke_0(PK, secret, callback) {
      let postBody = null;
      // verify the required parameter 'PK' is set
      if (PK === undefined || PK === null) {
        throw new Error("Missing the required parameter 'PK' when calling keyRevoke_0");
      }
      // verify the required parameter 'secret' is set
      if (secret === undefined || secret === null) {
        throw new Error("Missing the required parameter 'secret' when calling keyRevoke_0");
      }

      let pathParams = {
        'PK': PK
      };
      let queryParams = {
        'secret': secret
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', '*/*'];
      let returnType = KeyRevoke200Response;
      return this.apiClient.callApi(
        '/key/{PK}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the signDelete_0 operation.
     * @callback module:api/DeleteApi~signDelete_0Callback
     * @param {String} error Error message, if any.
     * @param {module:model/KeyRevoke200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * delete a verification job
     * @param {String} job Job ID (20 chars)
     * @param {module:api/DeleteApi~signDelete_0Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/KeyRevoke200Response}
     */
    signDelete_0(job, callback) {
      let postBody = null;
      // verify the required parameter 'job' is set
      if (job === undefined || job === null) {
        throw new Error("Missing the required parameter 'job' when calling signDelete_0");
      }

      let pathParams = {
        'job': job
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', '*/*'];
      let returnType = KeyRevoke200Response;
      return this.apiClient.callApi(
        '/scope/{job}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
