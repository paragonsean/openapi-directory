/**
 * Authentiq API
 * Strong authentication, without the passwords.
 *
 * The version of the OpenAPI document: 6
 * Contact: hello@authentiq.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import AuthentiqID from './model/AuthentiqID';
import Claims from './model/Claims';
import Error from './model/Error';
import JWT from './model/JWT';
import JWT1 from './model/JWT1';
import KeyBind200Response from './model/KeyBind200Response';
import KeyRegister201Response from './model/KeyRegister201Response';
import KeyRevoke200Response from './model/KeyRevoke200Response';
import KeyRevokeNosecret200Response from './model/KeyRevokeNosecret200Response';
import PushLoginRequest200Response from './model/PushLoginRequest200Response';
import PushToken from './model/PushToken';
import SignRequest201Response from './model/SignRequest201Response';
import SignUpdate200Response from './model/SignUpdate200Response';
import DeleteApi from './api/DeleteApi';
import GetApi from './api/GetApi';
import HeadApi from './api/HeadApi';
import KeyApi from './api/KeyApi';
import LoginApi from './api/LoginApi';
import PostApi from './api/PostApi';
import PutApi from './api/PutApi';
import ScopeApi from './api/ScopeApi';


/**
* Strong authentication, without the passwords..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var AuthentiqApi = require('index'); // See note below*.
* var xxxSvc = new AuthentiqApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new AuthentiqApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new AuthentiqApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new AuthentiqApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 6
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AuthentiqID model constructor.
     * @property {module:model/AuthentiqID}
     */
    AuthentiqID,

    /**
     * The Claims model constructor.
     * @property {module:model/Claims}
     */
    Claims,

    /**
     * The Error model constructor.
     * @property {module:model/Error}
     */
    Error,

    /**
     * The JWT model constructor.
     * @property {module:model/JWT}
     */
    JWT,

    /**
     * The JWT1 model constructor.
     * @property {module:model/JWT1}
     */
    JWT1,

    /**
     * The KeyBind200Response model constructor.
     * @property {module:model/KeyBind200Response}
     */
    KeyBind200Response,

    /**
     * The KeyRegister201Response model constructor.
     * @property {module:model/KeyRegister201Response}
     */
    KeyRegister201Response,

    /**
     * The KeyRevoke200Response model constructor.
     * @property {module:model/KeyRevoke200Response}
     */
    KeyRevoke200Response,

    /**
     * The KeyRevokeNosecret200Response model constructor.
     * @property {module:model/KeyRevokeNosecret200Response}
     */
    KeyRevokeNosecret200Response,

    /**
     * The PushLoginRequest200Response model constructor.
     * @property {module:model/PushLoginRequest200Response}
     */
    PushLoginRequest200Response,

    /**
     * The PushToken model constructor.
     * @property {module:model/PushToken}
     */
    PushToken,

    /**
     * The SignRequest201Response model constructor.
     * @property {module:model/SignRequest201Response}
     */
    SignRequest201Response,

    /**
     * The SignUpdate200Response model constructor.
     * @property {module:model/SignUpdate200Response}
     */
    SignUpdate200Response,

    /**
    * The DeleteApi service constructor.
    * @property {module:api/DeleteApi}
    */
    DeleteApi,

    /**
    * The GetApi service constructor.
    * @property {module:api/GetApi}
    */
    GetApi,

    /**
    * The HeadApi service constructor.
    * @property {module:api/HeadApi}
    */
    HeadApi,

    /**
    * The KeyApi service constructor.
    * @property {module:api/KeyApi}
    */
    KeyApi,

    /**
    * The LoginApi service constructor.
    * @property {module:api/LoginApi}
    */
    LoginApi,

    /**
    * The PostApi service constructor.
    * @property {module:api/PostApi}
    */
    PostApi,

    /**
    * The PutApi service constructor.
    * @property {module:api/PutApi}
    */
    PutApi,

    /**
    * The ScopeApi service constructor.
    * @property {module:api/ScopeApi}
    */
    ScopeApi
};
