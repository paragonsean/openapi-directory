/**
 * Authentiq API
 * Strong authentication, without the passwords.
 *
 * The version of the OpenAPI document: 6
 * Contact: hello@authentiq.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAuthentiqID.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAuthentiqID::OAIAuthentiqID(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAuthentiqID::OAIAuthentiqID() {
    this->initializeModel();
}

OAIAuthentiqID::~OAIAuthentiqID() {}

void OAIAuthentiqID::initializeModel() {

    m_devtoken_isSet = false;
    m_devtoken_isValid = false;

    m_sub_isSet = false;
    m_sub_isValid = false;
}

void OAIAuthentiqID::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAuthentiqID::fromJsonObject(QJsonObject json) {

    m_devtoken_isValid = ::OpenAPI::fromJsonValue(m_devtoken, json[QString("devtoken")]);
    m_devtoken_isSet = !json[QString("devtoken")].isNull() && m_devtoken_isValid;

    m_sub_isValid = ::OpenAPI::fromJsonValue(m_sub, json[QString("sub")]);
    m_sub_isSet = !json[QString("sub")].isNull() && m_sub_isValid;
}

QString OAIAuthentiqID::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAuthentiqID::asJsonObject() const {
    QJsonObject obj;
    if (m_devtoken_isSet) {
        obj.insert(QString("devtoken"), ::OpenAPI::toJsonValue(m_devtoken));
    }
    if (m_sub_isSet) {
        obj.insert(QString("sub"), ::OpenAPI::toJsonValue(m_sub));
    }
    return obj;
}

QString OAIAuthentiqID::getDevtoken() const {
    return m_devtoken;
}
void OAIAuthentiqID::setDevtoken(const QString &devtoken) {
    m_devtoken = devtoken;
    m_devtoken_isSet = true;
}

bool OAIAuthentiqID::is_devtoken_Set() const{
    return m_devtoken_isSet;
}

bool OAIAuthentiqID::is_devtoken_Valid() const{
    return m_devtoken_isValid;
}

QString OAIAuthentiqID::getSub() const {
    return m_sub;
}
void OAIAuthentiqID::setSub(const QString &sub) {
    m_sub = sub;
    m_sub_isSet = true;
}

bool OAIAuthentiqID::is_sub_Set() const{
    return m_sub_isSet;
}

bool OAIAuthentiqID::is_sub_Valid() const{
    return m_sub_isValid;
}

bool OAIAuthentiqID::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_devtoken_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sub_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAuthentiqID::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_sub_isValid && true;
}

} // namespace OpenAPI
