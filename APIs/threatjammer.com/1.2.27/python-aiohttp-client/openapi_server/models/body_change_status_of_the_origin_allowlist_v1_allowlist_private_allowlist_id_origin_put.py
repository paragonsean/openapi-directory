# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BodyChangeStatusOfTheOriginAllowlistV1AllowlistPrivateAllowlistIdOriginPut(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, origin: str=None, status: str=None):
        """BodyChangeStatusOfTheOriginAllowlistV1AllowlistPrivateAllowlistIdOriginPut - a model defined in OpenAPI

        :param origin: The origin of this BodyChangeStatusOfTheOriginAllowlistV1AllowlistPrivateAllowlistIdOriginPut.
        :param status: The status of this BodyChangeStatusOfTheOriginAllowlistV1AllowlistPrivateAllowlistIdOriginPut.
        """
        self.openapi_types = {
            'origin': str,
            'status': str
        }

        self.attribute_map = {
            'origin': 'origin',
            'status': 'status'
        }

        self._origin = origin
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BodyChangeStatusOfTheOriginAllowlistV1AllowlistPrivateAllowlistIdOriginPut':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Body_change_status_of_the_origin_allowlist_v1_allowlist_private__allowlist_id__origin_put of this BodyChangeStatusOfTheOriginAllowlistV1AllowlistPrivateAllowlistIdOriginPut.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def origin(self):
        """Gets the origin of this BodyChangeStatusOfTheOriginAllowlistV1AllowlistPrivateAllowlistIdOriginPut.

        The protocol and domain of the origin to change the status

        :return: The origin of this BodyChangeStatusOfTheOriginAllowlistV1AllowlistPrivateAllowlistIdOriginPut.
        :rtype: str
        """
        return self._origin

    @origin.setter
    def origin(self, origin):
        """Sets the origin of this BodyChangeStatusOfTheOriginAllowlistV1AllowlistPrivateAllowlistIdOriginPut.

        The protocol and domain of the origin to change the status

        :param origin: The origin of this BodyChangeStatusOfTheOriginAllowlistV1AllowlistPrivateAllowlistIdOriginPut.
        :type origin: str
        """
        if origin is None:
            raise ValueError("Invalid value for `origin`, must not be `None`")
        if origin is not None and len(origin) > 2083:
            raise ValueError("Invalid value for `origin`, length must be less than or equal to `2083`")
        if origin is not None and len(origin) < 1:
            raise ValueError("Invalid value for `origin`, length must be greater than or equal to `1`")

        self._origin = origin

    @property
    def status(self):
        """Gets the status of this BodyChangeStatusOfTheOriginAllowlistV1AllowlistPrivateAllowlistIdOriginPut.

        The status of the list. ACTIVE, INACTIVE, DELETED

        :return: The status of this BodyChangeStatusOfTheOriginAllowlistV1AllowlistPrivateAllowlistIdOriginPut.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this BodyChangeStatusOfTheOriginAllowlistV1AllowlistPrivateAllowlistIdOriginPut.

        The status of the list. ACTIVE, INACTIVE, DELETED

        :param status: The status of this BodyChangeStatusOfTheOriginAllowlistV1AllowlistPrivateAllowlistIdOriginPut.
        :type status: str
        """
        allowed_values = ["ACTIVE", "INACTIVE", "DELETED"]  # noqa: E501
        if status not in allowed_values:
            raise ValueError(
                "Invalid value for `status` ({0}), must be one of {1}"
                .format(status, allowed_values)
            )

        self._status = status
