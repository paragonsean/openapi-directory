# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class OriginClientAnalysisOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, client_browser: int=None, client_crawler: int=None, client_email: int=None, client_library: int=None, client_mobile_browser: int=None, client_multimedia_player: int=None, client_offline_browser: int=None, client_total: int=None, client_ua_anonymizer: int=None, client_unrecognized: int=None, client_validator: int=None, client_wap_browser: int=None, crawler_feed_fetcher: int=None, crawler_link_checker: int=None, crawler_marketing: int=None, crawler_screenshot_creator: int=None, crawler_search_engine_bot: int=None, crawler_site_monitor: int=None, crawler_speed_tester: int=None, crawler_tool: int=None, crawler_total: int=None, crawler_uncategorised: int=None, crawler_unrecognized: int=None, crawler_virus_scanner: int=None, crawler_vulnerability_scanner: int=None, crawler_web_scraper: int=None, timestamp: int=None, total: int=None):
        """OriginClientAnalysisOutput - a model defined in OpenAPI

        :param client_browser: The client_browser of this OriginClientAnalysisOutput.
        :param client_crawler: The client_crawler of this OriginClientAnalysisOutput.
        :param client_email: The client_email of this OriginClientAnalysisOutput.
        :param client_library: The client_library of this OriginClientAnalysisOutput.
        :param client_mobile_browser: The client_mobile_browser of this OriginClientAnalysisOutput.
        :param client_multimedia_player: The client_multimedia_player of this OriginClientAnalysisOutput.
        :param client_offline_browser: The client_offline_browser of this OriginClientAnalysisOutput.
        :param client_total: The client_total of this OriginClientAnalysisOutput.
        :param client_ua_anonymizer: The client_ua_anonymizer of this OriginClientAnalysisOutput.
        :param client_unrecognized: The client_unrecognized of this OriginClientAnalysisOutput.
        :param client_validator: The client_validator of this OriginClientAnalysisOutput.
        :param client_wap_browser: The client_wap_browser of this OriginClientAnalysisOutput.
        :param crawler_feed_fetcher: The crawler_feed_fetcher of this OriginClientAnalysisOutput.
        :param crawler_link_checker: The crawler_link_checker of this OriginClientAnalysisOutput.
        :param crawler_marketing: The crawler_marketing of this OriginClientAnalysisOutput.
        :param crawler_screenshot_creator: The crawler_screenshot_creator of this OriginClientAnalysisOutput.
        :param crawler_search_engine_bot: The crawler_search_engine_bot of this OriginClientAnalysisOutput.
        :param crawler_site_monitor: The crawler_site_monitor of this OriginClientAnalysisOutput.
        :param crawler_speed_tester: The crawler_speed_tester of this OriginClientAnalysisOutput.
        :param crawler_tool: The crawler_tool of this OriginClientAnalysisOutput.
        :param crawler_total: The crawler_total of this OriginClientAnalysisOutput.
        :param crawler_uncategorised: The crawler_uncategorised of this OriginClientAnalysisOutput.
        :param crawler_unrecognized: The crawler_unrecognized of this OriginClientAnalysisOutput.
        :param crawler_virus_scanner: The crawler_virus_scanner of this OriginClientAnalysisOutput.
        :param crawler_vulnerability_scanner: The crawler_vulnerability_scanner of this OriginClientAnalysisOutput.
        :param crawler_web_scraper: The crawler_web_scraper of this OriginClientAnalysisOutput.
        :param timestamp: The timestamp of this OriginClientAnalysisOutput.
        :param total: The total of this OriginClientAnalysisOutput.
        """
        self.openapi_types = {
            'client_browser': int,
            'client_crawler': int,
            'client_email': int,
            'client_library': int,
            'client_mobile_browser': int,
            'client_multimedia_player': int,
            'client_offline_browser': int,
            'client_total': int,
            'client_ua_anonymizer': int,
            'client_unrecognized': int,
            'client_validator': int,
            'client_wap_browser': int,
            'crawler_feed_fetcher': int,
            'crawler_link_checker': int,
            'crawler_marketing': int,
            'crawler_screenshot_creator': int,
            'crawler_search_engine_bot': int,
            'crawler_site_monitor': int,
            'crawler_speed_tester': int,
            'crawler_tool': int,
            'crawler_total': int,
            'crawler_uncategorised': int,
            'crawler_unrecognized': int,
            'crawler_virus_scanner': int,
            'crawler_vulnerability_scanner': int,
            'crawler_web_scraper': int,
            'timestamp': int,
            'total': int
        }

        self.attribute_map = {
            'client_browser': 'client_browser',
            'client_crawler': 'client_crawler',
            'client_email': 'client_email',
            'client_library': 'client_library',
            'client_mobile_browser': 'client_mobile_browser',
            'client_multimedia_player': 'client_multimedia_player',
            'client_offline_browser': 'client_offline_browser',
            'client_total': 'client_total',
            'client_ua_anonymizer': 'client_ua_anonymizer',
            'client_unrecognized': 'client_unrecognized',
            'client_validator': 'client_validator',
            'client_wap_browser': 'client_wap_browser',
            'crawler_feed_fetcher': 'crawler_feed_fetcher',
            'crawler_link_checker': 'crawler_link_checker',
            'crawler_marketing': 'crawler_marketing',
            'crawler_screenshot_creator': 'crawler_screenshot_creator',
            'crawler_search_engine_bot': 'crawler_search_engine_bot',
            'crawler_site_monitor': 'crawler_site_monitor',
            'crawler_speed_tester': 'crawler_speed_tester',
            'crawler_tool': 'crawler_tool',
            'crawler_total': 'crawler_total',
            'crawler_uncategorised': 'crawler_uncategorised',
            'crawler_unrecognized': 'crawler_unrecognized',
            'crawler_virus_scanner': 'crawler_virus_scanner',
            'crawler_vulnerability_scanner': 'crawler_vulnerability_scanner',
            'crawler_web_scraper': 'crawler_web_scraper',
            'timestamp': 'timestamp',
            'total': 'total'
        }

        self._client_browser = client_browser
        self._client_crawler = client_crawler
        self._client_email = client_email
        self._client_library = client_library
        self._client_mobile_browser = client_mobile_browser
        self._client_multimedia_player = client_multimedia_player
        self._client_offline_browser = client_offline_browser
        self._client_total = client_total
        self._client_ua_anonymizer = client_ua_anonymizer
        self._client_unrecognized = client_unrecognized
        self._client_validator = client_validator
        self._client_wap_browser = client_wap_browser
        self._crawler_feed_fetcher = crawler_feed_fetcher
        self._crawler_link_checker = crawler_link_checker
        self._crawler_marketing = crawler_marketing
        self._crawler_screenshot_creator = crawler_screenshot_creator
        self._crawler_search_engine_bot = crawler_search_engine_bot
        self._crawler_site_monitor = crawler_site_monitor
        self._crawler_speed_tester = crawler_speed_tester
        self._crawler_tool = crawler_tool
        self._crawler_total = crawler_total
        self._crawler_uncategorised = crawler_uncategorised
        self._crawler_unrecognized = crawler_unrecognized
        self._crawler_virus_scanner = crawler_virus_scanner
        self._crawler_vulnerability_scanner = crawler_vulnerability_scanner
        self._crawler_web_scraper = crawler_web_scraper
        self._timestamp = timestamp
        self._total = total

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OriginClientAnalysisOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OriginClientAnalysisOutput of this OriginClientAnalysisOutput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def client_browser(self):
        """Gets the client_browser of this OriginClientAnalysisOutput.


        :return: The client_browser of this OriginClientAnalysisOutput.
        :rtype: int
        """
        return self._client_browser

    @client_browser.setter
    def client_browser(self, client_browser):
        """Sets the client_browser of this OriginClientAnalysisOutput.


        :param client_browser: The client_browser of this OriginClientAnalysisOutput.
        :type client_browser: int
        """
        if client_browser is None:
            raise ValueError("Invalid value for `client_browser`, must not be `None`")

        self._client_browser = client_browser

    @property
    def client_crawler(self):
        """Gets the client_crawler of this OriginClientAnalysisOutput.


        :return: The client_crawler of this OriginClientAnalysisOutput.
        :rtype: int
        """
        return self._client_crawler

    @client_crawler.setter
    def client_crawler(self, client_crawler):
        """Sets the client_crawler of this OriginClientAnalysisOutput.


        :param client_crawler: The client_crawler of this OriginClientAnalysisOutput.
        :type client_crawler: int
        """
        if client_crawler is None:
            raise ValueError("Invalid value for `client_crawler`, must not be `None`")

        self._client_crawler = client_crawler

    @property
    def client_email(self):
        """Gets the client_email of this OriginClientAnalysisOutput.


        :return: The client_email of this OriginClientAnalysisOutput.
        :rtype: int
        """
        return self._client_email

    @client_email.setter
    def client_email(self, client_email):
        """Sets the client_email of this OriginClientAnalysisOutput.


        :param client_email: The client_email of this OriginClientAnalysisOutput.
        :type client_email: int
        """
        if client_email is None:
            raise ValueError("Invalid value for `client_email`, must not be `None`")

        self._client_email = client_email

    @property
    def client_library(self):
        """Gets the client_library of this OriginClientAnalysisOutput.


        :return: The client_library of this OriginClientAnalysisOutput.
        :rtype: int
        """
        return self._client_library

    @client_library.setter
    def client_library(self, client_library):
        """Sets the client_library of this OriginClientAnalysisOutput.


        :param client_library: The client_library of this OriginClientAnalysisOutput.
        :type client_library: int
        """
        if client_library is None:
            raise ValueError("Invalid value for `client_library`, must not be `None`")

        self._client_library = client_library

    @property
    def client_mobile_browser(self):
        """Gets the client_mobile_browser of this OriginClientAnalysisOutput.


        :return: The client_mobile_browser of this OriginClientAnalysisOutput.
        :rtype: int
        """
        return self._client_mobile_browser

    @client_mobile_browser.setter
    def client_mobile_browser(self, client_mobile_browser):
        """Sets the client_mobile_browser of this OriginClientAnalysisOutput.


        :param client_mobile_browser: The client_mobile_browser of this OriginClientAnalysisOutput.
        :type client_mobile_browser: int
        """
        if client_mobile_browser is None:
            raise ValueError("Invalid value for `client_mobile_browser`, must not be `None`")

        self._client_mobile_browser = client_mobile_browser

    @property
    def client_multimedia_player(self):
        """Gets the client_multimedia_player of this OriginClientAnalysisOutput.


        :return: The client_multimedia_player of this OriginClientAnalysisOutput.
        :rtype: int
        """
        return self._client_multimedia_player

    @client_multimedia_player.setter
    def client_multimedia_player(self, client_multimedia_player):
        """Sets the client_multimedia_player of this OriginClientAnalysisOutput.


        :param client_multimedia_player: The client_multimedia_player of this OriginClientAnalysisOutput.
        :type client_multimedia_player: int
        """
        if client_multimedia_player is None:
            raise ValueError("Invalid value for `client_multimedia_player`, must not be `None`")

        self._client_multimedia_player = client_multimedia_player

    @property
    def client_offline_browser(self):
        """Gets the client_offline_browser of this OriginClientAnalysisOutput.


        :return: The client_offline_browser of this OriginClientAnalysisOutput.
        :rtype: int
        """
        return self._client_offline_browser

    @client_offline_browser.setter
    def client_offline_browser(self, client_offline_browser):
        """Sets the client_offline_browser of this OriginClientAnalysisOutput.


        :param client_offline_browser: The client_offline_browser of this OriginClientAnalysisOutput.
        :type client_offline_browser: int
        """
        if client_offline_browser is None:
            raise ValueError("Invalid value for `client_offline_browser`, must not be `None`")

        self._client_offline_browser = client_offline_browser

    @property
    def client_total(self):
        """Gets the client_total of this OriginClientAnalysisOutput.


        :return: The client_total of this OriginClientAnalysisOutput.
        :rtype: int
        """
        return self._client_total

    @client_total.setter
    def client_total(self, client_total):
        """Sets the client_total of this OriginClientAnalysisOutput.


        :param client_total: The client_total of this OriginClientAnalysisOutput.
        :type client_total: int
        """
        if client_total is None:
            raise ValueError("Invalid value for `client_total`, must not be `None`")

        self._client_total = client_total

    @property
    def client_ua_anonymizer(self):
        """Gets the client_ua_anonymizer of this OriginClientAnalysisOutput.


        :return: The client_ua_anonymizer of this OriginClientAnalysisOutput.
        :rtype: int
        """
        return self._client_ua_anonymizer

    @client_ua_anonymizer.setter
    def client_ua_anonymizer(self, client_ua_anonymizer):
        """Sets the client_ua_anonymizer of this OriginClientAnalysisOutput.


        :param client_ua_anonymizer: The client_ua_anonymizer of this OriginClientAnalysisOutput.
        :type client_ua_anonymizer: int
        """
        if client_ua_anonymizer is None:
            raise ValueError("Invalid value for `client_ua_anonymizer`, must not be `None`")

        self._client_ua_anonymizer = client_ua_anonymizer

    @property
    def client_unrecognized(self):
        """Gets the client_unrecognized of this OriginClientAnalysisOutput.


        :return: The client_unrecognized of this OriginClientAnalysisOutput.
        :rtype: int
        """
        return self._client_unrecognized

    @client_unrecognized.setter
    def client_unrecognized(self, client_unrecognized):
        """Sets the client_unrecognized of this OriginClientAnalysisOutput.


        :param client_unrecognized: The client_unrecognized of this OriginClientAnalysisOutput.
        :type client_unrecognized: int
        """
        if client_unrecognized is None:
            raise ValueError("Invalid value for `client_unrecognized`, must not be `None`")

        self._client_unrecognized = client_unrecognized

    @property
    def client_validator(self):
        """Gets the client_validator of this OriginClientAnalysisOutput.


        :return: The client_validator of this OriginClientAnalysisOutput.
        :rtype: int
        """
        return self._client_validator

    @client_validator.setter
    def client_validator(self, client_validator):
        """Sets the client_validator of this OriginClientAnalysisOutput.


        :param client_validator: The client_validator of this OriginClientAnalysisOutput.
        :type client_validator: int
        """
        if client_validator is None:
            raise ValueError("Invalid value for `client_validator`, must not be `None`")

        self._client_validator = client_validator

    @property
    def client_wap_browser(self):
        """Gets the client_wap_browser of this OriginClientAnalysisOutput.


        :return: The client_wap_browser of this OriginClientAnalysisOutput.
        :rtype: int
        """
        return self._client_wap_browser

    @client_wap_browser.setter
    def client_wap_browser(self, client_wap_browser):
        """Sets the client_wap_browser of this OriginClientAnalysisOutput.


        :param client_wap_browser: The client_wap_browser of this OriginClientAnalysisOutput.
        :type client_wap_browser: int
        """
        if client_wap_browser is None:
            raise ValueError("Invalid value for `client_wap_browser`, must not be `None`")

        self._client_wap_browser = client_wap_browser

    @property
    def crawler_feed_fetcher(self):
        """Gets the crawler_feed_fetcher of this OriginClientAnalysisOutput.


        :return: The crawler_feed_fetcher of this OriginClientAnalysisOutput.
        :rtype: int
        """
        return self._crawler_feed_fetcher

    @crawler_feed_fetcher.setter
    def crawler_feed_fetcher(self, crawler_feed_fetcher):
        """Sets the crawler_feed_fetcher of this OriginClientAnalysisOutput.


        :param crawler_feed_fetcher: The crawler_feed_fetcher of this OriginClientAnalysisOutput.
        :type crawler_feed_fetcher: int
        """
        if crawler_feed_fetcher is None:
            raise ValueError("Invalid value for `crawler_feed_fetcher`, must not be `None`")

        self._crawler_feed_fetcher = crawler_feed_fetcher

    @property
    def crawler_link_checker(self):
        """Gets the crawler_link_checker of this OriginClientAnalysisOutput.


        :return: The crawler_link_checker of this OriginClientAnalysisOutput.
        :rtype: int
        """
        return self._crawler_link_checker

    @crawler_link_checker.setter
    def crawler_link_checker(self, crawler_link_checker):
        """Sets the crawler_link_checker of this OriginClientAnalysisOutput.


        :param crawler_link_checker: The crawler_link_checker of this OriginClientAnalysisOutput.
        :type crawler_link_checker: int
        """
        if crawler_link_checker is None:
            raise ValueError("Invalid value for `crawler_link_checker`, must not be `None`")

        self._crawler_link_checker = crawler_link_checker

    @property
    def crawler_marketing(self):
        """Gets the crawler_marketing of this OriginClientAnalysisOutput.


        :return: The crawler_marketing of this OriginClientAnalysisOutput.
        :rtype: int
        """
        return self._crawler_marketing

    @crawler_marketing.setter
    def crawler_marketing(self, crawler_marketing):
        """Sets the crawler_marketing of this OriginClientAnalysisOutput.


        :param crawler_marketing: The crawler_marketing of this OriginClientAnalysisOutput.
        :type crawler_marketing: int
        """
        if crawler_marketing is None:
            raise ValueError("Invalid value for `crawler_marketing`, must not be `None`")

        self._crawler_marketing = crawler_marketing

    @property
    def crawler_screenshot_creator(self):
        """Gets the crawler_screenshot_creator of this OriginClientAnalysisOutput.


        :return: The crawler_screenshot_creator of this OriginClientAnalysisOutput.
        :rtype: int
        """
        return self._crawler_screenshot_creator

    @crawler_screenshot_creator.setter
    def crawler_screenshot_creator(self, crawler_screenshot_creator):
        """Sets the crawler_screenshot_creator of this OriginClientAnalysisOutput.


        :param crawler_screenshot_creator: The crawler_screenshot_creator of this OriginClientAnalysisOutput.
        :type crawler_screenshot_creator: int
        """
        if crawler_screenshot_creator is None:
            raise ValueError("Invalid value for `crawler_screenshot_creator`, must not be `None`")

        self._crawler_screenshot_creator = crawler_screenshot_creator

    @property
    def crawler_search_engine_bot(self):
        """Gets the crawler_search_engine_bot of this OriginClientAnalysisOutput.


        :return: The crawler_search_engine_bot of this OriginClientAnalysisOutput.
        :rtype: int
        """
        return self._crawler_search_engine_bot

    @crawler_search_engine_bot.setter
    def crawler_search_engine_bot(self, crawler_search_engine_bot):
        """Sets the crawler_search_engine_bot of this OriginClientAnalysisOutput.


        :param crawler_search_engine_bot: The crawler_search_engine_bot of this OriginClientAnalysisOutput.
        :type crawler_search_engine_bot: int
        """
        if crawler_search_engine_bot is None:
            raise ValueError("Invalid value for `crawler_search_engine_bot`, must not be `None`")

        self._crawler_search_engine_bot = crawler_search_engine_bot

    @property
    def crawler_site_monitor(self):
        """Gets the crawler_site_monitor of this OriginClientAnalysisOutput.


        :return: The crawler_site_monitor of this OriginClientAnalysisOutput.
        :rtype: int
        """
        return self._crawler_site_monitor

    @crawler_site_monitor.setter
    def crawler_site_monitor(self, crawler_site_monitor):
        """Sets the crawler_site_monitor of this OriginClientAnalysisOutput.


        :param crawler_site_monitor: The crawler_site_monitor of this OriginClientAnalysisOutput.
        :type crawler_site_monitor: int
        """
        if crawler_site_monitor is None:
            raise ValueError("Invalid value for `crawler_site_monitor`, must not be `None`")

        self._crawler_site_monitor = crawler_site_monitor

    @property
    def crawler_speed_tester(self):
        """Gets the crawler_speed_tester of this OriginClientAnalysisOutput.


        :return: The crawler_speed_tester of this OriginClientAnalysisOutput.
        :rtype: int
        """
        return self._crawler_speed_tester

    @crawler_speed_tester.setter
    def crawler_speed_tester(self, crawler_speed_tester):
        """Sets the crawler_speed_tester of this OriginClientAnalysisOutput.


        :param crawler_speed_tester: The crawler_speed_tester of this OriginClientAnalysisOutput.
        :type crawler_speed_tester: int
        """
        if crawler_speed_tester is None:
            raise ValueError("Invalid value for `crawler_speed_tester`, must not be `None`")

        self._crawler_speed_tester = crawler_speed_tester

    @property
    def crawler_tool(self):
        """Gets the crawler_tool of this OriginClientAnalysisOutput.


        :return: The crawler_tool of this OriginClientAnalysisOutput.
        :rtype: int
        """
        return self._crawler_tool

    @crawler_tool.setter
    def crawler_tool(self, crawler_tool):
        """Sets the crawler_tool of this OriginClientAnalysisOutput.


        :param crawler_tool: The crawler_tool of this OriginClientAnalysisOutput.
        :type crawler_tool: int
        """
        if crawler_tool is None:
            raise ValueError("Invalid value for `crawler_tool`, must not be `None`")

        self._crawler_tool = crawler_tool

    @property
    def crawler_total(self):
        """Gets the crawler_total of this OriginClientAnalysisOutput.


        :return: The crawler_total of this OriginClientAnalysisOutput.
        :rtype: int
        """
        return self._crawler_total

    @crawler_total.setter
    def crawler_total(self, crawler_total):
        """Sets the crawler_total of this OriginClientAnalysisOutput.


        :param crawler_total: The crawler_total of this OriginClientAnalysisOutput.
        :type crawler_total: int
        """
        if crawler_total is None:
            raise ValueError("Invalid value for `crawler_total`, must not be `None`")

        self._crawler_total = crawler_total

    @property
    def crawler_uncategorised(self):
        """Gets the crawler_uncategorised of this OriginClientAnalysisOutput.


        :return: The crawler_uncategorised of this OriginClientAnalysisOutput.
        :rtype: int
        """
        return self._crawler_uncategorised

    @crawler_uncategorised.setter
    def crawler_uncategorised(self, crawler_uncategorised):
        """Sets the crawler_uncategorised of this OriginClientAnalysisOutput.


        :param crawler_uncategorised: The crawler_uncategorised of this OriginClientAnalysisOutput.
        :type crawler_uncategorised: int
        """
        if crawler_uncategorised is None:
            raise ValueError("Invalid value for `crawler_uncategorised`, must not be `None`")

        self._crawler_uncategorised = crawler_uncategorised

    @property
    def crawler_unrecognized(self):
        """Gets the crawler_unrecognized of this OriginClientAnalysisOutput.


        :return: The crawler_unrecognized of this OriginClientAnalysisOutput.
        :rtype: int
        """
        return self._crawler_unrecognized

    @crawler_unrecognized.setter
    def crawler_unrecognized(self, crawler_unrecognized):
        """Sets the crawler_unrecognized of this OriginClientAnalysisOutput.


        :param crawler_unrecognized: The crawler_unrecognized of this OriginClientAnalysisOutput.
        :type crawler_unrecognized: int
        """
        if crawler_unrecognized is None:
            raise ValueError("Invalid value for `crawler_unrecognized`, must not be `None`")

        self._crawler_unrecognized = crawler_unrecognized

    @property
    def crawler_virus_scanner(self):
        """Gets the crawler_virus_scanner of this OriginClientAnalysisOutput.


        :return: The crawler_virus_scanner of this OriginClientAnalysisOutput.
        :rtype: int
        """
        return self._crawler_virus_scanner

    @crawler_virus_scanner.setter
    def crawler_virus_scanner(self, crawler_virus_scanner):
        """Sets the crawler_virus_scanner of this OriginClientAnalysisOutput.


        :param crawler_virus_scanner: The crawler_virus_scanner of this OriginClientAnalysisOutput.
        :type crawler_virus_scanner: int
        """
        if crawler_virus_scanner is None:
            raise ValueError("Invalid value for `crawler_virus_scanner`, must not be `None`")

        self._crawler_virus_scanner = crawler_virus_scanner

    @property
    def crawler_vulnerability_scanner(self):
        """Gets the crawler_vulnerability_scanner of this OriginClientAnalysisOutput.


        :return: The crawler_vulnerability_scanner of this OriginClientAnalysisOutput.
        :rtype: int
        """
        return self._crawler_vulnerability_scanner

    @crawler_vulnerability_scanner.setter
    def crawler_vulnerability_scanner(self, crawler_vulnerability_scanner):
        """Sets the crawler_vulnerability_scanner of this OriginClientAnalysisOutput.


        :param crawler_vulnerability_scanner: The crawler_vulnerability_scanner of this OriginClientAnalysisOutput.
        :type crawler_vulnerability_scanner: int
        """
        if crawler_vulnerability_scanner is None:
            raise ValueError("Invalid value for `crawler_vulnerability_scanner`, must not be `None`")

        self._crawler_vulnerability_scanner = crawler_vulnerability_scanner

    @property
    def crawler_web_scraper(self):
        """Gets the crawler_web_scraper of this OriginClientAnalysisOutput.


        :return: The crawler_web_scraper of this OriginClientAnalysisOutput.
        :rtype: int
        """
        return self._crawler_web_scraper

    @crawler_web_scraper.setter
    def crawler_web_scraper(self, crawler_web_scraper):
        """Sets the crawler_web_scraper of this OriginClientAnalysisOutput.


        :param crawler_web_scraper: The crawler_web_scraper of this OriginClientAnalysisOutput.
        :type crawler_web_scraper: int
        """
        if crawler_web_scraper is None:
            raise ValueError("Invalid value for `crawler_web_scraper`, must not be `None`")

        self._crawler_web_scraper = crawler_web_scraper

    @property
    def timestamp(self):
        """Gets the timestamp of this OriginClientAnalysisOutput.


        :return: The timestamp of this OriginClientAnalysisOutput.
        :rtype: int
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp):
        """Sets the timestamp of this OriginClientAnalysisOutput.


        :param timestamp: The timestamp of this OriginClientAnalysisOutput.
        :type timestamp: int
        """
        if timestamp is None:
            raise ValueError("Invalid value for `timestamp`, must not be `None`")

        self._timestamp = timestamp

    @property
    def total(self):
        """Gets the total of this OriginClientAnalysisOutput.


        :return: The total of this OriginClientAnalysisOutput.
        :rtype: int
        """
        return self._total

    @total.setter
    def total(self, total):
        """Sets the total of this OriginClientAnalysisOutput.


        :param total: The total of this OriginClientAnalysisOutput.
        :type total: int
        """
        if total is None:
            raise ValueError("Invalid value for `total`, must not be `None`")

        self._total = total
