# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.acl_group_origin_output import AclGroupOriginOutput
from openapi_server import util


class AclGroupOriginCollectionOutput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, lists: List[AclGroupOriginOutput]=None, _self: str=None):
        """AclGroupOriginCollectionOutput - a model defined in OpenAPI

        :param lists: The lists of this AclGroupOriginCollectionOutput.
        :param _self: The _self of this AclGroupOriginCollectionOutput.
        """
        self.openapi_types = {
            'lists': List[AclGroupOriginOutput],
            '_self': str
        }

        self.attribute_map = {
            'lists': 'lists',
            '_self': 'self'
        }

        self._lists = lists
        self.__self = _self

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AclGroupOriginCollectionOutput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AclGroupOriginCollectionOutput of this AclGroupOriginCollectionOutput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def lists(self):
        """Gets the lists of this AclGroupOriginCollectionOutput.


        :return: The lists of this AclGroupOriginCollectionOutput.
        :rtype: List[AclGroupOriginOutput]
        """
        return self._lists

    @lists.setter
    def lists(self, lists):
        """Sets the lists of this AclGroupOriginCollectionOutput.


        :param lists: The lists of this AclGroupOriginCollectionOutput.
        :type lists: List[AclGroupOriginOutput]
        """
        if lists is None:
            raise ValueError("Invalid value for `lists`, must not be `None`")

        self._lists = lists

    @property
    def _self(self):
        """Gets the _self of this AclGroupOriginCollectionOutput.


        :return: The _self of this AclGroupOriginCollectionOutput.
        :rtype: str
        """
        return self.__self

    @_self.setter
    def _self(self, _self):
        """Sets the _self of this AclGroupOriginCollectionOutput.


        :param _self: The _self of this AclGroupOriginCollectionOutput.
        :type _self: str
        """
        if _self is None:
            raise ValueError("Invalid value for `_self`, must not be `None`")

        self.__self = _self
