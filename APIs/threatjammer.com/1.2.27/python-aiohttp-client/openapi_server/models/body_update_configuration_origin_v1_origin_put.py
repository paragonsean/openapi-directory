# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BodyUpdateConfigurationOriginV1OriginPut(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, config: object=None, origin: str=None):
        """BodyUpdateConfigurationOriginV1OriginPut - a model defined in OpenAPI

        :param config: The config of this BodyUpdateConfigurationOriginV1OriginPut.
        :param origin: The origin of this BodyUpdateConfigurationOriginV1OriginPut.
        """
        self.openapi_types = {
            'config': object,
            'origin': str
        }

        self.attribute_map = {
            'config': 'config',
            'origin': 'origin'
        }

        self._config = config
        self._origin = origin

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BodyUpdateConfigurationOriginV1OriginPut':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Body_update_configuration_origin_v1_origin_put of this BodyUpdateConfigurationOriginV1OriginPut.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def config(self):
        """Gets the config of this BodyUpdateConfigurationOriginV1OriginPut.

        The configuration information to store in the origin.

        :return: The config of this BodyUpdateConfigurationOriginV1OriginPut.
        :rtype: object
        """
        return self._config

    @config.setter
    def config(self, config):
        """Sets the config of this BodyUpdateConfigurationOriginV1OriginPut.

        The configuration information to store in the origin.

        :param config: The config of this BodyUpdateConfigurationOriginV1OriginPut.
        :type config: object
        """

        self._config = config

    @property
    def origin(self):
        """Gets the origin of this BodyUpdateConfigurationOriginV1OriginPut.

        The origin site to modify the configruation

        :return: The origin of this BodyUpdateConfigurationOriginV1OriginPut.
        :rtype: str
        """
        return self._origin

    @origin.setter
    def origin(self, origin):
        """Sets the origin of this BodyUpdateConfigurationOriginV1OriginPut.

        The origin site to modify the configruation

        :param origin: The origin of this BodyUpdateConfigurationOriginV1OriginPut.
        :type origin: str
        """
        if origin is None:
            raise ValueError("Invalid value for `origin`, must not be `None`")

        self._origin = origin
