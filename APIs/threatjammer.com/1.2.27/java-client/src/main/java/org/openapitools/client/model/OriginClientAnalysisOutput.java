/*
 * ThreatJammer.com User API
 *  The public API open to the users. [Read the docs and learn more.](https://threatjammer.com/docs).  ## General information  ### Description Threat Jammer supports two end-user REST APIs: the User API and the Report API. The end-user uses the User API to interact with the different databases, heuristics, and machine learning processes. Devices use the Report API to interact with Threat Jammer. This document will explain how to use the User API and interact with the different services, create a token, interpret the quota information, and create the HTTP request to interact with the User API.  ### Authentication The API is protected by a **Bearer authentication** schema. **Bearer authentication** (also called **token authentication**) is an HTTP authentication scheme that involves security tokens called bearer tokens. It is used to authenticate the user. All the different endpoints expect a `Bearer` token in the `Authorization` header.  Example:  ``` curl -X 'GET'   'https://dublin.api.threatjammer.com/test'   -H 'accept: application/json'   -H 'Authorization: Bearer YOUR_API_KEY' ```  You can obtain a token after registering on the [ThreatJammer.com](https://threatjammer.com) website for free.   ### Region specific tokens All the `Bearer` tokens contain information about the authorized region. The developers have to use a token created for the region they want to use. A token used in a different region will return a `401 Unauthorized` error.  ### Global errors  The API will return the following permanent errors: - a `401 Unauthorized` error if the token is not valid, or does not belong to the region. - a `401 Unauthorized` error if the token does not exist. - a `401 Unauthorized` error if the token is malformed. - a `403 Forbidden` error if the subscription level is not enough. Some endpoints are only available for paid subscription levels.  And these temporary errors: - a `429 Too Many Requests` error if the quota is exceeded (see below).  ### Quota limits  **Every request to the User API will consume one (1) quota point.**  The API has two rate limiting processes: - a quota limit of **5000** requests per month for the `FREE` account. The limit is reset every month. - a quota limit of **10** requests per minute for the `FREE` account. The limit is reset every minute and implements a sliding window mechanism.  
 *
 * The version of the OpenAPI document: 1.2.27
 * Contact: support@threatjammer.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * OriginClientAnalysisOutput
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:53:58.480875-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class OriginClientAnalysisOutput {
  public static final String SERIALIZED_NAME_CLIENT_BROWSER = "client_browser";
  @SerializedName(SERIALIZED_NAME_CLIENT_BROWSER)
  private Integer clientBrowser;

  public static final String SERIALIZED_NAME_CLIENT_CRAWLER = "client_crawler";
  @SerializedName(SERIALIZED_NAME_CLIENT_CRAWLER)
  private Integer clientCrawler;

  public static final String SERIALIZED_NAME_CLIENT_EMAIL = "client_email";
  @SerializedName(SERIALIZED_NAME_CLIENT_EMAIL)
  private Integer clientEmail;

  public static final String SERIALIZED_NAME_CLIENT_LIBRARY = "client_library";
  @SerializedName(SERIALIZED_NAME_CLIENT_LIBRARY)
  private Integer clientLibrary;

  public static final String SERIALIZED_NAME_CLIENT_MOBILE_BROWSER = "client_mobile_browser";
  @SerializedName(SERIALIZED_NAME_CLIENT_MOBILE_BROWSER)
  private Integer clientMobileBrowser;

  public static final String SERIALIZED_NAME_CLIENT_MULTIMEDIA_PLAYER = "client_multimedia_player";
  @SerializedName(SERIALIZED_NAME_CLIENT_MULTIMEDIA_PLAYER)
  private Integer clientMultimediaPlayer;

  public static final String SERIALIZED_NAME_CLIENT_OFFLINE_BROWSER = "client_offline_browser";
  @SerializedName(SERIALIZED_NAME_CLIENT_OFFLINE_BROWSER)
  private Integer clientOfflineBrowser;

  public static final String SERIALIZED_NAME_CLIENT_TOTAL = "client_total";
  @SerializedName(SERIALIZED_NAME_CLIENT_TOTAL)
  private Integer clientTotal;

  public static final String SERIALIZED_NAME_CLIENT_UA_ANONYMIZER = "client_ua_anonymizer";
  @SerializedName(SERIALIZED_NAME_CLIENT_UA_ANONYMIZER)
  private Integer clientUaAnonymizer;

  public static final String SERIALIZED_NAME_CLIENT_UNRECOGNIZED = "client_unrecognized";
  @SerializedName(SERIALIZED_NAME_CLIENT_UNRECOGNIZED)
  private Integer clientUnrecognized;

  public static final String SERIALIZED_NAME_CLIENT_VALIDATOR = "client_validator";
  @SerializedName(SERIALIZED_NAME_CLIENT_VALIDATOR)
  private Integer clientValidator;

  public static final String SERIALIZED_NAME_CLIENT_WAP_BROWSER = "client_wap_browser";
  @SerializedName(SERIALIZED_NAME_CLIENT_WAP_BROWSER)
  private Integer clientWapBrowser;

  public static final String SERIALIZED_NAME_CRAWLER_FEED_FETCHER = "crawler_feed_fetcher";
  @SerializedName(SERIALIZED_NAME_CRAWLER_FEED_FETCHER)
  private Integer crawlerFeedFetcher;

  public static final String SERIALIZED_NAME_CRAWLER_LINK_CHECKER = "crawler_link_checker";
  @SerializedName(SERIALIZED_NAME_CRAWLER_LINK_CHECKER)
  private Integer crawlerLinkChecker;

  public static final String SERIALIZED_NAME_CRAWLER_MARKETING = "crawler_marketing";
  @SerializedName(SERIALIZED_NAME_CRAWLER_MARKETING)
  private Integer crawlerMarketing;

  public static final String SERIALIZED_NAME_CRAWLER_SCREENSHOT_CREATOR = "crawler_screenshot_creator";
  @SerializedName(SERIALIZED_NAME_CRAWLER_SCREENSHOT_CREATOR)
  private Integer crawlerScreenshotCreator;

  public static final String SERIALIZED_NAME_CRAWLER_SEARCH_ENGINE_BOT = "crawler_search_engine_bot";
  @SerializedName(SERIALIZED_NAME_CRAWLER_SEARCH_ENGINE_BOT)
  private Integer crawlerSearchEngineBot;

  public static final String SERIALIZED_NAME_CRAWLER_SITE_MONITOR = "crawler_site_monitor";
  @SerializedName(SERIALIZED_NAME_CRAWLER_SITE_MONITOR)
  private Integer crawlerSiteMonitor;

  public static final String SERIALIZED_NAME_CRAWLER_SPEED_TESTER = "crawler_speed_tester";
  @SerializedName(SERIALIZED_NAME_CRAWLER_SPEED_TESTER)
  private Integer crawlerSpeedTester;

  public static final String SERIALIZED_NAME_CRAWLER_TOOL = "crawler_tool";
  @SerializedName(SERIALIZED_NAME_CRAWLER_TOOL)
  private Integer crawlerTool;

  public static final String SERIALIZED_NAME_CRAWLER_TOTAL = "crawler_total";
  @SerializedName(SERIALIZED_NAME_CRAWLER_TOTAL)
  private Integer crawlerTotal;

  public static final String SERIALIZED_NAME_CRAWLER_UNCATEGORISED = "crawler_uncategorised";
  @SerializedName(SERIALIZED_NAME_CRAWLER_UNCATEGORISED)
  private Integer crawlerUncategorised;

  public static final String SERIALIZED_NAME_CRAWLER_UNRECOGNIZED = "crawler_unrecognized";
  @SerializedName(SERIALIZED_NAME_CRAWLER_UNRECOGNIZED)
  private Integer crawlerUnrecognized;

  public static final String SERIALIZED_NAME_CRAWLER_VIRUS_SCANNER = "crawler_virus_scanner";
  @SerializedName(SERIALIZED_NAME_CRAWLER_VIRUS_SCANNER)
  private Integer crawlerVirusScanner;

  public static final String SERIALIZED_NAME_CRAWLER_VULNERABILITY_SCANNER = "crawler_vulnerability_scanner";
  @SerializedName(SERIALIZED_NAME_CRAWLER_VULNERABILITY_SCANNER)
  private Integer crawlerVulnerabilityScanner;

  public static final String SERIALIZED_NAME_CRAWLER_WEB_SCRAPER = "crawler_web_scraper";
  @SerializedName(SERIALIZED_NAME_CRAWLER_WEB_SCRAPER)
  private Integer crawlerWebScraper;

  public static final String SERIALIZED_NAME_TIMESTAMP = "timestamp";
  @SerializedName(SERIALIZED_NAME_TIMESTAMP)
  private Integer timestamp;

  public static final String SERIALIZED_NAME_TOTAL = "total";
  @SerializedName(SERIALIZED_NAME_TOTAL)
  private Integer total;

  public OriginClientAnalysisOutput() {
  }

  public OriginClientAnalysisOutput clientBrowser(Integer clientBrowser) {
    this.clientBrowser = clientBrowser;
    return this;
  }

  /**
   * Get clientBrowser
   * @return clientBrowser
   */
  @javax.annotation.Nonnull
  public Integer getClientBrowser() {
    return clientBrowser;
  }

  public void setClientBrowser(Integer clientBrowser) {
    this.clientBrowser = clientBrowser;
  }


  public OriginClientAnalysisOutput clientCrawler(Integer clientCrawler) {
    this.clientCrawler = clientCrawler;
    return this;
  }

  /**
   * Get clientCrawler
   * @return clientCrawler
   */
  @javax.annotation.Nonnull
  public Integer getClientCrawler() {
    return clientCrawler;
  }

  public void setClientCrawler(Integer clientCrawler) {
    this.clientCrawler = clientCrawler;
  }


  public OriginClientAnalysisOutput clientEmail(Integer clientEmail) {
    this.clientEmail = clientEmail;
    return this;
  }

  /**
   * Get clientEmail
   * @return clientEmail
   */
  @javax.annotation.Nonnull
  public Integer getClientEmail() {
    return clientEmail;
  }

  public void setClientEmail(Integer clientEmail) {
    this.clientEmail = clientEmail;
  }


  public OriginClientAnalysisOutput clientLibrary(Integer clientLibrary) {
    this.clientLibrary = clientLibrary;
    return this;
  }

  /**
   * Get clientLibrary
   * @return clientLibrary
   */
  @javax.annotation.Nonnull
  public Integer getClientLibrary() {
    return clientLibrary;
  }

  public void setClientLibrary(Integer clientLibrary) {
    this.clientLibrary = clientLibrary;
  }


  public OriginClientAnalysisOutput clientMobileBrowser(Integer clientMobileBrowser) {
    this.clientMobileBrowser = clientMobileBrowser;
    return this;
  }

  /**
   * Get clientMobileBrowser
   * @return clientMobileBrowser
   */
  @javax.annotation.Nonnull
  public Integer getClientMobileBrowser() {
    return clientMobileBrowser;
  }

  public void setClientMobileBrowser(Integer clientMobileBrowser) {
    this.clientMobileBrowser = clientMobileBrowser;
  }


  public OriginClientAnalysisOutput clientMultimediaPlayer(Integer clientMultimediaPlayer) {
    this.clientMultimediaPlayer = clientMultimediaPlayer;
    return this;
  }

  /**
   * Get clientMultimediaPlayer
   * @return clientMultimediaPlayer
   */
  @javax.annotation.Nonnull
  public Integer getClientMultimediaPlayer() {
    return clientMultimediaPlayer;
  }

  public void setClientMultimediaPlayer(Integer clientMultimediaPlayer) {
    this.clientMultimediaPlayer = clientMultimediaPlayer;
  }


  public OriginClientAnalysisOutput clientOfflineBrowser(Integer clientOfflineBrowser) {
    this.clientOfflineBrowser = clientOfflineBrowser;
    return this;
  }

  /**
   * Get clientOfflineBrowser
   * @return clientOfflineBrowser
   */
  @javax.annotation.Nonnull
  public Integer getClientOfflineBrowser() {
    return clientOfflineBrowser;
  }

  public void setClientOfflineBrowser(Integer clientOfflineBrowser) {
    this.clientOfflineBrowser = clientOfflineBrowser;
  }


  public OriginClientAnalysisOutput clientTotal(Integer clientTotal) {
    this.clientTotal = clientTotal;
    return this;
  }

  /**
   * Get clientTotal
   * @return clientTotal
   */
  @javax.annotation.Nonnull
  public Integer getClientTotal() {
    return clientTotal;
  }

  public void setClientTotal(Integer clientTotal) {
    this.clientTotal = clientTotal;
  }


  public OriginClientAnalysisOutput clientUaAnonymizer(Integer clientUaAnonymizer) {
    this.clientUaAnonymizer = clientUaAnonymizer;
    return this;
  }

  /**
   * Get clientUaAnonymizer
   * @return clientUaAnonymizer
   */
  @javax.annotation.Nonnull
  public Integer getClientUaAnonymizer() {
    return clientUaAnonymizer;
  }

  public void setClientUaAnonymizer(Integer clientUaAnonymizer) {
    this.clientUaAnonymizer = clientUaAnonymizer;
  }


  public OriginClientAnalysisOutput clientUnrecognized(Integer clientUnrecognized) {
    this.clientUnrecognized = clientUnrecognized;
    return this;
  }

  /**
   * Get clientUnrecognized
   * @return clientUnrecognized
   */
  @javax.annotation.Nonnull
  public Integer getClientUnrecognized() {
    return clientUnrecognized;
  }

  public void setClientUnrecognized(Integer clientUnrecognized) {
    this.clientUnrecognized = clientUnrecognized;
  }


  public OriginClientAnalysisOutput clientValidator(Integer clientValidator) {
    this.clientValidator = clientValidator;
    return this;
  }

  /**
   * Get clientValidator
   * @return clientValidator
   */
  @javax.annotation.Nonnull
  public Integer getClientValidator() {
    return clientValidator;
  }

  public void setClientValidator(Integer clientValidator) {
    this.clientValidator = clientValidator;
  }


  public OriginClientAnalysisOutput clientWapBrowser(Integer clientWapBrowser) {
    this.clientWapBrowser = clientWapBrowser;
    return this;
  }

  /**
   * Get clientWapBrowser
   * @return clientWapBrowser
   */
  @javax.annotation.Nonnull
  public Integer getClientWapBrowser() {
    return clientWapBrowser;
  }

  public void setClientWapBrowser(Integer clientWapBrowser) {
    this.clientWapBrowser = clientWapBrowser;
  }


  public OriginClientAnalysisOutput crawlerFeedFetcher(Integer crawlerFeedFetcher) {
    this.crawlerFeedFetcher = crawlerFeedFetcher;
    return this;
  }

  /**
   * Get crawlerFeedFetcher
   * @return crawlerFeedFetcher
   */
  @javax.annotation.Nonnull
  public Integer getCrawlerFeedFetcher() {
    return crawlerFeedFetcher;
  }

  public void setCrawlerFeedFetcher(Integer crawlerFeedFetcher) {
    this.crawlerFeedFetcher = crawlerFeedFetcher;
  }


  public OriginClientAnalysisOutput crawlerLinkChecker(Integer crawlerLinkChecker) {
    this.crawlerLinkChecker = crawlerLinkChecker;
    return this;
  }

  /**
   * Get crawlerLinkChecker
   * @return crawlerLinkChecker
   */
  @javax.annotation.Nonnull
  public Integer getCrawlerLinkChecker() {
    return crawlerLinkChecker;
  }

  public void setCrawlerLinkChecker(Integer crawlerLinkChecker) {
    this.crawlerLinkChecker = crawlerLinkChecker;
  }


  public OriginClientAnalysisOutput crawlerMarketing(Integer crawlerMarketing) {
    this.crawlerMarketing = crawlerMarketing;
    return this;
  }

  /**
   * Get crawlerMarketing
   * @return crawlerMarketing
   */
  @javax.annotation.Nonnull
  public Integer getCrawlerMarketing() {
    return crawlerMarketing;
  }

  public void setCrawlerMarketing(Integer crawlerMarketing) {
    this.crawlerMarketing = crawlerMarketing;
  }


  public OriginClientAnalysisOutput crawlerScreenshotCreator(Integer crawlerScreenshotCreator) {
    this.crawlerScreenshotCreator = crawlerScreenshotCreator;
    return this;
  }

  /**
   * Get crawlerScreenshotCreator
   * @return crawlerScreenshotCreator
   */
  @javax.annotation.Nonnull
  public Integer getCrawlerScreenshotCreator() {
    return crawlerScreenshotCreator;
  }

  public void setCrawlerScreenshotCreator(Integer crawlerScreenshotCreator) {
    this.crawlerScreenshotCreator = crawlerScreenshotCreator;
  }


  public OriginClientAnalysisOutput crawlerSearchEngineBot(Integer crawlerSearchEngineBot) {
    this.crawlerSearchEngineBot = crawlerSearchEngineBot;
    return this;
  }

  /**
   * Get crawlerSearchEngineBot
   * @return crawlerSearchEngineBot
   */
  @javax.annotation.Nonnull
  public Integer getCrawlerSearchEngineBot() {
    return crawlerSearchEngineBot;
  }

  public void setCrawlerSearchEngineBot(Integer crawlerSearchEngineBot) {
    this.crawlerSearchEngineBot = crawlerSearchEngineBot;
  }


  public OriginClientAnalysisOutput crawlerSiteMonitor(Integer crawlerSiteMonitor) {
    this.crawlerSiteMonitor = crawlerSiteMonitor;
    return this;
  }

  /**
   * Get crawlerSiteMonitor
   * @return crawlerSiteMonitor
   */
  @javax.annotation.Nonnull
  public Integer getCrawlerSiteMonitor() {
    return crawlerSiteMonitor;
  }

  public void setCrawlerSiteMonitor(Integer crawlerSiteMonitor) {
    this.crawlerSiteMonitor = crawlerSiteMonitor;
  }


  public OriginClientAnalysisOutput crawlerSpeedTester(Integer crawlerSpeedTester) {
    this.crawlerSpeedTester = crawlerSpeedTester;
    return this;
  }

  /**
   * Get crawlerSpeedTester
   * @return crawlerSpeedTester
   */
  @javax.annotation.Nonnull
  public Integer getCrawlerSpeedTester() {
    return crawlerSpeedTester;
  }

  public void setCrawlerSpeedTester(Integer crawlerSpeedTester) {
    this.crawlerSpeedTester = crawlerSpeedTester;
  }


  public OriginClientAnalysisOutput crawlerTool(Integer crawlerTool) {
    this.crawlerTool = crawlerTool;
    return this;
  }

  /**
   * Get crawlerTool
   * @return crawlerTool
   */
  @javax.annotation.Nonnull
  public Integer getCrawlerTool() {
    return crawlerTool;
  }

  public void setCrawlerTool(Integer crawlerTool) {
    this.crawlerTool = crawlerTool;
  }


  public OriginClientAnalysisOutput crawlerTotal(Integer crawlerTotal) {
    this.crawlerTotal = crawlerTotal;
    return this;
  }

  /**
   * Get crawlerTotal
   * @return crawlerTotal
   */
  @javax.annotation.Nonnull
  public Integer getCrawlerTotal() {
    return crawlerTotal;
  }

  public void setCrawlerTotal(Integer crawlerTotal) {
    this.crawlerTotal = crawlerTotal;
  }


  public OriginClientAnalysisOutput crawlerUncategorised(Integer crawlerUncategorised) {
    this.crawlerUncategorised = crawlerUncategorised;
    return this;
  }

  /**
   * Get crawlerUncategorised
   * @return crawlerUncategorised
   */
  @javax.annotation.Nonnull
  public Integer getCrawlerUncategorised() {
    return crawlerUncategorised;
  }

  public void setCrawlerUncategorised(Integer crawlerUncategorised) {
    this.crawlerUncategorised = crawlerUncategorised;
  }


  public OriginClientAnalysisOutput crawlerUnrecognized(Integer crawlerUnrecognized) {
    this.crawlerUnrecognized = crawlerUnrecognized;
    return this;
  }

  /**
   * Get crawlerUnrecognized
   * @return crawlerUnrecognized
   */
  @javax.annotation.Nonnull
  public Integer getCrawlerUnrecognized() {
    return crawlerUnrecognized;
  }

  public void setCrawlerUnrecognized(Integer crawlerUnrecognized) {
    this.crawlerUnrecognized = crawlerUnrecognized;
  }


  public OriginClientAnalysisOutput crawlerVirusScanner(Integer crawlerVirusScanner) {
    this.crawlerVirusScanner = crawlerVirusScanner;
    return this;
  }

  /**
   * Get crawlerVirusScanner
   * @return crawlerVirusScanner
   */
  @javax.annotation.Nonnull
  public Integer getCrawlerVirusScanner() {
    return crawlerVirusScanner;
  }

  public void setCrawlerVirusScanner(Integer crawlerVirusScanner) {
    this.crawlerVirusScanner = crawlerVirusScanner;
  }


  public OriginClientAnalysisOutput crawlerVulnerabilityScanner(Integer crawlerVulnerabilityScanner) {
    this.crawlerVulnerabilityScanner = crawlerVulnerabilityScanner;
    return this;
  }

  /**
   * Get crawlerVulnerabilityScanner
   * @return crawlerVulnerabilityScanner
   */
  @javax.annotation.Nonnull
  public Integer getCrawlerVulnerabilityScanner() {
    return crawlerVulnerabilityScanner;
  }

  public void setCrawlerVulnerabilityScanner(Integer crawlerVulnerabilityScanner) {
    this.crawlerVulnerabilityScanner = crawlerVulnerabilityScanner;
  }


  public OriginClientAnalysisOutput crawlerWebScraper(Integer crawlerWebScraper) {
    this.crawlerWebScraper = crawlerWebScraper;
    return this;
  }

  /**
   * Get crawlerWebScraper
   * @return crawlerWebScraper
   */
  @javax.annotation.Nonnull
  public Integer getCrawlerWebScraper() {
    return crawlerWebScraper;
  }

  public void setCrawlerWebScraper(Integer crawlerWebScraper) {
    this.crawlerWebScraper = crawlerWebScraper;
  }


  public OriginClientAnalysisOutput timestamp(Integer timestamp) {
    this.timestamp = timestamp;
    return this;
  }

  /**
   * Get timestamp
   * @return timestamp
   */
  @javax.annotation.Nonnull
  public Integer getTimestamp() {
    return timestamp;
  }

  public void setTimestamp(Integer timestamp) {
    this.timestamp = timestamp;
  }


  public OriginClientAnalysisOutput total(Integer total) {
    this.total = total;
    return this;
  }

  /**
   * Get total
   * @return total
   */
  @javax.annotation.Nonnull
  public Integer getTotal() {
    return total;
  }

  public void setTotal(Integer total) {
    this.total = total;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OriginClientAnalysisOutput originClientAnalysisOutput = (OriginClientAnalysisOutput) o;
    return Objects.equals(this.clientBrowser, originClientAnalysisOutput.clientBrowser) &&
        Objects.equals(this.clientCrawler, originClientAnalysisOutput.clientCrawler) &&
        Objects.equals(this.clientEmail, originClientAnalysisOutput.clientEmail) &&
        Objects.equals(this.clientLibrary, originClientAnalysisOutput.clientLibrary) &&
        Objects.equals(this.clientMobileBrowser, originClientAnalysisOutput.clientMobileBrowser) &&
        Objects.equals(this.clientMultimediaPlayer, originClientAnalysisOutput.clientMultimediaPlayer) &&
        Objects.equals(this.clientOfflineBrowser, originClientAnalysisOutput.clientOfflineBrowser) &&
        Objects.equals(this.clientTotal, originClientAnalysisOutput.clientTotal) &&
        Objects.equals(this.clientUaAnonymizer, originClientAnalysisOutput.clientUaAnonymizer) &&
        Objects.equals(this.clientUnrecognized, originClientAnalysisOutput.clientUnrecognized) &&
        Objects.equals(this.clientValidator, originClientAnalysisOutput.clientValidator) &&
        Objects.equals(this.clientWapBrowser, originClientAnalysisOutput.clientWapBrowser) &&
        Objects.equals(this.crawlerFeedFetcher, originClientAnalysisOutput.crawlerFeedFetcher) &&
        Objects.equals(this.crawlerLinkChecker, originClientAnalysisOutput.crawlerLinkChecker) &&
        Objects.equals(this.crawlerMarketing, originClientAnalysisOutput.crawlerMarketing) &&
        Objects.equals(this.crawlerScreenshotCreator, originClientAnalysisOutput.crawlerScreenshotCreator) &&
        Objects.equals(this.crawlerSearchEngineBot, originClientAnalysisOutput.crawlerSearchEngineBot) &&
        Objects.equals(this.crawlerSiteMonitor, originClientAnalysisOutput.crawlerSiteMonitor) &&
        Objects.equals(this.crawlerSpeedTester, originClientAnalysisOutput.crawlerSpeedTester) &&
        Objects.equals(this.crawlerTool, originClientAnalysisOutput.crawlerTool) &&
        Objects.equals(this.crawlerTotal, originClientAnalysisOutput.crawlerTotal) &&
        Objects.equals(this.crawlerUncategorised, originClientAnalysisOutput.crawlerUncategorised) &&
        Objects.equals(this.crawlerUnrecognized, originClientAnalysisOutput.crawlerUnrecognized) &&
        Objects.equals(this.crawlerVirusScanner, originClientAnalysisOutput.crawlerVirusScanner) &&
        Objects.equals(this.crawlerVulnerabilityScanner, originClientAnalysisOutput.crawlerVulnerabilityScanner) &&
        Objects.equals(this.crawlerWebScraper, originClientAnalysisOutput.crawlerWebScraper) &&
        Objects.equals(this.timestamp, originClientAnalysisOutput.timestamp) &&
        Objects.equals(this.total, originClientAnalysisOutput.total);
  }

  @Override
  public int hashCode() {
    return Objects.hash(clientBrowser, clientCrawler, clientEmail, clientLibrary, clientMobileBrowser, clientMultimediaPlayer, clientOfflineBrowser, clientTotal, clientUaAnonymizer, clientUnrecognized, clientValidator, clientWapBrowser, crawlerFeedFetcher, crawlerLinkChecker, crawlerMarketing, crawlerScreenshotCreator, crawlerSearchEngineBot, crawlerSiteMonitor, crawlerSpeedTester, crawlerTool, crawlerTotal, crawlerUncategorised, crawlerUnrecognized, crawlerVirusScanner, crawlerVulnerabilityScanner, crawlerWebScraper, timestamp, total);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OriginClientAnalysisOutput {\n");
    sb.append("    clientBrowser: ").append(toIndentedString(clientBrowser)).append("\n");
    sb.append("    clientCrawler: ").append(toIndentedString(clientCrawler)).append("\n");
    sb.append("    clientEmail: ").append(toIndentedString(clientEmail)).append("\n");
    sb.append("    clientLibrary: ").append(toIndentedString(clientLibrary)).append("\n");
    sb.append("    clientMobileBrowser: ").append(toIndentedString(clientMobileBrowser)).append("\n");
    sb.append("    clientMultimediaPlayer: ").append(toIndentedString(clientMultimediaPlayer)).append("\n");
    sb.append("    clientOfflineBrowser: ").append(toIndentedString(clientOfflineBrowser)).append("\n");
    sb.append("    clientTotal: ").append(toIndentedString(clientTotal)).append("\n");
    sb.append("    clientUaAnonymizer: ").append(toIndentedString(clientUaAnonymizer)).append("\n");
    sb.append("    clientUnrecognized: ").append(toIndentedString(clientUnrecognized)).append("\n");
    sb.append("    clientValidator: ").append(toIndentedString(clientValidator)).append("\n");
    sb.append("    clientWapBrowser: ").append(toIndentedString(clientWapBrowser)).append("\n");
    sb.append("    crawlerFeedFetcher: ").append(toIndentedString(crawlerFeedFetcher)).append("\n");
    sb.append("    crawlerLinkChecker: ").append(toIndentedString(crawlerLinkChecker)).append("\n");
    sb.append("    crawlerMarketing: ").append(toIndentedString(crawlerMarketing)).append("\n");
    sb.append("    crawlerScreenshotCreator: ").append(toIndentedString(crawlerScreenshotCreator)).append("\n");
    sb.append("    crawlerSearchEngineBot: ").append(toIndentedString(crawlerSearchEngineBot)).append("\n");
    sb.append("    crawlerSiteMonitor: ").append(toIndentedString(crawlerSiteMonitor)).append("\n");
    sb.append("    crawlerSpeedTester: ").append(toIndentedString(crawlerSpeedTester)).append("\n");
    sb.append("    crawlerTool: ").append(toIndentedString(crawlerTool)).append("\n");
    sb.append("    crawlerTotal: ").append(toIndentedString(crawlerTotal)).append("\n");
    sb.append("    crawlerUncategorised: ").append(toIndentedString(crawlerUncategorised)).append("\n");
    sb.append("    crawlerUnrecognized: ").append(toIndentedString(crawlerUnrecognized)).append("\n");
    sb.append("    crawlerVirusScanner: ").append(toIndentedString(crawlerVirusScanner)).append("\n");
    sb.append("    crawlerVulnerabilityScanner: ").append(toIndentedString(crawlerVulnerabilityScanner)).append("\n");
    sb.append("    crawlerWebScraper: ").append(toIndentedString(crawlerWebScraper)).append("\n");
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("    total: ").append(toIndentedString(total)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("client_browser");
    openapiFields.add("client_crawler");
    openapiFields.add("client_email");
    openapiFields.add("client_library");
    openapiFields.add("client_mobile_browser");
    openapiFields.add("client_multimedia_player");
    openapiFields.add("client_offline_browser");
    openapiFields.add("client_total");
    openapiFields.add("client_ua_anonymizer");
    openapiFields.add("client_unrecognized");
    openapiFields.add("client_validator");
    openapiFields.add("client_wap_browser");
    openapiFields.add("crawler_feed_fetcher");
    openapiFields.add("crawler_link_checker");
    openapiFields.add("crawler_marketing");
    openapiFields.add("crawler_screenshot_creator");
    openapiFields.add("crawler_search_engine_bot");
    openapiFields.add("crawler_site_monitor");
    openapiFields.add("crawler_speed_tester");
    openapiFields.add("crawler_tool");
    openapiFields.add("crawler_total");
    openapiFields.add("crawler_uncategorised");
    openapiFields.add("crawler_unrecognized");
    openapiFields.add("crawler_virus_scanner");
    openapiFields.add("crawler_vulnerability_scanner");
    openapiFields.add("crawler_web_scraper");
    openapiFields.add("timestamp");
    openapiFields.add("total");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("client_browser");
    openapiRequiredFields.add("client_crawler");
    openapiRequiredFields.add("client_email");
    openapiRequiredFields.add("client_library");
    openapiRequiredFields.add("client_mobile_browser");
    openapiRequiredFields.add("client_multimedia_player");
    openapiRequiredFields.add("client_offline_browser");
    openapiRequiredFields.add("client_total");
    openapiRequiredFields.add("client_ua_anonymizer");
    openapiRequiredFields.add("client_unrecognized");
    openapiRequiredFields.add("client_validator");
    openapiRequiredFields.add("client_wap_browser");
    openapiRequiredFields.add("crawler_feed_fetcher");
    openapiRequiredFields.add("crawler_link_checker");
    openapiRequiredFields.add("crawler_marketing");
    openapiRequiredFields.add("crawler_screenshot_creator");
    openapiRequiredFields.add("crawler_search_engine_bot");
    openapiRequiredFields.add("crawler_site_monitor");
    openapiRequiredFields.add("crawler_speed_tester");
    openapiRequiredFields.add("crawler_tool");
    openapiRequiredFields.add("crawler_total");
    openapiRequiredFields.add("crawler_uncategorised");
    openapiRequiredFields.add("crawler_unrecognized");
    openapiRequiredFields.add("crawler_virus_scanner");
    openapiRequiredFields.add("crawler_vulnerability_scanner");
    openapiRequiredFields.add("crawler_web_scraper");
    openapiRequiredFields.add("timestamp");
    openapiRequiredFields.add("total");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to OriginClientAnalysisOutput
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!OriginClientAnalysisOutput.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in OriginClientAnalysisOutput is not found in the empty JSON string", OriginClientAnalysisOutput.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!OriginClientAnalysisOutput.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `OriginClientAnalysisOutput` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : OriginClientAnalysisOutput.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!OriginClientAnalysisOutput.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'OriginClientAnalysisOutput' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<OriginClientAnalysisOutput> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(OriginClientAnalysisOutput.class));

       return (TypeAdapter<T>) new TypeAdapter<OriginClientAnalysisOutput>() {
           @Override
           public void write(JsonWriter out, OriginClientAnalysisOutput value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public OriginClientAnalysisOutput read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of OriginClientAnalysisOutput given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of OriginClientAnalysisOutput
   * @throws IOException if the JSON string is invalid with respect to OriginClientAnalysisOutput
   */
  public static OriginClientAnalysisOutput fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, OriginClientAnalysisOutput.class);
  }

  /**
   * Convert an instance of OriginClientAnalysisOutput to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

