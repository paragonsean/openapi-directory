/*
 * ThreatJammer.com User API
 *  The public API open to the users. [Read the docs and learn more.](https://threatjammer.com/docs).  ## General information  ### Description Threat Jammer supports two end-user REST APIs: the User API and the Report API. The end-user uses the User API to interact with the different databases, heuristics, and machine learning processes. Devices use the Report API to interact with Threat Jammer. This document will explain how to use the User API and interact with the different services, create a token, interpret the quota information, and create the HTTP request to interact with the User API.  ### Authentication The API is protected by a **Bearer authentication** schema. **Bearer authentication** (also called **token authentication**) is an HTTP authentication scheme that involves security tokens called bearer tokens. It is used to authenticate the user. All the different endpoints expect a `Bearer` token in the `Authorization` header.  Example:  ``` curl -X 'GET'   'https://dublin.api.threatjammer.com/test'   -H 'accept: application/json'   -H 'Authorization: Bearer YOUR_API_KEY' ```  You can obtain a token after registering on the [ThreatJammer.com](https://threatjammer.com) website for free.   ### Region specific tokens All the `Bearer` tokens contain information about the authorized region. The developers have to use a token created for the region they want to use. A token used in a different region will return a `401 Unauthorized` error.  ### Global errors  The API will return the following permanent errors: - a `401 Unauthorized` error if the token is not valid, or does not belong to the region. - a `401 Unauthorized` error if the token does not exist. - a `401 Unauthorized` error if the token is malformed. - a `403 Forbidden` error if the subscription level is not enough. Some endpoints are only available for paid subscription levels.  And these temporary errors: - a `429 Too Many Requests` error if the quota is exceeded (see below).  ### Quota limits  **Every request to the User API will consume one (1) quota point.**  The API has two rate limiting processes: - a quota limit of **5000** requests per month for the `FREE` account. The limit is reset every month. - a quota limit of **10** requests per minute for the `FREE` account. The limit is reset every minute and implements a sliding window mechanism.  
 *
 * The version of the OpenAPI document: 1.2.27
 * Contact: support@threatjammer.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * BodyDeleteTokenV1OriginTokenDelete
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:53:58.480875-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class BodyDeleteTokenV1OriginTokenDelete {
  public static final String SERIALIZED_NAME_ORIGIN_TOKEN_ID = "origin_token_id";
  @SerializedName(SERIALIZED_NAME_ORIGIN_TOKEN_ID)
  private String originTokenId;

  public BodyDeleteTokenV1OriginTokenDelete() {
  }

  public BodyDeleteTokenV1OriginTokenDelete originTokenId(String originTokenId) {
    this.originTokenId = originTokenId;
    return this;
  }

  /**
   * Get originTokenId
   * @return originTokenId
   */
  @javax.annotation.Nonnull
  public String getOriginTokenId() {
    return originTokenId;
  }

  public void setOriginTokenId(String originTokenId) {
    this.originTokenId = originTokenId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BodyDeleteTokenV1OriginTokenDelete bodyDeleteTokenV1OriginTokenDelete = (BodyDeleteTokenV1OriginTokenDelete) o;
    return Objects.equals(this.originTokenId, bodyDeleteTokenV1OriginTokenDelete.originTokenId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(originTokenId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BodyDeleteTokenV1OriginTokenDelete {\n");
    sb.append("    originTokenId: ").append(toIndentedString(originTokenId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("origin_token_id");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("origin_token_id");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to BodyDeleteTokenV1OriginTokenDelete
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!BodyDeleteTokenV1OriginTokenDelete.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in BodyDeleteTokenV1OriginTokenDelete is not found in the empty JSON string", BodyDeleteTokenV1OriginTokenDelete.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!BodyDeleteTokenV1OriginTokenDelete.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `BodyDeleteTokenV1OriginTokenDelete` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : BodyDeleteTokenV1OriginTokenDelete.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("origin_token_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `origin_token_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("origin_token_id").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!BodyDeleteTokenV1OriginTokenDelete.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'BodyDeleteTokenV1OriginTokenDelete' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<BodyDeleteTokenV1OriginTokenDelete> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(BodyDeleteTokenV1OriginTokenDelete.class));

       return (TypeAdapter<T>) new TypeAdapter<BodyDeleteTokenV1OriginTokenDelete>() {
           @Override
           public void write(JsonWriter out, BodyDeleteTokenV1OriginTokenDelete value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public BodyDeleteTokenV1OriginTokenDelete read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of BodyDeleteTokenV1OriginTokenDelete given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of BodyDeleteTokenV1OriginTokenDelete
   * @throws IOException if the JSON string is invalid with respect to BodyDeleteTokenV1OriginTokenDelete
   */
  public static BodyDeleteTokenV1OriginTokenDelete fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, BodyDeleteTokenV1OriginTokenDelete.class);
  }

  /**
   * Convert an instance of BodyDeleteTokenV1OriginTokenDelete to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

