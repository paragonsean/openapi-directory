/*
 * ThreatJammer.com User API
 *  The public API open to the users. [Read the docs and learn more.](https://threatjammer.com/docs).  ## General information  ### Description Threat Jammer supports two end-user REST APIs: the User API and the Report API. The end-user uses the User API to interact with the different databases, heuristics, and machine learning processes. Devices use the Report API to interact with Threat Jammer. This document will explain how to use the User API and interact with the different services, create a token, interpret the quota information, and create the HTTP request to interact with the User API.  ### Authentication The API is protected by a **Bearer authentication** schema. **Bearer authentication** (also called **token authentication**) is an HTTP authentication scheme that involves security tokens called bearer tokens. It is used to authenticate the user. All the different endpoints expect a `Bearer` token in the `Authorization` header.  Example:  ``` curl -X 'GET'   'https://dublin.api.threatjammer.com/test'   -H 'accept: application/json'   -H 'Authorization: Bearer YOUR_API_KEY' ```  You can obtain a token after registering on the [ThreatJammer.com](https://threatjammer.com) website for free.   ### Region specific tokens All the `Bearer` tokens contain information about the authorized region. The developers have to use a token created for the region they want to use. A token used in a different region will return a `401 Unauthorized` error.  ### Global errors  The API will return the following permanent errors: - a `401 Unauthorized` error if the token is not valid, or does not belong to the region. - a `401 Unauthorized` error if the token does not exist. - a `401 Unauthorized` error if the token is malformed. - a `403 Forbidden` error if the subscription level is not enough. Some endpoints are only available for paid subscription levels.  And these temporary errors: - a `429 Too Many Requests` error if the quota is exceeded (see below).  ### Quota limits  **Every request to the User API will consume one (1) quota point.**  The API has two rate limiting processes: - a quota limit of **5000** requests per month for the `FREE` account. The limit is reset every month. - a quota limit of **10** requests per minute for the `FREE` account. The limit is reset every minute and implements a sliding window mechanism.  
 *
 * The version of the OpenAPI document: 1.2.27
 * Contact: support@threatjammer.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ActivityCollectionOutput;
import org.openapitools.client.model.HTTPValidationError;
import org.openapitools.client.model.TokenOutput;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AuthenticationTokenManagementInThisRegionApi
 */
@Disabled
public class AuthenticationTokenManagementInThisRegionApiTest {

    private final AuthenticationTokenManagementInThisRegionApi api = new AuthenticationTokenManagementInThisRegionApi();

    /**
     * Get the activity information of the token in the region.
     *
     * ### What Obtain the list of all the activity events of the current user in the selected region. The purpose of this function is to show what actions performed a user with the specific token.  ### Parameters The following pagination parameters are required as query string parameters: - &#x60;&#x60;page&#x60;&#x60;: (Optional) the page number to retrieve. The first page is 1. Default is 1. - &#x60;&#x60;page_size&#x60;&#x60;: (Optional) the number of items per page. Default is 20.  The token is obtained automatically from the &#x60;Bearer&#x60; in the header.  ### Result The result is a JSON object with the following fields: - &#x60;&#x60;self&#x60;&#x60;: the URI to all activities of the token. - &#x60;&#x60;activities&#x60;&#x60;: a list of activities performed by the user with the token.     - &#x60;&#x60;self&#x60;&#x60;: the URI to individual activity information.     - &#x60;&#x60;event&#x60;&#x60;: ID of the reference of the event type.     - &#x60;&#x60;description&#x60;&#x60;: Human readable description of the event.     - &#x60;&#x60;data&#x60;&#x60;: the payload of the event. It can be empty.     - &#x60;&#x60;source&#x60;&#x60;: A JSON object with the following fields:         - &#x60;&#x60;address&#x60;&#x60;: the IP address of the client.         - &#x60;&#x60;ua_string&#x60;&#x60;: the user agent string of the client.         - &#x60;&#x60;status_code&#x60;&#x60;: the HTTP status code of the response.         - &#x60;&#x60;uri&#x60;&#x60;: the URI of the request.         - &#x60;&#x60;body&#x60;&#x60;: the body of the request.         - &#x60;&#x60;method&#x60;&#x60;: the HTTP method of the request.     - &#x60;&#x60;created_at&#x60;&#x60;: the date and time when the token was created in UNIX timestamp in milliseconds.  ### Errors It will return the API Global errors described in the API description.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void queryTokenActivityV1TokenActivityGetTest() throws ApiException {
        Integer page = null;
        Integer pageSize = null;
        ActivityCollectionOutput response = api.queryTokenActivityV1TokenActivityGet(page, pageSize);
        // TODO: test validations
    }

    /**
     * Get the information of the user&#39;s token in the region.
     *
     * ### What Obtain the list of all the token attributes of the current user in the selected region. The purpose of this function is to show the current values of the user&#39;s quota.  ### Parameters No parameters are required. The token is obtained automatically from the &#x60;Bearer&#x60; in the header.  ### Result The result is a JSON object with the following fields: - &#x60;&#x60;self&#x60;&#x60;: the URI to individual token information. - &#x60;&#x60;region_id&#x60;&#x60;: the name of the region where the token is valid. - &#x60;&#x60;last_month_bucket_init_value&#x60;&#x60;: the initial value of the monthly bucket. - &#x60;&#x60;last_month_bucket_value&#x60;&#x60;: the current value of consumed quota in the monthly bucket. - &#x60;&#x60;last_month_bucket_refresh&#x60;&#x60;: Unix timestamp in milliseconds of the next monthly bucket reset. - &#x60;&#x60;last_minute_bucket_init_value&#x60;&#x60;: the initial value of the per minute bucket. - &#x60;&#x60;last_minute_bucket_value&#x60;&#x60;: the current value of consumed quota in the per minute bucket. - &#x60;&#x60;last_minute_bucket_refresh&#x60;&#x60;: Unix timestamp in milliseconds of the next per minute bucket reset. - &#x60;&#x60;last_minute_bucket_refill_ratio&#x60;&#x60;: the number of tokens to add every second to the per minute bucket. - &#x60;&#x60;status&#x60;&#x60;: the status of the token. The only allowed value is &#x60;&#x60;ENABLED&#x60;&#x60;. - &#x60;&#x60;created_at&#x60;&#x60;: the date and time when the token was created in UNIX timestamp in milliseconds. - &#x60;&#x60;updated_at&#x60;&#x60;: the date and time when the token was last updated in UNIX timestamp in milliseconds.  ### Errors It will return the API Global errors described in the API description.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void queryTokenInfoV1TokenGetTest() throws ApiException {
        TokenOutput response = api.queryTokenInfoV1TokenGet();
        // TODO: test validations
    }

}
