/*
 * ThreatJammer.com User API
 *  The public API open to the users. [Read the docs and learn more.](https://threatjammer.com/docs).  ## General information  ### Description Threat Jammer supports two end-user REST APIs: the User API and the Report API. The end-user uses the User API to interact with the different databases, heuristics, and machine learning processes. Devices use the Report API to interact with Threat Jammer. This document will explain how to use the User API and interact with the different services, create a token, interpret the quota information, and create the HTTP request to interact with the User API.  ### Authentication The API is protected by a **Bearer authentication** schema. **Bearer authentication** (also called **token authentication**) is an HTTP authentication scheme that involves security tokens called bearer tokens. It is used to authenticate the user. All the different endpoints expect a `Bearer` token in the `Authorization` header.  Example:  ``` curl -X 'GET'   'https://dublin.api.threatjammer.com/test'   -H 'accept: application/json'   -H 'Authorization: Bearer YOUR_API_KEY' ```  You can obtain a token after registering on the [ThreatJammer.com](https://threatjammer.com) website for free.   ### Region specific tokens All the `Bearer` tokens contain information about the authorized region. The developers have to use a token created for the region they want to use. A token used in a different region will return a `401 Unauthorized` error.  ### Global errors  The API will return the following permanent errors: - a `401 Unauthorized` error if the token is not valid, or does not belong to the region. - a `401 Unauthorized` error if the token does not exist. - a `401 Unauthorized` error if the token is malformed. - a `403 Forbidden` error if the subscription level is not enough. Some endpoints are only available for paid subscription levels.  And these temporary errors: - a `429 Too Many Requests` error if the quota is exceeded (see below).  ### Quota limits  **Every request to the User API will consume one (1) quota point.**  The API has two rate limiting processes: - a quota limit of **5000** requests per month for the `FREE` account. The limit is reset every month. - a quota limit of **10** requests per minute for the `FREE` account. The limit is reset every minute and implements a sliding window mechanism.  
 *
 * The version of the OpenAPI document: 1.2.27
 * Contact: support@threatjammer.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.HTTPValidationError;
import org.openapitools.client.model.IPLogCollectionOutput;
import org.openapitools.client.model.IPLogOutput;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DataLoggingApi
 */
@Disabled
public class DataLoggingApiTest {

    private final DataLoggingApi api = new DataLoggingApi();

    /**
     * Get a log event.
     *
     * ### What Obtain the full detail of a specific log change.  ### Parameters The endpoint accepts only the following parameters in the path: - &#x60;&#x60;logchange_id&#x60;&#x60;: (Mandatory) A unique integer of the change event log.  ### Result The result is a JSON object with the following structure: - &#x60;&#x60;self&#x60;&#x60;: the URI of the API call - &#x60;&#x60;cidr&#x60;&#x60;: The CIDR affected by the change. - &#x60;&#x60;score&#x60;&#x60;: The score of the IP address when the event happened. It ranges from 0 to 99. - &#x60;&#x60;risk&#x60;&#x60;: The risk of the IP address when the event happened. The allowed values are: LOW, MEDIUM, HIGH. It&#39;s a human readable representation of the score. - &#x60;&#x60;dataset&#x60;&#x60;: The URI of the dataset where the change was logged. - &#x60;&#x60;source&#x60;&#x60;: The URI of the data source where the change was found. - &#x60;&#x60;lapse&#x60;&#x60;: The time elapsed between the event found and the moment the source was queried. The possible values are: 1H, 6H, 12H, 1D, 7D, 30D, 90D, 180D, 365D. - &#x60;&#x60;action&#x60;&#x60;: The action that was performed on the IP address. The allowed values are: ADD, DELETE. - &#x60;&#x60;timestamp&#x60;&#x60;: The UNIX timestamp in milliseconds when the change was logged.   ### Errors The endpoint will return the following errors: - a &#x60;404 Not Found&#x60; error if there is no event in the log with the &#x60;&#x60;logchange_ID&#x60;&#x60; given. - a &#x60;422 Unprocessable Entity&#x60; error if the &#x60;&#x60;logchange_ID&#x60;&#x60; is malformed.  It will also return the API Global errors described in the API description.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void logChangeIdV1LogIpIdLogchangeIdGetTest() throws ApiException {
        Integer logchangeId = null;
        IPLogOutput response = api.logChangeIdV1LogIpIdLogchangeIdGet(logchangeId);
        // TODO: test validations
    }

    /**
     * Get the changes logged in the different datasets of an IP address.
     *
     * ### What Obtain a list of changes logged in the different datasets of the IP address given.  ### Parameters The endpoint accepts the following parameters in the path: - &#x60;&#x60;ip_address&#x60;&#x60;: (Mandatory) The public IPv4 or IPv6 addresses to be queried.  The endpoint accepts the following parameters in the query string: - &#x60;&#x60;dataset&#x60;&#x60;: (Optional) Name of the dataset to filter the query. If not given, then all datasets are queried. If given, then only the changes logged in the given dataset are returned. The list of datasets is obtained from the &#x60;&#x60;/v1/dataset/ip&#x60;&#x60; endpoint. - &#x60;&#x60;logged_after&#x60;&#x60;: (Optional) The UNIX timestamp in milliseconds of the earliest date to be included in the query. If not given, then the earliest date is the date of the first change logged in the dataset.   ### Result The result is a JSON object with the following structure: - &#x60;&#x60;self&#x60;&#x60;: the URI of the API call - &#x60;&#x60;logs&#x60;&#x60;: The list of log changes. Each element of the list is a JSON object of a specific log change with the structure described in the endpoint &#x60;&#x60;/v1/log/ip/id/logchange_id&#x60;&#x60;. ### Errors The endpoint will return the following errors: - a &#x60;400 Bad Request&#x60; error if the IP address is not public. - a &#x60;400 Bad Request&#x60; error if the timestamp is in the future. - a &#x60;400 Bad Request&#x60; error if the dataset is not a string that can have numbers, upper and lower case letters, and underscores. - a &#x60;404 Not Found&#x60; error if the dataset was not found. - a &#x60;422 Unprocessable Entity&#x60; error if the IP address is malformed.  It will also return the API Global errors described in the API description.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void logchangesIpV1LogIpIpAddressGetTest() throws ApiException {
        String ipAddress = null;
        String dataset = null;
        Integer loggedAfter = null;
        IPLogCollectionOutput response = api.logchangesIpV1LogIpIpAddressGet(ipAddress, dataset, loggedAfter);
        // TODO: test validations
    }

}
