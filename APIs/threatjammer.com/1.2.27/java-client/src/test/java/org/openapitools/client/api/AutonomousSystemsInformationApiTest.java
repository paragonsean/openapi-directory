/*
 * ThreatJammer.com User API
 *  The public API open to the users. [Read the docs and learn more.](https://threatjammer.com/docs).  ## General information  ### Description Threat Jammer supports two end-user REST APIs: the User API and the Report API. The end-user uses the User API to interact with the different databases, heuristics, and machine learning processes. Devices use the Report API to interact with Threat Jammer. This document will explain how to use the User API and interact with the different services, create a token, interpret the quota information, and create the HTTP request to interact with the User API.  ### Authentication The API is protected by a **Bearer authentication** schema. **Bearer authentication** (also called **token authentication**) is an HTTP authentication scheme that involves security tokens called bearer tokens. It is used to authenticate the user. All the different endpoints expect a `Bearer` token in the `Authorization` header.  Example:  ``` curl -X 'GET'   'https://dublin.api.threatjammer.com/test'   -H 'accept: application/json'   -H 'Authorization: Bearer YOUR_API_KEY' ```  You can obtain a token after registering on the [ThreatJammer.com](https://threatjammer.com) website for free.   ### Region specific tokens All the `Bearer` tokens contain information about the authorized region. The developers have to use a token created for the region they want to use. A token used in a different region will return a `401 Unauthorized` error.  ### Global errors  The API will return the following permanent errors: - a `401 Unauthorized` error if the token is not valid, or does not belong to the region. - a `401 Unauthorized` error if the token does not exist. - a `401 Unauthorized` error if the token is malformed. - a `403 Forbidden` error if the subscription level is not enough. Some endpoints are only available for paid subscription levels.  And these temporary errors: - a `429 Too Many Requests` error if the quota is exceeded (see below).  ### Quota limits  **Every request to the User API will consume one (1) quota point.**  The API has two rate limiting processes: - a quota limit of **5000** requests per month for the `FREE` account. The limit is reset every month. - a quota limit of **10** requests per minute for the `FREE` account. The limit is reset every minute and implements a sliding window mechanism.  
 *
 * The version of the OpenAPI document: 1.2.27
 * Contact: support@threatjammer.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AutonomousSystemOutput;
import org.openapitools.client.model.AutonomousSystemPrefixOutput;
import org.openapitools.client.model.AutonomousSystemPrefixesOutput;
import org.openapitools.client.model.AutonomousSystemRegistryOutput;
import org.openapitools.client.model.AutonomousSystemStatusOutput;
import org.openapitools.client.model.BodyQueryAsnPrefixInformationV1AsnPrefixPost;
import org.openapitools.client.model.HTTPValidationError;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AutonomousSystemsInformationApi
 */
@Disabled
public class AutonomousSystemsInformationApiTest {

    private final AutonomousSystemsInformationApi api = new AutonomousSystemsInformationApi();

    /**
     * Get the IPv4 or IPv6 prefix of the CIDR given.
     *
     * ### What Obtain the IPv4 or IPv6 prefix and the Autonomous System information of the CIDR passed in the body as a POST method. This endpoint works around the problem of passing &#39;/&#39; addresses in the URI.  ### Parameters The endpoint accepts only the following parameter in the body as a JSON object: - &#x60;&#x60;prefix&#x60;&#x60;: (Mandatory) The CIDR v4 or v6 to be queried.  ### Result The result is a JSON object with the following structure: - &#x60;&#x60;self&#x60;&#x60;: the URI to individual IPv4 prefix. - &#x60;&#x60;asn&#x60;&#x60;: the URI to query the full details of the ASN. - &#x60;&#x60;object_type&#x60;&#x60;: the type of the prefix. The allowed values are: IPv4 or IPv6. - &#x60;&#x60;maintainer&#x60;&#x60;: the information about the maintainer of this prefix in the registry. - &#x60;&#x60;description&#x60;&#x60;: the description of the prefix as registered in the registry. - &#x60;&#x60;registry_date&#x60;&#x60;: the date of registration of the prefix in the registry. The format is YYYY-MM-DD. - &#x60;&#x60;registry_status&#x60;&#x60;: the URI of the status of the prefix as stored in the registry. - &#x60;&#x60;score&#x60;&#x60;: The risk score of the prefix. It ranges from 0 to 99. - &#x60;&#x60;risk&#x60;&#x60;: The risk of the prefix. The allowed values are: LOW, MEDIUM, HIGH. It&#39;s a human readable representation of the score.  ### Errors The endpoint will return the following errors: - a &#x60;404 Not Found&#x60; error if the prefix information was not found. - a &#x60;422 Unprocessable Entity&#x60; error if the CIDR is malformed.  It will also return the API Global errors described in the API description.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void queryAsnPrefixInformationV1AsnPrefixPostTest() throws ApiException {
        BodyQueryAsnPrefixInformationV1AsnPrefixPost bodyQueryAsnPrefixInformationV1AsnPrefixPost = null;
        AutonomousSystemPrefixOutput response = api.queryAsnPrefixInformationV1AsnPrefixPost(bodyQueryAsnPrefixInformationV1AsnPrefixPost);
        // TODO: test validations
    }

    /**
     * Get the list of IPv4 and IPv6 prefixes of the AS number given.
     *
     * ### What Obtain the full list of IPv4 and IPv6 prefixes of the Autonomous System Number (ASN) passed as a parameter.  ### Parameters The endpoint accepts only the following parameter in the path: - &#x60;&#x60;number&#x60;&#x60;: (Mandatory) The ASN number to be queried.  ### Result The result is a JSON object with the following structure: - &#x60;&#x60;self&#x60;&#x60;: the URI of the API call - &#x60;&#x60;asn&#x60;&#x60;: the URI to query the full details of the ASN. - &#x60;&#x60;prefixes_v4&#x60;&#x60;: the list of IPv4 prefixes that belong to the ASN. Each element of the list is a JSON object with the following structure:     - &#x60;&#x60;self&#x60;&#x60;: the URI to individual IPv4 prefix.     - &#x60;&#x60;asn&#x60;&#x60;: the URI to query the full details of the ASN.     - &#x60;&#x60;object_type&#x60;&#x60;: the type of the prefix. The allowed values are: IPv4.     - &#x60;&#x60;maintainer&#x60;&#x60;: the information about the maintainer of this prefix in the registry.     - &#x60;&#x60;description&#x60;&#x60;: the description of the prefix as registered in the registry.     - &#x60;&#x60;registry_date&#x60;&#x60;: the date of registration of the prefix in the registry. The format is YYYY-MM-DD.     - &#x60;&#x60;registry_status&#x60;&#x60;: the URI of the status of the prefix as stored in the registry.     - &#x60;&#x60;score&#x60;&#x60;: The risk score of the prefix. It ranges from 0 to 99.     - &#x60;&#x60;risk&#x60;&#x60;: The risk of the prefix. The allowed values are: LOW, MEDIUM, HIGH. It&#39;s a human readable representation of the score. - &#x60;&#x60;prefixes_v6&#x60;&#x60;: the list of IPv6 prefixes that belong to the ASN. Each element of the list is a JSON object with the following structure:     - &#x60;&#x60;self&#x60;&#x60;: the URI to individual IPv6 prefix.     - &#x60;&#x60;asn&#x60;&#x60;: the URI to query the full details of the ASN.     - &#x60;&#x60;object_type&#x60;&#x60;: the type of the prefix. The allowed values are: IPv6.     - &#x60;&#x60;maintainer&#x60;&#x60;: the information about the maintainer of this prefix in the registry.     - &#x60;&#x60;description&#x60;&#x60;: the description of the prefix as registered in the registry.     - &#x60;&#x60;registry_date&#x60;&#x60;: the date of registration of the prefix in the registry. The format is YYYY-MM-DD.     - &#x60;&#x60;registry_status&#x60;&#x60;: the URI of the status of the prefix as stored in the registry.     - &#x60;&#x60;score&#x60;&#x60;: The risk score of the prefix. It ranges from 0 to 99.     - &#x60;&#x60;risk&#x60;&#x60;: The risk of the prefix. The allowed values are: LOW, MEDIUM, HIGH. It&#39;s a human readable representation of the score.  ### Errors The endpoint will return the following errors: - a &#x60;404 Not Found&#x60; error if the AS was not found. - a &#x60;422 Unprocessable Entity&#x60; error if the AS number is malformed.  It will also return the API Global errors described in the API description.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void queryAsnPrefixesListV1AsnNumberPrefixesGetTest() throws ApiException {
        Integer number = null;
        AutonomousSystemPrefixesOutput response = api.queryAsnPrefixesListV1AsnNumberPrefixesGet(number);
        // TODO: test validations
    }

    /**
     * Get the Autonomous System details of the AS number given.
     *
     * ### What Obtain the full details of the Autonomous System Number (ASN) passed as a parameter.  ### Parameters The endpoint accepts only the following parameter in the path: - &#x60;&#x60;number&#x60;&#x60;: (Mandatory) The ASN number to be queried.  ### Result The result is a JSON object with the following structure: - &#x60;&#x60;self&#x60;&#x60;: the URI of the API call - &#x60;&#x60;name&#x60;&#x60;: the name of the Autonomous System as registered in the registries databases. - &#x60;&#x60;description&#x60;&#x60;: the description of the Autonomous System as registered in the registries databases. - &#x60;&#x60;country_code&#x60;&#x60;: the ISO 3166-1 alpha-2 country code of the Autonomous System. - &#x60;&#x60;registry_date&#x60;&#x60;: the date of registration of the Autonomous System in the registry. The format is YYYY-MM-DD. - &#x60;&#x60;registry&#x60;&#x60;: the URI of the registry where the Autonomous System is registered. - &#x60;&#x60;status&#x60;&#x60;: the status of the Autonomous System as stored in the registry. - &#x60;&#x60;prefixes&#x60;&#x60;: the URI to the list of prefixes that belong to the Autonomous System. - &#x60;&#x60;score&#x60;&#x60;: The risk score of the Autonomous System. It ranges from 0 to 99. - &#x60;&#x60;risk&#x60;&#x60;: The risk of the Autonomous System. The allowed values are: LOW, MEDIUM, HIGH. It&#39;s a human readable representation of the score.   ### Errors The endpoint will return the following errors: - a &#x60;404 Not Found&#x60; error if the AS was not found. - a &#x60;422 Unprocessable Entity&#x60; error if the AS number is malformed.  It will also return the API Global errors described in the API description.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void queryAsnV1AsnNumberGetTest() throws ApiException {
        Integer number = null;
        AutonomousSystemOutput response = api.queryAsnV1AsnNumberGet(number);
        // TODO: test validations
    }

    /**
     * Get the IPv4 or IPv6 prefix of the IP address given.
     *
     * ### What Obtain the IPv4 or IPv6 prefix and the Autonomous System information of the IP address passed as a parameter.  ### Parameters The endpoint accepts only the following parameter in the path: - &#x60;&#x60;ip_address&#x60;&#x60;: (Mandatory) The IPv4 or IPv6 address to be queried.  ### Result The result is a JSON object with the following structure: - &#x60;&#x60;self&#x60;&#x60;: the URI to individual IPv4 prefix. - &#x60;&#x60;asn&#x60;&#x60;: the URI to query the full details of the ASN. - &#x60;&#x60;object_type&#x60;&#x60;: the type of the prefix. The allowed values are: IPv4 or IPv6. - &#x60;&#x60;maintainer&#x60;&#x60;: the information about the maintainer of this prefix in the registry. - &#x60;&#x60;description&#x60;&#x60;: the description of the prefix as registered in the registry. - &#x60;&#x60;registry_date&#x60;&#x60;: the date of registration of the prefix in the registry. The format is YYYY-MM-DD. - &#x60;&#x60;registry_status&#x60;&#x60;: the URI of the status of the prefix as stored in the registry. - &#x60;&#x60;score&#x60;&#x60;: The risk score of the prefix. It ranges from 0 to 99. - &#x60;&#x60;risk&#x60;&#x60;: The risk of the prefix. The allowed values are: LOW, MEDIUM, HIGH. It&#39;s a human readable representation of the score.  ### Errors The endpoint will return the following errors: - a &#x60;404 Not Found&#x60; error if the prefix information was not found. - a &#x60;422 Unprocessable Entity&#x60; error if the IP address is malformed.  It will also return the API Global errors described in the API description.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void queryIPAddressNetworkInformationV1AsnIpIpAddressGetTest() throws ApiException {
        String ipAddress = null;
        AutonomousSystemPrefixOutput response = api.queryIPAddressNetworkInformationV1AsnIpIpAddressGet(ipAddress);
        // TODO: test validations
    }

    /**
     * Get the information of a Regional Internet Registries (RIRs) given.
     *
     * ### What Obtain the information about the Regional Internet Registries (RIRs) given as a parameter.  ### Parameters The endpoint accepts only the following parameter in the path: - &#x60;&#x60;code&#x60;&#x60;: (Mandatory) The code that identifies uniquely the RIR. Possible values are: iana, arin, ripencc, afrinic, apnic, lacnic.  ### Result The result is a JSON object with the following structure: - &#x60;&#x60;self&#x60;&#x60;: the URI to individual RIR. - &#x60;&#x60;name&#x60;&#x60;: the RIR name. - &#x60;&#x60;code&#x60;&#x60;: the internal code of the RIR in the system.  ### Errors - a &#x60;422 Unprocessable Entity&#x60; error if the code is not one of the available.  It will also return the API Global errors described in the API description.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void queryRegistryByTheNameV1AsnRegistryCodeGetTest() throws ApiException {
        String code = null;
        AutonomousSystemRegistryOutput response = api.queryRegistryByTheNameV1AsnRegistryCodeGet(code);
        // TODO: test validations
    }

    /**
     * Get the list of the Regional Internet Registries (RIRs) entities worldwide.
     *
     * ### What Obtain the list of Regional Internet Registries (RIRs) entities worldwide.  ### Parameters No parameters are required.  ### Result The result is a JSON object with a list of the following JSON objects: - &#x60;&#x60;self&#x60;&#x60;: the URI to individual RIR. - &#x60;&#x60;name&#x60;&#x60;: the RIR name. - &#x60;&#x60;code&#x60;&#x60;: the internal code of the RIR in the system. Possible values are: iana, arin, ripencc, afrinic, apnic, lacnic.  ### Errors It will return the API Global errors described in the API description.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void queryRegistryNamesV1AsnRegistryAllGetTest() throws ApiException {
        List<AutonomousSystemRegistryOutput> response = api.queryRegistryNamesV1AsnRegistryAllGet();
        // TODO: test validations
    }

    /**
     * Get the information of a status given.
     *
     * ### What Obtain the information about the status of an object in the registry as a parameter.  ### Parameters The endpoint accepts only the following parameter in the path: - &#x60;&#x60;code&#x60;&#x60;: (Mandatory) The code that identifies uniquely the status in the registry. Possible values are: assigned, reserved, allocated, available.   ### Result The result is a JSON object with the following structure: - &#x60;&#x60;self&#x60;&#x60;: the URI to individual status. - &#x60;&#x60;name&#x60;&#x60;: the human readable name of the status. - &#x60;&#x60;code&#x60;&#x60;: the internal code of the status in the system.  ### Errors - a &#x60;422 Unprocessable Entity&#x60; error if the code is not one of the available.  It will also return the API Global errors described in the API description.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void queryStatusByTheNameV1AsnStatusCodeGetTest() throws ApiException {
        String code = null;
        AutonomousSystemStatusOutput response = api.queryStatusByTheNameV1AsnStatusCodeGet(code);
        // TODO: test validations
    }

    /**
     * Get the list of status of an object in a registry.
     *
     * ### What Obtain the list of status of an object can be in a registry.  ### Parameters No parameters are required.  ### Result The result is a JSON object with a list of the following JSON objects: - &#x60;&#x60;self&#x60;&#x60;: the URI to individual status. - &#x60;&#x60;name&#x60;&#x60;: the code name. - &#x60;&#x60;code&#x60;&#x60;: the internal code of the status in the system. Possible values are: assigned, reserved, allocated, available.  ### Errors It will return the API Global errors described in the API description.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void queryStatusNamesV1AsnStatusAllGetTest() throws ApiException {
        List<AutonomousSystemStatusOutput> response = api.queryStatusNamesV1AsnStatusAllGet();
        // TODO: test validations
    }

}
