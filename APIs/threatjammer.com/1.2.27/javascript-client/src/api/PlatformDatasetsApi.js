/**
 * ThreatJammer.com User API
 *  The public API open to the users. [Read the docs and learn more.](https://threatjammer.com/docs).  ## General information  ### Description Threat Jammer supports two end-user REST APIs: the User API and the Report API. The end-user uses the User API to interact with the different databases, heuristics, and machine learning processes. Devices use the Report API to interact with Threat Jammer. This document will explain how to use the User API and interact with the different services, create a token, interpret the quota information, and create the HTTP request to interact with the User API.  ### Authentication The API is protected by a **Bearer authentication** schema. **Bearer authentication** (also called **token authentication**) is an HTTP authentication scheme that involves security tokens called bearer tokens. It is used to authenticate the user. All the different endpoints expect a `Bearer` token in the `Authorization` header.  Example:  ``` curl -X 'GET'   'https://dublin.api.threatjammer.com/test'   -H 'accept: application/json'   -H 'Authorization: Bearer YOUR_API_KEY' ```  You can obtain a token after registering on the [ThreatJammer.com](https://threatjammer.com) website for free.   ### Region specific tokens All the `Bearer` tokens contain information about the authorized region. The developers have to use a token created for the region they want to use. A token used in a different region will return a `401 Unauthorized` error.  ### Global errors  The API will return the following permanent errors: - a `401 Unauthorized` error if the token is not valid, or does not belong to the region. - a `401 Unauthorized` error if the token does not exist. - a `401 Unauthorized` error if the token is malformed. - a `403 Forbidden` error if the subscription level is not enough. Some endpoints are only available for paid subscription levels.  And these temporary errors: - a `429 Too Many Requests` error if the quota is exceeded (see below).  ### Quota limits  **Every request to the User API will consume one (1) quota point.**  The API has two rate limiting processes: - a quota limit of **5000** requests per month for the `FREE` account. The limit is reset every month. - a quota limit of **10** requests per minute for the `FREE` account. The limit is reset every minute and implements a sliding window mechanism.  
 *
 * The version of the OpenAPI document: 1.2.27
 * Contact: support@threatjammer.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import DatasetTypeCollectionOutput from '../model/DatasetTypeCollectionOutput';
import DatasetTypeOutput from '../model/DatasetTypeOutput';
import HTTPValidationError from '../model/HTTPValidationError';

/**
* PlatformDatasets service.
* @module api/PlatformDatasetsApi
* @version 1.2.27
*/
export default class PlatformDatasetsApi {

    /**
    * Constructs a new PlatformDatasetsApi. 
    * @alias module:api/PlatformDatasetsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the queryDatatasetInformationOfAllTheResourceTypesV1DatasetIpGet operation.
     * @callback module:api/PlatformDatasetsApi~queryDatatasetInformationOfAllTheResourceTypesV1DatasetIpGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DatasetTypeCollectionOutput} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get the list of all the datasets available in the platform.
     * ### What Obtain the list of all the datasets available in the platform. A dataset is a collection of different data sources that are related to a specific topic. The name of the dataset describes the specific topic.  ### Parameters No parameters are required.  ### Result The result is a JSON object with a list of the following JSON objects: - ``self``: the URI to individual status. - ``types``: a list of JSON objects with the following fields:     - ``self``: the URI to individual dataset information.     - ``type``: what type of dataset is this. The only allowed value is ``ip``.     - ``name``: the name of the dataset in human readable form.     - ``description``: a human readable long description of the dataset.     - ``status``: the status of the dataset. The only allowed value is ``ENABLED``.     - ``items``: the number of 'live' items in the dataset when the request is performed.  ### Errors It will return the API Global errors described in the API description.
     * @param {module:api/PlatformDatasetsApi~queryDatatasetInformationOfAllTheResourceTypesV1DatasetIpGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DatasetTypeCollectionOutput}
     */
    queryDatatasetInformationOfAllTheResourceTypesV1DatasetIpGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['HTTPBearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = DatasetTypeCollectionOutput;
      return this.apiClient.callApi(
        '/v1/dataset/ip', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the queryDatatasetInformationOfTheResourceTypeV1DatasetIpNameGet operation.
     * @callback module:api/PlatformDatasetsApi~queryDatatasetInformationOfTheResourceTypeV1DatasetIpNameGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DatasetTypeOutput} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get the detailed information of the dataset queried.
     * ### What Get the detailed information of the dataset queried by the name. A dataset is a collection of different data sources that are related to a specific topic. The name of the dataset describes the specific topic.  ### Parameters The endpoint accepts only the following parameter in the path: - ``name``: (Mandatory) The code name that identifies uniquely the dataset in the platform. It must be composed of uppercase letters, numbers and underscores.  ### Result The result is a JSON object with the following fields: - ``self``: the URI to individual dataset information. - ``type``: what type of dataset is this. The only allowed value is ``ip``. - ``name``: the name of the dataset in human readable form. - ``description``: a human readable long description of the dataset. - ``status``: the status of the dataset. The only allowed value is ``ENABLED``. - ``items``: the number of 'live' items in the dataset when the request is performed.  ### Errors - a `404 Not Found` error if the dataset code name was not found. - a `422 Unprocessable Entity` error if dataset code name does not follow the naming convention.  It will also return the API Global errors described in the API description.
     * @param {String} name 
     * @param {module:api/PlatformDatasetsApi~queryDatatasetInformationOfTheResourceTypeV1DatasetIpNameGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DatasetTypeOutput}
     */
    queryDatatasetInformationOfTheResourceTypeV1DatasetIpNameGet(name, callback) {
      let postBody = null;
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling queryDatatasetInformationOfTheResourceTypeV1DatasetIpNameGet");
      }

      let pathParams = {
        'name': name
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['HTTPBearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = DatasetTypeOutput;
      return this.apiClient.callApi(
        '/v1/dataset/ip/{name}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
