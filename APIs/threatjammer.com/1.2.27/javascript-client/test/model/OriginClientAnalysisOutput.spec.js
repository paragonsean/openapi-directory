/**
 * ThreatJammer.com User API
 *  The public API open to the users. [Read the docs and learn more.](https://threatjammer.com/docs).  ## General information  ### Description Threat Jammer supports two end-user REST APIs: the User API and the Report API. The end-user uses the User API to interact with the different databases, heuristics, and machine learning processes. Devices use the Report API to interact with Threat Jammer. This document will explain how to use the User API and interact with the different services, create a token, interpret the quota information, and create the HTTP request to interact with the User API.  ### Authentication The API is protected by a **Bearer authentication** schema. **Bearer authentication** (also called **token authentication**) is an HTTP authentication scheme that involves security tokens called bearer tokens. It is used to authenticate the user. All the different endpoints expect a `Bearer` token in the `Authorization` header.  Example:  ``` curl -X 'GET'   'https://dublin.api.threatjammer.com/test'   -H 'accept: application/json'   -H 'Authorization: Bearer YOUR_API_KEY' ```  You can obtain a token after registering on the [ThreatJammer.com](https://threatjammer.com) website for free.   ### Region specific tokens All the `Bearer` tokens contain information about the authorized region. The developers have to use a token created for the region they want to use. A token used in a different region will return a `401 Unauthorized` error.  ### Global errors  The API will return the following permanent errors: - a `401 Unauthorized` error if the token is not valid, or does not belong to the region. - a `401 Unauthorized` error if the token does not exist. - a `401 Unauthorized` error if the token is malformed. - a `403 Forbidden` error if the subscription level is not enough. Some endpoints are only available for paid subscription levels.  And these temporary errors: - a `429 Too Many Requests` error if the quota is exceeded (see below).  ### Quota limits  **Every request to the User API will consume one (1) quota point.**  The API has two rate limiting processes: - a quota limit of **5000** requests per month for the `FREE` account. The limit is reset every month. - a quota limit of **10** requests per minute for the `FREE` account. The limit is reset every minute and implements a sliding window mechanism.  
 *
 * The version of the OpenAPI document: 1.2.27
 * Contact: support@threatjammer.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ThreatJammerComUserApi);
  }
}(this, function(expect, ThreatJammerComUserApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ThreatJammerComUserApi.OriginClientAnalysisOutput();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('OriginClientAnalysisOutput', function() {
    it('should create an instance of OriginClientAnalysisOutput', function() {
      // uncomment below and update the code to test OriginClientAnalysisOutput
      //var instance = new ThreatJammerComUserApi.OriginClientAnalysisOutput();
      //expect(instance).to.be.a(ThreatJammerComUserApi.OriginClientAnalysisOutput);
    });

    it('should have the property clientBrowser (base name: "client_browser")', function() {
      // uncomment below and update the code to test the property clientBrowser
      //var instance = new ThreatJammerComUserApi.OriginClientAnalysisOutput();
      //expect(instance).to.be();
    });

    it('should have the property clientCrawler (base name: "client_crawler")', function() {
      // uncomment below and update the code to test the property clientCrawler
      //var instance = new ThreatJammerComUserApi.OriginClientAnalysisOutput();
      //expect(instance).to.be();
    });

    it('should have the property clientEmail (base name: "client_email")', function() {
      // uncomment below and update the code to test the property clientEmail
      //var instance = new ThreatJammerComUserApi.OriginClientAnalysisOutput();
      //expect(instance).to.be();
    });

    it('should have the property clientLibrary (base name: "client_library")', function() {
      // uncomment below and update the code to test the property clientLibrary
      //var instance = new ThreatJammerComUserApi.OriginClientAnalysisOutput();
      //expect(instance).to.be();
    });

    it('should have the property clientMobileBrowser (base name: "client_mobile_browser")', function() {
      // uncomment below and update the code to test the property clientMobileBrowser
      //var instance = new ThreatJammerComUserApi.OriginClientAnalysisOutput();
      //expect(instance).to.be();
    });

    it('should have the property clientMultimediaPlayer (base name: "client_multimedia_player")', function() {
      // uncomment below and update the code to test the property clientMultimediaPlayer
      //var instance = new ThreatJammerComUserApi.OriginClientAnalysisOutput();
      //expect(instance).to.be();
    });

    it('should have the property clientOfflineBrowser (base name: "client_offline_browser")', function() {
      // uncomment below and update the code to test the property clientOfflineBrowser
      //var instance = new ThreatJammerComUserApi.OriginClientAnalysisOutput();
      //expect(instance).to.be();
    });

    it('should have the property clientTotal (base name: "client_total")', function() {
      // uncomment below and update the code to test the property clientTotal
      //var instance = new ThreatJammerComUserApi.OriginClientAnalysisOutput();
      //expect(instance).to.be();
    });

    it('should have the property clientUaAnonymizer (base name: "client_ua_anonymizer")', function() {
      // uncomment below and update the code to test the property clientUaAnonymizer
      //var instance = new ThreatJammerComUserApi.OriginClientAnalysisOutput();
      //expect(instance).to.be();
    });

    it('should have the property clientUnrecognized (base name: "client_unrecognized")', function() {
      // uncomment below and update the code to test the property clientUnrecognized
      //var instance = new ThreatJammerComUserApi.OriginClientAnalysisOutput();
      //expect(instance).to.be();
    });

    it('should have the property clientValidator (base name: "client_validator")', function() {
      // uncomment below and update the code to test the property clientValidator
      //var instance = new ThreatJammerComUserApi.OriginClientAnalysisOutput();
      //expect(instance).to.be();
    });

    it('should have the property clientWapBrowser (base name: "client_wap_browser")', function() {
      // uncomment below and update the code to test the property clientWapBrowser
      //var instance = new ThreatJammerComUserApi.OriginClientAnalysisOutput();
      //expect(instance).to.be();
    });

    it('should have the property crawlerFeedFetcher (base name: "crawler_feed_fetcher")', function() {
      // uncomment below and update the code to test the property crawlerFeedFetcher
      //var instance = new ThreatJammerComUserApi.OriginClientAnalysisOutput();
      //expect(instance).to.be();
    });

    it('should have the property crawlerLinkChecker (base name: "crawler_link_checker")', function() {
      // uncomment below and update the code to test the property crawlerLinkChecker
      //var instance = new ThreatJammerComUserApi.OriginClientAnalysisOutput();
      //expect(instance).to.be();
    });

    it('should have the property crawlerMarketing (base name: "crawler_marketing")', function() {
      // uncomment below and update the code to test the property crawlerMarketing
      //var instance = new ThreatJammerComUserApi.OriginClientAnalysisOutput();
      //expect(instance).to.be();
    });

    it('should have the property crawlerScreenshotCreator (base name: "crawler_screenshot_creator")', function() {
      // uncomment below and update the code to test the property crawlerScreenshotCreator
      //var instance = new ThreatJammerComUserApi.OriginClientAnalysisOutput();
      //expect(instance).to.be();
    });

    it('should have the property crawlerSearchEngineBot (base name: "crawler_search_engine_bot")', function() {
      // uncomment below and update the code to test the property crawlerSearchEngineBot
      //var instance = new ThreatJammerComUserApi.OriginClientAnalysisOutput();
      //expect(instance).to.be();
    });

    it('should have the property crawlerSiteMonitor (base name: "crawler_site_monitor")', function() {
      // uncomment below and update the code to test the property crawlerSiteMonitor
      //var instance = new ThreatJammerComUserApi.OriginClientAnalysisOutput();
      //expect(instance).to.be();
    });

    it('should have the property crawlerSpeedTester (base name: "crawler_speed_tester")', function() {
      // uncomment below and update the code to test the property crawlerSpeedTester
      //var instance = new ThreatJammerComUserApi.OriginClientAnalysisOutput();
      //expect(instance).to.be();
    });

    it('should have the property crawlerTool (base name: "crawler_tool")', function() {
      // uncomment below and update the code to test the property crawlerTool
      //var instance = new ThreatJammerComUserApi.OriginClientAnalysisOutput();
      //expect(instance).to.be();
    });

    it('should have the property crawlerTotal (base name: "crawler_total")', function() {
      // uncomment below and update the code to test the property crawlerTotal
      //var instance = new ThreatJammerComUserApi.OriginClientAnalysisOutput();
      //expect(instance).to.be();
    });

    it('should have the property crawlerUncategorised (base name: "crawler_uncategorised")', function() {
      // uncomment below and update the code to test the property crawlerUncategorised
      //var instance = new ThreatJammerComUserApi.OriginClientAnalysisOutput();
      //expect(instance).to.be();
    });

    it('should have the property crawlerUnrecognized (base name: "crawler_unrecognized")', function() {
      // uncomment below and update the code to test the property crawlerUnrecognized
      //var instance = new ThreatJammerComUserApi.OriginClientAnalysisOutput();
      //expect(instance).to.be();
    });

    it('should have the property crawlerVirusScanner (base name: "crawler_virus_scanner")', function() {
      // uncomment below and update the code to test the property crawlerVirusScanner
      //var instance = new ThreatJammerComUserApi.OriginClientAnalysisOutput();
      //expect(instance).to.be();
    });

    it('should have the property crawlerVulnerabilityScanner (base name: "crawler_vulnerability_scanner")', function() {
      // uncomment below and update the code to test the property crawlerVulnerabilityScanner
      //var instance = new ThreatJammerComUserApi.OriginClientAnalysisOutput();
      //expect(instance).to.be();
    });

    it('should have the property crawlerWebScraper (base name: "crawler_web_scraper")', function() {
      // uncomment below and update the code to test the property crawlerWebScraper
      //var instance = new ThreatJammerComUserApi.OriginClientAnalysisOutput();
      //expect(instance).to.be();
    });

    it('should have the property timestamp (base name: "timestamp")', function() {
      // uncomment below and update the code to test the property timestamp
      //var instance = new ThreatJammerComUserApi.OriginClientAnalysisOutput();
      //expect(instance).to.be();
    });

    it('should have the property total (base name: "total")', function() {
      // uncomment below and update the code to test the property total
      //var instance = new ThreatJammerComUserApi.OriginClientAnalysisOutput();
      //expect(instance).to.be();
    });

  });

}));
