/**
 * Impala Hotel Booking API
 * Add room selling to your app with ease, or expand your existing hotel portfolio. Access all the marketing material you need to sell a room, from hotel amenities to images. Constantly updated, ever expanding and always correct. Impala allows you to start selling hotel rooms and earn a commission with every booking in hours.  Getting started is easy:  > **1. Sign-up within seconds**: Head to the [Impala website](https://impala.travel), enter your details and receive your sandbox API key immediately (no credit card needed).  > **2. Start building within minutes**: Build against a sandbox API with realistic test data. Use a [step-by-step walkthrough](https://impala.travel) to see what's possible. Check for available hotels and their rates. Make and manage fake bookings without any risk. Add room booking to your existing website or app, or start an online travel agency from scratch. [![Run in Postman](https://run.pstmn.io/button.svg)](https://god.gw.postman.com/run-collection/11303451-9b241872-9961-424d-9ef4-9d949534567d?action=collection%2Ffork&collection-url=entityId%3D11303451-9b241872-9961-424d-9ef4-9d949534567d%26entityType%3Dcollection%26workspaceId%3D5ae55f12-332c-4e7d-8acc-3e75df3b2ee2)  > **3. Go live within hours**: Once your app or integration is ready for prime time, move to production within your Impala dashboard and start making real hotel bookings for your customers right away.  Want to see how it all works? Watch [a 5-minute walkthrough](https://www.youtube.com/watch?v=7B3evCL3nrY) of the two API requests you need to make a booking, and a demo of one of our customer's apps.
 *
 * The version of the OpenAPI document: 1.003
 * Contact: support@impala.travel
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ImpalaHotelBookingApi);
  }
}(this, function(expect, ImpalaHotelBookingApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ImpalaHotelBookingApi.Booking();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Booking', function() {
    it('should create an instance of Booking', function() {
      // uncomment below and update the code to test Booking
      //var instance = new ImpalaHotelBookingApi.Booking();
      //expect(instance).to.be.a(ImpalaHotelBookingApi.Booking);
    });

    it('should have the property bookedRooms (base name: "bookedRooms")', function() {
      // uncomment below and update the code to test the property bookedRooms
      //var instance = new ImpalaHotelBookingApi.Booking();
      //expect(instance).to.be();
    });

    it('should have the property bookingId (base name: "bookingId")', function() {
      // uncomment below and update the code to test the property bookingId
      //var instance = new ImpalaHotelBookingApi.Booking();
      //expect(instance).to.be();
    });

    it('should have the property cancellation (base name: "cancellation")', function() {
      // uncomment below and update the code to test the property cancellation
      //var instance = new ImpalaHotelBookingApi.Booking();
      //expect(instance).to.be();
    });

    it('should have the property contact (base name: "contact")', function() {
      // uncomment below and update the code to test the property contact
      //var instance = new ImpalaHotelBookingApi.Booking();
      //expect(instance).to.be();
    });

    it('should have the property createdAt (base name: "createdAt")', function() {
      // uncomment below and update the code to test the property createdAt
      //var instance = new ImpalaHotelBookingApi.Booking();
      //expect(instance).to.be();
    });

    it('should have the property end (base name: "end")', function() {
      // uncomment below and update the code to test the property end
      //var instance = new ImpalaHotelBookingApi.Booking();
      //expect(instance).to.be();
    });

    it('should have the property hotel (base name: "hotel")', function() {
      // uncomment below and update the code to test the property hotel
      //var instance = new ImpalaHotelBookingApi.Booking();
      //expect(instance).to.be();
    });

    it('should have the property hotelConfirmationCode (base name: "hotelConfirmationCode")', function() {
      // uncomment below and update the code to test the property hotelConfirmationCode
      //var instance = new ImpalaHotelBookingApi.Booking();
      //expect(instance).to.be();
    });

    it('should have the property notes (base name: "notes")', function() {
      // uncomment below and update the code to test the property notes
      //var instance = new ImpalaHotelBookingApi.Booking();
      //expect(instance).to.be();
    });

    it('should have the property paymentBearerToken (base name: "paymentBearerToken")', function() {
      // uncomment below and update the code to test the property paymentBearerToken
      //var instance = new ImpalaHotelBookingApi.Booking();
      //expect(instance).to.be();
    });

    it('should have the property paymentClientSecret (base name: "paymentClientSecret")', function() {
      // uncomment below and update the code to test the property paymentClientSecret
      //var instance = new ImpalaHotelBookingApi.Booking();
      //expect(instance).to.be();
    });

    it('should have the property start (base name: "start")', function() {
      // uncomment below and update the code to test the property start
      //var instance = new ImpalaHotelBookingApi.Booking();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new ImpalaHotelBookingApi.Booking();
      //expect(instance).to.be();
    });

    it('should have the property updatedAt (base name: "updatedAt")', function() {
      // uncomment below and update the code to test the property updatedAt
      //var instance = new ImpalaHotelBookingApi.Booking();
      //expect(instance).to.be();
    });

  });

}));
