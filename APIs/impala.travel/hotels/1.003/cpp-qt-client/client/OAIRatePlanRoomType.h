/**
 * Impala Hotel Booking API
 * Add room selling to your app with ease, or expand your existing hotel portfolio. Access all the marketing material you need to sell a room, from hotel amenities to images. Constantly updated, ever expanding and always correct. Impala allows you to start selling hotel rooms and earn a commission with every booking in hours.  Getting started is easy:  > **1. Sign-up within seconds**: Head to the [Impala website](https://impala.travel), enter your details and receive your sandbox API key immediately (no credit card needed).  > **2. Start building within minutes**: Build against a sandbox API with realistic test data. Use a [step-by-step walkthrough](https://impala.travel) to see what's possible. Check for available hotels and their rates. Make and manage fake bookings without any risk. Add room booking to your existing website or app, or start an online travel agency from scratch. [![Run in Postman](https://run.pstmn.io/button.svg)](https://god.gw.postman.com/run-collection/11303451-9b241872-9961-424d-9ef4-9d949534567d?action=collection%2Ffork&collection-url=entityId%3D11303451-9b241872-9961-424d-9ef4-9d949534567d%26entityType%3Dcollection%26workspaceId%3D5ae55f12-332c-4e7d-8acc-3e75df3b2ee2)  > **3. Go live within hours**: Once your app or integration is ready for prime time, move to production within your Impala dashboard and start making real hotel bookings for your customers right away.  Want to see how it all works? Watch [a 5-minute walkthrough](https://www.youtube.com/watch?v=7B3evCL3nrY) of the two API requests you need to make a booking, and a demo of one of our customer's apps.
 *
 * The version of the OpenAPI document: 1.003
 * Contact: support@impala.travel
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRatePlanRoomType.h
 *
 * 
 */

#ifndef OAIRatePlanRoomType_H
#define OAIRatePlanRoomType_H

#include <QJsonObject>

#include "OAIRatesPerDate.h"
#include <QSet>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIRatesPerDate;

class OAIRatePlanRoomType : public OAIObject {
public:
    OAIRatePlanRoomType();
    OAIRatePlanRoomType(QString json);
    ~OAIRatePlanRoomType() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QSet<OAIRatesPerDate> getDates() const;
    void setDates(const QSet<OAIRatesPerDate> &dates);
    bool is_dates_Set() const;
    bool is_dates_Valid() const;

    double getMaxOccupancy() const;
    void setMaxOccupancy(const double &max_occupancy);
    bool is_max_occupancy_Set() const;
    bool is_max_occupancy_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getRoomTypeId() const;
    void setRoomTypeId(const QString &room_type_id);
    bool is_room_type_id_Set() const;
    bool is_room_type_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QSet<OAIRatesPerDate> m_dates;
    bool m_dates_isSet;
    bool m_dates_isValid;

    double m_max_occupancy;
    bool m_max_occupancy_isSet;
    bool m_max_occupancy_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_room_type_id;
    bool m_room_type_id_isSet;
    bool m_room_type_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRatePlanRoomType)

#endif // OAIRatePlanRoomType_H
