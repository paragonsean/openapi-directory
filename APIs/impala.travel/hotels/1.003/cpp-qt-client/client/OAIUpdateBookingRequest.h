/**
 * Impala Hotel Booking API
 * Add room selling to your app with ease, or expand your existing hotel portfolio. Access all the marketing material you need to sell a room, from hotel amenities to images. Constantly updated, ever expanding and always correct. Impala allows you to start selling hotel rooms and earn a commission with every booking in hours.  Getting started is easy:  > **1. Sign-up within seconds**: Head to the [Impala website](https://impala.travel), enter your details and receive your sandbox API key immediately (no credit card needed).  > **2. Start building within minutes**: Build against a sandbox API with realistic test data. Use a [step-by-step walkthrough](https://impala.travel) to see what's possible. Check for available hotels and their rates. Make and manage fake bookings without any risk. Add room booking to your existing website or app, or start an online travel agency from scratch. [![Run in Postman](https://run.pstmn.io/button.svg)](https://god.gw.postman.com/run-collection/11303451-9b241872-9961-424d-9ef4-9d949534567d?action=collection%2Ffork&collection-url=entityId%3D11303451-9b241872-9961-424d-9ef4-9d949534567d%26entityType%3Dcollection%26workspaceId%3D5ae55f12-332c-4e7d-8acc-3e75df3b2ee2)  > **3. Go live within hours**: Once your app or integration is ready for prime time, move to production within your Impala dashboard and start making real hotel bookings for your customers right away.  Want to see how it all works? Watch [a 5-minute walkthrough](https://www.youtube.com/watch?v=7B3evCL3nrY) of the two API requests you need to make a booking, and a demo of one of our customer's apps.
 *
 * The version of the OpenAPI document: 1.003
 * Contact: support@impala.travel
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpdateBookingRequest.h
 *
 * 
 */

#ifndef OAIUpdateBookingRequest_H
#define OAIUpdateBookingRequest_H

#include <QJsonObject>

#include "OAIBookingRequest_rooms_inner.h"
#include "OAINotesBooking.h"
#include "OAIPersonInfo.h"
#include <QDate>
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPersonInfo;
class OAINotesBooking;
class OAIBookingRequest_rooms_inner;

class OAIUpdateBookingRequest : public OAIObject {
public:
    OAIUpdateBookingRequest();
    OAIUpdateBookingRequest(QString json);
    ~OAIUpdateBookingRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIPersonInfo getBookingContact() const;
    void setBookingContact(const OAIPersonInfo &booking_contact);
    bool is_booking_contact_Set() const;
    bool is_booking_contact_Valid() const;

    QDate getEnd() const;
    void setEnd(const QDate &end);
    bool is_end_Set() const;
    bool is_end_Valid() const;

    OAINotesBooking getNotes() const;
    void setNotes(const OAINotesBooking &notes);
    bool is_notes_Set() const;
    bool is_notes_Valid() const;

    QString getPaymentType() const;
    void setPaymentType(const QString &payment_type);
    bool is_payment_type_Set() const;
    bool is_payment_type_Valid() const;

    QList<OAIBookingRequest_rooms_inner> getRooms() const;
    void setRooms(const QList<OAIBookingRequest_rooms_inner> &rooms);
    bool is_rooms_Set() const;
    bool is_rooms_Valid() const;

    QDate getStart() const;
    void setStart(const QDate &start);
    bool is_start_Set() const;
    bool is_start_Valid() const;

    QDateTime getUpdateBookingVersionAtTimestamp() const;
    void setUpdateBookingVersionAtTimestamp(const QDateTime &update_booking_version_at_timestamp);
    bool is_update_booking_version_at_timestamp_Set() const;
    bool is_update_booking_version_at_timestamp_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIPersonInfo m_booking_contact;
    bool m_booking_contact_isSet;
    bool m_booking_contact_isValid;

    QDate m_end;
    bool m_end_isSet;
    bool m_end_isValid;

    OAINotesBooking m_notes;
    bool m_notes_isSet;
    bool m_notes_isValid;

    QString m_payment_type;
    bool m_payment_type_isSet;
    bool m_payment_type_isValid;

    QList<OAIBookingRequest_rooms_inner> m_rooms;
    bool m_rooms_isSet;
    bool m_rooms_isValid;

    QDate m_start;
    bool m_start_isSet;
    bool m_start_isValid;

    QDateTime m_update_booking_version_at_timestamp;
    bool m_update_booking_version_at_timestamp_isSet;
    bool m_update_booking_version_at_timestamp_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpdateBookingRequest)

#endif // OAIUpdateBookingRequest_H
