/*
 * Impala Hotel Booking API
 * Add room selling to your app with ease, or expand your existing hotel portfolio. Access all the marketing material you need to sell a room, from hotel amenities to images. Constantly updated, ever expanding and always correct. Impala allows you to start selling hotel rooms and earn a commission with every booking in hours.  Getting started is easy:  > **1. Sign-up within seconds**: Head to the [Impala website](https://impala.travel), enter your details and receive your sandbox API key immediately (no credit card needed).  > **2. Start building within minutes**: Build against a sandbox API with realistic test data. Use a [step-by-step walkthrough](https://impala.travel) to see what's possible. Check for available hotels and their rates. Make and manage fake bookings without any risk. Add room booking to your existing website or app, or start an online travel agency from scratch. [![Run in Postman](https://run.pstmn.io/button.svg)](https://god.gw.postman.com/run-collection/11303451-9b241872-9961-424d-9ef4-9d949534567d?action=collection%2Ffork&collection-url=entityId%3D11303451-9b241872-9961-424d-9ef4-9d949534567d%26entityType%3Dcollection%26workspaceId%3D5ae55f12-332c-4e7d-8acc-3e75df3b2ee2)  > **3. Go live within hours**: Once your app or integration is ready for prime time, move to production within your Impala dashboard and start making real hotel bookings for your customers right away.  Want to see how it all works? Watch [a 5-minute walkthrough](https://www.youtube.com/watch?v=7B3evCL3nrY) of the two API requests you need to make a booking, and a demo of one of our customer's apps.
 *
 * The version of the OpenAPI document: 1.003
 * Contact: support@impala.travel
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import java.math.BigDecimal;
import org.openapitools.client.model.GenericError;
import org.openapitools.client.model.HotelFullDetail;
import org.openapitools.client.model.ListHotels200Response;
import java.util.UUID;
import org.openapitools.client.model.ValidationError;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for HotelsApi
 */
@Disabled
public class HotelsApiTest {

    private final HotelsApi api = new HotelsApi();

    /**
     * List all hotels
     *
     * Returns a list of all hotels worldwide that can be booked through Impala.  You can **filter** the results:  * Adding &#x60;longitude&#x60;, &#x60;latitude&#x60; and a &#x60;radius&#x60; (in meters) query parameters will filter the results to hotels around this location. * Adding &#x60;start&#x60; and &#x60;end&#x60; dates (in ISO 8601 notation, e.g. &#x60;2021-12-31&#x60;) for the expected arrival and departure dates of your guests will limit the results to hotels that have at least one room bookable for this timeframe. * Adding &#x60;starRating&#x60;, &#x60;name&#x60; or &#x60;country&#x60; allows you to filter to hotels based on these values (e.g. &#x60;?starRating[gte]&#x3D;4&amp;name[like]&#x3D;palace&#x60; for hotels with a rating of 4 or up with a name containing \&quot;palace\&quot;) * Adding &#x60;hotelIds&#x60; allows you to limit the results to include only hotels with the ids listed. Its value should be a comma-separated list of hotel ids (e.g. &#x60;?hotelIds[]&#x3D;hotelIdA,hotelIdB&#x60;)  * Adding &#x60;contractable&#x60; allows you to filter to hotels that you can directly negotiate with through our [deals feature](https://docs.impala.travel/docs/booking-api/ZG9jOjcyNjgzMTA-contracting-with-hotels). (e.g &#x60;?contractable&#x3D;true&#x60; or &#x60;?contractable&#x3D;false&#x60;)  You can specify the **sorting order** in which hotels are returned: * This is done by using the &#x60;sortBy&#x60; query parameter. * Results can be sorted by &#x60;name&#x60; alphabetically, star &#x60;rating&#x60; and &#x60;distance_m&#x60; (in meters from the specified latitude/longitude location). * The parameter allows for a comma-separated list of arguments with optional &#x60;:asc&#x60; (ascending, the default if the modifier is omitted) and &#x60;:desc&#x60; (descending) modifiers.  If no hotels match your filter criteria, an empty array will be returned.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listHotelsTest() throws ApiException {
        Object name = null;
        Object starRating = null;
        Object country = null;
        String start = null;
        String end = null;
        Double latitude = null;
        Double longitude = null;
        Integer radius = null;
        List<String> hotelIds = null;
        Object created = null;
        Object updated = null;
        BigDecimal size = null;
        BigDecimal offset = null;
        String sortBy = null;
        ListHotels200Response response = api.listHotels(name, starRating, country, start, end, latitude, longitude, radius, hotelIds, created, updated, size, offset, sortBy);
        // TODO: test validations
    }

    /**
     * Retrieve a hotel
     *
     * Returns the full content, room types and rates for the specified hotel.  When querying the hotels API you can query with or without dates. Where querying with dates requires providing valid values for the &#x60;start&#x60; and &#x60;end&#x60; parameters. Requests without these values will be considered a query without dates.  **Querying without dates:**  When you query without dates, the search result will include all properties that match your request. Including all content that is associated with those properties. However you will find that the &#x60;rates&#x60; attribute for each room will always be empty.  **Querying with dates:**  When you query with dates, the search result will include all properties that match your request, including all content that is associated with those properties. Rooms which do not have available prices for the provided dates will appear with an empty &#x60;rates&#x60; array.  For rooms where there are available prices the &#x60;rates&#x60; array will include both the public rates of the hotel, along with prices that come from deals in which you are participating. This would include private deals which you have negotiated with a hotel, along with Impala deals which you have been verified for.  Using the &#x60;rateId&#x60; of any of those rates, you can use the [Create a booking](https://docs.impala.travel/docs/booking-api/spec/openapi.seller.yaml/paths/~1bookings/post) endpoint to make a booking.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void retrieveHotelTest() throws ApiException {
        UUID hotelId = null;
        String start = null;
        String end = null;
        HotelFullDetail response = api.retrieveHotel(hotelId, start, end);
        // TODO: test validations
    }

}
