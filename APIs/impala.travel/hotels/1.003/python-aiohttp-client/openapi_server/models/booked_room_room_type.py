# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BookedRoomRoomType(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, room_type_id: str=None):
        """BookedRoomRoomType - a model defined in OpenAPI

        :param name: The name of this BookedRoomRoomType.
        :param room_type_id: The room_type_id of this BookedRoomRoomType.
        """
        self.openapi_types = {
            'name': str,
            'room_type_id': str
        }

        self.attribute_map = {
            'name': 'name',
            'room_type_id': 'roomTypeId'
        }

        self._name = name
        self._room_type_id = room_type_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BookedRoomRoomType':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The bookedRoom_roomType of this BookedRoomRoomType.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this BookedRoomRoomType.

        The hotel's name for this room type.

        :return: The name of this BookedRoomRoomType.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this BookedRoomRoomType.

        The hotel's name for this room type.

        :param name: The name of this BookedRoomRoomType.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")

        self._name = name

    @property
    def room_type_id(self):
        """Gets the room_type_id of this BookedRoomRoomType.

        Unique identifier of this room type within the Impala platform.

        :return: The room_type_id of this BookedRoomRoomType.
        :rtype: str
        """
        return self._room_type_id

    @room_type_id.setter
    def room_type_id(self, room_type_id):
        """Sets the room_type_id of this BookedRoomRoomType.

        Unique identifier of this room type within the Impala platform.

        :param room_type_id: The room_type_id of this BookedRoomRoomType.
        :type room_type_id: str
        """
        if room_type_id is None:
            raise ValueError("Invalid value for `room_type_id`, must not be `None`")

        self._room_type_id = room_type_id
