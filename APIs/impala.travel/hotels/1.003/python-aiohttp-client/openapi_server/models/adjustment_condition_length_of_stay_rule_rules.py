# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.adjustment_condition_length_of_stay_rule_rules_bookable_date_range import AdjustmentConditionLengthOfStayRuleRulesBookableDateRange
from openapi_server.models.adjustment_condition_length_of_stay_rule_rules_nights_range import AdjustmentConditionLengthOfStayRuleRulesNightsRange
from openapi_server import util


class AdjustmentConditionLengthOfStayRuleRules(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bookable_date_range: AdjustmentConditionLengthOfStayRuleRulesBookableDateRange=None, nights_range: AdjustmentConditionLengthOfStayRuleRulesNightsRange=None):
        """AdjustmentConditionLengthOfStayRuleRules - a model defined in OpenAPI

        :param bookable_date_range: The bookable_date_range of this AdjustmentConditionLengthOfStayRuleRules.
        :param nights_range: The nights_range of this AdjustmentConditionLengthOfStayRuleRules.
        """
        self.openapi_types = {
            'bookable_date_range': AdjustmentConditionLengthOfStayRuleRulesBookableDateRange,
            'nights_range': AdjustmentConditionLengthOfStayRuleRulesNightsRange
        }

        self.attribute_map = {
            'bookable_date_range': 'bookableDateRange',
            'nights_range': 'nightsRange'
        }

        self._bookable_date_range = bookable_date_range
        self._nights_range = nights_range

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AdjustmentConditionLengthOfStayRuleRules':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The adjustmentConditionLengthOfStayRule_rules of this AdjustmentConditionLengthOfStayRuleRules.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bookable_date_range(self):
        """Gets the bookable_date_range of this AdjustmentConditionLengthOfStayRuleRules.


        :return: The bookable_date_range of this AdjustmentConditionLengthOfStayRuleRules.
        :rtype: AdjustmentConditionLengthOfStayRuleRulesBookableDateRange
        """
        return self._bookable_date_range

    @bookable_date_range.setter
    def bookable_date_range(self, bookable_date_range):
        """Sets the bookable_date_range of this AdjustmentConditionLengthOfStayRuleRules.


        :param bookable_date_range: The bookable_date_range of this AdjustmentConditionLengthOfStayRuleRules.
        :type bookable_date_range: AdjustmentConditionLengthOfStayRuleRulesBookableDateRange
        """
        if bookable_date_range is None:
            raise ValueError("Invalid value for `bookable_date_range`, must not be `None`")

        self._bookable_date_range = bookable_date_range

    @property
    def nights_range(self):
        """Gets the nights_range of this AdjustmentConditionLengthOfStayRuleRules.


        :return: The nights_range of this AdjustmentConditionLengthOfStayRuleRules.
        :rtype: AdjustmentConditionLengthOfStayRuleRulesNightsRange
        """
        return self._nights_range

    @nights_range.setter
    def nights_range(self, nights_range):
        """Sets the nights_range of this AdjustmentConditionLengthOfStayRuleRules.


        :param nights_range: The nights_range of this AdjustmentConditionLengthOfStayRuleRules.
        :type nights_range: AdjustmentConditionLengthOfStayRuleRulesNightsRange
        """
        if nights_range is None:
            raise ValueError("Invalid value for `nights_range`, must not be `None`")

        self._nights_range = nights_range
