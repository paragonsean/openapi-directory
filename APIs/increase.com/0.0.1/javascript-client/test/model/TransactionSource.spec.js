/**
 * Increase API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.IncreaseApi);
  }
}(this, function(expect, IncreaseApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new IncreaseApi.TransactionSource();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('TransactionSource', function() {
    it('should create an instance of TransactionSource', function() {
      // uncomment below and update the code to test TransactionSource
      //var instance = new IncreaseApi.TransactionSource();
      //expect(instance).to.be.a(IncreaseApi.TransactionSource);
    });

    it('should have the property accountTransferIntention (base name: "account_transfer_intention")', function() {
      // uncomment below and update the code to test the property accountTransferIntention
      //var instance = new IncreaseApi.TransactionSource();
      //expect(instance).to.be();
    });

    it('should have the property achCheckConversion (base name: "ach_check_conversion")', function() {
      // uncomment below and update the code to test the property achCheckConversion
      //var instance = new IncreaseApi.TransactionSource();
      //expect(instance).to.be();
    });

    it('should have the property achCheckConversionReturn (base name: "ach_check_conversion_return")', function() {
      // uncomment below and update the code to test the property achCheckConversionReturn
      //var instance = new IncreaseApi.TransactionSource();
      //expect(instance).to.be();
    });

    it('should have the property achTransferIntention (base name: "ach_transfer_intention")', function() {
      // uncomment below and update the code to test the property achTransferIntention
      //var instance = new IncreaseApi.TransactionSource();
      //expect(instance).to.be();
    });

    it('should have the property achTransferRejection (base name: "ach_transfer_rejection")', function() {
      // uncomment below and update the code to test the property achTransferRejection
      //var instance = new IncreaseApi.TransactionSource();
      //expect(instance).to.be();
    });

    it('should have the property achTransferReturn (base name: "ach_transfer_return")', function() {
      // uncomment below and update the code to test the property achTransferReturn
      //var instance = new IncreaseApi.TransactionSource();
      //expect(instance).to.be();
    });

    it('should have the property cardDisputeAcceptance (base name: "card_dispute_acceptance")', function() {
      // uncomment below and update the code to test the property cardDisputeAcceptance
      //var instance = new IncreaseApi.TransactionSource();
      //expect(instance).to.be();
    });

    it('should have the property cardRefund (base name: "card_refund")', function() {
      // uncomment below and update the code to test the property cardRefund
      //var instance = new IncreaseApi.TransactionSource();
      //expect(instance).to.be();
    });

    it('should have the property cardRevenuePayment (base name: "card_revenue_payment")', function() {
      // uncomment below and update the code to test the property cardRevenuePayment
      //var instance = new IncreaseApi.TransactionSource();
      //expect(instance).to.be();
    });

    it('should have the property cardRouteRefund (base name: "card_route_refund")', function() {
      // uncomment below and update the code to test the property cardRouteRefund
      //var instance = new IncreaseApi.TransactionSource();
      //expect(instance).to.be();
    });

    it('should have the property cardRouteSettlement (base name: "card_route_settlement")', function() {
      // uncomment below and update the code to test the property cardRouteSettlement
      //var instance = new IncreaseApi.TransactionSource();
      //expect(instance).to.be();
    });

    it('should have the property cardSettlement (base name: "card_settlement")', function() {
      // uncomment below and update the code to test the property cardSettlement
      //var instance = new IncreaseApi.TransactionSource();
      //expect(instance).to.be();
    });

    it('should have the property category (base name: "category")', function() {
      // uncomment below and update the code to test the property category
      //var instance = new IncreaseApi.TransactionSource();
      //expect(instance).to.be();
    });

    it('should have the property checkDepositAcceptance (base name: "check_deposit_acceptance")', function() {
      // uncomment below and update the code to test the property checkDepositAcceptance
      //var instance = new IncreaseApi.TransactionSource();
      //expect(instance).to.be();
    });

    it('should have the property checkDepositReturn (base name: "check_deposit_return")', function() {
      // uncomment below and update the code to test the property checkDepositReturn
      //var instance = new IncreaseApi.TransactionSource();
      //expect(instance).to.be();
    });

    it('should have the property checkTransferIntention (base name: "check_transfer_intention")', function() {
      // uncomment below and update the code to test the property checkTransferIntention
      //var instance = new IncreaseApi.TransactionSource();
      //expect(instance).to.be();
    });

    it('should have the property checkTransferRejection (base name: "check_transfer_rejection")', function() {
      // uncomment below and update the code to test the property checkTransferRejection
      //var instance = new IncreaseApi.TransactionSource();
      //expect(instance).to.be();
    });

    it('should have the property checkTransferReturn (base name: "check_transfer_return")', function() {
      // uncomment below and update the code to test the property checkTransferReturn
      //var instance = new IncreaseApi.TransactionSource();
      //expect(instance).to.be();
    });

    it('should have the property checkTransferStopPaymentRequest (base name: "check_transfer_stop_payment_request")', function() {
      // uncomment below and update the code to test the property checkTransferStopPaymentRequest
      //var instance = new IncreaseApi.TransactionSource();
      //expect(instance).to.be();
    });

    it('should have the property disputeResolution (base name: "dispute_resolution")', function() {
      // uncomment below and update the code to test the property disputeResolution
      //var instance = new IncreaseApi.TransactionSource();
      //expect(instance).to.be();
    });

    it('should have the property empyrealCashDeposit (base name: "empyreal_cash_deposit")', function() {
      // uncomment below and update the code to test the property empyrealCashDeposit
      //var instance = new IncreaseApi.TransactionSource();
      //expect(instance).to.be();
    });

    it('should have the property feePayment (base name: "fee_payment")', function() {
      // uncomment below and update the code to test the property feePayment
      //var instance = new IncreaseApi.TransactionSource();
      //expect(instance).to.be();
    });

    it('should have the property inboundAchTransfer (base name: "inbound_ach_transfer")', function() {
      // uncomment below and update the code to test the property inboundAchTransfer
      //var instance = new IncreaseApi.TransactionSource();
      //expect(instance).to.be();
    });

    it('should have the property inboundCheck (base name: "inbound_check")', function() {
      // uncomment below and update the code to test the property inboundCheck
      //var instance = new IncreaseApi.TransactionSource();
      //expect(instance).to.be();
    });

    it('should have the property inboundInternationalAchTransfer (base name: "inbound_international_ach_transfer")', function() {
      // uncomment below and update the code to test the property inboundInternationalAchTransfer
      //var instance = new IncreaseApi.TransactionSource();
      //expect(instance).to.be();
    });

    it('should have the property inboundRealTimePaymentsTransferConfirmation (base name: "inbound_real_time_payments_transfer_confirmation")', function() {
      // uncomment below and update the code to test the property inboundRealTimePaymentsTransferConfirmation
      //var instance = new IncreaseApi.TransactionSource();
      //expect(instance).to.be();
    });

    it('should have the property inboundWireDrawdownPayment (base name: "inbound_wire_drawdown_payment")', function() {
      // uncomment below and update the code to test the property inboundWireDrawdownPayment
      //var instance = new IncreaseApi.TransactionSource();
      //expect(instance).to.be();
    });

    it('should have the property inboundWireDrawdownPaymentReversal (base name: "inbound_wire_drawdown_payment_reversal")', function() {
      // uncomment below and update the code to test the property inboundWireDrawdownPaymentReversal
      //var instance = new IncreaseApi.TransactionSource();
      //expect(instance).to.be();
    });

    it('should have the property inboundWireReversal (base name: "inbound_wire_reversal")', function() {
      // uncomment below and update the code to test the property inboundWireReversal
      //var instance = new IncreaseApi.TransactionSource();
      //expect(instance).to.be();
    });

    it('should have the property inboundWireTransfer (base name: "inbound_wire_transfer")', function() {
      // uncomment below and update the code to test the property inboundWireTransfer
      //var instance = new IncreaseApi.TransactionSource();
      //expect(instance).to.be();
    });

    it('should have the property interestPayment (base name: "interest_payment")', function() {
      // uncomment below and update the code to test the property interestPayment
      //var instance = new IncreaseApi.TransactionSource();
      //expect(instance).to.be();
    });

    it('should have the property internalSource (base name: "internal_source")', function() {
      // uncomment below and update the code to test the property internalSource
      //var instance = new IncreaseApi.TransactionSource();
      //expect(instance).to.be();
    });

    it('should have the property realTimePaymentsTransferAcknowledgement (base name: "real_time_payments_transfer_acknowledgement")', function() {
      // uncomment below and update the code to test the property realTimePaymentsTransferAcknowledgement
      //var instance = new IncreaseApi.TransactionSource();
      //expect(instance).to.be();
    });

    it('should have the property sampleFunds (base name: "sample_funds")', function() {
      // uncomment below and update the code to test the property sampleFunds
      //var instance = new IncreaseApi.TransactionSource();
      //expect(instance).to.be();
    });

    it('should have the property wireDrawdownPaymentIntention (base name: "wire_drawdown_payment_intention")', function() {
      // uncomment below and update the code to test the property wireDrawdownPaymentIntention
      //var instance = new IncreaseApi.TransactionSource();
      //expect(instance).to.be();
    });

    it('should have the property wireDrawdownPaymentRejection (base name: "wire_drawdown_payment_rejection")', function() {
      // uncomment below and update the code to test the property wireDrawdownPaymentRejection
      //var instance = new IncreaseApi.TransactionSource();
      //expect(instance).to.be();
    });

    it('should have the property wireTransferIntention (base name: "wire_transfer_intention")', function() {
      // uncomment below and update the code to test the property wireTransferIntention
      //var instance = new IncreaseApi.TransactionSource();
      //expect(instance).to.be();
    });

    it('should have the property wireTransferRejection (base name: "wire_transfer_rejection")', function() {
      // uncomment below and update the code to test the property wireTransferRejection
      //var instance = new IncreaseApi.TransactionSource();
      //expect(instance).to.be();
    });

  });

}));
