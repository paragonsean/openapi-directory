/**
 * Increase API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The EmpyrealCashDeposit model module.
 * @module model/EmpyrealCashDeposit
 * @version 0.0.1
 */
class EmpyrealCashDeposit {
    /**
     * Constructs a new <code>EmpyrealCashDeposit</code>.
     * A Empyreal Cash Deposit object. This field will be present in the JSON response if and only if &#x60;category&#x60; is equal to &#x60;empyreal_cash_deposit&#x60;.
     * @alias module:model/EmpyrealCashDeposit
     * @param amount {Number} The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.
     * @param bagId {String} 
     * @param depositDate {Date} 
     */
    constructor(amount, bagId, depositDate) { 
        
        EmpyrealCashDeposit.initialize(this, amount, bagId, depositDate);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, amount, bagId, depositDate) { 
        obj['amount'] = amount;
        obj['bag_id'] = bagId;
        obj['deposit_date'] = depositDate;
    }

    /**
     * Constructs a <code>EmpyrealCashDeposit</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EmpyrealCashDeposit} obj Optional instance to populate.
     * @return {module:model/EmpyrealCashDeposit} The populated <code>EmpyrealCashDeposit</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EmpyrealCashDeposit();

            if (data.hasOwnProperty('amount')) {
                obj['amount'] = ApiClient.convertToType(data['amount'], 'Number');
            }
            if (data.hasOwnProperty('bag_id')) {
                obj['bag_id'] = ApiClient.convertToType(data['bag_id'], 'String');
            }
            if (data.hasOwnProperty('deposit_date')) {
                obj['deposit_date'] = ApiClient.convertToType(data['deposit_date'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EmpyrealCashDeposit</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EmpyrealCashDeposit</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of EmpyrealCashDeposit.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['bag_id'] && !(typeof data['bag_id'] === 'string' || data['bag_id'] instanceof String)) {
            throw new Error("Expected the field `bag_id` to be a primitive type in the JSON string but got " + data['bag_id']);
        }

        return true;
    }


}

EmpyrealCashDeposit.RequiredProperties = ["amount", "bag_id", "deposit_date"];

/**
 * The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.
 * @member {Number} amount
 */
EmpyrealCashDeposit.prototype['amount'] = undefined;

/**
 * 
 * @member {String} bag_id
 */
EmpyrealCashDeposit.prototype['bag_id'] = undefined;

/**
 * 
 * @member {Date} deposit_date
 */
EmpyrealCashDeposit.prototype['deposit_date'] = undefined;






export default EmpyrealCashDeposit;

