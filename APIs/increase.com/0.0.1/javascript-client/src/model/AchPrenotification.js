/**
 * Increase API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ACHPrenotificationReturn from './ACHPrenotificationReturn';

/**
 * The AchPrenotification model module.
 * @module model/AchPrenotification
 * @version 0.0.1
 */
class AchPrenotification {
    /**
     * Constructs a new <code>AchPrenotification</code>.
     * ACH Prenotifications are one way you can verify account and routing numbers by Automated Clearing House (ACH).
     * @alias module:model/AchPrenotification
     * @param accountNumber {String} The destination account number.
     * @param addendum {String} Additional information for the recipient.
     * @param companyDescriptiveDate {String} The description of the date of the notification.
     * @param companyDiscretionaryData {String} Optional data associated with the notification.
     * @param companyEntryDescription {String} The description of the notification.
     * @param companyName {String} The name by which you know the company.
     * @param createdAt {Date} The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the prenotification was created.
     * @param creditDebitIndicator {module:model/AchPrenotification.CreditDebitIndicatorEnum} If the notification is for a future credit or debit.
     * @param effectiveDate {Date} The effective date in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
     * @param id {String} The ACH Prenotification's identifier.
     * @param prenotificationReturn {module:model/ACHPrenotificationReturn} 
     * @param routingNumber {String} The American Bankers' Association (ABA) Routing Transit Number (RTN).
     * @param status {module:model/AchPrenotification.StatusEnum} The lifecycle status of the ACH Prenotification.
     * @param type {module:model/AchPrenotification.TypeEnum} A constant representing the object's type. For this resource it will always be `ach_prenotification`.
     */
    constructor(accountNumber, addendum, companyDescriptiveDate, companyDiscretionaryData, companyEntryDescription, companyName, createdAt, creditDebitIndicator, effectiveDate, id, prenotificationReturn, routingNumber, status, type) { 
        
        AchPrenotification.initialize(this, accountNumber, addendum, companyDescriptiveDate, companyDiscretionaryData, companyEntryDescription, companyName, createdAt, creditDebitIndicator, effectiveDate, id, prenotificationReturn, routingNumber, status, type);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, accountNumber, addendum, companyDescriptiveDate, companyDiscretionaryData, companyEntryDescription, companyName, createdAt, creditDebitIndicator, effectiveDate, id, prenotificationReturn, routingNumber, status, type) { 
        obj['account_number'] = accountNumber;
        obj['addendum'] = addendum;
        obj['company_descriptive_date'] = companyDescriptiveDate;
        obj['company_discretionary_data'] = companyDiscretionaryData;
        obj['company_entry_description'] = companyEntryDescription;
        obj['company_name'] = companyName;
        obj['created_at'] = createdAt;
        obj['credit_debit_indicator'] = creditDebitIndicator;
        obj['effective_date'] = effectiveDate;
        obj['id'] = id;
        obj['prenotification_return'] = prenotificationReturn;
        obj['routing_number'] = routingNumber;
        obj['status'] = status;
        obj['type'] = type;
    }

    /**
     * Constructs a <code>AchPrenotification</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AchPrenotification} obj Optional instance to populate.
     * @return {module:model/AchPrenotification} The populated <code>AchPrenotification</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AchPrenotification();

            if (data.hasOwnProperty('account_number')) {
                obj['account_number'] = ApiClient.convertToType(data['account_number'], 'String');
            }
            if (data.hasOwnProperty('addendum')) {
                obj['addendum'] = ApiClient.convertToType(data['addendum'], 'String');
            }
            if (data.hasOwnProperty('company_descriptive_date')) {
                obj['company_descriptive_date'] = ApiClient.convertToType(data['company_descriptive_date'], 'String');
            }
            if (data.hasOwnProperty('company_discretionary_data')) {
                obj['company_discretionary_data'] = ApiClient.convertToType(data['company_discretionary_data'], 'String');
            }
            if (data.hasOwnProperty('company_entry_description')) {
                obj['company_entry_description'] = ApiClient.convertToType(data['company_entry_description'], 'String');
            }
            if (data.hasOwnProperty('company_name')) {
                obj['company_name'] = ApiClient.convertToType(data['company_name'], 'String');
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'Date');
            }
            if (data.hasOwnProperty('credit_debit_indicator')) {
                obj['credit_debit_indicator'] = ApiClient.convertToType(data['credit_debit_indicator'], 'String');
            }
            if (data.hasOwnProperty('effective_date')) {
                obj['effective_date'] = ApiClient.convertToType(data['effective_date'], 'Date');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('prenotification_return')) {
                obj['prenotification_return'] = ACHPrenotificationReturn.constructFromObject(data['prenotification_return']);
            }
            if (data.hasOwnProperty('routing_number')) {
                obj['routing_number'] = ApiClient.convertToType(data['routing_number'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AchPrenotification</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AchPrenotification</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AchPrenotification.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['account_number'] && !(typeof data['account_number'] === 'string' || data['account_number'] instanceof String)) {
            throw new Error("Expected the field `account_number` to be a primitive type in the JSON string but got " + data['account_number']);
        }
        // ensure the json data is a string
        if (data['addendum'] && !(typeof data['addendum'] === 'string' || data['addendum'] instanceof String)) {
            throw new Error("Expected the field `addendum` to be a primitive type in the JSON string but got " + data['addendum']);
        }
        // ensure the json data is a string
        if (data['company_descriptive_date'] && !(typeof data['company_descriptive_date'] === 'string' || data['company_descriptive_date'] instanceof String)) {
            throw new Error("Expected the field `company_descriptive_date` to be a primitive type in the JSON string but got " + data['company_descriptive_date']);
        }
        // ensure the json data is a string
        if (data['company_discretionary_data'] && !(typeof data['company_discretionary_data'] === 'string' || data['company_discretionary_data'] instanceof String)) {
            throw new Error("Expected the field `company_discretionary_data` to be a primitive type in the JSON string but got " + data['company_discretionary_data']);
        }
        // ensure the json data is a string
        if (data['company_entry_description'] && !(typeof data['company_entry_description'] === 'string' || data['company_entry_description'] instanceof String)) {
            throw new Error("Expected the field `company_entry_description` to be a primitive type in the JSON string but got " + data['company_entry_description']);
        }
        // ensure the json data is a string
        if (data['company_name'] && !(typeof data['company_name'] === 'string' || data['company_name'] instanceof String)) {
            throw new Error("Expected the field `company_name` to be a primitive type in the JSON string but got " + data['company_name']);
        }
        // ensure the json data is a string
        if (data['credit_debit_indicator'] && !(typeof data['credit_debit_indicator'] === 'string' || data['credit_debit_indicator'] instanceof String)) {
            throw new Error("Expected the field `credit_debit_indicator` to be a primitive type in the JSON string but got " + data['credit_debit_indicator']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // validate the optional field `prenotification_return`
        if (data['prenotification_return']) { // data not null
          ACHPrenotificationReturn.validateJSON(data['prenotification_return']);
        }
        // ensure the json data is a string
        if (data['routing_number'] && !(typeof data['routing_number'] === 'string' || data['routing_number'] instanceof String)) {
            throw new Error("Expected the field `routing_number` to be a primitive type in the JSON string but got " + data['routing_number']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}

AchPrenotification.RequiredProperties = ["account_number", "addendum", "company_descriptive_date", "company_discretionary_data", "company_entry_description", "company_name", "created_at", "credit_debit_indicator", "effective_date", "id", "prenotification_return", "routing_number", "status", "type"];

/**
 * The destination account number.
 * @member {String} account_number
 */
AchPrenotification.prototype['account_number'] = undefined;

/**
 * Additional information for the recipient.
 * @member {String} addendum
 */
AchPrenotification.prototype['addendum'] = undefined;

/**
 * The description of the date of the notification.
 * @member {String} company_descriptive_date
 */
AchPrenotification.prototype['company_descriptive_date'] = undefined;

/**
 * Optional data associated with the notification.
 * @member {String} company_discretionary_data
 */
AchPrenotification.prototype['company_discretionary_data'] = undefined;

/**
 * The description of the notification.
 * @member {String} company_entry_description
 */
AchPrenotification.prototype['company_entry_description'] = undefined;

/**
 * The name by which you know the company.
 * @member {String} company_name
 */
AchPrenotification.prototype['company_name'] = undefined;

/**
 * The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the prenotification was created.
 * @member {Date} created_at
 */
AchPrenotification.prototype['created_at'] = undefined;

/**
 * If the notification is for a future credit or debit.
 * @member {module:model/AchPrenotification.CreditDebitIndicatorEnum} credit_debit_indicator
 */
AchPrenotification.prototype['credit_debit_indicator'] = undefined;

/**
 * The effective date in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
 * @member {Date} effective_date
 */
AchPrenotification.prototype['effective_date'] = undefined;

/**
 * The ACH Prenotification's identifier.
 * @member {String} id
 */
AchPrenotification.prototype['id'] = undefined;

/**
 * @member {module:model/ACHPrenotificationReturn} prenotification_return
 */
AchPrenotification.prototype['prenotification_return'] = undefined;

/**
 * The American Bankers' Association (ABA) Routing Transit Number (RTN).
 * @member {String} routing_number
 */
AchPrenotification.prototype['routing_number'] = undefined;

/**
 * The lifecycle status of the ACH Prenotification.
 * @member {module:model/AchPrenotification.StatusEnum} status
 */
AchPrenotification.prototype['status'] = undefined;

/**
 * A constant representing the object's type. For this resource it will always be `ach_prenotification`.
 * @member {module:model/AchPrenotification.TypeEnum} type
 */
AchPrenotification.prototype['type'] = undefined;





/**
 * Allowed values for the <code>credit_debit_indicator</code> property.
 * @enum {String}
 * @readonly
 */
AchPrenotification['CreditDebitIndicatorEnum'] = {

    /**
     * value: "credit"
     * @const
     */
    "credit": "credit",

    /**
     * value: "debit"
     * @const
     */
    "debit": "debit"
};


/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
AchPrenotification['StatusEnum'] = {

    /**
     * value: "pending_submitting"
     * @const
     */
    "pending_submitting": "pending_submitting",

    /**
     * value: "requires_attention"
     * @const
     */
    "requires_attention": "requires_attention",

    /**
     * value: "returned"
     * @const
     */
    "returned": "returned",

    /**
     * value: "submitted"
     * @const
     */
    "submitted": "submitted"
};


/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
AchPrenotification['TypeEnum'] = {

    /**
     * value: "ach_prenotification"
     * @const
     */
    "ach_prenotification": "ach_prenotification"
};



export default AchPrenotification;

