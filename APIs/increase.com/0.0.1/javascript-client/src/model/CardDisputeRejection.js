/**
 * Increase API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CardDisputeRejection model module.
 * @module model/CardDisputeRejection
 * @version 0.0.1
 */
class CardDisputeRejection {
    /**
     * Constructs a new <code>CardDisputeRejection</code>.
     * If the Card Dispute&#39;s status is &#x60;rejected&#x60;, this will contain details of the unsuccessful dispute.
     * @alias module:model/CardDisputeRejection
     * @param cardDisputeId {String} The identifier of the Card Dispute that was rejected.
     * @param explanation {String} Why the Card Dispute was rejected.
     * @param rejectedAt {Date} The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the Card Dispute was rejected.
     */
    constructor(cardDisputeId, explanation, rejectedAt) { 
        
        CardDisputeRejection.initialize(this, cardDisputeId, explanation, rejectedAt);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, cardDisputeId, explanation, rejectedAt) { 
        obj['card_dispute_id'] = cardDisputeId;
        obj['explanation'] = explanation;
        obj['rejected_at'] = rejectedAt;
    }

    /**
     * Constructs a <code>CardDisputeRejection</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CardDisputeRejection} obj Optional instance to populate.
     * @return {module:model/CardDisputeRejection} The populated <code>CardDisputeRejection</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CardDisputeRejection();

            if (data.hasOwnProperty('card_dispute_id')) {
                obj['card_dispute_id'] = ApiClient.convertToType(data['card_dispute_id'], 'String');
            }
            if (data.hasOwnProperty('explanation')) {
                obj['explanation'] = ApiClient.convertToType(data['explanation'], 'String');
            }
            if (data.hasOwnProperty('rejected_at')) {
                obj['rejected_at'] = ApiClient.convertToType(data['rejected_at'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CardDisputeRejection</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CardDisputeRejection</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CardDisputeRejection.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['card_dispute_id'] && !(typeof data['card_dispute_id'] === 'string' || data['card_dispute_id'] instanceof String)) {
            throw new Error("Expected the field `card_dispute_id` to be a primitive type in the JSON string but got " + data['card_dispute_id']);
        }
        // ensure the json data is a string
        if (data['explanation'] && !(typeof data['explanation'] === 'string' || data['explanation'] instanceof String)) {
            throw new Error("Expected the field `explanation` to be a primitive type in the JSON string but got " + data['explanation']);
        }

        return true;
    }


}

CardDisputeRejection.RequiredProperties = ["card_dispute_id", "explanation", "rejected_at"];

/**
 * The identifier of the Card Dispute that was rejected.
 * @member {String} card_dispute_id
 */
CardDisputeRejection.prototype['card_dispute_id'] = undefined;

/**
 * Why the Card Dispute was rejected.
 * @member {String} explanation
 */
CardDisputeRejection.prototype['explanation'] = undefined;

/**
 * The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the Card Dispute was rejected.
 * @member {Date} rejected_at
 */
CardDisputeRejection.prototype['rejected_at'] = undefined;






export default CardDisputeRejection;

