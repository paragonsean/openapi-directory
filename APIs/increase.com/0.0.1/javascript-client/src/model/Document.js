/**
 * Increase API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Document model module.
 * @module model/Document
 * @version 0.0.1
 */
class Document {
    /**
     * Constructs a new <code>Document</code>.
     * Increase generates certain documents / forms automatically for your application; they can be listed here. Currently the only supported document type is IRS Form 1099-INT.
     * @alias module:model/Document
     * @param category {module:model/Document.CategoryEnum} The type of document.
     * @param createdAt {Date} The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) time at which the Document was created.
     * @param entityId {String} The identifier of the Entity the document was generated for.
     * @param fileId {String} The identifier of the File containing the Document's contents.
     * @param id {String} The Document identifier.
     * @param type {module:model/Document.TypeEnum} A constant representing the object's type. For this resource it will always be `document`.
     */
    constructor(category, createdAt, entityId, fileId, id, type) { 
        
        Document.initialize(this, category, createdAt, entityId, fileId, id, type);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, category, createdAt, entityId, fileId, id, type) { 
        obj['category'] = category;
        obj['created_at'] = createdAt;
        obj['entity_id'] = entityId;
        obj['file_id'] = fileId;
        obj['id'] = id;
        obj['type'] = type;
    }

    /**
     * Constructs a <code>Document</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Document} obj Optional instance to populate.
     * @return {module:model/Document} The populated <code>Document</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Document();

            if (data.hasOwnProperty('category')) {
                obj['category'] = ApiClient.convertToType(data['category'], 'String');
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'Date');
            }
            if (data.hasOwnProperty('entity_id')) {
                obj['entity_id'] = ApiClient.convertToType(data['entity_id'], 'String');
            }
            if (data.hasOwnProperty('file_id')) {
                obj['file_id'] = ApiClient.convertToType(data['file_id'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Document</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Document</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Document.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['category'] && !(typeof data['category'] === 'string' || data['category'] instanceof String)) {
            throw new Error("Expected the field `category` to be a primitive type in the JSON string but got " + data['category']);
        }
        // ensure the json data is a string
        if (data['entity_id'] && !(typeof data['entity_id'] === 'string' || data['entity_id'] instanceof String)) {
            throw new Error("Expected the field `entity_id` to be a primitive type in the JSON string but got " + data['entity_id']);
        }
        // ensure the json data is a string
        if (data['file_id'] && !(typeof data['file_id'] === 'string' || data['file_id'] instanceof String)) {
            throw new Error("Expected the field `file_id` to be a primitive type in the JSON string but got " + data['file_id']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}

Document.RequiredProperties = ["category", "created_at", "entity_id", "file_id", "id", "type"];

/**
 * The type of document.
 * @member {module:model/Document.CategoryEnum} category
 */
Document.prototype['category'] = undefined;

/**
 * The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) time at which the Document was created.
 * @member {Date} created_at
 */
Document.prototype['created_at'] = undefined;

/**
 * The identifier of the Entity the document was generated for.
 * @member {String} entity_id
 */
Document.prototype['entity_id'] = undefined;

/**
 * The identifier of the File containing the Document's contents.
 * @member {String} file_id
 */
Document.prototype['file_id'] = undefined;

/**
 * The Document identifier.
 * @member {String} id
 */
Document.prototype['id'] = undefined;

/**
 * A constant representing the object's type. For this resource it will always be `document`.
 * @member {module:model/Document.TypeEnum} type
 */
Document.prototype['type'] = undefined;





/**
 * Allowed values for the <code>category</code> property.
 * @enum {String}
 * @readonly
 */
Document['CategoryEnum'] = {

    /**
     * value: "account_opening_disclosures"
     * @const
     */
    "account_opening_disclosures": "account_opening_disclosures",

    /**
     * value: "anti_money_laundering_policy"
     * @const
     */
    "anti_money_laundering_policy": "anti_money_laundering_policy",

    /**
     * value: "anti_money_laundering_procedures"
     * @const
     */
    "anti_money_laundering_procedures": "anti_money_laundering_procedures",

    /**
     * value: "audit_report"
     * @const
     */
    "audit_report": "audit_report",

    /**
     * value: "background_checks"
     * @const
     */
    "background_checks": "background_checks",

    /**
     * value: "business_continuity_plan"
     * @const
     */
    "business_continuity_plan": "business_continuity_plan",

    /**
     * value: "collections_policy"
     * @const
     */
    "collections_policy": "collections_policy",

    /**
     * value: "complaints_policy"
     * @const
     */
    "complaints_policy": "complaints_policy",

    /**
     * value: "complaint_report"
     * @const
     */
    "complaint_report": "complaint_report",

    /**
     * value: "compliance_report"
     * @const
     */
    "compliance_report": "compliance_report",

    /**
     * value: "compliance_staffing_plan"
     * @const
     */
    "compliance_staffing_plan": "compliance_staffing_plan",

    /**
     * value: "compliance_management_system_policy"
     * @const
     */
    "compliance_management_system_policy": "compliance_management_system_policy",

    /**
     * value: "consumer_privacy_notice"
     * @const
     */
    "consumer_privacy_notice": "consumer_privacy_notice",

    /**
     * value: "consumer_protection_policy"
     * @const
     */
    "consumer_protection_policy": "consumer_protection_policy",

    /**
     * value: "corporate_formation_document"
     * @const
     */
    "corporate_formation_document": "corporate_formation_document",

    /**
     * value: "credit_monitoring_report"
     * @const
     */
    "credit_monitoring_report": "credit_monitoring_report",

    /**
     * value: "customer_information_program_policy"
     * @const
     */
    "customer_information_program_policy": "customer_information_program_policy",

    /**
     * value: "electronic_funds_tranfer_act_policy"
     * @const
     */
    "electronic_funds_tranfer_act_policy": "electronic_funds_tranfer_act_policy",

    /**
     * value: "employee_overview"
     * @const
     */
    "employee_overview": "employee_overview",

    /**
     * value: "end_user_terms_of_service"
     * @const
     */
    "end_user_terms_of_service": "end_user_terms_of_service",

    /**
     * value: "e_sign_policy"
     * @const
     */
    "e_sign_policy": "e_sign_policy",

    /**
     * value: "financial_statement"
     * @const
     */
    "financial_statement": "financial_statement",

    /**
     * value: "form_1099_int"
     * @const
     */
    "form_1099_int": "form_1099_int",

    /**
     * value: "fraud_prevention_policy"
     * @const
     */
    "fraud_prevention_policy": "fraud_prevention_policy",

    /**
     * value: "funds_availability_policy"
     * @const
     */
    "funds_availability_policy": "funds_availability_policy",

    /**
     * value: "funds_availability_disclosure"
     * @const
     */
    "funds_availability_disclosure": "funds_availability_disclosure",

    /**
     * value: "funds_flow_diagram"
     * @const
     */
    "funds_flow_diagram": "funds_flow_diagram",

    /**
     * value: "gramm_leach_bliley_act_policy"
     * @const
     */
    "gramm_leach_bliley_act_policy": "gramm_leach_bliley_act_policy",

    /**
     * value: "information_security_policy"
     * @const
     */
    "information_security_policy": "information_security_policy",

    /**
     * value: "insurance_policy"
     * @const
     */
    "insurance_policy": "insurance_policy",

    /**
     * value: "investor_presentation"
     * @const
     */
    "investor_presentation": "investor_presentation",

    /**
     * value: "loan_application_processing_policy"
     * @const
     */
    "loan_application_processing_policy": "loan_application_processing_policy",

    /**
     * value: "management_biography"
     * @const
     */
    "management_biography": "management_biography",

    /**
     * value: "marketing_and_advertising_policy"
     * @const
     */
    "marketing_and_advertising_policy": "marketing_and_advertising_policy",

    /**
     * value: "network_security_diagram"
     * @const
     */
    "network_security_diagram": "network_security_diagram",

    /**
     * value: "onboarding_questionnaire"
     * @const
     */
    "onboarding_questionnaire": "onboarding_questionnaire",

    /**
     * value: "penetration_test_report"
     * @const
     */
    "penetration_test_report": "penetration_test_report",

    /**
     * value: "program_risk_assessment"
     * @const
     */
    "program_risk_assessment": "program_risk_assessment",

    /**
     * value: "security_audit_report"
     * @const
     */
    "security_audit_report": "security_audit_report",

    /**
     * value: "servicing_policy"
     * @const
     */
    "servicing_policy": "servicing_policy",

    /**
     * value: "transaction_monitoring_report"
     * @const
     */
    "transaction_monitoring_report": "transaction_monitoring_report",

    /**
     * value: "truth_in_savings_act_policy"
     * @const
     */
    "truth_in_savings_act_policy": "truth_in_savings_act_policy",

    /**
     * value: "underwriting_policy"
     * @const
     */
    "underwriting_policy": "underwriting_policy",

    /**
     * value: "vendor_list"
     * @const
     */
    "vendor_list": "vendor_list",

    /**
     * value: "vendor_management_policy"
     * @const
     */
    "vendor_management_policy": "vendor_management_policy",

    /**
     * value: "vendor_risk_management_report"
     * @const
     */
    "vendor_risk_management_report": "vendor_risk_management_report",

    /**
     * value: "volume_forecast"
     * @const
     */
    "volume_forecast": "volume_forecast"
};


/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
Document['TypeEnum'] = {

    /**
     * value: "document"
     * @const
     */
    "document": "document"
};



export default Document;

