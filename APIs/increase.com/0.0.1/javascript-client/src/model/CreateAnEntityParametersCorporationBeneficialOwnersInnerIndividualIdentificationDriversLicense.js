/**
 * Increase API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CreateAnEntityParametersCorporationBeneficialOwnersInnerIndividualIdentificationDriversLicense model module.
 * @module model/CreateAnEntityParametersCorporationBeneficialOwnersInnerIndividualIdentificationDriversLicense
 * @version 0.0.1
 */
class CreateAnEntityParametersCorporationBeneficialOwnersInnerIndividualIdentificationDriversLicense {
    /**
     * Constructs a new <code>CreateAnEntityParametersCorporationBeneficialOwnersInnerIndividualIdentificationDriversLicense</code>.
     * Information about the United States driver&#39;s license used for identification. Required if &#x60;method&#x60; is equal to &#x60;drivers_license&#x60;.
     * @alias module:model/CreateAnEntityParametersCorporationBeneficialOwnersInnerIndividualIdentificationDriversLicense
     * @param expirationDate {Date} The driver's license's expiration date in YYYY-MM-DD format.
     * @param fileId {String} The identifier of the File containing the driver's license.
     * @param state {String} The state that issued the provided driver's license.
     */
    constructor(expirationDate, fileId, state) { 
        
        CreateAnEntityParametersCorporationBeneficialOwnersInnerIndividualIdentificationDriversLicense.initialize(this, expirationDate, fileId, state);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, expirationDate, fileId, state) { 
        obj['expiration_date'] = expirationDate;
        obj['file_id'] = fileId;
        obj['state'] = state;
    }

    /**
     * Constructs a <code>CreateAnEntityParametersCorporationBeneficialOwnersInnerIndividualIdentificationDriversLicense</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateAnEntityParametersCorporationBeneficialOwnersInnerIndividualIdentificationDriversLicense} obj Optional instance to populate.
     * @return {module:model/CreateAnEntityParametersCorporationBeneficialOwnersInnerIndividualIdentificationDriversLicense} The populated <code>CreateAnEntityParametersCorporationBeneficialOwnersInnerIndividualIdentificationDriversLicense</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateAnEntityParametersCorporationBeneficialOwnersInnerIndividualIdentificationDriversLicense();

            if (data.hasOwnProperty('expiration_date')) {
                obj['expiration_date'] = ApiClient.convertToType(data['expiration_date'], 'Date');
            }
            if (data.hasOwnProperty('file_id')) {
                obj['file_id'] = ApiClient.convertToType(data['file_id'], 'String');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateAnEntityParametersCorporationBeneficialOwnersInnerIndividualIdentificationDriversLicense</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateAnEntityParametersCorporationBeneficialOwnersInnerIndividualIdentificationDriversLicense</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateAnEntityParametersCorporationBeneficialOwnersInnerIndividualIdentificationDriversLicense.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['file_id'] && !(typeof data['file_id'] === 'string' || data['file_id'] instanceof String)) {
            throw new Error("Expected the field `file_id` to be a primitive type in the JSON string but got " + data['file_id']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }

        return true;
    }


}

CreateAnEntityParametersCorporationBeneficialOwnersInnerIndividualIdentificationDriversLicense.RequiredProperties = ["expiration_date", "file_id", "state"];

/**
 * The driver's license's expiration date in YYYY-MM-DD format.
 * @member {Date} expiration_date
 */
CreateAnEntityParametersCorporationBeneficialOwnersInnerIndividualIdentificationDriversLicense.prototype['expiration_date'] = undefined;

/**
 * The identifier of the File containing the driver's license.
 * @member {String} file_id
 */
CreateAnEntityParametersCorporationBeneficialOwnersInnerIndividualIdentificationDriversLicense.prototype['file_id'] = undefined;

/**
 * The state that issued the provided driver's license.
 * @member {String} state
 */
CreateAnEntityParametersCorporationBeneficialOwnersInnerIndividualIdentificationDriversLicense.prototype['state'] = undefined;






export default CreateAnEntityParametersCorporationBeneficialOwnersInnerIndividualIdentificationDriversLicense;

