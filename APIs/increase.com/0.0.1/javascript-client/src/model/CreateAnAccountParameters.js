/**
 * Increase API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CreateAnAccountParameters model module.
 * @module model/CreateAnAccountParameters
 * @version 0.0.1
 */
class CreateAnAccountParameters {
    /**
     * Constructs a new <code>CreateAnAccountParameters</code>.
     * @alias module:model/CreateAnAccountParameters
     * @param name {String} The name you choose for the Account.
     */
    constructor(name) { 
        
        CreateAnAccountParameters.initialize(this, name);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name) { 
        obj['name'] = name;
    }

    /**
     * Constructs a <code>CreateAnAccountParameters</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateAnAccountParameters} obj Optional instance to populate.
     * @return {module:model/CreateAnAccountParameters} The populated <code>CreateAnAccountParameters</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateAnAccountParameters();

            if (data.hasOwnProperty('entity_id')) {
                obj['entity_id'] = ApiClient.convertToType(data['entity_id'], 'String');
            }
            if (data.hasOwnProperty('informational_entity_id')) {
                obj['informational_entity_id'] = ApiClient.convertToType(data['informational_entity_id'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('program_id')) {
                obj['program_id'] = ApiClient.convertToType(data['program_id'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateAnAccountParameters</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateAnAccountParameters</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateAnAccountParameters.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['entity_id'] && !(typeof data['entity_id'] === 'string' || data['entity_id'] instanceof String)) {
            throw new Error("Expected the field `entity_id` to be a primitive type in the JSON string but got " + data['entity_id']);
        }
        // ensure the json data is a string
        if (data['informational_entity_id'] && !(typeof data['informational_entity_id'] === 'string' || data['informational_entity_id'] instanceof String)) {
            throw new Error("Expected the field `informational_entity_id` to be a primitive type in the JSON string but got " + data['informational_entity_id']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['program_id'] && !(typeof data['program_id'] === 'string' || data['program_id'] instanceof String)) {
            throw new Error("Expected the field `program_id` to be a primitive type in the JSON string but got " + data['program_id']);
        }

        return true;
    }


}

CreateAnAccountParameters.RequiredProperties = ["name"];

/**
 * The identifier for the Entity that will own the Account.
 * @member {String} entity_id
 */
CreateAnAccountParameters.prototype['entity_id'] = undefined;

/**
 * The identifier of an Entity that, while not owning the Account, is associated with its activity. Its relationship to your group must be `informational`.
 * @member {String} informational_entity_id
 */
CreateAnAccountParameters.prototype['informational_entity_id'] = undefined;

/**
 * The name you choose for the Account.
 * @member {String} name
 */
CreateAnAccountParameters.prototype['name'] = undefined;

/**
 * The identifier for the Program that this Account falls under.
 * @member {String} program_id
 */
CreateAnAccountParameters.prototype['program_id'] = undefined;






export default CreateAnAccountParameters;

