/**
 * Increase API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CheckTransferReturn model module.
 * @module model/CheckTransferReturn
 * @version 0.0.1
 */
class CheckTransferReturn {
    /**
     * Constructs a new <code>CheckTransferReturn</code>.
     * After a check transfer is returned, this will contain supplemental details. A check transfer is returned when the receiver mails a never deposited check back to the bank printed on the check.
     * @alias module:model/CheckTransferReturn
     * @param fileId {String} If available, a document with additional information about the return.
     * @param reason {module:model/CheckTransferReturn.ReasonEnum} The reason why the check was returned.
     * @param returnedAt {Date} The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the check was returned.
     * @param transactionId {String} The identifier of the Transaction that was created to credit you for the returned check.
     * @param transferId {String} The identifier of the returned Check Transfer.
     */
    constructor(fileId, reason, returnedAt, transactionId, transferId) { 
        
        CheckTransferReturn.initialize(this, fileId, reason, returnedAt, transactionId, transferId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, fileId, reason, returnedAt, transactionId, transferId) { 
        obj['file_id'] = fileId;
        obj['reason'] = reason;
        obj['returned_at'] = returnedAt;
        obj['transaction_id'] = transactionId;
        obj['transfer_id'] = transferId;
    }

    /**
     * Constructs a <code>CheckTransferReturn</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CheckTransferReturn} obj Optional instance to populate.
     * @return {module:model/CheckTransferReturn} The populated <code>CheckTransferReturn</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CheckTransferReturn();

            if (data.hasOwnProperty('file_id')) {
                obj['file_id'] = ApiClient.convertToType(data['file_id'], 'String');
            }
            if (data.hasOwnProperty('reason')) {
                obj['reason'] = ApiClient.convertToType(data['reason'], 'String');
            }
            if (data.hasOwnProperty('returned_at')) {
                obj['returned_at'] = ApiClient.convertToType(data['returned_at'], 'Date');
            }
            if (data.hasOwnProperty('transaction_id')) {
                obj['transaction_id'] = ApiClient.convertToType(data['transaction_id'], 'String');
            }
            if (data.hasOwnProperty('transfer_id')) {
                obj['transfer_id'] = ApiClient.convertToType(data['transfer_id'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CheckTransferReturn</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CheckTransferReturn</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CheckTransferReturn.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['file_id'] && !(typeof data['file_id'] === 'string' || data['file_id'] instanceof String)) {
            throw new Error("Expected the field `file_id` to be a primitive type in the JSON string but got " + data['file_id']);
        }
        // ensure the json data is a string
        if (data['reason'] && !(typeof data['reason'] === 'string' || data['reason'] instanceof String)) {
            throw new Error("Expected the field `reason` to be a primitive type in the JSON string but got " + data['reason']);
        }
        // ensure the json data is a string
        if (data['transaction_id'] && !(typeof data['transaction_id'] === 'string' || data['transaction_id'] instanceof String)) {
            throw new Error("Expected the field `transaction_id` to be a primitive type in the JSON string but got " + data['transaction_id']);
        }
        // ensure the json data is a string
        if (data['transfer_id'] && !(typeof data['transfer_id'] === 'string' || data['transfer_id'] instanceof String)) {
            throw new Error("Expected the field `transfer_id` to be a primitive type in the JSON string but got " + data['transfer_id']);
        }

        return true;
    }


}

CheckTransferReturn.RequiredProperties = ["file_id", "reason", "returned_at", "transaction_id", "transfer_id"];

/**
 * If available, a document with additional information about the return.
 * @member {String} file_id
 */
CheckTransferReturn.prototype['file_id'] = undefined;

/**
 * The reason why the check was returned.
 * @member {module:model/CheckTransferReturn.ReasonEnum} reason
 */
CheckTransferReturn.prototype['reason'] = undefined;

/**
 * The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the check was returned.
 * @member {Date} returned_at
 */
CheckTransferReturn.prototype['returned_at'] = undefined;

/**
 * The identifier of the Transaction that was created to credit you for the returned check.
 * @member {String} transaction_id
 */
CheckTransferReturn.prototype['transaction_id'] = undefined;

/**
 * The identifier of the returned Check Transfer.
 * @member {String} transfer_id
 */
CheckTransferReturn.prototype['transfer_id'] = undefined;





/**
 * Allowed values for the <code>reason</code> property.
 * @enum {String}
 * @readonly
 */
CheckTransferReturn['ReasonEnum'] = {

    /**
     * value: "mail_delivery_failure"
     * @const
     */
    "mail_delivery_failure": "mail_delivery_failure",

    /**
     * value: "refused_by_recipient"
     * @const
     */
    "refused_by_recipient": "refused_by_recipient"
};



export default CheckTransferReturn;

