/**
 * Increase API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ACHTransferIntention model module.
 * @module model/ACHTransferIntention
 * @version 0.0.1
 */
class ACHTransferIntention {
    /**
     * Constructs a new <code>ACHTransferIntention</code>.
     * A ACH Transfer Intention object. This field will be present in the JSON response if and only if &#x60;category&#x60; is equal to &#x60;ach_transfer_intention&#x60;.
     * @alias module:model/ACHTransferIntention
     * @param accountNumber {String} 
     * @param amount {Number} The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.
     * @param routingNumber {String} 
     * @param statementDescriptor {String} 
     * @param transferId {String} The identifier of the ACH Transfer that led to this Transaction.
     */
    constructor(accountNumber, amount, routingNumber, statementDescriptor, transferId) { 
        
        ACHTransferIntention.initialize(this, accountNumber, amount, routingNumber, statementDescriptor, transferId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, accountNumber, amount, routingNumber, statementDescriptor, transferId) { 
        obj['account_number'] = accountNumber;
        obj['amount'] = amount;
        obj['routing_number'] = routingNumber;
        obj['statement_descriptor'] = statementDescriptor;
        obj['transfer_id'] = transferId;
    }

    /**
     * Constructs a <code>ACHTransferIntention</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ACHTransferIntention} obj Optional instance to populate.
     * @return {module:model/ACHTransferIntention} The populated <code>ACHTransferIntention</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ACHTransferIntention();

            if (data.hasOwnProperty('account_number')) {
                obj['account_number'] = ApiClient.convertToType(data['account_number'], 'String');
            }
            if (data.hasOwnProperty('amount')) {
                obj['amount'] = ApiClient.convertToType(data['amount'], 'Number');
            }
            if (data.hasOwnProperty('routing_number')) {
                obj['routing_number'] = ApiClient.convertToType(data['routing_number'], 'String');
            }
            if (data.hasOwnProperty('statement_descriptor')) {
                obj['statement_descriptor'] = ApiClient.convertToType(data['statement_descriptor'], 'String');
            }
            if (data.hasOwnProperty('transfer_id')) {
                obj['transfer_id'] = ApiClient.convertToType(data['transfer_id'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ACHTransferIntention</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ACHTransferIntention</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ACHTransferIntention.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['account_number'] && !(typeof data['account_number'] === 'string' || data['account_number'] instanceof String)) {
            throw new Error("Expected the field `account_number` to be a primitive type in the JSON string but got " + data['account_number']);
        }
        // ensure the json data is a string
        if (data['routing_number'] && !(typeof data['routing_number'] === 'string' || data['routing_number'] instanceof String)) {
            throw new Error("Expected the field `routing_number` to be a primitive type in the JSON string but got " + data['routing_number']);
        }
        // ensure the json data is a string
        if (data['statement_descriptor'] && !(typeof data['statement_descriptor'] === 'string' || data['statement_descriptor'] instanceof String)) {
            throw new Error("Expected the field `statement_descriptor` to be a primitive type in the JSON string but got " + data['statement_descriptor']);
        }
        // ensure the json data is a string
        if (data['transfer_id'] && !(typeof data['transfer_id'] === 'string' || data['transfer_id'] instanceof String)) {
            throw new Error("Expected the field `transfer_id` to be a primitive type in the JSON string but got " + data['transfer_id']);
        }

        return true;
    }


}

ACHTransferIntention.RequiredProperties = ["account_number", "amount", "routing_number", "statement_descriptor", "transfer_id"];

/**
 * 
 * @member {String} account_number
 */
ACHTransferIntention.prototype['account_number'] = undefined;

/**
 * The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.
 * @member {Number} amount
 */
ACHTransferIntention.prototype['amount'] = undefined;

/**
 * 
 * @member {String} routing_number
 */
ACHTransferIntention.prototype['routing_number'] = undefined;

/**
 * 
 * @member {String} statement_descriptor
 */
ACHTransferIntention.prototype['statement_descriptor'] = undefined;

/**
 * The identifier of the ACH Transfer that led to this Transaction.
 * @member {String} transfer_id
 */
ACHTransferIntention.prototype['transfer_id'] = undefined;






export default ACHTransferIntention;

