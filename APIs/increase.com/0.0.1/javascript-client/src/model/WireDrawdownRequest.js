/**
 * Increase API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import WireDrawdownRequestSubmission from './WireDrawdownRequestSubmission';

/**
 * The WireDrawdownRequest model module.
 * @module model/WireDrawdownRequest
 * @version 0.0.1
 */
class WireDrawdownRequest {
    /**
     * Constructs a new <code>WireDrawdownRequest</code>.
     * Wire drawdown requests enable you to request that someone else send you a wire. This feature is in beta; reach out to [support@increase.com](mailto:support@increase.com) to learn more.
     * @alias module:model/WireDrawdownRequest
     * @param accountNumberId {String} The Account Number to which the recipient of this request is being requested to send funds.
     * @param amount {Number} The amount being requested in cents.
     * @param currency {String} The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the amount being requested. Will always be \"USD\".
     * @param fulfillmentTransactionId {String} If the recipient fulfills the drawdown request by sending funds, then this will be the identifier of the corresponding Transaction.
     * @param id {String} The Wire drawdown request identifier.
     * @param messageToRecipient {String} The message the recipient will see as part of the drawdown request.
     * @param recipientAccountNumber {String} The drawdown request's recipient's account number.
     * @param recipientAddressLine1 {String} Line 1 of the drawdown request's recipient's address.
     * @param recipientAddressLine2 {String} Line 2 of the drawdown request's recipient's address.
     * @param recipientAddressLine3 {String} Line 3 of the drawdown request's recipient's address.
     * @param recipientName {String} The drawdown request's recipient's name.
     * @param recipientRoutingNumber {String} The drawdown request's recipient's routing number.
     * @param status {module:model/WireDrawdownRequest.StatusEnum} The lifecycle status of the drawdown request.
     * @param submission {module:model/WireDrawdownRequestSubmission} 
     * @param type {module:model/WireDrawdownRequest.TypeEnum} A constant representing the object's type. For this resource it will always be `wire_drawdown_request`.
     */
    constructor(accountNumberId, amount, currency, fulfillmentTransactionId, id, messageToRecipient, recipientAccountNumber, recipientAddressLine1, recipientAddressLine2, recipientAddressLine3, recipientName, recipientRoutingNumber, status, submission, type) { 
        
        WireDrawdownRequest.initialize(this, accountNumberId, amount, currency, fulfillmentTransactionId, id, messageToRecipient, recipientAccountNumber, recipientAddressLine1, recipientAddressLine2, recipientAddressLine3, recipientName, recipientRoutingNumber, status, submission, type);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, accountNumberId, amount, currency, fulfillmentTransactionId, id, messageToRecipient, recipientAccountNumber, recipientAddressLine1, recipientAddressLine2, recipientAddressLine3, recipientName, recipientRoutingNumber, status, submission, type) { 
        obj['account_number_id'] = accountNumberId;
        obj['amount'] = amount;
        obj['currency'] = currency;
        obj['fulfillment_transaction_id'] = fulfillmentTransactionId;
        obj['id'] = id;
        obj['message_to_recipient'] = messageToRecipient;
        obj['recipient_account_number'] = recipientAccountNumber;
        obj['recipient_address_line1'] = recipientAddressLine1;
        obj['recipient_address_line2'] = recipientAddressLine2;
        obj['recipient_address_line3'] = recipientAddressLine3;
        obj['recipient_name'] = recipientName;
        obj['recipient_routing_number'] = recipientRoutingNumber;
        obj['status'] = status;
        obj['submission'] = submission;
        obj['type'] = type;
    }

    /**
     * Constructs a <code>WireDrawdownRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/WireDrawdownRequest} obj Optional instance to populate.
     * @return {module:model/WireDrawdownRequest} The populated <code>WireDrawdownRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WireDrawdownRequest();

            if (data.hasOwnProperty('account_number_id')) {
                obj['account_number_id'] = ApiClient.convertToType(data['account_number_id'], 'String');
            }
            if (data.hasOwnProperty('amount')) {
                obj['amount'] = ApiClient.convertToType(data['amount'], 'Number');
            }
            if (data.hasOwnProperty('currency')) {
                obj['currency'] = ApiClient.convertToType(data['currency'], 'String');
            }
            if (data.hasOwnProperty('fulfillment_transaction_id')) {
                obj['fulfillment_transaction_id'] = ApiClient.convertToType(data['fulfillment_transaction_id'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('message_to_recipient')) {
                obj['message_to_recipient'] = ApiClient.convertToType(data['message_to_recipient'], 'String');
            }
            if (data.hasOwnProperty('recipient_account_number')) {
                obj['recipient_account_number'] = ApiClient.convertToType(data['recipient_account_number'], 'String');
            }
            if (data.hasOwnProperty('recipient_address_line1')) {
                obj['recipient_address_line1'] = ApiClient.convertToType(data['recipient_address_line1'], 'String');
            }
            if (data.hasOwnProperty('recipient_address_line2')) {
                obj['recipient_address_line2'] = ApiClient.convertToType(data['recipient_address_line2'], 'String');
            }
            if (data.hasOwnProperty('recipient_address_line3')) {
                obj['recipient_address_line3'] = ApiClient.convertToType(data['recipient_address_line3'], 'String');
            }
            if (data.hasOwnProperty('recipient_name')) {
                obj['recipient_name'] = ApiClient.convertToType(data['recipient_name'], 'String');
            }
            if (data.hasOwnProperty('recipient_routing_number')) {
                obj['recipient_routing_number'] = ApiClient.convertToType(data['recipient_routing_number'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('submission')) {
                obj['submission'] = WireDrawdownRequestSubmission.constructFromObject(data['submission']);
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>WireDrawdownRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>WireDrawdownRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of WireDrawdownRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['account_number_id'] && !(typeof data['account_number_id'] === 'string' || data['account_number_id'] instanceof String)) {
            throw new Error("Expected the field `account_number_id` to be a primitive type in the JSON string but got " + data['account_number_id']);
        }
        // ensure the json data is a string
        if (data['currency'] && !(typeof data['currency'] === 'string' || data['currency'] instanceof String)) {
            throw new Error("Expected the field `currency` to be a primitive type in the JSON string but got " + data['currency']);
        }
        // ensure the json data is a string
        if (data['fulfillment_transaction_id'] && !(typeof data['fulfillment_transaction_id'] === 'string' || data['fulfillment_transaction_id'] instanceof String)) {
            throw new Error("Expected the field `fulfillment_transaction_id` to be a primitive type in the JSON string but got " + data['fulfillment_transaction_id']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['message_to_recipient'] && !(typeof data['message_to_recipient'] === 'string' || data['message_to_recipient'] instanceof String)) {
            throw new Error("Expected the field `message_to_recipient` to be a primitive type in the JSON string but got " + data['message_to_recipient']);
        }
        // ensure the json data is a string
        if (data['recipient_account_number'] && !(typeof data['recipient_account_number'] === 'string' || data['recipient_account_number'] instanceof String)) {
            throw new Error("Expected the field `recipient_account_number` to be a primitive type in the JSON string but got " + data['recipient_account_number']);
        }
        // ensure the json data is a string
        if (data['recipient_address_line1'] && !(typeof data['recipient_address_line1'] === 'string' || data['recipient_address_line1'] instanceof String)) {
            throw new Error("Expected the field `recipient_address_line1` to be a primitive type in the JSON string but got " + data['recipient_address_line1']);
        }
        // ensure the json data is a string
        if (data['recipient_address_line2'] && !(typeof data['recipient_address_line2'] === 'string' || data['recipient_address_line2'] instanceof String)) {
            throw new Error("Expected the field `recipient_address_line2` to be a primitive type in the JSON string but got " + data['recipient_address_line2']);
        }
        // ensure the json data is a string
        if (data['recipient_address_line3'] && !(typeof data['recipient_address_line3'] === 'string' || data['recipient_address_line3'] instanceof String)) {
            throw new Error("Expected the field `recipient_address_line3` to be a primitive type in the JSON string but got " + data['recipient_address_line3']);
        }
        // ensure the json data is a string
        if (data['recipient_name'] && !(typeof data['recipient_name'] === 'string' || data['recipient_name'] instanceof String)) {
            throw new Error("Expected the field `recipient_name` to be a primitive type in the JSON string but got " + data['recipient_name']);
        }
        // ensure the json data is a string
        if (data['recipient_routing_number'] && !(typeof data['recipient_routing_number'] === 'string' || data['recipient_routing_number'] instanceof String)) {
            throw new Error("Expected the field `recipient_routing_number` to be a primitive type in the JSON string but got " + data['recipient_routing_number']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        // validate the optional field `submission`
        if (data['submission']) { // data not null
          WireDrawdownRequestSubmission.validateJSON(data['submission']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}

WireDrawdownRequest.RequiredProperties = ["account_number_id", "amount", "currency", "fulfillment_transaction_id", "id", "message_to_recipient", "recipient_account_number", "recipient_address_line1", "recipient_address_line2", "recipient_address_line3", "recipient_name", "recipient_routing_number", "status", "submission", "type"];

/**
 * The Account Number to which the recipient of this request is being requested to send funds.
 * @member {String} account_number_id
 */
WireDrawdownRequest.prototype['account_number_id'] = undefined;

/**
 * The amount being requested in cents.
 * @member {Number} amount
 */
WireDrawdownRequest.prototype['amount'] = undefined;

/**
 * The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the amount being requested. Will always be \"USD\".
 * @member {String} currency
 */
WireDrawdownRequest.prototype['currency'] = undefined;

/**
 * If the recipient fulfills the drawdown request by sending funds, then this will be the identifier of the corresponding Transaction.
 * @member {String} fulfillment_transaction_id
 */
WireDrawdownRequest.prototype['fulfillment_transaction_id'] = undefined;

/**
 * The Wire drawdown request identifier.
 * @member {String} id
 */
WireDrawdownRequest.prototype['id'] = undefined;

/**
 * The message the recipient will see as part of the drawdown request.
 * @member {String} message_to_recipient
 */
WireDrawdownRequest.prototype['message_to_recipient'] = undefined;

/**
 * The drawdown request's recipient's account number.
 * @member {String} recipient_account_number
 */
WireDrawdownRequest.prototype['recipient_account_number'] = undefined;

/**
 * Line 1 of the drawdown request's recipient's address.
 * @member {String} recipient_address_line1
 */
WireDrawdownRequest.prototype['recipient_address_line1'] = undefined;

/**
 * Line 2 of the drawdown request's recipient's address.
 * @member {String} recipient_address_line2
 */
WireDrawdownRequest.prototype['recipient_address_line2'] = undefined;

/**
 * Line 3 of the drawdown request's recipient's address.
 * @member {String} recipient_address_line3
 */
WireDrawdownRequest.prototype['recipient_address_line3'] = undefined;

/**
 * The drawdown request's recipient's name.
 * @member {String} recipient_name
 */
WireDrawdownRequest.prototype['recipient_name'] = undefined;

/**
 * The drawdown request's recipient's routing number.
 * @member {String} recipient_routing_number
 */
WireDrawdownRequest.prototype['recipient_routing_number'] = undefined;

/**
 * The lifecycle status of the drawdown request.
 * @member {module:model/WireDrawdownRequest.StatusEnum} status
 */
WireDrawdownRequest.prototype['status'] = undefined;

/**
 * @member {module:model/WireDrawdownRequestSubmission} submission
 */
WireDrawdownRequest.prototype['submission'] = undefined;

/**
 * A constant representing the object's type. For this resource it will always be `wire_drawdown_request`.
 * @member {module:model/WireDrawdownRequest.TypeEnum} type
 */
WireDrawdownRequest.prototype['type'] = undefined;





/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
WireDrawdownRequest['StatusEnum'] = {

    /**
     * value: "pending_submission"
     * @const
     */
    "pending_submission": "pending_submission",

    /**
     * value: "pending_response"
     * @const
     */
    "pending_response": "pending_response",

    /**
     * value: "fulfilled"
     * @const
     */
    "fulfilled": "fulfilled",

    /**
     * value: "refused"
     * @const
     */
    "refused": "refused"
};


/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
WireDrawdownRequest['TypeEnum'] = {

    /**
     * value: "wire_drawdown_request"
     * @const
     */
    "wire_drawdown_request": "wire_drawdown_request"
};



export default WireDrawdownRequest;

