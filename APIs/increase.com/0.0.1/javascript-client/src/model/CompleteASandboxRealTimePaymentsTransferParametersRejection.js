/**
 * Increase API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CompleteASandboxRealTimePaymentsTransferParametersRejection model module.
 * @module model/CompleteASandboxRealTimePaymentsTransferParametersRejection
 * @version 0.0.1
 */
class CompleteASandboxRealTimePaymentsTransferParametersRejection {
    /**
     * Constructs a new <code>CompleteASandboxRealTimePaymentsTransferParametersRejection</code>.
     * If set, the simulation will reject the transfer.
     * @alias module:model/CompleteASandboxRealTimePaymentsTransferParametersRejection
     * @param rejectReasonCode {module:model/CompleteASandboxRealTimePaymentsTransferParametersRejection.RejectReasonCodeEnum} The reason code that the simulated rejection will have.
     */
    constructor(rejectReasonCode) { 
        
        CompleteASandboxRealTimePaymentsTransferParametersRejection.initialize(this, rejectReasonCode);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, rejectReasonCode) { 
        obj['reject_reason_code'] = rejectReasonCode;
    }

    /**
     * Constructs a <code>CompleteASandboxRealTimePaymentsTransferParametersRejection</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CompleteASandboxRealTimePaymentsTransferParametersRejection} obj Optional instance to populate.
     * @return {module:model/CompleteASandboxRealTimePaymentsTransferParametersRejection} The populated <code>CompleteASandboxRealTimePaymentsTransferParametersRejection</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CompleteASandboxRealTimePaymentsTransferParametersRejection();

            if (data.hasOwnProperty('reject_reason_code')) {
                obj['reject_reason_code'] = ApiClient.convertToType(data['reject_reason_code'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CompleteASandboxRealTimePaymentsTransferParametersRejection</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CompleteASandboxRealTimePaymentsTransferParametersRejection</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CompleteASandboxRealTimePaymentsTransferParametersRejection.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['reject_reason_code'] && !(typeof data['reject_reason_code'] === 'string' || data['reject_reason_code'] instanceof String)) {
            throw new Error("Expected the field `reject_reason_code` to be a primitive type in the JSON string but got " + data['reject_reason_code']);
        }

        return true;
    }


}

CompleteASandboxRealTimePaymentsTransferParametersRejection.RequiredProperties = ["reject_reason_code"];

/**
 * The reason code that the simulated rejection will have.
 * @member {module:model/CompleteASandboxRealTimePaymentsTransferParametersRejection.RejectReasonCodeEnum} reject_reason_code
 */
CompleteASandboxRealTimePaymentsTransferParametersRejection.prototype['reject_reason_code'] = undefined;





/**
 * Allowed values for the <code>reject_reason_code</code> property.
 * @enum {String}
 * @readonly
 */
CompleteASandboxRealTimePaymentsTransferParametersRejection['RejectReasonCodeEnum'] = {

    /**
     * value: "account_closed"
     * @const
     */
    "account_closed": "account_closed",

    /**
     * value: "account_blocked"
     * @const
     */
    "account_blocked": "account_blocked",

    /**
     * value: "invalid_creditor_account_type"
     * @const
     */
    "invalid_creditor_account_type": "invalid_creditor_account_type",

    /**
     * value: "invalid_creditor_account_number"
     * @const
     */
    "invalid_creditor_account_number": "invalid_creditor_account_number",

    /**
     * value: "invalid_creditor_financial_institution_identifier"
     * @const
     */
    "invalid_creditor_financial_institution_identifier": "invalid_creditor_financial_institution_identifier",

    /**
     * value: "end_customer_deceased"
     * @const
     */
    "end_customer_deceased": "end_customer_deceased",

    /**
     * value: "narrative"
     * @const
     */
    "narrative": "narrative",

    /**
     * value: "transaction_forbidden"
     * @const
     */
    "transaction_forbidden": "transaction_forbidden",

    /**
     * value: "transaction_type_not_supported"
     * @const
     */
    "transaction_type_not_supported": "transaction_type_not_supported",

    /**
     * value: "unexpected_amount"
     * @const
     */
    "unexpected_amount": "unexpected_amount",

    /**
     * value: "amount_exceeds_bank_limits"
     * @const
     */
    "amount_exceeds_bank_limits": "amount_exceeds_bank_limits",

    /**
     * value: "invalid_creditor_address"
     * @const
     */
    "invalid_creditor_address": "invalid_creditor_address",

    /**
     * value: "unknown_end_customer"
     * @const
     */
    "unknown_end_customer": "unknown_end_customer",

    /**
     * value: "invalid_debtor_address"
     * @const
     */
    "invalid_debtor_address": "invalid_debtor_address",

    /**
     * value: "timeout"
     * @const
     */
    "timeout": "timeout",

    /**
     * value: "unsupported_message_for_recipient"
     * @const
     */
    "unsupported_message_for_recipient": "unsupported_message_for_recipient",

    /**
     * value: "recipient_connection_not_available"
     * @const
     */
    "recipient_connection_not_available": "recipient_connection_not_available",

    /**
     * value: "real_time_payments_suspended"
     * @const
     */
    "real_time_payments_suspended": "real_time_payments_suspended",

    /**
     * value: "instructed_agent_signed_off"
     * @const
     */
    "instructed_agent_signed_off": "instructed_agent_signed_off",

    /**
     * value: "processing_error"
     * @const
     */
    "processing_error": "processing_error",

    /**
     * value: "other"
     * @const
     */
    "other": "other"
};



export default CompleteASandboxRealTimePaymentsTransferParametersRejection;

