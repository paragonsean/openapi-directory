/**
 * Increase API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Individual4 from './Individual4';

/**
 * The TrusteesElement model module.
 * @module model/TrusteesElement
 * @version 0.0.1
 */
class TrusteesElement {
    /**
     * Constructs a new <code>TrusteesElement</code>.
     * @alias module:model/TrusteesElement
     * @param individual {module:model/Individual4} 
     * @param structure {module:model/TrusteesElement.StructureEnum} The structure of the trustee. Will always be equal to `individual`.
     */
    constructor(individual, structure) { 
        
        TrusteesElement.initialize(this, individual, structure);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, individual, structure) { 
        obj['individual'] = individual;
        obj['structure'] = structure;
    }

    /**
     * Constructs a <code>TrusteesElement</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TrusteesElement} obj Optional instance to populate.
     * @return {module:model/TrusteesElement} The populated <code>TrusteesElement</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TrusteesElement();

            if (data.hasOwnProperty('individual')) {
                obj['individual'] = Individual4.constructFromObject(data['individual']);
            }
            if (data.hasOwnProperty('structure')) {
                obj['structure'] = ApiClient.convertToType(data['structure'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TrusteesElement</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TrusteesElement</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of TrusteesElement.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `individual`
        if (data['individual']) { // data not null
          Individual4.validateJSON(data['individual']);
        }
        // ensure the json data is a string
        if (data['structure'] && !(typeof data['structure'] === 'string' || data['structure'] instanceof String)) {
            throw new Error("Expected the field `structure` to be a primitive type in the JSON string but got " + data['structure']);
        }

        return true;
    }


}

TrusteesElement.RequiredProperties = ["individual", "structure"];

/**
 * @member {module:model/Individual4} individual
 */
TrusteesElement.prototype['individual'] = undefined;

/**
 * The structure of the trustee. Will always be equal to `individual`.
 * @member {module:model/TrusteesElement.StructureEnum} structure
 */
TrusteesElement.prototype['structure'] = undefined;





/**
 * Allowed values for the <code>structure</code> property.
 * @enum {String}
 * @readonly
 */
TrusteesElement['StructureEnum'] = {

    /**
     * value: "individual"
     * @const
     */
    "individual": "individual"
};



export default TrusteesElement;

