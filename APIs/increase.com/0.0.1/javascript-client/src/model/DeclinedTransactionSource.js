/**
 * Increase API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ACHDecline from './ACHDecline';
import CardDecline from './CardDecline';
import CheckDecline from './CheckDecline';
import DeprecatedCardDecline from './DeprecatedCardDecline';
import InboundRealTimePaymentsTransferDecline from './InboundRealTimePaymentsTransferDecline';
import InternationalACHDecline from './InternationalACHDecline';

/**
 * The DeclinedTransactionSource model module.
 * @module model/DeclinedTransactionSource
 * @version 0.0.1
 */
class DeclinedTransactionSource {
    /**
     * Constructs a new <code>DeclinedTransactionSource</code>.
     * This is an object giving more details on the network-level event that caused the Declined Transaction. For example, for a card transaction this lists the merchant&#39;s industry and location. Note that for backwards compatibility reasons, additional undocumented keys may appear in this object. These should be treated as deprecated and will be removed in the future.
     * @alias module:model/DeclinedTransactionSource
     * @param achDecline {module:model/ACHDecline} 
     * @param cardDecline {module:model/CardDecline} 
     * @param cardRouteDecline {module:model/DeprecatedCardDecline} 
     * @param category {module:model/DeclinedTransactionSource.CategoryEnum} The type of decline that took place. We may add additional possible values for this enum over time; your application should be able to handle such additions gracefully.
     * @param checkDecline {module:model/CheckDecline} 
     * @param inboundRealTimePaymentsTransferDecline {module:model/InboundRealTimePaymentsTransferDecline} 
     * @param internationalAchDecline {module:model/InternationalACHDecline} 
     */
    constructor(achDecline, cardDecline, cardRouteDecline, category, checkDecline, inboundRealTimePaymentsTransferDecline, internationalAchDecline) { 
        
        DeclinedTransactionSource.initialize(this, achDecline, cardDecline, cardRouteDecline, category, checkDecline, inboundRealTimePaymentsTransferDecline, internationalAchDecline);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, achDecline, cardDecline, cardRouteDecline, category, checkDecline, inboundRealTimePaymentsTransferDecline, internationalAchDecline) { 
        obj['ach_decline'] = achDecline;
        obj['card_decline'] = cardDecline;
        obj['card_route_decline'] = cardRouteDecline;
        obj['category'] = category;
        obj['check_decline'] = checkDecline;
        obj['inbound_real_time_payments_transfer_decline'] = inboundRealTimePaymentsTransferDecline;
        obj['international_ach_decline'] = internationalAchDecline;
    }

    /**
     * Constructs a <code>DeclinedTransactionSource</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DeclinedTransactionSource} obj Optional instance to populate.
     * @return {module:model/DeclinedTransactionSource} The populated <code>DeclinedTransactionSource</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DeclinedTransactionSource();

            if (data.hasOwnProperty('ach_decline')) {
                obj['ach_decline'] = ACHDecline.constructFromObject(data['ach_decline']);
            }
            if (data.hasOwnProperty('card_decline')) {
                obj['card_decline'] = CardDecline.constructFromObject(data['card_decline']);
            }
            if (data.hasOwnProperty('card_route_decline')) {
                obj['card_route_decline'] = DeprecatedCardDecline.constructFromObject(data['card_route_decline']);
            }
            if (data.hasOwnProperty('category')) {
                obj['category'] = ApiClient.convertToType(data['category'], 'String');
            }
            if (data.hasOwnProperty('check_decline')) {
                obj['check_decline'] = CheckDecline.constructFromObject(data['check_decline']);
            }
            if (data.hasOwnProperty('inbound_real_time_payments_transfer_decline')) {
                obj['inbound_real_time_payments_transfer_decline'] = InboundRealTimePaymentsTransferDecline.constructFromObject(data['inbound_real_time_payments_transfer_decline']);
            }
            if (data.hasOwnProperty('international_ach_decline')) {
                obj['international_ach_decline'] = InternationalACHDecline.constructFromObject(data['international_ach_decline']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DeclinedTransactionSource</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DeclinedTransactionSource</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of DeclinedTransactionSource.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `ach_decline`
        if (data['ach_decline']) { // data not null
          ACHDecline.validateJSON(data['ach_decline']);
        }
        // validate the optional field `card_decline`
        if (data['card_decline']) { // data not null
          CardDecline.validateJSON(data['card_decline']);
        }
        // validate the optional field `card_route_decline`
        if (data['card_route_decline']) { // data not null
          DeprecatedCardDecline.validateJSON(data['card_route_decline']);
        }
        // ensure the json data is a string
        if (data['category'] && !(typeof data['category'] === 'string' || data['category'] instanceof String)) {
            throw new Error("Expected the field `category` to be a primitive type in the JSON string but got " + data['category']);
        }
        // validate the optional field `check_decline`
        if (data['check_decline']) { // data not null
          CheckDecline.validateJSON(data['check_decline']);
        }
        // validate the optional field `inbound_real_time_payments_transfer_decline`
        if (data['inbound_real_time_payments_transfer_decline']) { // data not null
          InboundRealTimePaymentsTransferDecline.validateJSON(data['inbound_real_time_payments_transfer_decline']);
        }
        // validate the optional field `international_ach_decline`
        if (data['international_ach_decline']) { // data not null
          InternationalACHDecline.validateJSON(data['international_ach_decline']);
        }

        return true;
    }


}

DeclinedTransactionSource.RequiredProperties = ["ach_decline", "card_decline", "card_route_decline", "category", "check_decline", "inbound_real_time_payments_transfer_decline", "international_ach_decline"];

/**
 * @member {module:model/ACHDecline} ach_decline
 */
DeclinedTransactionSource.prototype['ach_decline'] = undefined;

/**
 * @member {module:model/CardDecline} card_decline
 */
DeclinedTransactionSource.prototype['card_decline'] = undefined;

/**
 * @member {module:model/DeprecatedCardDecline} card_route_decline
 */
DeclinedTransactionSource.prototype['card_route_decline'] = undefined;

/**
 * The type of decline that took place. We may add additional possible values for this enum over time; your application should be able to handle such additions gracefully.
 * @member {module:model/DeclinedTransactionSource.CategoryEnum} category
 */
DeclinedTransactionSource.prototype['category'] = undefined;

/**
 * @member {module:model/CheckDecline} check_decline
 */
DeclinedTransactionSource.prototype['check_decline'] = undefined;

/**
 * @member {module:model/InboundRealTimePaymentsTransferDecline} inbound_real_time_payments_transfer_decline
 */
DeclinedTransactionSource.prototype['inbound_real_time_payments_transfer_decline'] = undefined;

/**
 * @member {module:model/InternationalACHDecline} international_ach_decline
 */
DeclinedTransactionSource.prototype['international_ach_decline'] = undefined;





/**
 * Allowed values for the <code>category</code> property.
 * @enum {String}
 * @readonly
 */
DeclinedTransactionSource['CategoryEnum'] = {

    /**
     * value: "ach_decline"
     * @const
     */
    "ach_decline": "ach_decline",

    /**
     * value: "card_decline"
     * @const
     */
    "card_decline": "card_decline",

    /**
     * value: "check_decline"
     * @const
     */
    "check_decline": "check_decline",

    /**
     * value: "inbound_real_time_payments_transfer_decline"
     * @const
     */
    "inbound_real_time_payments_transfer_decline": "inbound_real_time_payments_transfer_decline",

    /**
     * value: "international_ach_decline"
     * @const
     */
    "international_ach_decline": "international_ach_decline",

    /**
     * value: "card_route_decline"
     * @const
     */
    "card_route_decline": "card_route_decline",

    /**
     * value: "other"
     * @const
     */
    "other": "other"
};



export default DeclinedTransactionSource;

