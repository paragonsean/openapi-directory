/**
 * Increase API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import InboundACHTransferReturnSubmission from './InboundACHTransferReturnSubmission';

/**
 * The InboundAchTransferReturn model module.
 * @module model/InboundAchTransferReturn
 * @version 0.0.1
 */
class InboundAchTransferReturn {
    /**
     * Constructs a new <code>InboundAchTransferReturn</code>.
     * If unauthorized activity occurs via ACH, you can create an Inbound ACH Transfer Return and we&#39;ll reverse the transaction. You can create an Inbound ACH Transfer return the first two days after receiving an Inbound ACH Transfer.
     * @alias module:model/InboundAchTransferReturn
     * @param id {String} The ID of the Inbound ACH Transfer Return.
     * @param inboundAchTransferTransactionId {String} The ID for the Transaction that is being returned.
     * @param reason {module:model/InboundAchTransferReturn.ReasonEnum} The reason why this transfer will be returned. This is sent to the initiating bank.
     * @param status {module:model/InboundAchTransferReturn.StatusEnum} The lifecycle status of the transfer.
     * @param submission {module:model/InboundACHTransferReturnSubmission} 
     * @param transactionId {String} The ID for the transaction refunding the transfer.
     * @param type {module:model/InboundAchTransferReturn.TypeEnum} A constant representing the object's type. For this resource it will always be `inbound_ach_transfer_return`.
     */
    constructor(id, inboundAchTransferTransactionId, reason, status, submission, transactionId, type) { 
        
        InboundAchTransferReturn.initialize(this, id, inboundAchTransferTransactionId, reason, status, submission, transactionId, type);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, inboundAchTransferTransactionId, reason, status, submission, transactionId, type) { 
        obj['id'] = id;
        obj['inbound_ach_transfer_transaction_id'] = inboundAchTransferTransactionId;
        obj['reason'] = reason;
        obj['status'] = status;
        obj['submission'] = submission;
        obj['transaction_id'] = transactionId;
        obj['type'] = type;
    }

    /**
     * Constructs a <code>InboundAchTransferReturn</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InboundAchTransferReturn} obj Optional instance to populate.
     * @return {module:model/InboundAchTransferReturn} The populated <code>InboundAchTransferReturn</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InboundAchTransferReturn();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('inbound_ach_transfer_transaction_id')) {
                obj['inbound_ach_transfer_transaction_id'] = ApiClient.convertToType(data['inbound_ach_transfer_transaction_id'], 'String');
            }
            if (data.hasOwnProperty('reason')) {
                obj['reason'] = ApiClient.convertToType(data['reason'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('submission')) {
                obj['submission'] = InboundACHTransferReturnSubmission.constructFromObject(data['submission']);
            }
            if (data.hasOwnProperty('transaction_id')) {
                obj['transaction_id'] = ApiClient.convertToType(data['transaction_id'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>InboundAchTransferReturn</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>InboundAchTransferReturn</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of InboundAchTransferReturn.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['inbound_ach_transfer_transaction_id'] && !(typeof data['inbound_ach_transfer_transaction_id'] === 'string' || data['inbound_ach_transfer_transaction_id'] instanceof String)) {
            throw new Error("Expected the field `inbound_ach_transfer_transaction_id` to be a primitive type in the JSON string but got " + data['inbound_ach_transfer_transaction_id']);
        }
        // ensure the json data is a string
        if (data['reason'] && !(typeof data['reason'] === 'string' || data['reason'] instanceof String)) {
            throw new Error("Expected the field `reason` to be a primitive type in the JSON string but got " + data['reason']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        // validate the optional field `submission`
        if (data['submission']) { // data not null
          InboundACHTransferReturnSubmission.validateJSON(data['submission']);
        }
        // ensure the json data is a string
        if (data['transaction_id'] && !(typeof data['transaction_id'] === 'string' || data['transaction_id'] instanceof String)) {
            throw new Error("Expected the field `transaction_id` to be a primitive type in the JSON string but got " + data['transaction_id']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}

InboundAchTransferReturn.RequiredProperties = ["id", "inbound_ach_transfer_transaction_id", "reason", "status", "submission", "transaction_id", "type"];

/**
 * The ID of the Inbound ACH Transfer Return.
 * @member {String} id
 */
InboundAchTransferReturn.prototype['id'] = undefined;

/**
 * The ID for the Transaction that is being returned.
 * @member {String} inbound_ach_transfer_transaction_id
 */
InboundAchTransferReturn.prototype['inbound_ach_transfer_transaction_id'] = undefined;

/**
 * The reason why this transfer will be returned. This is sent to the initiating bank.
 * @member {module:model/InboundAchTransferReturn.ReasonEnum} reason
 */
InboundAchTransferReturn.prototype['reason'] = undefined;

/**
 * The lifecycle status of the transfer.
 * @member {module:model/InboundAchTransferReturn.StatusEnum} status
 */
InboundAchTransferReturn.prototype['status'] = undefined;

/**
 * @member {module:model/InboundACHTransferReturnSubmission} submission
 */
InboundAchTransferReturn.prototype['submission'] = undefined;

/**
 * The ID for the transaction refunding the transfer.
 * @member {String} transaction_id
 */
InboundAchTransferReturn.prototype['transaction_id'] = undefined;

/**
 * A constant representing the object's type. For this resource it will always be `inbound_ach_transfer_return`.
 * @member {module:model/InboundAchTransferReturn.TypeEnum} type
 */
InboundAchTransferReturn.prototype['type'] = undefined;





/**
 * Allowed values for the <code>reason</code> property.
 * @enum {String}
 * @readonly
 */
InboundAchTransferReturn['ReasonEnum'] = {

    /**
     * value: "authorization_revoked_by_customer"
     * @const
     */
    "authorization_revoked_by_customer": "authorization_revoked_by_customer",

    /**
     * value: "payment_stopped"
     * @const
     */
    "payment_stopped": "payment_stopped",

    /**
     * value: "customer_advised_unauthorized_improper_ineligible_or_incomplete"
     * @const
     */
    "customer_advised_unauthorized_improper_ineligible_or_incomplete": "customer_advised_unauthorized_improper_ineligible_or_incomplete",

    /**
     * value: "representative_payee_deceased_or_unable_to_continue_in_that_capacity"
     * @const
     */
    "representative_payee_deceased_or_unable_to_continue_in_that_capacity": "representative_payee_deceased_or_unable_to_continue_in_that_capacity",

    /**
     * value: "beneficiary_or_account_holder_deceased"
     * @const
     */
    "beneficiary_or_account_holder_deceased": "beneficiary_or_account_holder_deceased",

    /**
     * value: "credit_entry_refused_by_receiver"
     * @const
     */
    "credit_entry_refused_by_receiver": "credit_entry_refused_by_receiver",

    /**
     * value: "duplicate_entry"
     * @const
     */
    "duplicate_entry": "duplicate_entry",

    /**
     * value: "corporate_customer_advised_not_authorized"
     * @const
     */
    "corporate_customer_advised_not_authorized": "corporate_customer_advised_not_authorized"
};


/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
InboundAchTransferReturn['StatusEnum'] = {

    /**
     * value: "pending_submitting"
     * @const
     */
    "pending_submitting": "pending_submitting",

    /**
     * value: "submitted"
     * @const
     */
    "submitted": "submitted"
};


/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
InboundAchTransferReturn['TypeEnum'] = {

    /**
     * value: "inbound_ach_transfer_return"
     * @const
     */
    "inbound_ach_transfer_return": "inbound_ach_transfer_return"
};



export default InboundAchTransferReturn;

