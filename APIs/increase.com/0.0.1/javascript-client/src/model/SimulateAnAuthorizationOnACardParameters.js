/**
 * Increase API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SimulateAnAuthorizationOnACardParameters model module.
 * @module model/SimulateAnAuthorizationOnACardParameters
 * @version 0.0.1
 */
class SimulateAnAuthorizationOnACardParameters {
    /**
     * Constructs a new <code>SimulateAnAuthorizationOnACardParameters</code>.
     * @alias module:model/SimulateAnAuthorizationOnACardParameters
     * @param amount {Number} The authorization amount in cents.
     */
    constructor(amount) { 
        
        SimulateAnAuthorizationOnACardParameters.initialize(this, amount);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, amount) { 
        obj['amount'] = amount;
    }

    /**
     * Constructs a <code>SimulateAnAuthorizationOnACardParameters</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SimulateAnAuthorizationOnACardParameters} obj Optional instance to populate.
     * @return {module:model/SimulateAnAuthorizationOnACardParameters} The populated <code>SimulateAnAuthorizationOnACardParameters</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SimulateAnAuthorizationOnACardParameters();

            if (data.hasOwnProperty('amount')) {
                obj['amount'] = ApiClient.convertToType(data['amount'], 'Number');
            }
            if (data.hasOwnProperty('card_id')) {
                obj['card_id'] = ApiClient.convertToType(data['card_id'], 'String');
            }
            if (data.hasOwnProperty('digital_wallet_token_id')) {
                obj['digital_wallet_token_id'] = ApiClient.convertToType(data['digital_wallet_token_id'], 'String');
            }
            if (data.hasOwnProperty('event_subscription_id')) {
                obj['event_subscription_id'] = ApiClient.convertToType(data['event_subscription_id'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SimulateAnAuthorizationOnACardParameters</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SimulateAnAuthorizationOnACardParameters</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of SimulateAnAuthorizationOnACardParameters.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['card_id'] && !(typeof data['card_id'] === 'string' || data['card_id'] instanceof String)) {
            throw new Error("Expected the field `card_id` to be a primitive type in the JSON string but got " + data['card_id']);
        }
        // ensure the json data is a string
        if (data['digital_wallet_token_id'] && !(typeof data['digital_wallet_token_id'] === 'string' || data['digital_wallet_token_id'] instanceof String)) {
            throw new Error("Expected the field `digital_wallet_token_id` to be a primitive type in the JSON string but got " + data['digital_wallet_token_id']);
        }
        // ensure the json data is a string
        if (data['event_subscription_id'] && !(typeof data['event_subscription_id'] === 'string' || data['event_subscription_id'] instanceof String)) {
            throw new Error("Expected the field `event_subscription_id` to be a primitive type in the JSON string but got " + data['event_subscription_id']);
        }

        return true;
    }


}

SimulateAnAuthorizationOnACardParameters.RequiredProperties = ["amount"];

/**
 * The authorization amount in cents.
 * @member {Number} amount
 */
SimulateAnAuthorizationOnACardParameters.prototype['amount'] = undefined;

/**
 * The identifier of the Card to be authorized.
 * @member {String} card_id
 */
SimulateAnAuthorizationOnACardParameters.prototype['card_id'] = undefined;

/**
 * The identifier of the Digital Wallet Token to be authorized.
 * @member {String} digital_wallet_token_id
 */
SimulateAnAuthorizationOnACardParameters.prototype['digital_wallet_token_id'] = undefined;

/**
 * The identifier of the Event Subscription to use. If provided, will override the default real time event subscription. Because you can only create one real time decision event subscription, you can use this field to route events to any specified event subscription for testing purposes.
 * @member {String} event_subscription_id
 */
SimulateAnAuthorizationOnACardParameters.prototype['event_subscription_id'] = undefined;






export default SimulateAnAuthorizationOnACardParameters;

