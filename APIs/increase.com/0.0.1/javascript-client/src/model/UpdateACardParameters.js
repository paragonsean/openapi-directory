/**
 * Increase API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import UpdateACardParametersBillingAddress from './UpdateACardParametersBillingAddress';
import UpdateACardParametersDigitalWallet from './UpdateACardParametersDigitalWallet';

/**
 * The UpdateACardParameters model module.
 * @module model/UpdateACardParameters
 * @version 0.0.1
 */
class UpdateACardParameters {
    /**
     * Constructs a new <code>UpdateACardParameters</code>.
     * @alias module:model/UpdateACardParameters
     */
    constructor() { 
        
        UpdateACardParameters.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UpdateACardParameters</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateACardParameters} obj Optional instance to populate.
     * @return {module:model/UpdateACardParameters} The populated <code>UpdateACardParameters</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateACardParameters();

            if (data.hasOwnProperty('billing_address')) {
                obj['billing_address'] = UpdateACardParametersBillingAddress.constructFromObject(data['billing_address']);
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('digital_wallet')) {
                obj['digital_wallet'] = UpdateACardParametersDigitalWallet.constructFromObject(data['digital_wallet']);
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateACardParameters</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateACardParameters</code>.
     */
    static validateJSON(data) {
        // validate the optional field `billing_address`
        if (data['billing_address']) { // data not null
          UpdateACardParametersBillingAddress.validateJSON(data['billing_address']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // validate the optional field `digital_wallet`
        if (data['digital_wallet']) { // data not null
          UpdateACardParametersDigitalWallet.validateJSON(data['digital_wallet']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }

        return true;
    }


}



/**
 * @member {module:model/UpdateACardParametersBillingAddress} billing_address
 */
UpdateACardParameters.prototype['billing_address'] = undefined;

/**
 * The description you choose to give the card.
 * @member {String} description
 */
UpdateACardParameters.prototype['description'] = undefined;

/**
 * @member {module:model/UpdateACardParametersDigitalWallet} digital_wallet
 */
UpdateACardParameters.prototype['digital_wallet'] = undefined;

/**
 * The status to update the Card with.
 * @member {module:model/UpdateACardParameters.StatusEnum} status
 */
UpdateACardParameters.prototype['status'] = undefined;





/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
UpdateACardParameters['StatusEnum'] = {

    /**
     * value: "active"
     * @const
     */
    "active": "active",

    /**
     * value: "disabled"
     * @const
     */
    "disabled": "disabled",

    /**
     * value: "canceled"
     * @const
     */
    "canceled": "canceled"
};



export default UpdateACardParameters;

