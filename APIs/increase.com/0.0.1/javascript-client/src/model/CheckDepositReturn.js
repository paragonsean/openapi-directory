/**
 * Increase API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CheckDepositReturn model module.
 * @module model/CheckDepositReturn
 * @version 0.0.1
 */
class CheckDepositReturn {
    /**
     * Constructs a new <code>CheckDepositReturn</code>.
     * If your deposit is returned, this will contain details as to why it was returned.
     * @alias module:model/CheckDepositReturn
     * @param amount {Number} The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.
     * @param checkDepositId {String} The identifier of the Check Deposit that was returned.
     * @param currency {module:model/CheckDepositReturn.CurrencyEnum} The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.
     * @param returnReason {module:model/CheckDepositReturn.ReturnReasonEnum} 
     * @param returnedAt {Date} The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the check deposit was returned.
     * @param transactionId {String} The identifier of the transaction that reversed the original check deposit transaction.
     */
    constructor(amount, checkDepositId, currency, returnReason, returnedAt, transactionId) { 
        
        CheckDepositReturn.initialize(this, amount, checkDepositId, currency, returnReason, returnedAt, transactionId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, amount, checkDepositId, currency, returnReason, returnedAt, transactionId) { 
        obj['amount'] = amount;
        obj['check_deposit_id'] = checkDepositId;
        obj['currency'] = currency;
        obj['return_reason'] = returnReason;
        obj['returned_at'] = returnedAt;
        obj['transaction_id'] = transactionId;
    }

    /**
     * Constructs a <code>CheckDepositReturn</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CheckDepositReturn} obj Optional instance to populate.
     * @return {module:model/CheckDepositReturn} The populated <code>CheckDepositReturn</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CheckDepositReturn();

            if (data.hasOwnProperty('amount')) {
                obj['amount'] = ApiClient.convertToType(data['amount'], 'Number');
            }
            if (data.hasOwnProperty('check_deposit_id')) {
                obj['check_deposit_id'] = ApiClient.convertToType(data['check_deposit_id'], 'String');
            }
            if (data.hasOwnProperty('currency')) {
                obj['currency'] = ApiClient.convertToType(data['currency'], 'String');
            }
            if (data.hasOwnProperty('return_reason')) {
                obj['return_reason'] = ApiClient.convertToType(data['return_reason'], 'String');
            }
            if (data.hasOwnProperty('returned_at')) {
                obj['returned_at'] = ApiClient.convertToType(data['returned_at'], 'Date');
            }
            if (data.hasOwnProperty('transaction_id')) {
                obj['transaction_id'] = ApiClient.convertToType(data['transaction_id'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CheckDepositReturn</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CheckDepositReturn</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CheckDepositReturn.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['check_deposit_id'] && !(typeof data['check_deposit_id'] === 'string' || data['check_deposit_id'] instanceof String)) {
            throw new Error("Expected the field `check_deposit_id` to be a primitive type in the JSON string but got " + data['check_deposit_id']);
        }
        // ensure the json data is a string
        if (data['currency'] && !(typeof data['currency'] === 'string' || data['currency'] instanceof String)) {
            throw new Error("Expected the field `currency` to be a primitive type in the JSON string but got " + data['currency']);
        }
        // ensure the json data is a string
        if (data['return_reason'] && !(typeof data['return_reason'] === 'string' || data['return_reason'] instanceof String)) {
            throw new Error("Expected the field `return_reason` to be a primitive type in the JSON string but got " + data['return_reason']);
        }
        // ensure the json data is a string
        if (data['transaction_id'] && !(typeof data['transaction_id'] === 'string' || data['transaction_id'] instanceof String)) {
            throw new Error("Expected the field `transaction_id` to be a primitive type in the JSON string but got " + data['transaction_id']);
        }

        return true;
    }


}

CheckDepositReturn.RequiredProperties = ["amount", "check_deposit_id", "currency", "return_reason", "returned_at", "transaction_id"];

/**
 * The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.
 * @member {Number} amount
 */
CheckDepositReturn.prototype['amount'] = undefined;

/**
 * The identifier of the Check Deposit that was returned.
 * @member {String} check_deposit_id
 */
CheckDepositReturn.prototype['check_deposit_id'] = undefined;

/**
 * The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.
 * @member {module:model/CheckDepositReturn.CurrencyEnum} currency
 */
CheckDepositReturn.prototype['currency'] = undefined;

/**
 * 
 * @member {module:model/CheckDepositReturn.ReturnReasonEnum} return_reason
 */
CheckDepositReturn.prototype['return_reason'] = undefined;

/**
 * The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the check deposit was returned.
 * @member {Date} returned_at
 */
CheckDepositReturn.prototype['returned_at'] = undefined;

/**
 * The identifier of the transaction that reversed the original check deposit transaction.
 * @member {String} transaction_id
 */
CheckDepositReturn.prototype['transaction_id'] = undefined;





/**
 * Allowed values for the <code>currency</code> property.
 * @enum {String}
 * @readonly
 */
CheckDepositReturn['CurrencyEnum'] = {

    /**
     * value: "CAD"
     * @const
     */
    "CAD": "CAD",

    /**
     * value: "CHF"
     * @const
     */
    "CHF": "CHF",

    /**
     * value: "EUR"
     * @const
     */
    "EUR": "EUR",

    /**
     * value: "GBP"
     * @const
     */
    "GBP": "GBP",

    /**
     * value: "JPY"
     * @const
     */
    "JPY": "JPY",

    /**
     * value: "USD"
     * @const
     */
    "USD": "USD"
};


/**
 * Allowed values for the <code>return_reason</code> property.
 * @enum {String}
 * @readonly
 */
CheckDepositReturn['ReturnReasonEnum'] = {

    /**
     * value: "ach_conversion_not_supported"
     * @const
     */
    "ach_conversion_not_supported": "ach_conversion_not_supported",

    /**
     * value: "closed_account"
     * @const
     */
    "closed_account": "closed_account",

    /**
     * value: "duplicate_submission"
     * @const
     */
    "duplicate_submission": "duplicate_submission",

    /**
     * value: "insufficient_funds"
     * @const
     */
    "insufficient_funds": "insufficient_funds",

    /**
     * value: "no_account"
     * @const
     */
    "no_account": "no_account",

    /**
     * value: "not_authorized"
     * @const
     */
    "not_authorized": "not_authorized",

    /**
     * value: "stale_dated"
     * @const
     */
    "stale_dated": "stale_dated",

    /**
     * value: "stop_payment"
     * @const
     */
    "stop_payment": "stop_payment",

    /**
     * value: "unknown_reason"
     * @const
     */
    "unknown_reason": "unknown_reason",

    /**
     * value: "unmatched_details"
     * @const
     */
    "unmatched_details": "unmatched_details",

    /**
     * value: "unreadable_image"
     * @const
     */
    "unreadable_image": "unreadable_image"
};



export default CheckDepositReturn;

