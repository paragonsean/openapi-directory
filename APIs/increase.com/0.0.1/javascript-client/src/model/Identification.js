/**
 * Increase API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Identification model module.
 * @module model/Identification
 * @version 0.0.1
 */
class Identification {
    /**
     * Constructs a new <code>Identification</code>.
     * A means of verifying the person&#39;s identity.
     * @alias module:model/Identification
     * @param method {module:model/Identification.MethodEnum} A method that can be used to verify the individual's identity.
     * @param numberLast4 {String} The last 4 digits of the identification number that can be used to verify the individual's identity.
     */
    constructor(method, numberLast4) { 
        
        Identification.initialize(this, method, numberLast4);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, method, numberLast4) { 
        obj['method'] = method;
        obj['number_last4'] = numberLast4;
    }

    /**
     * Constructs a <code>Identification</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Identification} obj Optional instance to populate.
     * @return {module:model/Identification} The populated <code>Identification</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Identification();

            if (data.hasOwnProperty('method')) {
                obj['method'] = ApiClient.convertToType(data['method'], 'String');
            }
            if (data.hasOwnProperty('number_last4')) {
                obj['number_last4'] = ApiClient.convertToType(data['number_last4'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Identification</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Identification</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Identification.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['method'] && !(typeof data['method'] === 'string' || data['method'] instanceof String)) {
            throw new Error("Expected the field `method` to be a primitive type in the JSON string but got " + data['method']);
        }
        // ensure the json data is a string
        if (data['number_last4'] && !(typeof data['number_last4'] === 'string' || data['number_last4'] instanceof String)) {
            throw new Error("Expected the field `number_last4` to be a primitive type in the JSON string but got " + data['number_last4']);
        }

        return true;
    }


}

Identification.RequiredProperties = ["method", "number_last4"];

/**
 * A method that can be used to verify the individual's identity.
 * @member {module:model/Identification.MethodEnum} method
 */
Identification.prototype['method'] = undefined;

/**
 * The last 4 digits of the identification number that can be used to verify the individual's identity.
 * @member {String} number_last4
 */
Identification.prototype['number_last4'] = undefined;





/**
 * Allowed values for the <code>method</code> property.
 * @enum {String}
 * @readonly
 */
Identification['MethodEnum'] = {

    /**
     * value: "social_security_number"
     * @const
     */
    "social_security_number": "social_security_number",

    /**
     * value: "individual_taxpayer_identification_number"
     * @const
     */
    "individual_taxpayer_identification_number": "individual_taxpayer_identification_number",

    /**
     * value: "passport"
     * @const
     */
    "passport": "passport",

    /**
     * value: "drivers_license"
     * @const
     */
    "drivers_license": "drivers_license",

    /**
     * value: "other"
     * @const
     */
    "other": "other"
};



export default Identification;

