/**
 * Increase API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateACardParametersBillingAddress from './CreateACardParametersBillingAddress';
import CreateACardParametersDigitalWallet from './CreateACardParametersDigitalWallet';

/**
 * The CreateACardParameters model module.
 * @module model/CreateACardParameters
 * @version 0.0.1
 */
class CreateACardParameters {
    /**
     * Constructs a new <code>CreateACardParameters</code>.
     * @alias module:model/CreateACardParameters
     * @param accountId {String} The Account the card should belong to.
     */
    constructor(accountId) { 
        
        CreateACardParameters.initialize(this, accountId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, accountId) { 
        obj['account_id'] = accountId;
    }

    /**
     * Constructs a <code>CreateACardParameters</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateACardParameters} obj Optional instance to populate.
     * @return {module:model/CreateACardParameters} The populated <code>CreateACardParameters</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateACardParameters();

            if (data.hasOwnProperty('account_id')) {
                obj['account_id'] = ApiClient.convertToType(data['account_id'], 'String');
            }
            if (data.hasOwnProperty('billing_address')) {
                obj['billing_address'] = CreateACardParametersBillingAddress.constructFromObject(data['billing_address']);
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('digital_wallet')) {
                obj['digital_wallet'] = CreateACardParametersDigitalWallet.constructFromObject(data['digital_wallet']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateACardParameters</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateACardParameters</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateACardParameters.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['account_id'] && !(typeof data['account_id'] === 'string' || data['account_id'] instanceof String)) {
            throw new Error("Expected the field `account_id` to be a primitive type in the JSON string but got " + data['account_id']);
        }
        // validate the optional field `billing_address`
        if (data['billing_address']) { // data not null
          CreateACardParametersBillingAddress.validateJSON(data['billing_address']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // validate the optional field `digital_wallet`
        if (data['digital_wallet']) { // data not null
          CreateACardParametersDigitalWallet.validateJSON(data['digital_wallet']);
        }

        return true;
    }


}

CreateACardParameters.RequiredProperties = ["account_id"];

/**
 * The Account the card should belong to.
 * @member {String} account_id
 */
CreateACardParameters.prototype['account_id'] = undefined;

/**
 * @member {module:model/CreateACardParametersBillingAddress} billing_address
 */
CreateACardParameters.prototype['billing_address'] = undefined;

/**
 * The description you choose to give the card.
 * @member {String} description
 */
CreateACardParameters.prototype['description'] = undefined;

/**
 * @member {module:model/CreateACardParametersDigitalWallet} digital_wallet
 */
CreateACardParameters.prototype['digital_wallet'] = undefined;






export default CreateACardParameters;

