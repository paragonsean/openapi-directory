/**
 * Increase API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Group model module.
 * @module model/Group
 * @version 0.0.1
 */
class Group {
    /**
     * Constructs a new <code>Group</code>.
     * Groups represent organizations using Increase. You can retrieve information about your own organization via the API, or (more commonly) OAuth platforms can retrieve information about the organizations that have granted them access.
     * @alias module:model/Group
     * @param achDebitStatus {module:model/Group.AchDebitStatusEnum} If the Group is allowed to create ACH debits.
     * @param activationStatus {module:model/Group.ActivationStatusEnum} If the Group is activated or not.
     * @param createdAt {Date} The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) time at which the Group was created.
     * @param id {String} The Group identifier.
     * @param type {module:model/Group.TypeEnum} A constant representing the object's type. For this resource it will always be `group`.
     */
    constructor(achDebitStatus, activationStatus, createdAt, id, type) { 
        
        Group.initialize(this, achDebitStatus, activationStatus, createdAt, id, type);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, achDebitStatus, activationStatus, createdAt, id, type) { 
        obj['ach_debit_status'] = achDebitStatus;
        obj['activation_status'] = activationStatus;
        obj['created_at'] = createdAt;
        obj['id'] = id;
        obj['type'] = type;
    }

    /**
     * Constructs a <code>Group</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Group} obj Optional instance to populate.
     * @return {module:model/Group} The populated <code>Group</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Group();

            if (data.hasOwnProperty('ach_debit_status')) {
                obj['ach_debit_status'] = ApiClient.convertToType(data['ach_debit_status'], 'String');
            }
            if (data.hasOwnProperty('activation_status')) {
                obj['activation_status'] = ApiClient.convertToType(data['activation_status'], 'String');
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'Date');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Group</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Group</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Group.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['ach_debit_status'] && !(typeof data['ach_debit_status'] === 'string' || data['ach_debit_status'] instanceof String)) {
            throw new Error("Expected the field `ach_debit_status` to be a primitive type in the JSON string but got " + data['ach_debit_status']);
        }
        // ensure the json data is a string
        if (data['activation_status'] && !(typeof data['activation_status'] === 'string' || data['activation_status'] instanceof String)) {
            throw new Error("Expected the field `activation_status` to be a primitive type in the JSON string but got " + data['activation_status']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}

Group.RequiredProperties = ["ach_debit_status", "activation_status", "created_at", "id", "type"];

/**
 * If the Group is allowed to create ACH debits.
 * @member {module:model/Group.AchDebitStatusEnum} ach_debit_status
 */
Group.prototype['ach_debit_status'] = undefined;

/**
 * If the Group is activated or not.
 * @member {module:model/Group.ActivationStatusEnum} activation_status
 */
Group.prototype['activation_status'] = undefined;

/**
 * The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) time at which the Group was created.
 * @member {Date} created_at
 */
Group.prototype['created_at'] = undefined;

/**
 * The Group identifier.
 * @member {String} id
 */
Group.prototype['id'] = undefined;

/**
 * A constant representing the object's type. For this resource it will always be `group`.
 * @member {module:model/Group.TypeEnum} type
 */
Group.prototype['type'] = undefined;





/**
 * Allowed values for the <code>ach_debit_status</code> property.
 * @enum {String}
 * @readonly
 */
Group['AchDebitStatusEnum'] = {

    /**
     * value: "disabled"
     * @const
     */
    "disabled": "disabled",

    /**
     * value: "enabled"
     * @const
     */
    "enabled": "enabled"
};


/**
 * Allowed values for the <code>activation_status</code> property.
 * @enum {String}
 * @readonly
 */
Group['ActivationStatusEnum'] = {

    /**
     * value: "unactivated"
     * @const
     */
    "unactivated": "unactivated",

    /**
     * value: "activated"
     * @const
     */
    "activated": "activated"
};


/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
Group['TypeEnum'] = {

    /**
     * value: "group"
     * @const
     */
    "group": "group"
};



export default Group;

