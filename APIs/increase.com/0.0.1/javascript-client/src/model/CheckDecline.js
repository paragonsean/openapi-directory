/**
 * Increase API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CheckDecline model module.
 * @module model/CheckDecline
 * @version 0.0.1
 */
class CheckDecline {
    /**
     * Constructs a new <code>CheckDecline</code>.
     * A Check Decline object. This field will be present in the JSON response if and only if &#x60;category&#x60; is equal to &#x60;check_decline&#x60;.
     * @alias module:model/CheckDecline
     * @param amount {Number} The declined amount in the minor unit of the destination account currency. For dollars, for example, this is cents.
     * @param auxiliaryOnUs {String} 
     * @param reason {module:model/CheckDecline.ReasonEnum} Why the check was declined.
     */
    constructor(amount, auxiliaryOnUs, reason) { 
        
        CheckDecline.initialize(this, amount, auxiliaryOnUs, reason);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, amount, auxiliaryOnUs, reason) { 
        obj['amount'] = amount;
        obj['auxiliary_on_us'] = auxiliaryOnUs;
        obj['reason'] = reason;
    }

    /**
     * Constructs a <code>CheckDecline</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CheckDecline} obj Optional instance to populate.
     * @return {module:model/CheckDecline} The populated <code>CheckDecline</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CheckDecline();

            if (data.hasOwnProperty('amount')) {
                obj['amount'] = ApiClient.convertToType(data['amount'], 'Number');
            }
            if (data.hasOwnProperty('auxiliary_on_us')) {
                obj['auxiliary_on_us'] = ApiClient.convertToType(data['auxiliary_on_us'], 'String');
            }
            if (data.hasOwnProperty('reason')) {
                obj['reason'] = ApiClient.convertToType(data['reason'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CheckDecline</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CheckDecline</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CheckDecline.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['auxiliary_on_us'] && !(typeof data['auxiliary_on_us'] === 'string' || data['auxiliary_on_us'] instanceof String)) {
            throw new Error("Expected the field `auxiliary_on_us` to be a primitive type in the JSON string but got " + data['auxiliary_on_us']);
        }
        // ensure the json data is a string
        if (data['reason'] && !(typeof data['reason'] === 'string' || data['reason'] instanceof String)) {
            throw new Error("Expected the field `reason` to be a primitive type in the JSON string but got " + data['reason']);
        }

        return true;
    }


}

CheckDecline.RequiredProperties = ["amount", "auxiliary_on_us", "reason"];

/**
 * The declined amount in the minor unit of the destination account currency. For dollars, for example, this is cents.
 * @member {Number} amount
 */
CheckDecline.prototype['amount'] = undefined;

/**
 * 
 * @member {String} auxiliary_on_us
 */
CheckDecline.prototype['auxiliary_on_us'] = undefined;

/**
 * Why the check was declined.
 * @member {module:model/CheckDecline.ReasonEnum} reason
 */
CheckDecline.prototype['reason'] = undefined;





/**
 * Allowed values for the <code>reason</code> property.
 * @enum {String}
 * @readonly
 */
CheckDecline['ReasonEnum'] = {

    /**
     * value: "ach_route_canceled"
     * @const
     */
    "ach_route_canceled": "ach_route_canceled",

    /**
     * value: "ach_route_disabled"
     * @const
     */
    "ach_route_disabled": "ach_route_disabled",

    /**
     * value: "breaches_limit"
     * @const
     */
    "breaches_limit": "breaches_limit",

    /**
     * value: "entity_not_active"
     * @const
     */
    "entity_not_active": "entity_not_active",

    /**
     * value: "group_locked"
     * @const
     */
    "group_locked": "group_locked",

    /**
     * value: "insufficient_funds"
     * @const
     */
    "insufficient_funds": "insufficient_funds",

    /**
     * value: "unable_to_locate_account"
     * @const
     */
    "unable_to_locate_account": "unable_to_locate_account",

    /**
     * value: "unable_to_process"
     * @const
     */
    "unable_to_process": "unable_to_process",

    /**
     * value: "refer_to_image"
     * @const
     */
    "refer_to_image": "refer_to_image",

    /**
     * value: "stop_payment_requested"
     * @const
     */
    "stop_payment_requested": "stop_payment_requested",

    /**
     * value: "returned"
     * @const
     */
    "returned": "returned",

    /**
     * value: "duplicate_presentment"
     * @const
     */
    "duplicate_presentment": "duplicate_presentment",

    /**
     * value: "not_authorized"
     * @const
     */
    "not_authorized": "not_authorized"
};



export default CheckDecline;

