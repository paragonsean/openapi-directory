/**
 * Increase API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateAnEntityParametersCorporationBeneficialOwnersInnerIndividualIdentificationDriversLicense from './CreateAnEntityParametersCorporationBeneficialOwnersInnerIndividualIdentificationDriversLicense';
import CreateAnEntityParametersCorporationBeneficialOwnersInnerIndividualIdentificationOther from './CreateAnEntityParametersCorporationBeneficialOwnersInnerIndividualIdentificationOther';
import CreateAnEntityParametersCorporationBeneficialOwnersInnerIndividualIdentificationPassport from './CreateAnEntityParametersCorporationBeneficialOwnersInnerIndividualIdentificationPassport';

/**
 * The CreateAnEntityParametersCorporationBeneficialOwnersInnerIndividualIdentification model module.
 * @module model/CreateAnEntityParametersCorporationBeneficialOwnersInnerIndividualIdentification
 * @version 0.0.1
 */
class CreateAnEntityParametersCorporationBeneficialOwnersInnerIndividualIdentification {
    /**
     * Constructs a new <code>CreateAnEntityParametersCorporationBeneficialOwnersInnerIndividualIdentification</code>.
     * A means of verifying the person&#39;s identity.
     * @alias module:model/CreateAnEntityParametersCorporationBeneficialOwnersInnerIndividualIdentification
     * @param method {module:model/CreateAnEntityParametersCorporationBeneficialOwnersInnerIndividualIdentification.MethodEnum} A method that can be used to verify the individual's identity.
     * @param number {String} An identification number that can be used to verify the individual's identity, such as a social security number.
     */
    constructor(method, number) { 
        
        CreateAnEntityParametersCorporationBeneficialOwnersInnerIndividualIdentification.initialize(this, method, number);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, method, number) { 
        obj['method'] = method;
        obj['number'] = number;
    }

    /**
     * Constructs a <code>CreateAnEntityParametersCorporationBeneficialOwnersInnerIndividualIdentification</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateAnEntityParametersCorporationBeneficialOwnersInnerIndividualIdentification} obj Optional instance to populate.
     * @return {module:model/CreateAnEntityParametersCorporationBeneficialOwnersInnerIndividualIdentification} The populated <code>CreateAnEntityParametersCorporationBeneficialOwnersInnerIndividualIdentification</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateAnEntityParametersCorporationBeneficialOwnersInnerIndividualIdentification();

            if (data.hasOwnProperty('drivers_license')) {
                obj['drivers_license'] = CreateAnEntityParametersCorporationBeneficialOwnersInnerIndividualIdentificationDriversLicense.constructFromObject(data['drivers_license']);
            }
            if (data.hasOwnProperty('method')) {
                obj['method'] = ApiClient.convertToType(data['method'], 'String');
            }
            if (data.hasOwnProperty('number')) {
                obj['number'] = ApiClient.convertToType(data['number'], 'String');
            }
            if (data.hasOwnProperty('other')) {
                obj['other'] = CreateAnEntityParametersCorporationBeneficialOwnersInnerIndividualIdentificationOther.constructFromObject(data['other']);
            }
            if (data.hasOwnProperty('passport')) {
                obj['passport'] = CreateAnEntityParametersCorporationBeneficialOwnersInnerIndividualIdentificationPassport.constructFromObject(data['passport']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateAnEntityParametersCorporationBeneficialOwnersInnerIndividualIdentification</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateAnEntityParametersCorporationBeneficialOwnersInnerIndividualIdentification</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateAnEntityParametersCorporationBeneficialOwnersInnerIndividualIdentification.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `drivers_license`
        if (data['drivers_license']) { // data not null
          CreateAnEntityParametersCorporationBeneficialOwnersInnerIndividualIdentificationDriversLicense.validateJSON(data['drivers_license']);
        }
        // ensure the json data is a string
        if (data['method'] && !(typeof data['method'] === 'string' || data['method'] instanceof String)) {
            throw new Error("Expected the field `method` to be a primitive type in the JSON string but got " + data['method']);
        }
        // ensure the json data is a string
        if (data['number'] && !(typeof data['number'] === 'string' || data['number'] instanceof String)) {
            throw new Error("Expected the field `number` to be a primitive type in the JSON string but got " + data['number']);
        }
        // validate the optional field `other`
        if (data['other']) { // data not null
          CreateAnEntityParametersCorporationBeneficialOwnersInnerIndividualIdentificationOther.validateJSON(data['other']);
        }
        // validate the optional field `passport`
        if (data['passport']) { // data not null
          CreateAnEntityParametersCorporationBeneficialOwnersInnerIndividualIdentificationPassport.validateJSON(data['passport']);
        }

        return true;
    }


}

CreateAnEntityParametersCorporationBeneficialOwnersInnerIndividualIdentification.RequiredProperties = ["method", "number"];

/**
 * @member {module:model/CreateAnEntityParametersCorporationBeneficialOwnersInnerIndividualIdentificationDriversLicense} drivers_license
 */
CreateAnEntityParametersCorporationBeneficialOwnersInnerIndividualIdentification.prototype['drivers_license'] = undefined;

/**
 * A method that can be used to verify the individual's identity.
 * @member {module:model/CreateAnEntityParametersCorporationBeneficialOwnersInnerIndividualIdentification.MethodEnum} method
 */
CreateAnEntityParametersCorporationBeneficialOwnersInnerIndividualIdentification.prototype['method'] = undefined;

/**
 * An identification number that can be used to verify the individual's identity, such as a social security number.
 * @member {String} number
 */
CreateAnEntityParametersCorporationBeneficialOwnersInnerIndividualIdentification.prototype['number'] = undefined;

/**
 * @member {module:model/CreateAnEntityParametersCorporationBeneficialOwnersInnerIndividualIdentificationOther} other
 */
CreateAnEntityParametersCorporationBeneficialOwnersInnerIndividualIdentification.prototype['other'] = undefined;

/**
 * @member {module:model/CreateAnEntityParametersCorporationBeneficialOwnersInnerIndividualIdentificationPassport} passport
 */
CreateAnEntityParametersCorporationBeneficialOwnersInnerIndividualIdentification.prototype['passport'] = undefined;





/**
 * Allowed values for the <code>method</code> property.
 * @enum {String}
 * @readonly
 */
CreateAnEntityParametersCorporationBeneficialOwnersInnerIndividualIdentification['MethodEnum'] = {

    /**
     * value: "social_security_number"
     * @const
     */
    "social_security_number": "social_security_number",

    /**
     * value: "individual_taxpayer_identification_number"
     * @const
     */
    "individual_taxpayer_identification_number": "individual_taxpayer_identification_number",

    /**
     * value: "passport"
     * @const
     */
    "passport": "passport",

    /**
     * value: "drivers_license"
     * @const
     */
    "drivers_license": "drivers_license",

    /**
     * value: "other"
     * @const
     */
    "other": "other"
};



export default CreateAnEntityParametersCorporationBeneficialOwnersInnerIndividualIdentification;

