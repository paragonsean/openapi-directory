/**
 * Increase API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CreateAnAchTransferParameters model module.
 * @module model/CreateAnAchTransferParameters
 * @version 0.0.1
 */
class CreateAnAchTransferParameters {
    /**
     * Constructs a new <code>CreateAnAchTransferParameters</code>.
     * @alias module:model/CreateAnAchTransferParameters
     * @param accountId {String} The Increase identifier for the account that will send the transfer.
     * @param amount {Number} The transfer amount in cents. A positive amount originates a credit transfer pushing funds to the receiving account. A negative amount originates a debit transfer pulling funds from the receiving account.
     * @param statementDescriptor {String} A description you choose to give the transfer. This will be saved with the transfer details, displayed in the dashboard, and returned by the API. If `individual_name` and `company_name` are not explicitly set by this API, the `statement_descriptor` will be sent in those fields to the receiving bank to help the customer recognize the transfer. You are highly encouraged to pass `individual_name` and `company_name` instead of relying on this fallback.
     */
    constructor(accountId, amount, statementDescriptor) { 
        
        CreateAnAchTransferParameters.initialize(this, accountId, amount, statementDescriptor);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, accountId, amount, statementDescriptor) { 
        obj['account_id'] = accountId;
        obj['amount'] = amount;
        obj['statement_descriptor'] = statementDescriptor;
    }

    /**
     * Constructs a <code>CreateAnAchTransferParameters</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateAnAchTransferParameters} obj Optional instance to populate.
     * @return {module:model/CreateAnAchTransferParameters} The populated <code>CreateAnAchTransferParameters</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateAnAchTransferParameters();

            if (data.hasOwnProperty('account_id')) {
                obj['account_id'] = ApiClient.convertToType(data['account_id'], 'String');
            }
            if (data.hasOwnProperty('account_number')) {
                obj['account_number'] = ApiClient.convertToType(data['account_number'], 'String');
            }
            if (data.hasOwnProperty('addendum')) {
                obj['addendum'] = ApiClient.convertToType(data['addendum'], 'String');
            }
            if (data.hasOwnProperty('amount')) {
                obj['amount'] = ApiClient.convertToType(data['amount'], 'Number');
            }
            if (data.hasOwnProperty('company_descriptive_date')) {
                obj['company_descriptive_date'] = ApiClient.convertToType(data['company_descriptive_date'], 'String');
            }
            if (data.hasOwnProperty('company_discretionary_data')) {
                obj['company_discretionary_data'] = ApiClient.convertToType(data['company_discretionary_data'], 'String');
            }
            if (data.hasOwnProperty('company_entry_description')) {
                obj['company_entry_description'] = ApiClient.convertToType(data['company_entry_description'], 'String');
            }
            if (data.hasOwnProperty('company_name')) {
                obj['company_name'] = ApiClient.convertToType(data['company_name'], 'String');
            }
            if (data.hasOwnProperty('effective_date')) {
                obj['effective_date'] = ApiClient.convertToType(data['effective_date'], 'Date');
            }
            if (data.hasOwnProperty('external_account_id')) {
                obj['external_account_id'] = ApiClient.convertToType(data['external_account_id'], 'String');
            }
            if (data.hasOwnProperty('funding')) {
                obj['funding'] = ApiClient.convertToType(data['funding'], 'String');
            }
            if (data.hasOwnProperty('individual_id')) {
                obj['individual_id'] = ApiClient.convertToType(data['individual_id'], 'String');
            }
            if (data.hasOwnProperty('individual_name')) {
                obj['individual_name'] = ApiClient.convertToType(data['individual_name'], 'String');
            }
            if (data.hasOwnProperty('require_approval')) {
                obj['require_approval'] = ApiClient.convertToType(data['require_approval'], 'Boolean');
            }
            if (data.hasOwnProperty('routing_number')) {
                obj['routing_number'] = ApiClient.convertToType(data['routing_number'], 'String');
            }
            if (data.hasOwnProperty('standard_entry_class_code')) {
                obj['standard_entry_class_code'] = ApiClient.convertToType(data['standard_entry_class_code'], 'String');
            }
            if (data.hasOwnProperty('statement_descriptor')) {
                obj['statement_descriptor'] = ApiClient.convertToType(data['statement_descriptor'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateAnAchTransferParameters</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateAnAchTransferParameters</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateAnAchTransferParameters.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['account_id'] && !(typeof data['account_id'] === 'string' || data['account_id'] instanceof String)) {
            throw new Error("Expected the field `account_id` to be a primitive type in the JSON string but got " + data['account_id']);
        }
        // ensure the json data is a string
        if (data['account_number'] && !(typeof data['account_number'] === 'string' || data['account_number'] instanceof String)) {
            throw new Error("Expected the field `account_number` to be a primitive type in the JSON string but got " + data['account_number']);
        }
        // ensure the json data is a string
        if (data['addendum'] && !(typeof data['addendum'] === 'string' || data['addendum'] instanceof String)) {
            throw new Error("Expected the field `addendum` to be a primitive type in the JSON string but got " + data['addendum']);
        }
        // ensure the json data is a string
        if (data['company_descriptive_date'] && !(typeof data['company_descriptive_date'] === 'string' || data['company_descriptive_date'] instanceof String)) {
            throw new Error("Expected the field `company_descriptive_date` to be a primitive type in the JSON string but got " + data['company_descriptive_date']);
        }
        // ensure the json data is a string
        if (data['company_discretionary_data'] && !(typeof data['company_discretionary_data'] === 'string' || data['company_discretionary_data'] instanceof String)) {
            throw new Error("Expected the field `company_discretionary_data` to be a primitive type in the JSON string but got " + data['company_discretionary_data']);
        }
        // ensure the json data is a string
        if (data['company_entry_description'] && !(typeof data['company_entry_description'] === 'string' || data['company_entry_description'] instanceof String)) {
            throw new Error("Expected the field `company_entry_description` to be a primitive type in the JSON string but got " + data['company_entry_description']);
        }
        // ensure the json data is a string
        if (data['company_name'] && !(typeof data['company_name'] === 'string' || data['company_name'] instanceof String)) {
            throw new Error("Expected the field `company_name` to be a primitive type in the JSON string but got " + data['company_name']);
        }
        // ensure the json data is a string
        if (data['external_account_id'] && !(typeof data['external_account_id'] === 'string' || data['external_account_id'] instanceof String)) {
            throw new Error("Expected the field `external_account_id` to be a primitive type in the JSON string but got " + data['external_account_id']);
        }
        // ensure the json data is a string
        if (data['funding'] && !(typeof data['funding'] === 'string' || data['funding'] instanceof String)) {
            throw new Error("Expected the field `funding` to be a primitive type in the JSON string but got " + data['funding']);
        }
        // ensure the json data is a string
        if (data['individual_id'] && !(typeof data['individual_id'] === 'string' || data['individual_id'] instanceof String)) {
            throw new Error("Expected the field `individual_id` to be a primitive type in the JSON string but got " + data['individual_id']);
        }
        // ensure the json data is a string
        if (data['individual_name'] && !(typeof data['individual_name'] === 'string' || data['individual_name'] instanceof String)) {
            throw new Error("Expected the field `individual_name` to be a primitive type in the JSON string but got " + data['individual_name']);
        }
        // ensure the json data is a string
        if (data['routing_number'] && !(typeof data['routing_number'] === 'string' || data['routing_number'] instanceof String)) {
            throw new Error("Expected the field `routing_number` to be a primitive type in the JSON string but got " + data['routing_number']);
        }
        // ensure the json data is a string
        if (data['standard_entry_class_code'] && !(typeof data['standard_entry_class_code'] === 'string' || data['standard_entry_class_code'] instanceof String)) {
            throw new Error("Expected the field `standard_entry_class_code` to be a primitive type in the JSON string but got " + data['standard_entry_class_code']);
        }
        // ensure the json data is a string
        if (data['statement_descriptor'] && !(typeof data['statement_descriptor'] === 'string' || data['statement_descriptor'] instanceof String)) {
            throw new Error("Expected the field `statement_descriptor` to be a primitive type in the JSON string but got " + data['statement_descriptor']);
        }

        return true;
    }


}

CreateAnAchTransferParameters.RequiredProperties = ["account_id", "amount", "statement_descriptor"];

/**
 * The Increase identifier for the account that will send the transfer.
 * @member {String} account_id
 */
CreateAnAchTransferParameters.prototype['account_id'] = undefined;

/**
 * The account number for the destination account.
 * @member {String} account_number
 */
CreateAnAchTransferParameters.prototype['account_number'] = undefined;

/**
 * Additional information that will be sent to the recipient. This is included in the transfer data sent to the receiving bank.
 * @member {String} addendum
 */
CreateAnAchTransferParameters.prototype['addendum'] = undefined;

/**
 * The transfer amount in cents. A positive amount originates a credit transfer pushing funds to the receiving account. A negative amount originates a debit transfer pulling funds from the receiving account.
 * @member {Number} amount
 */
CreateAnAchTransferParameters.prototype['amount'] = undefined;

/**
 * The description of the date of the transfer, usually in the format `YYMMDD`. This is included in the transfer data sent to the receiving bank.
 * @member {String} company_descriptive_date
 */
CreateAnAchTransferParameters.prototype['company_descriptive_date'] = undefined;

/**
 * The data you choose to associate with the transfer. This is included in the transfer data sent to the receiving bank.
 * @member {String} company_discretionary_data
 */
CreateAnAchTransferParameters.prototype['company_discretionary_data'] = undefined;

/**
 * A description of the transfer. This is included in the transfer data sent to the receiving bank.
 * @member {String} company_entry_description
 */
CreateAnAchTransferParameters.prototype['company_entry_description'] = undefined;

/**
 * The name by which the recipient knows you. This is included in the transfer data sent to the receiving bank.
 * @member {String} company_name
 */
CreateAnAchTransferParameters.prototype['company_name'] = undefined;

/**
 * The transfer effective date in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
 * @member {Date} effective_date
 */
CreateAnAchTransferParameters.prototype['effective_date'] = undefined;

/**
 * The ID of an External Account to initiate a transfer to. If this parameter is provided, `account_number`, `routing_number`, and `funding` must be absent.
 * @member {String} external_account_id
 */
CreateAnAchTransferParameters.prototype['external_account_id'] = undefined;

/**
 * The type of the account to which the transfer will be sent.
 * @member {module:model/CreateAnAchTransferParameters.FundingEnum} funding
 */
CreateAnAchTransferParameters.prototype['funding'] = undefined;

/**
 * Your identifer for the transfer recipient.
 * @member {String} individual_id
 */
CreateAnAchTransferParameters.prototype['individual_id'] = undefined;

/**
 * The name of the transfer recipient. This value is informational and not verified by the recipient's bank.
 * @member {String} individual_name
 */
CreateAnAchTransferParameters.prototype['individual_name'] = undefined;

/**
 * Whether the transfer requires explicit approval via the dashboard or API.
 * @member {Boolean} require_approval
 */
CreateAnAchTransferParameters.prototype['require_approval'] = undefined;

/**
 * The American Bankers' Association (ABA) Routing Transit Number (RTN) for the destination account.
 * @member {String} routing_number
 */
CreateAnAchTransferParameters.prototype['routing_number'] = undefined;

/**
 * The Standard Entry Class (SEC) code to use for the transfer.
 * @member {module:model/CreateAnAchTransferParameters.StandardEntryClassCodeEnum} standard_entry_class_code
 */
CreateAnAchTransferParameters.prototype['standard_entry_class_code'] = undefined;

/**
 * A description you choose to give the transfer. This will be saved with the transfer details, displayed in the dashboard, and returned by the API. If `individual_name` and `company_name` are not explicitly set by this API, the `statement_descriptor` will be sent in those fields to the receiving bank to help the customer recognize the transfer. You are highly encouraged to pass `individual_name` and `company_name` instead of relying on this fallback.
 * @member {String} statement_descriptor
 */
CreateAnAchTransferParameters.prototype['statement_descriptor'] = undefined;





/**
 * Allowed values for the <code>funding</code> property.
 * @enum {String}
 * @readonly
 */
CreateAnAchTransferParameters['FundingEnum'] = {

    /**
     * value: "checking"
     * @const
     */
    "checking": "checking",

    /**
     * value: "savings"
     * @const
     */
    "savings": "savings"
};


/**
 * Allowed values for the <code>standard_entry_class_code</code> property.
 * @enum {String}
 * @readonly
 */
CreateAnAchTransferParameters['StandardEntryClassCodeEnum'] = {

    /**
     * value: "corporate_credit_or_debit"
     * @const
     */
    "corporate_credit_or_debit": "corporate_credit_or_debit",

    /**
     * value: "prearranged_payments_and_deposit"
     * @const
     */
    "prearranged_payments_and_deposit": "prearranged_payments_and_deposit",

    /**
     * value: "internet_initiated"
     * @const
     */
    "internet_initiated": "internet_initiated"
};



export default CreateAnAchTransferParameters;

