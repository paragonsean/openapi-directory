/**
 * Increase API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CreateABookkeepingAccountParameters model module.
 * @module model/CreateABookkeepingAccountParameters
 * @version 0.0.1
 */
class CreateABookkeepingAccountParameters {
    /**
     * Constructs a new <code>CreateABookkeepingAccountParameters</code>.
     * @alias module:model/CreateABookkeepingAccountParameters
     * @param name {String} The name you choose for the account.
     */
    constructor(name) { 
        
        CreateABookkeepingAccountParameters.initialize(this, name);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name) { 
        obj['name'] = name;
    }

    /**
     * Constructs a <code>CreateABookkeepingAccountParameters</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateABookkeepingAccountParameters} obj Optional instance to populate.
     * @return {module:model/CreateABookkeepingAccountParameters} The populated <code>CreateABookkeepingAccountParameters</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateABookkeepingAccountParameters();

            if (data.hasOwnProperty('account_id')) {
                obj['account_id'] = ApiClient.convertToType(data['account_id'], 'String');
            }
            if (data.hasOwnProperty('compliance_category')) {
                obj['compliance_category'] = ApiClient.convertToType(data['compliance_category'], 'String');
            }
            if (data.hasOwnProperty('entity_id')) {
                obj['entity_id'] = ApiClient.convertToType(data['entity_id'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateABookkeepingAccountParameters</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateABookkeepingAccountParameters</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateABookkeepingAccountParameters.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['account_id'] && !(typeof data['account_id'] === 'string' || data['account_id'] instanceof String)) {
            throw new Error("Expected the field `account_id` to be a primitive type in the JSON string but got " + data['account_id']);
        }
        // ensure the json data is a string
        if (data['compliance_category'] && !(typeof data['compliance_category'] === 'string' || data['compliance_category'] instanceof String)) {
            throw new Error("Expected the field `compliance_category` to be a primitive type in the JSON string but got " + data['compliance_category']);
        }
        // ensure the json data is a string
        if (data['entity_id'] && !(typeof data['entity_id'] === 'string' || data['entity_id'] instanceof String)) {
            throw new Error("Expected the field `entity_id` to be a primitive type in the JSON string but got " + data['entity_id']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }

        return true;
    }


}

CreateABookkeepingAccountParameters.RequiredProperties = ["name"];

/**
 * The entity, if `compliance_category` is `commingled_cash`.
 * @member {String} account_id
 */
CreateABookkeepingAccountParameters.prototype['account_id'] = undefined;

/**
 * The account compliance category.
 * @member {module:model/CreateABookkeepingAccountParameters.ComplianceCategoryEnum} compliance_category
 */
CreateABookkeepingAccountParameters.prototype['compliance_category'] = undefined;

/**
 * The entity, if `compliance_category` is `customer_balance`.
 * @member {String} entity_id
 */
CreateABookkeepingAccountParameters.prototype['entity_id'] = undefined;

/**
 * The name you choose for the account.
 * @member {String} name
 */
CreateABookkeepingAccountParameters.prototype['name'] = undefined;





/**
 * Allowed values for the <code>compliance_category</code> property.
 * @enum {String}
 * @readonly
 */
CreateABookkeepingAccountParameters['ComplianceCategoryEnum'] = {

    /**
     * value: "commingled_cash"
     * @const
     */
    "commingled_cash": "commingled_cash",

    /**
     * value: "customer_balance"
     * @const
     */
    "customer_balance": "customer_balance"
};



export default CreateABookkeepingAccountParameters;

