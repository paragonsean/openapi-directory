/**
 * Increase API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The WireTransferIntention model module.
 * @module model/WireTransferIntention
 * @version 0.0.1
 */
class WireTransferIntention {
    /**
     * Constructs a new <code>WireTransferIntention</code>.
     * A Wire Transfer Intention object. This field will be present in the JSON response if and only if &#x60;category&#x60; is equal to &#x60;wire_transfer_intention&#x60;.
     * @alias module:model/WireTransferIntention
     * @param accountNumber {String} The destination account number.
     * @param amount {Number} The transfer amount in USD cents.
     * @param messageToRecipient {String} The message that will show on the recipient's bank statement.
     * @param routingNumber {String} The American Bankers' Association (ABA) Routing Transit Number (RTN).
     * @param transferId {String} 
     */
    constructor(accountNumber, amount, messageToRecipient, routingNumber, transferId) { 
        
        WireTransferIntention.initialize(this, accountNumber, amount, messageToRecipient, routingNumber, transferId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, accountNumber, amount, messageToRecipient, routingNumber, transferId) { 
        obj['account_number'] = accountNumber;
        obj['amount'] = amount;
        obj['message_to_recipient'] = messageToRecipient;
        obj['routing_number'] = routingNumber;
        obj['transfer_id'] = transferId;
    }

    /**
     * Constructs a <code>WireTransferIntention</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/WireTransferIntention} obj Optional instance to populate.
     * @return {module:model/WireTransferIntention} The populated <code>WireTransferIntention</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WireTransferIntention();

            if (data.hasOwnProperty('account_number')) {
                obj['account_number'] = ApiClient.convertToType(data['account_number'], 'String');
            }
            if (data.hasOwnProperty('amount')) {
                obj['amount'] = ApiClient.convertToType(data['amount'], 'Number');
            }
            if (data.hasOwnProperty('message_to_recipient')) {
                obj['message_to_recipient'] = ApiClient.convertToType(data['message_to_recipient'], 'String');
            }
            if (data.hasOwnProperty('routing_number')) {
                obj['routing_number'] = ApiClient.convertToType(data['routing_number'], 'String');
            }
            if (data.hasOwnProperty('transfer_id')) {
                obj['transfer_id'] = ApiClient.convertToType(data['transfer_id'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>WireTransferIntention</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>WireTransferIntention</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of WireTransferIntention.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['account_number'] && !(typeof data['account_number'] === 'string' || data['account_number'] instanceof String)) {
            throw new Error("Expected the field `account_number` to be a primitive type in the JSON string but got " + data['account_number']);
        }
        // ensure the json data is a string
        if (data['message_to_recipient'] && !(typeof data['message_to_recipient'] === 'string' || data['message_to_recipient'] instanceof String)) {
            throw new Error("Expected the field `message_to_recipient` to be a primitive type in the JSON string but got " + data['message_to_recipient']);
        }
        // ensure the json data is a string
        if (data['routing_number'] && !(typeof data['routing_number'] === 'string' || data['routing_number'] instanceof String)) {
            throw new Error("Expected the field `routing_number` to be a primitive type in the JSON string but got " + data['routing_number']);
        }
        // ensure the json data is a string
        if (data['transfer_id'] && !(typeof data['transfer_id'] === 'string' || data['transfer_id'] instanceof String)) {
            throw new Error("Expected the field `transfer_id` to be a primitive type in the JSON string but got " + data['transfer_id']);
        }

        return true;
    }


}

WireTransferIntention.RequiredProperties = ["account_number", "amount", "message_to_recipient", "routing_number", "transfer_id"];

/**
 * The destination account number.
 * @member {String} account_number
 */
WireTransferIntention.prototype['account_number'] = undefined;

/**
 * The transfer amount in USD cents.
 * @member {Number} amount
 */
WireTransferIntention.prototype['amount'] = undefined;

/**
 * The message that will show on the recipient's bank statement.
 * @member {String} message_to_recipient
 */
WireTransferIntention.prototype['message_to_recipient'] = undefined;

/**
 * The American Bankers' Association (ABA) Routing Transit Number (RTN).
 * @member {String} routing_number
 */
WireTransferIntention.prototype['routing_number'] = undefined;

/**
 * 
 * @member {String} transfer_id
 */
WireTransferIntention.prototype['transfer_id'] = undefined;






export default WireTransferIntention;

