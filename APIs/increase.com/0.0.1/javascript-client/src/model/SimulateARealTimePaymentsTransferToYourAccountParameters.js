/**
 * Increase API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SimulateARealTimePaymentsTransferToYourAccountParameters model module.
 * @module model/SimulateARealTimePaymentsTransferToYourAccountParameters
 * @version 0.0.1
 */
class SimulateARealTimePaymentsTransferToYourAccountParameters {
    /**
     * Constructs a new <code>SimulateARealTimePaymentsTransferToYourAccountParameters</code>.
     * @alias module:model/SimulateARealTimePaymentsTransferToYourAccountParameters
     * @param accountNumberId {String} The identifier of the Account Number the inbound Real Time Payments Transfer is for.
     * @param amount {Number} The transfer amount in USD cents. Must be positive.
     */
    constructor(accountNumberId, amount) { 
        
        SimulateARealTimePaymentsTransferToYourAccountParameters.initialize(this, accountNumberId, amount);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, accountNumberId, amount) { 
        obj['account_number_id'] = accountNumberId;
        obj['amount'] = amount;
    }

    /**
     * Constructs a <code>SimulateARealTimePaymentsTransferToYourAccountParameters</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SimulateARealTimePaymentsTransferToYourAccountParameters} obj Optional instance to populate.
     * @return {module:model/SimulateARealTimePaymentsTransferToYourAccountParameters} The populated <code>SimulateARealTimePaymentsTransferToYourAccountParameters</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SimulateARealTimePaymentsTransferToYourAccountParameters();

            if (data.hasOwnProperty('account_number_id')) {
                obj['account_number_id'] = ApiClient.convertToType(data['account_number_id'], 'String');
            }
            if (data.hasOwnProperty('amount')) {
                obj['amount'] = ApiClient.convertToType(data['amount'], 'Number');
            }
            if (data.hasOwnProperty('debtor_account_number')) {
                obj['debtor_account_number'] = ApiClient.convertToType(data['debtor_account_number'], 'String');
            }
            if (data.hasOwnProperty('debtor_name')) {
                obj['debtor_name'] = ApiClient.convertToType(data['debtor_name'], 'String');
            }
            if (data.hasOwnProperty('debtor_routing_number')) {
                obj['debtor_routing_number'] = ApiClient.convertToType(data['debtor_routing_number'], 'String');
            }
            if (data.hasOwnProperty('remittance_information')) {
                obj['remittance_information'] = ApiClient.convertToType(data['remittance_information'], 'String');
            }
            if (data.hasOwnProperty('request_for_payment_id')) {
                obj['request_for_payment_id'] = ApiClient.convertToType(data['request_for_payment_id'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SimulateARealTimePaymentsTransferToYourAccountParameters</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SimulateARealTimePaymentsTransferToYourAccountParameters</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of SimulateARealTimePaymentsTransferToYourAccountParameters.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['account_number_id'] && !(typeof data['account_number_id'] === 'string' || data['account_number_id'] instanceof String)) {
            throw new Error("Expected the field `account_number_id` to be a primitive type in the JSON string but got " + data['account_number_id']);
        }
        // ensure the json data is a string
        if (data['debtor_account_number'] && !(typeof data['debtor_account_number'] === 'string' || data['debtor_account_number'] instanceof String)) {
            throw new Error("Expected the field `debtor_account_number` to be a primitive type in the JSON string but got " + data['debtor_account_number']);
        }
        // ensure the json data is a string
        if (data['debtor_name'] && !(typeof data['debtor_name'] === 'string' || data['debtor_name'] instanceof String)) {
            throw new Error("Expected the field `debtor_name` to be a primitive type in the JSON string but got " + data['debtor_name']);
        }
        // ensure the json data is a string
        if (data['debtor_routing_number'] && !(typeof data['debtor_routing_number'] === 'string' || data['debtor_routing_number'] instanceof String)) {
            throw new Error("Expected the field `debtor_routing_number` to be a primitive type in the JSON string but got " + data['debtor_routing_number']);
        }
        // ensure the json data is a string
        if (data['remittance_information'] && !(typeof data['remittance_information'] === 'string' || data['remittance_information'] instanceof String)) {
            throw new Error("Expected the field `remittance_information` to be a primitive type in the JSON string but got " + data['remittance_information']);
        }
        // ensure the json data is a string
        if (data['request_for_payment_id'] && !(typeof data['request_for_payment_id'] === 'string' || data['request_for_payment_id'] instanceof String)) {
            throw new Error("Expected the field `request_for_payment_id` to be a primitive type in the JSON string but got " + data['request_for_payment_id']);
        }

        return true;
    }


}

SimulateARealTimePaymentsTransferToYourAccountParameters.RequiredProperties = ["account_number_id", "amount"];

/**
 * The identifier of the Account Number the inbound Real Time Payments Transfer is for.
 * @member {String} account_number_id
 */
SimulateARealTimePaymentsTransferToYourAccountParameters.prototype['account_number_id'] = undefined;

/**
 * The transfer amount in USD cents. Must be positive.
 * @member {Number} amount
 */
SimulateARealTimePaymentsTransferToYourAccountParameters.prototype['amount'] = undefined;

/**
 * The account number of the account that sent the transfer.
 * @member {String} debtor_account_number
 */
SimulateARealTimePaymentsTransferToYourAccountParameters.prototype['debtor_account_number'] = undefined;

/**
 * The name provided by the sender of the transfer.
 * @member {String} debtor_name
 */
SimulateARealTimePaymentsTransferToYourAccountParameters.prototype['debtor_name'] = undefined;

/**
 * The routing number of the account that sent the transfer.
 * @member {String} debtor_routing_number
 */
SimulateARealTimePaymentsTransferToYourAccountParameters.prototype['debtor_routing_number'] = undefined;

/**
 * Additional information included with the transfer.
 * @member {String} remittance_information
 */
SimulateARealTimePaymentsTransferToYourAccountParameters.prototype['remittance_information'] = undefined;

/**
 * The identifier of a pending Request for Payment that this transfer will fulfill.
 * @member {String} request_for_payment_id
 */
SimulateARealTimePaymentsTransferToYourAccountParameters.prototype['request_for_payment_id'] = undefined;






export default SimulateARealTimePaymentsTransferToYourAccountParameters;

