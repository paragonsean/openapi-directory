/**
 * Increase API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICard_Authorization.h
 *
 * A Card Authorization object. This field will be present in the JSON response if and only if &#x60;category&#x60; is equal to &#x60;card_authorization&#x60;.
 */

#ifndef OAICard_Authorization_H
#define OAICard_Authorization_H

#include <QJsonObject>

#include "OAINetwork_Details.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAINetwork_Details;

class OAICard_Authorization : public OAIObject {
public:
    OAICard_Authorization();
    OAICard_Authorization(QString json);
    ~OAICard_Authorization() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getAmount() const;
    void setAmount(const qint32 &amount);
    bool is_amount_Set() const;
    bool is_amount_Valid() const;

    QString getCurrency() const;
    void setCurrency(const QString &currency);
    bool is_currency_Set() const;
    bool is_currency_Valid() const;

    QString getDigitalWalletTokenId() const;
    void setDigitalWalletTokenId(const QString &digital_wallet_token_id);
    bool is_digital_wallet_token_id_Set() const;
    bool is_digital_wallet_token_id_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getMerchantAcceptorId() const;
    void setMerchantAcceptorId(const QString &merchant_acceptor_id);
    bool is_merchant_acceptor_id_Set() const;
    bool is_merchant_acceptor_id_Valid() const;

    QString getMerchantCategoryCode() const;
    void setMerchantCategoryCode(const QString &merchant_category_code);
    bool is_merchant_category_code_Set() const;
    bool is_merchant_category_code_Valid() const;

    QString getMerchantCity() const;
    void setMerchantCity(const QString &merchant_city);
    bool is_merchant_city_Set() const;
    bool is_merchant_city_Valid() const;

    QString getMerchantCountry() const;
    void setMerchantCountry(const QString &merchant_country);
    bool is_merchant_country_Set() const;
    bool is_merchant_country_Valid() const;

    QString getMerchantDescriptor() const;
    void setMerchantDescriptor(const QString &merchant_descriptor);
    bool is_merchant_descriptor_Set() const;
    bool is_merchant_descriptor_Valid() const;

    QString getNetwork() const;
    void setNetwork(const QString &network);
    bool is_network_Set() const;
    bool is_network_Valid() const;

    OAINetwork_Details getNetworkDetails() const;
    void setNetworkDetails(const OAINetwork_Details &network_details);
    bool is_network_details_Set() const;
    bool is_network_details_Valid() const;

    QString getRealTimeDecisionId() const;
    void setRealTimeDecisionId(const QString &real_time_decision_id);
    bool is_real_time_decision_id_Set() const;
    bool is_real_time_decision_id_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_amount;
    bool m_amount_isSet;
    bool m_amount_isValid;

    QString m_currency;
    bool m_currency_isSet;
    bool m_currency_isValid;

    QString m_digital_wallet_token_id;
    bool m_digital_wallet_token_id_isSet;
    bool m_digital_wallet_token_id_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_merchant_acceptor_id;
    bool m_merchant_acceptor_id_isSet;
    bool m_merchant_acceptor_id_isValid;

    QString m_merchant_category_code;
    bool m_merchant_category_code_isSet;
    bool m_merchant_category_code_isValid;

    QString m_merchant_city;
    bool m_merchant_city_isSet;
    bool m_merchant_city_isValid;

    QString m_merchant_country;
    bool m_merchant_country_isSet;
    bool m_merchant_country_isValid;

    QString m_merchant_descriptor;
    bool m_merchant_descriptor_isSet;
    bool m_merchant_descriptor_isValid;

    QString m_network;
    bool m_network_isSet;
    bool m_network_isValid;

    OAINetwork_Details m_network_details;
    bool m_network_details_isSet;
    bool m_network_details_isValid;

    QString m_real_time_decision_id;
    bool m_real_time_decision_id_isSet;
    bool m_real_time_decision_id_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICard_Authorization)

#endif // OAICard_Authorization_H
