/**
 * Increase API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreate_a_card_parameters.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreate_a_card_parameters::OAICreate_a_card_parameters(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreate_a_card_parameters::OAICreate_a_card_parameters() {
    this->initializeModel();
}

OAICreate_a_card_parameters::~OAICreate_a_card_parameters() {}

void OAICreate_a_card_parameters::initializeModel() {

    m_account_id_isSet = false;
    m_account_id_isValid = false;

    m_billing_address_isSet = false;
    m_billing_address_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_digital_wallet_isSet = false;
    m_digital_wallet_isValid = false;
}

void OAICreate_a_card_parameters::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreate_a_card_parameters::fromJsonObject(QJsonObject json) {

    m_account_id_isValid = ::OpenAPI::fromJsonValue(m_account_id, json[QString("account_id")]);
    m_account_id_isSet = !json[QString("account_id")].isNull() && m_account_id_isValid;

    m_billing_address_isValid = ::OpenAPI::fromJsonValue(m_billing_address, json[QString("billing_address")]);
    m_billing_address_isSet = !json[QString("billing_address")].isNull() && m_billing_address_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_digital_wallet_isValid = ::OpenAPI::fromJsonValue(m_digital_wallet, json[QString("digital_wallet")]);
    m_digital_wallet_isSet = !json[QString("digital_wallet")].isNull() && m_digital_wallet_isValid;
}

QString OAICreate_a_card_parameters::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreate_a_card_parameters::asJsonObject() const {
    QJsonObject obj;
    if (m_account_id_isSet) {
        obj.insert(QString("account_id"), ::OpenAPI::toJsonValue(m_account_id));
    }
    if (m_billing_address.isSet()) {
        obj.insert(QString("billing_address"), ::OpenAPI::toJsonValue(m_billing_address));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_digital_wallet.isSet()) {
        obj.insert(QString("digital_wallet"), ::OpenAPI::toJsonValue(m_digital_wallet));
    }
    return obj;
}

QString OAICreate_a_card_parameters::getAccountId() const {
    return m_account_id;
}
void OAICreate_a_card_parameters::setAccountId(const QString &account_id) {
    m_account_id = account_id;
    m_account_id_isSet = true;
}

bool OAICreate_a_card_parameters::is_account_id_Set() const{
    return m_account_id_isSet;
}

bool OAICreate_a_card_parameters::is_account_id_Valid() const{
    return m_account_id_isValid;
}

OAICreate_a_card_parameters_billing_address OAICreate_a_card_parameters::getBillingAddress() const {
    return m_billing_address;
}
void OAICreate_a_card_parameters::setBillingAddress(const OAICreate_a_card_parameters_billing_address &billing_address) {
    m_billing_address = billing_address;
    m_billing_address_isSet = true;
}

bool OAICreate_a_card_parameters::is_billing_address_Set() const{
    return m_billing_address_isSet;
}

bool OAICreate_a_card_parameters::is_billing_address_Valid() const{
    return m_billing_address_isValid;
}

QString OAICreate_a_card_parameters::getDescription() const {
    return m_description;
}
void OAICreate_a_card_parameters::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAICreate_a_card_parameters::is_description_Set() const{
    return m_description_isSet;
}

bool OAICreate_a_card_parameters::is_description_Valid() const{
    return m_description_isValid;
}

OAICreate_a_card_parameters_digital_wallet OAICreate_a_card_parameters::getDigitalWallet() const {
    return m_digital_wallet;
}
void OAICreate_a_card_parameters::setDigitalWallet(const OAICreate_a_card_parameters_digital_wallet &digital_wallet) {
    m_digital_wallet = digital_wallet;
    m_digital_wallet_isSet = true;
}

bool OAICreate_a_card_parameters::is_digital_wallet_Set() const{
    return m_digital_wallet_isSet;
}

bool OAICreate_a_card_parameters::is_digital_wallet_Valid() const{
    return m_digital_wallet_isValid;
}

bool OAICreate_a_card_parameters::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_billing_address.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_digital_wallet.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreate_a_card_parameters::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_account_id_isValid && true;
}

} // namespace OpenAPI
