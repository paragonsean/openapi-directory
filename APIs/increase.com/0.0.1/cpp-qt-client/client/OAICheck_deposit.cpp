/**
 * Increase API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICheck_deposit.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICheck_deposit::OAICheck_deposit(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICheck_deposit::OAICheck_deposit() {
    this->initializeModel();
}

OAICheck_deposit::~OAICheck_deposit() {}

void OAICheck_deposit::initializeModel() {

    m_account_id_isSet = false;
    m_account_id_isValid = false;

    m_amount_isSet = false;
    m_amount_isValid = false;

    m_back_image_file_id_isSet = false;
    m_back_image_file_id_isValid = false;

    m_created_at_isSet = false;
    m_created_at_isValid = false;

    m_currency_isSet = false;
    m_currency_isValid = false;

    m_deposit_acceptance_isSet = false;
    m_deposit_acceptance_isValid = false;

    m_deposit_rejection_isSet = false;
    m_deposit_rejection_isValid = false;

    m_deposit_return_isSet = false;
    m_deposit_return_isValid = false;

    m_front_image_file_id_isSet = false;
    m_front_image_file_id_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_transaction_id_isSet = false;
    m_transaction_id_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAICheck_deposit::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICheck_deposit::fromJsonObject(QJsonObject json) {

    m_account_id_isValid = ::OpenAPI::fromJsonValue(m_account_id, json[QString("account_id")]);
    m_account_id_isSet = !json[QString("account_id")].isNull() && m_account_id_isValid;

    m_amount_isValid = ::OpenAPI::fromJsonValue(m_amount, json[QString("amount")]);
    m_amount_isSet = !json[QString("amount")].isNull() && m_amount_isValid;

    m_back_image_file_id_isValid = ::OpenAPI::fromJsonValue(m_back_image_file_id, json[QString("back_image_file_id")]);
    m_back_image_file_id_isSet = !json[QString("back_image_file_id")].isNull() && m_back_image_file_id_isValid;

    m_created_at_isValid = ::OpenAPI::fromJsonValue(m_created_at, json[QString("created_at")]);
    m_created_at_isSet = !json[QString("created_at")].isNull() && m_created_at_isValid;

    m_currency_isValid = ::OpenAPI::fromJsonValue(m_currency, json[QString("currency")]);
    m_currency_isSet = !json[QString("currency")].isNull() && m_currency_isValid;

    m_deposit_acceptance_isValid = ::OpenAPI::fromJsonValue(m_deposit_acceptance, json[QString("deposit_acceptance")]);
    m_deposit_acceptance_isSet = !json[QString("deposit_acceptance")].isNull() && m_deposit_acceptance_isValid;

    m_deposit_rejection_isValid = ::OpenAPI::fromJsonValue(m_deposit_rejection, json[QString("deposit_rejection")]);
    m_deposit_rejection_isSet = !json[QString("deposit_rejection")].isNull() && m_deposit_rejection_isValid;

    m_deposit_return_isValid = ::OpenAPI::fromJsonValue(m_deposit_return, json[QString("deposit_return")]);
    m_deposit_return_isSet = !json[QString("deposit_return")].isNull() && m_deposit_return_isValid;

    m_front_image_file_id_isValid = ::OpenAPI::fromJsonValue(m_front_image_file_id, json[QString("front_image_file_id")]);
    m_front_image_file_id_isSet = !json[QString("front_image_file_id")].isNull() && m_front_image_file_id_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_transaction_id_isValid = ::OpenAPI::fromJsonValue(m_transaction_id, json[QString("transaction_id")]);
    m_transaction_id_isSet = !json[QString("transaction_id")].isNull() && m_transaction_id_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;
}

QString OAICheck_deposit::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICheck_deposit::asJsonObject() const {
    QJsonObject obj;
    if (m_account_id_isSet) {
        obj.insert(QString("account_id"), ::OpenAPI::toJsonValue(m_account_id));
    }
    if (m_amount_isSet) {
        obj.insert(QString("amount"), ::OpenAPI::toJsonValue(m_amount));
    }
    if (m_back_image_file_id_isSet) {
        obj.insert(QString("back_image_file_id"), ::OpenAPI::toJsonValue(m_back_image_file_id));
    }
    if (m_created_at_isSet) {
        obj.insert(QString("created_at"), ::OpenAPI::toJsonValue(m_created_at));
    }
    if (m_currency_isSet) {
        obj.insert(QString("currency"), ::OpenAPI::toJsonValue(m_currency));
    }
    if (m_deposit_acceptance.isSet()) {
        obj.insert(QString("deposit_acceptance"), ::OpenAPI::toJsonValue(m_deposit_acceptance));
    }
    if (m_deposit_rejection.isSet()) {
        obj.insert(QString("deposit_rejection"), ::OpenAPI::toJsonValue(m_deposit_rejection));
    }
    if (m_deposit_return.isSet()) {
        obj.insert(QString("deposit_return"), ::OpenAPI::toJsonValue(m_deposit_return));
    }
    if (m_front_image_file_id_isSet) {
        obj.insert(QString("front_image_file_id"), ::OpenAPI::toJsonValue(m_front_image_file_id));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_transaction_id_isSet) {
        obj.insert(QString("transaction_id"), ::OpenAPI::toJsonValue(m_transaction_id));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

QString OAICheck_deposit::getAccountId() const {
    return m_account_id;
}
void OAICheck_deposit::setAccountId(const QString &account_id) {
    m_account_id = account_id;
    m_account_id_isSet = true;
}

bool OAICheck_deposit::is_account_id_Set() const{
    return m_account_id_isSet;
}

bool OAICheck_deposit::is_account_id_Valid() const{
    return m_account_id_isValid;
}

qint32 OAICheck_deposit::getAmount() const {
    return m_amount;
}
void OAICheck_deposit::setAmount(const qint32 &amount) {
    m_amount = amount;
    m_amount_isSet = true;
}

bool OAICheck_deposit::is_amount_Set() const{
    return m_amount_isSet;
}

bool OAICheck_deposit::is_amount_Valid() const{
    return m_amount_isValid;
}

QString OAICheck_deposit::getBackImageFileId() const {
    return m_back_image_file_id;
}
void OAICheck_deposit::setBackImageFileId(const QString &back_image_file_id) {
    m_back_image_file_id = back_image_file_id;
    m_back_image_file_id_isSet = true;
}

bool OAICheck_deposit::is_back_image_file_id_Set() const{
    return m_back_image_file_id_isSet;
}

bool OAICheck_deposit::is_back_image_file_id_Valid() const{
    return m_back_image_file_id_isValid;
}

QDateTime OAICheck_deposit::getCreatedAt() const {
    return m_created_at;
}
void OAICheck_deposit::setCreatedAt(const QDateTime &created_at) {
    m_created_at = created_at;
    m_created_at_isSet = true;
}

bool OAICheck_deposit::is_created_at_Set() const{
    return m_created_at_isSet;
}

bool OAICheck_deposit::is_created_at_Valid() const{
    return m_created_at_isValid;
}

QString OAICheck_deposit::getCurrency() const {
    return m_currency;
}
void OAICheck_deposit::setCurrency(const QString &currency) {
    m_currency = currency;
    m_currency_isSet = true;
}

bool OAICheck_deposit::is_currency_Set() const{
    return m_currency_isSet;
}

bool OAICheck_deposit::is_currency_Valid() const{
    return m_currency_isValid;
}

OAICheck_Deposit_Acceptance OAICheck_deposit::getDepositAcceptance() const {
    return m_deposit_acceptance;
}
void OAICheck_deposit::setDepositAcceptance(const OAICheck_Deposit_Acceptance &deposit_acceptance) {
    m_deposit_acceptance = deposit_acceptance;
    m_deposit_acceptance_isSet = true;
}

bool OAICheck_deposit::is_deposit_acceptance_Set() const{
    return m_deposit_acceptance_isSet;
}

bool OAICheck_deposit::is_deposit_acceptance_Valid() const{
    return m_deposit_acceptance_isValid;
}

OAICheck_Deposit_Rejection OAICheck_deposit::getDepositRejection() const {
    return m_deposit_rejection;
}
void OAICheck_deposit::setDepositRejection(const OAICheck_Deposit_Rejection &deposit_rejection) {
    m_deposit_rejection = deposit_rejection;
    m_deposit_rejection_isSet = true;
}

bool OAICheck_deposit::is_deposit_rejection_Set() const{
    return m_deposit_rejection_isSet;
}

bool OAICheck_deposit::is_deposit_rejection_Valid() const{
    return m_deposit_rejection_isValid;
}

OAICheck_Deposit_Return OAICheck_deposit::getDepositReturn() const {
    return m_deposit_return;
}
void OAICheck_deposit::setDepositReturn(const OAICheck_Deposit_Return &deposit_return) {
    m_deposit_return = deposit_return;
    m_deposit_return_isSet = true;
}

bool OAICheck_deposit::is_deposit_return_Set() const{
    return m_deposit_return_isSet;
}

bool OAICheck_deposit::is_deposit_return_Valid() const{
    return m_deposit_return_isValid;
}

QString OAICheck_deposit::getFrontImageFileId() const {
    return m_front_image_file_id;
}
void OAICheck_deposit::setFrontImageFileId(const QString &front_image_file_id) {
    m_front_image_file_id = front_image_file_id;
    m_front_image_file_id_isSet = true;
}

bool OAICheck_deposit::is_front_image_file_id_Set() const{
    return m_front_image_file_id_isSet;
}

bool OAICheck_deposit::is_front_image_file_id_Valid() const{
    return m_front_image_file_id_isValid;
}

QString OAICheck_deposit::getId() const {
    return m_id;
}
void OAICheck_deposit::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAICheck_deposit::is_id_Set() const{
    return m_id_isSet;
}

bool OAICheck_deposit::is_id_Valid() const{
    return m_id_isValid;
}

QString OAICheck_deposit::getStatus() const {
    return m_status;
}
void OAICheck_deposit::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAICheck_deposit::is_status_Set() const{
    return m_status_isSet;
}

bool OAICheck_deposit::is_status_Valid() const{
    return m_status_isValid;
}

QString OAICheck_deposit::getTransactionId() const {
    return m_transaction_id;
}
void OAICheck_deposit::setTransactionId(const QString &transaction_id) {
    m_transaction_id = transaction_id;
    m_transaction_id_isSet = true;
}

bool OAICheck_deposit::is_transaction_id_Set() const{
    return m_transaction_id_isSet;
}

bool OAICheck_deposit::is_transaction_id_Valid() const{
    return m_transaction_id_isValid;
}

QString OAICheck_deposit::getType() const {
    return m_type;
}
void OAICheck_deposit::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAICheck_deposit::is_type_Set() const{
    return m_type_isSet;
}

bool OAICheck_deposit::is_type_Valid() const{
    return m_type_isValid;
}

bool OAICheck_deposit::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_back_image_file_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_currency_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_deposit_acceptance.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_deposit_rejection.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_deposit_return.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_front_image_file_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_transaction_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICheck_deposit::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_account_id_isValid && m_amount_isValid && m_back_image_file_id_isValid && m_created_at_isValid && m_currency_isValid && m_deposit_acceptance_isValid && m_deposit_rejection_isValid && m_deposit_return_isValid && m_front_image_file_id_isValid && m_id_isValid && m_status_isValid && m_transaction_id_isValid && m_type_isValid && true;
}

} // namespace OpenAPI
