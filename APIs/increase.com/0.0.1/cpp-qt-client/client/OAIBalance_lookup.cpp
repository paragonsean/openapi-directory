/**
 * Increase API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBalance_lookup.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBalance_lookup::OAIBalance_lookup(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBalance_lookup::OAIBalance_lookup() {
    this->initializeModel();
}

OAIBalance_lookup::~OAIBalance_lookup() {}

void OAIBalance_lookup::initializeModel() {

    m_account_id_isSet = false;
    m_account_id_isValid = false;

    m_available_balance_isSet = false;
    m_available_balance_isValid = false;

    m_current_balance_isSet = false;
    m_current_balance_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAIBalance_lookup::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBalance_lookup::fromJsonObject(QJsonObject json) {

    m_account_id_isValid = ::OpenAPI::fromJsonValue(m_account_id, json[QString("account_id")]);
    m_account_id_isSet = !json[QString("account_id")].isNull() && m_account_id_isValid;

    m_available_balance_isValid = ::OpenAPI::fromJsonValue(m_available_balance, json[QString("available_balance")]);
    m_available_balance_isSet = !json[QString("available_balance")].isNull() && m_available_balance_isValid;

    m_current_balance_isValid = ::OpenAPI::fromJsonValue(m_current_balance, json[QString("current_balance")]);
    m_current_balance_isSet = !json[QString("current_balance")].isNull() && m_current_balance_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;
}

QString OAIBalance_lookup::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBalance_lookup::asJsonObject() const {
    QJsonObject obj;
    if (m_account_id_isSet) {
        obj.insert(QString("account_id"), ::OpenAPI::toJsonValue(m_account_id));
    }
    if (m_available_balance_isSet) {
        obj.insert(QString("available_balance"), ::OpenAPI::toJsonValue(m_available_balance));
    }
    if (m_current_balance_isSet) {
        obj.insert(QString("current_balance"), ::OpenAPI::toJsonValue(m_current_balance));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

QString OAIBalance_lookup::getAccountId() const {
    return m_account_id;
}
void OAIBalance_lookup::setAccountId(const QString &account_id) {
    m_account_id = account_id;
    m_account_id_isSet = true;
}

bool OAIBalance_lookup::is_account_id_Set() const{
    return m_account_id_isSet;
}

bool OAIBalance_lookup::is_account_id_Valid() const{
    return m_account_id_isValid;
}

qint32 OAIBalance_lookup::getAvailableBalance() const {
    return m_available_balance;
}
void OAIBalance_lookup::setAvailableBalance(const qint32 &available_balance) {
    m_available_balance = available_balance;
    m_available_balance_isSet = true;
}

bool OAIBalance_lookup::is_available_balance_Set() const{
    return m_available_balance_isSet;
}

bool OAIBalance_lookup::is_available_balance_Valid() const{
    return m_available_balance_isValid;
}

qint32 OAIBalance_lookup::getCurrentBalance() const {
    return m_current_balance;
}
void OAIBalance_lookup::setCurrentBalance(const qint32 &current_balance) {
    m_current_balance = current_balance;
    m_current_balance_isSet = true;
}

bool OAIBalance_lookup::is_current_balance_Set() const{
    return m_current_balance_isSet;
}

bool OAIBalance_lookup::is_current_balance_Valid() const{
    return m_current_balance_isValid;
}

QString OAIBalance_lookup::getType() const {
    return m_type;
}
void OAIBalance_lookup::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIBalance_lookup::is_type_Set() const{
    return m_type_isSet;
}

bool OAIBalance_lookup::is_type_Valid() const{
    return m_type_isValid;
}

bool OAIBalance_lookup::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_available_balance_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_current_balance_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBalance_lookup::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_account_id_isValid && m_available_balance_isValid && m_current_balance_isValid && m_type_isValid && true;
}

} // namespace OpenAPI
