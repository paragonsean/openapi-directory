/**
 * Increase API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILimit.h
 *
 * You can set limits at the Account, Account Number, or Card level. Limits applied to Accounts will apply to all Account Numbers and Cards in the Account. You can specify any number of Limits and they will all be applied to inbound debits and card authorizations. Volume and count Limits are designed to prevent unauthorized debits.
 */

#ifndef OAILimit_H
#define OAILimit_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAILimit : public OAIObject {
public:
    OAILimit();
    OAILimit(QString json);
    ~OAILimit() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getInterval() const;
    void setInterval(const QString &interval);
    bool is_interval_Set() const;
    bool is_interval_Valid() const;

    QString getMetric() const;
    void setMetric(const QString &metric);
    bool is_metric_Set() const;
    bool is_metric_Valid() const;

    QString getModelId() const;
    void setModelId(const QString &model_id);
    bool is_model_id_Set() const;
    bool is_model_id_Valid() const;

    QString getModelType() const;
    void setModelType(const QString &model_type);
    bool is_model_type_Set() const;
    bool is_model_type_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    qint32 getValue() const;
    void setValue(const qint32 &value);
    bool is_value_Set() const;
    bool is_value_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_interval;
    bool m_interval_isSet;
    bool m_interval_isValid;

    QString m_metric;
    bool m_metric_isSet;
    bool m_metric_isValid;

    QString m_model_id;
    bool m_model_id_isSet;
    bool m_model_id_isValid;

    QString m_model_type;
    bool m_model_type_isSet;
    bool m_model_type_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    qint32 m_value;
    bool m_value_isSet;
    bool m_value_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILimit)

#endif // OAILimit_H
