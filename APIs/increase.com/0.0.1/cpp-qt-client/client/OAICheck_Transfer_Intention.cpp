/**
 * Increase API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICheck_Transfer_Intention.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICheck_Transfer_Intention::OAICheck_Transfer_Intention(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICheck_Transfer_Intention::OAICheck_Transfer_Intention() {
    this->initializeModel();
}

OAICheck_Transfer_Intention::~OAICheck_Transfer_Intention() {}

void OAICheck_Transfer_Intention::initializeModel() {

    m_address_city_isSet = false;
    m_address_city_isValid = false;

    m_address_line1_isSet = false;
    m_address_line1_isValid = false;

    m_address_line2_isSet = false;
    m_address_line2_isValid = false;

    m_address_state_isSet = false;
    m_address_state_isValid = false;

    m_address_zip_isSet = false;
    m_address_zip_isValid = false;

    m_amount_isSet = false;
    m_amount_isValid = false;

    m_currency_isSet = false;
    m_currency_isValid = false;

    m_recipient_name_isSet = false;
    m_recipient_name_isValid = false;

    m_transfer_id_isSet = false;
    m_transfer_id_isValid = false;
}

void OAICheck_Transfer_Intention::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICheck_Transfer_Intention::fromJsonObject(QJsonObject json) {

    m_address_city_isValid = ::OpenAPI::fromJsonValue(m_address_city, json[QString("address_city")]);
    m_address_city_isSet = !json[QString("address_city")].isNull() && m_address_city_isValid;

    m_address_line1_isValid = ::OpenAPI::fromJsonValue(m_address_line1, json[QString("address_line1")]);
    m_address_line1_isSet = !json[QString("address_line1")].isNull() && m_address_line1_isValid;

    m_address_line2_isValid = ::OpenAPI::fromJsonValue(m_address_line2, json[QString("address_line2")]);
    m_address_line2_isSet = !json[QString("address_line2")].isNull() && m_address_line2_isValid;

    m_address_state_isValid = ::OpenAPI::fromJsonValue(m_address_state, json[QString("address_state")]);
    m_address_state_isSet = !json[QString("address_state")].isNull() && m_address_state_isValid;

    m_address_zip_isValid = ::OpenAPI::fromJsonValue(m_address_zip, json[QString("address_zip")]);
    m_address_zip_isSet = !json[QString("address_zip")].isNull() && m_address_zip_isValid;

    m_amount_isValid = ::OpenAPI::fromJsonValue(m_amount, json[QString("amount")]);
    m_amount_isSet = !json[QString("amount")].isNull() && m_amount_isValid;

    m_currency_isValid = ::OpenAPI::fromJsonValue(m_currency, json[QString("currency")]);
    m_currency_isSet = !json[QString("currency")].isNull() && m_currency_isValid;

    m_recipient_name_isValid = ::OpenAPI::fromJsonValue(m_recipient_name, json[QString("recipient_name")]);
    m_recipient_name_isSet = !json[QString("recipient_name")].isNull() && m_recipient_name_isValid;

    m_transfer_id_isValid = ::OpenAPI::fromJsonValue(m_transfer_id, json[QString("transfer_id")]);
    m_transfer_id_isSet = !json[QString("transfer_id")].isNull() && m_transfer_id_isValid;
}

QString OAICheck_Transfer_Intention::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICheck_Transfer_Intention::asJsonObject() const {
    QJsonObject obj;
    if (m_address_city_isSet) {
        obj.insert(QString("address_city"), ::OpenAPI::toJsonValue(m_address_city));
    }
    if (m_address_line1_isSet) {
        obj.insert(QString("address_line1"), ::OpenAPI::toJsonValue(m_address_line1));
    }
    if (m_address_line2_isSet) {
        obj.insert(QString("address_line2"), ::OpenAPI::toJsonValue(m_address_line2));
    }
    if (m_address_state_isSet) {
        obj.insert(QString("address_state"), ::OpenAPI::toJsonValue(m_address_state));
    }
    if (m_address_zip_isSet) {
        obj.insert(QString("address_zip"), ::OpenAPI::toJsonValue(m_address_zip));
    }
    if (m_amount_isSet) {
        obj.insert(QString("amount"), ::OpenAPI::toJsonValue(m_amount));
    }
    if (m_currency_isSet) {
        obj.insert(QString("currency"), ::OpenAPI::toJsonValue(m_currency));
    }
    if (m_recipient_name_isSet) {
        obj.insert(QString("recipient_name"), ::OpenAPI::toJsonValue(m_recipient_name));
    }
    if (m_transfer_id_isSet) {
        obj.insert(QString("transfer_id"), ::OpenAPI::toJsonValue(m_transfer_id));
    }
    return obj;
}

QString OAICheck_Transfer_Intention::getAddressCity() const {
    return m_address_city;
}
void OAICheck_Transfer_Intention::setAddressCity(const QString &address_city) {
    m_address_city = address_city;
    m_address_city_isSet = true;
}

bool OAICheck_Transfer_Intention::is_address_city_Set() const{
    return m_address_city_isSet;
}

bool OAICheck_Transfer_Intention::is_address_city_Valid() const{
    return m_address_city_isValid;
}

QString OAICheck_Transfer_Intention::getAddressLine1() const {
    return m_address_line1;
}
void OAICheck_Transfer_Intention::setAddressLine1(const QString &address_line1) {
    m_address_line1 = address_line1;
    m_address_line1_isSet = true;
}

bool OAICheck_Transfer_Intention::is_address_line1_Set() const{
    return m_address_line1_isSet;
}

bool OAICheck_Transfer_Intention::is_address_line1_Valid() const{
    return m_address_line1_isValid;
}

QString OAICheck_Transfer_Intention::getAddressLine2() const {
    return m_address_line2;
}
void OAICheck_Transfer_Intention::setAddressLine2(const QString &address_line2) {
    m_address_line2 = address_line2;
    m_address_line2_isSet = true;
}

bool OAICheck_Transfer_Intention::is_address_line2_Set() const{
    return m_address_line2_isSet;
}

bool OAICheck_Transfer_Intention::is_address_line2_Valid() const{
    return m_address_line2_isValid;
}

QString OAICheck_Transfer_Intention::getAddressState() const {
    return m_address_state;
}
void OAICheck_Transfer_Intention::setAddressState(const QString &address_state) {
    m_address_state = address_state;
    m_address_state_isSet = true;
}

bool OAICheck_Transfer_Intention::is_address_state_Set() const{
    return m_address_state_isSet;
}

bool OAICheck_Transfer_Intention::is_address_state_Valid() const{
    return m_address_state_isValid;
}

QString OAICheck_Transfer_Intention::getAddressZip() const {
    return m_address_zip;
}
void OAICheck_Transfer_Intention::setAddressZip(const QString &address_zip) {
    m_address_zip = address_zip;
    m_address_zip_isSet = true;
}

bool OAICheck_Transfer_Intention::is_address_zip_Set() const{
    return m_address_zip_isSet;
}

bool OAICheck_Transfer_Intention::is_address_zip_Valid() const{
    return m_address_zip_isValid;
}

qint32 OAICheck_Transfer_Intention::getAmount() const {
    return m_amount;
}
void OAICheck_Transfer_Intention::setAmount(const qint32 &amount) {
    m_amount = amount;
    m_amount_isSet = true;
}

bool OAICheck_Transfer_Intention::is_amount_Set() const{
    return m_amount_isSet;
}

bool OAICheck_Transfer_Intention::is_amount_Valid() const{
    return m_amount_isValid;
}

QString OAICheck_Transfer_Intention::getCurrency() const {
    return m_currency;
}
void OAICheck_Transfer_Intention::setCurrency(const QString &currency) {
    m_currency = currency;
    m_currency_isSet = true;
}

bool OAICheck_Transfer_Intention::is_currency_Set() const{
    return m_currency_isSet;
}

bool OAICheck_Transfer_Intention::is_currency_Valid() const{
    return m_currency_isValid;
}

QString OAICheck_Transfer_Intention::getRecipientName() const {
    return m_recipient_name;
}
void OAICheck_Transfer_Intention::setRecipientName(const QString &recipient_name) {
    m_recipient_name = recipient_name;
    m_recipient_name_isSet = true;
}

bool OAICheck_Transfer_Intention::is_recipient_name_Set() const{
    return m_recipient_name_isSet;
}

bool OAICheck_Transfer_Intention::is_recipient_name_Valid() const{
    return m_recipient_name_isValid;
}

QString OAICheck_Transfer_Intention::getTransferId() const {
    return m_transfer_id;
}
void OAICheck_Transfer_Intention::setTransferId(const QString &transfer_id) {
    m_transfer_id = transfer_id;
    m_transfer_id_isSet = true;
}

bool OAICheck_Transfer_Intention::is_transfer_id_Set() const{
    return m_transfer_id_isSet;
}

bool OAICheck_Transfer_Intention::is_transfer_id_Valid() const{
    return m_transfer_id_isValid;
}

bool OAICheck_Transfer_Intention::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_address_city_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_address_line1_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_address_line2_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_address_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_address_zip_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_currency_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_recipient_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_transfer_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICheck_Transfer_Intention::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_address_city_isValid && m_address_line1_isValid && m_address_line2_isValid && m_address_state_isValid && m_address_zip_isValid && m_amount_isValid && m_currency_isValid && m_recipient_name_isValid && m_transfer_id_isValid && true;
}

} // namespace OpenAPI
