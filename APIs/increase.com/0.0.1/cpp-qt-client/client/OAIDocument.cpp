/**
 * Increase API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDocument.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDocument::OAIDocument(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDocument::OAIDocument() {
    this->initializeModel();
}

OAIDocument::~OAIDocument() {}

void OAIDocument::initializeModel() {

    m_category_isSet = false;
    m_category_isValid = false;

    m_created_at_isSet = false;
    m_created_at_isValid = false;

    m_entity_id_isSet = false;
    m_entity_id_isValid = false;

    m_file_id_isSet = false;
    m_file_id_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAIDocument::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDocument::fromJsonObject(QJsonObject json) {

    m_category_isValid = ::OpenAPI::fromJsonValue(m_category, json[QString("category")]);
    m_category_isSet = !json[QString("category")].isNull() && m_category_isValid;

    m_created_at_isValid = ::OpenAPI::fromJsonValue(m_created_at, json[QString("created_at")]);
    m_created_at_isSet = !json[QString("created_at")].isNull() && m_created_at_isValid;

    m_entity_id_isValid = ::OpenAPI::fromJsonValue(m_entity_id, json[QString("entity_id")]);
    m_entity_id_isSet = !json[QString("entity_id")].isNull() && m_entity_id_isValid;

    m_file_id_isValid = ::OpenAPI::fromJsonValue(m_file_id, json[QString("file_id")]);
    m_file_id_isSet = !json[QString("file_id")].isNull() && m_file_id_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;
}

QString OAIDocument::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDocument::asJsonObject() const {
    QJsonObject obj;
    if (m_category_isSet) {
        obj.insert(QString("category"), ::OpenAPI::toJsonValue(m_category));
    }
    if (m_created_at_isSet) {
        obj.insert(QString("created_at"), ::OpenAPI::toJsonValue(m_created_at));
    }
    if (m_entity_id_isSet) {
        obj.insert(QString("entity_id"), ::OpenAPI::toJsonValue(m_entity_id));
    }
    if (m_file_id_isSet) {
        obj.insert(QString("file_id"), ::OpenAPI::toJsonValue(m_file_id));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

QString OAIDocument::getCategory() const {
    return m_category;
}
void OAIDocument::setCategory(const QString &category) {
    m_category = category;
    m_category_isSet = true;
}

bool OAIDocument::is_category_Set() const{
    return m_category_isSet;
}

bool OAIDocument::is_category_Valid() const{
    return m_category_isValid;
}

QDateTime OAIDocument::getCreatedAt() const {
    return m_created_at;
}
void OAIDocument::setCreatedAt(const QDateTime &created_at) {
    m_created_at = created_at;
    m_created_at_isSet = true;
}

bool OAIDocument::is_created_at_Set() const{
    return m_created_at_isSet;
}

bool OAIDocument::is_created_at_Valid() const{
    return m_created_at_isValid;
}

QString OAIDocument::getEntityId() const {
    return m_entity_id;
}
void OAIDocument::setEntityId(const QString &entity_id) {
    m_entity_id = entity_id;
    m_entity_id_isSet = true;
}

bool OAIDocument::is_entity_id_Set() const{
    return m_entity_id_isSet;
}

bool OAIDocument::is_entity_id_Valid() const{
    return m_entity_id_isValid;
}

QString OAIDocument::getFileId() const {
    return m_file_id;
}
void OAIDocument::setFileId(const QString &file_id) {
    m_file_id = file_id;
    m_file_id_isSet = true;
}

bool OAIDocument::is_file_id_Set() const{
    return m_file_id_isSet;
}

bool OAIDocument::is_file_id_Valid() const{
    return m_file_id_isValid;
}

QString OAIDocument::getId() const {
    return m_id;
}
void OAIDocument::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIDocument::is_id_Set() const{
    return m_id_isSet;
}

bool OAIDocument::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIDocument::getType() const {
    return m_type;
}
void OAIDocument::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIDocument::is_type_Set() const{
    return m_type_isSet;
}

bool OAIDocument::is_type_Valid() const{
    return m_type_isValid;
}

bool OAIDocument::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_category_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_entity_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_file_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDocument::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_category_isValid && m_created_at_isValid && m_entity_id_isValid && m_file_id_isValid && m_id_isValid && m_type_isValid && true;
}

} // namespace OpenAPI
