/**
 * Increase API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreate_an_entity_parameters_trust_grantor.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreate_an_entity_parameters_trust_grantor::OAICreate_an_entity_parameters_trust_grantor(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreate_an_entity_parameters_trust_grantor::OAICreate_an_entity_parameters_trust_grantor() {
    this->initializeModel();
}

OAICreate_an_entity_parameters_trust_grantor::~OAICreate_an_entity_parameters_trust_grantor() {}

void OAICreate_an_entity_parameters_trust_grantor::initializeModel() {

    m_address_isSet = false;
    m_address_isValid = false;

    m_confirmed_no_us_tax_id_isSet = false;
    m_confirmed_no_us_tax_id_isValid = false;

    m_date_of_birth_isSet = false;
    m_date_of_birth_isValid = false;

    m_identification_isSet = false;
    m_identification_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;
}

void OAICreate_an_entity_parameters_trust_grantor::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreate_an_entity_parameters_trust_grantor::fromJsonObject(QJsonObject json) {

    m_address_isValid = ::OpenAPI::fromJsonValue(m_address, json[QString("address")]);
    m_address_isSet = !json[QString("address")].isNull() && m_address_isValid;

    m_confirmed_no_us_tax_id_isValid = ::OpenAPI::fromJsonValue(m_confirmed_no_us_tax_id, json[QString("confirmed_no_us_tax_id")]);
    m_confirmed_no_us_tax_id_isSet = !json[QString("confirmed_no_us_tax_id")].isNull() && m_confirmed_no_us_tax_id_isValid;

    m_date_of_birth_isValid = ::OpenAPI::fromJsonValue(m_date_of_birth, json[QString("date_of_birth")]);
    m_date_of_birth_isSet = !json[QString("date_of_birth")].isNull() && m_date_of_birth_isValid;

    m_identification_isValid = ::OpenAPI::fromJsonValue(m_identification, json[QString("identification")]);
    m_identification_isSet = !json[QString("identification")].isNull() && m_identification_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;
}

QString OAICreate_an_entity_parameters_trust_grantor::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreate_an_entity_parameters_trust_grantor::asJsonObject() const {
    QJsonObject obj;
    if (m_address.isSet()) {
        obj.insert(QString("address"), ::OpenAPI::toJsonValue(m_address));
    }
    if (m_confirmed_no_us_tax_id_isSet) {
        obj.insert(QString("confirmed_no_us_tax_id"), ::OpenAPI::toJsonValue(m_confirmed_no_us_tax_id));
    }
    if (m_date_of_birth_isSet) {
        obj.insert(QString("date_of_birth"), ::OpenAPI::toJsonValue(m_date_of_birth));
    }
    if (m_identification.isSet()) {
        obj.insert(QString("identification"), ::OpenAPI::toJsonValue(m_identification));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    return obj;
}

OAICreate_an_entity_parameters_corporation_beneficial_owners_inner_individual_address OAICreate_an_entity_parameters_trust_grantor::getAddress() const {
    return m_address;
}
void OAICreate_an_entity_parameters_trust_grantor::setAddress(const OAICreate_an_entity_parameters_corporation_beneficial_owners_inner_individual_address &address) {
    m_address = address;
    m_address_isSet = true;
}

bool OAICreate_an_entity_parameters_trust_grantor::is_address_Set() const{
    return m_address_isSet;
}

bool OAICreate_an_entity_parameters_trust_grantor::is_address_Valid() const{
    return m_address_isValid;
}

bool OAICreate_an_entity_parameters_trust_grantor::isConfirmedNoUsTaxId() const {
    return m_confirmed_no_us_tax_id;
}
void OAICreate_an_entity_parameters_trust_grantor::setConfirmedNoUsTaxId(const bool &confirmed_no_us_tax_id) {
    m_confirmed_no_us_tax_id = confirmed_no_us_tax_id;
    m_confirmed_no_us_tax_id_isSet = true;
}

bool OAICreate_an_entity_parameters_trust_grantor::is_confirmed_no_us_tax_id_Set() const{
    return m_confirmed_no_us_tax_id_isSet;
}

bool OAICreate_an_entity_parameters_trust_grantor::is_confirmed_no_us_tax_id_Valid() const{
    return m_confirmed_no_us_tax_id_isValid;
}

QDate OAICreate_an_entity_parameters_trust_grantor::getDateOfBirth() const {
    return m_date_of_birth;
}
void OAICreate_an_entity_parameters_trust_grantor::setDateOfBirth(const QDate &date_of_birth) {
    m_date_of_birth = date_of_birth;
    m_date_of_birth_isSet = true;
}

bool OAICreate_an_entity_parameters_trust_grantor::is_date_of_birth_Set() const{
    return m_date_of_birth_isSet;
}

bool OAICreate_an_entity_parameters_trust_grantor::is_date_of_birth_Valid() const{
    return m_date_of_birth_isValid;
}

OAICreate_an_entity_parameters_corporation_beneficial_owners_inner_individual_identification OAICreate_an_entity_parameters_trust_grantor::getIdentification() const {
    return m_identification;
}
void OAICreate_an_entity_parameters_trust_grantor::setIdentification(const OAICreate_an_entity_parameters_corporation_beneficial_owners_inner_individual_identification &identification) {
    m_identification = identification;
    m_identification_isSet = true;
}

bool OAICreate_an_entity_parameters_trust_grantor::is_identification_Set() const{
    return m_identification_isSet;
}

bool OAICreate_an_entity_parameters_trust_grantor::is_identification_Valid() const{
    return m_identification_isValid;
}

QString OAICreate_an_entity_parameters_trust_grantor::getName() const {
    return m_name;
}
void OAICreate_an_entity_parameters_trust_grantor::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAICreate_an_entity_parameters_trust_grantor::is_name_Set() const{
    return m_name_isSet;
}

bool OAICreate_an_entity_parameters_trust_grantor::is_name_Valid() const{
    return m_name_isValid;
}

bool OAICreate_an_entity_parameters_trust_grantor::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_address.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_confirmed_no_us_tax_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_of_birth_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_identification.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreate_an_entity_parameters_trust_grantor::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_address_isValid && m_date_of_birth_isValid && m_identification_isValid && m_name_isValid && true;
}

} // namespace OpenAPI
