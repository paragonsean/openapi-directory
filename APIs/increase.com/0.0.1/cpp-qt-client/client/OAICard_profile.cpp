/**
 * Increase API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICard_profile.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICard_profile::OAICard_profile(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICard_profile::OAICard_profile() {
    this->initializeModel();
}

OAICard_profile::~OAICard_profile() {}

void OAICard_profile::initializeModel() {

    m_created_at_isSet = false;
    m_created_at_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_digital_wallets_isSet = false;
    m_digital_wallets_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAICard_profile::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICard_profile::fromJsonObject(QJsonObject json) {

    m_created_at_isValid = ::OpenAPI::fromJsonValue(m_created_at, json[QString("created_at")]);
    m_created_at_isSet = !json[QString("created_at")].isNull() && m_created_at_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_digital_wallets_isValid = ::OpenAPI::fromJsonValue(m_digital_wallets, json[QString("digital_wallets")]);
    m_digital_wallets_isSet = !json[QString("digital_wallets")].isNull() && m_digital_wallets_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;
}

QString OAICard_profile::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICard_profile::asJsonObject() const {
    QJsonObject obj;
    if (m_created_at_isSet) {
        obj.insert(QString("created_at"), ::OpenAPI::toJsonValue(m_created_at));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_digital_wallets.isSet()) {
        obj.insert(QString("digital_wallets"), ::OpenAPI::toJsonValue(m_digital_wallets));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

QDateTime OAICard_profile::getCreatedAt() const {
    return m_created_at;
}
void OAICard_profile::setCreatedAt(const QDateTime &created_at) {
    m_created_at = created_at;
    m_created_at_isSet = true;
}

bool OAICard_profile::is_created_at_Set() const{
    return m_created_at_isSet;
}

bool OAICard_profile::is_created_at_Valid() const{
    return m_created_at_isValid;
}

QString OAICard_profile::getDescription() const {
    return m_description;
}
void OAICard_profile::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAICard_profile::is_description_Set() const{
    return m_description_isSet;
}

bool OAICard_profile::is_description_Valid() const{
    return m_description_isValid;
}

OAIDigital_Wallets OAICard_profile::getDigitalWallets() const {
    return m_digital_wallets;
}
void OAICard_profile::setDigitalWallets(const OAIDigital_Wallets &digital_wallets) {
    m_digital_wallets = digital_wallets;
    m_digital_wallets_isSet = true;
}

bool OAICard_profile::is_digital_wallets_Set() const{
    return m_digital_wallets_isSet;
}

bool OAICard_profile::is_digital_wallets_Valid() const{
    return m_digital_wallets_isValid;
}

QString OAICard_profile::getId() const {
    return m_id;
}
void OAICard_profile::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAICard_profile::is_id_Set() const{
    return m_id_isSet;
}

bool OAICard_profile::is_id_Valid() const{
    return m_id_isValid;
}

QString OAICard_profile::getStatus() const {
    return m_status;
}
void OAICard_profile::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAICard_profile::is_status_Set() const{
    return m_status_isSet;
}

bool OAICard_profile::is_status_Valid() const{
    return m_status_isValid;
}

QString OAICard_profile::getType() const {
    return m_type;
}
void OAICard_profile::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAICard_profile::is_type_Set() const{
    return m_type_isSet;
}

bool OAICard_profile::is_type_Valid() const{
    return m_type_isValid;
}

bool OAICard_profile::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_created_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_digital_wallets.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICard_profile::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_created_at_isValid && m_description_isValid && m_digital_wallets_isValid && m_id_isValid && m_status_isValid && m_type_isValid && true;
}

} // namespace OpenAPI
