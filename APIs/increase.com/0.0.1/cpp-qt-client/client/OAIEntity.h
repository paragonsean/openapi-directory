/**
 * Increase API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEntity.h
 *
 * Entities are the legal entities that own accounts. They can be people, corporations, partnerships, or trusts.
 */

#ifndef OAIEntity_H
#define OAIEntity_H

#include <QJsonObject>

#include "OAICorporation.h"
#include "OAIIndividual_2.h"
#include "OAIJoint.h"
#include "OAISupplemental_Documents_Element.h"
#include "OAITrust.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICorporation;
class OAIJoint;
class OAIIndividual_2;
class OAISupplemental_Documents_Element;
class OAITrust;

class OAIEntity : public OAIObject {
public:
    OAIEntity();
    OAIEntity(QString json);
    ~OAIEntity() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAICorporation getCorporation() const;
    void setCorporation(const OAICorporation &corporation);
    bool is_corporation_Set() const;
    bool is_corporation_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    OAIJoint getJoint() const;
    void setJoint(const OAIJoint &joint);
    bool is_joint_Set() const;
    bool is_joint_Valid() const;

    OAIIndividual_2 getNaturalPerson() const;
    void setNaturalPerson(const OAIIndividual_2 &natural_person);
    bool is_natural_person_Set() const;
    bool is_natural_person_Valid() const;

    QString getRelationship() const;
    void setRelationship(const QString &relationship);
    bool is_relationship_Set() const;
    bool is_relationship_Valid() const;

    QString getStructure() const;
    void setStructure(const QString &structure);
    bool is_structure_Set() const;
    bool is_structure_Valid() const;

    QList<OAISupplemental_Documents_Element> getSupplementalDocuments() const;
    void setSupplementalDocuments(const QList<OAISupplemental_Documents_Element> &supplemental_documents);
    bool is_supplemental_documents_Set() const;
    bool is_supplemental_documents_Valid() const;

    OAITrust getTrust() const;
    void setTrust(const OAITrust &trust);
    bool is_trust_Set() const;
    bool is_trust_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAICorporation m_corporation;
    bool m_corporation_isSet;
    bool m_corporation_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    OAIJoint m_joint;
    bool m_joint_isSet;
    bool m_joint_isValid;

    OAIIndividual_2 m_natural_person;
    bool m_natural_person_isSet;
    bool m_natural_person_isValid;

    QString m_relationship;
    bool m_relationship_isSet;
    bool m_relationship_isValid;

    QString m_structure;
    bool m_structure_isSet;
    bool m_structure_isValid;

    QList<OAISupplemental_Documents_Element> m_supplemental_documents;
    bool m_supplemental_documents_isSet;
    bool m_supplemental_documents_isValid;

    OAITrust m_trust;
    bool m_trust_isSet;
    bool m_trust_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEntity)

#endif // OAIEntity_H
