/**
 * Increase API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIACH_Decline.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIACH_Decline::OAIACH_Decline(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIACH_Decline::OAIACH_Decline() {
    this->initializeModel();
}

OAIACH_Decline::~OAIACH_Decline() {}

void OAIACH_Decline::initializeModel() {

    m_amount_isSet = false;
    m_amount_isValid = false;

    m_originator_company_descriptive_date_isSet = false;
    m_originator_company_descriptive_date_isValid = false;

    m_originator_company_discretionary_data_isSet = false;
    m_originator_company_discretionary_data_isValid = false;

    m_originator_company_id_isSet = false;
    m_originator_company_id_isValid = false;

    m_originator_company_name_isSet = false;
    m_originator_company_name_isValid = false;

    m_reason_isSet = false;
    m_reason_isValid = false;

    m_receiver_id_number_isSet = false;
    m_receiver_id_number_isValid = false;

    m_receiver_name_isSet = false;
    m_receiver_name_isValid = false;

    m_trace_number_isSet = false;
    m_trace_number_isValid = false;
}

void OAIACH_Decline::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIACH_Decline::fromJsonObject(QJsonObject json) {

    m_amount_isValid = ::OpenAPI::fromJsonValue(m_amount, json[QString("amount")]);
    m_amount_isSet = !json[QString("amount")].isNull() && m_amount_isValid;

    m_originator_company_descriptive_date_isValid = ::OpenAPI::fromJsonValue(m_originator_company_descriptive_date, json[QString("originator_company_descriptive_date")]);
    m_originator_company_descriptive_date_isSet = !json[QString("originator_company_descriptive_date")].isNull() && m_originator_company_descriptive_date_isValid;

    m_originator_company_discretionary_data_isValid = ::OpenAPI::fromJsonValue(m_originator_company_discretionary_data, json[QString("originator_company_discretionary_data")]);
    m_originator_company_discretionary_data_isSet = !json[QString("originator_company_discretionary_data")].isNull() && m_originator_company_discretionary_data_isValid;

    m_originator_company_id_isValid = ::OpenAPI::fromJsonValue(m_originator_company_id, json[QString("originator_company_id")]);
    m_originator_company_id_isSet = !json[QString("originator_company_id")].isNull() && m_originator_company_id_isValid;

    m_originator_company_name_isValid = ::OpenAPI::fromJsonValue(m_originator_company_name, json[QString("originator_company_name")]);
    m_originator_company_name_isSet = !json[QString("originator_company_name")].isNull() && m_originator_company_name_isValid;

    m_reason_isValid = ::OpenAPI::fromJsonValue(m_reason, json[QString("reason")]);
    m_reason_isSet = !json[QString("reason")].isNull() && m_reason_isValid;

    m_receiver_id_number_isValid = ::OpenAPI::fromJsonValue(m_receiver_id_number, json[QString("receiver_id_number")]);
    m_receiver_id_number_isSet = !json[QString("receiver_id_number")].isNull() && m_receiver_id_number_isValid;

    m_receiver_name_isValid = ::OpenAPI::fromJsonValue(m_receiver_name, json[QString("receiver_name")]);
    m_receiver_name_isSet = !json[QString("receiver_name")].isNull() && m_receiver_name_isValid;

    m_trace_number_isValid = ::OpenAPI::fromJsonValue(m_trace_number, json[QString("trace_number")]);
    m_trace_number_isSet = !json[QString("trace_number")].isNull() && m_trace_number_isValid;
}

QString OAIACH_Decline::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIACH_Decline::asJsonObject() const {
    QJsonObject obj;
    if (m_amount_isSet) {
        obj.insert(QString("amount"), ::OpenAPI::toJsonValue(m_amount));
    }
    if (m_originator_company_descriptive_date_isSet) {
        obj.insert(QString("originator_company_descriptive_date"), ::OpenAPI::toJsonValue(m_originator_company_descriptive_date));
    }
    if (m_originator_company_discretionary_data_isSet) {
        obj.insert(QString("originator_company_discretionary_data"), ::OpenAPI::toJsonValue(m_originator_company_discretionary_data));
    }
    if (m_originator_company_id_isSet) {
        obj.insert(QString("originator_company_id"), ::OpenAPI::toJsonValue(m_originator_company_id));
    }
    if (m_originator_company_name_isSet) {
        obj.insert(QString("originator_company_name"), ::OpenAPI::toJsonValue(m_originator_company_name));
    }
    if (m_reason_isSet) {
        obj.insert(QString("reason"), ::OpenAPI::toJsonValue(m_reason));
    }
    if (m_receiver_id_number_isSet) {
        obj.insert(QString("receiver_id_number"), ::OpenAPI::toJsonValue(m_receiver_id_number));
    }
    if (m_receiver_name_isSet) {
        obj.insert(QString("receiver_name"), ::OpenAPI::toJsonValue(m_receiver_name));
    }
    if (m_trace_number_isSet) {
        obj.insert(QString("trace_number"), ::OpenAPI::toJsonValue(m_trace_number));
    }
    return obj;
}

qint32 OAIACH_Decline::getAmount() const {
    return m_amount;
}
void OAIACH_Decline::setAmount(const qint32 &amount) {
    m_amount = amount;
    m_amount_isSet = true;
}

bool OAIACH_Decline::is_amount_Set() const{
    return m_amount_isSet;
}

bool OAIACH_Decline::is_amount_Valid() const{
    return m_amount_isValid;
}

QString OAIACH_Decline::getOriginatorCompanyDescriptiveDate() const {
    return m_originator_company_descriptive_date;
}
void OAIACH_Decline::setOriginatorCompanyDescriptiveDate(const QString &originator_company_descriptive_date) {
    m_originator_company_descriptive_date = originator_company_descriptive_date;
    m_originator_company_descriptive_date_isSet = true;
}

bool OAIACH_Decline::is_originator_company_descriptive_date_Set() const{
    return m_originator_company_descriptive_date_isSet;
}

bool OAIACH_Decline::is_originator_company_descriptive_date_Valid() const{
    return m_originator_company_descriptive_date_isValid;
}

QString OAIACH_Decline::getOriginatorCompanyDiscretionaryData() const {
    return m_originator_company_discretionary_data;
}
void OAIACH_Decline::setOriginatorCompanyDiscretionaryData(const QString &originator_company_discretionary_data) {
    m_originator_company_discretionary_data = originator_company_discretionary_data;
    m_originator_company_discretionary_data_isSet = true;
}

bool OAIACH_Decline::is_originator_company_discretionary_data_Set() const{
    return m_originator_company_discretionary_data_isSet;
}

bool OAIACH_Decline::is_originator_company_discretionary_data_Valid() const{
    return m_originator_company_discretionary_data_isValid;
}

QString OAIACH_Decline::getOriginatorCompanyId() const {
    return m_originator_company_id;
}
void OAIACH_Decline::setOriginatorCompanyId(const QString &originator_company_id) {
    m_originator_company_id = originator_company_id;
    m_originator_company_id_isSet = true;
}

bool OAIACH_Decline::is_originator_company_id_Set() const{
    return m_originator_company_id_isSet;
}

bool OAIACH_Decline::is_originator_company_id_Valid() const{
    return m_originator_company_id_isValid;
}

QString OAIACH_Decline::getOriginatorCompanyName() const {
    return m_originator_company_name;
}
void OAIACH_Decline::setOriginatorCompanyName(const QString &originator_company_name) {
    m_originator_company_name = originator_company_name;
    m_originator_company_name_isSet = true;
}

bool OAIACH_Decline::is_originator_company_name_Set() const{
    return m_originator_company_name_isSet;
}

bool OAIACH_Decline::is_originator_company_name_Valid() const{
    return m_originator_company_name_isValid;
}

QString OAIACH_Decline::getReason() const {
    return m_reason;
}
void OAIACH_Decline::setReason(const QString &reason) {
    m_reason = reason;
    m_reason_isSet = true;
}

bool OAIACH_Decline::is_reason_Set() const{
    return m_reason_isSet;
}

bool OAIACH_Decline::is_reason_Valid() const{
    return m_reason_isValid;
}

QString OAIACH_Decline::getReceiverIdNumber() const {
    return m_receiver_id_number;
}
void OAIACH_Decline::setReceiverIdNumber(const QString &receiver_id_number) {
    m_receiver_id_number = receiver_id_number;
    m_receiver_id_number_isSet = true;
}

bool OAIACH_Decline::is_receiver_id_number_Set() const{
    return m_receiver_id_number_isSet;
}

bool OAIACH_Decline::is_receiver_id_number_Valid() const{
    return m_receiver_id_number_isValid;
}

QString OAIACH_Decline::getReceiverName() const {
    return m_receiver_name;
}
void OAIACH_Decline::setReceiverName(const QString &receiver_name) {
    m_receiver_name = receiver_name;
    m_receiver_name_isSet = true;
}

bool OAIACH_Decline::is_receiver_name_Set() const{
    return m_receiver_name_isSet;
}

bool OAIACH_Decline::is_receiver_name_Valid() const{
    return m_receiver_name_isValid;
}

QString OAIACH_Decline::getTraceNumber() const {
    return m_trace_number;
}
void OAIACH_Decline::setTraceNumber(const QString &trace_number) {
    m_trace_number = trace_number;
    m_trace_number_isSet = true;
}

bool OAIACH_Decline::is_trace_number_Set() const{
    return m_trace_number_isSet;
}

bool OAIACH_Decline::is_trace_number_Valid() const{
    return m_trace_number_isValid;
}

bool OAIACH_Decline::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_originator_company_descriptive_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_originator_company_discretionary_data_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_originator_company_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_originator_company_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_reason_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_receiver_id_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_receiver_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_trace_number_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIACH_Decline::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_amount_isValid && m_originator_company_descriptive_date_isValid && m_originator_company_discretionary_data_isValid && m_originator_company_id_isValid && m_originator_company_name_isValid && m_reason_isValid && m_receiver_id_number_isValid && m_receiver_name_isValid && m_trace_number_isValid && true;
}

} // namespace OpenAPI
