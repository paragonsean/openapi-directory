/**
 * Increase API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIACH_Notification_of_Change.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIACH_Notification_of_Change::OAIACH_Notification_of_Change(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIACH_Notification_of_Change::OAIACH_Notification_of_Change() {
    this->initializeModel();
}

OAIACH_Notification_of_Change::~OAIACH_Notification_of_Change() {}

void OAIACH_Notification_of_Change::initializeModel() {

    m_change_code_isSet = false;
    m_change_code_isValid = false;

    m_corrected_data_isSet = false;
    m_corrected_data_isValid = false;

    m_created_at_isSet = false;
    m_created_at_isValid = false;
}

void OAIACH_Notification_of_Change::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIACH_Notification_of_Change::fromJsonObject(QJsonObject json) {

    m_change_code_isValid = ::OpenAPI::fromJsonValue(m_change_code, json[QString("change_code")]);
    m_change_code_isSet = !json[QString("change_code")].isNull() && m_change_code_isValid;

    m_corrected_data_isValid = ::OpenAPI::fromJsonValue(m_corrected_data, json[QString("corrected_data")]);
    m_corrected_data_isSet = !json[QString("corrected_data")].isNull() && m_corrected_data_isValid;

    m_created_at_isValid = ::OpenAPI::fromJsonValue(m_created_at, json[QString("created_at")]);
    m_created_at_isSet = !json[QString("created_at")].isNull() && m_created_at_isValid;
}

QString OAIACH_Notification_of_Change::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIACH_Notification_of_Change::asJsonObject() const {
    QJsonObject obj;
    if (m_change_code_isSet) {
        obj.insert(QString("change_code"), ::OpenAPI::toJsonValue(m_change_code));
    }
    if (m_corrected_data_isSet) {
        obj.insert(QString("corrected_data"), ::OpenAPI::toJsonValue(m_corrected_data));
    }
    if (m_created_at_isSet) {
        obj.insert(QString("created_at"), ::OpenAPI::toJsonValue(m_created_at));
    }
    return obj;
}

QString OAIACH_Notification_of_Change::getChangeCode() const {
    return m_change_code;
}
void OAIACH_Notification_of_Change::setChangeCode(const QString &change_code) {
    m_change_code = change_code;
    m_change_code_isSet = true;
}

bool OAIACH_Notification_of_Change::is_change_code_Set() const{
    return m_change_code_isSet;
}

bool OAIACH_Notification_of_Change::is_change_code_Valid() const{
    return m_change_code_isValid;
}

QString OAIACH_Notification_of_Change::getCorrectedData() const {
    return m_corrected_data;
}
void OAIACH_Notification_of_Change::setCorrectedData(const QString &corrected_data) {
    m_corrected_data = corrected_data;
    m_corrected_data_isSet = true;
}

bool OAIACH_Notification_of_Change::is_corrected_data_Set() const{
    return m_corrected_data_isSet;
}

bool OAIACH_Notification_of_Change::is_corrected_data_Valid() const{
    return m_corrected_data_isValid;
}

QDateTime OAIACH_Notification_of_Change::getCreatedAt() const {
    return m_created_at;
}
void OAIACH_Notification_of_Change::setCreatedAt(const QDateTime &created_at) {
    m_created_at = created_at;
    m_created_at_isSet = true;
}

bool OAIACH_Notification_of_Change::is_created_at_Set() const{
    return m_created_at_isSet;
}

bool OAIACH_Notification_of_Change::is_created_at_Valid() const{
    return m_created_at_isValid;
}

bool OAIACH_Notification_of_Change::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_change_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_corrected_data_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_at_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIACH_Notification_of_Change::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_change_code_isValid && m_corrected_data_isValid && m_created_at_isValid && true;
}

} // namespace OpenAPI
