/**
 * Increase API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICheck_Transfer_Return_1.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICheck_Transfer_Return_1::OAICheck_Transfer_Return_1(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICheck_Transfer_Return_1::OAICheck_Transfer_Return_1() {
    this->initializeModel();
}

OAICheck_Transfer_Return_1::~OAICheck_Transfer_Return_1() {}

void OAICheck_Transfer_Return_1::initializeModel() {

    m_file_id_isSet = false;
    m_file_id_isValid = false;

    m_reason_isSet = false;
    m_reason_isValid = false;

    m_returned_at_isSet = false;
    m_returned_at_isValid = false;

    m_transaction_id_isSet = false;
    m_transaction_id_isValid = false;

    m_transfer_id_isSet = false;
    m_transfer_id_isValid = false;
}

void OAICheck_Transfer_Return_1::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICheck_Transfer_Return_1::fromJsonObject(QJsonObject json) {

    m_file_id_isValid = ::OpenAPI::fromJsonValue(m_file_id, json[QString("file_id")]);
    m_file_id_isSet = !json[QString("file_id")].isNull() && m_file_id_isValid;

    m_reason_isValid = ::OpenAPI::fromJsonValue(m_reason, json[QString("reason")]);
    m_reason_isSet = !json[QString("reason")].isNull() && m_reason_isValid;

    m_returned_at_isValid = ::OpenAPI::fromJsonValue(m_returned_at, json[QString("returned_at")]);
    m_returned_at_isSet = !json[QString("returned_at")].isNull() && m_returned_at_isValid;

    m_transaction_id_isValid = ::OpenAPI::fromJsonValue(m_transaction_id, json[QString("transaction_id")]);
    m_transaction_id_isSet = !json[QString("transaction_id")].isNull() && m_transaction_id_isValid;

    m_transfer_id_isValid = ::OpenAPI::fromJsonValue(m_transfer_id, json[QString("transfer_id")]);
    m_transfer_id_isSet = !json[QString("transfer_id")].isNull() && m_transfer_id_isValid;
}

QString OAICheck_Transfer_Return_1::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICheck_Transfer_Return_1::asJsonObject() const {
    QJsonObject obj;
    if (m_file_id_isSet) {
        obj.insert(QString("file_id"), ::OpenAPI::toJsonValue(m_file_id));
    }
    if (m_reason_isSet) {
        obj.insert(QString("reason"), ::OpenAPI::toJsonValue(m_reason));
    }
    if (m_returned_at_isSet) {
        obj.insert(QString("returned_at"), ::OpenAPI::toJsonValue(m_returned_at));
    }
    if (m_transaction_id_isSet) {
        obj.insert(QString("transaction_id"), ::OpenAPI::toJsonValue(m_transaction_id));
    }
    if (m_transfer_id_isSet) {
        obj.insert(QString("transfer_id"), ::OpenAPI::toJsonValue(m_transfer_id));
    }
    return obj;
}

QString OAICheck_Transfer_Return_1::getFileId() const {
    return m_file_id;
}
void OAICheck_Transfer_Return_1::setFileId(const QString &file_id) {
    m_file_id = file_id;
    m_file_id_isSet = true;
}

bool OAICheck_Transfer_Return_1::is_file_id_Set() const{
    return m_file_id_isSet;
}

bool OAICheck_Transfer_Return_1::is_file_id_Valid() const{
    return m_file_id_isValid;
}

QString OAICheck_Transfer_Return_1::getReason() const {
    return m_reason;
}
void OAICheck_Transfer_Return_1::setReason(const QString &reason) {
    m_reason = reason;
    m_reason_isSet = true;
}

bool OAICheck_Transfer_Return_1::is_reason_Set() const{
    return m_reason_isSet;
}

bool OAICheck_Transfer_Return_1::is_reason_Valid() const{
    return m_reason_isValid;
}

QDateTime OAICheck_Transfer_Return_1::getReturnedAt() const {
    return m_returned_at;
}
void OAICheck_Transfer_Return_1::setReturnedAt(const QDateTime &returned_at) {
    m_returned_at = returned_at;
    m_returned_at_isSet = true;
}

bool OAICheck_Transfer_Return_1::is_returned_at_Set() const{
    return m_returned_at_isSet;
}

bool OAICheck_Transfer_Return_1::is_returned_at_Valid() const{
    return m_returned_at_isValid;
}

QString OAICheck_Transfer_Return_1::getTransactionId() const {
    return m_transaction_id;
}
void OAICheck_Transfer_Return_1::setTransactionId(const QString &transaction_id) {
    m_transaction_id = transaction_id;
    m_transaction_id_isSet = true;
}

bool OAICheck_Transfer_Return_1::is_transaction_id_Set() const{
    return m_transaction_id_isSet;
}

bool OAICheck_Transfer_Return_1::is_transaction_id_Valid() const{
    return m_transaction_id_isValid;
}

QString OAICheck_Transfer_Return_1::getTransferId() const {
    return m_transfer_id;
}
void OAICheck_Transfer_Return_1::setTransferId(const QString &transfer_id) {
    m_transfer_id = transfer_id;
    m_transfer_id_isSet = true;
}

bool OAICheck_Transfer_Return_1::is_transfer_id_Set() const{
    return m_transfer_id_isSet;
}

bool OAICheck_Transfer_Return_1::is_transfer_id_Valid() const{
    return m_transfer_id_isValid;
}

bool OAICheck_Transfer_Return_1::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_file_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_reason_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_returned_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_transaction_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_transfer_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICheck_Transfer_Return_1::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_file_id_isValid && m_reason_isValid && m_returned_at_isValid && m_transaction_id_isValid && m_transfer_id_isValid && true;
}

} // namespace OpenAPI
