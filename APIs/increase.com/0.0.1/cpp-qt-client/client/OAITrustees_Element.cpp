/**
 * Increase API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITrustees_Element.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITrustees_Element::OAITrustees_Element(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITrustees_Element::OAITrustees_Element() {
    this->initializeModel();
}

OAITrustees_Element::~OAITrustees_Element() {}

void OAITrustees_Element::initializeModel() {

    m_individual_isSet = false;
    m_individual_isValid = false;

    m_structure_isSet = false;
    m_structure_isValid = false;
}

void OAITrustees_Element::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITrustees_Element::fromJsonObject(QJsonObject json) {

    m_individual_isValid = ::OpenAPI::fromJsonValue(m_individual, json[QString("individual")]);
    m_individual_isSet = !json[QString("individual")].isNull() && m_individual_isValid;

    m_structure_isValid = ::OpenAPI::fromJsonValue(m_structure, json[QString("structure")]);
    m_structure_isSet = !json[QString("structure")].isNull() && m_structure_isValid;
}

QString OAITrustees_Element::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITrustees_Element::asJsonObject() const {
    QJsonObject obj;
    if (m_individual.isSet()) {
        obj.insert(QString("individual"), ::OpenAPI::toJsonValue(m_individual));
    }
    if (m_structure_isSet) {
        obj.insert(QString("structure"), ::OpenAPI::toJsonValue(m_structure));
    }
    return obj;
}

OAIIndividual_4 OAITrustees_Element::getIndividual() const {
    return m_individual;
}
void OAITrustees_Element::setIndividual(const OAIIndividual_4 &individual) {
    m_individual = individual;
    m_individual_isSet = true;
}

bool OAITrustees_Element::is_individual_Set() const{
    return m_individual_isSet;
}

bool OAITrustees_Element::is_individual_Valid() const{
    return m_individual_isValid;
}

QString OAITrustees_Element::getStructure() const {
    return m_structure;
}
void OAITrustees_Element::setStructure(const QString &structure) {
    m_structure = structure;
    m_structure_isSet = true;
}

bool OAITrustees_Element::is_structure_Set() const{
    return m_structure_isSet;
}

bool OAITrustees_Element::is_structure_Valid() const{
    return m_structure_isValid;
}

bool OAITrustees_Element::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_individual.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_structure_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITrustees_Element::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_individual_isValid && m_structure_isValid && true;
}

} // namespace OpenAPI
