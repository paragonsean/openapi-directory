/**
 * Increase API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIInbound_Wire_Reversal.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIInbound_Wire_Reversal::OAIInbound_Wire_Reversal(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIInbound_Wire_Reversal::OAIInbound_Wire_Reversal() {
    this->initializeModel();
}

OAIInbound_Wire_Reversal::~OAIInbound_Wire_Reversal() {}

void OAIInbound_Wire_Reversal::initializeModel() {

    m_amount_isSet = false;
    m_amount_isValid = false;

    m_created_at_isSet = false;
    m_created_at_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_financial_institution_to_financial_institution_information_isSet = false;
    m_financial_institution_to_financial_institution_information_isValid = false;

    m_input_cycle_date_isSet = false;
    m_input_cycle_date_isValid = false;

    m_input_message_accountability_data_isSet = false;
    m_input_message_accountability_data_isValid = false;

    m_input_sequence_number_isSet = false;
    m_input_sequence_number_isValid = false;

    m_input_source_isSet = false;
    m_input_source_isValid = false;

    m_previous_message_input_cycle_date_isSet = false;
    m_previous_message_input_cycle_date_isValid = false;

    m_previous_message_input_message_accountability_data_isSet = false;
    m_previous_message_input_message_accountability_data_isValid = false;

    m_previous_message_input_sequence_number_isSet = false;
    m_previous_message_input_sequence_number_isValid = false;

    m_previous_message_input_source_isSet = false;
    m_previous_message_input_source_isValid = false;

    m_receiver_financial_institution_information_isSet = false;
    m_receiver_financial_institution_information_isValid = false;

    m_transaction_id_isSet = false;
    m_transaction_id_isValid = false;
}

void OAIInbound_Wire_Reversal::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIInbound_Wire_Reversal::fromJsonObject(QJsonObject json) {

    m_amount_isValid = ::OpenAPI::fromJsonValue(m_amount, json[QString("amount")]);
    m_amount_isSet = !json[QString("amount")].isNull() && m_amount_isValid;

    m_created_at_isValid = ::OpenAPI::fromJsonValue(m_created_at, json[QString("created_at")]);
    m_created_at_isSet = !json[QString("created_at")].isNull() && m_created_at_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_financial_institution_to_financial_institution_information_isValid = ::OpenAPI::fromJsonValue(m_financial_institution_to_financial_institution_information, json[QString("financial_institution_to_financial_institution_information")]);
    m_financial_institution_to_financial_institution_information_isSet = !json[QString("financial_institution_to_financial_institution_information")].isNull() && m_financial_institution_to_financial_institution_information_isValid;

    m_input_cycle_date_isValid = ::OpenAPI::fromJsonValue(m_input_cycle_date, json[QString("input_cycle_date")]);
    m_input_cycle_date_isSet = !json[QString("input_cycle_date")].isNull() && m_input_cycle_date_isValid;

    m_input_message_accountability_data_isValid = ::OpenAPI::fromJsonValue(m_input_message_accountability_data, json[QString("input_message_accountability_data")]);
    m_input_message_accountability_data_isSet = !json[QString("input_message_accountability_data")].isNull() && m_input_message_accountability_data_isValid;

    m_input_sequence_number_isValid = ::OpenAPI::fromJsonValue(m_input_sequence_number, json[QString("input_sequence_number")]);
    m_input_sequence_number_isSet = !json[QString("input_sequence_number")].isNull() && m_input_sequence_number_isValid;

    m_input_source_isValid = ::OpenAPI::fromJsonValue(m_input_source, json[QString("input_source")]);
    m_input_source_isSet = !json[QString("input_source")].isNull() && m_input_source_isValid;

    m_previous_message_input_cycle_date_isValid = ::OpenAPI::fromJsonValue(m_previous_message_input_cycle_date, json[QString("previous_message_input_cycle_date")]);
    m_previous_message_input_cycle_date_isSet = !json[QString("previous_message_input_cycle_date")].isNull() && m_previous_message_input_cycle_date_isValid;

    m_previous_message_input_message_accountability_data_isValid = ::OpenAPI::fromJsonValue(m_previous_message_input_message_accountability_data, json[QString("previous_message_input_message_accountability_data")]);
    m_previous_message_input_message_accountability_data_isSet = !json[QString("previous_message_input_message_accountability_data")].isNull() && m_previous_message_input_message_accountability_data_isValid;

    m_previous_message_input_sequence_number_isValid = ::OpenAPI::fromJsonValue(m_previous_message_input_sequence_number, json[QString("previous_message_input_sequence_number")]);
    m_previous_message_input_sequence_number_isSet = !json[QString("previous_message_input_sequence_number")].isNull() && m_previous_message_input_sequence_number_isValid;

    m_previous_message_input_source_isValid = ::OpenAPI::fromJsonValue(m_previous_message_input_source, json[QString("previous_message_input_source")]);
    m_previous_message_input_source_isSet = !json[QString("previous_message_input_source")].isNull() && m_previous_message_input_source_isValid;

    m_receiver_financial_institution_information_isValid = ::OpenAPI::fromJsonValue(m_receiver_financial_institution_information, json[QString("receiver_financial_institution_information")]);
    m_receiver_financial_institution_information_isSet = !json[QString("receiver_financial_institution_information")].isNull() && m_receiver_financial_institution_information_isValid;

    m_transaction_id_isValid = ::OpenAPI::fromJsonValue(m_transaction_id, json[QString("transaction_id")]);
    m_transaction_id_isSet = !json[QString("transaction_id")].isNull() && m_transaction_id_isValid;
}

QString OAIInbound_Wire_Reversal::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIInbound_Wire_Reversal::asJsonObject() const {
    QJsonObject obj;
    if (m_amount_isSet) {
        obj.insert(QString("amount"), ::OpenAPI::toJsonValue(m_amount));
    }
    if (m_created_at_isSet) {
        obj.insert(QString("created_at"), ::OpenAPI::toJsonValue(m_created_at));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_financial_institution_to_financial_institution_information_isSet) {
        obj.insert(QString("financial_institution_to_financial_institution_information"), ::OpenAPI::toJsonValue(m_financial_institution_to_financial_institution_information));
    }
    if (m_input_cycle_date_isSet) {
        obj.insert(QString("input_cycle_date"), ::OpenAPI::toJsonValue(m_input_cycle_date));
    }
    if (m_input_message_accountability_data_isSet) {
        obj.insert(QString("input_message_accountability_data"), ::OpenAPI::toJsonValue(m_input_message_accountability_data));
    }
    if (m_input_sequence_number_isSet) {
        obj.insert(QString("input_sequence_number"), ::OpenAPI::toJsonValue(m_input_sequence_number));
    }
    if (m_input_source_isSet) {
        obj.insert(QString("input_source"), ::OpenAPI::toJsonValue(m_input_source));
    }
    if (m_previous_message_input_cycle_date_isSet) {
        obj.insert(QString("previous_message_input_cycle_date"), ::OpenAPI::toJsonValue(m_previous_message_input_cycle_date));
    }
    if (m_previous_message_input_message_accountability_data_isSet) {
        obj.insert(QString("previous_message_input_message_accountability_data"), ::OpenAPI::toJsonValue(m_previous_message_input_message_accountability_data));
    }
    if (m_previous_message_input_sequence_number_isSet) {
        obj.insert(QString("previous_message_input_sequence_number"), ::OpenAPI::toJsonValue(m_previous_message_input_sequence_number));
    }
    if (m_previous_message_input_source_isSet) {
        obj.insert(QString("previous_message_input_source"), ::OpenAPI::toJsonValue(m_previous_message_input_source));
    }
    if (m_receiver_financial_institution_information_isSet) {
        obj.insert(QString("receiver_financial_institution_information"), ::OpenAPI::toJsonValue(m_receiver_financial_institution_information));
    }
    if (m_transaction_id_isSet) {
        obj.insert(QString("transaction_id"), ::OpenAPI::toJsonValue(m_transaction_id));
    }
    return obj;
}

qint32 OAIInbound_Wire_Reversal::getAmount() const {
    return m_amount;
}
void OAIInbound_Wire_Reversal::setAmount(const qint32 &amount) {
    m_amount = amount;
    m_amount_isSet = true;
}

bool OAIInbound_Wire_Reversal::is_amount_Set() const{
    return m_amount_isSet;
}

bool OAIInbound_Wire_Reversal::is_amount_Valid() const{
    return m_amount_isValid;
}

QDateTime OAIInbound_Wire_Reversal::getCreatedAt() const {
    return m_created_at;
}
void OAIInbound_Wire_Reversal::setCreatedAt(const QDateTime &created_at) {
    m_created_at = created_at;
    m_created_at_isSet = true;
}

bool OAIInbound_Wire_Reversal::is_created_at_Set() const{
    return m_created_at_isSet;
}

bool OAIInbound_Wire_Reversal::is_created_at_Valid() const{
    return m_created_at_isValid;
}

QString OAIInbound_Wire_Reversal::getDescription() const {
    return m_description;
}
void OAIInbound_Wire_Reversal::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIInbound_Wire_Reversal::is_description_Set() const{
    return m_description_isSet;
}

bool OAIInbound_Wire_Reversal::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIInbound_Wire_Reversal::getFinancialInstitutionToFinancialInstitutionInformation() const {
    return m_financial_institution_to_financial_institution_information;
}
void OAIInbound_Wire_Reversal::setFinancialInstitutionToFinancialInstitutionInformation(const QString &financial_institution_to_financial_institution_information) {
    m_financial_institution_to_financial_institution_information = financial_institution_to_financial_institution_information;
    m_financial_institution_to_financial_institution_information_isSet = true;
}

bool OAIInbound_Wire_Reversal::is_financial_institution_to_financial_institution_information_Set() const{
    return m_financial_institution_to_financial_institution_information_isSet;
}

bool OAIInbound_Wire_Reversal::is_financial_institution_to_financial_institution_information_Valid() const{
    return m_financial_institution_to_financial_institution_information_isValid;
}

QDate OAIInbound_Wire_Reversal::getInputCycleDate() const {
    return m_input_cycle_date;
}
void OAIInbound_Wire_Reversal::setInputCycleDate(const QDate &input_cycle_date) {
    m_input_cycle_date = input_cycle_date;
    m_input_cycle_date_isSet = true;
}

bool OAIInbound_Wire_Reversal::is_input_cycle_date_Set() const{
    return m_input_cycle_date_isSet;
}

bool OAIInbound_Wire_Reversal::is_input_cycle_date_Valid() const{
    return m_input_cycle_date_isValid;
}

QString OAIInbound_Wire_Reversal::getInputMessageAccountabilityData() const {
    return m_input_message_accountability_data;
}
void OAIInbound_Wire_Reversal::setInputMessageAccountabilityData(const QString &input_message_accountability_data) {
    m_input_message_accountability_data = input_message_accountability_data;
    m_input_message_accountability_data_isSet = true;
}

bool OAIInbound_Wire_Reversal::is_input_message_accountability_data_Set() const{
    return m_input_message_accountability_data_isSet;
}

bool OAIInbound_Wire_Reversal::is_input_message_accountability_data_Valid() const{
    return m_input_message_accountability_data_isValid;
}

QString OAIInbound_Wire_Reversal::getInputSequenceNumber() const {
    return m_input_sequence_number;
}
void OAIInbound_Wire_Reversal::setInputSequenceNumber(const QString &input_sequence_number) {
    m_input_sequence_number = input_sequence_number;
    m_input_sequence_number_isSet = true;
}

bool OAIInbound_Wire_Reversal::is_input_sequence_number_Set() const{
    return m_input_sequence_number_isSet;
}

bool OAIInbound_Wire_Reversal::is_input_sequence_number_Valid() const{
    return m_input_sequence_number_isValid;
}

QString OAIInbound_Wire_Reversal::getInputSource() const {
    return m_input_source;
}
void OAIInbound_Wire_Reversal::setInputSource(const QString &input_source) {
    m_input_source = input_source;
    m_input_source_isSet = true;
}

bool OAIInbound_Wire_Reversal::is_input_source_Set() const{
    return m_input_source_isSet;
}

bool OAIInbound_Wire_Reversal::is_input_source_Valid() const{
    return m_input_source_isValid;
}

QDate OAIInbound_Wire_Reversal::getPreviousMessageInputCycleDate() const {
    return m_previous_message_input_cycle_date;
}
void OAIInbound_Wire_Reversal::setPreviousMessageInputCycleDate(const QDate &previous_message_input_cycle_date) {
    m_previous_message_input_cycle_date = previous_message_input_cycle_date;
    m_previous_message_input_cycle_date_isSet = true;
}

bool OAIInbound_Wire_Reversal::is_previous_message_input_cycle_date_Set() const{
    return m_previous_message_input_cycle_date_isSet;
}

bool OAIInbound_Wire_Reversal::is_previous_message_input_cycle_date_Valid() const{
    return m_previous_message_input_cycle_date_isValid;
}

QString OAIInbound_Wire_Reversal::getPreviousMessageInputMessageAccountabilityData() const {
    return m_previous_message_input_message_accountability_data;
}
void OAIInbound_Wire_Reversal::setPreviousMessageInputMessageAccountabilityData(const QString &previous_message_input_message_accountability_data) {
    m_previous_message_input_message_accountability_data = previous_message_input_message_accountability_data;
    m_previous_message_input_message_accountability_data_isSet = true;
}

bool OAIInbound_Wire_Reversal::is_previous_message_input_message_accountability_data_Set() const{
    return m_previous_message_input_message_accountability_data_isSet;
}

bool OAIInbound_Wire_Reversal::is_previous_message_input_message_accountability_data_Valid() const{
    return m_previous_message_input_message_accountability_data_isValid;
}

QString OAIInbound_Wire_Reversal::getPreviousMessageInputSequenceNumber() const {
    return m_previous_message_input_sequence_number;
}
void OAIInbound_Wire_Reversal::setPreviousMessageInputSequenceNumber(const QString &previous_message_input_sequence_number) {
    m_previous_message_input_sequence_number = previous_message_input_sequence_number;
    m_previous_message_input_sequence_number_isSet = true;
}

bool OAIInbound_Wire_Reversal::is_previous_message_input_sequence_number_Set() const{
    return m_previous_message_input_sequence_number_isSet;
}

bool OAIInbound_Wire_Reversal::is_previous_message_input_sequence_number_Valid() const{
    return m_previous_message_input_sequence_number_isValid;
}

QString OAIInbound_Wire_Reversal::getPreviousMessageInputSource() const {
    return m_previous_message_input_source;
}
void OAIInbound_Wire_Reversal::setPreviousMessageInputSource(const QString &previous_message_input_source) {
    m_previous_message_input_source = previous_message_input_source;
    m_previous_message_input_source_isSet = true;
}

bool OAIInbound_Wire_Reversal::is_previous_message_input_source_Set() const{
    return m_previous_message_input_source_isSet;
}

bool OAIInbound_Wire_Reversal::is_previous_message_input_source_Valid() const{
    return m_previous_message_input_source_isValid;
}

QString OAIInbound_Wire_Reversal::getReceiverFinancialInstitutionInformation() const {
    return m_receiver_financial_institution_information;
}
void OAIInbound_Wire_Reversal::setReceiverFinancialInstitutionInformation(const QString &receiver_financial_institution_information) {
    m_receiver_financial_institution_information = receiver_financial_institution_information;
    m_receiver_financial_institution_information_isSet = true;
}

bool OAIInbound_Wire_Reversal::is_receiver_financial_institution_information_Set() const{
    return m_receiver_financial_institution_information_isSet;
}

bool OAIInbound_Wire_Reversal::is_receiver_financial_institution_information_Valid() const{
    return m_receiver_financial_institution_information_isValid;
}

QString OAIInbound_Wire_Reversal::getTransactionId() const {
    return m_transaction_id;
}
void OAIInbound_Wire_Reversal::setTransactionId(const QString &transaction_id) {
    m_transaction_id = transaction_id;
    m_transaction_id_isSet = true;
}

bool OAIInbound_Wire_Reversal::is_transaction_id_Set() const{
    return m_transaction_id_isSet;
}

bool OAIInbound_Wire_Reversal::is_transaction_id_Valid() const{
    return m_transaction_id_isValid;
}

bool OAIInbound_Wire_Reversal::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_financial_institution_to_financial_institution_information_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_input_cycle_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_input_message_accountability_data_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_input_sequence_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_input_source_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_previous_message_input_cycle_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_previous_message_input_message_accountability_data_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_previous_message_input_sequence_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_previous_message_input_source_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_receiver_financial_institution_information_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_transaction_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIInbound_Wire_Reversal::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_amount_isValid && m_created_at_isValid && m_description_isValid && m_financial_institution_to_financial_institution_information_isValid && m_input_cycle_date_isValid && m_input_message_accountability_data_isValid && m_input_sequence_number_isValid && m_input_source_isValid && m_previous_message_input_cycle_date_isValid && m_previous_message_input_message_accountability_data_isValid && m_previous_message_input_sequence_number_isValid && m_previous_message_input_source_isValid && m_receiver_financial_institution_information_isValid && m_transaction_id_isValid && true;
}

} // namespace OpenAPI
