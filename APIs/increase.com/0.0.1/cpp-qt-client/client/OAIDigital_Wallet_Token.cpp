/**
 * Increase API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDigital_Wallet_Token.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDigital_Wallet_Token::OAIDigital_Wallet_Token(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDigital_Wallet_Token::OAIDigital_Wallet_Token() {
    this->initializeModel();
}

OAIDigital_Wallet_Token::~OAIDigital_Wallet_Token() {}

void OAIDigital_Wallet_Token::initializeModel() {

    m_card_id_isSet = false;
    m_card_id_isValid = false;

    m_card_profile_id_isSet = false;
    m_card_profile_id_isValid = false;

    m_decision_isSet = false;
    m_decision_isValid = false;

    m_digital_wallet_isSet = false;
    m_digital_wallet_isValid = false;
}

void OAIDigital_Wallet_Token::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDigital_Wallet_Token::fromJsonObject(QJsonObject json) {

    m_card_id_isValid = ::OpenAPI::fromJsonValue(m_card_id, json[QString("card_id")]);
    m_card_id_isSet = !json[QString("card_id")].isNull() && m_card_id_isValid;

    m_card_profile_id_isValid = ::OpenAPI::fromJsonValue(m_card_profile_id, json[QString("card_profile_id")]);
    m_card_profile_id_isSet = !json[QString("card_profile_id")].isNull() && m_card_profile_id_isValid;

    m_decision_isValid = ::OpenAPI::fromJsonValue(m_decision, json[QString("decision")]);
    m_decision_isSet = !json[QString("decision")].isNull() && m_decision_isValid;

    m_digital_wallet_isValid = ::OpenAPI::fromJsonValue(m_digital_wallet, json[QString("digital_wallet")]);
    m_digital_wallet_isSet = !json[QString("digital_wallet")].isNull() && m_digital_wallet_isValid;
}

QString OAIDigital_Wallet_Token::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDigital_Wallet_Token::asJsonObject() const {
    QJsonObject obj;
    if (m_card_id_isSet) {
        obj.insert(QString("card_id"), ::OpenAPI::toJsonValue(m_card_id));
    }
    if (m_card_profile_id_isSet) {
        obj.insert(QString("card_profile_id"), ::OpenAPI::toJsonValue(m_card_profile_id));
    }
    if (m_decision_isSet) {
        obj.insert(QString("decision"), ::OpenAPI::toJsonValue(m_decision));
    }
    if (m_digital_wallet_isSet) {
        obj.insert(QString("digital_wallet"), ::OpenAPI::toJsonValue(m_digital_wallet));
    }
    return obj;
}

QString OAIDigital_Wallet_Token::getCardId() const {
    return m_card_id;
}
void OAIDigital_Wallet_Token::setCardId(const QString &card_id) {
    m_card_id = card_id;
    m_card_id_isSet = true;
}

bool OAIDigital_Wallet_Token::is_card_id_Set() const{
    return m_card_id_isSet;
}

bool OAIDigital_Wallet_Token::is_card_id_Valid() const{
    return m_card_id_isValid;
}

QString OAIDigital_Wallet_Token::getCardProfileId() const {
    return m_card_profile_id;
}
void OAIDigital_Wallet_Token::setCardProfileId(const QString &card_profile_id) {
    m_card_profile_id = card_profile_id;
    m_card_profile_id_isSet = true;
}

bool OAIDigital_Wallet_Token::is_card_profile_id_Set() const{
    return m_card_profile_id_isSet;
}

bool OAIDigital_Wallet_Token::is_card_profile_id_Valid() const{
    return m_card_profile_id_isValid;
}

QString OAIDigital_Wallet_Token::getDecision() const {
    return m_decision;
}
void OAIDigital_Wallet_Token::setDecision(const QString &decision) {
    m_decision = decision;
    m_decision_isSet = true;
}

bool OAIDigital_Wallet_Token::is_decision_Set() const{
    return m_decision_isSet;
}

bool OAIDigital_Wallet_Token::is_decision_Valid() const{
    return m_decision_isValid;
}

QString OAIDigital_Wallet_Token::getDigitalWallet() const {
    return m_digital_wallet;
}
void OAIDigital_Wallet_Token::setDigitalWallet(const QString &digital_wallet) {
    m_digital_wallet = digital_wallet;
    m_digital_wallet_isSet = true;
}

bool OAIDigital_Wallet_Token::is_digital_wallet_Set() const{
    return m_digital_wallet_isSet;
}

bool OAIDigital_Wallet_Token::is_digital_wallet_Valid() const{
    return m_digital_wallet_isValid;
}

bool OAIDigital_Wallet_Token::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_card_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_card_profile_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_decision_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_digital_wallet_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDigital_Wallet_Token::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_card_id_isValid && m_card_profile_id_isValid && m_decision_isValid && m_digital_wallet_isValid && true;
}

} // namespace OpenAPI
