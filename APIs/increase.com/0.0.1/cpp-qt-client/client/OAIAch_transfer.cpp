/**
 * Increase API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAch_transfer.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAch_transfer::OAIAch_transfer(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAch_transfer::OAIAch_transfer() {
    this->initializeModel();
}

OAIAch_transfer::~OAIAch_transfer() {}

void OAIAch_transfer::initializeModel() {

    m_account_id_isSet = false;
    m_account_id_isValid = false;

    m_account_number_isSet = false;
    m_account_number_isValid = false;

    m_addendum_isSet = false;
    m_addendum_isValid = false;

    m_amount_isSet = false;
    m_amount_isValid = false;

    m_approval_isSet = false;
    m_approval_isValid = false;

    m_cancellation_isSet = false;
    m_cancellation_isValid = false;

    m_company_descriptive_date_isSet = false;
    m_company_descriptive_date_isValid = false;

    m_company_discretionary_data_isSet = false;
    m_company_discretionary_data_isValid = false;

    m_company_entry_description_isSet = false;
    m_company_entry_description_isValid = false;

    m_company_name_isSet = false;
    m_company_name_isValid = false;

    m_created_at_isSet = false;
    m_created_at_isValid = false;

    m_currency_isSet = false;
    m_currency_isValid = false;

    m_effective_date_isSet = false;
    m_effective_date_isValid = false;

    m_external_account_id_isSet = false;
    m_external_account_id_isValid = false;

    m_funding_isSet = false;
    m_funding_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_individual_id_isSet = false;
    m_individual_id_isValid = false;

    m_individual_name_isSet = false;
    m_individual_name_isValid = false;

    m_network_isSet = false;
    m_network_isValid = false;

    m_notifications_of_change_isSet = false;
    m_notifications_of_change_isValid = false;

    m_r_return_isSet = false;
    m_r_return_isValid = false;

    m_routing_number_isSet = false;
    m_routing_number_isValid = false;

    m_standard_entry_class_code_isSet = false;
    m_standard_entry_class_code_isValid = false;

    m_statement_descriptor_isSet = false;
    m_statement_descriptor_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_submission_isSet = false;
    m_submission_isValid = false;

    m_transaction_id_isSet = false;
    m_transaction_id_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAIAch_transfer::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAch_transfer::fromJsonObject(QJsonObject json) {

    m_account_id_isValid = ::OpenAPI::fromJsonValue(m_account_id, json[QString("account_id")]);
    m_account_id_isSet = !json[QString("account_id")].isNull() && m_account_id_isValid;

    m_account_number_isValid = ::OpenAPI::fromJsonValue(m_account_number, json[QString("account_number")]);
    m_account_number_isSet = !json[QString("account_number")].isNull() && m_account_number_isValid;

    m_addendum_isValid = ::OpenAPI::fromJsonValue(m_addendum, json[QString("addendum")]);
    m_addendum_isSet = !json[QString("addendum")].isNull() && m_addendum_isValid;

    m_amount_isValid = ::OpenAPI::fromJsonValue(m_amount, json[QString("amount")]);
    m_amount_isSet = !json[QString("amount")].isNull() && m_amount_isValid;

    m_approval_isValid = ::OpenAPI::fromJsonValue(m_approval, json[QString("approval")]);
    m_approval_isSet = !json[QString("approval")].isNull() && m_approval_isValid;

    m_cancellation_isValid = ::OpenAPI::fromJsonValue(m_cancellation, json[QString("cancellation")]);
    m_cancellation_isSet = !json[QString("cancellation")].isNull() && m_cancellation_isValid;

    m_company_descriptive_date_isValid = ::OpenAPI::fromJsonValue(m_company_descriptive_date, json[QString("company_descriptive_date")]);
    m_company_descriptive_date_isSet = !json[QString("company_descriptive_date")].isNull() && m_company_descriptive_date_isValid;

    m_company_discretionary_data_isValid = ::OpenAPI::fromJsonValue(m_company_discretionary_data, json[QString("company_discretionary_data")]);
    m_company_discretionary_data_isSet = !json[QString("company_discretionary_data")].isNull() && m_company_discretionary_data_isValid;

    m_company_entry_description_isValid = ::OpenAPI::fromJsonValue(m_company_entry_description, json[QString("company_entry_description")]);
    m_company_entry_description_isSet = !json[QString("company_entry_description")].isNull() && m_company_entry_description_isValid;

    m_company_name_isValid = ::OpenAPI::fromJsonValue(m_company_name, json[QString("company_name")]);
    m_company_name_isSet = !json[QString("company_name")].isNull() && m_company_name_isValid;

    m_created_at_isValid = ::OpenAPI::fromJsonValue(m_created_at, json[QString("created_at")]);
    m_created_at_isSet = !json[QString("created_at")].isNull() && m_created_at_isValid;

    m_currency_isValid = ::OpenAPI::fromJsonValue(m_currency, json[QString("currency")]);
    m_currency_isSet = !json[QString("currency")].isNull() && m_currency_isValid;

    m_effective_date_isValid = ::OpenAPI::fromJsonValue(m_effective_date, json[QString("effective_date")]);
    m_effective_date_isSet = !json[QString("effective_date")].isNull() && m_effective_date_isValid;

    m_external_account_id_isValid = ::OpenAPI::fromJsonValue(m_external_account_id, json[QString("external_account_id")]);
    m_external_account_id_isSet = !json[QString("external_account_id")].isNull() && m_external_account_id_isValid;

    m_funding_isValid = ::OpenAPI::fromJsonValue(m_funding, json[QString("funding")]);
    m_funding_isSet = !json[QString("funding")].isNull() && m_funding_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_individual_id_isValid = ::OpenAPI::fromJsonValue(m_individual_id, json[QString("individual_id")]);
    m_individual_id_isSet = !json[QString("individual_id")].isNull() && m_individual_id_isValid;

    m_individual_name_isValid = ::OpenAPI::fromJsonValue(m_individual_name, json[QString("individual_name")]);
    m_individual_name_isSet = !json[QString("individual_name")].isNull() && m_individual_name_isValid;

    m_network_isValid = ::OpenAPI::fromJsonValue(m_network, json[QString("network")]);
    m_network_isSet = !json[QString("network")].isNull() && m_network_isValid;

    m_notifications_of_change_isValid = ::OpenAPI::fromJsonValue(m_notifications_of_change, json[QString("notifications_of_change")]);
    m_notifications_of_change_isSet = !json[QString("notifications_of_change")].isNull() && m_notifications_of_change_isValid;

    m_r_return_isValid = ::OpenAPI::fromJsonValue(m_r_return, json[QString("return")]);
    m_r_return_isSet = !json[QString("return")].isNull() && m_r_return_isValid;

    m_routing_number_isValid = ::OpenAPI::fromJsonValue(m_routing_number, json[QString("routing_number")]);
    m_routing_number_isSet = !json[QString("routing_number")].isNull() && m_routing_number_isValid;

    m_standard_entry_class_code_isValid = ::OpenAPI::fromJsonValue(m_standard_entry_class_code, json[QString("standard_entry_class_code")]);
    m_standard_entry_class_code_isSet = !json[QString("standard_entry_class_code")].isNull() && m_standard_entry_class_code_isValid;

    m_statement_descriptor_isValid = ::OpenAPI::fromJsonValue(m_statement_descriptor, json[QString("statement_descriptor")]);
    m_statement_descriptor_isSet = !json[QString("statement_descriptor")].isNull() && m_statement_descriptor_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_submission_isValid = ::OpenAPI::fromJsonValue(m_submission, json[QString("submission")]);
    m_submission_isSet = !json[QString("submission")].isNull() && m_submission_isValid;

    m_transaction_id_isValid = ::OpenAPI::fromJsonValue(m_transaction_id, json[QString("transaction_id")]);
    m_transaction_id_isSet = !json[QString("transaction_id")].isNull() && m_transaction_id_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;
}

QString OAIAch_transfer::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAch_transfer::asJsonObject() const {
    QJsonObject obj;
    if (m_account_id_isSet) {
        obj.insert(QString("account_id"), ::OpenAPI::toJsonValue(m_account_id));
    }
    if (m_account_number_isSet) {
        obj.insert(QString("account_number"), ::OpenAPI::toJsonValue(m_account_number));
    }
    if (m_addendum_isSet) {
        obj.insert(QString("addendum"), ::OpenAPI::toJsonValue(m_addendum));
    }
    if (m_amount_isSet) {
        obj.insert(QString("amount"), ::OpenAPI::toJsonValue(m_amount));
    }
    if (m_approval.isSet()) {
        obj.insert(QString("approval"), ::OpenAPI::toJsonValue(m_approval));
    }
    if (m_cancellation.isSet()) {
        obj.insert(QString("cancellation"), ::OpenAPI::toJsonValue(m_cancellation));
    }
    if (m_company_descriptive_date_isSet) {
        obj.insert(QString("company_descriptive_date"), ::OpenAPI::toJsonValue(m_company_descriptive_date));
    }
    if (m_company_discretionary_data_isSet) {
        obj.insert(QString("company_discretionary_data"), ::OpenAPI::toJsonValue(m_company_discretionary_data));
    }
    if (m_company_entry_description_isSet) {
        obj.insert(QString("company_entry_description"), ::OpenAPI::toJsonValue(m_company_entry_description));
    }
    if (m_company_name_isSet) {
        obj.insert(QString("company_name"), ::OpenAPI::toJsonValue(m_company_name));
    }
    if (m_created_at_isSet) {
        obj.insert(QString("created_at"), ::OpenAPI::toJsonValue(m_created_at));
    }
    if (m_currency_isSet) {
        obj.insert(QString("currency"), ::OpenAPI::toJsonValue(m_currency));
    }
    if (m_effective_date_isSet) {
        obj.insert(QString("effective_date"), ::OpenAPI::toJsonValue(m_effective_date));
    }
    if (m_external_account_id_isSet) {
        obj.insert(QString("external_account_id"), ::OpenAPI::toJsonValue(m_external_account_id));
    }
    if (m_funding_isSet) {
        obj.insert(QString("funding"), ::OpenAPI::toJsonValue(m_funding));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_individual_id_isSet) {
        obj.insert(QString("individual_id"), ::OpenAPI::toJsonValue(m_individual_id));
    }
    if (m_individual_name_isSet) {
        obj.insert(QString("individual_name"), ::OpenAPI::toJsonValue(m_individual_name));
    }
    if (m_network_isSet) {
        obj.insert(QString("network"), ::OpenAPI::toJsonValue(m_network));
    }
    if (m_notifications_of_change.size() > 0) {
        obj.insert(QString("notifications_of_change"), ::OpenAPI::toJsonValue(m_notifications_of_change));
    }
    if (m_r_return.isSet()) {
        obj.insert(QString("return"), ::OpenAPI::toJsonValue(m_r_return));
    }
    if (m_routing_number_isSet) {
        obj.insert(QString("routing_number"), ::OpenAPI::toJsonValue(m_routing_number));
    }
    if (m_standard_entry_class_code_isSet) {
        obj.insert(QString("standard_entry_class_code"), ::OpenAPI::toJsonValue(m_standard_entry_class_code));
    }
    if (m_statement_descriptor_isSet) {
        obj.insert(QString("statement_descriptor"), ::OpenAPI::toJsonValue(m_statement_descriptor));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_submission.isSet()) {
        obj.insert(QString("submission"), ::OpenAPI::toJsonValue(m_submission));
    }
    if (m_transaction_id_isSet) {
        obj.insert(QString("transaction_id"), ::OpenAPI::toJsonValue(m_transaction_id));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

QString OAIAch_transfer::getAccountId() const {
    return m_account_id;
}
void OAIAch_transfer::setAccountId(const QString &account_id) {
    m_account_id = account_id;
    m_account_id_isSet = true;
}

bool OAIAch_transfer::is_account_id_Set() const{
    return m_account_id_isSet;
}

bool OAIAch_transfer::is_account_id_Valid() const{
    return m_account_id_isValid;
}

QString OAIAch_transfer::getAccountNumber() const {
    return m_account_number;
}
void OAIAch_transfer::setAccountNumber(const QString &account_number) {
    m_account_number = account_number;
    m_account_number_isSet = true;
}

bool OAIAch_transfer::is_account_number_Set() const{
    return m_account_number_isSet;
}

bool OAIAch_transfer::is_account_number_Valid() const{
    return m_account_number_isValid;
}

QString OAIAch_transfer::getAddendum() const {
    return m_addendum;
}
void OAIAch_transfer::setAddendum(const QString &addendum) {
    m_addendum = addendum;
    m_addendum_isSet = true;
}

bool OAIAch_transfer::is_addendum_Set() const{
    return m_addendum_isSet;
}

bool OAIAch_transfer::is_addendum_Valid() const{
    return m_addendum_isValid;
}

qint32 OAIAch_transfer::getAmount() const {
    return m_amount;
}
void OAIAch_transfer::setAmount(const qint32 &amount) {
    m_amount = amount;
    m_amount_isSet = true;
}

bool OAIAch_transfer::is_amount_Set() const{
    return m_amount_isSet;
}

bool OAIAch_transfer::is_amount_Valid() const{
    return m_amount_isValid;
}

OAITransfer_Approval OAIAch_transfer::getApproval() const {
    return m_approval;
}
void OAIAch_transfer::setApproval(const OAITransfer_Approval &approval) {
    m_approval = approval;
    m_approval_isSet = true;
}

bool OAIAch_transfer::is_approval_Set() const{
    return m_approval_isSet;
}

bool OAIAch_transfer::is_approval_Valid() const{
    return m_approval_isValid;
}

OAITransfer_Cancellation OAIAch_transfer::getCancellation() const {
    return m_cancellation;
}
void OAIAch_transfer::setCancellation(const OAITransfer_Cancellation &cancellation) {
    m_cancellation = cancellation;
    m_cancellation_isSet = true;
}

bool OAIAch_transfer::is_cancellation_Set() const{
    return m_cancellation_isSet;
}

bool OAIAch_transfer::is_cancellation_Valid() const{
    return m_cancellation_isValid;
}

QString OAIAch_transfer::getCompanyDescriptiveDate() const {
    return m_company_descriptive_date;
}
void OAIAch_transfer::setCompanyDescriptiveDate(const QString &company_descriptive_date) {
    m_company_descriptive_date = company_descriptive_date;
    m_company_descriptive_date_isSet = true;
}

bool OAIAch_transfer::is_company_descriptive_date_Set() const{
    return m_company_descriptive_date_isSet;
}

bool OAIAch_transfer::is_company_descriptive_date_Valid() const{
    return m_company_descriptive_date_isValid;
}

QString OAIAch_transfer::getCompanyDiscretionaryData() const {
    return m_company_discretionary_data;
}
void OAIAch_transfer::setCompanyDiscretionaryData(const QString &company_discretionary_data) {
    m_company_discretionary_data = company_discretionary_data;
    m_company_discretionary_data_isSet = true;
}

bool OAIAch_transfer::is_company_discretionary_data_Set() const{
    return m_company_discretionary_data_isSet;
}

bool OAIAch_transfer::is_company_discretionary_data_Valid() const{
    return m_company_discretionary_data_isValid;
}

QString OAIAch_transfer::getCompanyEntryDescription() const {
    return m_company_entry_description;
}
void OAIAch_transfer::setCompanyEntryDescription(const QString &company_entry_description) {
    m_company_entry_description = company_entry_description;
    m_company_entry_description_isSet = true;
}

bool OAIAch_transfer::is_company_entry_description_Set() const{
    return m_company_entry_description_isSet;
}

bool OAIAch_transfer::is_company_entry_description_Valid() const{
    return m_company_entry_description_isValid;
}

QString OAIAch_transfer::getCompanyName() const {
    return m_company_name;
}
void OAIAch_transfer::setCompanyName(const QString &company_name) {
    m_company_name = company_name;
    m_company_name_isSet = true;
}

bool OAIAch_transfer::is_company_name_Set() const{
    return m_company_name_isSet;
}

bool OAIAch_transfer::is_company_name_Valid() const{
    return m_company_name_isValid;
}

QDateTime OAIAch_transfer::getCreatedAt() const {
    return m_created_at;
}
void OAIAch_transfer::setCreatedAt(const QDateTime &created_at) {
    m_created_at = created_at;
    m_created_at_isSet = true;
}

bool OAIAch_transfer::is_created_at_Set() const{
    return m_created_at_isSet;
}

bool OAIAch_transfer::is_created_at_Valid() const{
    return m_created_at_isValid;
}

QString OAIAch_transfer::getCurrency() const {
    return m_currency;
}
void OAIAch_transfer::setCurrency(const QString &currency) {
    m_currency = currency;
    m_currency_isSet = true;
}

bool OAIAch_transfer::is_currency_Set() const{
    return m_currency_isSet;
}

bool OAIAch_transfer::is_currency_Valid() const{
    return m_currency_isValid;
}

QDate OAIAch_transfer::getEffectiveDate() const {
    return m_effective_date;
}
void OAIAch_transfer::setEffectiveDate(const QDate &effective_date) {
    m_effective_date = effective_date;
    m_effective_date_isSet = true;
}

bool OAIAch_transfer::is_effective_date_Set() const{
    return m_effective_date_isSet;
}

bool OAIAch_transfer::is_effective_date_Valid() const{
    return m_effective_date_isValid;
}

QString OAIAch_transfer::getExternalAccountId() const {
    return m_external_account_id;
}
void OAIAch_transfer::setExternalAccountId(const QString &external_account_id) {
    m_external_account_id = external_account_id;
    m_external_account_id_isSet = true;
}

bool OAIAch_transfer::is_external_account_id_Set() const{
    return m_external_account_id_isSet;
}

bool OAIAch_transfer::is_external_account_id_Valid() const{
    return m_external_account_id_isValid;
}

QString OAIAch_transfer::getFunding() const {
    return m_funding;
}
void OAIAch_transfer::setFunding(const QString &funding) {
    m_funding = funding;
    m_funding_isSet = true;
}

bool OAIAch_transfer::is_funding_Set() const{
    return m_funding_isSet;
}

bool OAIAch_transfer::is_funding_Valid() const{
    return m_funding_isValid;
}

QString OAIAch_transfer::getId() const {
    return m_id;
}
void OAIAch_transfer::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIAch_transfer::is_id_Set() const{
    return m_id_isSet;
}

bool OAIAch_transfer::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIAch_transfer::getIndividualId() const {
    return m_individual_id;
}
void OAIAch_transfer::setIndividualId(const QString &individual_id) {
    m_individual_id = individual_id;
    m_individual_id_isSet = true;
}

bool OAIAch_transfer::is_individual_id_Set() const{
    return m_individual_id_isSet;
}

bool OAIAch_transfer::is_individual_id_Valid() const{
    return m_individual_id_isValid;
}

QString OAIAch_transfer::getIndividualName() const {
    return m_individual_name;
}
void OAIAch_transfer::setIndividualName(const QString &individual_name) {
    m_individual_name = individual_name;
    m_individual_name_isSet = true;
}

bool OAIAch_transfer::is_individual_name_Set() const{
    return m_individual_name_isSet;
}

bool OAIAch_transfer::is_individual_name_Valid() const{
    return m_individual_name_isValid;
}

QString OAIAch_transfer::getNetwork() const {
    return m_network;
}
void OAIAch_transfer::setNetwork(const QString &network) {
    m_network = network;
    m_network_isSet = true;
}

bool OAIAch_transfer::is_network_Set() const{
    return m_network_isSet;
}

bool OAIAch_transfer::is_network_Valid() const{
    return m_network_isValid;
}

QList<OAIACH_Notification_of_Change> OAIAch_transfer::getNotificationsOfChange() const {
    return m_notifications_of_change;
}
void OAIAch_transfer::setNotificationsOfChange(const QList<OAIACH_Notification_of_Change> &notifications_of_change) {
    m_notifications_of_change = notifications_of_change;
    m_notifications_of_change_isSet = true;
}

bool OAIAch_transfer::is_notifications_of_change_Set() const{
    return m_notifications_of_change_isSet;
}

bool OAIAch_transfer::is_notifications_of_change_Valid() const{
    return m_notifications_of_change_isValid;
}

OAIACH_Transfer_Return OAIAch_transfer::getRReturn() const {
    return m_r_return;
}
void OAIAch_transfer::setRReturn(const OAIACH_Transfer_Return &r_return) {
    m_r_return = r_return;
    m_r_return_isSet = true;
}

bool OAIAch_transfer::is_r_return_Set() const{
    return m_r_return_isSet;
}

bool OAIAch_transfer::is_r_return_Valid() const{
    return m_r_return_isValid;
}

QString OAIAch_transfer::getRoutingNumber() const {
    return m_routing_number;
}
void OAIAch_transfer::setRoutingNumber(const QString &routing_number) {
    m_routing_number = routing_number;
    m_routing_number_isSet = true;
}

bool OAIAch_transfer::is_routing_number_Set() const{
    return m_routing_number_isSet;
}

bool OAIAch_transfer::is_routing_number_Valid() const{
    return m_routing_number_isValid;
}

QString OAIAch_transfer::getStandardEntryClassCode() const {
    return m_standard_entry_class_code;
}
void OAIAch_transfer::setStandardEntryClassCode(const QString &standard_entry_class_code) {
    m_standard_entry_class_code = standard_entry_class_code;
    m_standard_entry_class_code_isSet = true;
}

bool OAIAch_transfer::is_standard_entry_class_code_Set() const{
    return m_standard_entry_class_code_isSet;
}

bool OAIAch_transfer::is_standard_entry_class_code_Valid() const{
    return m_standard_entry_class_code_isValid;
}

QString OAIAch_transfer::getStatementDescriptor() const {
    return m_statement_descriptor;
}
void OAIAch_transfer::setStatementDescriptor(const QString &statement_descriptor) {
    m_statement_descriptor = statement_descriptor;
    m_statement_descriptor_isSet = true;
}

bool OAIAch_transfer::is_statement_descriptor_Set() const{
    return m_statement_descriptor_isSet;
}

bool OAIAch_transfer::is_statement_descriptor_Valid() const{
    return m_statement_descriptor_isValid;
}

QString OAIAch_transfer::getStatus() const {
    return m_status;
}
void OAIAch_transfer::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIAch_transfer::is_status_Set() const{
    return m_status_isSet;
}

bool OAIAch_transfer::is_status_Valid() const{
    return m_status_isValid;
}

OAIACH_Transfer_Submission OAIAch_transfer::getSubmission() const {
    return m_submission;
}
void OAIAch_transfer::setSubmission(const OAIACH_Transfer_Submission &submission) {
    m_submission = submission;
    m_submission_isSet = true;
}

bool OAIAch_transfer::is_submission_Set() const{
    return m_submission_isSet;
}

bool OAIAch_transfer::is_submission_Valid() const{
    return m_submission_isValid;
}

QString OAIAch_transfer::getTransactionId() const {
    return m_transaction_id;
}
void OAIAch_transfer::setTransactionId(const QString &transaction_id) {
    m_transaction_id = transaction_id;
    m_transaction_id_isSet = true;
}

bool OAIAch_transfer::is_transaction_id_Set() const{
    return m_transaction_id_isSet;
}

bool OAIAch_transfer::is_transaction_id_Valid() const{
    return m_transaction_id_isValid;
}

QString OAIAch_transfer::getType() const {
    return m_type;
}
void OAIAch_transfer::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIAch_transfer::is_type_Set() const{
    return m_type_isSet;
}

bool OAIAch_transfer::is_type_Valid() const{
    return m_type_isValid;
}

bool OAIAch_transfer::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_account_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_addendum_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_approval.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_cancellation.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_company_descriptive_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_company_discretionary_data_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_company_entry_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_company_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_currency_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_effective_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_external_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_funding_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_individual_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_individual_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_network_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_notifications_of_change.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_r_return.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_routing_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_standard_entry_class_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_statement_descriptor_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_submission.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_transaction_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAch_transfer::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_account_id_isValid && m_account_number_isValid && m_addendum_isValid && m_amount_isValid && m_approval_isValid && m_cancellation_isValid && m_company_descriptive_date_isValid && m_company_discretionary_data_isValid && m_company_entry_description_isValid && m_company_name_isValid && m_created_at_isValid && m_currency_isValid && m_effective_date_isValid && m_external_account_id_isValid && m_funding_isValid && m_id_isValid && m_individual_id_isValid && m_individual_name_isValid && m_network_isValid && m_notifications_of_change_isValid && m_r_return_isValid && m_routing_number_isValid && m_standard_entry_class_code_isValid && m_statement_descriptor_isValid && m_status_isValid && m_submission_isValid && m_transaction_id_isValid && m_type_isValid && true;
}

} // namespace OpenAPI
