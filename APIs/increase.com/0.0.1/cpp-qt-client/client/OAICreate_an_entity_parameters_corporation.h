/**
 * Increase API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreate_an_entity_parameters_corporation.h
 *
 * Details of the corporation entity to create. Required if &#x60;structure&#x60; is equal to &#x60;corporation&#x60;.
 */

#ifndef OAICreate_an_entity_parameters_corporation_H
#define OAICreate_an_entity_parameters_corporation_H

#include <QJsonObject>

#include "OAICreate_an_entity_parameters_corporation_address.h"
#include "OAICreate_an_entity_parameters_corporation_beneficial_owners_inner.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreate_an_entity_parameters_corporation_address;
class OAICreate_an_entity_parameters_corporation_beneficial_owners_inner;

class OAICreate_an_entity_parameters_corporation : public OAIObject {
public:
    OAICreate_an_entity_parameters_corporation();
    OAICreate_an_entity_parameters_corporation(QString json);
    ~OAICreate_an_entity_parameters_corporation() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAICreate_an_entity_parameters_corporation_address getAddress() const;
    void setAddress(const OAICreate_an_entity_parameters_corporation_address &address);
    bool is_address_Set() const;
    bool is_address_Valid() const;

    QList<OAICreate_an_entity_parameters_corporation_beneficial_owners_inner> getBeneficialOwners() const;
    void setBeneficialOwners(const QList<OAICreate_an_entity_parameters_corporation_beneficial_owners_inner> &beneficial_owners);
    bool is_beneficial_owners_Set() const;
    bool is_beneficial_owners_Valid() const;

    QString getIncorporationState() const;
    void setIncorporationState(const QString &incorporation_state);
    bool is_incorporation_state_Set() const;
    bool is_incorporation_state_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getTaxIdentifier() const;
    void setTaxIdentifier(const QString &tax_identifier);
    bool is_tax_identifier_Set() const;
    bool is_tax_identifier_Valid() const;

    QString getWebsite() const;
    void setWebsite(const QString &website);
    bool is_website_Set() const;
    bool is_website_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAICreate_an_entity_parameters_corporation_address m_address;
    bool m_address_isSet;
    bool m_address_isValid;

    QList<OAICreate_an_entity_parameters_corporation_beneficial_owners_inner> m_beneficial_owners;
    bool m_beneficial_owners_isSet;
    bool m_beneficial_owners_isValid;

    QString m_incorporation_state;
    bool m_incorporation_state_isSet;
    bool m_incorporation_state_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_tax_identifier;
    bool m_tax_identifier_isSet;
    bool m_tax_identifier_isValid;

    QString m_website;
    bool m_website_isSet;
    bool m_website_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreate_an_entity_parameters_corporation)

#endif // OAICreate_an_entity_parameters_corporation_H
