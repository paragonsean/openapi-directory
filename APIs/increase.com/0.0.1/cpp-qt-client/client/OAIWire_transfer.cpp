/**
 * Increase API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIWire_transfer.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIWire_transfer::OAIWire_transfer(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIWire_transfer::OAIWire_transfer() {
    this->initializeModel();
}

OAIWire_transfer::~OAIWire_transfer() {}

void OAIWire_transfer::initializeModel() {

    m_account_id_isSet = false;
    m_account_id_isValid = false;

    m_account_number_isSet = false;
    m_account_number_isValid = false;

    m_amount_isSet = false;
    m_amount_isValid = false;

    m_approval_isSet = false;
    m_approval_isValid = false;

    m_beneficiary_address_line1_isSet = false;
    m_beneficiary_address_line1_isValid = false;

    m_beneficiary_address_line2_isSet = false;
    m_beneficiary_address_line2_isValid = false;

    m_beneficiary_address_line3_isSet = false;
    m_beneficiary_address_line3_isValid = false;

    m_beneficiary_name_isSet = false;
    m_beneficiary_name_isValid = false;

    m_cancellation_isSet = false;
    m_cancellation_isValid = false;

    m_created_at_isSet = false;
    m_created_at_isValid = false;

    m_currency_isSet = false;
    m_currency_isValid = false;

    m_external_account_id_isSet = false;
    m_external_account_id_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_message_to_recipient_isSet = false;
    m_message_to_recipient_isValid = false;

    m_network_isSet = false;
    m_network_isValid = false;

    m_reversal_isSet = false;
    m_reversal_isValid = false;

    m_routing_number_isSet = false;
    m_routing_number_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_submission_isSet = false;
    m_submission_isValid = false;

    m_transaction_id_isSet = false;
    m_transaction_id_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAIWire_transfer::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIWire_transfer::fromJsonObject(QJsonObject json) {

    m_account_id_isValid = ::OpenAPI::fromJsonValue(m_account_id, json[QString("account_id")]);
    m_account_id_isSet = !json[QString("account_id")].isNull() && m_account_id_isValid;

    m_account_number_isValid = ::OpenAPI::fromJsonValue(m_account_number, json[QString("account_number")]);
    m_account_number_isSet = !json[QString("account_number")].isNull() && m_account_number_isValid;

    m_amount_isValid = ::OpenAPI::fromJsonValue(m_amount, json[QString("amount")]);
    m_amount_isSet = !json[QString("amount")].isNull() && m_amount_isValid;

    m_approval_isValid = ::OpenAPI::fromJsonValue(m_approval, json[QString("approval")]);
    m_approval_isSet = !json[QString("approval")].isNull() && m_approval_isValid;

    m_beneficiary_address_line1_isValid = ::OpenAPI::fromJsonValue(m_beneficiary_address_line1, json[QString("beneficiary_address_line1")]);
    m_beneficiary_address_line1_isSet = !json[QString("beneficiary_address_line1")].isNull() && m_beneficiary_address_line1_isValid;

    m_beneficiary_address_line2_isValid = ::OpenAPI::fromJsonValue(m_beneficiary_address_line2, json[QString("beneficiary_address_line2")]);
    m_beneficiary_address_line2_isSet = !json[QString("beneficiary_address_line2")].isNull() && m_beneficiary_address_line2_isValid;

    m_beneficiary_address_line3_isValid = ::OpenAPI::fromJsonValue(m_beneficiary_address_line3, json[QString("beneficiary_address_line3")]);
    m_beneficiary_address_line3_isSet = !json[QString("beneficiary_address_line3")].isNull() && m_beneficiary_address_line3_isValid;

    m_beneficiary_name_isValid = ::OpenAPI::fromJsonValue(m_beneficiary_name, json[QString("beneficiary_name")]);
    m_beneficiary_name_isSet = !json[QString("beneficiary_name")].isNull() && m_beneficiary_name_isValid;

    m_cancellation_isValid = ::OpenAPI::fromJsonValue(m_cancellation, json[QString("cancellation")]);
    m_cancellation_isSet = !json[QString("cancellation")].isNull() && m_cancellation_isValid;

    m_created_at_isValid = ::OpenAPI::fromJsonValue(m_created_at, json[QString("created_at")]);
    m_created_at_isSet = !json[QString("created_at")].isNull() && m_created_at_isValid;

    m_currency_isValid = ::OpenAPI::fromJsonValue(m_currency, json[QString("currency")]);
    m_currency_isSet = !json[QString("currency")].isNull() && m_currency_isValid;

    m_external_account_id_isValid = ::OpenAPI::fromJsonValue(m_external_account_id, json[QString("external_account_id")]);
    m_external_account_id_isSet = !json[QString("external_account_id")].isNull() && m_external_account_id_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_message_to_recipient_isValid = ::OpenAPI::fromJsonValue(m_message_to_recipient, json[QString("message_to_recipient")]);
    m_message_to_recipient_isSet = !json[QString("message_to_recipient")].isNull() && m_message_to_recipient_isValid;

    m_network_isValid = ::OpenAPI::fromJsonValue(m_network, json[QString("network")]);
    m_network_isSet = !json[QString("network")].isNull() && m_network_isValid;

    m_reversal_isValid = ::OpenAPI::fromJsonValue(m_reversal, json[QString("reversal")]);
    m_reversal_isSet = !json[QString("reversal")].isNull() && m_reversal_isValid;

    m_routing_number_isValid = ::OpenAPI::fromJsonValue(m_routing_number, json[QString("routing_number")]);
    m_routing_number_isSet = !json[QString("routing_number")].isNull() && m_routing_number_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_submission_isValid = ::OpenAPI::fromJsonValue(m_submission, json[QString("submission")]);
    m_submission_isSet = !json[QString("submission")].isNull() && m_submission_isValid;

    m_transaction_id_isValid = ::OpenAPI::fromJsonValue(m_transaction_id, json[QString("transaction_id")]);
    m_transaction_id_isSet = !json[QString("transaction_id")].isNull() && m_transaction_id_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;
}

QString OAIWire_transfer::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIWire_transfer::asJsonObject() const {
    QJsonObject obj;
    if (m_account_id_isSet) {
        obj.insert(QString("account_id"), ::OpenAPI::toJsonValue(m_account_id));
    }
    if (m_account_number_isSet) {
        obj.insert(QString("account_number"), ::OpenAPI::toJsonValue(m_account_number));
    }
    if (m_amount_isSet) {
        obj.insert(QString("amount"), ::OpenAPI::toJsonValue(m_amount));
    }
    if (m_approval.isSet()) {
        obj.insert(QString("approval"), ::OpenAPI::toJsonValue(m_approval));
    }
    if (m_beneficiary_address_line1_isSet) {
        obj.insert(QString("beneficiary_address_line1"), ::OpenAPI::toJsonValue(m_beneficiary_address_line1));
    }
    if (m_beneficiary_address_line2_isSet) {
        obj.insert(QString("beneficiary_address_line2"), ::OpenAPI::toJsonValue(m_beneficiary_address_line2));
    }
    if (m_beneficiary_address_line3_isSet) {
        obj.insert(QString("beneficiary_address_line3"), ::OpenAPI::toJsonValue(m_beneficiary_address_line3));
    }
    if (m_beneficiary_name_isSet) {
        obj.insert(QString("beneficiary_name"), ::OpenAPI::toJsonValue(m_beneficiary_name));
    }
    if (m_cancellation.isSet()) {
        obj.insert(QString("cancellation"), ::OpenAPI::toJsonValue(m_cancellation));
    }
    if (m_created_at_isSet) {
        obj.insert(QString("created_at"), ::OpenAPI::toJsonValue(m_created_at));
    }
    if (m_currency_isSet) {
        obj.insert(QString("currency"), ::OpenAPI::toJsonValue(m_currency));
    }
    if (m_external_account_id_isSet) {
        obj.insert(QString("external_account_id"), ::OpenAPI::toJsonValue(m_external_account_id));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_message_to_recipient_isSet) {
        obj.insert(QString("message_to_recipient"), ::OpenAPI::toJsonValue(m_message_to_recipient));
    }
    if (m_network_isSet) {
        obj.insert(QString("network"), ::OpenAPI::toJsonValue(m_network));
    }
    if (m_reversal.isSet()) {
        obj.insert(QString("reversal"), ::OpenAPI::toJsonValue(m_reversal));
    }
    if (m_routing_number_isSet) {
        obj.insert(QString("routing_number"), ::OpenAPI::toJsonValue(m_routing_number));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_submission.isSet()) {
        obj.insert(QString("submission"), ::OpenAPI::toJsonValue(m_submission));
    }
    if (m_transaction_id_isSet) {
        obj.insert(QString("transaction_id"), ::OpenAPI::toJsonValue(m_transaction_id));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

QString OAIWire_transfer::getAccountId() const {
    return m_account_id;
}
void OAIWire_transfer::setAccountId(const QString &account_id) {
    m_account_id = account_id;
    m_account_id_isSet = true;
}

bool OAIWire_transfer::is_account_id_Set() const{
    return m_account_id_isSet;
}

bool OAIWire_transfer::is_account_id_Valid() const{
    return m_account_id_isValid;
}

QString OAIWire_transfer::getAccountNumber() const {
    return m_account_number;
}
void OAIWire_transfer::setAccountNumber(const QString &account_number) {
    m_account_number = account_number;
    m_account_number_isSet = true;
}

bool OAIWire_transfer::is_account_number_Set() const{
    return m_account_number_isSet;
}

bool OAIWire_transfer::is_account_number_Valid() const{
    return m_account_number_isValid;
}

qint32 OAIWire_transfer::getAmount() const {
    return m_amount;
}
void OAIWire_transfer::setAmount(const qint32 &amount) {
    m_amount = amount;
    m_amount_isSet = true;
}

bool OAIWire_transfer::is_amount_Set() const{
    return m_amount_isSet;
}

bool OAIWire_transfer::is_amount_Valid() const{
    return m_amount_isValid;
}

OAITransfer_Approval OAIWire_transfer::getApproval() const {
    return m_approval;
}
void OAIWire_transfer::setApproval(const OAITransfer_Approval &approval) {
    m_approval = approval;
    m_approval_isSet = true;
}

bool OAIWire_transfer::is_approval_Set() const{
    return m_approval_isSet;
}

bool OAIWire_transfer::is_approval_Valid() const{
    return m_approval_isValid;
}

QString OAIWire_transfer::getBeneficiaryAddressLine1() const {
    return m_beneficiary_address_line1;
}
void OAIWire_transfer::setBeneficiaryAddressLine1(const QString &beneficiary_address_line1) {
    m_beneficiary_address_line1 = beneficiary_address_line1;
    m_beneficiary_address_line1_isSet = true;
}

bool OAIWire_transfer::is_beneficiary_address_line1_Set() const{
    return m_beneficiary_address_line1_isSet;
}

bool OAIWire_transfer::is_beneficiary_address_line1_Valid() const{
    return m_beneficiary_address_line1_isValid;
}

QString OAIWire_transfer::getBeneficiaryAddressLine2() const {
    return m_beneficiary_address_line2;
}
void OAIWire_transfer::setBeneficiaryAddressLine2(const QString &beneficiary_address_line2) {
    m_beneficiary_address_line2 = beneficiary_address_line2;
    m_beneficiary_address_line2_isSet = true;
}

bool OAIWire_transfer::is_beneficiary_address_line2_Set() const{
    return m_beneficiary_address_line2_isSet;
}

bool OAIWire_transfer::is_beneficiary_address_line2_Valid() const{
    return m_beneficiary_address_line2_isValid;
}

QString OAIWire_transfer::getBeneficiaryAddressLine3() const {
    return m_beneficiary_address_line3;
}
void OAIWire_transfer::setBeneficiaryAddressLine3(const QString &beneficiary_address_line3) {
    m_beneficiary_address_line3 = beneficiary_address_line3;
    m_beneficiary_address_line3_isSet = true;
}

bool OAIWire_transfer::is_beneficiary_address_line3_Set() const{
    return m_beneficiary_address_line3_isSet;
}

bool OAIWire_transfer::is_beneficiary_address_line3_Valid() const{
    return m_beneficiary_address_line3_isValid;
}

QString OAIWire_transfer::getBeneficiaryName() const {
    return m_beneficiary_name;
}
void OAIWire_transfer::setBeneficiaryName(const QString &beneficiary_name) {
    m_beneficiary_name = beneficiary_name;
    m_beneficiary_name_isSet = true;
}

bool OAIWire_transfer::is_beneficiary_name_Set() const{
    return m_beneficiary_name_isSet;
}

bool OAIWire_transfer::is_beneficiary_name_Valid() const{
    return m_beneficiary_name_isValid;
}

OAITransfer_Cancellation OAIWire_transfer::getCancellation() const {
    return m_cancellation;
}
void OAIWire_transfer::setCancellation(const OAITransfer_Cancellation &cancellation) {
    m_cancellation = cancellation;
    m_cancellation_isSet = true;
}

bool OAIWire_transfer::is_cancellation_Set() const{
    return m_cancellation_isSet;
}

bool OAIWire_transfer::is_cancellation_Valid() const{
    return m_cancellation_isValid;
}

QDateTime OAIWire_transfer::getCreatedAt() const {
    return m_created_at;
}
void OAIWire_transfer::setCreatedAt(const QDateTime &created_at) {
    m_created_at = created_at;
    m_created_at_isSet = true;
}

bool OAIWire_transfer::is_created_at_Set() const{
    return m_created_at_isSet;
}

bool OAIWire_transfer::is_created_at_Valid() const{
    return m_created_at_isValid;
}

QString OAIWire_transfer::getCurrency() const {
    return m_currency;
}
void OAIWire_transfer::setCurrency(const QString &currency) {
    m_currency = currency;
    m_currency_isSet = true;
}

bool OAIWire_transfer::is_currency_Set() const{
    return m_currency_isSet;
}

bool OAIWire_transfer::is_currency_Valid() const{
    return m_currency_isValid;
}

QString OAIWire_transfer::getExternalAccountId() const {
    return m_external_account_id;
}
void OAIWire_transfer::setExternalAccountId(const QString &external_account_id) {
    m_external_account_id = external_account_id;
    m_external_account_id_isSet = true;
}

bool OAIWire_transfer::is_external_account_id_Set() const{
    return m_external_account_id_isSet;
}

bool OAIWire_transfer::is_external_account_id_Valid() const{
    return m_external_account_id_isValid;
}

QString OAIWire_transfer::getId() const {
    return m_id;
}
void OAIWire_transfer::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIWire_transfer::is_id_Set() const{
    return m_id_isSet;
}

bool OAIWire_transfer::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIWire_transfer::getMessageToRecipient() const {
    return m_message_to_recipient;
}
void OAIWire_transfer::setMessageToRecipient(const QString &message_to_recipient) {
    m_message_to_recipient = message_to_recipient;
    m_message_to_recipient_isSet = true;
}

bool OAIWire_transfer::is_message_to_recipient_Set() const{
    return m_message_to_recipient_isSet;
}

bool OAIWire_transfer::is_message_to_recipient_Valid() const{
    return m_message_to_recipient_isValid;
}

QString OAIWire_transfer::getNetwork() const {
    return m_network;
}
void OAIWire_transfer::setNetwork(const QString &network) {
    m_network = network;
    m_network_isSet = true;
}

bool OAIWire_transfer::is_network_Set() const{
    return m_network_isSet;
}

bool OAIWire_transfer::is_network_Valid() const{
    return m_network_isValid;
}

OAIInbound_Wire_Reversal_1 OAIWire_transfer::getReversal() const {
    return m_reversal;
}
void OAIWire_transfer::setReversal(const OAIInbound_Wire_Reversal_1 &reversal) {
    m_reversal = reversal;
    m_reversal_isSet = true;
}

bool OAIWire_transfer::is_reversal_Set() const{
    return m_reversal_isSet;
}

bool OAIWire_transfer::is_reversal_Valid() const{
    return m_reversal_isValid;
}

QString OAIWire_transfer::getRoutingNumber() const {
    return m_routing_number;
}
void OAIWire_transfer::setRoutingNumber(const QString &routing_number) {
    m_routing_number = routing_number;
    m_routing_number_isSet = true;
}

bool OAIWire_transfer::is_routing_number_Set() const{
    return m_routing_number_isSet;
}

bool OAIWire_transfer::is_routing_number_Valid() const{
    return m_routing_number_isValid;
}

QString OAIWire_transfer::getStatus() const {
    return m_status;
}
void OAIWire_transfer::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIWire_transfer::is_status_Set() const{
    return m_status_isSet;
}

bool OAIWire_transfer::is_status_Valid() const{
    return m_status_isValid;
}

OAIWire_Transfer_Submission OAIWire_transfer::getSubmission() const {
    return m_submission;
}
void OAIWire_transfer::setSubmission(const OAIWire_Transfer_Submission &submission) {
    m_submission = submission;
    m_submission_isSet = true;
}

bool OAIWire_transfer::is_submission_Set() const{
    return m_submission_isSet;
}

bool OAIWire_transfer::is_submission_Valid() const{
    return m_submission_isValid;
}

QString OAIWire_transfer::getTransactionId() const {
    return m_transaction_id;
}
void OAIWire_transfer::setTransactionId(const QString &transaction_id) {
    m_transaction_id = transaction_id;
    m_transaction_id_isSet = true;
}

bool OAIWire_transfer::is_transaction_id_Set() const{
    return m_transaction_id_isSet;
}

bool OAIWire_transfer::is_transaction_id_Valid() const{
    return m_transaction_id_isValid;
}

QString OAIWire_transfer::getType() const {
    return m_type;
}
void OAIWire_transfer::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIWire_transfer::is_type_Set() const{
    return m_type_isSet;
}

bool OAIWire_transfer::is_type_Valid() const{
    return m_type_isValid;
}

bool OAIWire_transfer::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_account_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_approval.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_beneficiary_address_line1_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_beneficiary_address_line2_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_beneficiary_address_line3_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_beneficiary_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_cancellation.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_currency_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_external_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_message_to_recipient_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_network_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_reversal.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_routing_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_submission.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_transaction_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIWire_transfer::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_account_id_isValid && m_account_number_isValid && m_amount_isValid && m_approval_isValid && m_beneficiary_address_line1_isValid && m_beneficiary_address_line2_isValid && m_beneficiary_address_line3_isValid && m_beneficiary_name_isValid && m_cancellation_isValid && m_created_at_isValid && m_currency_isValid && m_external_account_id_isValid && m_id_isValid && m_message_to_recipient_isValid && m_network_isValid && m_reversal_isValid && m_routing_number_isValid && m_status_isValid && m_submission_isValid && m_transaction_id_isValid && m_type_isValid && true;
}

} // namespace OpenAPI
