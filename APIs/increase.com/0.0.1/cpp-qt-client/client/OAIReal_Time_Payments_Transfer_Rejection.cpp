/**
 * Increase API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIReal_Time_Payments_Transfer_Rejection.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIReal_Time_Payments_Transfer_Rejection::OAIReal_Time_Payments_Transfer_Rejection(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIReal_Time_Payments_Transfer_Rejection::OAIReal_Time_Payments_Transfer_Rejection() {
    this->initializeModel();
}

OAIReal_Time_Payments_Transfer_Rejection::~OAIReal_Time_Payments_Transfer_Rejection() {}

void OAIReal_Time_Payments_Transfer_Rejection::initializeModel() {

    m_reject_reason_additional_information_isSet = false;
    m_reject_reason_additional_information_isValid = false;

    m_reject_reason_code_isSet = false;
    m_reject_reason_code_isValid = false;

    m_rejected_at_isSet = false;
    m_rejected_at_isValid = false;
}

void OAIReal_Time_Payments_Transfer_Rejection::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIReal_Time_Payments_Transfer_Rejection::fromJsonObject(QJsonObject json) {

    m_reject_reason_additional_information_isValid = ::OpenAPI::fromJsonValue(m_reject_reason_additional_information, json[QString("reject_reason_additional_information")]);
    m_reject_reason_additional_information_isSet = !json[QString("reject_reason_additional_information")].isNull() && m_reject_reason_additional_information_isValid;

    m_reject_reason_code_isValid = ::OpenAPI::fromJsonValue(m_reject_reason_code, json[QString("reject_reason_code")]);
    m_reject_reason_code_isSet = !json[QString("reject_reason_code")].isNull() && m_reject_reason_code_isValid;

    m_rejected_at_isValid = ::OpenAPI::fromJsonValue(m_rejected_at, json[QString("rejected_at")]);
    m_rejected_at_isSet = !json[QString("rejected_at")].isNull() && m_rejected_at_isValid;
}

QString OAIReal_Time_Payments_Transfer_Rejection::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIReal_Time_Payments_Transfer_Rejection::asJsonObject() const {
    QJsonObject obj;
    if (m_reject_reason_additional_information_isSet) {
        obj.insert(QString("reject_reason_additional_information"), ::OpenAPI::toJsonValue(m_reject_reason_additional_information));
    }
    if (m_reject_reason_code_isSet) {
        obj.insert(QString("reject_reason_code"), ::OpenAPI::toJsonValue(m_reject_reason_code));
    }
    if (m_rejected_at_isSet) {
        obj.insert(QString("rejected_at"), ::OpenAPI::toJsonValue(m_rejected_at));
    }
    return obj;
}

QString OAIReal_Time_Payments_Transfer_Rejection::getRejectReasonAdditionalInformation() const {
    return m_reject_reason_additional_information;
}
void OAIReal_Time_Payments_Transfer_Rejection::setRejectReasonAdditionalInformation(const QString &reject_reason_additional_information) {
    m_reject_reason_additional_information = reject_reason_additional_information;
    m_reject_reason_additional_information_isSet = true;
}

bool OAIReal_Time_Payments_Transfer_Rejection::is_reject_reason_additional_information_Set() const{
    return m_reject_reason_additional_information_isSet;
}

bool OAIReal_Time_Payments_Transfer_Rejection::is_reject_reason_additional_information_Valid() const{
    return m_reject_reason_additional_information_isValid;
}

QString OAIReal_Time_Payments_Transfer_Rejection::getRejectReasonCode() const {
    return m_reject_reason_code;
}
void OAIReal_Time_Payments_Transfer_Rejection::setRejectReasonCode(const QString &reject_reason_code) {
    m_reject_reason_code = reject_reason_code;
    m_reject_reason_code_isSet = true;
}

bool OAIReal_Time_Payments_Transfer_Rejection::is_reject_reason_code_Set() const{
    return m_reject_reason_code_isSet;
}

bool OAIReal_Time_Payments_Transfer_Rejection::is_reject_reason_code_Valid() const{
    return m_reject_reason_code_isValid;
}

QDateTime OAIReal_Time_Payments_Transfer_Rejection::getRejectedAt() const {
    return m_rejected_at;
}
void OAIReal_Time_Payments_Transfer_Rejection::setRejectedAt(const QDateTime &rejected_at) {
    m_rejected_at = rejected_at;
    m_rejected_at_isSet = true;
}

bool OAIReal_Time_Payments_Transfer_Rejection::is_rejected_at_Set() const{
    return m_rejected_at_isSet;
}

bool OAIReal_Time_Payments_Transfer_Rejection::is_rejected_at_Valid() const{
    return m_rejected_at_isValid;
}

bool OAIReal_Time_Payments_Transfer_Rejection::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_reject_reason_additional_information_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_reject_reason_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_rejected_at_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIReal_Time_Payments_Transfer_Rejection::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_reject_reason_additional_information_isValid && m_reject_reason_code_isValid && m_rejected_at_isValid && true;
}

} // namespace OpenAPI
