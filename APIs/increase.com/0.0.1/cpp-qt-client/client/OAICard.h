/**
 * Increase API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICard.h
 *
 * Cards are commercial credit cards. They&#39;ll immediately work for online purchases after you create them. All cards maintain a credit limit of 100% of the Accountâ€™s available balance at the time of transaction. Funds are deducted from the Account upon transaction settlement.
 */

#ifndef OAICard_H
#define OAICard_H

#include <QJsonObject>

#include "OAIBilling_Address.h"
#include "OAIDigital_Wallet.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIBilling_Address;
class OAIDigital_Wallet;

class OAICard : public OAIObject {
public:
    OAICard();
    OAICard(QString json);
    ~OAICard() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAccountId() const;
    void setAccountId(const QString &account_id);
    bool is_account_id_Set() const;
    bool is_account_id_Valid() const;

    OAIBilling_Address getBillingAddress() const;
    void setBillingAddress(const OAIBilling_Address &billing_address);
    bool is_billing_address_Set() const;
    bool is_billing_address_Valid() const;

    QDateTime getCreatedAt() const;
    void setCreatedAt(const QDateTime &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    OAIDigital_Wallet getDigitalWallet() const;
    void setDigitalWallet(const OAIDigital_Wallet &digital_wallet);
    bool is_digital_wallet_Set() const;
    bool is_digital_wallet_Valid() const;

    qint32 getExpirationMonth() const;
    void setExpirationMonth(const qint32 &expiration_month);
    bool is_expiration_month_Set() const;
    bool is_expiration_month_Valid() const;

    qint32 getExpirationYear() const;
    void setExpirationYear(const qint32 &expiration_year);
    bool is_expiration_year_Set() const;
    bool is_expiration_year_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getLast4() const;
    void setLast4(const QString &last4);
    bool is_last4_Set() const;
    bool is_last4_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_account_id;
    bool m_account_id_isSet;
    bool m_account_id_isValid;

    OAIBilling_Address m_billing_address;
    bool m_billing_address_isSet;
    bool m_billing_address_isValid;

    QDateTime m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    OAIDigital_Wallet m_digital_wallet;
    bool m_digital_wallet_isSet;
    bool m_digital_wallet_isValid;

    qint32 m_expiration_month;
    bool m_expiration_month_isSet;
    bool m_expiration_month_isValid;

    qint32 m_expiration_year;
    bool m_expiration_year_isSet;
    bool m_expiration_year_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_last4;
    bool m_last4_isSet;
    bool m_last4_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICard)

#endif // OAICard_H
