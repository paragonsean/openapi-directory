/**
 * Increase API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITransfer_Approval.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITransfer_Approval::OAITransfer_Approval(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITransfer_Approval::OAITransfer_Approval() {
    this->initializeModel();
}

OAITransfer_Approval::~OAITransfer_Approval() {}

void OAITransfer_Approval::initializeModel() {

    m_approved_at_isSet = false;
    m_approved_at_isValid = false;

    m_approved_by_isSet = false;
    m_approved_by_isValid = false;
}

void OAITransfer_Approval::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITransfer_Approval::fromJsonObject(QJsonObject json) {

    m_approved_at_isValid = ::OpenAPI::fromJsonValue(m_approved_at, json[QString("approved_at")]);
    m_approved_at_isSet = !json[QString("approved_at")].isNull() && m_approved_at_isValid;

    m_approved_by_isValid = ::OpenAPI::fromJsonValue(m_approved_by, json[QString("approved_by")]);
    m_approved_by_isSet = !json[QString("approved_by")].isNull() && m_approved_by_isValid;
}

QString OAITransfer_Approval::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITransfer_Approval::asJsonObject() const {
    QJsonObject obj;
    if (m_approved_at_isSet) {
        obj.insert(QString("approved_at"), ::OpenAPI::toJsonValue(m_approved_at));
    }
    if (m_approved_by_isSet) {
        obj.insert(QString("approved_by"), ::OpenAPI::toJsonValue(m_approved_by));
    }
    return obj;
}

QDateTime OAITransfer_Approval::getApprovedAt() const {
    return m_approved_at;
}
void OAITransfer_Approval::setApprovedAt(const QDateTime &approved_at) {
    m_approved_at = approved_at;
    m_approved_at_isSet = true;
}

bool OAITransfer_Approval::is_approved_at_Set() const{
    return m_approved_at_isSet;
}

bool OAITransfer_Approval::is_approved_at_Valid() const{
    return m_approved_at_isValid;
}

QString OAITransfer_Approval::getApprovedBy() const {
    return m_approved_by;
}
void OAITransfer_Approval::setApprovedBy(const QString &approved_by) {
    m_approved_by = approved_by;
    m_approved_by_isSet = true;
}

bool OAITransfer_Approval::is_approved_by_Set() const{
    return m_approved_by_isSet;
}

bool OAITransfer_Approval::is_approved_by_Valid() const{
    return m_approved_by_isValid;
}

bool OAITransfer_Approval::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_approved_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_approved_by_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITransfer_Approval::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_approved_at_isValid && m_approved_by_isValid && true;
}

} // namespace OpenAPI
