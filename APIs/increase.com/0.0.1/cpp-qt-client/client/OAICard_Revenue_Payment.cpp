/**
 * Increase API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICard_Revenue_Payment.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICard_Revenue_Payment::OAICard_Revenue_Payment(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICard_Revenue_Payment::OAICard_Revenue_Payment() {
    this->initializeModel();
}

OAICard_Revenue_Payment::~OAICard_Revenue_Payment() {}

void OAICard_Revenue_Payment::initializeModel() {

    m_amount_isSet = false;
    m_amount_isValid = false;

    m_currency_isSet = false;
    m_currency_isValid = false;

    m_period_end_isSet = false;
    m_period_end_isValid = false;

    m_period_start_isSet = false;
    m_period_start_isValid = false;

    m_transacted_on_account_id_isSet = false;
    m_transacted_on_account_id_isValid = false;
}

void OAICard_Revenue_Payment::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICard_Revenue_Payment::fromJsonObject(QJsonObject json) {

    m_amount_isValid = ::OpenAPI::fromJsonValue(m_amount, json[QString("amount")]);
    m_amount_isSet = !json[QString("amount")].isNull() && m_amount_isValid;

    m_currency_isValid = ::OpenAPI::fromJsonValue(m_currency, json[QString("currency")]);
    m_currency_isSet = !json[QString("currency")].isNull() && m_currency_isValid;

    m_period_end_isValid = ::OpenAPI::fromJsonValue(m_period_end, json[QString("period_end")]);
    m_period_end_isSet = !json[QString("period_end")].isNull() && m_period_end_isValid;

    m_period_start_isValid = ::OpenAPI::fromJsonValue(m_period_start, json[QString("period_start")]);
    m_period_start_isSet = !json[QString("period_start")].isNull() && m_period_start_isValid;

    m_transacted_on_account_id_isValid = ::OpenAPI::fromJsonValue(m_transacted_on_account_id, json[QString("transacted_on_account_id")]);
    m_transacted_on_account_id_isSet = !json[QString("transacted_on_account_id")].isNull() && m_transacted_on_account_id_isValid;
}

QString OAICard_Revenue_Payment::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICard_Revenue_Payment::asJsonObject() const {
    QJsonObject obj;
    if (m_amount_isSet) {
        obj.insert(QString("amount"), ::OpenAPI::toJsonValue(m_amount));
    }
    if (m_currency_isSet) {
        obj.insert(QString("currency"), ::OpenAPI::toJsonValue(m_currency));
    }
    if (m_period_end_isSet) {
        obj.insert(QString("period_end"), ::OpenAPI::toJsonValue(m_period_end));
    }
    if (m_period_start_isSet) {
        obj.insert(QString("period_start"), ::OpenAPI::toJsonValue(m_period_start));
    }
    if (m_transacted_on_account_id_isSet) {
        obj.insert(QString("transacted_on_account_id"), ::OpenAPI::toJsonValue(m_transacted_on_account_id));
    }
    return obj;
}

qint32 OAICard_Revenue_Payment::getAmount() const {
    return m_amount;
}
void OAICard_Revenue_Payment::setAmount(const qint32 &amount) {
    m_amount = amount;
    m_amount_isSet = true;
}

bool OAICard_Revenue_Payment::is_amount_Set() const{
    return m_amount_isSet;
}

bool OAICard_Revenue_Payment::is_amount_Valid() const{
    return m_amount_isValid;
}

QString OAICard_Revenue_Payment::getCurrency() const {
    return m_currency;
}
void OAICard_Revenue_Payment::setCurrency(const QString &currency) {
    m_currency = currency;
    m_currency_isSet = true;
}

bool OAICard_Revenue_Payment::is_currency_Set() const{
    return m_currency_isSet;
}

bool OAICard_Revenue_Payment::is_currency_Valid() const{
    return m_currency_isValid;
}

QDateTime OAICard_Revenue_Payment::getPeriodEnd() const {
    return m_period_end;
}
void OAICard_Revenue_Payment::setPeriodEnd(const QDateTime &period_end) {
    m_period_end = period_end;
    m_period_end_isSet = true;
}

bool OAICard_Revenue_Payment::is_period_end_Set() const{
    return m_period_end_isSet;
}

bool OAICard_Revenue_Payment::is_period_end_Valid() const{
    return m_period_end_isValid;
}

QDateTime OAICard_Revenue_Payment::getPeriodStart() const {
    return m_period_start;
}
void OAICard_Revenue_Payment::setPeriodStart(const QDateTime &period_start) {
    m_period_start = period_start;
    m_period_start_isSet = true;
}

bool OAICard_Revenue_Payment::is_period_start_Set() const{
    return m_period_start_isSet;
}

bool OAICard_Revenue_Payment::is_period_start_Valid() const{
    return m_period_start_isValid;
}

QString OAICard_Revenue_Payment::getTransactedOnAccountId() const {
    return m_transacted_on_account_id;
}
void OAICard_Revenue_Payment::setTransactedOnAccountId(const QString &transacted_on_account_id) {
    m_transacted_on_account_id = transacted_on_account_id;
    m_transacted_on_account_id_isSet = true;
}

bool OAICard_Revenue_Payment::is_transacted_on_account_id_Set() const{
    return m_transacted_on_account_id_isSet;
}

bool OAICard_Revenue_Payment::is_transacted_on_account_id_Valid() const{
    return m_transacted_on_account_id_isValid;
}

bool OAICard_Revenue_Payment::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_currency_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_period_end_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_period_start_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_transacted_on_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICard_Revenue_Payment::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_amount_isValid && m_currency_isValid && m_period_end_isValid && m_period_start_isValid && m_transacted_on_account_id_isValid && true;
}

} // namespace OpenAPI
