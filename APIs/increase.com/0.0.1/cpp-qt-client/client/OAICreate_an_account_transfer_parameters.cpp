/**
 * Increase API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreate_an_account_transfer_parameters.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreate_an_account_transfer_parameters::OAICreate_an_account_transfer_parameters(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreate_an_account_transfer_parameters::OAICreate_an_account_transfer_parameters() {
    this->initializeModel();
}

OAICreate_an_account_transfer_parameters::~OAICreate_an_account_transfer_parameters() {}

void OAICreate_an_account_transfer_parameters::initializeModel() {

    m_account_id_isSet = false;
    m_account_id_isValid = false;

    m_amount_isSet = false;
    m_amount_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_destination_account_id_isSet = false;
    m_destination_account_id_isValid = false;

    m_require_approval_isSet = false;
    m_require_approval_isValid = false;
}

void OAICreate_an_account_transfer_parameters::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreate_an_account_transfer_parameters::fromJsonObject(QJsonObject json) {

    m_account_id_isValid = ::OpenAPI::fromJsonValue(m_account_id, json[QString("account_id")]);
    m_account_id_isSet = !json[QString("account_id")].isNull() && m_account_id_isValid;

    m_amount_isValid = ::OpenAPI::fromJsonValue(m_amount, json[QString("amount")]);
    m_amount_isSet = !json[QString("amount")].isNull() && m_amount_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_destination_account_id_isValid = ::OpenAPI::fromJsonValue(m_destination_account_id, json[QString("destination_account_id")]);
    m_destination_account_id_isSet = !json[QString("destination_account_id")].isNull() && m_destination_account_id_isValid;

    m_require_approval_isValid = ::OpenAPI::fromJsonValue(m_require_approval, json[QString("require_approval")]);
    m_require_approval_isSet = !json[QString("require_approval")].isNull() && m_require_approval_isValid;
}

QString OAICreate_an_account_transfer_parameters::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreate_an_account_transfer_parameters::asJsonObject() const {
    QJsonObject obj;
    if (m_account_id_isSet) {
        obj.insert(QString("account_id"), ::OpenAPI::toJsonValue(m_account_id));
    }
    if (m_amount_isSet) {
        obj.insert(QString("amount"), ::OpenAPI::toJsonValue(m_amount));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_destination_account_id_isSet) {
        obj.insert(QString("destination_account_id"), ::OpenAPI::toJsonValue(m_destination_account_id));
    }
    if (m_require_approval_isSet) {
        obj.insert(QString("require_approval"), ::OpenAPI::toJsonValue(m_require_approval));
    }
    return obj;
}

QString OAICreate_an_account_transfer_parameters::getAccountId() const {
    return m_account_id;
}
void OAICreate_an_account_transfer_parameters::setAccountId(const QString &account_id) {
    m_account_id = account_id;
    m_account_id_isSet = true;
}

bool OAICreate_an_account_transfer_parameters::is_account_id_Set() const{
    return m_account_id_isSet;
}

bool OAICreate_an_account_transfer_parameters::is_account_id_Valid() const{
    return m_account_id_isValid;
}

qint32 OAICreate_an_account_transfer_parameters::getAmount() const {
    return m_amount;
}
void OAICreate_an_account_transfer_parameters::setAmount(const qint32 &amount) {
    m_amount = amount;
    m_amount_isSet = true;
}

bool OAICreate_an_account_transfer_parameters::is_amount_Set() const{
    return m_amount_isSet;
}

bool OAICreate_an_account_transfer_parameters::is_amount_Valid() const{
    return m_amount_isValid;
}

QString OAICreate_an_account_transfer_parameters::getDescription() const {
    return m_description;
}
void OAICreate_an_account_transfer_parameters::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAICreate_an_account_transfer_parameters::is_description_Set() const{
    return m_description_isSet;
}

bool OAICreate_an_account_transfer_parameters::is_description_Valid() const{
    return m_description_isValid;
}

QString OAICreate_an_account_transfer_parameters::getDestinationAccountId() const {
    return m_destination_account_id;
}
void OAICreate_an_account_transfer_parameters::setDestinationAccountId(const QString &destination_account_id) {
    m_destination_account_id = destination_account_id;
    m_destination_account_id_isSet = true;
}

bool OAICreate_an_account_transfer_parameters::is_destination_account_id_Set() const{
    return m_destination_account_id_isSet;
}

bool OAICreate_an_account_transfer_parameters::is_destination_account_id_Valid() const{
    return m_destination_account_id_isValid;
}

bool OAICreate_an_account_transfer_parameters::isRequireApproval() const {
    return m_require_approval;
}
void OAICreate_an_account_transfer_parameters::setRequireApproval(const bool &require_approval) {
    m_require_approval = require_approval;
    m_require_approval_isSet = true;
}

bool OAICreate_an_account_transfer_parameters::is_require_approval_Set() const{
    return m_require_approval_isSet;
}

bool OAICreate_an_account_transfer_parameters::is_require_approval_Valid() const{
    return m_require_approval_isValid;
}

bool OAICreate_an_account_transfer_parameters::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_destination_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_require_approval_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreate_an_account_transfer_parameters::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_account_id_isValid && m_amount_isValid && m_description_isValid && m_destination_account_id_isValid && true;
}

} // namespace OpenAPI
