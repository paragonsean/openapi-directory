/**
 * Increase API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreate_an_export_parameters_balance_csv_created_at.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreate_an_export_parameters_balance_csv_created_at::OAICreate_an_export_parameters_balance_csv_created_at(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreate_an_export_parameters_balance_csv_created_at::OAICreate_an_export_parameters_balance_csv_created_at() {
    this->initializeModel();
}

OAICreate_an_export_parameters_balance_csv_created_at::~OAICreate_an_export_parameters_balance_csv_created_at() {}

void OAICreate_an_export_parameters_balance_csv_created_at::initializeModel() {

    m_after_isSet = false;
    m_after_isValid = false;

    m_before_isSet = false;
    m_before_isValid = false;

    m_on_or_after_isSet = false;
    m_on_or_after_isValid = false;

    m_on_or_before_isSet = false;
    m_on_or_before_isValid = false;
}

void OAICreate_an_export_parameters_balance_csv_created_at::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreate_an_export_parameters_balance_csv_created_at::fromJsonObject(QJsonObject json) {

    m_after_isValid = ::OpenAPI::fromJsonValue(m_after, json[QString("after")]);
    m_after_isSet = !json[QString("after")].isNull() && m_after_isValid;

    m_before_isValid = ::OpenAPI::fromJsonValue(m_before, json[QString("before")]);
    m_before_isSet = !json[QString("before")].isNull() && m_before_isValid;

    m_on_or_after_isValid = ::OpenAPI::fromJsonValue(m_on_or_after, json[QString("on_or_after")]);
    m_on_or_after_isSet = !json[QString("on_or_after")].isNull() && m_on_or_after_isValid;

    m_on_or_before_isValid = ::OpenAPI::fromJsonValue(m_on_or_before, json[QString("on_or_before")]);
    m_on_or_before_isSet = !json[QString("on_or_before")].isNull() && m_on_or_before_isValid;
}

QString OAICreate_an_export_parameters_balance_csv_created_at::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreate_an_export_parameters_balance_csv_created_at::asJsonObject() const {
    QJsonObject obj;
    if (m_after_isSet) {
        obj.insert(QString("after"), ::OpenAPI::toJsonValue(m_after));
    }
    if (m_before_isSet) {
        obj.insert(QString("before"), ::OpenAPI::toJsonValue(m_before));
    }
    if (m_on_or_after_isSet) {
        obj.insert(QString("on_or_after"), ::OpenAPI::toJsonValue(m_on_or_after));
    }
    if (m_on_or_before_isSet) {
        obj.insert(QString("on_or_before"), ::OpenAPI::toJsonValue(m_on_or_before));
    }
    return obj;
}

QDateTime OAICreate_an_export_parameters_balance_csv_created_at::getAfter() const {
    return m_after;
}
void OAICreate_an_export_parameters_balance_csv_created_at::setAfter(const QDateTime &after) {
    m_after = after;
    m_after_isSet = true;
}

bool OAICreate_an_export_parameters_balance_csv_created_at::is_after_Set() const{
    return m_after_isSet;
}

bool OAICreate_an_export_parameters_balance_csv_created_at::is_after_Valid() const{
    return m_after_isValid;
}

QDateTime OAICreate_an_export_parameters_balance_csv_created_at::getBefore() const {
    return m_before;
}
void OAICreate_an_export_parameters_balance_csv_created_at::setBefore(const QDateTime &before) {
    m_before = before;
    m_before_isSet = true;
}

bool OAICreate_an_export_parameters_balance_csv_created_at::is_before_Set() const{
    return m_before_isSet;
}

bool OAICreate_an_export_parameters_balance_csv_created_at::is_before_Valid() const{
    return m_before_isValid;
}

QDateTime OAICreate_an_export_parameters_balance_csv_created_at::getOnOrAfter() const {
    return m_on_or_after;
}
void OAICreate_an_export_parameters_balance_csv_created_at::setOnOrAfter(const QDateTime &on_or_after) {
    m_on_or_after = on_or_after;
    m_on_or_after_isSet = true;
}

bool OAICreate_an_export_parameters_balance_csv_created_at::is_on_or_after_Set() const{
    return m_on_or_after_isSet;
}

bool OAICreate_an_export_parameters_balance_csv_created_at::is_on_or_after_Valid() const{
    return m_on_or_after_isValid;
}

QDateTime OAICreate_an_export_parameters_balance_csv_created_at::getOnOrBefore() const {
    return m_on_or_before;
}
void OAICreate_an_export_parameters_balance_csv_created_at::setOnOrBefore(const QDateTime &on_or_before) {
    m_on_or_before = on_or_before;
    m_on_or_before_isSet = true;
}

bool OAICreate_an_export_parameters_balance_csv_created_at::is_on_or_before_Set() const{
    return m_on_or_before_isSet;
}

bool OAICreate_an_export_parameters_balance_csv_created_at::is_on_or_before_Valid() const{
    return m_on_or_before_isValid;
}

bool OAICreate_an_export_parameters_balance_csv_created_at::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_after_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_before_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_on_or_after_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_on_or_before_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreate_an_export_parameters_balance_csv_created_at::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
