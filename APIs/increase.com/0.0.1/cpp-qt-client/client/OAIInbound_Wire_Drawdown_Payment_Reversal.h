/**
 * Increase API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIInbound_Wire_Drawdown_Payment_Reversal.h
 *
 * A Inbound Wire Drawdown Payment Reversal object. This field will be present in the JSON response if and only if &#x60;category&#x60; is equal to &#x60;inbound_wire_drawdown_payment_reversal&#x60;.
 */

#ifndef OAIInbound_Wire_Drawdown_Payment_Reversal_H
#define OAIInbound_Wire_Drawdown_Payment_Reversal_H

#include <QJsonObject>

#include <QDate>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIInbound_Wire_Drawdown_Payment_Reversal : public OAIObject {
public:
    OAIInbound_Wire_Drawdown_Payment_Reversal();
    OAIInbound_Wire_Drawdown_Payment_Reversal(QString json);
    ~OAIInbound_Wire_Drawdown_Payment_Reversal() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getAmount() const;
    void setAmount(const qint32 &amount);
    bool is_amount_Set() const;
    bool is_amount_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QDate getInputCycleDate() const;
    void setInputCycleDate(const QDate &input_cycle_date);
    bool is_input_cycle_date_Set() const;
    bool is_input_cycle_date_Valid() const;

    QString getInputMessageAccountabilityData() const;
    void setInputMessageAccountabilityData(const QString &input_message_accountability_data);
    bool is_input_message_accountability_data_Set() const;
    bool is_input_message_accountability_data_Valid() const;

    QString getInputSequenceNumber() const;
    void setInputSequenceNumber(const QString &input_sequence_number);
    bool is_input_sequence_number_Set() const;
    bool is_input_sequence_number_Valid() const;

    QString getInputSource() const;
    void setInputSource(const QString &input_source);
    bool is_input_source_Set() const;
    bool is_input_source_Valid() const;

    QDate getPreviousMessageInputCycleDate() const;
    void setPreviousMessageInputCycleDate(const QDate &previous_message_input_cycle_date);
    bool is_previous_message_input_cycle_date_Set() const;
    bool is_previous_message_input_cycle_date_Valid() const;

    QString getPreviousMessageInputMessageAccountabilityData() const;
    void setPreviousMessageInputMessageAccountabilityData(const QString &previous_message_input_message_accountability_data);
    bool is_previous_message_input_message_accountability_data_Set() const;
    bool is_previous_message_input_message_accountability_data_Valid() const;

    QString getPreviousMessageInputSequenceNumber() const;
    void setPreviousMessageInputSequenceNumber(const QString &previous_message_input_sequence_number);
    bool is_previous_message_input_sequence_number_Set() const;
    bool is_previous_message_input_sequence_number_Valid() const;

    QString getPreviousMessageInputSource() const;
    void setPreviousMessageInputSource(const QString &previous_message_input_source);
    bool is_previous_message_input_source_Set() const;
    bool is_previous_message_input_source_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_amount;
    bool m_amount_isSet;
    bool m_amount_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QDate m_input_cycle_date;
    bool m_input_cycle_date_isSet;
    bool m_input_cycle_date_isValid;

    QString m_input_message_accountability_data;
    bool m_input_message_accountability_data_isSet;
    bool m_input_message_accountability_data_isValid;

    QString m_input_sequence_number;
    bool m_input_sequence_number_isSet;
    bool m_input_sequence_number_isValid;

    QString m_input_source;
    bool m_input_source_isSet;
    bool m_input_source_isValid;

    QDate m_previous_message_input_cycle_date;
    bool m_previous_message_input_cycle_date_isSet;
    bool m_previous_message_input_cycle_date_isValid;

    QString m_previous_message_input_message_accountability_data;
    bool m_previous_message_input_message_accountability_data_isSet;
    bool m_previous_message_input_message_accountability_data_isValid;

    QString m_previous_message_input_sequence_number;
    bool m_previous_message_input_sequence_number_isSet;
    bool m_previous_message_input_sequence_number_isValid;

    QString m_previous_message_input_source;
    bool m_previous_message_input_source_isSet;
    bool m_previous_message_input_source_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIInbound_Wire_Drawdown_Payment_Reversal)

#endif // OAIInbound_Wire_Drawdown_Payment_Reversal_H
