/**
 * Increase API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICheck_Deposit_Instruction.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICheck_Deposit_Instruction::OAICheck_Deposit_Instruction(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICheck_Deposit_Instruction::OAICheck_Deposit_Instruction() {
    this->initializeModel();
}

OAICheck_Deposit_Instruction::~OAICheck_Deposit_Instruction() {}

void OAICheck_Deposit_Instruction::initializeModel() {

    m_amount_isSet = false;
    m_amount_isValid = false;

    m_back_image_file_id_isSet = false;
    m_back_image_file_id_isValid = false;

    m_check_deposit_id_isSet = false;
    m_check_deposit_id_isValid = false;

    m_currency_isSet = false;
    m_currency_isValid = false;

    m_front_image_file_id_isSet = false;
    m_front_image_file_id_isValid = false;
}

void OAICheck_Deposit_Instruction::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICheck_Deposit_Instruction::fromJsonObject(QJsonObject json) {

    m_amount_isValid = ::OpenAPI::fromJsonValue(m_amount, json[QString("amount")]);
    m_amount_isSet = !json[QString("amount")].isNull() && m_amount_isValid;

    m_back_image_file_id_isValid = ::OpenAPI::fromJsonValue(m_back_image_file_id, json[QString("back_image_file_id")]);
    m_back_image_file_id_isSet = !json[QString("back_image_file_id")].isNull() && m_back_image_file_id_isValid;

    m_check_deposit_id_isValid = ::OpenAPI::fromJsonValue(m_check_deposit_id, json[QString("check_deposit_id")]);
    m_check_deposit_id_isSet = !json[QString("check_deposit_id")].isNull() && m_check_deposit_id_isValid;

    m_currency_isValid = ::OpenAPI::fromJsonValue(m_currency, json[QString("currency")]);
    m_currency_isSet = !json[QString("currency")].isNull() && m_currency_isValid;

    m_front_image_file_id_isValid = ::OpenAPI::fromJsonValue(m_front_image_file_id, json[QString("front_image_file_id")]);
    m_front_image_file_id_isSet = !json[QString("front_image_file_id")].isNull() && m_front_image_file_id_isValid;
}

QString OAICheck_Deposit_Instruction::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICheck_Deposit_Instruction::asJsonObject() const {
    QJsonObject obj;
    if (m_amount_isSet) {
        obj.insert(QString("amount"), ::OpenAPI::toJsonValue(m_amount));
    }
    if (m_back_image_file_id_isSet) {
        obj.insert(QString("back_image_file_id"), ::OpenAPI::toJsonValue(m_back_image_file_id));
    }
    if (m_check_deposit_id_isSet) {
        obj.insert(QString("check_deposit_id"), ::OpenAPI::toJsonValue(m_check_deposit_id));
    }
    if (m_currency_isSet) {
        obj.insert(QString("currency"), ::OpenAPI::toJsonValue(m_currency));
    }
    if (m_front_image_file_id_isSet) {
        obj.insert(QString("front_image_file_id"), ::OpenAPI::toJsonValue(m_front_image_file_id));
    }
    return obj;
}

qint32 OAICheck_Deposit_Instruction::getAmount() const {
    return m_amount;
}
void OAICheck_Deposit_Instruction::setAmount(const qint32 &amount) {
    m_amount = amount;
    m_amount_isSet = true;
}

bool OAICheck_Deposit_Instruction::is_amount_Set() const{
    return m_amount_isSet;
}

bool OAICheck_Deposit_Instruction::is_amount_Valid() const{
    return m_amount_isValid;
}

QString OAICheck_Deposit_Instruction::getBackImageFileId() const {
    return m_back_image_file_id;
}
void OAICheck_Deposit_Instruction::setBackImageFileId(const QString &back_image_file_id) {
    m_back_image_file_id = back_image_file_id;
    m_back_image_file_id_isSet = true;
}

bool OAICheck_Deposit_Instruction::is_back_image_file_id_Set() const{
    return m_back_image_file_id_isSet;
}

bool OAICheck_Deposit_Instruction::is_back_image_file_id_Valid() const{
    return m_back_image_file_id_isValid;
}

QString OAICheck_Deposit_Instruction::getCheckDepositId() const {
    return m_check_deposit_id;
}
void OAICheck_Deposit_Instruction::setCheckDepositId(const QString &check_deposit_id) {
    m_check_deposit_id = check_deposit_id;
    m_check_deposit_id_isSet = true;
}

bool OAICheck_Deposit_Instruction::is_check_deposit_id_Set() const{
    return m_check_deposit_id_isSet;
}

bool OAICheck_Deposit_Instruction::is_check_deposit_id_Valid() const{
    return m_check_deposit_id_isValid;
}

QString OAICheck_Deposit_Instruction::getCurrency() const {
    return m_currency;
}
void OAICheck_Deposit_Instruction::setCurrency(const QString &currency) {
    m_currency = currency;
    m_currency_isSet = true;
}

bool OAICheck_Deposit_Instruction::is_currency_Set() const{
    return m_currency_isSet;
}

bool OAICheck_Deposit_Instruction::is_currency_Valid() const{
    return m_currency_isValid;
}

QString OAICheck_Deposit_Instruction::getFrontImageFileId() const {
    return m_front_image_file_id;
}
void OAICheck_Deposit_Instruction::setFrontImageFileId(const QString &front_image_file_id) {
    m_front_image_file_id = front_image_file_id;
    m_front_image_file_id_isSet = true;
}

bool OAICheck_Deposit_Instruction::is_front_image_file_id_Set() const{
    return m_front_image_file_id_isSet;
}

bool OAICheck_Deposit_Instruction::is_front_image_file_id_Valid() const{
    return m_front_image_file_id_isValid;
}

bool OAICheck_Deposit_Instruction::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_back_image_file_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_check_deposit_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_currency_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_front_image_file_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICheck_Deposit_Instruction::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_amount_isValid && m_back_image_file_id_isValid && m_check_deposit_id_isValid && m_currency_isValid && m_front_image_file_id_isValid && true;
}

} // namespace OpenAPI
