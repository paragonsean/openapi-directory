/**
 * Increase API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIReal_time_decision.h
 *
 * Real Time Decisions are created when your application needs to take action in real-time to some event such as a card authorization. Real time decisions are currently in beta; please contact support@increase.com if you&#39;re interested in trying them out!
 */

#ifndef OAIReal_time_decision_H
#define OAIReal_time_decision_H

#include <QJsonObject>

#include "OAICard_Authorization_1.h"
#include "OAIDigital_Wallet_Authentication.h"
#include "OAIDigital_Wallet_Token.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICard_Authorization_1;
class OAIDigital_Wallet_Authentication;
class OAIDigital_Wallet_Token;

class OAIReal_time_decision : public OAIObject {
public:
    OAIReal_time_decision();
    OAIReal_time_decision(QString json);
    ~OAIReal_time_decision() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAICard_Authorization_1 getCardAuthorization() const;
    void setCardAuthorization(const OAICard_Authorization_1 &card_authorization);
    bool is_card_authorization_Set() const;
    bool is_card_authorization_Valid() const;

    QString getCategory() const;
    void setCategory(const QString &category);
    bool is_category_Set() const;
    bool is_category_Valid() const;

    QDateTime getCreatedAt() const;
    void setCreatedAt(const QDateTime &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    OAIDigital_Wallet_Authentication getDigitalWalletAuthentication() const;
    void setDigitalWalletAuthentication(const OAIDigital_Wallet_Authentication &digital_wallet_authentication);
    bool is_digital_wallet_authentication_Set() const;
    bool is_digital_wallet_authentication_Valid() const;

    OAIDigital_Wallet_Token getDigitalWalletToken() const;
    void setDigitalWalletToken(const OAIDigital_Wallet_Token &digital_wallet_token);
    bool is_digital_wallet_token_Set() const;
    bool is_digital_wallet_token_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QDateTime getTimeoutAt() const;
    void setTimeoutAt(const QDateTime &timeout_at);
    bool is_timeout_at_Set() const;
    bool is_timeout_at_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAICard_Authorization_1 m_card_authorization;
    bool m_card_authorization_isSet;
    bool m_card_authorization_isValid;

    QString m_category;
    bool m_category_isSet;
    bool m_category_isValid;

    QDateTime m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    OAIDigital_Wallet_Authentication m_digital_wallet_authentication;
    bool m_digital_wallet_authentication_isSet;
    bool m_digital_wallet_authentication_isValid;

    OAIDigital_Wallet_Token m_digital_wallet_token;
    bool m_digital_wallet_token_isSet;
    bool m_digital_wallet_token_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QDateTime m_timeout_at;
    bool m_timeout_at_isSet;
    bool m_timeout_at_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIReal_time_decision)

#endif // OAIReal_time_decision_H
