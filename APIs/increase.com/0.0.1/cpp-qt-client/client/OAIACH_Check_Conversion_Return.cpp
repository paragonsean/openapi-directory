/**
 * Increase API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIACH_Check_Conversion_Return.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIACH_Check_Conversion_Return::OAIACH_Check_Conversion_Return(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIACH_Check_Conversion_Return::OAIACH_Check_Conversion_Return() {
    this->initializeModel();
}

OAIACH_Check_Conversion_Return::~OAIACH_Check_Conversion_Return() {}

void OAIACH_Check_Conversion_Return::initializeModel() {

    m_amount_isSet = false;
    m_amount_isValid = false;

    m_return_reason_code_isSet = false;
    m_return_reason_code_isValid = false;
}

void OAIACH_Check_Conversion_Return::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIACH_Check_Conversion_Return::fromJsonObject(QJsonObject json) {

    m_amount_isValid = ::OpenAPI::fromJsonValue(m_amount, json[QString("amount")]);
    m_amount_isSet = !json[QString("amount")].isNull() && m_amount_isValid;

    m_return_reason_code_isValid = ::OpenAPI::fromJsonValue(m_return_reason_code, json[QString("return_reason_code")]);
    m_return_reason_code_isSet = !json[QString("return_reason_code")].isNull() && m_return_reason_code_isValid;
}

QString OAIACH_Check_Conversion_Return::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIACH_Check_Conversion_Return::asJsonObject() const {
    QJsonObject obj;
    if (m_amount_isSet) {
        obj.insert(QString("amount"), ::OpenAPI::toJsonValue(m_amount));
    }
    if (m_return_reason_code_isSet) {
        obj.insert(QString("return_reason_code"), ::OpenAPI::toJsonValue(m_return_reason_code));
    }
    return obj;
}

qint32 OAIACH_Check_Conversion_Return::getAmount() const {
    return m_amount;
}
void OAIACH_Check_Conversion_Return::setAmount(const qint32 &amount) {
    m_amount = amount;
    m_amount_isSet = true;
}

bool OAIACH_Check_Conversion_Return::is_amount_Set() const{
    return m_amount_isSet;
}

bool OAIACH_Check_Conversion_Return::is_amount_Valid() const{
    return m_amount_isValid;
}

QString OAIACH_Check_Conversion_Return::getReturnReasonCode() const {
    return m_return_reason_code;
}
void OAIACH_Check_Conversion_Return::setReturnReasonCode(const QString &return_reason_code) {
    m_return_reason_code = return_reason_code;
    m_return_reason_code_isSet = true;
}

bool OAIACH_Check_Conversion_Return::is_return_reason_code_Set() const{
    return m_return_reason_code_isSet;
}

bool OAIACH_Check_Conversion_Return::is_return_reason_code_Valid() const{
    return m_return_reason_code_isValid;
}

bool OAIACH_Check_Conversion_Return::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_return_reason_code_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIACH_Check_Conversion_Return::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_amount_isValid && m_return_reason_code_isValid && true;
}

} // namespace OpenAPI
