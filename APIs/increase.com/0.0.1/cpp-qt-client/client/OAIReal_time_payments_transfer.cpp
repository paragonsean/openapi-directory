/**
 * Increase API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIReal_time_payments_transfer.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIReal_time_payments_transfer::OAIReal_time_payments_transfer(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIReal_time_payments_transfer::OAIReal_time_payments_transfer() {
    this->initializeModel();
}

OAIReal_time_payments_transfer::~OAIReal_time_payments_transfer() {}

void OAIReal_time_payments_transfer::initializeModel() {

    m_account_id_isSet = false;
    m_account_id_isValid = false;

    m_amount_isSet = false;
    m_amount_isValid = false;

    m_approval_isSet = false;
    m_approval_isValid = false;

    m_cancellation_isSet = false;
    m_cancellation_isValid = false;

    m_created_at_isSet = false;
    m_created_at_isValid = false;

    m_creditor_name_isSet = false;
    m_creditor_name_isValid = false;

    m_currency_isSet = false;
    m_currency_isValid = false;

    m_destination_account_number_isSet = false;
    m_destination_account_number_isValid = false;

    m_destination_routing_number_isSet = false;
    m_destination_routing_number_isValid = false;

    m_external_account_id_isSet = false;
    m_external_account_id_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_rejection_isSet = false;
    m_rejection_isValid = false;

    m_remittance_information_isSet = false;
    m_remittance_information_isValid = false;

    m_source_account_number_id_isSet = false;
    m_source_account_number_id_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_submission_isSet = false;
    m_submission_isValid = false;

    m_transaction_id_isSet = false;
    m_transaction_id_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAIReal_time_payments_transfer::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIReal_time_payments_transfer::fromJsonObject(QJsonObject json) {

    m_account_id_isValid = ::OpenAPI::fromJsonValue(m_account_id, json[QString("account_id")]);
    m_account_id_isSet = !json[QString("account_id")].isNull() && m_account_id_isValid;

    m_amount_isValid = ::OpenAPI::fromJsonValue(m_amount, json[QString("amount")]);
    m_amount_isSet = !json[QString("amount")].isNull() && m_amount_isValid;

    m_approval_isValid = ::OpenAPI::fromJsonValue(m_approval, json[QString("approval")]);
    m_approval_isSet = !json[QString("approval")].isNull() && m_approval_isValid;

    m_cancellation_isValid = ::OpenAPI::fromJsonValue(m_cancellation, json[QString("cancellation")]);
    m_cancellation_isSet = !json[QString("cancellation")].isNull() && m_cancellation_isValid;

    m_created_at_isValid = ::OpenAPI::fromJsonValue(m_created_at, json[QString("created_at")]);
    m_created_at_isSet = !json[QString("created_at")].isNull() && m_created_at_isValid;

    m_creditor_name_isValid = ::OpenAPI::fromJsonValue(m_creditor_name, json[QString("creditor_name")]);
    m_creditor_name_isSet = !json[QString("creditor_name")].isNull() && m_creditor_name_isValid;

    m_currency_isValid = ::OpenAPI::fromJsonValue(m_currency, json[QString("currency")]);
    m_currency_isSet = !json[QString("currency")].isNull() && m_currency_isValid;

    m_destination_account_number_isValid = ::OpenAPI::fromJsonValue(m_destination_account_number, json[QString("destination_account_number")]);
    m_destination_account_number_isSet = !json[QString("destination_account_number")].isNull() && m_destination_account_number_isValid;

    m_destination_routing_number_isValid = ::OpenAPI::fromJsonValue(m_destination_routing_number, json[QString("destination_routing_number")]);
    m_destination_routing_number_isSet = !json[QString("destination_routing_number")].isNull() && m_destination_routing_number_isValid;

    m_external_account_id_isValid = ::OpenAPI::fromJsonValue(m_external_account_id, json[QString("external_account_id")]);
    m_external_account_id_isSet = !json[QString("external_account_id")].isNull() && m_external_account_id_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_rejection_isValid = ::OpenAPI::fromJsonValue(m_rejection, json[QString("rejection")]);
    m_rejection_isSet = !json[QString("rejection")].isNull() && m_rejection_isValid;

    m_remittance_information_isValid = ::OpenAPI::fromJsonValue(m_remittance_information, json[QString("remittance_information")]);
    m_remittance_information_isSet = !json[QString("remittance_information")].isNull() && m_remittance_information_isValid;

    m_source_account_number_id_isValid = ::OpenAPI::fromJsonValue(m_source_account_number_id, json[QString("source_account_number_id")]);
    m_source_account_number_id_isSet = !json[QString("source_account_number_id")].isNull() && m_source_account_number_id_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_submission_isValid = ::OpenAPI::fromJsonValue(m_submission, json[QString("submission")]);
    m_submission_isSet = !json[QString("submission")].isNull() && m_submission_isValid;

    m_transaction_id_isValid = ::OpenAPI::fromJsonValue(m_transaction_id, json[QString("transaction_id")]);
    m_transaction_id_isSet = !json[QString("transaction_id")].isNull() && m_transaction_id_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;
}

QString OAIReal_time_payments_transfer::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIReal_time_payments_transfer::asJsonObject() const {
    QJsonObject obj;
    if (m_account_id_isSet) {
        obj.insert(QString("account_id"), ::OpenAPI::toJsonValue(m_account_id));
    }
    if (m_amount_isSet) {
        obj.insert(QString("amount"), ::OpenAPI::toJsonValue(m_amount));
    }
    if (m_approval.isSet()) {
        obj.insert(QString("approval"), ::OpenAPI::toJsonValue(m_approval));
    }
    if (m_cancellation.isSet()) {
        obj.insert(QString("cancellation"), ::OpenAPI::toJsonValue(m_cancellation));
    }
    if (m_created_at_isSet) {
        obj.insert(QString("created_at"), ::OpenAPI::toJsonValue(m_created_at));
    }
    if (m_creditor_name_isSet) {
        obj.insert(QString("creditor_name"), ::OpenAPI::toJsonValue(m_creditor_name));
    }
    if (m_currency_isSet) {
        obj.insert(QString("currency"), ::OpenAPI::toJsonValue(m_currency));
    }
    if (m_destination_account_number_isSet) {
        obj.insert(QString("destination_account_number"), ::OpenAPI::toJsonValue(m_destination_account_number));
    }
    if (m_destination_routing_number_isSet) {
        obj.insert(QString("destination_routing_number"), ::OpenAPI::toJsonValue(m_destination_routing_number));
    }
    if (m_external_account_id_isSet) {
        obj.insert(QString("external_account_id"), ::OpenAPI::toJsonValue(m_external_account_id));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_rejection.isSet()) {
        obj.insert(QString("rejection"), ::OpenAPI::toJsonValue(m_rejection));
    }
    if (m_remittance_information_isSet) {
        obj.insert(QString("remittance_information"), ::OpenAPI::toJsonValue(m_remittance_information));
    }
    if (m_source_account_number_id_isSet) {
        obj.insert(QString("source_account_number_id"), ::OpenAPI::toJsonValue(m_source_account_number_id));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_submission.isSet()) {
        obj.insert(QString("submission"), ::OpenAPI::toJsonValue(m_submission));
    }
    if (m_transaction_id_isSet) {
        obj.insert(QString("transaction_id"), ::OpenAPI::toJsonValue(m_transaction_id));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

QString OAIReal_time_payments_transfer::getAccountId() const {
    return m_account_id;
}
void OAIReal_time_payments_transfer::setAccountId(const QString &account_id) {
    m_account_id = account_id;
    m_account_id_isSet = true;
}

bool OAIReal_time_payments_transfer::is_account_id_Set() const{
    return m_account_id_isSet;
}

bool OAIReal_time_payments_transfer::is_account_id_Valid() const{
    return m_account_id_isValid;
}

qint32 OAIReal_time_payments_transfer::getAmount() const {
    return m_amount;
}
void OAIReal_time_payments_transfer::setAmount(const qint32 &amount) {
    m_amount = amount;
    m_amount_isSet = true;
}

bool OAIReal_time_payments_transfer::is_amount_Set() const{
    return m_amount_isSet;
}

bool OAIReal_time_payments_transfer::is_amount_Valid() const{
    return m_amount_isValid;
}

OAITransfer_Approval OAIReal_time_payments_transfer::getApproval() const {
    return m_approval;
}
void OAIReal_time_payments_transfer::setApproval(const OAITransfer_Approval &approval) {
    m_approval = approval;
    m_approval_isSet = true;
}

bool OAIReal_time_payments_transfer::is_approval_Set() const{
    return m_approval_isSet;
}

bool OAIReal_time_payments_transfer::is_approval_Valid() const{
    return m_approval_isValid;
}

OAITransfer_Cancellation OAIReal_time_payments_transfer::getCancellation() const {
    return m_cancellation;
}
void OAIReal_time_payments_transfer::setCancellation(const OAITransfer_Cancellation &cancellation) {
    m_cancellation = cancellation;
    m_cancellation_isSet = true;
}

bool OAIReal_time_payments_transfer::is_cancellation_Set() const{
    return m_cancellation_isSet;
}

bool OAIReal_time_payments_transfer::is_cancellation_Valid() const{
    return m_cancellation_isValid;
}

QDateTime OAIReal_time_payments_transfer::getCreatedAt() const {
    return m_created_at;
}
void OAIReal_time_payments_transfer::setCreatedAt(const QDateTime &created_at) {
    m_created_at = created_at;
    m_created_at_isSet = true;
}

bool OAIReal_time_payments_transfer::is_created_at_Set() const{
    return m_created_at_isSet;
}

bool OAIReal_time_payments_transfer::is_created_at_Valid() const{
    return m_created_at_isValid;
}

QString OAIReal_time_payments_transfer::getCreditorName() const {
    return m_creditor_name;
}
void OAIReal_time_payments_transfer::setCreditorName(const QString &creditor_name) {
    m_creditor_name = creditor_name;
    m_creditor_name_isSet = true;
}

bool OAIReal_time_payments_transfer::is_creditor_name_Set() const{
    return m_creditor_name_isSet;
}

bool OAIReal_time_payments_transfer::is_creditor_name_Valid() const{
    return m_creditor_name_isValid;
}

QString OAIReal_time_payments_transfer::getCurrency() const {
    return m_currency;
}
void OAIReal_time_payments_transfer::setCurrency(const QString &currency) {
    m_currency = currency;
    m_currency_isSet = true;
}

bool OAIReal_time_payments_transfer::is_currency_Set() const{
    return m_currency_isSet;
}

bool OAIReal_time_payments_transfer::is_currency_Valid() const{
    return m_currency_isValid;
}

QString OAIReal_time_payments_transfer::getDestinationAccountNumber() const {
    return m_destination_account_number;
}
void OAIReal_time_payments_transfer::setDestinationAccountNumber(const QString &destination_account_number) {
    m_destination_account_number = destination_account_number;
    m_destination_account_number_isSet = true;
}

bool OAIReal_time_payments_transfer::is_destination_account_number_Set() const{
    return m_destination_account_number_isSet;
}

bool OAIReal_time_payments_transfer::is_destination_account_number_Valid() const{
    return m_destination_account_number_isValid;
}

QString OAIReal_time_payments_transfer::getDestinationRoutingNumber() const {
    return m_destination_routing_number;
}
void OAIReal_time_payments_transfer::setDestinationRoutingNumber(const QString &destination_routing_number) {
    m_destination_routing_number = destination_routing_number;
    m_destination_routing_number_isSet = true;
}

bool OAIReal_time_payments_transfer::is_destination_routing_number_Set() const{
    return m_destination_routing_number_isSet;
}

bool OAIReal_time_payments_transfer::is_destination_routing_number_Valid() const{
    return m_destination_routing_number_isValid;
}

QString OAIReal_time_payments_transfer::getExternalAccountId() const {
    return m_external_account_id;
}
void OAIReal_time_payments_transfer::setExternalAccountId(const QString &external_account_id) {
    m_external_account_id = external_account_id;
    m_external_account_id_isSet = true;
}

bool OAIReal_time_payments_transfer::is_external_account_id_Set() const{
    return m_external_account_id_isSet;
}

bool OAIReal_time_payments_transfer::is_external_account_id_Valid() const{
    return m_external_account_id_isValid;
}

QString OAIReal_time_payments_transfer::getId() const {
    return m_id;
}
void OAIReal_time_payments_transfer::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIReal_time_payments_transfer::is_id_Set() const{
    return m_id_isSet;
}

bool OAIReal_time_payments_transfer::is_id_Valid() const{
    return m_id_isValid;
}

OAIReal_Time_Payments_Transfer_Rejection OAIReal_time_payments_transfer::getRejection() const {
    return m_rejection;
}
void OAIReal_time_payments_transfer::setRejection(const OAIReal_Time_Payments_Transfer_Rejection &rejection) {
    m_rejection = rejection;
    m_rejection_isSet = true;
}

bool OAIReal_time_payments_transfer::is_rejection_Set() const{
    return m_rejection_isSet;
}

bool OAIReal_time_payments_transfer::is_rejection_Valid() const{
    return m_rejection_isValid;
}

QString OAIReal_time_payments_transfer::getRemittanceInformation() const {
    return m_remittance_information;
}
void OAIReal_time_payments_transfer::setRemittanceInformation(const QString &remittance_information) {
    m_remittance_information = remittance_information;
    m_remittance_information_isSet = true;
}

bool OAIReal_time_payments_transfer::is_remittance_information_Set() const{
    return m_remittance_information_isSet;
}

bool OAIReal_time_payments_transfer::is_remittance_information_Valid() const{
    return m_remittance_information_isValid;
}

QString OAIReal_time_payments_transfer::getSourceAccountNumberId() const {
    return m_source_account_number_id;
}
void OAIReal_time_payments_transfer::setSourceAccountNumberId(const QString &source_account_number_id) {
    m_source_account_number_id = source_account_number_id;
    m_source_account_number_id_isSet = true;
}

bool OAIReal_time_payments_transfer::is_source_account_number_id_Set() const{
    return m_source_account_number_id_isSet;
}

bool OAIReal_time_payments_transfer::is_source_account_number_id_Valid() const{
    return m_source_account_number_id_isValid;
}

QString OAIReal_time_payments_transfer::getStatus() const {
    return m_status;
}
void OAIReal_time_payments_transfer::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIReal_time_payments_transfer::is_status_Set() const{
    return m_status_isSet;
}

bool OAIReal_time_payments_transfer::is_status_Valid() const{
    return m_status_isValid;
}

OAIReal_Time_Payments_Transfer_Submission OAIReal_time_payments_transfer::getSubmission() const {
    return m_submission;
}
void OAIReal_time_payments_transfer::setSubmission(const OAIReal_Time_Payments_Transfer_Submission &submission) {
    m_submission = submission;
    m_submission_isSet = true;
}

bool OAIReal_time_payments_transfer::is_submission_Set() const{
    return m_submission_isSet;
}

bool OAIReal_time_payments_transfer::is_submission_Valid() const{
    return m_submission_isValid;
}

QString OAIReal_time_payments_transfer::getTransactionId() const {
    return m_transaction_id;
}
void OAIReal_time_payments_transfer::setTransactionId(const QString &transaction_id) {
    m_transaction_id = transaction_id;
    m_transaction_id_isSet = true;
}

bool OAIReal_time_payments_transfer::is_transaction_id_Set() const{
    return m_transaction_id_isSet;
}

bool OAIReal_time_payments_transfer::is_transaction_id_Valid() const{
    return m_transaction_id_isValid;
}

QString OAIReal_time_payments_transfer::getType() const {
    return m_type;
}
void OAIReal_time_payments_transfer::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIReal_time_payments_transfer::is_type_Set() const{
    return m_type_isSet;
}

bool OAIReal_time_payments_transfer::is_type_Valid() const{
    return m_type_isValid;
}

bool OAIReal_time_payments_transfer::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_approval.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_cancellation.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_creditor_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_currency_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_destination_account_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_destination_routing_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_external_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_rejection.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_remittance_information_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_source_account_number_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_submission.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_transaction_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIReal_time_payments_transfer::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_account_id_isValid && m_amount_isValid && m_approval_isValid && m_cancellation_isValid && m_created_at_isValid && m_creditor_name_isValid && m_currency_isValid && m_destination_account_number_isValid && m_destination_routing_number_isValid && m_external_account_id_isValid && m_id_isValid && m_rejection_isValid && m_remittance_information_isValid && m_source_account_number_id_isValid && m_status_isValid && m_submission_isValid && m_transaction_id_isValid && m_type_isValid && true;
}

} // namespace OpenAPI
