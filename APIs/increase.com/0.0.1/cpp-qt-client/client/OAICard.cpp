/**
 * Increase API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICard.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICard::OAICard(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICard::OAICard() {
    this->initializeModel();
}

OAICard::~OAICard() {}

void OAICard::initializeModel() {

    m_account_id_isSet = false;
    m_account_id_isValid = false;

    m_billing_address_isSet = false;
    m_billing_address_isValid = false;

    m_created_at_isSet = false;
    m_created_at_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_digital_wallet_isSet = false;
    m_digital_wallet_isValid = false;

    m_expiration_month_isSet = false;
    m_expiration_month_isValid = false;

    m_expiration_year_isSet = false;
    m_expiration_year_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_last4_isSet = false;
    m_last4_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAICard::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICard::fromJsonObject(QJsonObject json) {

    m_account_id_isValid = ::OpenAPI::fromJsonValue(m_account_id, json[QString("account_id")]);
    m_account_id_isSet = !json[QString("account_id")].isNull() && m_account_id_isValid;

    m_billing_address_isValid = ::OpenAPI::fromJsonValue(m_billing_address, json[QString("billing_address")]);
    m_billing_address_isSet = !json[QString("billing_address")].isNull() && m_billing_address_isValid;

    m_created_at_isValid = ::OpenAPI::fromJsonValue(m_created_at, json[QString("created_at")]);
    m_created_at_isSet = !json[QString("created_at")].isNull() && m_created_at_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_digital_wallet_isValid = ::OpenAPI::fromJsonValue(m_digital_wallet, json[QString("digital_wallet")]);
    m_digital_wallet_isSet = !json[QString("digital_wallet")].isNull() && m_digital_wallet_isValid;

    m_expiration_month_isValid = ::OpenAPI::fromJsonValue(m_expiration_month, json[QString("expiration_month")]);
    m_expiration_month_isSet = !json[QString("expiration_month")].isNull() && m_expiration_month_isValid;

    m_expiration_year_isValid = ::OpenAPI::fromJsonValue(m_expiration_year, json[QString("expiration_year")]);
    m_expiration_year_isSet = !json[QString("expiration_year")].isNull() && m_expiration_year_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_last4_isValid = ::OpenAPI::fromJsonValue(m_last4, json[QString("last4")]);
    m_last4_isSet = !json[QString("last4")].isNull() && m_last4_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;
}

QString OAICard::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICard::asJsonObject() const {
    QJsonObject obj;
    if (m_account_id_isSet) {
        obj.insert(QString("account_id"), ::OpenAPI::toJsonValue(m_account_id));
    }
    if (m_billing_address.isSet()) {
        obj.insert(QString("billing_address"), ::OpenAPI::toJsonValue(m_billing_address));
    }
    if (m_created_at_isSet) {
        obj.insert(QString("created_at"), ::OpenAPI::toJsonValue(m_created_at));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_digital_wallet.isSet()) {
        obj.insert(QString("digital_wallet"), ::OpenAPI::toJsonValue(m_digital_wallet));
    }
    if (m_expiration_month_isSet) {
        obj.insert(QString("expiration_month"), ::OpenAPI::toJsonValue(m_expiration_month));
    }
    if (m_expiration_year_isSet) {
        obj.insert(QString("expiration_year"), ::OpenAPI::toJsonValue(m_expiration_year));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_last4_isSet) {
        obj.insert(QString("last4"), ::OpenAPI::toJsonValue(m_last4));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

QString OAICard::getAccountId() const {
    return m_account_id;
}
void OAICard::setAccountId(const QString &account_id) {
    m_account_id = account_id;
    m_account_id_isSet = true;
}

bool OAICard::is_account_id_Set() const{
    return m_account_id_isSet;
}

bool OAICard::is_account_id_Valid() const{
    return m_account_id_isValid;
}

OAIBilling_Address OAICard::getBillingAddress() const {
    return m_billing_address;
}
void OAICard::setBillingAddress(const OAIBilling_Address &billing_address) {
    m_billing_address = billing_address;
    m_billing_address_isSet = true;
}

bool OAICard::is_billing_address_Set() const{
    return m_billing_address_isSet;
}

bool OAICard::is_billing_address_Valid() const{
    return m_billing_address_isValid;
}

QDateTime OAICard::getCreatedAt() const {
    return m_created_at;
}
void OAICard::setCreatedAt(const QDateTime &created_at) {
    m_created_at = created_at;
    m_created_at_isSet = true;
}

bool OAICard::is_created_at_Set() const{
    return m_created_at_isSet;
}

bool OAICard::is_created_at_Valid() const{
    return m_created_at_isValid;
}

QString OAICard::getDescription() const {
    return m_description;
}
void OAICard::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAICard::is_description_Set() const{
    return m_description_isSet;
}

bool OAICard::is_description_Valid() const{
    return m_description_isValid;
}

OAIDigital_Wallet OAICard::getDigitalWallet() const {
    return m_digital_wallet;
}
void OAICard::setDigitalWallet(const OAIDigital_Wallet &digital_wallet) {
    m_digital_wallet = digital_wallet;
    m_digital_wallet_isSet = true;
}

bool OAICard::is_digital_wallet_Set() const{
    return m_digital_wallet_isSet;
}

bool OAICard::is_digital_wallet_Valid() const{
    return m_digital_wallet_isValid;
}

qint32 OAICard::getExpirationMonth() const {
    return m_expiration_month;
}
void OAICard::setExpirationMonth(const qint32 &expiration_month) {
    m_expiration_month = expiration_month;
    m_expiration_month_isSet = true;
}

bool OAICard::is_expiration_month_Set() const{
    return m_expiration_month_isSet;
}

bool OAICard::is_expiration_month_Valid() const{
    return m_expiration_month_isValid;
}

qint32 OAICard::getExpirationYear() const {
    return m_expiration_year;
}
void OAICard::setExpirationYear(const qint32 &expiration_year) {
    m_expiration_year = expiration_year;
    m_expiration_year_isSet = true;
}

bool OAICard::is_expiration_year_Set() const{
    return m_expiration_year_isSet;
}

bool OAICard::is_expiration_year_Valid() const{
    return m_expiration_year_isValid;
}

QString OAICard::getId() const {
    return m_id;
}
void OAICard::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAICard::is_id_Set() const{
    return m_id_isSet;
}

bool OAICard::is_id_Valid() const{
    return m_id_isValid;
}

QString OAICard::getLast4() const {
    return m_last4;
}
void OAICard::setLast4(const QString &last4) {
    m_last4 = last4;
    m_last4_isSet = true;
}

bool OAICard::is_last4_Set() const{
    return m_last4_isSet;
}

bool OAICard::is_last4_Valid() const{
    return m_last4_isValid;
}

QString OAICard::getStatus() const {
    return m_status;
}
void OAICard::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAICard::is_status_Set() const{
    return m_status_isSet;
}

bool OAICard::is_status_Valid() const{
    return m_status_isValid;
}

QString OAICard::getType() const {
    return m_type;
}
void OAICard::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAICard::is_type_Set() const{
    return m_type_isSet;
}

bool OAICard::is_type_Valid() const{
    return m_type_isValid;
}

bool OAICard::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_billing_address.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_digital_wallet.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_expiration_month_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_expiration_year_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last4_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICard::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_account_id_isValid && m_billing_address_isValid && m_created_at_isValid && m_description_isValid && m_digital_wallet_isValid && m_expiration_month_isValid && m_expiration_year_isValid && m_id_isValid && m_last4_isValid && m_status_isValid && m_type_isValid && true;
}

} // namespace OpenAPI
