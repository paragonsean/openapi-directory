/**
 * Increase API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDeclined_Transaction_Source.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDeclined_Transaction_Source::OAIDeclined_Transaction_Source(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDeclined_Transaction_Source::OAIDeclined_Transaction_Source() {
    this->initializeModel();
}

OAIDeclined_Transaction_Source::~OAIDeclined_Transaction_Source() {}

void OAIDeclined_Transaction_Source::initializeModel() {

    m_ach_decline_isSet = false;
    m_ach_decline_isValid = false;

    m_card_decline_isSet = false;
    m_card_decline_isValid = false;

    m_card_route_decline_isSet = false;
    m_card_route_decline_isValid = false;

    m_category_isSet = false;
    m_category_isValid = false;

    m_check_decline_isSet = false;
    m_check_decline_isValid = false;

    m_inbound_real_time_payments_transfer_decline_isSet = false;
    m_inbound_real_time_payments_transfer_decline_isValid = false;

    m_international_ach_decline_isSet = false;
    m_international_ach_decline_isValid = false;
}

void OAIDeclined_Transaction_Source::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDeclined_Transaction_Source::fromJsonObject(QJsonObject json) {

    m_ach_decline_isValid = ::OpenAPI::fromJsonValue(m_ach_decline, json[QString("ach_decline")]);
    m_ach_decline_isSet = !json[QString("ach_decline")].isNull() && m_ach_decline_isValid;

    m_card_decline_isValid = ::OpenAPI::fromJsonValue(m_card_decline, json[QString("card_decline")]);
    m_card_decline_isSet = !json[QString("card_decline")].isNull() && m_card_decline_isValid;

    m_card_route_decline_isValid = ::OpenAPI::fromJsonValue(m_card_route_decline, json[QString("card_route_decline")]);
    m_card_route_decline_isSet = !json[QString("card_route_decline")].isNull() && m_card_route_decline_isValid;

    m_category_isValid = ::OpenAPI::fromJsonValue(m_category, json[QString("category")]);
    m_category_isSet = !json[QString("category")].isNull() && m_category_isValid;

    m_check_decline_isValid = ::OpenAPI::fromJsonValue(m_check_decline, json[QString("check_decline")]);
    m_check_decline_isSet = !json[QString("check_decline")].isNull() && m_check_decline_isValid;

    m_inbound_real_time_payments_transfer_decline_isValid = ::OpenAPI::fromJsonValue(m_inbound_real_time_payments_transfer_decline, json[QString("inbound_real_time_payments_transfer_decline")]);
    m_inbound_real_time_payments_transfer_decline_isSet = !json[QString("inbound_real_time_payments_transfer_decline")].isNull() && m_inbound_real_time_payments_transfer_decline_isValid;

    m_international_ach_decline_isValid = ::OpenAPI::fromJsonValue(m_international_ach_decline, json[QString("international_ach_decline")]);
    m_international_ach_decline_isSet = !json[QString("international_ach_decline")].isNull() && m_international_ach_decline_isValid;
}

QString OAIDeclined_Transaction_Source::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDeclined_Transaction_Source::asJsonObject() const {
    QJsonObject obj;
    if (m_ach_decline.isSet()) {
        obj.insert(QString("ach_decline"), ::OpenAPI::toJsonValue(m_ach_decline));
    }
    if (m_card_decline.isSet()) {
        obj.insert(QString("card_decline"), ::OpenAPI::toJsonValue(m_card_decline));
    }
    if (m_card_route_decline.isSet()) {
        obj.insert(QString("card_route_decline"), ::OpenAPI::toJsonValue(m_card_route_decline));
    }
    if (m_category_isSet) {
        obj.insert(QString("category"), ::OpenAPI::toJsonValue(m_category));
    }
    if (m_check_decline.isSet()) {
        obj.insert(QString("check_decline"), ::OpenAPI::toJsonValue(m_check_decline));
    }
    if (m_inbound_real_time_payments_transfer_decline.isSet()) {
        obj.insert(QString("inbound_real_time_payments_transfer_decline"), ::OpenAPI::toJsonValue(m_inbound_real_time_payments_transfer_decline));
    }
    if (m_international_ach_decline.isSet()) {
        obj.insert(QString("international_ach_decline"), ::OpenAPI::toJsonValue(m_international_ach_decline));
    }
    return obj;
}

OAIACH_Decline OAIDeclined_Transaction_Source::getAchDecline() const {
    return m_ach_decline;
}
void OAIDeclined_Transaction_Source::setAchDecline(const OAIACH_Decline &ach_decline) {
    m_ach_decline = ach_decline;
    m_ach_decline_isSet = true;
}

bool OAIDeclined_Transaction_Source::is_ach_decline_Set() const{
    return m_ach_decline_isSet;
}

bool OAIDeclined_Transaction_Source::is_ach_decline_Valid() const{
    return m_ach_decline_isValid;
}

OAICard_Decline OAIDeclined_Transaction_Source::getCardDecline() const {
    return m_card_decline;
}
void OAIDeclined_Transaction_Source::setCardDecline(const OAICard_Decline &card_decline) {
    m_card_decline = card_decline;
    m_card_decline_isSet = true;
}

bool OAIDeclined_Transaction_Source::is_card_decline_Set() const{
    return m_card_decline_isSet;
}

bool OAIDeclined_Transaction_Source::is_card_decline_Valid() const{
    return m_card_decline_isValid;
}

OAIDeprecated_Card_Decline OAIDeclined_Transaction_Source::getCardRouteDecline() const {
    return m_card_route_decline;
}
void OAIDeclined_Transaction_Source::setCardRouteDecline(const OAIDeprecated_Card_Decline &card_route_decline) {
    m_card_route_decline = card_route_decline;
    m_card_route_decline_isSet = true;
}

bool OAIDeclined_Transaction_Source::is_card_route_decline_Set() const{
    return m_card_route_decline_isSet;
}

bool OAIDeclined_Transaction_Source::is_card_route_decline_Valid() const{
    return m_card_route_decline_isValid;
}

QString OAIDeclined_Transaction_Source::getCategory() const {
    return m_category;
}
void OAIDeclined_Transaction_Source::setCategory(const QString &category) {
    m_category = category;
    m_category_isSet = true;
}

bool OAIDeclined_Transaction_Source::is_category_Set() const{
    return m_category_isSet;
}

bool OAIDeclined_Transaction_Source::is_category_Valid() const{
    return m_category_isValid;
}

OAICheck_Decline OAIDeclined_Transaction_Source::getCheckDecline() const {
    return m_check_decline;
}
void OAIDeclined_Transaction_Source::setCheckDecline(const OAICheck_Decline &check_decline) {
    m_check_decline = check_decline;
    m_check_decline_isSet = true;
}

bool OAIDeclined_Transaction_Source::is_check_decline_Set() const{
    return m_check_decline_isSet;
}

bool OAIDeclined_Transaction_Source::is_check_decline_Valid() const{
    return m_check_decline_isValid;
}

OAIInbound_Real_Time_Payments_Transfer_Decline OAIDeclined_Transaction_Source::getInboundRealTimePaymentsTransferDecline() const {
    return m_inbound_real_time_payments_transfer_decline;
}
void OAIDeclined_Transaction_Source::setInboundRealTimePaymentsTransferDecline(const OAIInbound_Real_Time_Payments_Transfer_Decline &inbound_real_time_payments_transfer_decline) {
    m_inbound_real_time_payments_transfer_decline = inbound_real_time_payments_transfer_decline;
    m_inbound_real_time_payments_transfer_decline_isSet = true;
}

bool OAIDeclined_Transaction_Source::is_inbound_real_time_payments_transfer_decline_Set() const{
    return m_inbound_real_time_payments_transfer_decline_isSet;
}

bool OAIDeclined_Transaction_Source::is_inbound_real_time_payments_transfer_decline_Valid() const{
    return m_inbound_real_time_payments_transfer_decline_isValid;
}

OAIInternational_ACH_Decline OAIDeclined_Transaction_Source::getInternationalAchDecline() const {
    return m_international_ach_decline;
}
void OAIDeclined_Transaction_Source::setInternationalAchDecline(const OAIInternational_ACH_Decline &international_ach_decline) {
    m_international_ach_decline = international_ach_decline;
    m_international_ach_decline_isSet = true;
}

bool OAIDeclined_Transaction_Source::is_international_ach_decline_Set() const{
    return m_international_ach_decline_isSet;
}

bool OAIDeclined_Transaction_Source::is_international_ach_decline_Valid() const{
    return m_international_ach_decline_isValid;
}

bool OAIDeclined_Transaction_Source::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_ach_decline.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_card_decline.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_card_route_decline.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_category_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_check_decline.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_inbound_real_time_payments_transfer_decline.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_international_ach_decline.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDeclined_Transaction_Source::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_ach_decline_isValid && m_card_decline_isValid && m_card_route_decline_isValid && m_category_isValid && m_check_decline_isValid && m_inbound_real_time_payments_transfer_decline_isValid && m_international_ach_decline_isValid && true;
}

} // namespace OpenAPI
