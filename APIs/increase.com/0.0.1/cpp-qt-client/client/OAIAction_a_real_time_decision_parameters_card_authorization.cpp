/**
 * Increase API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAction_a_real_time_decision_parameters_card_authorization.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAction_a_real_time_decision_parameters_card_authorization::OAIAction_a_real_time_decision_parameters_card_authorization(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAction_a_real_time_decision_parameters_card_authorization::OAIAction_a_real_time_decision_parameters_card_authorization() {
    this->initializeModel();
}

OAIAction_a_real_time_decision_parameters_card_authorization::~OAIAction_a_real_time_decision_parameters_card_authorization() {}

void OAIAction_a_real_time_decision_parameters_card_authorization::initializeModel() {

    m_decision_isSet = false;
    m_decision_isValid = false;
}

void OAIAction_a_real_time_decision_parameters_card_authorization::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAction_a_real_time_decision_parameters_card_authorization::fromJsonObject(QJsonObject json) {

    m_decision_isValid = ::OpenAPI::fromJsonValue(m_decision, json[QString("decision")]);
    m_decision_isSet = !json[QString("decision")].isNull() && m_decision_isValid;
}

QString OAIAction_a_real_time_decision_parameters_card_authorization::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAction_a_real_time_decision_parameters_card_authorization::asJsonObject() const {
    QJsonObject obj;
    if (m_decision_isSet) {
        obj.insert(QString("decision"), ::OpenAPI::toJsonValue(m_decision));
    }
    return obj;
}

QString OAIAction_a_real_time_decision_parameters_card_authorization::getDecision() const {
    return m_decision;
}
void OAIAction_a_real_time_decision_parameters_card_authorization::setDecision(const QString &decision) {
    m_decision = decision;
    m_decision_isSet = true;
}

bool OAIAction_a_real_time_decision_parameters_card_authorization::is_decision_Set() const{
    return m_decision_isSet;
}

bool OAIAction_a_real_time_decision_parameters_card_authorization::is_decision_Valid() const{
    return m_decision_isValid;
}

bool OAIAction_a_real_time_decision_parameters_card_authorization::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_decision_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAction_a_real_time_decision_parameters_card_authorization::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_decision_isValid && true;
}

} // namespace OpenAPI
