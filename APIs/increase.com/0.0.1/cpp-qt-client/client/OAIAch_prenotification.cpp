/**
 * Increase API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAch_prenotification.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAch_prenotification::OAIAch_prenotification(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAch_prenotification::OAIAch_prenotification() {
    this->initializeModel();
}

OAIAch_prenotification::~OAIAch_prenotification() {}

void OAIAch_prenotification::initializeModel() {

    m_account_number_isSet = false;
    m_account_number_isValid = false;

    m_addendum_isSet = false;
    m_addendum_isValid = false;

    m_company_descriptive_date_isSet = false;
    m_company_descriptive_date_isValid = false;

    m_company_discretionary_data_isSet = false;
    m_company_discretionary_data_isValid = false;

    m_company_entry_description_isSet = false;
    m_company_entry_description_isValid = false;

    m_company_name_isSet = false;
    m_company_name_isValid = false;

    m_created_at_isSet = false;
    m_created_at_isValid = false;

    m_credit_debit_indicator_isSet = false;
    m_credit_debit_indicator_isValid = false;

    m_effective_date_isSet = false;
    m_effective_date_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_prenotification_return_isSet = false;
    m_prenotification_return_isValid = false;

    m_routing_number_isSet = false;
    m_routing_number_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAIAch_prenotification::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAch_prenotification::fromJsonObject(QJsonObject json) {

    m_account_number_isValid = ::OpenAPI::fromJsonValue(m_account_number, json[QString("account_number")]);
    m_account_number_isSet = !json[QString("account_number")].isNull() && m_account_number_isValid;

    m_addendum_isValid = ::OpenAPI::fromJsonValue(m_addendum, json[QString("addendum")]);
    m_addendum_isSet = !json[QString("addendum")].isNull() && m_addendum_isValid;

    m_company_descriptive_date_isValid = ::OpenAPI::fromJsonValue(m_company_descriptive_date, json[QString("company_descriptive_date")]);
    m_company_descriptive_date_isSet = !json[QString("company_descriptive_date")].isNull() && m_company_descriptive_date_isValid;

    m_company_discretionary_data_isValid = ::OpenAPI::fromJsonValue(m_company_discretionary_data, json[QString("company_discretionary_data")]);
    m_company_discretionary_data_isSet = !json[QString("company_discretionary_data")].isNull() && m_company_discretionary_data_isValid;

    m_company_entry_description_isValid = ::OpenAPI::fromJsonValue(m_company_entry_description, json[QString("company_entry_description")]);
    m_company_entry_description_isSet = !json[QString("company_entry_description")].isNull() && m_company_entry_description_isValid;

    m_company_name_isValid = ::OpenAPI::fromJsonValue(m_company_name, json[QString("company_name")]);
    m_company_name_isSet = !json[QString("company_name")].isNull() && m_company_name_isValid;

    m_created_at_isValid = ::OpenAPI::fromJsonValue(m_created_at, json[QString("created_at")]);
    m_created_at_isSet = !json[QString("created_at")].isNull() && m_created_at_isValid;

    m_credit_debit_indicator_isValid = ::OpenAPI::fromJsonValue(m_credit_debit_indicator, json[QString("credit_debit_indicator")]);
    m_credit_debit_indicator_isSet = !json[QString("credit_debit_indicator")].isNull() && m_credit_debit_indicator_isValid;

    m_effective_date_isValid = ::OpenAPI::fromJsonValue(m_effective_date, json[QString("effective_date")]);
    m_effective_date_isSet = !json[QString("effective_date")].isNull() && m_effective_date_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_prenotification_return_isValid = ::OpenAPI::fromJsonValue(m_prenotification_return, json[QString("prenotification_return")]);
    m_prenotification_return_isSet = !json[QString("prenotification_return")].isNull() && m_prenotification_return_isValid;

    m_routing_number_isValid = ::OpenAPI::fromJsonValue(m_routing_number, json[QString("routing_number")]);
    m_routing_number_isSet = !json[QString("routing_number")].isNull() && m_routing_number_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;
}

QString OAIAch_prenotification::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAch_prenotification::asJsonObject() const {
    QJsonObject obj;
    if (m_account_number_isSet) {
        obj.insert(QString("account_number"), ::OpenAPI::toJsonValue(m_account_number));
    }
    if (m_addendum_isSet) {
        obj.insert(QString("addendum"), ::OpenAPI::toJsonValue(m_addendum));
    }
    if (m_company_descriptive_date_isSet) {
        obj.insert(QString("company_descriptive_date"), ::OpenAPI::toJsonValue(m_company_descriptive_date));
    }
    if (m_company_discretionary_data_isSet) {
        obj.insert(QString("company_discretionary_data"), ::OpenAPI::toJsonValue(m_company_discretionary_data));
    }
    if (m_company_entry_description_isSet) {
        obj.insert(QString("company_entry_description"), ::OpenAPI::toJsonValue(m_company_entry_description));
    }
    if (m_company_name_isSet) {
        obj.insert(QString("company_name"), ::OpenAPI::toJsonValue(m_company_name));
    }
    if (m_created_at_isSet) {
        obj.insert(QString("created_at"), ::OpenAPI::toJsonValue(m_created_at));
    }
    if (m_credit_debit_indicator_isSet) {
        obj.insert(QString("credit_debit_indicator"), ::OpenAPI::toJsonValue(m_credit_debit_indicator));
    }
    if (m_effective_date_isSet) {
        obj.insert(QString("effective_date"), ::OpenAPI::toJsonValue(m_effective_date));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_prenotification_return.isSet()) {
        obj.insert(QString("prenotification_return"), ::OpenAPI::toJsonValue(m_prenotification_return));
    }
    if (m_routing_number_isSet) {
        obj.insert(QString("routing_number"), ::OpenAPI::toJsonValue(m_routing_number));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

QString OAIAch_prenotification::getAccountNumber() const {
    return m_account_number;
}
void OAIAch_prenotification::setAccountNumber(const QString &account_number) {
    m_account_number = account_number;
    m_account_number_isSet = true;
}

bool OAIAch_prenotification::is_account_number_Set() const{
    return m_account_number_isSet;
}

bool OAIAch_prenotification::is_account_number_Valid() const{
    return m_account_number_isValid;
}

QString OAIAch_prenotification::getAddendum() const {
    return m_addendum;
}
void OAIAch_prenotification::setAddendum(const QString &addendum) {
    m_addendum = addendum;
    m_addendum_isSet = true;
}

bool OAIAch_prenotification::is_addendum_Set() const{
    return m_addendum_isSet;
}

bool OAIAch_prenotification::is_addendum_Valid() const{
    return m_addendum_isValid;
}

QString OAIAch_prenotification::getCompanyDescriptiveDate() const {
    return m_company_descriptive_date;
}
void OAIAch_prenotification::setCompanyDescriptiveDate(const QString &company_descriptive_date) {
    m_company_descriptive_date = company_descriptive_date;
    m_company_descriptive_date_isSet = true;
}

bool OAIAch_prenotification::is_company_descriptive_date_Set() const{
    return m_company_descriptive_date_isSet;
}

bool OAIAch_prenotification::is_company_descriptive_date_Valid() const{
    return m_company_descriptive_date_isValid;
}

QString OAIAch_prenotification::getCompanyDiscretionaryData() const {
    return m_company_discretionary_data;
}
void OAIAch_prenotification::setCompanyDiscretionaryData(const QString &company_discretionary_data) {
    m_company_discretionary_data = company_discretionary_data;
    m_company_discretionary_data_isSet = true;
}

bool OAIAch_prenotification::is_company_discretionary_data_Set() const{
    return m_company_discretionary_data_isSet;
}

bool OAIAch_prenotification::is_company_discretionary_data_Valid() const{
    return m_company_discretionary_data_isValid;
}

QString OAIAch_prenotification::getCompanyEntryDescription() const {
    return m_company_entry_description;
}
void OAIAch_prenotification::setCompanyEntryDescription(const QString &company_entry_description) {
    m_company_entry_description = company_entry_description;
    m_company_entry_description_isSet = true;
}

bool OAIAch_prenotification::is_company_entry_description_Set() const{
    return m_company_entry_description_isSet;
}

bool OAIAch_prenotification::is_company_entry_description_Valid() const{
    return m_company_entry_description_isValid;
}

QString OAIAch_prenotification::getCompanyName() const {
    return m_company_name;
}
void OAIAch_prenotification::setCompanyName(const QString &company_name) {
    m_company_name = company_name;
    m_company_name_isSet = true;
}

bool OAIAch_prenotification::is_company_name_Set() const{
    return m_company_name_isSet;
}

bool OAIAch_prenotification::is_company_name_Valid() const{
    return m_company_name_isValid;
}

QDateTime OAIAch_prenotification::getCreatedAt() const {
    return m_created_at;
}
void OAIAch_prenotification::setCreatedAt(const QDateTime &created_at) {
    m_created_at = created_at;
    m_created_at_isSet = true;
}

bool OAIAch_prenotification::is_created_at_Set() const{
    return m_created_at_isSet;
}

bool OAIAch_prenotification::is_created_at_Valid() const{
    return m_created_at_isValid;
}

QString OAIAch_prenotification::getCreditDebitIndicator() const {
    return m_credit_debit_indicator;
}
void OAIAch_prenotification::setCreditDebitIndicator(const QString &credit_debit_indicator) {
    m_credit_debit_indicator = credit_debit_indicator;
    m_credit_debit_indicator_isSet = true;
}

bool OAIAch_prenotification::is_credit_debit_indicator_Set() const{
    return m_credit_debit_indicator_isSet;
}

bool OAIAch_prenotification::is_credit_debit_indicator_Valid() const{
    return m_credit_debit_indicator_isValid;
}

QDateTime OAIAch_prenotification::getEffectiveDate() const {
    return m_effective_date;
}
void OAIAch_prenotification::setEffectiveDate(const QDateTime &effective_date) {
    m_effective_date = effective_date;
    m_effective_date_isSet = true;
}

bool OAIAch_prenotification::is_effective_date_Set() const{
    return m_effective_date_isSet;
}

bool OAIAch_prenotification::is_effective_date_Valid() const{
    return m_effective_date_isValid;
}

QString OAIAch_prenotification::getId() const {
    return m_id;
}
void OAIAch_prenotification::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIAch_prenotification::is_id_Set() const{
    return m_id_isSet;
}

bool OAIAch_prenotification::is_id_Valid() const{
    return m_id_isValid;
}

OAIACH_Prenotification_Return OAIAch_prenotification::getPrenotificationReturn() const {
    return m_prenotification_return;
}
void OAIAch_prenotification::setPrenotificationReturn(const OAIACH_Prenotification_Return &prenotification_return) {
    m_prenotification_return = prenotification_return;
    m_prenotification_return_isSet = true;
}

bool OAIAch_prenotification::is_prenotification_return_Set() const{
    return m_prenotification_return_isSet;
}

bool OAIAch_prenotification::is_prenotification_return_Valid() const{
    return m_prenotification_return_isValid;
}

QString OAIAch_prenotification::getRoutingNumber() const {
    return m_routing_number;
}
void OAIAch_prenotification::setRoutingNumber(const QString &routing_number) {
    m_routing_number = routing_number;
    m_routing_number_isSet = true;
}

bool OAIAch_prenotification::is_routing_number_Set() const{
    return m_routing_number_isSet;
}

bool OAIAch_prenotification::is_routing_number_Valid() const{
    return m_routing_number_isValid;
}

QString OAIAch_prenotification::getStatus() const {
    return m_status;
}
void OAIAch_prenotification::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIAch_prenotification::is_status_Set() const{
    return m_status_isSet;
}

bool OAIAch_prenotification::is_status_Valid() const{
    return m_status_isValid;
}

QString OAIAch_prenotification::getType() const {
    return m_type;
}
void OAIAch_prenotification::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIAch_prenotification::is_type_Set() const{
    return m_type_isSet;
}

bool OAIAch_prenotification::is_type_Valid() const{
    return m_type_isValid;
}

bool OAIAch_prenotification::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_addendum_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_company_descriptive_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_company_discretionary_data_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_company_entry_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_company_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_credit_debit_indicator_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_effective_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_prenotification_return.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_routing_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAch_prenotification::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_account_number_isValid && m_addendum_isValid && m_company_descriptive_date_isValid && m_company_discretionary_data_isValid && m_company_entry_description_isValid && m_company_name_isValid && m_created_at_isValid && m_credit_debit_indicator_isValid && m_effective_date_isValid && m_id_isValid && m_prenotification_return_isValid && m_routing_number_isValid && m_status_isValid && m_type_isValid && true;
}

} // namespace OpenAPI
