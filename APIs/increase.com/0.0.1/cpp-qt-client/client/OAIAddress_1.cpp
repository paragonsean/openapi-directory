/**
 * Increase API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAddress_1.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAddress_1::OAIAddress_1(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAddress_1::OAIAddress_1() {
    this->initializeModel();
}

OAIAddress_1::~OAIAddress_1() {}

void OAIAddress_1::initializeModel() {

    m_city_isSet = false;
    m_city_isValid = false;

    m_line1_isSet = false;
    m_line1_isValid = false;

    m_line2_isSet = false;
    m_line2_isValid = false;

    m_state_isSet = false;
    m_state_isValid = false;

    m_zip_isSet = false;
    m_zip_isValid = false;
}

void OAIAddress_1::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAddress_1::fromJsonObject(QJsonObject json) {

    m_city_isValid = ::OpenAPI::fromJsonValue(m_city, json[QString("city")]);
    m_city_isSet = !json[QString("city")].isNull() && m_city_isValid;

    m_line1_isValid = ::OpenAPI::fromJsonValue(m_line1, json[QString("line1")]);
    m_line1_isSet = !json[QString("line1")].isNull() && m_line1_isValid;

    m_line2_isValid = ::OpenAPI::fromJsonValue(m_line2, json[QString("line2")]);
    m_line2_isSet = !json[QString("line2")].isNull() && m_line2_isValid;

    m_state_isValid = ::OpenAPI::fromJsonValue(m_state, json[QString("state")]);
    m_state_isSet = !json[QString("state")].isNull() && m_state_isValid;

    m_zip_isValid = ::OpenAPI::fromJsonValue(m_zip, json[QString("zip")]);
    m_zip_isSet = !json[QString("zip")].isNull() && m_zip_isValid;
}

QString OAIAddress_1::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAddress_1::asJsonObject() const {
    QJsonObject obj;
    if (m_city_isSet) {
        obj.insert(QString("city"), ::OpenAPI::toJsonValue(m_city));
    }
    if (m_line1_isSet) {
        obj.insert(QString("line1"), ::OpenAPI::toJsonValue(m_line1));
    }
    if (m_line2_isSet) {
        obj.insert(QString("line2"), ::OpenAPI::toJsonValue(m_line2));
    }
    if (m_state_isSet) {
        obj.insert(QString("state"), ::OpenAPI::toJsonValue(m_state));
    }
    if (m_zip_isSet) {
        obj.insert(QString("zip"), ::OpenAPI::toJsonValue(m_zip));
    }
    return obj;
}

QString OAIAddress_1::getCity() const {
    return m_city;
}
void OAIAddress_1::setCity(const QString &city) {
    m_city = city;
    m_city_isSet = true;
}

bool OAIAddress_1::is_city_Set() const{
    return m_city_isSet;
}

bool OAIAddress_1::is_city_Valid() const{
    return m_city_isValid;
}

QString OAIAddress_1::getLine1() const {
    return m_line1;
}
void OAIAddress_1::setLine1(const QString &line1) {
    m_line1 = line1;
    m_line1_isSet = true;
}

bool OAIAddress_1::is_line1_Set() const{
    return m_line1_isSet;
}

bool OAIAddress_1::is_line1_Valid() const{
    return m_line1_isValid;
}

QString OAIAddress_1::getLine2() const {
    return m_line2;
}
void OAIAddress_1::setLine2(const QString &line2) {
    m_line2 = line2;
    m_line2_isSet = true;
}

bool OAIAddress_1::is_line2_Set() const{
    return m_line2_isSet;
}

bool OAIAddress_1::is_line2_Valid() const{
    return m_line2_isValid;
}

QString OAIAddress_1::getState() const {
    return m_state;
}
void OAIAddress_1::setState(const QString &state) {
    m_state = state;
    m_state_isSet = true;
}

bool OAIAddress_1::is_state_Set() const{
    return m_state_isSet;
}

bool OAIAddress_1::is_state_Valid() const{
    return m_state_isValid;
}

QString OAIAddress_1::getZip() const {
    return m_zip;
}
void OAIAddress_1::setZip(const QString &zip) {
    m_zip = zip;
    m_zip_isSet = true;
}

bool OAIAddress_1::is_zip_Set() const{
    return m_zip_isSet;
}

bool OAIAddress_1::is_zip_Valid() const{
    return m_zip_isValid;
}

bool OAIAddress_1::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_city_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_line1_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_line2_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_zip_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAddress_1::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_city_isValid && m_line1_isValid && m_line2_isValid && m_state_isValid && m_zip_isValid && true;
}

} // namespace OpenAPI
