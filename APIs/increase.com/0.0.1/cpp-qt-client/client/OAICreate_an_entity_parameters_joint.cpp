/**
 * Increase API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreate_an_entity_parameters_joint.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreate_an_entity_parameters_joint::OAICreate_an_entity_parameters_joint(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreate_an_entity_parameters_joint::OAICreate_an_entity_parameters_joint() {
    this->initializeModel();
}

OAICreate_an_entity_parameters_joint::~OAICreate_an_entity_parameters_joint() {}

void OAICreate_an_entity_parameters_joint::initializeModel() {

    m_individuals_isSet = false;
    m_individuals_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;
}

void OAICreate_an_entity_parameters_joint::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreate_an_entity_parameters_joint::fromJsonObject(QJsonObject json) {

    m_individuals_isValid = ::OpenAPI::fromJsonValue(m_individuals, json[QString("individuals")]);
    m_individuals_isSet = !json[QString("individuals")].isNull() && m_individuals_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;
}

QString OAICreate_an_entity_parameters_joint::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreate_an_entity_parameters_joint::asJsonObject() const {
    QJsonObject obj;
    if (m_individuals.size() > 0) {
        obj.insert(QString("individuals"), ::OpenAPI::toJsonValue(m_individuals));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    return obj;
}

QList<OAICreate_an_entity_parameters_joint_individuals_inner> OAICreate_an_entity_parameters_joint::getIndividuals() const {
    return m_individuals;
}
void OAICreate_an_entity_parameters_joint::setIndividuals(const QList<OAICreate_an_entity_parameters_joint_individuals_inner> &individuals) {
    m_individuals = individuals;
    m_individuals_isSet = true;
}

bool OAICreate_an_entity_parameters_joint::is_individuals_Set() const{
    return m_individuals_isSet;
}

bool OAICreate_an_entity_parameters_joint::is_individuals_Valid() const{
    return m_individuals_isValid;
}

QString OAICreate_an_entity_parameters_joint::getName() const {
    return m_name;
}
void OAICreate_an_entity_parameters_joint::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAICreate_an_entity_parameters_joint::is_name_Set() const{
    return m_name_isSet;
}

bool OAICreate_an_entity_parameters_joint::is_name_Valid() const{
    return m_name_isValid;
}

bool OAICreate_an_entity_parameters_joint::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_individuals.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreate_an_entity_parameters_joint::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_individuals_isValid && true;
}

} // namespace OpenAPI
