/**
 * Increase API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreate_an_ach_transfer_parameters.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreate_an_ach_transfer_parameters::OAICreate_an_ach_transfer_parameters(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreate_an_ach_transfer_parameters::OAICreate_an_ach_transfer_parameters() {
    this->initializeModel();
}

OAICreate_an_ach_transfer_parameters::~OAICreate_an_ach_transfer_parameters() {}

void OAICreate_an_ach_transfer_parameters::initializeModel() {

    m_account_id_isSet = false;
    m_account_id_isValid = false;

    m_account_number_isSet = false;
    m_account_number_isValid = false;

    m_addendum_isSet = false;
    m_addendum_isValid = false;

    m_amount_isSet = false;
    m_amount_isValid = false;

    m_company_descriptive_date_isSet = false;
    m_company_descriptive_date_isValid = false;

    m_company_discretionary_data_isSet = false;
    m_company_discretionary_data_isValid = false;

    m_company_entry_description_isSet = false;
    m_company_entry_description_isValid = false;

    m_company_name_isSet = false;
    m_company_name_isValid = false;

    m_effective_date_isSet = false;
    m_effective_date_isValid = false;

    m_external_account_id_isSet = false;
    m_external_account_id_isValid = false;

    m_funding_isSet = false;
    m_funding_isValid = false;

    m_individual_id_isSet = false;
    m_individual_id_isValid = false;

    m_individual_name_isSet = false;
    m_individual_name_isValid = false;

    m_require_approval_isSet = false;
    m_require_approval_isValid = false;

    m_routing_number_isSet = false;
    m_routing_number_isValid = false;

    m_standard_entry_class_code_isSet = false;
    m_standard_entry_class_code_isValid = false;

    m_statement_descriptor_isSet = false;
    m_statement_descriptor_isValid = false;
}

void OAICreate_an_ach_transfer_parameters::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreate_an_ach_transfer_parameters::fromJsonObject(QJsonObject json) {

    m_account_id_isValid = ::OpenAPI::fromJsonValue(m_account_id, json[QString("account_id")]);
    m_account_id_isSet = !json[QString("account_id")].isNull() && m_account_id_isValid;

    m_account_number_isValid = ::OpenAPI::fromJsonValue(m_account_number, json[QString("account_number")]);
    m_account_number_isSet = !json[QString("account_number")].isNull() && m_account_number_isValid;

    m_addendum_isValid = ::OpenAPI::fromJsonValue(m_addendum, json[QString("addendum")]);
    m_addendum_isSet = !json[QString("addendum")].isNull() && m_addendum_isValid;

    m_amount_isValid = ::OpenAPI::fromJsonValue(m_amount, json[QString("amount")]);
    m_amount_isSet = !json[QString("amount")].isNull() && m_amount_isValid;

    m_company_descriptive_date_isValid = ::OpenAPI::fromJsonValue(m_company_descriptive_date, json[QString("company_descriptive_date")]);
    m_company_descriptive_date_isSet = !json[QString("company_descriptive_date")].isNull() && m_company_descriptive_date_isValid;

    m_company_discretionary_data_isValid = ::OpenAPI::fromJsonValue(m_company_discretionary_data, json[QString("company_discretionary_data")]);
    m_company_discretionary_data_isSet = !json[QString("company_discretionary_data")].isNull() && m_company_discretionary_data_isValid;

    m_company_entry_description_isValid = ::OpenAPI::fromJsonValue(m_company_entry_description, json[QString("company_entry_description")]);
    m_company_entry_description_isSet = !json[QString("company_entry_description")].isNull() && m_company_entry_description_isValid;

    m_company_name_isValid = ::OpenAPI::fromJsonValue(m_company_name, json[QString("company_name")]);
    m_company_name_isSet = !json[QString("company_name")].isNull() && m_company_name_isValid;

    m_effective_date_isValid = ::OpenAPI::fromJsonValue(m_effective_date, json[QString("effective_date")]);
    m_effective_date_isSet = !json[QString("effective_date")].isNull() && m_effective_date_isValid;

    m_external_account_id_isValid = ::OpenAPI::fromJsonValue(m_external_account_id, json[QString("external_account_id")]);
    m_external_account_id_isSet = !json[QString("external_account_id")].isNull() && m_external_account_id_isValid;

    m_funding_isValid = ::OpenAPI::fromJsonValue(m_funding, json[QString("funding")]);
    m_funding_isSet = !json[QString("funding")].isNull() && m_funding_isValid;

    m_individual_id_isValid = ::OpenAPI::fromJsonValue(m_individual_id, json[QString("individual_id")]);
    m_individual_id_isSet = !json[QString("individual_id")].isNull() && m_individual_id_isValid;

    m_individual_name_isValid = ::OpenAPI::fromJsonValue(m_individual_name, json[QString("individual_name")]);
    m_individual_name_isSet = !json[QString("individual_name")].isNull() && m_individual_name_isValid;

    m_require_approval_isValid = ::OpenAPI::fromJsonValue(m_require_approval, json[QString("require_approval")]);
    m_require_approval_isSet = !json[QString("require_approval")].isNull() && m_require_approval_isValid;

    m_routing_number_isValid = ::OpenAPI::fromJsonValue(m_routing_number, json[QString("routing_number")]);
    m_routing_number_isSet = !json[QString("routing_number")].isNull() && m_routing_number_isValid;

    m_standard_entry_class_code_isValid = ::OpenAPI::fromJsonValue(m_standard_entry_class_code, json[QString("standard_entry_class_code")]);
    m_standard_entry_class_code_isSet = !json[QString("standard_entry_class_code")].isNull() && m_standard_entry_class_code_isValid;

    m_statement_descriptor_isValid = ::OpenAPI::fromJsonValue(m_statement_descriptor, json[QString("statement_descriptor")]);
    m_statement_descriptor_isSet = !json[QString("statement_descriptor")].isNull() && m_statement_descriptor_isValid;
}

QString OAICreate_an_ach_transfer_parameters::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreate_an_ach_transfer_parameters::asJsonObject() const {
    QJsonObject obj;
    if (m_account_id_isSet) {
        obj.insert(QString("account_id"), ::OpenAPI::toJsonValue(m_account_id));
    }
    if (m_account_number_isSet) {
        obj.insert(QString("account_number"), ::OpenAPI::toJsonValue(m_account_number));
    }
    if (m_addendum_isSet) {
        obj.insert(QString("addendum"), ::OpenAPI::toJsonValue(m_addendum));
    }
    if (m_amount_isSet) {
        obj.insert(QString("amount"), ::OpenAPI::toJsonValue(m_amount));
    }
    if (m_company_descriptive_date_isSet) {
        obj.insert(QString("company_descriptive_date"), ::OpenAPI::toJsonValue(m_company_descriptive_date));
    }
    if (m_company_discretionary_data_isSet) {
        obj.insert(QString("company_discretionary_data"), ::OpenAPI::toJsonValue(m_company_discretionary_data));
    }
    if (m_company_entry_description_isSet) {
        obj.insert(QString("company_entry_description"), ::OpenAPI::toJsonValue(m_company_entry_description));
    }
    if (m_company_name_isSet) {
        obj.insert(QString("company_name"), ::OpenAPI::toJsonValue(m_company_name));
    }
    if (m_effective_date_isSet) {
        obj.insert(QString("effective_date"), ::OpenAPI::toJsonValue(m_effective_date));
    }
    if (m_external_account_id_isSet) {
        obj.insert(QString("external_account_id"), ::OpenAPI::toJsonValue(m_external_account_id));
    }
    if (m_funding_isSet) {
        obj.insert(QString("funding"), ::OpenAPI::toJsonValue(m_funding));
    }
    if (m_individual_id_isSet) {
        obj.insert(QString("individual_id"), ::OpenAPI::toJsonValue(m_individual_id));
    }
    if (m_individual_name_isSet) {
        obj.insert(QString("individual_name"), ::OpenAPI::toJsonValue(m_individual_name));
    }
    if (m_require_approval_isSet) {
        obj.insert(QString("require_approval"), ::OpenAPI::toJsonValue(m_require_approval));
    }
    if (m_routing_number_isSet) {
        obj.insert(QString("routing_number"), ::OpenAPI::toJsonValue(m_routing_number));
    }
    if (m_standard_entry_class_code_isSet) {
        obj.insert(QString("standard_entry_class_code"), ::OpenAPI::toJsonValue(m_standard_entry_class_code));
    }
    if (m_statement_descriptor_isSet) {
        obj.insert(QString("statement_descriptor"), ::OpenAPI::toJsonValue(m_statement_descriptor));
    }
    return obj;
}

QString OAICreate_an_ach_transfer_parameters::getAccountId() const {
    return m_account_id;
}
void OAICreate_an_ach_transfer_parameters::setAccountId(const QString &account_id) {
    m_account_id = account_id;
    m_account_id_isSet = true;
}

bool OAICreate_an_ach_transfer_parameters::is_account_id_Set() const{
    return m_account_id_isSet;
}

bool OAICreate_an_ach_transfer_parameters::is_account_id_Valid() const{
    return m_account_id_isValid;
}

QString OAICreate_an_ach_transfer_parameters::getAccountNumber() const {
    return m_account_number;
}
void OAICreate_an_ach_transfer_parameters::setAccountNumber(const QString &account_number) {
    m_account_number = account_number;
    m_account_number_isSet = true;
}

bool OAICreate_an_ach_transfer_parameters::is_account_number_Set() const{
    return m_account_number_isSet;
}

bool OAICreate_an_ach_transfer_parameters::is_account_number_Valid() const{
    return m_account_number_isValid;
}

QString OAICreate_an_ach_transfer_parameters::getAddendum() const {
    return m_addendum;
}
void OAICreate_an_ach_transfer_parameters::setAddendum(const QString &addendum) {
    m_addendum = addendum;
    m_addendum_isSet = true;
}

bool OAICreate_an_ach_transfer_parameters::is_addendum_Set() const{
    return m_addendum_isSet;
}

bool OAICreate_an_ach_transfer_parameters::is_addendum_Valid() const{
    return m_addendum_isValid;
}

qint32 OAICreate_an_ach_transfer_parameters::getAmount() const {
    return m_amount;
}
void OAICreate_an_ach_transfer_parameters::setAmount(const qint32 &amount) {
    m_amount = amount;
    m_amount_isSet = true;
}

bool OAICreate_an_ach_transfer_parameters::is_amount_Set() const{
    return m_amount_isSet;
}

bool OAICreate_an_ach_transfer_parameters::is_amount_Valid() const{
    return m_amount_isValid;
}

QString OAICreate_an_ach_transfer_parameters::getCompanyDescriptiveDate() const {
    return m_company_descriptive_date;
}
void OAICreate_an_ach_transfer_parameters::setCompanyDescriptiveDate(const QString &company_descriptive_date) {
    m_company_descriptive_date = company_descriptive_date;
    m_company_descriptive_date_isSet = true;
}

bool OAICreate_an_ach_transfer_parameters::is_company_descriptive_date_Set() const{
    return m_company_descriptive_date_isSet;
}

bool OAICreate_an_ach_transfer_parameters::is_company_descriptive_date_Valid() const{
    return m_company_descriptive_date_isValid;
}

QString OAICreate_an_ach_transfer_parameters::getCompanyDiscretionaryData() const {
    return m_company_discretionary_data;
}
void OAICreate_an_ach_transfer_parameters::setCompanyDiscretionaryData(const QString &company_discretionary_data) {
    m_company_discretionary_data = company_discretionary_data;
    m_company_discretionary_data_isSet = true;
}

bool OAICreate_an_ach_transfer_parameters::is_company_discretionary_data_Set() const{
    return m_company_discretionary_data_isSet;
}

bool OAICreate_an_ach_transfer_parameters::is_company_discretionary_data_Valid() const{
    return m_company_discretionary_data_isValid;
}

QString OAICreate_an_ach_transfer_parameters::getCompanyEntryDescription() const {
    return m_company_entry_description;
}
void OAICreate_an_ach_transfer_parameters::setCompanyEntryDescription(const QString &company_entry_description) {
    m_company_entry_description = company_entry_description;
    m_company_entry_description_isSet = true;
}

bool OAICreate_an_ach_transfer_parameters::is_company_entry_description_Set() const{
    return m_company_entry_description_isSet;
}

bool OAICreate_an_ach_transfer_parameters::is_company_entry_description_Valid() const{
    return m_company_entry_description_isValid;
}

QString OAICreate_an_ach_transfer_parameters::getCompanyName() const {
    return m_company_name;
}
void OAICreate_an_ach_transfer_parameters::setCompanyName(const QString &company_name) {
    m_company_name = company_name;
    m_company_name_isSet = true;
}

bool OAICreate_an_ach_transfer_parameters::is_company_name_Set() const{
    return m_company_name_isSet;
}

bool OAICreate_an_ach_transfer_parameters::is_company_name_Valid() const{
    return m_company_name_isValid;
}

QDate OAICreate_an_ach_transfer_parameters::getEffectiveDate() const {
    return m_effective_date;
}
void OAICreate_an_ach_transfer_parameters::setEffectiveDate(const QDate &effective_date) {
    m_effective_date = effective_date;
    m_effective_date_isSet = true;
}

bool OAICreate_an_ach_transfer_parameters::is_effective_date_Set() const{
    return m_effective_date_isSet;
}

bool OAICreate_an_ach_transfer_parameters::is_effective_date_Valid() const{
    return m_effective_date_isValid;
}

QString OAICreate_an_ach_transfer_parameters::getExternalAccountId() const {
    return m_external_account_id;
}
void OAICreate_an_ach_transfer_parameters::setExternalAccountId(const QString &external_account_id) {
    m_external_account_id = external_account_id;
    m_external_account_id_isSet = true;
}

bool OAICreate_an_ach_transfer_parameters::is_external_account_id_Set() const{
    return m_external_account_id_isSet;
}

bool OAICreate_an_ach_transfer_parameters::is_external_account_id_Valid() const{
    return m_external_account_id_isValid;
}

QString OAICreate_an_ach_transfer_parameters::getFunding() const {
    return m_funding;
}
void OAICreate_an_ach_transfer_parameters::setFunding(const QString &funding) {
    m_funding = funding;
    m_funding_isSet = true;
}

bool OAICreate_an_ach_transfer_parameters::is_funding_Set() const{
    return m_funding_isSet;
}

bool OAICreate_an_ach_transfer_parameters::is_funding_Valid() const{
    return m_funding_isValid;
}

QString OAICreate_an_ach_transfer_parameters::getIndividualId() const {
    return m_individual_id;
}
void OAICreate_an_ach_transfer_parameters::setIndividualId(const QString &individual_id) {
    m_individual_id = individual_id;
    m_individual_id_isSet = true;
}

bool OAICreate_an_ach_transfer_parameters::is_individual_id_Set() const{
    return m_individual_id_isSet;
}

bool OAICreate_an_ach_transfer_parameters::is_individual_id_Valid() const{
    return m_individual_id_isValid;
}

QString OAICreate_an_ach_transfer_parameters::getIndividualName() const {
    return m_individual_name;
}
void OAICreate_an_ach_transfer_parameters::setIndividualName(const QString &individual_name) {
    m_individual_name = individual_name;
    m_individual_name_isSet = true;
}

bool OAICreate_an_ach_transfer_parameters::is_individual_name_Set() const{
    return m_individual_name_isSet;
}

bool OAICreate_an_ach_transfer_parameters::is_individual_name_Valid() const{
    return m_individual_name_isValid;
}

bool OAICreate_an_ach_transfer_parameters::isRequireApproval() const {
    return m_require_approval;
}
void OAICreate_an_ach_transfer_parameters::setRequireApproval(const bool &require_approval) {
    m_require_approval = require_approval;
    m_require_approval_isSet = true;
}

bool OAICreate_an_ach_transfer_parameters::is_require_approval_Set() const{
    return m_require_approval_isSet;
}

bool OAICreate_an_ach_transfer_parameters::is_require_approval_Valid() const{
    return m_require_approval_isValid;
}

QString OAICreate_an_ach_transfer_parameters::getRoutingNumber() const {
    return m_routing_number;
}
void OAICreate_an_ach_transfer_parameters::setRoutingNumber(const QString &routing_number) {
    m_routing_number = routing_number;
    m_routing_number_isSet = true;
}

bool OAICreate_an_ach_transfer_parameters::is_routing_number_Set() const{
    return m_routing_number_isSet;
}

bool OAICreate_an_ach_transfer_parameters::is_routing_number_Valid() const{
    return m_routing_number_isValid;
}

QString OAICreate_an_ach_transfer_parameters::getStandardEntryClassCode() const {
    return m_standard_entry_class_code;
}
void OAICreate_an_ach_transfer_parameters::setStandardEntryClassCode(const QString &standard_entry_class_code) {
    m_standard_entry_class_code = standard_entry_class_code;
    m_standard_entry_class_code_isSet = true;
}

bool OAICreate_an_ach_transfer_parameters::is_standard_entry_class_code_Set() const{
    return m_standard_entry_class_code_isSet;
}

bool OAICreate_an_ach_transfer_parameters::is_standard_entry_class_code_Valid() const{
    return m_standard_entry_class_code_isValid;
}

QString OAICreate_an_ach_transfer_parameters::getStatementDescriptor() const {
    return m_statement_descriptor;
}
void OAICreate_an_ach_transfer_parameters::setStatementDescriptor(const QString &statement_descriptor) {
    m_statement_descriptor = statement_descriptor;
    m_statement_descriptor_isSet = true;
}

bool OAICreate_an_ach_transfer_parameters::is_statement_descriptor_Set() const{
    return m_statement_descriptor_isSet;
}

bool OAICreate_an_ach_transfer_parameters::is_statement_descriptor_Valid() const{
    return m_statement_descriptor_isValid;
}

bool OAICreate_an_ach_transfer_parameters::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_account_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_addendum_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_company_descriptive_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_company_discretionary_data_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_company_entry_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_company_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_effective_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_external_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_funding_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_individual_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_individual_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_require_approval_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_routing_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_standard_entry_class_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_statement_descriptor_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreate_an_ach_transfer_parameters::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_account_id_isValid && m_amount_isValid && m_statement_descriptor_isValid && true;
}

} // namespace OpenAPI
