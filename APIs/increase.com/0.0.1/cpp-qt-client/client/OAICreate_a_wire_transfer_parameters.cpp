/**
 * Increase API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreate_a_wire_transfer_parameters.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreate_a_wire_transfer_parameters::OAICreate_a_wire_transfer_parameters(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreate_a_wire_transfer_parameters::OAICreate_a_wire_transfer_parameters() {
    this->initializeModel();
}

OAICreate_a_wire_transfer_parameters::~OAICreate_a_wire_transfer_parameters() {}

void OAICreate_a_wire_transfer_parameters::initializeModel() {

    m_account_id_isSet = false;
    m_account_id_isValid = false;

    m_account_number_isSet = false;
    m_account_number_isValid = false;

    m_amount_isSet = false;
    m_amount_isValid = false;

    m_beneficiary_address_line1_isSet = false;
    m_beneficiary_address_line1_isValid = false;

    m_beneficiary_address_line2_isSet = false;
    m_beneficiary_address_line2_isValid = false;

    m_beneficiary_address_line3_isSet = false;
    m_beneficiary_address_line3_isValid = false;

    m_beneficiary_name_isSet = false;
    m_beneficiary_name_isValid = false;

    m_external_account_id_isSet = false;
    m_external_account_id_isValid = false;

    m_message_to_recipient_isSet = false;
    m_message_to_recipient_isValid = false;

    m_require_approval_isSet = false;
    m_require_approval_isValid = false;

    m_routing_number_isSet = false;
    m_routing_number_isValid = false;
}

void OAICreate_a_wire_transfer_parameters::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreate_a_wire_transfer_parameters::fromJsonObject(QJsonObject json) {

    m_account_id_isValid = ::OpenAPI::fromJsonValue(m_account_id, json[QString("account_id")]);
    m_account_id_isSet = !json[QString("account_id")].isNull() && m_account_id_isValid;

    m_account_number_isValid = ::OpenAPI::fromJsonValue(m_account_number, json[QString("account_number")]);
    m_account_number_isSet = !json[QString("account_number")].isNull() && m_account_number_isValid;

    m_amount_isValid = ::OpenAPI::fromJsonValue(m_amount, json[QString("amount")]);
    m_amount_isSet = !json[QString("amount")].isNull() && m_amount_isValid;

    m_beneficiary_address_line1_isValid = ::OpenAPI::fromJsonValue(m_beneficiary_address_line1, json[QString("beneficiary_address_line1")]);
    m_beneficiary_address_line1_isSet = !json[QString("beneficiary_address_line1")].isNull() && m_beneficiary_address_line1_isValid;

    m_beneficiary_address_line2_isValid = ::OpenAPI::fromJsonValue(m_beneficiary_address_line2, json[QString("beneficiary_address_line2")]);
    m_beneficiary_address_line2_isSet = !json[QString("beneficiary_address_line2")].isNull() && m_beneficiary_address_line2_isValid;

    m_beneficiary_address_line3_isValid = ::OpenAPI::fromJsonValue(m_beneficiary_address_line3, json[QString("beneficiary_address_line3")]);
    m_beneficiary_address_line3_isSet = !json[QString("beneficiary_address_line3")].isNull() && m_beneficiary_address_line3_isValid;

    m_beneficiary_name_isValid = ::OpenAPI::fromJsonValue(m_beneficiary_name, json[QString("beneficiary_name")]);
    m_beneficiary_name_isSet = !json[QString("beneficiary_name")].isNull() && m_beneficiary_name_isValid;

    m_external_account_id_isValid = ::OpenAPI::fromJsonValue(m_external_account_id, json[QString("external_account_id")]);
    m_external_account_id_isSet = !json[QString("external_account_id")].isNull() && m_external_account_id_isValid;

    m_message_to_recipient_isValid = ::OpenAPI::fromJsonValue(m_message_to_recipient, json[QString("message_to_recipient")]);
    m_message_to_recipient_isSet = !json[QString("message_to_recipient")].isNull() && m_message_to_recipient_isValid;

    m_require_approval_isValid = ::OpenAPI::fromJsonValue(m_require_approval, json[QString("require_approval")]);
    m_require_approval_isSet = !json[QString("require_approval")].isNull() && m_require_approval_isValid;

    m_routing_number_isValid = ::OpenAPI::fromJsonValue(m_routing_number, json[QString("routing_number")]);
    m_routing_number_isSet = !json[QString("routing_number")].isNull() && m_routing_number_isValid;
}

QString OAICreate_a_wire_transfer_parameters::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreate_a_wire_transfer_parameters::asJsonObject() const {
    QJsonObject obj;
    if (m_account_id_isSet) {
        obj.insert(QString("account_id"), ::OpenAPI::toJsonValue(m_account_id));
    }
    if (m_account_number_isSet) {
        obj.insert(QString("account_number"), ::OpenAPI::toJsonValue(m_account_number));
    }
    if (m_amount_isSet) {
        obj.insert(QString("amount"), ::OpenAPI::toJsonValue(m_amount));
    }
    if (m_beneficiary_address_line1_isSet) {
        obj.insert(QString("beneficiary_address_line1"), ::OpenAPI::toJsonValue(m_beneficiary_address_line1));
    }
    if (m_beneficiary_address_line2_isSet) {
        obj.insert(QString("beneficiary_address_line2"), ::OpenAPI::toJsonValue(m_beneficiary_address_line2));
    }
    if (m_beneficiary_address_line3_isSet) {
        obj.insert(QString("beneficiary_address_line3"), ::OpenAPI::toJsonValue(m_beneficiary_address_line3));
    }
    if (m_beneficiary_name_isSet) {
        obj.insert(QString("beneficiary_name"), ::OpenAPI::toJsonValue(m_beneficiary_name));
    }
    if (m_external_account_id_isSet) {
        obj.insert(QString("external_account_id"), ::OpenAPI::toJsonValue(m_external_account_id));
    }
    if (m_message_to_recipient_isSet) {
        obj.insert(QString("message_to_recipient"), ::OpenAPI::toJsonValue(m_message_to_recipient));
    }
    if (m_require_approval_isSet) {
        obj.insert(QString("require_approval"), ::OpenAPI::toJsonValue(m_require_approval));
    }
    if (m_routing_number_isSet) {
        obj.insert(QString("routing_number"), ::OpenAPI::toJsonValue(m_routing_number));
    }
    return obj;
}

QString OAICreate_a_wire_transfer_parameters::getAccountId() const {
    return m_account_id;
}
void OAICreate_a_wire_transfer_parameters::setAccountId(const QString &account_id) {
    m_account_id = account_id;
    m_account_id_isSet = true;
}

bool OAICreate_a_wire_transfer_parameters::is_account_id_Set() const{
    return m_account_id_isSet;
}

bool OAICreate_a_wire_transfer_parameters::is_account_id_Valid() const{
    return m_account_id_isValid;
}

QString OAICreate_a_wire_transfer_parameters::getAccountNumber() const {
    return m_account_number;
}
void OAICreate_a_wire_transfer_parameters::setAccountNumber(const QString &account_number) {
    m_account_number = account_number;
    m_account_number_isSet = true;
}

bool OAICreate_a_wire_transfer_parameters::is_account_number_Set() const{
    return m_account_number_isSet;
}

bool OAICreate_a_wire_transfer_parameters::is_account_number_Valid() const{
    return m_account_number_isValid;
}

qint32 OAICreate_a_wire_transfer_parameters::getAmount() const {
    return m_amount;
}
void OAICreate_a_wire_transfer_parameters::setAmount(const qint32 &amount) {
    m_amount = amount;
    m_amount_isSet = true;
}

bool OAICreate_a_wire_transfer_parameters::is_amount_Set() const{
    return m_amount_isSet;
}

bool OAICreate_a_wire_transfer_parameters::is_amount_Valid() const{
    return m_amount_isValid;
}

QString OAICreate_a_wire_transfer_parameters::getBeneficiaryAddressLine1() const {
    return m_beneficiary_address_line1;
}
void OAICreate_a_wire_transfer_parameters::setBeneficiaryAddressLine1(const QString &beneficiary_address_line1) {
    m_beneficiary_address_line1 = beneficiary_address_line1;
    m_beneficiary_address_line1_isSet = true;
}

bool OAICreate_a_wire_transfer_parameters::is_beneficiary_address_line1_Set() const{
    return m_beneficiary_address_line1_isSet;
}

bool OAICreate_a_wire_transfer_parameters::is_beneficiary_address_line1_Valid() const{
    return m_beneficiary_address_line1_isValid;
}

QString OAICreate_a_wire_transfer_parameters::getBeneficiaryAddressLine2() const {
    return m_beneficiary_address_line2;
}
void OAICreate_a_wire_transfer_parameters::setBeneficiaryAddressLine2(const QString &beneficiary_address_line2) {
    m_beneficiary_address_line2 = beneficiary_address_line2;
    m_beneficiary_address_line2_isSet = true;
}

bool OAICreate_a_wire_transfer_parameters::is_beneficiary_address_line2_Set() const{
    return m_beneficiary_address_line2_isSet;
}

bool OAICreate_a_wire_transfer_parameters::is_beneficiary_address_line2_Valid() const{
    return m_beneficiary_address_line2_isValid;
}

QString OAICreate_a_wire_transfer_parameters::getBeneficiaryAddressLine3() const {
    return m_beneficiary_address_line3;
}
void OAICreate_a_wire_transfer_parameters::setBeneficiaryAddressLine3(const QString &beneficiary_address_line3) {
    m_beneficiary_address_line3 = beneficiary_address_line3;
    m_beneficiary_address_line3_isSet = true;
}

bool OAICreate_a_wire_transfer_parameters::is_beneficiary_address_line3_Set() const{
    return m_beneficiary_address_line3_isSet;
}

bool OAICreate_a_wire_transfer_parameters::is_beneficiary_address_line3_Valid() const{
    return m_beneficiary_address_line3_isValid;
}

QString OAICreate_a_wire_transfer_parameters::getBeneficiaryName() const {
    return m_beneficiary_name;
}
void OAICreate_a_wire_transfer_parameters::setBeneficiaryName(const QString &beneficiary_name) {
    m_beneficiary_name = beneficiary_name;
    m_beneficiary_name_isSet = true;
}

bool OAICreate_a_wire_transfer_parameters::is_beneficiary_name_Set() const{
    return m_beneficiary_name_isSet;
}

bool OAICreate_a_wire_transfer_parameters::is_beneficiary_name_Valid() const{
    return m_beneficiary_name_isValid;
}

QString OAICreate_a_wire_transfer_parameters::getExternalAccountId() const {
    return m_external_account_id;
}
void OAICreate_a_wire_transfer_parameters::setExternalAccountId(const QString &external_account_id) {
    m_external_account_id = external_account_id;
    m_external_account_id_isSet = true;
}

bool OAICreate_a_wire_transfer_parameters::is_external_account_id_Set() const{
    return m_external_account_id_isSet;
}

bool OAICreate_a_wire_transfer_parameters::is_external_account_id_Valid() const{
    return m_external_account_id_isValid;
}

QString OAICreate_a_wire_transfer_parameters::getMessageToRecipient() const {
    return m_message_to_recipient;
}
void OAICreate_a_wire_transfer_parameters::setMessageToRecipient(const QString &message_to_recipient) {
    m_message_to_recipient = message_to_recipient;
    m_message_to_recipient_isSet = true;
}

bool OAICreate_a_wire_transfer_parameters::is_message_to_recipient_Set() const{
    return m_message_to_recipient_isSet;
}

bool OAICreate_a_wire_transfer_parameters::is_message_to_recipient_Valid() const{
    return m_message_to_recipient_isValid;
}

bool OAICreate_a_wire_transfer_parameters::isRequireApproval() const {
    return m_require_approval;
}
void OAICreate_a_wire_transfer_parameters::setRequireApproval(const bool &require_approval) {
    m_require_approval = require_approval;
    m_require_approval_isSet = true;
}

bool OAICreate_a_wire_transfer_parameters::is_require_approval_Set() const{
    return m_require_approval_isSet;
}

bool OAICreate_a_wire_transfer_parameters::is_require_approval_Valid() const{
    return m_require_approval_isValid;
}

QString OAICreate_a_wire_transfer_parameters::getRoutingNumber() const {
    return m_routing_number;
}
void OAICreate_a_wire_transfer_parameters::setRoutingNumber(const QString &routing_number) {
    m_routing_number = routing_number;
    m_routing_number_isSet = true;
}

bool OAICreate_a_wire_transfer_parameters::is_routing_number_Set() const{
    return m_routing_number_isSet;
}

bool OAICreate_a_wire_transfer_parameters::is_routing_number_Valid() const{
    return m_routing_number_isValid;
}

bool OAICreate_a_wire_transfer_parameters::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_account_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_beneficiary_address_line1_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_beneficiary_address_line2_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_beneficiary_address_line3_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_beneficiary_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_external_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_message_to_recipient_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_require_approval_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_routing_number_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreate_a_wire_transfer_parameters::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_account_id_isValid && m_amount_isValid && m_beneficiary_name_isValid && m_message_to_recipient_isValid && true;
}

} // namespace OpenAPI
