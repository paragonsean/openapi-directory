/**
 * Increase API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITransfer_Cancellation.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITransfer_Cancellation::OAITransfer_Cancellation(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITransfer_Cancellation::OAITransfer_Cancellation() {
    this->initializeModel();
}

OAITransfer_Cancellation::~OAITransfer_Cancellation() {}

void OAITransfer_Cancellation::initializeModel() {

    m_canceled_at_isSet = false;
    m_canceled_at_isValid = false;

    m_canceled_by_isSet = false;
    m_canceled_by_isValid = false;
}

void OAITransfer_Cancellation::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITransfer_Cancellation::fromJsonObject(QJsonObject json) {

    m_canceled_at_isValid = ::OpenAPI::fromJsonValue(m_canceled_at, json[QString("canceled_at")]);
    m_canceled_at_isSet = !json[QString("canceled_at")].isNull() && m_canceled_at_isValid;

    m_canceled_by_isValid = ::OpenAPI::fromJsonValue(m_canceled_by, json[QString("canceled_by")]);
    m_canceled_by_isSet = !json[QString("canceled_by")].isNull() && m_canceled_by_isValid;
}

QString OAITransfer_Cancellation::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITransfer_Cancellation::asJsonObject() const {
    QJsonObject obj;
    if (m_canceled_at_isSet) {
        obj.insert(QString("canceled_at"), ::OpenAPI::toJsonValue(m_canceled_at));
    }
    if (m_canceled_by_isSet) {
        obj.insert(QString("canceled_by"), ::OpenAPI::toJsonValue(m_canceled_by));
    }
    return obj;
}

QDateTime OAITransfer_Cancellation::getCanceledAt() const {
    return m_canceled_at;
}
void OAITransfer_Cancellation::setCanceledAt(const QDateTime &canceled_at) {
    m_canceled_at = canceled_at;
    m_canceled_at_isSet = true;
}

bool OAITransfer_Cancellation::is_canceled_at_Set() const{
    return m_canceled_at_isSet;
}

bool OAITransfer_Cancellation::is_canceled_at_Valid() const{
    return m_canceled_at_isValid;
}

QString OAITransfer_Cancellation::getCanceledBy() const {
    return m_canceled_by;
}
void OAITransfer_Cancellation::setCanceledBy(const QString &canceled_by) {
    m_canceled_by = canceled_by;
    m_canceled_by_isSet = true;
}

bool OAITransfer_Cancellation::is_canceled_by_Set() const{
    return m_canceled_by_isSet;
}

bool OAITransfer_Cancellation::is_canceled_by_Valid() const{
    return m_canceled_by_isValid;
}

bool OAITransfer_Cancellation::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_canceled_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_canceled_by_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITransfer_Cancellation::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_canceled_at_isValid && m_canceled_by_isValid && true;
}

} // namespace OpenAPI
