/**
 * Increase API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIReal_Time_Payments_Transfer_Acknowledgement.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIReal_Time_Payments_Transfer_Acknowledgement::OAIReal_Time_Payments_Transfer_Acknowledgement(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIReal_Time_Payments_Transfer_Acknowledgement::OAIReal_Time_Payments_Transfer_Acknowledgement() {
    this->initializeModel();
}

OAIReal_Time_Payments_Transfer_Acknowledgement::~OAIReal_Time_Payments_Transfer_Acknowledgement() {}

void OAIReal_Time_Payments_Transfer_Acknowledgement::initializeModel() {

    m_amount_isSet = false;
    m_amount_isValid = false;

    m_destination_account_number_isSet = false;
    m_destination_account_number_isValid = false;

    m_destination_routing_number_isSet = false;
    m_destination_routing_number_isValid = false;

    m_remittance_information_isSet = false;
    m_remittance_information_isValid = false;

    m_transfer_id_isSet = false;
    m_transfer_id_isValid = false;
}

void OAIReal_Time_Payments_Transfer_Acknowledgement::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIReal_Time_Payments_Transfer_Acknowledgement::fromJsonObject(QJsonObject json) {

    m_amount_isValid = ::OpenAPI::fromJsonValue(m_amount, json[QString("amount")]);
    m_amount_isSet = !json[QString("amount")].isNull() && m_amount_isValid;

    m_destination_account_number_isValid = ::OpenAPI::fromJsonValue(m_destination_account_number, json[QString("destination_account_number")]);
    m_destination_account_number_isSet = !json[QString("destination_account_number")].isNull() && m_destination_account_number_isValid;

    m_destination_routing_number_isValid = ::OpenAPI::fromJsonValue(m_destination_routing_number, json[QString("destination_routing_number")]);
    m_destination_routing_number_isSet = !json[QString("destination_routing_number")].isNull() && m_destination_routing_number_isValid;

    m_remittance_information_isValid = ::OpenAPI::fromJsonValue(m_remittance_information, json[QString("remittance_information")]);
    m_remittance_information_isSet = !json[QString("remittance_information")].isNull() && m_remittance_information_isValid;

    m_transfer_id_isValid = ::OpenAPI::fromJsonValue(m_transfer_id, json[QString("transfer_id")]);
    m_transfer_id_isSet = !json[QString("transfer_id")].isNull() && m_transfer_id_isValid;
}

QString OAIReal_Time_Payments_Transfer_Acknowledgement::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIReal_Time_Payments_Transfer_Acknowledgement::asJsonObject() const {
    QJsonObject obj;
    if (m_amount_isSet) {
        obj.insert(QString("amount"), ::OpenAPI::toJsonValue(m_amount));
    }
    if (m_destination_account_number_isSet) {
        obj.insert(QString("destination_account_number"), ::OpenAPI::toJsonValue(m_destination_account_number));
    }
    if (m_destination_routing_number_isSet) {
        obj.insert(QString("destination_routing_number"), ::OpenAPI::toJsonValue(m_destination_routing_number));
    }
    if (m_remittance_information_isSet) {
        obj.insert(QString("remittance_information"), ::OpenAPI::toJsonValue(m_remittance_information));
    }
    if (m_transfer_id_isSet) {
        obj.insert(QString("transfer_id"), ::OpenAPI::toJsonValue(m_transfer_id));
    }
    return obj;
}

qint32 OAIReal_Time_Payments_Transfer_Acknowledgement::getAmount() const {
    return m_amount;
}
void OAIReal_Time_Payments_Transfer_Acknowledgement::setAmount(const qint32 &amount) {
    m_amount = amount;
    m_amount_isSet = true;
}

bool OAIReal_Time_Payments_Transfer_Acknowledgement::is_amount_Set() const{
    return m_amount_isSet;
}

bool OAIReal_Time_Payments_Transfer_Acknowledgement::is_amount_Valid() const{
    return m_amount_isValid;
}

QString OAIReal_Time_Payments_Transfer_Acknowledgement::getDestinationAccountNumber() const {
    return m_destination_account_number;
}
void OAIReal_Time_Payments_Transfer_Acknowledgement::setDestinationAccountNumber(const QString &destination_account_number) {
    m_destination_account_number = destination_account_number;
    m_destination_account_number_isSet = true;
}

bool OAIReal_Time_Payments_Transfer_Acknowledgement::is_destination_account_number_Set() const{
    return m_destination_account_number_isSet;
}

bool OAIReal_Time_Payments_Transfer_Acknowledgement::is_destination_account_number_Valid() const{
    return m_destination_account_number_isValid;
}

QString OAIReal_Time_Payments_Transfer_Acknowledgement::getDestinationRoutingNumber() const {
    return m_destination_routing_number;
}
void OAIReal_Time_Payments_Transfer_Acknowledgement::setDestinationRoutingNumber(const QString &destination_routing_number) {
    m_destination_routing_number = destination_routing_number;
    m_destination_routing_number_isSet = true;
}

bool OAIReal_Time_Payments_Transfer_Acknowledgement::is_destination_routing_number_Set() const{
    return m_destination_routing_number_isSet;
}

bool OAIReal_Time_Payments_Transfer_Acknowledgement::is_destination_routing_number_Valid() const{
    return m_destination_routing_number_isValid;
}

QString OAIReal_Time_Payments_Transfer_Acknowledgement::getRemittanceInformation() const {
    return m_remittance_information;
}
void OAIReal_Time_Payments_Transfer_Acknowledgement::setRemittanceInformation(const QString &remittance_information) {
    m_remittance_information = remittance_information;
    m_remittance_information_isSet = true;
}

bool OAIReal_Time_Payments_Transfer_Acknowledgement::is_remittance_information_Set() const{
    return m_remittance_information_isSet;
}

bool OAIReal_Time_Payments_Transfer_Acknowledgement::is_remittance_information_Valid() const{
    return m_remittance_information_isValid;
}

QString OAIReal_Time_Payments_Transfer_Acknowledgement::getTransferId() const {
    return m_transfer_id;
}
void OAIReal_Time_Payments_Transfer_Acknowledgement::setTransferId(const QString &transfer_id) {
    m_transfer_id = transfer_id;
    m_transfer_id_isSet = true;
}

bool OAIReal_Time_Payments_Transfer_Acknowledgement::is_transfer_id_Set() const{
    return m_transfer_id_isSet;
}

bool OAIReal_Time_Payments_Transfer_Acknowledgement::is_transfer_id_Valid() const{
    return m_transfer_id_isValid;
}

bool OAIReal_Time_Payments_Transfer_Acknowledgement::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_destination_account_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_destination_routing_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_remittance_information_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_transfer_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIReal_Time_Payments_Transfer_Acknowledgement::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_amount_isValid && m_destination_account_number_isValid && m_destination_routing_number_isValid && m_remittance_information_isValid && m_transfer_id_isValid && true;
}

} // namespace OpenAPI
