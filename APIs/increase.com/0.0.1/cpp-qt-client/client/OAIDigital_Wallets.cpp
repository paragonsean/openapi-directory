/**
 * Increase API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDigital_Wallets.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDigital_Wallets::OAIDigital_Wallets(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDigital_Wallets::OAIDigital_Wallets() {
    this->initializeModel();
}

OAIDigital_Wallets::~OAIDigital_Wallets() {}

void OAIDigital_Wallets::initializeModel() {

    m_app_icon_file_id_isSet = false;
    m_app_icon_file_id_isValid = false;

    m_background_image_file_id_isSet = false;
    m_background_image_file_id_isValid = false;

    m_card_description_isSet = false;
    m_card_description_isValid = false;

    m_contact_email_isSet = false;
    m_contact_email_isValid = false;

    m_contact_phone_isSet = false;
    m_contact_phone_isValid = false;

    m_contact_website_isSet = false;
    m_contact_website_isValid = false;

    m_issuer_name_isSet = false;
    m_issuer_name_isValid = false;

    m_text_color_isSet = false;
    m_text_color_isValid = false;
}

void OAIDigital_Wallets::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDigital_Wallets::fromJsonObject(QJsonObject json) {

    m_app_icon_file_id_isValid = ::OpenAPI::fromJsonValue(m_app_icon_file_id, json[QString("app_icon_file_id")]);
    m_app_icon_file_id_isSet = !json[QString("app_icon_file_id")].isNull() && m_app_icon_file_id_isValid;

    m_background_image_file_id_isValid = ::OpenAPI::fromJsonValue(m_background_image_file_id, json[QString("background_image_file_id")]);
    m_background_image_file_id_isSet = !json[QString("background_image_file_id")].isNull() && m_background_image_file_id_isValid;

    m_card_description_isValid = ::OpenAPI::fromJsonValue(m_card_description, json[QString("card_description")]);
    m_card_description_isSet = !json[QString("card_description")].isNull() && m_card_description_isValid;

    m_contact_email_isValid = ::OpenAPI::fromJsonValue(m_contact_email, json[QString("contact_email")]);
    m_contact_email_isSet = !json[QString("contact_email")].isNull() && m_contact_email_isValid;

    m_contact_phone_isValid = ::OpenAPI::fromJsonValue(m_contact_phone, json[QString("contact_phone")]);
    m_contact_phone_isSet = !json[QString("contact_phone")].isNull() && m_contact_phone_isValid;

    m_contact_website_isValid = ::OpenAPI::fromJsonValue(m_contact_website, json[QString("contact_website")]);
    m_contact_website_isSet = !json[QString("contact_website")].isNull() && m_contact_website_isValid;

    m_issuer_name_isValid = ::OpenAPI::fromJsonValue(m_issuer_name, json[QString("issuer_name")]);
    m_issuer_name_isSet = !json[QString("issuer_name")].isNull() && m_issuer_name_isValid;

    m_text_color_isValid = ::OpenAPI::fromJsonValue(m_text_color, json[QString("text_color")]);
    m_text_color_isSet = !json[QString("text_color")].isNull() && m_text_color_isValid;
}

QString OAIDigital_Wallets::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDigital_Wallets::asJsonObject() const {
    QJsonObject obj;
    if (m_app_icon_file_id_isSet) {
        obj.insert(QString("app_icon_file_id"), ::OpenAPI::toJsonValue(m_app_icon_file_id));
    }
    if (m_background_image_file_id_isSet) {
        obj.insert(QString("background_image_file_id"), ::OpenAPI::toJsonValue(m_background_image_file_id));
    }
    if (m_card_description_isSet) {
        obj.insert(QString("card_description"), ::OpenAPI::toJsonValue(m_card_description));
    }
    if (m_contact_email_isSet) {
        obj.insert(QString("contact_email"), ::OpenAPI::toJsonValue(m_contact_email));
    }
    if (m_contact_phone_isSet) {
        obj.insert(QString("contact_phone"), ::OpenAPI::toJsonValue(m_contact_phone));
    }
    if (m_contact_website_isSet) {
        obj.insert(QString("contact_website"), ::OpenAPI::toJsonValue(m_contact_website));
    }
    if (m_issuer_name_isSet) {
        obj.insert(QString("issuer_name"), ::OpenAPI::toJsonValue(m_issuer_name));
    }
    if (m_text_color.isSet()) {
        obj.insert(QString("text_color"), ::OpenAPI::toJsonValue(m_text_color));
    }
    return obj;
}

QString OAIDigital_Wallets::getAppIconFileId() const {
    return m_app_icon_file_id;
}
void OAIDigital_Wallets::setAppIconFileId(const QString &app_icon_file_id) {
    m_app_icon_file_id = app_icon_file_id;
    m_app_icon_file_id_isSet = true;
}

bool OAIDigital_Wallets::is_app_icon_file_id_Set() const{
    return m_app_icon_file_id_isSet;
}

bool OAIDigital_Wallets::is_app_icon_file_id_Valid() const{
    return m_app_icon_file_id_isValid;
}

QString OAIDigital_Wallets::getBackgroundImageFileId() const {
    return m_background_image_file_id;
}
void OAIDigital_Wallets::setBackgroundImageFileId(const QString &background_image_file_id) {
    m_background_image_file_id = background_image_file_id;
    m_background_image_file_id_isSet = true;
}

bool OAIDigital_Wallets::is_background_image_file_id_Set() const{
    return m_background_image_file_id_isSet;
}

bool OAIDigital_Wallets::is_background_image_file_id_Valid() const{
    return m_background_image_file_id_isValid;
}

QString OAIDigital_Wallets::getCardDescription() const {
    return m_card_description;
}
void OAIDigital_Wallets::setCardDescription(const QString &card_description) {
    m_card_description = card_description;
    m_card_description_isSet = true;
}

bool OAIDigital_Wallets::is_card_description_Set() const{
    return m_card_description_isSet;
}

bool OAIDigital_Wallets::is_card_description_Valid() const{
    return m_card_description_isValid;
}

QString OAIDigital_Wallets::getContactEmail() const {
    return m_contact_email;
}
void OAIDigital_Wallets::setContactEmail(const QString &contact_email) {
    m_contact_email = contact_email;
    m_contact_email_isSet = true;
}

bool OAIDigital_Wallets::is_contact_email_Set() const{
    return m_contact_email_isSet;
}

bool OAIDigital_Wallets::is_contact_email_Valid() const{
    return m_contact_email_isValid;
}

QString OAIDigital_Wallets::getContactPhone() const {
    return m_contact_phone;
}
void OAIDigital_Wallets::setContactPhone(const QString &contact_phone) {
    m_contact_phone = contact_phone;
    m_contact_phone_isSet = true;
}

bool OAIDigital_Wallets::is_contact_phone_Set() const{
    return m_contact_phone_isSet;
}

bool OAIDigital_Wallets::is_contact_phone_Valid() const{
    return m_contact_phone_isValid;
}

QString OAIDigital_Wallets::getContactWebsite() const {
    return m_contact_website;
}
void OAIDigital_Wallets::setContactWebsite(const QString &contact_website) {
    m_contact_website = contact_website;
    m_contact_website_isSet = true;
}

bool OAIDigital_Wallets::is_contact_website_Set() const{
    return m_contact_website_isSet;
}

bool OAIDigital_Wallets::is_contact_website_Valid() const{
    return m_contact_website_isValid;
}

QString OAIDigital_Wallets::getIssuerName() const {
    return m_issuer_name;
}
void OAIDigital_Wallets::setIssuerName(const QString &issuer_name) {
    m_issuer_name = issuer_name;
    m_issuer_name_isSet = true;
}

bool OAIDigital_Wallets::is_issuer_name_Set() const{
    return m_issuer_name_isSet;
}

bool OAIDigital_Wallets::is_issuer_name_Valid() const{
    return m_issuer_name_isValid;
}

OAIText_Color OAIDigital_Wallets::getTextColor() const {
    return m_text_color;
}
void OAIDigital_Wallets::setTextColor(const OAIText_Color &text_color) {
    m_text_color = text_color;
    m_text_color_isSet = true;
}

bool OAIDigital_Wallets::is_text_color_Set() const{
    return m_text_color_isSet;
}

bool OAIDigital_Wallets::is_text_color_Valid() const{
    return m_text_color_isValid;
}

bool OAIDigital_Wallets::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_app_icon_file_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_background_image_file_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_card_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_contact_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_contact_phone_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_contact_website_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_issuer_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_text_color.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDigital_Wallets::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_app_icon_file_id_isValid && m_background_image_file_id_isValid && m_card_description_isValid && m_contact_email_isValid && m_contact_phone_isValid && m_contact_website_isValid && m_issuer_name_isValid && m_text_color_isValid && true;
}

} // namespace OpenAPI
