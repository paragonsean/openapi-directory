/**
 * Increase API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIWire_Transfer_Intention.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIWire_Transfer_Intention::OAIWire_Transfer_Intention(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIWire_Transfer_Intention::OAIWire_Transfer_Intention() {
    this->initializeModel();
}

OAIWire_Transfer_Intention::~OAIWire_Transfer_Intention() {}

void OAIWire_Transfer_Intention::initializeModel() {

    m_account_number_isSet = false;
    m_account_number_isValid = false;

    m_amount_isSet = false;
    m_amount_isValid = false;

    m_message_to_recipient_isSet = false;
    m_message_to_recipient_isValid = false;

    m_routing_number_isSet = false;
    m_routing_number_isValid = false;

    m_transfer_id_isSet = false;
    m_transfer_id_isValid = false;
}

void OAIWire_Transfer_Intention::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIWire_Transfer_Intention::fromJsonObject(QJsonObject json) {

    m_account_number_isValid = ::OpenAPI::fromJsonValue(m_account_number, json[QString("account_number")]);
    m_account_number_isSet = !json[QString("account_number")].isNull() && m_account_number_isValid;

    m_amount_isValid = ::OpenAPI::fromJsonValue(m_amount, json[QString("amount")]);
    m_amount_isSet = !json[QString("amount")].isNull() && m_amount_isValid;

    m_message_to_recipient_isValid = ::OpenAPI::fromJsonValue(m_message_to_recipient, json[QString("message_to_recipient")]);
    m_message_to_recipient_isSet = !json[QString("message_to_recipient")].isNull() && m_message_to_recipient_isValid;

    m_routing_number_isValid = ::OpenAPI::fromJsonValue(m_routing_number, json[QString("routing_number")]);
    m_routing_number_isSet = !json[QString("routing_number")].isNull() && m_routing_number_isValid;

    m_transfer_id_isValid = ::OpenAPI::fromJsonValue(m_transfer_id, json[QString("transfer_id")]);
    m_transfer_id_isSet = !json[QString("transfer_id")].isNull() && m_transfer_id_isValid;
}

QString OAIWire_Transfer_Intention::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIWire_Transfer_Intention::asJsonObject() const {
    QJsonObject obj;
    if (m_account_number_isSet) {
        obj.insert(QString("account_number"), ::OpenAPI::toJsonValue(m_account_number));
    }
    if (m_amount_isSet) {
        obj.insert(QString("amount"), ::OpenAPI::toJsonValue(m_amount));
    }
    if (m_message_to_recipient_isSet) {
        obj.insert(QString("message_to_recipient"), ::OpenAPI::toJsonValue(m_message_to_recipient));
    }
    if (m_routing_number_isSet) {
        obj.insert(QString("routing_number"), ::OpenAPI::toJsonValue(m_routing_number));
    }
    if (m_transfer_id_isSet) {
        obj.insert(QString("transfer_id"), ::OpenAPI::toJsonValue(m_transfer_id));
    }
    return obj;
}

QString OAIWire_Transfer_Intention::getAccountNumber() const {
    return m_account_number;
}
void OAIWire_Transfer_Intention::setAccountNumber(const QString &account_number) {
    m_account_number = account_number;
    m_account_number_isSet = true;
}

bool OAIWire_Transfer_Intention::is_account_number_Set() const{
    return m_account_number_isSet;
}

bool OAIWire_Transfer_Intention::is_account_number_Valid() const{
    return m_account_number_isValid;
}

qint32 OAIWire_Transfer_Intention::getAmount() const {
    return m_amount;
}
void OAIWire_Transfer_Intention::setAmount(const qint32 &amount) {
    m_amount = amount;
    m_amount_isSet = true;
}

bool OAIWire_Transfer_Intention::is_amount_Set() const{
    return m_amount_isSet;
}

bool OAIWire_Transfer_Intention::is_amount_Valid() const{
    return m_amount_isValid;
}

QString OAIWire_Transfer_Intention::getMessageToRecipient() const {
    return m_message_to_recipient;
}
void OAIWire_Transfer_Intention::setMessageToRecipient(const QString &message_to_recipient) {
    m_message_to_recipient = message_to_recipient;
    m_message_to_recipient_isSet = true;
}

bool OAIWire_Transfer_Intention::is_message_to_recipient_Set() const{
    return m_message_to_recipient_isSet;
}

bool OAIWire_Transfer_Intention::is_message_to_recipient_Valid() const{
    return m_message_to_recipient_isValid;
}

QString OAIWire_Transfer_Intention::getRoutingNumber() const {
    return m_routing_number;
}
void OAIWire_Transfer_Intention::setRoutingNumber(const QString &routing_number) {
    m_routing_number = routing_number;
    m_routing_number_isSet = true;
}

bool OAIWire_Transfer_Intention::is_routing_number_Set() const{
    return m_routing_number_isSet;
}

bool OAIWire_Transfer_Intention::is_routing_number_Valid() const{
    return m_routing_number_isValid;
}

QString OAIWire_Transfer_Intention::getTransferId() const {
    return m_transfer_id;
}
void OAIWire_Transfer_Intention::setTransferId(const QString &transfer_id) {
    m_transfer_id = transfer_id;
    m_transfer_id_isSet = true;
}

bool OAIWire_Transfer_Intention::is_transfer_id_Set() const{
    return m_transfer_id_isSet;
}

bool OAIWire_Transfer_Intention::is_transfer_id_Valid() const{
    return m_transfer_id_isValid;
}

bool OAIWire_Transfer_Intention::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_message_to_recipient_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_routing_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_transfer_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIWire_Transfer_Intention::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_account_number_isValid && m_amount_isValid && m_message_to_recipient_isValid && m_routing_number_isValid && m_transfer_id_isValid && true;
}

} // namespace OpenAPI
