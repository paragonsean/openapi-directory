/**
 * Increase API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIInbound_International_ACH_Transfer.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIInbound_International_ACH_Transfer::OAIInbound_International_ACH_Transfer(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIInbound_International_ACH_Transfer::OAIInbound_International_ACH_Transfer() {
    this->initializeModel();
}

OAIInbound_International_ACH_Transfer::~OAIInbound_International_ACH_Transfer() {}

void OAIInbound_International_ACH_Transfer::initializeModel() {

    m_amount_isSet = false;
    m_amount_isValid = false;

    m_destination_country_code_isSet = false;
    m_destination_country_code_isValid = false;

    m_destination_currency_code_isSet = false;
    m_destination_currency_code_isValid = false;

    m_foreign_exchange_indicator_isSet = false;
    m_foreign_exchange_indicator_isValid = false;

    m_foreign_exchange_reference_isSet = false;
    m_foreign_exchange_reference_isValid = false;

    m_foreign_exchange_reference_indicator_isSet = false;
    m_foreign_exchange_reference_indicator_isValid = false;

    m_foreign_payment_amount_isSet = false;
    m_foreign_payment_amount_isValid = false;

    m_foreign_trace_number_isSet = false;
    m_foreign_trace_number_isValid = false;

    m_international_transaction_type_code_isSet = false;
    m_international_transaction_type_code_isValid = false;

    m_originating_currency_code_isSet = false;
    m_originating_currency_code_isValid = false;

    m_originating_depository_financial_institution_branch_country_isSet = false;
    m_originating_depository_financial_institution_branch_country_isValid = false;

    m_originating_depository_financial_institution_id_isSet = false;
    m_originating_depository_financial_institution_id_isValid = false;

    m_originating_depository_financial_institution_id_qualifier_isSet = false;
    m_originating_depository_financial_institution_id_qualifier_isValid = false;

    m_originating_depository_financial_institution_name_isSet = false;
    m_originating_depository_financial_institution_name_isValid = false;

    m_originator_city_isSet = false;
    m_originator_city_isValid = false;

    m_originator_company_entry_description_isSet = false;
    m_originator_company_entry_description_isValid = false;

    m_originator_country_isSet = false;
    m_originator_country_isValid = false;

    m_originator_identification_isSet = false;
    m_originator_identification_isValid = false;

    m_originator_name_isSet = false;
    m_originator_name_isValid = false;

    m_originator_postal_code_isSet = false;
    m_originator_postal_code_isValid = false;

    m_originator_state_or_province_isSet = false;
    m_originator_state_or_province_isValid = false;

    m_originator_street_address_isSet = false;
    m_originator_street_address_isValid = false;

    m_payment_related_information_isSet = false;
    m_payment_related_information_isValid = false;

    m_payment_related_information2_isSet = false;
    m_payment_related_information2_isValid = false;

    m_receiver_city_isSet = false;
    m_receiver_city_isValid = false;

    m_receiver_country_isSet = false;
    m_receiver_country_isValid = false;

    m_receiver_identification_number_isSet = false;
    m_receiver_identification_number_isValid = false;

    m_receiver_postal_code_isSet = false;
    m_receiver_postal_code_isValid = false;

    m_receiver_state_or_province_isSet = false;
    m_receiver_state_or_province_isValid = false;

    m_receiver_street_address_isSet = false;
    m_receiver_street_address_isValid = false;

    m_receiving_company_or_individual_name_isSet = false;
    m_receiving_company_or_individual_name_isValid = false;

    m_receiving_depository_financial_institution_country_isSet = false;
    m_receiving_depository_financial_institution_country_isValid = false;

    m_receiving_depository_financial_institution_id_isSet = false;
    m_receiving_depository_financial_institution_id_isValid = false;

    m_receiving_depository_financial_institution_id_qualifier_isSet = false;
    m_receiving_depository_financial_institution_id_qualifier_isValid = false;

    m_receiving_depository_financial_institution_name_isSet = false;
    m_receiving_depository_financial_institution_name_isValid = false;

    m_trace_number_isSet = false;
    m_trace_number_isValid = false;
}

void OAIInbound_International_ACH_Transfer::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIInbound_International_ACH_Transfer::fromJsonObject(QJsonObject json) {

    m_amount_isValid = ::OpenAPI::fromJsonValue(m_amount, json[QString("amount")]);
    m_amount_isSet = !json[QString("amount")].isNull() && m_amount_isValid;

    m_destination_country_code_isValid = ::OpenAPI::fromJsonValue(m_destination_country_code, json[QString("destination_country_code")]);
    m_destination_country_code_isSet = !json[QString("destination_country_code")].isNull() && m_destination_country_code_isValid;

    m_destination_currency_code_isValid = ::OpenAPI::fromJsonValue(m_destination_currency_code, json[QString("destination_currency_code")]);
    m_destination_currency_code_isSet = !json[QString("destination_currency_code")].isNull() && m_destination_currency_code_isValid;

    m_foreign_exchange_indicator_isValid = ::OpenAPI::fromJsonValue(m_foreign_exchange_indicator, json[QString("foreign_exchange_indicator")]);
    m_foreign_exchange_indicator_isSet = !json[QString("foreign_exchange_indicator")].isNull() && m_foreign_exchange_indicator_isValid;

    m_foreign_exchange_reference_isValid = ::OpenAPI::fromJsonValue(m_foreign_exchange_reference, json[QString("foreign_exchange_reference")]);
    m_foreign_exchange_reference_isSet = !json[QString("foreign_exchange_reference")].isNull() && m_foreign_exchange_reference_isValid;

    m_foreign_exchange_reference_indicator_isValid = ::OpenAPI::fromJsonValue(m_foreign_exchange_reference_indicator, json[QString("foreign_exchange_reference_indicator")]);
    m_foreign_exchange_reference_indicator_isSet = !json[QString("foreign_exchange_reference_indicator")].isNull() && m_foreign_exchange_reference_indicator_isValid;

    m_foreign_payment_amount_isValid = ::OpenAPI::fromJsonValue(m_foreign_payment_amount, json[QString("foreign_payment_amount")]);
    m_foreign_payment_amount_isSet = !json[QString("foreign_payment_amount")].isNull() && m_foreign_payment_amount_isValid;

    m_foreign_trace_number_isValid = ::OpenAPI::fromJsonValue(m_foreign_trace_number, json[QString("foreign_trace_number")]);
    m_foreign_trace_number_isSet = !json[QString("foreign_trace_number")].isNull() && m_foreign_trace_number_isValid;

    m_international_transaction_type_code_isValid = ::OpenAPI::fromJsonValue(m_international_transaction_type_code, json[QString("international_transaction_type_code")]);
    m_international_transaction_type_code_isSet = !json[QString("international_transaction_type_code")].isNull() && m_international_transaction_type_code_isValid;

    m_originating_currency_code_isValid = ::OpenAPI::fromJsonValue(m_originating_currency_code, json[QString("originating_currency_code")]);
    m_originating_currency_code_isSet = !json[QString("originating_currency_code")].isNull() && m_originating_currency_code_isValid;

    m_originating_depository_financial_institution_branch_country_isValid = ::OpenAPI::fromJsonValue(m_originating_depository_financial_institution_branch_country, json[QString("originating_depository_financial_institution_branch_country")]);
    m_originating_depository_financial_institution_branch_country_isSet = !json[QString("originating_depository_financial_institution_branch_country")].isNull() && m_originating_depository_financial_institution_branch_country_isValid;

    m_originating_depository_financial_institution_id_isValid = ::OpenAPI::fromJsonValue(m_originating_depository_financial_institution_id, json[QString("originating_depository_financial_institution_id")]);
    m_originating_depository_financial_institution_id_isSet = !json[QString("originating_depository_financial_institution_id")].isNull() && m_originating_depository_financial_institution_id_isValid;

    m_originating_depository_financial_institution_id_qualifier_isValid = ::OpenAPI::fromJsonValue(m_originating_depository_financial_institution_id_qualifier, json[QString("originating_depository_financial_institution_id_qualifier")]);
    m_originating_depository_financial_institution_id_qualifier_isSet = !json[QString("originating_depository_financial_institution_id_qualifier")].isNull() && m_originating_depository_financial_institution_id_qualifier_isValid;

    m_originating_depository_financial_institution_name_isValid = ::OpenAPI::fromJsonValue(m_originating_depository_financial_institution_name, json[QString("originating_depository_financial_institution_name")]);
    m_originating_depository_financial_institution_name_isSet = !json[QString("originating_depository_financial_institution_name")].isNull() && m_originating_depository_financial_institution_name_isValid;

    m_originator_city_isValid = ::OpenAPI::fromJsonValue(m_originator_city, json[QString("originator_city")]);
    m_originator_city_isSet = !json[QString("originator_city")].isNull() && m_originator_city_isValid;

    m_originator_company_entry_description_isValid = ::OpenAPI::fromJsonValue(m_originator_company_entry_description, json[QString("originator_company_entry_description")]);
    m_originator_company_entry_description_isSet = !json[QString("originator_company_entry_description")].isNull() && m_originator_company_entry_description_isValid;

    m_originator_country_isValid = ::OpenAPI::fromJsonValue(m_originator_country, json[QString("originator_country")]);
    m_originator_country_isSet = !json[QString("originator_country")].isNull() && m_originator_country_isValid;

    m_originator_identification_isValid = ::OpenAPI::fromJsonValue(m_originator_identification, json[QString("originator_identification")]);
    m_originator_identification_isSet = !json[QString("originator_identification")].isNull() && m_originator_identification_isValid;

    m_originator_name_isValid = ::OpenAPI::fromJsonValue(m_originator_name, json[QString("originator_name")]);
    m_originator_name_isSet = !json[QString("originator_name")].isNull() && m_originator_name_isValid;

    m_originator_postal_code_isValid = ::OpenAPI::fromJsonValue(m_originator_postal_code, json[QString("originator_postal_code")]);
    m_originator_postal_code_isSet = !json[QString("originator_postal_code")].isNull() && m_originator_postal_code_isValid;

    m_originator_state_or_province_isValid = ::OpenAPI::fromJsonValue(m_originator_state_or_province, json[QString("originator_state_or_province")]);
    m_originator_state_or_province_isSet = !json[QString("originator_state_or_province")].isNull() && m_originator_state_or_province_isValid;

    m_originator_street_address_isValid = ::OpenAPI::fromJsonValue(m_originator_street_address, json[QString("originator_street_address")]);
    m_originator_street_address_isSet = !json[QString("originator_street_address")].isNull() && m_originator_street_address_isValid;

    m_payment_related_information_isValid = ::OpenAPI::fromJsonValue(m_payment_related_information, json[QString("payment_related_information")]);
    m_payment_related_information_isSet = !json[QString("payment_related_information")].isNull() && m_payment_related_information_isValid;

    m_payment_related_information2_isValid = ::OpenAPI::fromJsonValue(m_payment_related_information2, json[QString("payment_related_information2")]);
    m_payment_related_information2_isSet = !json[QString("payment_related_information2")].isNull() && m_payment_related_information2_isValid;

    m_receiver_city_isValid = ::OpenAPI::fromJsonValue(m_receiver_city, json[QString("receiver_city")]);
    m_receiver_city_isSet = !json[QString("receiver_city")].isNull() && m_receiver_city_isValid;

    m_receiver_country_isValid = ::OpenAPI::fromJsonValue(m_receiver_country, json[QString("receiver_country")]);
    m_receiver_country_isSet = !json[QString("receiver_country")].isNull() && m_receiver_country_isValid;

    m_receiver_identification_number_isValid = ::OpenAPI::fromJsonValue(m_receiver_identification_number, json[QString("receiver_identification_number")]);
    m_receiver_identification_number_isSet = !json[QString("receiver_identification_number")].isNull() && m_receiver_identification_number_isValid;

    m_receiver_postal_code_isValid = ::OpenAPI::fromJsonValue(m_receiver_postal_code, json[QString("receiver_postal_code")]);
    m_receiver_postal_code_isSet = !json[QString("receiver_postal_code")].isNull() && m_receiver_postal_code_isValid;

    m_receiver_state_or_province_isValid = ::OpenAPI::fromJsonValue(m_receiver_state_or_province, json[QString("receiver_state_or_province")]);
    m_receiver_state_or_province_isSet = !json[QString("receiver_state_or_province")].isNull() && m_receiver_state_or_province_isValid;

    m_receiver_street_address_isValid = ::OpenAPI::fromJsonValue(m_receiver_street_address, json[QString("receiver_street_address")]);
    m_receiver_street_address_isSet = !json[QString("receiver_street_address")].isNull() && m_receiver_street_address_isValid;

    m_receiving_company_or_individual_name_isValid = ::OpenAPI::fromJsonValue(m_receiving_company_or_individual_name, json[QString("receiving_company_or_individual_name")]);
    m_receiving_company_or_individual_name_isSet = !json[QString("receiving_company_or_individual_name")].isNull() && m_receiving_company_or_individual_name_isValid;

    m_receiving_depository_financial_institution_country_isValid = ::OpenAPI::fromJsonValue(m_receiving_depository_financial_institution_country, json[QString("receiving_depository_financial_institution_country")]);
    m_receiving_depository_financial_institution_country_isSet = !json[QString("receiving_depository_financial_institution_country")].isNull() && m_receiving_depository_financial_institution_country_isValid;

    m_receiving_depository_financial_institution_id_isValid = ::OpenAPI::fromJsonValue(m_receiving_depository_financial_institution_id, json[QString("receiving_depository_financial_institution_id")]);
    m_receiving_depository_financial_institution_id_isSet = !json[QString("receiving_depository_financial_institution_id")].isNull() && m_receiving_depository_financial_institution_id_isValid;

    m_receiving_depository_financial_institution_id_qualifier_isValid = ::OpenAPI::fromJsonValue(m_receiving_depository_financial_institution_id_qualifier, json[QString("receiving_depository_financial_institution_id_qualifier")]);
    m_receiving_depository_financial_institution_id_qualifier_isSet = !json[QString("receiving_depository_financial_institution_id_qualifier")].isNull() && m_receiving_depository_financial_institution_id_qualifier_isValid;

    m_receiving_depository_financial_institution_name_isValid = ::OpenAPI::fromJsonValue(m_receiving_depository_financial_institution_name, json[QString("receiving_depository_financial_institution_name")]);
    m_receiving_depository_financial_institution_name_isSet = !json[QString("receiving_depository_financial_institution_name")].isNull() && m_receiving_depository_financial_institution_name_isValid;

    m_trace_number_isValid = ::OpenAPI::fromJsonValue(m_trace_number, json[QString("trace_number")]);
    m_trace_number_isSet = !json[QString("trace_number")].isNull() && m_trace_number_isValid;
}

QString OAIInbound_International_ACH_Transfer::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIInbound_International_ACH_Transfer::asJsonObject() const {
    QJsonObject obj;
    if (m_amount_isSet) {
        obj.insert(QString("amount"), ::OpenAPI::toJsonValue(m_amount));
    }
    if (m_destination_country_code_isSet) {
        obj.insert(QString("destination_country_code"), ::OpenAPI::toJsonValue(m_destination_country_code));
    }
    if (m_destination_currency_code_isSet) {
        obj.insert(QString("destination_currency_code"), ::OpenAPI::toJsonValue(m_destination_currency_code));
    }
    if (m_foreign_exchange_indicator_isSet) {
        obj.insert(QString("foreign_exchange_indicator"), ::OpenAPI::toJsonValue(m_foreign_exchange_indicator));
    }
    if (m_foreign_exchange_reference_isSet) {
        obj.insert(QString("foreign_exchange_reference"), ::OpenAPI::toJsonValue(m_foreign_exchange_reference));
    }
    if (m_foreign_exchange_reference_indicator_isSet) {
        obj.insert(QString("foreign_exchange_reference_indicator"), ::OpenAPI::toJsonValue(m_foreign_exchange_reference_indicator));
    }
    if (m_foreign_payment_amount_isSet) {
        obj.insert(QString("foreign_payment_amount"), ::OpenAPI::toJsonValue(m_foreign_payment_amount));
    }
    if (m_foreign_trace_number_isSet) {
        obj.insert(QString("foreign_trace_number"), ::OpenAPI::toJsonValue(m_foreign_trace_number));
    }
    if (m_international_transaction_type_code_isSet) {
        obj.insert(QString("international_transaction_type_code"), ::OpenAPI::toJsonValue(m_international_transaction_type_code));
    }
    if (m_originating_currency_code_isSet) {
        obj.insert(QString("originating_currency_code"), ::OpenAPI::toJsonValue(m_originating_currency_code));
    }
    if (m_originating_depository_financial_institution_branch_country_isSet) {
        obj.insert(QString("originating_depository_financial_institution_branch_country"), ::OpenAPI::toJsonValue(m_originating_depository_financial_institution_branch_country));
    }
    if (m_originating_depository_financial_institution_id_isSet) {
        obj.insert(QString("originating_depository_financial_institution_id"), ::OpenAPI::toJsonValue(m_originating_depository_financial_institution_id));
    }
    if (m_originating_depository_financial_institution_id_qualifier_isSet) {
        obj.insert(QString("originating_depository_financial_institution_id_qualifier"), ::OpenAPI::toJsonValue(m_originating_depository_financial_institution_id_qualifier));
    }
    if (m_originating_depository_financial_institution_name_isSet) {
        obj.insert(QString("originating_depository_financial_institution_name"), ::OpenAPI::toJsonValue(m_originating_depository_financial_institution_name));
    }
    if (m_originator_city_isSet) {
        obj.insert(QString("originator_city"), ::OpenAPI::toJsonValue(m_originator_city));
    }
    if (m_originator_company_entry_description_isSet) {
        obj.insert(QString("originator_company_entry_description"), ::OpenAPI::toJsonValue(m_originator_company_entry_description));
    }
    if (m_originator_country_isSet) {
        obj.insert(QString("originator_country"), ::OpenAPI::toJsonValue(m_originator_country));
    }
    if (m_originator_identification_isSet) {
        obj.insert(QString("originator_identification"), ::OpenAPI::toJsonValue(m_originator_identification));
    }
    if (m_originator_name_isSet) {
        obj.insert(QString("originator_name"), ::OpenAPI::toJsonValue(m_originator_name));
    }
    if (m_originator_postal_code_isSet) {
        obj.insert(QString("originator_postal_code"), ::OpenAPI::toJsonValue(m_originator_postal_code));
    }
    if (m_originator_state_or_province_isSet) {
        obj.insert(QString("originator_state_or_province"), ::OpenAPI::toJsonValue(m_originator_state_or_province));
    }
    if (m_originator_street_address_isSet) {
        obj.insert(QString("originator_street_address"), ::OpenAPI::toJsonValue(m_originator_street_address));
    }
    if (m_payment_related_information_isSet) {
        obj.insert(QString("payment_related_information"), ::OpenAPI::toJsonValue(m_payment_related_information));
    }
    if (m_payment_related_information2_isSet) {
        obj.insert(QString("payment_related_information2"), ::OpenAPI::toJsonValue(m_payment_related_information2));
    }
    if (m_receiver_city_isSet) {
        obj.insert(QString("receiver_city"), ::OpenAPI::toJsonValue(m_receiver_city));
    }
    if (m_receiver_country_isSet) {
        obj.insert(QString("receiver_country"), ::OpenAPI::toJsonValue(m_receiver_country));
    }
    if (m_receiver_identification_number_isSet) {
        obj.insert(QString("receiver_identification_number"), ::OpenAPI::toJsonValue(m_receiver_identification_number));
    }
    if (m_receiver_postal_code_isSet) {
        obj.insert(QString("receiver_postal_code"), ::OpenAPI::toJsonValue(m_receiver_postal_code));
    }
    if (m_receiver_state_or_province_isSet) {
        obj.insert(QString("receiver_state_or_province"), ::OpenAPI::toJsonValue(m_receiver_state_or_province));
    }
    if (m_receiver_street_address_isSet) {
        obj.insert(QString("receiver_street_address"), ::OpenAPI::toJsonValue(m_receiver_street_address));
    }
    if (m_receiving_company_or_individual_name_isSet) {
        obj.insert(QString("receiving_company_or_individual_name"), ::OpenAPI::toJsonValue(m_receiving_company_or_individual_name));
    }
    if (m_receiving_depository_financial_institution_country_isSet) {
        obj.insert(QString("receiving_depository_financial_institution_country"), ::OpenAPI::toJsonValue(m_receiving_depository_financial_institution_country));
    }
    if (m_receiving_depository_financial_institution_id_isSet) {
        obj.insert(QString("receiving_depository_financial_institution_id"), ::OpenAPI::toJsonValue(m_receiving_depository_financial_institution_id));
    }
    if (m_receiving_depository_financial_institution_id_qualifier_isSet) {
        obj.insert(QString("receiving_depository_financial_institution_id_qualifier"), ::OpenAPI::toJsonValue(m_receiving_depository_financial_institution_id_qualifier));
    }
    if (m_receiving_depository_financial_institution_name_isSet) {
        obj.insert(QString("receiving_depository_financial_institution_name"), ::OpenAPI::toJsonValue(m_receiving_depository_financial_institution_name));
    }
    if (m_trace_number_isSet) {
        obj.insert(QString("trace_number"), ::OpenAPI::toJsonValue(m_trace_number));
    }
    return obj;
}

qint32 OAIInbound_International_ACH_Transfer::getAmount() const {
    return m_amount;
}
void OAIInbound_International_ACH_Transfer::setAmount(const qint32 &amount) {
    m_amount = amount;
    m_amount_isSet = true;
}

bool OAIInbound_International_ACH_Transfer::is_amount_Set() const{
    return m_amount_isSet;
}

bool OAIInbound_International_ACH_Transfer::is_amount_Valid() const{
    return m_amount_isValid;
}

QString OAIInbound_International_ACH_Transfer::getDestinationCountryCode() const {
    return m_destination_country_code;
}
void OAIInbound_International_ACH_Transfer::setDestinationCountryCode(const QString &destination_country_code) {
    m_destination_country_code = destination_country_code;
    m_destination_country_code_isSet = true;
}

bool OAIInbound_International_ACH_Transfer::is_destination_country_code_Set() const{
    return m_destination_country_code_isSet;
}

bool OAIInbound_International_ACH_Transfer::is_destination_country_code_Valid() const{
    return m_destination_country_code_isValid;
}

QString OAIInbound_International_ACH_Transfer::getDestinationCurrencyCode() const {
    return m_destination_currency_code;
}
void OAIInbound_International_ACH_Transfer::setDestinationCurrencyCode(const QString &destination_currency_code) {
    m_destination_currency_code = destination_currency_code;
    m_destination_currency_code_isSet = true;
}

bool OAIInbound_International_ACH_Transfer::is_destination_currency_code_Set() const{
    return m_destination_currency_code_isSet;
}

bool OAIInbound_International_ACH_Transfer::is_destination_currency_code_Valid() const{
    return m_destination_currency_code_isValid;
}

QString OAIInbound_International_ACH_Transfer::getForeignExchangeIndicator() const {
    return m_foreign_exchange_indicator;
}
void OAIInbound_International_ACH_Transfer::setForeignExchangeIndicator(const QString &foreign_exchange_indicator) {
    m_foreign_exchange_indicator = foreign_exchange_indicator;
    m_foreign_exchange_indicator_isSet = true;
}

bool OAIInbound_International_ACH_Transfer::is_foreign_exchange_indicator_Set() const{
    return m_foreign_exchange_indicator_isSet;
}

bool OAIInbound_International_ACH_Transfer::is_foreign_exchange_indicator_Valid() const{
    return m_foreign_exchange_indicator_isValid;
}

QString OAIInbound_International_ACH_Transfer::getForeignExchangeReference() const {
    return m_foreign_exchange_reference;
}
void OAIInbound_International_ACH_Transfer::setForeignExchangeReference(const QString &foreign_exchange_reference) {
    m_foreign_exchange_reference = foreign_exchange_reference;
    m_foreign_exchange_reference_isSet = true;
}

bool OAIInbound_International_ACH_Transfer::is_foreign_exchange_reference_Set() const{
    return m_foreign_exchange_reference_isSet;
}

bool OAIInbound_International_ACH_Transfer::is_foreign_exchange_reference_Valid() const{
    return m_foreign_exchange_reference_isValid;
}

QString OAIInbound_International_ACH_Transfer::getForeignExchangeReferenceIndicator() const {
    return m_foreign_exchange_reference_indicator;
}
void OAIInbound_International_ACH_Transfer::setForeignExchangeReferenceIndicator(const QString &foreign_exchange_reference_indicator) {
    m_foreign_exchange_reference_indicator = foreign_exchange_reference_indicator;
    m_foreign_exchange_reference_indicator_isSet = true;
}

bool OAIInbound_International_ACH_Transfer::is_foreign_exchange_reference_indicator_Set() const{
    return m_foreign_exchange_reference_indicator_isSet;
}

bool OAIInbound_International_ACH_Transfer::is_foreign_exchange_reference_indicator_Valid() const{
    return m_foreign_exchange_reference_indicator_isValid;
}

qint32 OAIInbound_International_ACH_Transfer::getForeignPaymentAmount() const {
    return m_foreign_payment_amount;
}
void OAIInbound_International_ACH_Transfer::setForeignPaymentAmount(const qint32 &foreign_payment_amount) {
    m_foreign_payment_amount = foreign_payment_amount;
    m_foreign_payment_amount_isSet = true;
}

bool OAIInbound_International_ACH_Transfer::is_foreign_payment_amount_Set() const{
    return m_foreign_payment_amount_isSet;
}

bool OAIInbound_International_ACH_Transfer::is_foreign_payment_amount_Valid() const{
    return m_foreign_payment_amount_isValid;
}

QString OAIInbound_International_ACH_Transfer::getForeignTraceNumber() const {
    return m_foreign_trace_number;
}
void OAIInbound_International_ACH_Transfer::setForeignTraceNumber(const QString &foreign_trace_number) {
    m_foreign_trace_number = foreign_trace_number;
    m_foreign_trace_number_isSet = true;
}

bool OAIInbound_International_ACH_Transfer::is_foreign_trace_number_Set() const{
    return m_foreign_trace_number_isSet;
}

bool OAIInbound_International_ACH_Transfer::is_foreign_trace_number_Valid() const{
    return m_foreign_trace_number_isValid;
}

QString OAIInbound_International_ACH_Transfer::getInternationalTransactionTypeCode() const {
    return m_international_transaction_type_code;
}
void OAIInbound_International_ACH_Transfer::setInternationalTransactionTypeCode(const QString &international_transaction_type_code) {
    m_international_transaction_type_code = international_transaction_type_code;
    m_international_transaction_type_code_isSet = true;
}

bool OAIInbound_International_ACH_Transfer::is_international_transaction_type_code_Set() const{
    return m_international_transaction_type_code_isSet;
}

bool OAIInbound_International_ACH_Transfer::is_international_transaction_type_code_Valid() const{
    return m_international_transaction_type_code_isValid;
}

QString OAIInbound_International_ACH_Transfer::getOriginatingCurrencyCode() const {
    return m_originating_currency_code;
}
void OAIInbound_International_ACH_Transfer::setOriginatingCurrencyCode(const QString &originating_currency_code) {
    m_originating_currency_code = originating_currency_code;
    m_originating_currency_code_isSet = true;
}

bool OAIInbound_International_ACH_Transfer::is_originating_currency_code_Set() const{
    return m_originating_currency_code_isSet;
}

bool OAIInbound_International_ACH_Transfer::is_originating_currency_code_Valid() const{
    return m_originating_currency_code_isValid;
}

QString OAIInbound_International_ACH_Transfer::getOriginatingDepositoryFinancialInstitutionBranchCountry() const {
    return m_originating_depository_financial_institution_branch_country;
}
void OAIInbound_International_ACH_Transfer::setOriginatingDepositoryFinancialInstitutionBranchCountry(const QString &originating_depository_financial_institution_branch_country) {
    m_originating_depository_financial_institution_branch_country = originating_depository_financial_institution_branch_country;
    m_originating_depository_financial_institution_branch_country_isSet = true;
}

bool OAIInbound_International_ACH_Transfer::is_originating_depository_financial_institution_branch_country_Set() const{
    return m_originating_depository_financial_institution_branch_country_isSet;
}

bool OAIInbound_International_ACH_Transfer::is_originating_depository_financial_institution_branch_country_Valid() const{
    return m_originating_depository_financial_institution_branch_country_isValid;
}

QString OAIInbound_International_ACH_Transfer::getOriginatingDepositoryFinancialInstitutionId() const {
    return m_originating_depository_financial_institution_id;
}
void OAIInbound_International_ACH_Transfer::setOriginatingDepositoryFinancialInstitutionId(const QString &originating_depository_financial_institution_id) {
    m_originating_depository_financial_institution_id = originating_depository_financial_institution_id;
    m_originating_depository_financial_institution_id_isSet = true;
}

bool OAIInbound_International_ACH_Transfer::is_originating_depository_financial_institution_id_Set() const{
    return m_originating_depository_financial_institution_id_isSet;
}

bool OAIInbound_International_ACH_Transfer::is_originating_depository_financial_institution_id_Valid() const{
    return m_originating_depository_financial_institution_id_isValid;
}

QString OAIInbound_International_ACH_Transfer::getOriginatingDepositoryFinancialInstitutionIdQualifier() const {
    return m_originating_depository_financial_institution_id_qualifier;
}
void OAIInbound_International_ACH_Transfer::setOriginatingDepositoryFinancialInstitutionIdQualifier(const QString &originating_depository_financial_institution_id_qualifier) {
    m_originating_depository_financial_institution_id_qualifier = originating_depository_financial_institution_id_qualifier;
    m_originating_depository_financial_institution_id_qualifier_isSet = true;
}

bool OAIInbound_International_ACH_Transfer::is_originating_depository_financial_institution_id_qualifier_Set() const{
    return m_originating_depository_financial_institution_id_qualifier_isSet;
}

bool OAIInbound_International_ACH_Transfer::is_originating_depository_financial_institution_id_qualifier_Valid() const{
    return m_originating_depository_financial_institution_id_qualifier_isValid;
}

QString OAIInbound_International_ACH_Transfer::getOriginatingDepositoryFinancialInstitutionName() const {
    return m_originating_depository_financial_institution_name;
}
void OAIInbound_International_ACH_Transfer::setOriginatingDepositoryFinancialInstitutionName(const QString &originating_depository_financial_institution_name) {
    m_originating_depository_financial_institution_name = originating_depository_financial_institution_name;
    m_originating_depository_financial_institution_name_isSet = true;
}

bool OAIInbound_International_ACH_Transfer::is_originating_depository_financial_institution_name_Set() const{
    return m_originating_depository_financial_institution_name_isSet;
}

bool OAIInbound_International_ACH_Transfer::is_originating_depository_financial_institution_name_Valid() const{
    return m_originating_depository_financial_institution_name_isValid;
}

QString OAIInbound_International_ACH_Transfer::getOriginatorCity() const {
    return m_originator_city;
}
void OAIInbound_International_ACH_Transfer::setOriginatorCity(const QString &originator_city) {
    m_originator_city = originator_city;
    m_originator_city_isSet = true;
}

bool OAIInbound_International_ACH_Transfer::is_originator_city_Set() const{
    return m_originator_city_isSet;
}

bool OAIInbound_International_ACH_Transfer::is_originator_city_Valid() const{
    return m_originator_city_isValid;
}

QString OAIInbound_International_ACH_Transfer::getOriginatorCompanyEntryDescription() const {
    return m_originator_company_entry_description;
}
void OAIInbound_International_ACH_Transfer::setOriginatorCompanyEntryDescription(const QString &originator_company_entry_description) {
    m_originator_company_entry_description = originator_company_entry_description;
    m_originator_company_entry_description_isSet = true;
}

bool OAIInbound_International_ACH_Transfer::is_originator_company_entry_description_Set() const{
    return m_originator_company_entry_description_isSet;
}

bool OAIInbound_International_ACH_Transfer::is_originator_company_entry_description_Valid() const{
    return m_originator_company_entry_description_isValid;
}

QString OAIInbound_International_ACH_Transfer::getOriginatorCountry() const {
    return m_originator_country;
}
void OAIInbound_International_ACH_Transfer::setOriginatorCountry(const QString &originator_country) {
    m_originator_country = originator_country;
    m_originator_country_isSet = true;
}

bool OAIInbound_International_ACH_Transfer::is_originator_country_Set() const{
    return m_originator_country_isSet;
}

bool OAIInbound_International_ACH_Transfer::is_originator_country_Valid() const{
    return m_originator_country_isValid;
}

QString OAIInbound_International_ACH_Transfer::getOriginatorIdentification() const {
    return m_originator_identification;
}
void OAIInbound_International_ACH_Transfer::setOriginatorIdentification(const QString &originator_identification) {
    m_originator_identification = originator_identification;
    m_originator_identification_isSet = true;
}

bool OAIInbound_International_ACH_Transfer::is_originator_identification_Set() const{
    return m_originator_identification_isSet;
}

bool OAIInbound_International_ACH_Transfer::is_originator_identification_Valid() const{
    return m_originator_identification_isValid;
}

QString OAIInbound_International_ACH_Transfer::getOriginatorName() const {
    return m_originator_name;
}
void OAIInbound_International_ACH_Transfer::setOriginatorName(const QString &originator_name) {
    m_originator_name = originator_name;
    m_originator_name_isSet = true;
}

bool OAIInbound_International_ACH_Transfer::is_originator_name_Set() const{
    return m_originator_name_isSet;
}

bool OAIInbound_International_ACH_Transfer::is_originator_name_Valid() const{
    return m_originator_name_isValid;
}

QString OAIInbound_International_ACH_Transfer::getOriginatorPostalCode() const {
    return m_originator_postal_code;
}
void OAIInbound_International_ACH_Transfer::setOriginatorPostalCode(const QString &originator_postal_code) {
    m_originator_postal_code = originator_postal_code;
    m_originator_postal_code_isSet = true;
}

bool OAIInbound_International_ACH_Transfer::is_originator_postal_code_Set() const{
    return m_originator_postal_code_isSet;
}

bool OAIInbound_International_ACH_Transfer::is_originator_postal_code_Valid() const{
    return m_originator_postal_code_isValid;
}

QString OAIInbound_International_ACH_Transfer::getOriginatorStateOrProvince() const {
    return m_originator_state_or_province;
}
void OAIInbound_International_ACH_Transfer::setOriginatorStateOrProvince(const QString &originator_state_or_province) {
    m_originator_state_or_province = originator_state_or_province;
    m_originator_state_or_province_isSet = true;
}

bool OAIInbound_International_ACH_Transfer::is_originator_state_or_province_Set() const{
    return m_originator_state_or_province_isSet;
}

bool OAIInbound_International_ACH_Transfer::is_originator_state_or_province_Valid() const{
    return m_originator_state_or_province_isValid;
}

QString OAIInbound_International_ACH_Transfer::getOriginatorStreetAddress() const {
    return m_originator_street_address;
}
void OAIInbound_International_ACH_Transfer::setOriginatorStreetAddress(const QString &originator_street_address) {
    m_originator_street_address = originator_street_address;
    m_originator_street_address_isSet = true;
}

bool OAIInbound_International_ACH_Transfer::is_originator_street_address_Set() const{
    return m_originator_street_address_isSet;
}

bool OAIInbound_International_ACH_Transfer::is_originator_street_address_Valid() const{
    return m_originator_street_address_isValid;
}

QString OAIInbound_International_ACH_Transfer::getPaymentRelatedInformation() const {
    return m_payment_related_information;
}
void OAIInbound_International_ACH_Transfer::setPaymentRelatedInformation(const QString &payment_related_information) {
    m_payment_related_information = payment_related_information;
    m_payment_related_information_isSet = true;
}

bool OAIInbound_International_ACH_Transfer::is_payment_related_information_Set() const{
    return m_payment_related_information_isSet;
}

bool OAIInbound_International_ACH_Transfer::is_payment_related_information_Valid() const{
    return m_payment_related_information_isValid;
}

QString OAIInbound_International_ACH_Transfer::getPaymentRelatedInformation2() const {
    return m_payment_related_information2;
}
void OAIInbound_International_ACH_Transfer::setPaymentRelatedInformation2(const QString &payment_related_information2) {
    m_payment_related_information2 = payment_related_information2;
    m_payment_related_information2_isSet = true;
}

bool OAIInbound_International_ACH_Transfer::is_payment_related_information2_Set() const{
    return m_payment_related_information2_isSet;
}

bool OAIInbound_International_ACH_Transfer::is_payment_related_information2_Valid() const{
    return m_payment_related_information2_isValid;
}

QString OAIInbound_International_ACH_Transfer::getReceiverCity() const {
    return m_receiver_city;
}
void OAIInbound_International_ACH_Transfer::setReceiverCity(const QString &receiver_city) {
    m_receiver_city = receiver_city;
    m_receiver_city_isSet = true;
}

bool OAIInbound_International_ACH_Transfer::is_receiver_city_Set() const{
    return m_receiver_city_isSet;
}

bool OAIInbound_International_ACH_Transfer::is_receiver_city_Valid() const{
    return m_receiver_city_isValid;
}

QString OAIInbound_International_ACH_Transfer::getReceiverCountry() const {
    return m_receiver_country;
}
void OAIInbound_International_ACH_Transfer::setReceiverCountry(const QString &receiver_country) {
    m_receiver_country = receiver_country;
    m_receiver_country_isSet = true;
}

bool OAIInbound_International_ACH_Transfer::is_receiver_country_Set() const{
    return m_receiver_country_isSet;
}

bool OAIInbound_International_ACH_Transfer::is_receiver_country_Valid() const{
    return m_receiver_country_isValid;
}

QString OAIInbound_International_ACH_Transfer::getReceiverIdentificationNumber() const {
    return m_receiver_identification_number;
}
void OAIInbound_International_ACH_Transfer::setReceiverIdentificationNumber(const QString &receiver_identification_number) {
    m_receiver_identification_number = receiver_identification_number;
    m_receiver_identification_number_isSet = true;
}

bool OAIInbound_International_ACH_Transfer::is_receiver_identification_number_Set() const{
    return m_receiver_identification_number_isSet;
}

bool OAIInbound_International_ACH_Transfer::is_receiver_identification_number_Valid() const{
    return m_receiver_identification_number_isValid;
}

QString OAIInbound_International_ACH_Transfer::getReceiverPostalCode() const {
    return m_receiver_postal_code;
}
void OAIInbound_International_ACH_Transfer::setReceiverPostalCode(const QString &receiver_postal_code) {
    m_receiver_postal_code = receiver_postal_code;
    m_receiver_postal_code_isSet = true;
}

bool OAIInbound_International_ACH_Transfer::is_receiver_postal_code_Set() const{
    return m_receiver_postal_code_isSet;
}

bool OAIInbound_International_ACH_Transfer::is_receiver_postal_code_Valid() const{
    return m_receiver_postal_code_isValid;
}

QString OAIInbound_International_ACH_Transfer::getReceiverStateOrProvince() const {
    return m_receiver_state_or_province;
}
void OAIInbound_International_ACH_Transfer::setReceiverStateOrProvince(const QString &receiver_state_or_province) {
    m_receiver_state_or_province = receiver_state_or_province;
    m_receiver_state_or_province_isSet = true;
}

bool OAIInbound_International_ACH_Transfer::is_receiver_state_or_province_Set() const{
    return m_receiver_state_or_province_isSet;
}

bool OAIInbound_International_ACH_Transfer::is_receiver_state_or_province_Valid() const{
    return m_receiver_state_or_province_isValid;
}

QString OAIInbound_International_ACH_Transfer::getReceiverStreetAddress() const {
    return m_receiver_street_address;
}
void OAIInbound_International_ACH_Transfer::setReceiverStreetAddress(const QString &receiver_street_address) {
    m_receiver_street_address = receiver_street_address;
    m_receiver_street_address_isSet = true;
}

bool OAIInbound_International_ACH_Transfer::is_receiver_street_address_Set() const{
    return m_receiver_street_address_isSet;
}

bool OAIInbound_International_ACH_Transfer::is_receiver_street_address_Valid() const{
    return m_receiver_street_address_isValid;
}

QString OAIInbound_International_ACH_Transfer::getReceivingCompanyOrIndividualName() const {
    return m_receiving_company_or_individual_name;
}
void OAIInbound_International_ACH_Transfer::setReceivingCompanyOrIndividualName(const QString &receiving_company_or_individual_name) {
    m_receiving_company_or_individual_name = receiving_company_or_individual_name;
    m_receiving_company_or_individual_name_isSet = true;
}

bool OAIInbound_International_ACH_Transfer::is_receiving_company_or_individual_name_Set() const{
    return m_receiving_company_or_individual_name_isSet;
}

bool OAIInbound_International_ACH_Transfer::is_receiving_company_or_individual_name_Valid() const{
    return m_receiving_company_or_individual_name_isValid;
}

QString OAIInbound_International_ACH_Transfer::getReceivingDepositoryFinancialInstitutionCountry() const {
    return m_receiving_depository_financial_institution_country;
}
void OAIInbound_International_ACH_Transfer::setReceivingDepositoryFinancialInstitutionCountry(const QString &receiving_depository_financial_institution_country) {
    m_receiving_depository_financial_institution_country = receiving_depository_financial_institution_country;
    m_receiving_depository_financial_institution_country_isSet = true;
}

bool OAIInbound_International_ACH_Transfer::is_receiving_depository_financial_institution_country_Set() const{
    return m_receiving_depository_financial_institution_country_isSet;
}

bool OAIInbound_International_ACH_Transfer::is_receiving_depository_financial_institution_country_Valid() const{
    return m_receiving_depository_financial_institution_country_isValid;
}

QString OAIInbound_International_ACH_Transfer::getReceivingDepositoryFinancialInstitutionId() const {
    return m_receiving_depository_financial_institution_id;
}
void OAIInbound_International_ACH_Transfer::setReceivingDepositoryFinancialInstitutionId(const QString &receiving_depository_financial_institution_id) {
    m_receiving_depository_financial_institution_id = receiving_depository_financial_institution_id;
    m_receiving_depository_financial_institution_id_isSet = true;
}

bool OAIInbound_International_ACH_Transfer::is_receiving_depository_financial_institution_id_Set() const{
    return m_receiving_depository_financial_institution_id_isSet;
}

bool OAIInbound_International_ACH_Transfer::is_receiving_depository_financial_institution_id_Valid() const{
    return m_receiving_depository_financial_institution_id_isValid;
}

QString OAIInbound_International_ACH_Transfer::getReceivingDepositoryFinancialInstitutionIdQualifier() const {
    return m_receiving_depository_financial_institution_id_qualifier;
}
void OAIInbound_International_ACH_Transfer::setReceivingDepositoryFinancialInstitutionIdQualifier(const QString &receiving_depository_financial_institution_id_qualifier) {
    m_receiving_depository_financial_institution_id_qualifier = receiving_depository_financial_institution_id_qualifier;
    m_receiving_depository_financial_institution_id_qualifier_isSet = true;
}

bool OAIInbound_International_ACH_Transfer::is_receiving_depository_financial_institution_id_qualifier_Set() const{
    return m_receiving_depository_financial_institution_id_qualifier_isSet;
}

bool OAIInbound_International_ACH_Transfer::is_receiving_depository_financial_institution_id_qualifier_Valid() const{
    return m_receiving_depository_financial_institution_id_qualifier_isValid;
}

QString OAIInbound_International_ACH_Transfer::getReceivingDepositoryFinancialInstitutionName() const {
    return m_receiving_depository_financial_institution_name;
}
void OAIInbound_International_ACH_Transfer::setReceivingDepositoryFinancialInstitutionName(const QString &receiving_depository_financial_institution_name) {
    m_receiving_depository_financial_institution_name = receiving_depository_financial_institution_name;
    m_receiving_depository_financial_institution_name_isSet = true;
}

bool OAIInbound_International_ACH_Transfer::is_receiving_depository_financial_institution_name_Set() const{
    return m_receiving_depository_financial_institution_name_isSet;
}

bool OAIInbound_International_ACH_Transfer::is_receiving_depository_financial_institution_name_Valid() const{
    return m_receiving_depository_financial_institution_name_isValid;
}

QString OAIInbound_International_ACH_Transfer::getTraceNumber() const {
    return m_trace_number;
}
void OAIInbound_International_ACH_Transfer::setTraceNumber(const QString &trace_number) {
    m_trace_number = trace_number;
    m_trace_number_isSet = true;
}

bool OAIInbound_International_ACH_Transfer::is_trace_number_Set() const{
    return m_trace_number_isSet;
}

bool OAIInbound_International_ACH_Transfer::is_trace_number_Valid() const{
    return m_trace_number_isValid;
}

bool OAIInbound_International_ACH_Transfer::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_destination_country_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_destination_currency_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_foreign_exchange_indicator_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_foreign_exchange_reference_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_foreign_exchange_reference_indicator_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_foreign_payment_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_foreign_trace_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_international_transaction_type_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_originating_currency_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_originating_depository_financial_institution_branch_country_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_originating_depository_financial_institution_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_originating_depository_financial_institution_id_qualifier_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_originating_depository_financial_institution_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_originator_city_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_originator_company_entry_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_originator_country_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_originator_identification_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_originator_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_originator_postal_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_originator_state_or_province_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_originator_street_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_payment_related_information_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_payment_related_information2_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_receiver_city_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_receiver_country_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_receiver_identification_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_receiver_postal_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_receiver_state_or_province_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_receiver_street_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_receiving_company_or_individual_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_receiving_depository_financial_institution_country_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_receiving_depository_financial_institution_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_receiving_depository_financial_institution_id_qualifier_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_receiving_depository_financial_institution_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_trace_number_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIInbound_International_ACH_Transfer::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_amount_isValid && m_destination_country_code_isValid && m_destination_currency_code_isValid && m_foreign_exchange_indicator_isValid && m_foreign_exchange_reference_isValid && m_foreign_exchange_reference_indicator_isValid && m_foreign_payment_amount_isValid && m_foreign_trace_number_isValid && m_international_transaction_type_code_isValid && m_originating_currency_code_isValid && m_originating_depository_financial_institution_branch_country_isValid && m_originating_depository_financial_institution_id_isValid && m_originating_depository_financial_institution_id_qualifier_isValid && m_originating_depository_financial_institution_name_isValid && m_originator_city_isValid && m_originator_company_entry_description_isValid && m_originator_country_isValid && m_originator_identification_isValid && m_originator_name_isValid && m_originator_postal_code_isValid && m_originator_state_or_province_isValid && m_originator_street_address_isValid && m_payment_related_information_isValid && m_payment_related_information2_isValid && m_receiver_city_isValid && m_receiver_country_isValid && m_receiver_identification_number_isValid && m_receiver_postal_code_isValid && m_receiver_state_or_province_isValid && m_receiver_street_address_isValid && m_receiving_company_or_individual_name_isValid && m_receiving_depository_financial_institution_country_isValid && m_receiving_depository_financial_institution_id_isValid && m_receiving_depository_financial_institution_id_qualifier_isValid && m_receiving_depository_financial_institution_name_isValid && m_trace_number_isValid && true;
}

} // namespace OpenAPI
