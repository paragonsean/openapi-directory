# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.action_a_real_time_decision_parameters_card_authorization import ActionARealTimeDecisionParametersCardAuthorization
from openapi_server.models.action_a_real_time_decision_parameters_digital_wallet_authentication import ActionARealTimeDecisionParametersDigitalWalletAuthentication
from openapi_server.models.action_a_real_time_decision_parameters_digital_wallet_token import ActionARealTimeDecisionParametersDigitalWalletToken
from openapi_server import util


class ActionARealTimeDecisionParameters(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, card_authorization: ActionARealTimeDecisionParametersCardAuthorization=None, digital_wallet_authentication: ActionARealTimeDecisionParametersDigitalWalletAuthentication=None, digital_wallet_token: ActionARealTimeDecisionParametersDigitalWalletToken=None):
        """ActionARealTimeDecisionParameters - a model defined in OpenAPI

        :param card_authorization: The card_authorization of this ActionARealTimeDecisionParameters.
        :param digital_wallet_authentication: The digital_wallet_authentication of this ActionARealTimeDecisionParameters.
        :param digital_wallet_token: The digital_wallet_token of this ActionARealTimeDecisionParameters.
        """
        self.openapi_types = {
            'card_authorization': ActionARealTimeDecisionParametersCardAuthorization,
            'digital_wallet_authentication': ActionARealTimeDecisionParametersDigitalWalletAuthentication,
            'digital_wallet_token': ActionARealTimeDecisionParametersDigitalWalletToken
        }

        self.attribute_map = {
            'card_authorization': 'card_authorization',
            'digital_wallet_authentication': 'digital_wallet_authentication',
            'digital_wallet_token': 'digital_wallet_token'
        }

        self._card_authorization = card_authorization
        self._digital_wallet_authentication = digital_wallet_authentication
        self._digital_wallet_token = digital_wallet_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ActionARealTimeDecisionParameters':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The action_a_real_time_decision_parameters of this ActionARealTimeDecisionParameters.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def card_authorization(self):
        """Gets the card_authorization of this ActionARealTimeDecisionParameters.


        :return: The card_authorization of this ActionARealTimeDecisionParameters.
        :rtype: ActionARealTimeDecisionParametersCardAuthorization
        """
        return self._card_authorization

    @card_authorization.setter
    def card_authorization(self, card_authorization):
        """Sets the card_authorization of this ActionARealTimeDecisionParameters.


        :param card_authorization: The card_authorization of this ActionARealTimeDecisionParameters.
        :type card_authorization: ActionARealTimeDecisionParametersCardAuthorization
        """

        self._card_authorization = card_authorization

    @property
    def digital_wallet_authentication(self):
        """Gets the digital_wallet_authentication of this ActionARealTimeDecisionParameters.


        :return: The digital_wallet_authentication of this ActionARealTimeDecisionParameters.
        :rtype: ActionARealTimeDecisionParametersDigitalWalletAuthentication
        """
        return self._digital_wallet_authentication

    @digital_wallet_authentication.setter
    def digital_wallet_authentication(self, digital_wallet_authentication):
        """Sets the digital_wallet_authentication of this ActionARealTimeDecisionParameters.


        :param digital_wallet_authentication: The digital_wallet_authentication of this ActionARealTimeDecisionParameters.
        :type digital_wallet_authentication: ActionARealTimeDecisionParametersDigitalWalletAuthentication
        """

        self._digital_wallet_authentication = digital_wallet_authentication

    @property
    def digital_wallet_token(self):
        """Gets the digital_wallet_token of this ActionARealTimeDecisionParameters.


        :return: The digital_wallet_token of this ActionARealTimeDecisionParameters.
        :rtype: ActionARealTimeDecisionParametersDigitalWalletToken
        """
        return self._digital_wallet_token

    @digital_wallet_token.setter
    def digital_wallet_token(self, digital_wallet_token):
        """Sets the digital_wallet_token of this ActionARealTimeDecisionParameters.


        :param digital_wallet_token: The digital_wallet_token of this ActionARealTimeDecisionParameters.
        :type digital_wallet_token: ActionARealTimeDecisionParametersDigitalWalletToken
        """

        self._digital_wallet_token = digital_wallet_token
