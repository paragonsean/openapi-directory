# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.declined_transaction1 import DeclinedTransaction1
from openapi_server.models.pending_transaction import PendingTransaction
from openapi_server import util


class InboundCardAuthorizationSimulationResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, declined_transaction: DeclinedTransaction1=None, pending_transaction: PendingTransaction=None, type: str=None):
        """InboundCardAuthorizationSimulationResult - a model defined in OpenAPI

        :param declined_transaction: The declined_transaction of this InboundCardAuthorizationSimulationResult.
        :param pending_transaction: The pending_transaction of this InboundCardAuthorizationSimulationResult.
        :param type: The type of this InboundCardAuthorizationSimulationResult.
        """
        self.openapi_types = {
            'declined_transaction': DeclinedTransaction1,
            'pending_transaction': PendingTransaction,
            'type': str
        }

        self.attribute_map = {
            'declined_transaction': 'declined_transaction',
            'pending_transaction': 'pending_transaction',
            'type': 'type'
        }

        self._declined_transaction = declined_transaction
        self._pending_transaction = pending_transaction
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InboundCardAuthorizationSimulationResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The inbound_card_authorization_simulation_result of this InboundCardAuthorizationSimulationResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def declined_transaction(self):
        """Gets the declined_transaction of this InboundCardAuthorizationSimulationResult.


        :return: The declined_transaction of this InboundCardAuthorizationSimulationResult.
        :rtype: DeclinedTransaction1
        """
        return self._declined_transaction

    @declined_transaction.setter
    def declined_transaction(self, declined_transaction):
        """Sets the declined_transaction of this InboundCardAuthorizationSimulationResult.


        :param declined_transaction: The declined_transaction of this InboundCardAuthorizationSimulationResult.
        :type declined_transaction: DeclinedTransaction1
        """
        if declined_transaction is None:
            raise ValueError("Invalid value for `declined_transaction`, must not be `None`")

        self._declined_transaction = declined_transaction

    @property
    def pending_transaction(self):
        """Gets the pending_transaction of this InboundCardAuthorizationSimulationResult.


        :return: The pending_transaction of this InboundCardAuthorizationSimulationResult.
        :rtype: PendingTransaction
        """
        return self._pending_transaction

    @pending_transaction.setter
    def pending_transaction(self, pending_transaction):
        """Sets the pending_transaction of this InboundCardAuthorizationSimulationResult.


        :param pending_transaction: The pending_transaction of this InboundCardAuthorizationSimulationResult.
        :type pending_transaction: PendingTransaction
        """
        if pending_transaction is None:
            raise ValueError("Invalid value for `pending_transaction`, must not be `None`")

        self._pending_transaction = pending_transaction

    @property
    def type(self):
        """Gets the type of this InboundCardAuthorizationSimulationResult.

        A constant representing the object's type. For this resource it will always be `inbound_card_authorization_simulation_result`.

        :return: The type of this InboundCardAuthorizationSimulationResult.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this InboundCardAuthorizationSimulationResult.

        A constant representing the object's type. For this resource it will always be `inbound_card_authorization_simulation_result`.

        :param type: The type of this InboundCardAuthorizationSimulationResult.
        :type type: str
        """
        allowed_values = ["inbound_card_authorization_simulation_result"]  # noqa: E501
        if type not in allowed_values:
            raise ValueError(
                "Invalid value for `type` ({0}), must be one of {1}"
                .format(type, allowed_values)
            )

        self._type = type
