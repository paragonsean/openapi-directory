# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_a_bookkeeping_entry_set_parameters_entries_inner import CreateABookkeepingEntrySetParametersEntriesInner
from openapi_server import util


class CreateABookkeepingEntrySetParameters(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, _date: datetime=None, entries: List[CreateABookkeepingEntrySetParametersEntriesInner]=None, transaction_id: str=None):
        """CreateABookkeepingEntrySetParameters - a model defined in OpenAPI

        :param _date: The _date of this CreateABookkeepingEntrySetParameters.
        :param entries: The entries of this CreateABookkeepingEntrySetParameters.
        :param transaction_id: The transaction_id of this CreateABookkeepingEntrySetParameters.
        """
        self.openapi_types = {
            '_date': datetime,
            'entries': List[CreateABookkeepingEntrySetParametersEntriesInner],
            'transaction_id': str
        }

        self.attribute_map = {
            '_date': 'date',
            'entries': 'entries',
            'transaction_id': 'transaction_id'
        }

        self.__date = _date
        self._entries = entries
        self._transaction_id = transaction_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateABookkeepingEntrySetParameters':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The create_a_bookkeeping_entry_set_parameters of this CreateABookkeepingEntrySetParameters.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def _date(self):
        """Gets the _date of this CreateABookkeepingEntrySetParameters.

        The date of the transaction. If `transaction_id` is provided, this must match the `created_at` field on that resource.

        :return: The _date of this CreateABookkeepingEntrySetParameters.
        :rtype: datetime
        """
        return self.__date

    @_date.setter
    def _date(self, _date):
        """Sets the _date of this CreateABookkeepingEntrySetParameters.

        The date of the transaction. If `transaction_id` is provided, this must match the `created_at` field on that resource.

        :param _date: The _date of this CreateABookkeepingEntrySetParameters.
        :type _date: datetime
        """

        self.__date = _date

    @property
    def entries(self):
        """Gets the entries of this CreateABookkeepingEntrySetParameters.

        The bookkeeping entries.

        :return: The entries of this CreateABookkeepingEntrySetParameters.
        :rtype: List[CreateABookkeepingEntrySetParametersEntriesInner]
        """
        return self._entries

    @entries.setter
    def entries(self, entries):
        """Sets the entries of this CreateABookkeepingEntrySetParameters.

        The bookkeeping entries.

        :param entries: The entries of this CreateABookkeepingEntrySetParameters.
        :type entries: List[CreateABookkeepingEntrySetParametersEntriesInner]
        """
        if entries is None:
            raise ValueError("Invalid value for `entries`, must not be `None`")

        self._entries = entries

    @property
    def transaction_id(self):
        """Gets the transaction_id of this CreateABookkeepingEntrySetParameters.

        The identifier of the Transaction related to this entry set, if any.

        :return: The transaction_id of this CreateABookkeepingEntrySetParameters.
        :rtype: str
        """
        return self._transaction_id

    @transaction_id.setter
    def transaction_id(self, transaction_id):
        """Sets the transaction_id of this CreateABookkeepingEntrySetParameters.

        The identifier of the Transaction related to this entry set, if any.

        :param transaction_id: The transaction_id of this CreateABookkeepingEntrySetParameters.
        :type transaction_id: str
        """

        self._transaction_id = transaction_id
