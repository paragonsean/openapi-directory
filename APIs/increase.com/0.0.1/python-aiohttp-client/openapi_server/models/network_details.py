# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.visa import Visa
from openapi_server import util


class NetworkDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, visa: Visa=None):
        """NetworkDetails - a model defined in OpenAPI

        :param visa: The visa of this NetworkDetails.
        """
        self.openapi_types = {
            'visa': Visa
        }

        self.attribute_map = {
            'visa': 'visa'
        }

        self._visa = visa

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NetworkDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Network_Details of this NetworkDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def visa(self):
        """Gets the visa of this NetworkDetails.


        :return: The visa of this NetworkDetails.
        :rtype: Visa
        """
        return self._visa

    @visa.setter
    def visa(self, visa):
        """Sets the visa of this NetworkDetails.


        :param visa: The visa of this NetworkDetails.
        :type visa: Visa
        """
        if visa is None:
            raise ValueError("Invalid value for `visa`, must not be `None`")

        self._visa = visa
