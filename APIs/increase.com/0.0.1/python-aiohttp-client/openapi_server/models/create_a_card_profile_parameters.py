# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_a_card_profile_parameters_digital_wallets import CreateACardProfileParametersDigitalWallets
from openapi_server import util


class CreateACardProfileParameters(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description: str=None, digital_wallets: CreateACardProfileParametersDigitalWallets=None):
        """CreateACardProfileParameters - a model defined in OpenAPI

        :param description: The description of this CreateACardProfileParameters.
        :param digital_wallets: The digital_wallets of this CreateACardProfileParameters.
        """
        self.openapi_types = {
            'description': str,
            'digital_wallets': CreateACardProfileParametersDigitalWallets
        }

        self.attribute_map = {
            'description': 'description',
            'digital_wallets': 'digital_wallets'
        }

        self._description = description
        self._digital_wallets = digital_wallets

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateACardProfileParameters':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The create_a_card_profile_parameters of this CreateACardProfileParameters.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self):
        """Gets the description of this CreateACardProfileParameters.

        A description you can use to identify the Card Profile.

        :return: The description of this CreateACardProfileParameters.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this CreateACardProfileParameters.

        A description you can use to identify the Card Profile.

        :param description: The description of this CreateACardProfileParameters.
        :type description: str
        """
        if description is None:
            raise ValueError("Invalid value for `description`, must not be `None`")
        if description is not None and len(description) > 200:
            raise ValueError("Invalid value for `description`, length must be less than or equal to `200`")
        if description is not None and len(description) < 1:
            raise ValueError("Invalid value for `description`, length must be greater than or equal to `1`")

        self._description = description

    @property
    def digital_wallets(self):
        """Gets the digital_wallets of this CreateACardProfileParameters.


        :return: The digital_wallets of this CreateACardProfileParameters.
        :rtype: CreateACardProfileParametersDigitalWallets
        """
        return self._digital_wallets

    @digital_wallets.setter
    def digital_wallets(self, digital_wallets):
        """Sets the digital_wallets of this CreateACardProfileParameters.


        :param digital_wallets: The digital_wallets of this CreateACardProfileParameters.
        :type digital_wallets: CreateACardProfileParametersDigitalWallets
        """
        if digital_wallets is None:
            raise ValueError("Invalid value for `digital_wallets`, must not be `None`")

        self._digital_wallets = digital_wallets
