# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class InternationalACHDecline(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, amount: int=None, destination_country_code: str=None, destination_currency_code: str=None, foreign_exchange_indicator: str=None, foreign_exchange_reference: str=None, foreign_exchange_reference_indicator: str=None, foreign_payment_amount: int=None, foreign_trace_number: str=None, international_transaction_type_code: str=None, originating_currency_code: str=None, originating_depository_financial_institution_branch_country: str=None, originating_depository_financial_institution_id: str=None, originating_depository_financial_institution_id_qualifier: str=None, originating_depository_financial_institution_name: str=None, originator_city: str=None, originator_company_entry_description: str=None, originator_country: str=None, originator_identification: str=None, originator_name: str=None, originator_postal_code: str=None, originator_state_or_province: str=None, originator_street_address: str=None, payment_related_information: str=None, payment_related_information2: str=None, receiver_city: str=None, receiver_country: str=None, receiver_identification_number: str=None, receiver_postal_code: str=None, receiver_state_or_province: str=None, receiver_street_address: str=None, receiving_company_or_individual_name: str=None, receiving_depository_financial_institution_country: str=None, receiving_depository_financial_institution_id: str=None, receiving_depository_financial_institution_id_qualifier: str=None, receiving_depository_financial_institution_name: str=None, trace_number: str=None):
        """InternationalACHDecline - a model defined in OpenAPI

        :param amount: The amount of this InternationalACHDecline.
        :param destination_country_code: The destination_country_code of this InternationalACHDecline.
        :param destination_currency_code: The destination_currency_code of this InternationalACHDecline.
        :param foreign_exchange_indicator: The foreign_exchange_indicator of this InternationalACHDecline.
        :param foreign_exchange_reference: The foreign_exchange_reference of this InternationalACHDecline.
        :param foreign_exchange_reference_indicator: The foreign_exchange_reference_indicator of this InternationalACHDecline.
        :param foreign_payment_amount: The foreign_payment_amount of this InternationalACHDecline.
        :param foreign_trace_number: The foreign_trace_number of this InternationalACHDecline.
        :param international_transaction_type_code: The international_transaction_type_code of this InternationalACHDecline.
        :param originating_currency_code: The originating_currency_code of this InternationalACHDecline.
        :param originating_depository_financial_institution_branch_country: The originating_depository_financial_institution_branch_country of this InternationalACHDecline.
        :param originating_depository_financial_institution_id: The originating_depository_financial_institution_id of this InternationalACHDecline.
        :param originating_depository_financial_institution_id_qualifier: The originating_depository_financial_institution_id_qualifier of this InternationalACHDecline.
        :param originating_depository_financial_institution_name: The originating_depository_financial_institution_name of this InternationalACHDecline.
        :param originator_city: The originator_city of this InternationalACHDecline.
        :param originator_company_entry_description: The originator_company_entry_description of this InternationalACHDecline.
        :param originator_country: The originator_country of this InternationalACHDecline.
        :param originator_identification: The originator_identification of this InternationalACHDecline.
        :param originator_name: The originator_name of this InternationalACHDecline.
        :param originator_postal_code: The originator_postal_code of this InternationalACHDecline.
        :param originator_state_or_province: The originator_state_or_province of this InternationalACHDecline.
        :param originator_street_address: The originator_street_address of this InternationalACHDecline.
        :param payment_related_information: The payment_related_information of this InternationalACHDecline.
        :param payment_related_information2: The payment_related_information2 of this InternationalACHDecline.
        :param receiver_city: The receiver_city of this InternationalACHDecline.
        :param receiver_country: The receiver_country of this InternationalACHDecline.
        :param receiver_identification_number: The receiver_identification_number of this InternationalACHDecline.
        :param receiver_postal_code: The receiver_postal_code of this InternationalACHDecline.
        :param receiver_state_or_province: The receiver_state_or_province of this InternationalACHDecline.
        :param receiver_street_address: The receiver_street_address of this InternationalACHDecline.
        :param receiving_company_or_individual_name: The receiving_company_or_individual_name of this InternationalACHDecline.
        :param receiving_depository_financial_institution_country: The receiving_depository_financial_institution_country of this InternationalACHDecline.
        :param receiving_depository_financial_institution_id: The receiving_depository_financial_institution_id of this InternationalACHDecline.
        :param receiving_depository_financial_institution_id_qualifier: The receiving_depository_financial_institution_id_qualifier of this InternationalACHDecline.
        :param receiving_depository_financial_institution_name: The receiving_depository_financial_institution_name of this InternationalACHDecline.
        :param trace_number: The trace_number of this InternationalACHDecline.
        """
        self.openapi_types = {
            'amount': int,
            'destination_country_code': str,
            'destination_currency_code': str,
            'foreign_exchange_indicator': str,
            'foreign_exchange_reference': str,
            'foreign_exchange_reference_indicator': str,
            'foreign_payment_amount': int,
            'foreign_trace_number': str,
            'international_transaction_type_code': str,
            'originating_currency_code': str,
            'originating_depository_financial_institution_branch_country': str,
            'originating_depository_financial_institution_id': str,
            'originating_depository_financial_institution_id_qualifier': str,
            'originating_depository_financial_institution_name': str,
            'originator_city': str,
            'originator_company_entry_description': str,
            'originator_country': str,
            'originator_identification': str,
            'originator_name': str,
            'originator_postal_code': str,
            'originator_state_or_province': str,
            'originator_street_address': str,
            'payment_related_information': str,
            'payment_related_information2': str,
            'receiver_city': str,
            'receiver_country': str,
            'receiver_identification_number': str,
            'receiver_postal_code': str,
            'receiver_state_or_province': str,
            'receiver_street_address': str,
            'receiving_company_or_individual_name': str,
            'receiving_depository_financial_institution_country': str,
            'receiving_depository_financial_institution_id': str,
            'receiving_depository_financial_institution_id_qualifier': str,
            'receiving_depository_financial_institution_name': str,
            'trace_number': str
        }

        self.attribute_map = {
            'amount': 'amount',
            'destination_country_code': 'destination_country_code',
            'destination_currency_code': 'destination_currency_code',
            'foreign_exchange_indicator': 'foreign_exchange_indicator',
            'foreign_exchange_reference': 'foreign_exchange_reference',
            'foreign_exchange_reference_indicator': 'foreign_exchange_reference_indicator',
            'foreign_payment_amount': 'foreign_payment_amount',
            'foreign_trace_number': 'foreign_trace_number',
            'international_transaction_type_code': 'international_transaction_type_code',
            'originating_currency_code': 'originating_currency_code',
            'originating_depository_financial_institution_branch_country': 'originating_depository_financial_institution_branch_country',
            'originating_depository_financial_institution_id': 'originating_depository_financial_institution_id',
            'originating_depository_financial_institution_id_qualifier': 'originating_depository_financial_institution_id_qualifier',
            'originating_depository_financial_institution_name': 'originating_depository_financial_institution_name',
            'originator_city': 'originator_city',
            'originator_company_entry_description': 'originator_company_entry_description',
            'originator_country': 'originator_country',
            'originator_identification': 'originator_identification',
            'originator_name': 'originator_name',
            'originator_postal_code': 'originator_postal_code',
            'originator_state_or_province': 'originator_state_or_province',
            'originator_street_address': 'originator_street_address',
            'payment_related_information': 'payment_related_information',
            'payment_related_information2': 'payment_related_information2',
            'receiver_city': 'receiver_city',
            'receiver_country': 'receiver_country',
            'receiver_identification_number': 'receiver_identification_number',
            'receiver_postal_code': 'receiver_postal_code',
            'receiver_state_or_province': 'receiver_state_or_province',
            'receiver_street_address': 'receiver_street_address',
            'receiving_company_or_individual_name': 'receiving_company_or_individual_name',
            'receiving_depository_financial_institution_country': 'receiving_depository_financial_institution_country',
            'receiving_depository_financial_institution_id': 'receiving_depository_financial_institution_id',
            'receiving_depository_financial_institution_id_qualifier': 'receiving_depository_financial_institution_id_qualifier',
            'receiving_depository_financial_institution_name': 'receiving_depository_financial_institution_name',
            'trace_number': 'trace_number'
        }

        self._amount = amount
        self._destination_country_code = destination_country_code
        self._destination_currency_code = destination_currency_code
        self._foreign_exchange_indicator = foreign_exchange_indicator
        self._foreign_exchange_reference = foreign_exchange_reference
        self._foreign_exchange_reference_indicator = foreign_exchange_reference_indicator
        self._foreign_payment_amount = foreign_payment_amount
        self._foreign_trace_number = foreign_trace_number
        self._international_transaction_type_code = international_transaction_type_code
        self._originating_currency_code = originating_currency_code
        self._originating_depository_financial_institution_branch_country = originating_depository_financial_institution_branch_country
        self._originating_depository_financial_institution_id = originating_depository_financial_institution_id
        self._originating_depository_financial_institution_id_qualifier = originating_depository_financial_institution_id_qualifier
        self._originating_depository_financial_institution_name = originating_depository_financial_institution_name
        self._originator_city = originator_city
        self._originator_company_entry_description = originator_company_entry_description
        self._originator_country = originator_country
        self._originator_identification = originator_identification
        self._originator_name = originator_name
        self._originator_postal_code = originator_postal_code
        self._originator_state_or_province = originator_state_or_province
        self._originator_street_address = originator_street_address
        self._payment_related_information = payment_related_information
        self._payment_related_information2 = payment_related_information2
        self._receiver_city = receiver_city
        self._receiver_country = receiver_country
        self._receiver_identification_number = receiver_identification_number
        self._receiver_postal_code = receiver_postal_code
        self._receiver_state_or_province = receiver_state_or_province
        self._receiver_street_address = receiver_street_address
        self._receiving_company_or_individual_name = receiving_company_or_individual_name
        self._receiving_depository_financial_institution_country = receiving_depository_financial_institution_country
        self._receiving_depository_financial_institution_id = receiving_depository_financial_institution_id
        self._receiving_depository_financial_institution_id_qualifier = receiving_depository_financial_institution_id_qualifier
        self._receiving_depository_financial_institution_name = receiving_depository_financial_institution_name
        self._trace_number = trace_number

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InternationalACHDecline':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The International_ACH_Decline of this InternationalACHDecline.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def amount(self):
        """Gets the amount of this InternationalACHDecline.

        The declined amount in the minor unit of the destination account currency. For dollars, for example, this is cents.

        :return: The amount of this InternationalACHDecline.
        :rtype: int
        """
        return self._amount

    @amount.setter
    def amount(self, amount):
        """Sets the amount of this InternationalACHDecline.

        The declined amount in the minor unit of the destination account currency. For dollars, for example, this is cents.

        :param amount: The amount of this InternationalACHDecline.
        :type amount: int
        """
        if amount is None:
            raise ValueError("Invalid value for `amount`, must not be `None`")

        self._amount = amount

    @property
    def destination_country_code(self):
        """Gets the destination_country_code of this InternationalACHDecline.

        

        :return: The destination_country_code of this InternationalACHDecline.
        :rtype: str
        """
        return self._destination_country_code

    @destination_country_code.setter
    def destination_country_code(self, destination_country_code):
        """Sets the destination_country_code of this InternationalACHDecline.

        

        :param destination_country_code: The destination_country_code of this InternationalACHDecline.
        :type destination_country_code: str
        """
        if destination_country_code is None:
            raise ValueError("Invalid value for `destination_country_code`, must not be `None`")

        self._destination_country_code = destination_country_code

    @property
    def destination_currency_code(self):
        """Gets the destination_currency_code of this InternationalACHDecline.

        

        :return: The destination_currency_code of this InternationalACHDecline.
        :rtype: str
        """
        return self._destination_currency_code

    @destination_currency_code.setter
    def destination_currency_code(self, destination_currency_code):
        """Sets the destination_currency_code of this InternationalACHDecline.

        

        :param destination_currency_code: The destination_currency_code of this InternationalACHDecline.
        :type destination_currency_code: str
        """
        if destination_currency_code is None:
            raise ValueError("Invalid value for `destination_currency_code`, must not be `None`")

        self._destination_currency_code = destination_currency_code

    @property
    def foreign_exchange_indicator(self):
        """Gets the foreign_exchange_indicator of this InternationalACHDecline.

        

        :return: The foreign_exchange_indicator of this InternationalACHDecline.
        :rtype: str
        """
        return self._foreign_exchange_indicator

    @foreign_exchange_indicator.setter
    def foreign_exchange_indicator(self, foreign_exchange_indicator):
        """Sets the foreign_exchange_indicator of this InternationalACHDecline.

        

        :param foreign_exchange_indicator: The foreign_exchange_indicator of this InternationalACHDecline.
        :type foreign_exchange_indicator: str
        """
        if foreign_exchange_indicator is None:
            raise ValueError("Invalid value for `foreign_exchange_indicator`, must not be `None`")

        self._foreign_exchange_indicator = foreign_exchange_indicator

    @property
    def foreign_exchange_reference(self):
        """Gets the foreign_exchange_reference of this InternationalACHDecline.

        

        :return: The foreign_exchange_reference of this InternationalACHDecline.
        :rtype: str
        """
        return self._foreign_exchange_reference

    @foreign_exchange_reference.setter
    def foreign_exchange_reference(self, foreign_exchange_reference):
        """Sets the foreign_exchange_reference of this InternationalACHDecline.

        

        :param foreign_exchange_reference: The foreign_exchange_reference of this InternationalACHDecline.
        :type foreign_exchange_reference: str
        """
        if foreign_exchange_reference is None:
            raise ValueError("Invalid value for `foreign_exchange_reference`, must not be `None`")

        self._foreign_exchange_reference = foreign_exchange_reference

    @property
    def foreign_exchange_reference_indicator(self):
        """Gets the foreign_exchange_reference_indicator of this InternationalACHDecline.

        

        :return: The foreign_exchange_reference_indicator of this InternationalACHDecline.
        :rtype: str
        """
        return self._foreign_exchange_reference_indicator

    @foreign_exchange_reference_indicator.setter
    def foreign_exchange_reference_indicator(self, foreign_exchange_reference_indicator):
        """Sets the foreign_exchange_reference_indicator of this InternationalACHDecline.

        

        :param foreign_exchange_reference_indicator: The foreign_exchange_reference_indicator of this InternationalACHDecline.
        :type foreign_exchange_reference_indicator: str
        """
        if foreign_exchange_reference_indicator is None:
            raise ValueError("Invalid value for `foreign_exchange_reference_indicator`, must not be `None`")

        self._foreign_exchange_reference_indicator = foreign_exchange_reference_indicator

    @property
    def foreign_payment_amount(self):
        """Gets the foreign_payment_amount of this InternationalACHDecline.

        

        :return: The foreign_payment_amount of this InternationalACHDecline.
        :rtype: int
        """
        return self._foreign_payment_amount

    @foreign_payment_amount.setter
    def foreign_payment_amount(self, foreign_payment_amount):
        """Sets the foreign_payment_amount of this InternationalACHDecline.

        

        :param foreign_payment_amount: The foreign_payment_amount of this InternationalACHDecline.
        :type foreign_payment_amount: int
        """
        if foreign_payment_amount is None:
            raise ValueError("Invalid value for `foreign_payment_amount`, must not be `None`")

        self._foreign_payment_amount = foreign_payment_amount

    @property
    def foreign_trace_number(self):
        """Gets the foreign_trace_number of this InternationalACHDecline.

        

        :return: The foreign_trace_number of this InternationalACHDecline.
        :rtype: str
        """
        return self._foreign_trace_number

    @foreign_trace_number.setter
    def foreign_trace_number(self, foreign_trace_number):
        """Sets the foreign_trace_number of this InternationalACHDecline.

        

        :param foreign_trace_number: The foreign_trace_number of this InternationalACHDecline.
        :type foreign_trace_number: str
        """
        if foreign_trace_number is None:
            raise ValueError("Invalid value for `foreign_trace_number`, must not be `None`")

        self._foreign_trace_number = foreign_trace_number

    @property
    def international_transaction_type_code(self):
        """Gets the international_transaction_type_code of this InternationalACHDecline.

        

        :return: The international_transaction_type_code of this InternationalACHDecline.
        :rtype: str
        """
        return self._international_transaction_type_code

    @international_transaction_type_code.setter
    def international_transaction_type_code(self, international_transaction_type_code):
        """Sets the international_transaction_type_code of this InternationalACHDecline.

        

        :param international_transaction_type_code: The international_transaction_type_code of this InternationalACHDecline.
        :type international_transaction_type_code: str
        """
        if international_transaction_type_code is None:
            raise ValueError("Invalid value for `international_transaction_type_code`, must not be `None`")

        self._international_transaction_type_code = international_transaction_type_code

    @property
    def originating_currency_code(self):
        """Gets the originating_currency_code of this InternationalACHDecline.

        

        :return: The originating_currency_code of this InternationalACHDecline.
        :rtype: str
        """
        return self._originating_currency_code

    @originating_currency_code.setter
    def originating_currency_code(self, originating_currency_code):
        """Sets the originating_currency_code of this InternationalACHDecline.

        

        :param originating_currency_code: The originating_currency_code of this InternationalACHDecline.
        :type originating_currency_code: str
        """
        if originating_currency_code is None:
            raise ValueError("Invalid value for `originating_currency_code`, must not be `None`")

        self._originating_currency_code = originating_currency_code

    @property
    def originating_depository_financial_institution_branch_country(self):
        """Gets the originating_depository_financial_institution_branch_country of this InternationalACHDecline.

        

        :return: The originating_depository_financial_institution_branch_country of this InternationalACHDecline.
        :rtype: str
        """
        return self._originating_depository_financial_institution_branch_country

    @originating_depository_financial_institution_branch_country.setter
    def originating_depository_financial_institution_branch_country(self, originating_depository_financial_institution_branch_country):
        """Sets the originating_depository_financial_institution_branch_country of this InternationalACHDecline.

        

        :param originating_depository_financial_institution_branch_country: The originating_depository_financial_institution_branch_country of this InternationalACHDecline.
        :type originating_depository_financial_institution_branch_country: str
        """
        if originating_depository_financial_institution_branch_country is None:
            raise ValueError("Invalid value for `originating_depository_financial_institution_branch_country`, must not be `None`")

        self._originating_depository_financial_institution_branch_country = originating_depository_financial_institution_branch_country

    @property
    def originating_depository_financial_institution_id(self):
        """Gets the originating_depository_financial_institution_id of this InternationalACHDecline.

        

        :return: The originating_depository_financial_institution_id of this InternationalACHDecline.
        :rtype: str
        """
        return self._originating_depository_financial_institution_id

    @originating_depository_financial_institution_id.setter
    def originating_depository_financial_institution_id(self, originating_depository_financial_institution_id):
        """Sets the originating_depository_financial_institution_id of this InternationalACHDecline.

        

        :param originating_depository_financial_institution_id: The originating_depository_financial_institution_id of this InternationalACHDecline.
        :type originating_depository_financial_institution_id: str
        """
        if originating_depository_financial_institution_id is None:
            raise ValueError("Invalid value for `originating_depository_financial_institution_id`, must not be `None`")

        self._originating_depository_financial_institution_id = originating_depository_financial_institution_id

    @property
    def originating_depository_financial_institution_id_qualifier(self):
        """Gets the originating_depository_financial_institution_id_qualifier of this InternationalACHDecline.

        

        :return: The originating_depository_financial_institution_id_qualifier of this InternationalACHDecline.
        :rtype: str
        """
        return self._originating_depository_financial_institution_id_qualifier

    @originating_depository_financial_institution_id_qualifier.setter
    def originating_depository_financial_institution_id_qualifier(self, originating_depository_financial_institution_id_qualifier):
        """Sets the originating_depository_financial_institution_id_qualifier of this InternationalACHDecline.

        

        :param originating_depository_financial_institution_id_qualifier: The originating_depository_financial_institution_id_qualifier of this InternationalACHDecline.
        :type originating_depository_financial_institution_id_qualifier: str
        """
        if originating_depository_financial_institution_id_qualifier is None:
            raise ValueError("Invalid value for `originating_depository_financial_institution_id_qualifier`, must not be `None`")

        self._originating_depository_financial_institution_id_qualifier = originating_depository_financial_institution_id_qualifier

    @property
    def originating_depository_financial_institution_name(self):
        """Gets the originating_depository_financial_institution_name of this InternationalACHDecline.

        

        :return: The originating_depository_financial_institution_name of this InternationalACHDecline.
        :rtype: str
        """
        return self._originating_depository_financial_institution_name

    @originating_depository_financial_institution_name.setter
    def originating_depository_financial_institution_name(self, originating_depository_financial_institution_name):
        """Sets the originating_depository_financial_institution_name of this InternationalACHDecline.

        

        :param originating_depository_financial_institution_name: The originating_depository_financial_institution_name of this InternationalACHDecline.
        :type originating_depository_financial_institution_name: str
        """
        if originating_depository_financial_institution_name is None:
            raise ValueError("Invalid value for `originating_depository_financial_institution_name`, must not be `None`")

        self._originating_depository_financial_institution_name = originating_depository_financial_institution_name

    @property
    def originator_city(self):
        """Gets the originator_city of this InternationalACHDecline.

        

        :return: The originator_city of this InternationalACHDecline.
        :rtype: str
        """
        return self._originator_city

    @originator_city.setter
    def originator_city(self, originator_city):
        """Sets the originator_city of this InternationalACHDecline.

        

        :param originator_city: The originator_city of this InternationalACHDecline.
        :type originator_city: str
        """
        if originator_city is None:
            raise ValueError("Invalid value for `originator_city`, must not be `None`")

        self._originator_city = originator_city

    @property
    def originator_company_entry_description(self):
        """Gets the originator_company_entry_description of this InternationalACHDecline.

        

        :return: The originator_company_entry_description of this InternationalACHDecline.
        :rtype: str
        """
        return self._originator_company_entry_description

    @originator_company_entry_description.setter
    def originator_company_entry_description(self, originator_company_entry_description):
        """Sets the originator_company_entry_description of this InternationalACHDecline.

        

        :param originator_company_entry_description: The originator_company_entry_description of this InternationalACHDecline.
        :type originator_company_entry_description: str
        """
        if originator_company_entry_description is None:
            raise ValueError("Invalid value for `originator_company_entry_description`, must not be `None`")

        self._originator_company_entry_description = originator_company_entry_description

    @property
    def originator_country(self):
        """Gets the originator_country of this InternationalACHDecline.

        

        :return: The originator_country of this InternationalACHDecline.
        :rtype: str
        """
        return self._originator_country

    @originator_country.setter
    def originator_country(self, originator_country):
        """Sets the originator_country of this InternationalACHDecline.

        

        :param originator_country: The originator_country of this InternationalACHDecline.
        :type originator_country: str
        """
        if originator_country is None:
            raise ValueError("Invalid value for `originator_country`, must not be `None`")

        self._originator_country = originator_country

    @property
    def originator_identification(self):
        """Gets the originator_identification of this InternationalACHDecline.

        

        :return: The originator_identification of this InternationalACHDecline.
        :rtype: str
        """
        return self._originator_identification

    @originator_identification.setter
    def originator_identification(self, originator_identification):
        """Sets the originator_identification of this InternationalACHDecline.

        

        :param originator_identification: The originator_identification of this InternationalACHDecline.
        :type originator_identification: str
        """
        if originator_identification is None:
            raise ValueError("Invalid value for `originator_identification`, must not be `None`")

        self._originator_identification = originator_identification

    @property
    def originator_name(self):
        """Gets the originator_name of this InternationalACHDecline.

        

        :return: The originator_name of this InternationalACHDecline.
        :rtype: str
        """
        return self._originator_name

    @originator_name.setter
    def originator_name(self, originator_name):
        """Sets the originator_name of this InternationalACHDecline.

        

        :param originator_name: The originator_name of this InternationalACHDecline.
        :type originator_name: str
        """
        if originator_name is None:
            raise ValueError("Invalid value for `originator_name`, must not be `None`")

        self._originator_name = originator_name

    @property
    def originator_postal_code(self):
        """Gets the originator_postal_code of this InternationalACHDecline.

        

        :return: The originator_postal_code of this InternationalACHDecline.
        :rtype: str
        """
        return self._originator_postal_code

    @originator_postal_code.setter
    def originator_postal_code(self, originator_postal_code):
        """Sets the originator_postal_code of this InternationalACHDecline.

        

        :param originator_postal_code: The originator_postal_code of this InternationalACHDecline.
        :type originator_postal_code: str
        """
        if originator_postal_code is None:
            raise ValueError("Invalid value for `originator_postal_code`, must not be `None`")

        self._originator_postal_code = originator_postal_code

    @property
    def originator_state_or_province(self):
        """Gets the originator_state_or_province of this InternationalACHDecline.

        

        :return: The originator_state_or_province of this InternationalACHDecline.
        :rtype: str
        """
        return self._originator_state_or_province

    @originator_state_or_province.setter
    def originator_state_or_province(self, originator_state_or_province):
        """Sets the originator_state_or_province of this InternationalACHDecline.

        

        :param originator_state_or_province: The originator_state_or_province of this InternationalACHDecline.
        :type originator_state_or_province: str
        """
        if originator_state_or_province is None:
            raise ValueError("Invalid value for `originator_state_or_province`, must not be `None`")

        self._originator_state_or_province = originator_state_or_province

    @property
    def originator_street_address(self):
        """Gets the originator_street_address of this InternationalACHDecline.

        

        :return: The originator_street_address of this InternationalACHDecline.
        :rtype: str
        """
        return self._originator_street_address

    @originator_street_address.setter
    def originator_street_address(self, originator_street_address):
        """Sets the originator_street_address of this InternationalACHDecline.

        

        :param originator_street_address: The originator_street_address of this InternationalACHDecline.
        :type originator_street_address: str
        """
        if originator_street_address is None:
            raise ValueError("Invalid value for `originator_street_address`, must not be `None`")

        self._originator_street_address = originator_street_address

    @property
    def payment_related_information(self):
        """Gets the payment_related_information of this InternationalACHDecline.

        

        :return: The payment_related_information of this InternationalACHDecline.
        :rtype: str
        """
        return self._payment_related_information

    @payment_related_information.setter
    def payment_related_information(self, payment_related_information):
        """Sets the payment_related_information of this InternationalACHDecline.

        

        :param payment_related_information: The payment_related_information of this InternationalACHDecline.
        :type payment_related_information: str
        """
        if payment_related_information is None:
            raise ValueError("Invalid value for `payment_related_information`, must not be `None`")

        self._payment_related_information = payment_related_information

    @property
    def payment_related_information2(self):
        """Gets the payment_related_information2 of this InternationalACHDecline.

        

        :return: The payment_related_information2 of this InternationalACHDecline.
        :rtype: str
        """
        return self._payment_related_information2

    @payment_related_information2.setter
    def payment_related_information2(self, payment_related_information2):
        """Sets the payment_related_information2 of this InternationalACHDecline.

        

        :param payment_related_information2: The payment_related_information2 of this InternationalACHDecline.
        :type payment_related_information2: str
        """
        if payment_related_information2 is None:
            raise ValueError("Invalid value for `payment_related_information2`, must not be `None`")

        self._payment_related_information2 = payment_related_information2

    @property
    def receiver_city(self):
        """Gets the receiver_city of this InternationalACHDecline.

        

        :return: The receiver_city of this InternationalACHDecline.
        :rtype: str
        """
        return self._receiver_city

    @receiver_city.setter
    def receiver_city(self, receiver_city):
        """Sets the receiver_city of this InternationalACHDecline.

        

        :param receiver_city: The receiver_city of this InternationalACHDecline.
        :type receiver_city: str
        """
        if receiver_city is None:
            raise ValueError("Invalid value for `receiver_city`, must not be `None`")

        self._receiver_city = receiver_city

    @property
    def receiver_country(self):
        """Gets the receiver_country of this InternationalACHDecline.

        

        :return: The receiver_country of this InternationalACHDecline.
        :rtype: str
        """
        return self._receiver_country

    @receiver_country.setter
    def receiver_country(self, receiver_country):
        """Sets the receiver_country of this InternationalACHDecline.

        

        :param receiver_country: The receiver_country of this InternationalACHDecline.
        :type receiver_country: str
        """
        if receiver_country is None:
            raise ValueError("Invalid value for `receiver_country`, must not be `None`")

        self._receiver_country = receiver_country

    @property
    def receiver_identification_number(self):
        """Gets the receiver_identification_number of this InternationalACHDecline.

        

        :return: The receiver_identification_number of this InternationalACHDecline.
        :rtype: str
        """
        return self._receiver_identification_number

    @receiver_identification_number.setter
    def receiver_identification_number(self, receiver_identification_number):
        """Sets the receiver_identification_number of this InternationalACHDecline.

        

        :param receiver_identification_number: The receiver_identification_number of this InternationalACHDecline.
        :type receiver_identification_number: str
        """
        if receiver_identification_number is None:
            raise ValueError("Invalid value for `receiver_identification_number`, must not be `None`")

        self._receiver_identification_number = receiver_identification_number

    @property
    def receiver_postal_code(self):
        """Gets the receiver_postal_code of this InternationalACHDecline.

        

        :return: The receiver_postal_code of this InternationalACHDecline.
        :rtype: str
        """
        return self._receiver_postal_code

    @receiver_postal_code.setter
    def receiver_postal_code(self, receiver_postal_code):
        """Sets the receiver_postal_code of this InternationalACHDecline.

        

        :param receiver_postal_code: The receiver_postal_code of this InternationalACHDecline.
        :type receiver_postal_code: str
        """
        if receiver_postal_code is None:
            raise ValueError("Invalid value for `receiver_postal_code`, must not be `None`")

        self._receiver_postal_code = receiver_postal_code

    @property
    def receiver_state_or_province(self):
        """Gets the receiver_state_or_province of this InternationalACHDecline.

        

        :return: The receiver_state_or_province of this InternationalACHDecline.
        :rtype: str
        """
        return self._receiver_state_or_province

    @receiver_state_or_province.setter
    def receiver_state_or_province(self, receiver_state_or_province):
        """Sets the receiver_state_or_province of this InternationalACHDecline.

        

        :param receiver_state_or_province: The receiver_state_or_province of this InternationalACHDecline.
        :type receiver_state_or_province: str
        """
        if receiver_state_or_province is None:
            raise ValueError("Invalid value for `receiver_state_or_province`, must not be `None`")

        self._receiver_state_or_province = receiver_state_or_province

    @property
    def receiver_street_address(self):
        """Gets the receiver_street_address of this InternationalACHDecline.

        

        :return: The receiver_street_address of this InternationalACHDecline.
        :rtype: str
        """
        return self._receiver_street_address

    @receiver_street_address.setter
    def receiver_street_address(self, receiver_street_address):
        """Sets the receiver_street_address of this InternationalACHDecline.

        

        :param receiver_street_address: The receiver_street_address of this InternationalACHDecline.
        :type receiver_street_address: str
        """
        if receiver_street_address is None:
            raise ValueError("Invalid value for `receiver_street_address`, must not be `None`")

        self._receiver_street_address = receiver_street_address

    @property
    def receiving_company_or_individual_name(self):
        """Gets the receiving_company_or_individual_name of this InternationalACHDecline.

        

        :return: The receiving_company_or_individual_name of this InternationalACHDecline.
        :rtype: str
        """
        return self._receiving_company_or_individual_name

    @receiving_company_or_individual_name.setter
    def receiving_company_or_individual_name(self, receiving_company_or_individual_name):
        """Sets the receiving_company_or_individual_name of this InternationalACHDecline.

        

        :param receiving_company_or_individual_name: The receiving_company_or_individual_name of this InternationalACHDecline.
        :type receiving_company_or_individual_name: str
        """
        if receiving_company_or_individual_name is None:
            raise ValueError("Invalid value for `receiving_company_or_individual_name`, must not be `None`")

        self._receiving_company_or_individual_name = receiving_company_or_individual_name

    @property
    def receiving_depository_financial_institution_country(self):
        """Gets the receiving_depository_financial_institution_country of this InternationalACHDecline.

        

        :return: The receiving_depository_financial_institution_country of this InternationalACHDecline.
        :rtype: str
        """
        return self._receiving_depository_financial_institution_country

    @receiving_depository_financial_institution_country.setter
    def receiving_depository_financial_institution_country(self, receiving_depository_financial_institution_country):
        """Sets the receiving_depository_financial_institution_country of this InternationalACHDecline.

        

        :param receiving_depository_financial_institution_country: The receiving_depository_financial_institution_country of this InternationalACHDecline.
        :type receiving_depository_financial_institution_country: str
        """
        if receiving_depository_financial_institution_country is None:
            raise ValueError("Invalid value for `receiving_depository_financial_institution_country`, must not be `None`")

        self._receiving_depository_financial_institution_country = receiving_depository_financial_institution_country

    @property
    def receiving_depository_financial_institution_id(self):
        """Gets the receiving_depository_financial_institution_id of this InternationalACHDecline.

        

        :return: The receiving_depository_financial_institution_id of this InternationalACHDecline.
        :rtype: str
        """
        return self._receiving_depository_financial_institution_id

    @receiving_depository_financial_institution_id.setter
    def receiving_depository_financial_institution_id(self, receiving_depository_financial_institution_id):
        """Sets the receiving_depository_financial_institution_id of this InternationalACHDecline.

        

        :param receiving_depository_financial_institution_id: The receiving_depository_financial_institution_id of this InternationalACHDecline.
        :type receiving_depository_financial_institution_id: str
        """
        if receiving_depository_financial_institution_id is None:
            raise ValueError("Invalid value for `receiving_depository_financial_institution_id`, must not be `None`")

        self._receiving_depository_financial_institution_id = receiving_depository_financial_institution_id

    @property
    def receiving_depository_financial_institution_id_qualifier(self):
        """Gets the receiving_depository_financial_institution_id_qualifier of this InternationalACHDecline.

        

        :return: The receiving_depository_financial_institution_id_qualifier of this InternationalACHDecline.
        :rtype: str
        """
        return self._receiving_depository_financial_institution_id_qualifier

    @receiving_depository_financial_institution_id_qualifier.setter
    def receiving_depository_financial_institution_id_qualifier(self, receiving_depository_financial_institution_id_qualifier):
        """Sets the receiving_depository_financial_institution_id_qualifier of this InternationalACHDecline.

        

        :param receiving_depository_financial_institution_id_qualifier: The receiving_depository_financial_institution_id_qualifier of this InternationalACHDecline.
        :type receiving_depository_financial_institution_id_qualifier: str
        """
        if receiving_depository_financial_institution_id_qualifier is None:
            raise ValueError("Invalid value for `receiving_depository_financial_institution_id_qualifier`, must not be `None`")

        self._receiving_depository_financial_institution_id_qualifier = receiving_depository_financial_institution_id_qualifier

    @property
    def receiving_depository_financial_institution_name(self):
        """Gets the receiving_depository_financial_institution_name of this InternationalACHDecline.

        

        :return: The receiving_depository_financial_institution_name of this InternationalACHDecline.
        :rtype: str
        """
        return self._receiving_depository_financial_institution_name

    @receiving_depository_financial_institution_name.setter
    def receiving_depository_financial_institution_name(self, receiving_depository_financial_institution_name):
        """Sets the receiving_depository_financial_institution_name of this InternationalACHDecline.

        

        :param receiving_depository_financial_institution_name: The receiving_depository_financial_institution_name of this InternationalACHDecline.
        :type receiving_depository_financial_institution_name: str
        """
        if receiving_depository_financial_institution_name is None:
            raise ValueError("Invalid value for `receiving_depository_financial_institution_name`, must not be `None`")

        self._receiving_depository_financial_institution_name = receiving_depository_financial_institution_name

    @property
    def trace_number(self):
        """Gets the trace_number of this InternationalACHDecline.

        

        :return: The trace_number of this InternationalACHDecline.
        :rtype: str
        """
        return self._trace_number

    @trace_number.setter
    def trace_number(self, trace_number):
        """Sets the trace_number of this InternationalACHDecline.

        

        :param trace_number: The trace_number of this InternationalACHDecline.
        :type trace_number: str
        """
        if trace_number is None:
            raise ValueError("Invalid value for `trace_number`, must not be `None`")

        self._trace_number = trace_number
