# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class InboundWireDrawdownPayment(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, amount: int=None, beneficiary_address_line1: str=None, beneficiary_address_line2: str=None, beneficiary_address_line3: str=None, beneficiary_name: str=None, beneficiary_reference: str=None, description: str=None, input_message_accountability_data: str=None, originator_address_line1: str=None, originator_address_line2: str=None, originator_address_line3: str=None, originator_name: str=None, originator_to_beneficiary_information: str=None):
        """InboundWireDrawdownPayment - a model defined in OpenAPI

        :param amount: The amount of this InboundWireDrawdownPayment.
        :param beneficiary_address_line1: The beneficiary_address_line1 of this InboundWireDrawdownPayment.
        :param beneficiary_address_line2: The beneficiary_address_line2 of this InboundWireDrawdownPayment.
        :param beneficiary_address_line3: The beneficiary_address_line3 of this InboundWireDrawdownPayment.
        :param beneficiary_name: The beneficiary_name of this InboundWireDrawdownPayment.
        :param beneficiary_reference: The beneficiary_reference of this InboundWireDrawdownPayment.
        :param description: The description of this InboundWireDrawdownPayment.
        :param input_message_accountability_data: The input_message_accountability_data of this InboundWireDrawdownPayment.
        :param originator_address_line1: The originator_address_line1 of this InboundWireDrawdownPayment.
        :param originator_address_line2: The originator_address_line2 of this InboundWireDrawdownPayment.
        :param originator_address_line3: The originator_address_line3 of this InboundWireDrawdownPayment.
        :param originator_name: The originator_name of this InboundWireDrawdownPayment.
        :param originator_to_beneficiary_information: The originator_to_beneficiary_information of this InboundWireDrawdownPayment.
        """
        self.openapi_types = {
            'amount': int,
            'beneficiary_address_line1': str,
            'beneficiary_address_line2': str,
            'beneficiary_address_line3': str,
            'beneficiary_name': str,
            'beneficiary_reference': str,
            'description': str,
            'input_message_accountability_data': str,
            'originator_address_line1': str,
            'originator_address_line2': str,
            'originator_address_line3': str,
            'originator_name': str,
            'originator_to_beneficiary_information': str
        }

        self.attribute_map = {
            'amount': 'amount',
            'beneficiary_address_line1': 'beneficiary_address_line1',
            'beneficiary_address_line2': 'beneficiary_address_line2',
            'beneficiary_address_line3': 'beneficiary_address_line3',
            'beneficiary_name': 'beneficiary_name',
            'beneficiary_reference': 'beneficiary_reference',
            'description': 'description',
            'input_message_accountability_data': 'input_message_accountability_data',
            'originator_address_line1': 'originator_address_line1',
            'originator_address_line2': 'originator_address_line2',
            'originator_address_line3': 'originator_address_line3',
            'originator_name': 'originator_name',
            'originator_to_beneficiary_information': 'originator_to_beneficiary_information'
        }

        self._amount = amount
        self._beneficiary_address_line1 = beneficiary_address_line1
        self._beneficiary_address_line2 = beneficiary_address_line2
        self._beneficiary_address_line3 = beneficiary_address_line3
        self._beneficiary_name = beneficiary_name
        self._beneficiary_reference = beneficiary_reference
        self._description = description
        self._input_message_accountability_data = input_message_accountability_data
        self._originator_address_line1 = originator_address_line1
        self._originator_address_line2 = originator_address_line2
        self._originator_address_line3 = originator_address_line3
        self._originator_name = originator_name
        self._originator_to_beneficiary_information = originator_to_beneficiary_information

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InboundWireDrawdownPayment':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Inbound_Wire_Drawdown_Payment of this InboundWireDrawdownPayment.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def amount(self):
        """Gets the amount of this InboundWireDrawdownPayment.

        The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.

        :return: The amount of this InboundWireDrawdownPayment.
        :rtype: int
        """
        return self._amount

    @amount.setter
    def amount(self, amount):
        """Sets the amount of this InboundWireDrawdownPayment.

        The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.

        :param amount: The amount of this InboundWireDrawdownPayment.
        :type amount: int
        """
        if amount is None:
            raise ValueError("Invalid value for `amount`, must not be `None`")

        self._amount = amount

    @property
    def beneficiary_address_line1(self):
        """Gets the beneficiary_address_line1 of this InboundWireDrawdownPayment.

        

        :return: The beneficiary_address_line1 of this InboundWireDrawdownPayment.
        :rtype: str
        """
        return self._beneficiary_address_line1

    @beneficiary_address_line1.setter
    def beneficiary_address_line1(self, beneficiary_address_line1):
        """Sets the beneficiary_address_line1 of this InboundWireDrawdownPayment.

        

        :param beneficiary_address_line1: The beneficiary_address_line1 of this InboundWireDrawdownPayment.
        :type beneficiary_address_line1: str
        """
        if beneficiary_address_line1 is None:
            raise ValueError("Invalid value for `beneficiary_address_line1`, must not be `None`")

        self._beneficiary_address_line1 = beneficiary_address_line1

    @property
    def beneficiary_address_line2(self):
        """Gets the beneficiary_address_line2 of this InboundWireDrawdownPayment.

        

        :return: The beneficiary_address_line2 of this InboundWireDrawdownPayment.
        :rtype: str
        """
        return self._beneficiary_address_line2

    @beneficiary_address_line2.setter
    def beneficiary_address_line2(self, beneficiary_address_line2):
        """Sets the beneficiary_address_line2 of this InboundWireDrawdownPayment.

        

        :param beneficiary_address_line2: The beneficiary_address_line2 of this InboundWireDrawdownPayment.
        :type beneficiary_address_line2: str
        """
        if beneficiary_address_line2 is None:
            raise ValueError("Invalid value for `beneficiary_address_line2`, must not be `None`")

        self._beneficiary_address_line2 = beneficiary_address_line2

    @property
    def beneficiary_address_line3(self):
        """Gets the beneficiary_address_line3 of this InboundWireDrawdownPayment.

        

        :return: The beneficiary_address_line3 of this InboundWireDrawdownPayment.
        :rtype: str
        """
        return self._beneficiary_address_line3

    @beneficiary_address_line3.setter
    def beneficiary_address_line3(self, beneficiary_address_line3):
        """Sets the beneficiary_address_line3 of this InboundWireDrawdownPayment.

        

        :param beneficiary_address_line3: The beneficiary_address_line3 of this InboundWireDrawdownPayment.
        :type beneficiary_address_line3: str
        """
        if beneficiary_address_line3 is None:
            raise ValueError("Invalid value for `beneficiary_address_line3`, must not be `None`")

        self._beneficiary_address_line3 = beneficiary_address_line3

    @property
    def beneficiary_name(self):
        """Gets the beneficiary_name of this InboundWireDrawdownPayment.

        

        :return: The beneficiary_name of this InboundWireDrawdownPayment.
        :rtype: str
        """
        return self._beneficiary_name

    @beneficiary_name.setter
    def beneficiary_name(self, beneficiary_name):
        """Sets the beneficiary_name of this InboundWireDrawdownPayment.

        

        :param beneficiary_name: The beneficiary_name of this InboundWireDrawdownPayment.
        :type beneficiary_name: str
        """
        if beneficiary_name is None:
            raise ValueError("Invalid value for `beneficiary_name`, must not be `None`")

        self._beneficiary_name = beneficiary_name

    @property
    def beneficiary_reference(self):
        """Gets the beneficiary_reference of this InboundWireDrawdownPayment.

        

        :return: The beneficiary_reference of this InboundWireDrawdownPayment.
        :rtype: str
        """
        return self._beneficiary_reference

    @beneficiary_reference.setter
    def beneficiary_reference(self, beneficiary_reference):
        """Sets the beneficiary_reference of this InboundWireDrawdownPayment.

        

        :param beneficiary_reference: The beneficiary_reference of this InboundWireDrawdownPayment.
        :type beneficiary_reference: str
        """
        if beneficiary_reference is None:
            raise ValueError("Invalid value for `beneficiary_reference`, must not be `None`")

        self._beneficiary_reference = beneficiary_reference

    @property
    def description(self):
        """Gets the description of this InboundWireDrawdownPayment.

        

        :return: The description of this InboundWireDrawdownPayment.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this InboundWireDrawdownPayment.

        

        :param description: The description of this InboundWireDrawdownPayment.
        :type description: str
        """
        if description is None:
            raise ValueError("Invalid value for `description`, must not be `None`")

        self._description = description

    @property
    def input_message_accountability_data(self):
        """Gets the input_message_accountability_data of this InboundWireDrawdownPayment.

        

        :return: The input_message_accountability_data of this InboundWireDrawdownPayment.
        :rtype: str
        """
        return self._input_message_accountability_data

    @input_message_accountability_data.setter
    def input_message_accountability_data(self, input_message_accountability_data):
        """Sets the input_message_accountability_data of this InboundWireDrawdownPayment.

        

        :param input_message_accountability_data: The input_message_accountability_data of this InboundWireDrawdownPayment.
        :type input_message_accountability_data: str
        """
        if input_message_accountability_data is None:
            raise ValueError("Invalid value for `input_message_accountability_data`, must not be `None`")

        self._input_message_accountability_data = input_message_accountability_data

    @property
    def originator_address_line1(self):
        """Gets the originator_address_line1 of this InboundWireDrawdownPayment.

        

        :return: The originator_address_line1 of this InboundWireDrawdownPayment.
        :rtype: str
        """
        return self._originator_address_line1

    @originator_address_line1.setter
    def originator_address_line1(self, originator_address_line1):
        """Sets the originator_address_line1 of this InboundWireDrawdownPayment.

        

        :param originator_address_line1: The originator_address_line1 of this InboundWireDrawdownPayment.
        :type originator_address_line1: str
        """
        if originator_address_line1 is None:
            raise ValueError("Invalid value for `originator_address_line1`, must not be `None`")

        self._originator_address_line1 = originator_address_line1

    @property
    def originator_address_line2(self):
        """Gets the originator_address_line2 of this InboundWireDrawdownPayment.

        

        :return: The originator_address_line2 of this InboundWireDrawdownPayment.
        :rtype: str
        """
        return self._originator_address_line2

    @originator_address_line2.setter
    def originator_address_line2(self, originator_address_line2):
        """Sets the originator_address_line2 of this InboundWireDrawdownPayment.

        

        :param originator_address_line2: The originator_address_line2 of this InboundWireDrawdownPayment.
        :type originator_address_line2: str
        """
        if originator_address_line2 is None:
            raise ValueError("Invalid value for `originator_address_line2`, must not be `None`")

        self._originator_address_line2 = originator_address_line2

    @property
    def originator_address_line3(self):
        """Gets the originator_address_line3 of this InboundWireDrawdownPayment.

        

        :return: The originator_address_line3 of this InboundWireDrawdownPayment.
        :rtype: str
        """
        return self._originator_address_line3

    @originator_address_line3.setter
    def originator_address_line3(self, originator_address_line3):
        """Sets the originator_address_line3 of this InboundWireDrawdownPayment.

        

        :param originator_address_line3: The originator_address_line3 of this InboundWireDrawdownPayment.
        :type originator_address_line3: str
        """
        if originator_address_line3 is None:
            raise ValueError("Invalid value for `originator_address_line3`, must not be `None`")

        self._originator_address_line3 = originator_address_line3

    @property
    def originator_name(self):
        """Gets the originator_name of this InboundWireDrawdownPayment.

        

        :return: The originator_name of this InboundWireDrawdownPayment.
        :rtype: str
        """
        return self._originator_name

    @originator_name.setter
    def originator_name(self, originator_name):
        """Sets the originator_name of this InboundWireDrawdownPayment.

        

        :param originator_name: The originator_name of this InboundWireDrawdownPayment.
        :type originator_name: str
        """
        if originator_name is None:
            raise ValueError("Invalid value for `originator_name`, must not be `None`")

        self._originator_name = originator_name

    @property
    def originator_to_beneficiary_information(self):
        """Gets the originator_to_beneficiary_information of this InboundWireDrawdownPayment.

        

        :return: The originator_to_beneficiary_information of this InboundWireDrawdownPayment.
        :rtype: str
        """
        return self._originator_to_beneficiary_information

    @originator_to_beneficiary_information.setter
    def originator_to_beneficiary_information(self, originator_to_beneficiary_information):
        """Sets the originator_to_beneficiary_information of this InboundWireDrawdownPayment.

        

        :param originator_to_beneficiary_information: The originator_to_beneficiary_information of this InboundWireDrawdownPayment.
        :type originator_to_beneficiary_information: str
        """
        if originator_to_beneficiary_information is None:
            raise ValueError("Invalid value for `originator_to_beneficiary_information`, must not be `None`")

        self._originator_to_beneficiary_information = originator_to_beneficiary_information
