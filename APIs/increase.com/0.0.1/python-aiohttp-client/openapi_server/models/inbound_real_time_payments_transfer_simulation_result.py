# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.declined_transaction2 import DeclinedTransaction2
from openapi_server.models.transaction1 import Transaction1
from openapi_server import util


class InboundRealTimePaymentsTransferSimulationResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, declined_transaction: DeclinedTransaction2=None, transaction: Transaction1=None, type: str=None):
        """InboundRealTimePaymentsTransferSimulationResult - a model defined in OpenAPI

        :param declined_transaction: The declined_transaction of this InboundRealTimePaymentsTransferSimulationResult.
        :param transaction: The transaction of this InboundRealTimePaymentsTransferSimulationResult.
        :param type: The type of this InboundRealTimePaymentsTransferSimulationResult.
        """
        self.openapi_types = {
            'declined_transaction': DeclinedTransaction2,
            'transaction': Transaction1,
            'type': str
        }

        self.attribute_map = {
            'declined_transaction': 'declined_transaction',
            'transaction': 'transaction',
            'type': 'type'
        }

        self._declined_transaction = declined_transaction
        self._transaction = transaction
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InboundRealTimePaymentsTransferSimulationResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The inbound_real_time_payments_transfer_simulation_result of this InboundRealTimePaymentsTransferSimulationResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def declined_transaction(self):
        """Gets the declined_transaction of this InboundRealTimePaymentsTransferSimulationResult.


        :return: The declined_transaction of this InboundRealTimePaymentsTransferSimulationResult.
        :rtype: DeclinedTransaction2
        """
        return self._declined_transaction

    @declined_transaction.setter
    def declined_transaction(self, declined_transaction):
        """Sets the declined_transaction of this InboundRealTimePaymentsTransferSimulationResult.


        :param declined_transaction: The declined_transaction of this InboundRealTimePaymentsTransferSimulationResult.
        :type declined_transaction: DeclinedTransaction2
        """
        if declined_transaction is None:
            raise ValueError("Invalid value for `declined_transaction`, must not be `None`")

        self._declined_transaction = declined_transaction

    @property
    def transaction(self):
        """Gets the transaction of this InboundRealTimePaymentsTransferSimulationResult.


        :return: The transaction of this InboundRealTimePaymentsTransferSimulationResult.
        :rtype: Transaction1
        """
        return self._transaction

    @transaction.setter
    def transaction(self, transaction):
        """Sets the transaction of this InboundRealTimePaymentsTransferSimulationResult.


        :param transaction: The transaction of this InboundRealTimePaymentsTransferSimulationResult.
        :type transaction: Transaction1
        """
        if transaction is None:
            raise ValueError("Invalid value for `transaction`, must not be `None`")

        self._transaction = transaction

    @property
    def type(self):
        """Gets the type of this InboundRealTimePaymentsTransferSimulationResult.

        A constant representing the object's type. For this resource it will always be `inbound_real_time_payments_transfer_simulation_result`.

        :return: The type of this InboundRealTimePaymentsTransferSimulationResult.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this InboundRealTimePaymentsTransferSimulationResult.

        A constant representing the object's type. For this resource it will always be `inbound_real_time_payments_transfer_simulation_result`.

        :param type: The type of this InboundRealTimePaymentsTransferSimulationResult.
        :type type: str
        """
        allowed_values = ["inbound_real_time_payments_transfer_simulation_result"]  # noqa: E501
        if type not in allowed_values:
            raise ValueError(
                "Invalid value for `type` ({0}), must be one of {1}"
                .format(type, allowed_values)
            )

        self._type = type
