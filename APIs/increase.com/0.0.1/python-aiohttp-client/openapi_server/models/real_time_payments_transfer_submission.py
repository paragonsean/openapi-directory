# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RealTimePaymentsTransferSubmission(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, submitted_at: datetime=None, transaction_identification: str=None):
        """RealTimePaymentsTransferSubmission - a model defined in OpenAPI

        :param submitted_at: The submitted_at of this RealTimePaymentsTransferSubmission.
        :param transaction_identification: The transaction_identification of this RealTimePaymentsTransferSubmission.
        """
        self.openapi_types = {
            'submitted_at': datetime,
            'transaction_identification': str
        }

        self.attribute_map = {
            'submitted_at': 'submitted_at',
            'transaction_identification': 'transaction_identification'
        }

        self._submitted_at = submitted_at
        self._transaction_identification = transaction_identification

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RealTimePaymentsTransferSubmission':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Real_Time_Payments_Transfer_Submission of this RealTimePaymentsTransferSubmission.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def submitted_at(self):
        """Gets the submitted_at of this RealTimePaymentsTransferSubmission.

        The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the transfer was submitted to The Clearing House.

        :return: The submitted_at of this RealTimePaymentsTransferSubmission.
        :rtype: datetime
        """
        return self._submitted_at

    @submitted_at.setter
    def submitted_at(self, submitted_at):
        """Sets the submitted_at of this RealTimePaymentsTransferSubmission.

        The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the transfer was submitted to The Clearing House.

        :param submitted_at: The submitted_at of this RealTimePaymentsTransferSubmission.
        :type submitted_at: datetime
        """
        if submitted_at is None:
            raise ValueError("Invalid value for `submitted_at`, must not be `None`")

        self._submitted_at = submitted_at

    @property
    def transaction_identification(self):
        """Gets the transaction_identification of this RealTimePaymentsTransferSubmission.

        The Real Time Payments network identification of the transfer.

        :return: The transaction_identification of this RealTimePaymentsTransferSubmission.
        :rtype: str
        """
        return self._transaction_identification

    @transaction_identification.setter
    def transaction_identification(self, transaction_identification):
        """Sets the transaction_identification of this RealTimePaymentsTransferSubmission.

        The Real Time Payments network identification of the transfer.

        :param transaction_identification: The transaction_identification of this RealTimePaymentsTransferSubmission.
        :type transaction_identification: str
        """
        if transaction_identification is None:
            raise ValueError("Invalid value for `transaction_identification`, must not be `None`")

        self._transaction_identification = transaction_identification
