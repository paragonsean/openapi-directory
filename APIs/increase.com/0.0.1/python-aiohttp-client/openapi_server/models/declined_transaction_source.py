# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.ach_decline import ACHDecline
from openapi_server.models.card_decline import CardDecline
from openapi_server.models.check_decline import CheckDecline
from openapi_server.models.deprecated_card_decline import DeprecatedCardDecline
from openapi_server.models.inbound_real_time_payments_transfer_decline import InboundRealTimePaymentsTransferDecline
from openapi_server.models.international_ach_decline import InternationalACHDecline
from openapi_server import util


class DeclinedTransactionSource(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ach_decline: ACHDecline=None, card_decline: CardDecline=None, card_route_decline: DeprecatedCardDecline=None, category: str=None, check_decline: CheckDecline=None, inbound_real_time_payments_transfer_decline: InboundRealTimePaymentsTransferDecline=None, international_ach_decline: InternationalACHDecline=None):
        """DeclinedTransactionSource - a model defined in OpenAPI

        :param ach_decline: The ach_decline of this DeclinedTransactionSource.
        :param card_decline: The card_decline of this DeclinedTransactionSource.
        :param card_route_decline: The card_route_decline of this DeclinedTransactionSource.
        :param category: The category of this DeclinedTransactionSource.
        :param check_decline: The check_decline of this DeclinedTransactionSource.
        :param inbound_real_time_payments_transfer_decline: The inbound_real_time_payments_transfer_decline of this DeclinedTransactionSource.
        :param international_ach_decline: The international_ach_decline of this DeclinedTransactionSource.
        """
        self.openapi_types = {
            'ach_decline': ACHDecline,
            'card_decline': CardDecline,
            'card_route_decline': DeprecatedCardDecline,
            'category': str,
            'check_decline': CheckDecline,
            'inbound_real_time_payments_transfer_decline': InboundRealTimePaymentsTransferDecline,
            'international_ach_decline': InternationalACHDecline
        }

        self.attribute_map = {
            'ach_decline': 'ach_decline',
            'card_decline': 'card_decline',
            'card_route_decline': 'card_route_decline',
            'category': 'category',
            'check_decline': 'check_decline',
            'inbound_real_time_payments_transfer_decline': 'inbound_real_time_payments_transfer_decline',
            'international_ach_decline': 'international_ach_decline'
        }

        self._ach_decline = ach_decline
        self._card_decline = card_decline
        self._card_route_decline = card_route_decline
        self._category = category
        self._check_decline = check_decline
        self._inbound_real_time_payments_transfer_decline = inbound_real_time_payments_transfer_decline
        self._international_ach_decline = international_ach_decline

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeclinedTransactionSource':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Declined_Transaction_Source of this DeclinedTransactionSource.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ach_decline(self):
        """Gets the ach_decline of this DeclinedTransactionSource.


        :return: The ach_decline of this DeclinedTransactionSource.
        :rtype: ACHDecline
        """
        return self._ach_decline

    @ach_decline.setter
    def ach_decline(self, ach_decline):
        """Sets the ach_decline of this DeclinedTransactionSource.


        :param ach_decline: The ach_decline of this DeclinedTransactionSource.
        :type ach_decline: ACHDecline
        """
        if ach_decline is None:
            raise ValueError("Invalid value for `ach_decline`, must not be `None`")

        self._ach_decline = ach_decline

    @property
    def card_decline(self):
        """Gets the card_decline of this DeclinedTransactionSource.


        :return: The card_decline of this DeclinedTransactionSource.
        :rtype: CardDecline
        """
        return self._card_decline

    @card_decline.setter
    def card_decline(self, card_decline):
        """Sets the card_decline of this DeclinedTransactionSource.


        :param card_decline: The card_decline of this DeclinedTransactionSource.
        :type card_decline: CardDecline
        """
        if card_decline is None:
            raise ValueError("Invalid value for `card_decline`, must not be `None`")

        self._card_decline = card_decline

    @property
    def card_route_decline(self):
        """Gets the card_route_decline of this DeclinedTransactionSource.


        :return: The card_route_decline of this DeclinedTransactionSource.
        :rtype: DeprecatedCardDecline
        """
        return self._card_route_decline

    @card_route_decline.setter
    def card_route_decline(self, card_route_decline):
        """Sets the card_route_decline of this DeclinedTransactionSource.


        :param card_route_decline: The card_route_decline of this DeclinedTransactionSource.
        :type card_route_decline: DeprecatedCardDecline
        """
        if card_route_decline is None:
            raise ValueError("Invalid value for `card_route_decline`, must not be `None`")

        self._card_route_decline = card_route_decline

    @property
    def category(self):
        """Gets the category of this DeclinedTransactionSource.

        The type of decline that took place. We may add additional possible values for this enum over time; your application should be able to handle such additions gracefully.

        :return: The category of this DeclinedTransactionSource.
        :rtype: str
        """
        return self._category

    @category.setter
    def category(self, category):
        """Sets the category of this DeclinedTransactionSource.

        The type of decline that took place. We may add additional possible values for this enum over time; your application should be able to handle such additions gracefully.

        :param category: The category of this DeclinedTransactionSource.
        :type category: str
        """
        allowed_values = ["ach_decline", "card_decline", "check_decline", "inbound_real_time_payments_transfer_decline", "international_ach_decline", "card_route_decline", "other"]  # noqa: E501
        if category not in allowed_values:
            raise ValueError(
                "Invalid value for `category` ({0}), must be one of {1}"
                .format(category, allowed_values)
            )

        self._category = category

    @property
    def check_decline(self):
        """Gets the check_decline of this DeclinedTransactionSource.


        :return: The check_decline of this DeclinedTransactionSource.
        :rtype: CheckDecline
        """
        return self._check_decline

    @check_decline.setter
    def check_decline(self, check_decline):
        """Sets the check_decline of this DeclinedTransactionSource.


        :param check_decline: The check_decline of this DeclinedTransactionSource.
        :type check_decline: CheckDecline
        """
        if check_decline is None:
            raise ValueError("Invalid value for `check_decline`, must not be `None`")

        self._check_decline = check_decline

    @property
    def inbound_real_time_payments_transfer_decline(self):
        """Gets the inbound_real_time_payments_transfer_decline of this DeclinedTransactionSource.


        :return: The inbound_real_time_payments_transfer_decline of this DeclinedTransactionSource.
        :rtype: InboundRealTimePaymentsTransferDecline
        """
        return self._inbound_real_time_payments_transfer_decline

    @inbound_real_time_payments_transfer_decline.setter
    def inbound_real_time_payments_transfer_decline(self, inbound_real_time_payments_transfer_decline):
        """Sets the inbound_real_time_payments_transfer_decline of this DeclinedTransactionSource.


        :param inbound_real_time_payments_transfer_decline: The inbound_real_time_payments_transfer_decline of this DeclinedTransactionSource.
        :type inbound_real_time_payments_transfer_decline: InboundRealTimePaymentsTransferDecline
        """
        if inbound_real_time_payments_transfer_decline is None:
            raise ValueError("Invalid value for `inbound_real_time_payments_transfer_decline`, must not be `None`")

        self._inbound_real_time_payments_transfer_decline = inbound_real_time_payments_transfer_decline

    @property
    def international_ach_decline(self):
        """Gets the international_ach_decline of this DeclinedTransactionSource.


        :return: The international_ach_decline of this DeclinedTransactionSource.
        :rtype: InternationalACHDecline
        """
        return self._international_ach_decline

    @international_ach_decline.setter
    def international_ach_decline(self, international_ach_decline):
        """Sets the international_ach_decline of this DeclinedTransactionSource.


        :param international_ach_decline: The international_ach_decline of this DeclinedTransactionSource.
        :type international_ach_decline: InternationalACHDecline
        """
        if international_ach_decline is None:
            raise ValueError("Invalid value for `international_ach_decline`, must not be `None`")

        self._international_ach_decline = international_ach_decline
