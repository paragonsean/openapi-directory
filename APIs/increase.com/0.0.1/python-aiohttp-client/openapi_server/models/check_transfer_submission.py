# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CheckTransferSubmission(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, check_number: str=None, submitted_at: datetime=None):
        """CheckTransferSubmission - a model defined in OpenAPI

        :param check_number: The check_number of this CheckTransferSubmission.
        :param submitted_at: The submitted_at of this CheckTransferSubmission.
        """
        self.openapi_types = {
            'check_number': str,
            'submitted_at': datetime
        }

        self.attribute_map = {
            'check_number': 'check_number',
            'submitted_at': 'submitted_at'
        }

        self._check_number = check_number
        self._submitted_at = submitted_at

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CheckTransferSubmission':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Check_Transfer_Submission of this CheckTransferSubmission.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def check_number(self):
        """Gets the check_number of this CheckTransferSubmission.

        The identitying number of the check.

        :return: The check_number of this CheckTransferSubmission.
        :rtype: str
        """
        return self._check_number

    @check_number.setter
    def check_number(self, check_number):
        """Sets the check_number of this CheckTransferSubmission.

        The identitying number of the check.

        :param check_number: The check_number of this CheckTransferSubmission.
        :type check_number: str
        """
        if check_number is None:
            raise ValueError("Invalid value for `check_number`, must not be `None`")

        self._check_number = check_number

    @property
    def submitted_at(self):
        """Gets the submitted_at of this CheckTransferSubmission.

        When this check transfer was submitted to our check printer.

        :return: The submitted_at of this CheckTransferSubmission.
        :rtype: datetime
        """
        return self._submitted_at

    @submitted_at.setter
    def submitted_at(self, submitted_at):
        """Sets the submitted_at of this CheckTransferSubmission.

        When this check transfer was submitted to our check printer.

        :param submitted_at: The submitted_at of this CheckTransferSubmission.
        :type submitted_at: datetime
        """
        if submitted_at is None:
            raise ValueError("Invalid value for `submitted_at`, must not be `None`")

        self._submitted_at = submitted_at
