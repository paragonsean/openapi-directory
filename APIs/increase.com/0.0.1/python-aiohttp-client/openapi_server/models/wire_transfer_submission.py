# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class WireTransferSubmission(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, input_message_accountability_data: str=None, submitted_at: datetime=None):
        """WireTransferSubmission - a model defined in OpenAPI

        :param input_message_accountability_data: The input_message_accountability_data of this WireTransferSubmission.
        :param submitted_at: The submitted_at of this WireTransferSubmission.
        """
        self.openapi_types = {
            'input_message_accountability_data': str,
            'submitted_at': datetime
        }

        self.attribute_map = {
            'input_message_accountability_data': 'input_message_accountability_data',
            'submitted_at': 'submitted_at'
        }

        self._input_message_accountability_data = input_message_accountability_data
        self._submitted_at = submitted_at

    @classmethod
    def from_dict(cls, dikt: dict) -> 'WireTransferSubmission':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Wire_Transfer_Submission of this WireTransferSubmission.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def input_message_accountability_data(self):
        """Gets the input_message_accountability_data of this WireTransferSubmission.

        The accountability data for the submission.

        :return: The input_message_accountability_data of this WireTransferSubmission.
        :rtype: str
        """
        return self._input_message_accountability_data

    @input_message_accountability_data.setter
    def input_message_accountability_data(self, input_message_accountability_data):
        """Sets the input_message_accountability_data of this WireTransferSubmission.

        The accountability data for the submission.

        :param input_message_accountability_data: The input_message_accountability_data of this WireTransferSubmission.
        :type input_message_accountability_data: str
        """
        if input_message_accountability_data is None:
            raise ValueError("Invalid value for `input_message_accountability_data`, must not be `None`")

        self._input_message_accountability_data = input_message_accountability_data

    @property
    def submitted_at(self):
        """Gets the submitted_at of this WireTransferSubmission.

        When this wire transfer was submitted to Fedwire.

        :return: The submitted_at of this WireTransferSubmission.
        :rtype: datetime
        """
        return self._submitted_at

    @submitted_at.setter
    def submitted_at(self, submitted_at):
        """Sets the submitted_at of this WireTransferSubmission.

        When this wire transfer was submitted to Fedwire.

        :param submitted_at: The submitted_at of this WireTransferSubmission.
        :type submitted_at: datetime
        """
        if submitted_at is None:
            raise ValueError("Invalid value for `submitted_at`, must not be `None`")

        self._submitted_at = submitted_at
