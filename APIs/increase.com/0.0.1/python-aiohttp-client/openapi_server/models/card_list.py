# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.card import Card
from openapi_server import util


class CardList(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, data: List[Card]=None, next_cursor: str=None):
        """CardList - a model defined in OpenAPI

        :param data: The data of this CardList.
        :param next_cursor: The next_cursor of this CardList.
        """
        self.openapi_types = {
            'data': List[Card],
            'next_cursor': str
        }

        self.attribute_map = {
            'data': 'data',
            'next_cursor': 'next_cursor'
        }

        self._data = data
        self._next_cursor = next_cursor

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CardList':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The card_list of this CardList.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def data(self):
        """Gets the data of this CardList.

        The contents of the list.

        :return: The data of this CardList.
        :rtype: List[Card]
        """
        return self._data

    @data.setter
    def data(self, data):
        """Sets the data of this CardList.

        The contents of the list.

        :param data: The data of this CardList.
        :type data: List[Card]
        """
        if data is None:
            raise ValueError("Invalid value for `data`, must not be `None`")

        self._data = data

    @property
    def next_cursor(self):
        """Gets the next_cursor of this CardList.

        A pointer to a place in the list.

        :return: The next_cursor of this CardList.
        :rtype: str
        """
        return self._next_cursor

    @next_cursor.setter
    def next_cursor(self, next_cursor):
        """Sets the next_cursor of this CardList.

        A pointer to a place in the list.

        :param next_cursor: The next_cursor of this CardList.
        :type next_cursor: str
        """
        if next_cursor is None:
            raise ValueError("Invalid value for `next_cursor`, must not be `None`")

        self._next_cursor = next_cursor
