# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CompleteASandboxRealTimePaymentsTransferParametersRejection(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, reject_reason_code: str=None):
        """CompleteASandboxRealTimePaymentsTransferParametersRejection - a model defined in OpenAPI

        :param reject_reason_code: The reject_reason_code of this CompleteASandboxRealTimePaymentsTransferParametersRejection.
        """
        self.openapi_types = {
            'reject_reason_code': str
        }

        self.attribute_map = {
            'reject_reason_code': 'reject_reason_code'
        }

        self._reject_reason_code = reject_reason_code

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CompleteASandboxRealTimePaymentsTransferParametersRejection':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The complete_a_sandbox_real_time_payments_transfer_parameters_rejection of this CompleteASandboxRealTimePaymentsTransferParametersRejection.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def reject_reason_code(self):
        """Gets the reject_reason_code of this CompleteASandboxRealTimePaymentsTransferParametersRejection.

        The reason code that the simulated rejection will have.

        :return: The reject_reason_code of this CompleteASandboxRealTimePaymentsTransferParametersRejection.
        :rtype: str
        """
        return self._reject_reason_code

    @reject_reason_code.setter
    def reject_reason_code(self, reject_reason_code):
        """Sets the reject_reason_code of this CompleteASandboxRealTimePaymentsTransferParametersRejection.

        The reason code that the simulated rejection will have.

        :param reject_reason_code: The reject_reason_code of this CompleteASandboxRealTimePaymentsTransferParametersRejection.
        :type reject_reason_code: str
        """
        allowed_values = ["account_closed", "account_blocked", "invalid_creditor_account_type", "invalid_creditor_account_number", "invalid_creditor_financial_institution_identifier", "end_customer_deceased", "narrative", "transaction_forbidden", "transaction_type_not_supported", "unexpected_amount", "amount_exceeds_bank_limits", "invalid_creditor_address", "unknown_end_customer", "invalid_debtor_address", "timeout", "unsupported_message_for_recipient", "recipient_connection_not_available", "real_time_payments_suspended", "instructed_agent_signed_off", "processing_error", "other"]  # noqa: E501
        if reject_reason_code not in allowed_values:
            raise ValueError(
                "Invalid value for `reject_reason_code` ({0}), must be one of {1}"
                .format(reject_reason_code, allowed_values)
            )

        self._reject_reason_code = reject_reason_code
