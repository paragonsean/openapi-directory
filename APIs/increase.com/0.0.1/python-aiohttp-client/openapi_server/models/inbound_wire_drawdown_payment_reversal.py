# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class InboundWireDrawdownPaymentReversal(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, amount: int=None, description: str=None, input_cycle_date: date=None, input_message_accountability_data: str=None, input_sequence_number: str=None, input_source: str=None, previous_message_input_cycle_date: date=None, previous_message_input_message_accountability_data: str=None, previous_message_input_sequence_number: str=None, previous_message_input_source: str=None):
        """InboundWireDrawdownPaymentReversal - a model defined in OpenAPI

        :param amount: The amount of this InboundWireDrawdownPaymentReversal.
        :param description: The description of this InboundWireDrawdownPaymentReversal.
        :param input_cycle_date: The input_cycle_date of this InboundWireDrawdownPaymentReversal.
        :param input_message_accountability_data: The input_message_accountability_data of this InboundWireDrawdownPaymentReversal.
        :param input_sequence_number: The input_sequence_number of this InboundWireDrawdownPaymentReversal.
        :param input_source: The input_source of this InboundWireDrawdownPaymentReversal.
        :param previous_message_input_cycle_date: The previous_message_input_cycle_date of this InboundWireDrawdownPaymentReversal.
        :param previous_message_input_message_accountability_data: The previous_message_input_message_accountability_data of this InboundWireDrawdownPaymentReversal.
        :param previous_message_input_sequence_number: The previous_message_input_sequence_number of this InboundWireDrawdownPaymentReversal.
        :param previous_message_input_source: The previous_message_input_source of this InboundWireDrawdownPaymentReversal.
        """
        self.openapi_types = {
            'amount': int,
            'description': str,
            'input_cycle_date': date,
            'input_message_accountability_data': str,
            'input_sequence_number': str,
            'input_source': str,
            'previous_message_input_cycle_date': date,
            'previous_message_input_message_accountability_data': str,
            'previous_message_input_sequence_number': str,
            'previous_message_input_source': str
        }

        self.attribute_map = {
            'amount': 'amount',
            'description': 'description',
            'input_cycle_date': 'input_cycle_date',
            'input_message_accountability_data': 'input_message_accountability_data',
            'input_sequence_number': 'input_sequence_number',
            'input_source': 'input_source',
            'previous_message_input_cycle_date': 'previous_message_input_cycle_date',
            'previous_message_input_message_accountability_data': 'previous_message_input_message_accountability_data',
            'previous_message_input_sequence_number': 'previous_message_input_sequence_number',
            'previous_message_input_source': 'previous_message_input_source'
        }

        self._amount = amount
        self._description = description
        self._input_cycle_date = input_cycle_date
        self._input_message_accountability_data = input_message_accountability_data
        self._input_sequence_number = input_sequence_number
        self._input_source = input_source
        self._previous_message_input_cycle_date = previous_message_input_cycle_date
        self._previous_message_input_message_accountability_data = previous_message_input_message_accountability_data
        self._previous_message_input_sequence_number = previous_message_input_sequence_number
        self._previous_message_input_source = previous_message_input_source

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InboundWireDrawdownPaymentReversal':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Inbound_Wire_Drawdown_Payment_Reversal of this InboundWireDrawdownPaymentReversal.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def amount(self):
        """Gets the amount of this InboundWireDrawdownPaymentReversal.

        The amount that was reversed.

        :return: The amount of this InboundWireDrawdownPaymentReversal.
        :rtype: int
        """
        return self._amount

    @amount.setter
    def amount(self, amount):
        """Sets the amount of this InboundWireDrawdownPaymentReversal.

        The amount that was reversed.

        :param amount: The amount of this InboundWireDrawdownPaymentReversal.
        :type amount: int
        """
        if amount is None:
            raise ValueError("Invalid value for `amount`, must not be `None`")

        self._amount = amount

    @property
    def description(self):
        """Gets the description of this InboundWireDrawdownPaymentReversal.

        The description on the reversal message from Fedwire.

        :return: The description of this InboundWireDrawdownPaymentReversal.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this InboundWireDrawdownPaymentReversal.

        The description on the reversal message from Fedwire.

        :param description: The description of this InboundWireDrawdownPaymentReversal.
        :type description: str
        """
        if description is None:
            raise ValueError("Invalid value for `description`, must not be `None`")

        self._description = description

    @property
    def input_cycle_date(self):
        """Gets the input_cycle_date of this InboundWireDrawdownPaymentReversal.

        The Fedwire cycle date for the wire reversal.

        :return: The input_cycle_date of this InboundWireDrawdownPaymentReversal.
        :rtype: date
        """
        return self._input_cycle_date

    @input_cycle_date.setter
    def input_cycle_date(self, input_cycle_date):
        """Sets the input_cycle_date of this InboundWireDrawdownPaymentReversal.

        The Fedwire cycle date for the wire reversal.

        :param input_cycle_date: The input_cycle_date of this InboundWireDrawdownPaymentReversal.
        :type input_cycle_date: date
        """
        if input_cycle_date is None:
            raise ValueError("Invalid value for `input_cycle_date`, must not be `None`")

        self._input_cycle_date = input_cycle_date

    @property
    def input_message_accountability_data(self):
        """Gets the input_message_accountability_data of this InboundWireDrawdownPaymentReversal.

        The Fedwire transaction identifier.

        :return: The input_message_accountability_data of this InboundWireDrawdownPaymentReversal.
        :rtype: str
        """
        return self._input_message_accountability_data

    @input_message_accountability_data.setter
    def input_message_accountability_data(self, input_message_accountability_data):
        """Sets the input_message_accountability_data of this InboundWireDrawdownPaymentReversal.

        The Fedwire transaction identifier.

        :param input_message_accountability_data: The input_message_accountability_data of this InboundWireDrawdownPaymentReversal.
        :type input_message_accountability_data: str
        """
        if input_message_accountability_data is None:
            raise ValueError("Invalid value for `input_message_accountability_data`, must not be `None`")

        self._input_message_accountability_data = input_message_accountability_data

    @property
    def input_sequence_number(self):
        """Gets the input_sequence_number of this InboundWireDrawdownPaymentReversal.

        The Fedwire sequence number.

        :return: The input_sequence_number of this InboundWireDrawdownPaymentReversal.
        :rtype: str
        """
        return self._input_sequence_number

    @input_sequence_number.setter
    def input_sequence_number(self, input_sequence_number):
        """Sets the input_sequence_number of this InboundWireDrawdownPaymentReversal.

        The Fedwire sequence number.

        :param input_sequence_number: The input_sequence_number of this InboundWireDrawdownPaymentReversal.
        :type input_sequence_number: str
        """
        if input_sequence_number is None:
            raise ValueError("Invalid value for `input_sequence_number`, must not be `None`")

        self._input_sequence_number = input_sequence_number

    @property
    def input_source(self):
        """Gets the input_source of this InboundWireDrawdownPaymentReversal.

        The Fedwire input source identifier.

        :return: The input_source of this InboundWireDrawdownPaymentReversal.
        :rtype: str
        """
        return self._input_source

    @input_source.setter
    def input_source(self, input_source):
        """Sets the input_source of this InboundWireDrawdownPaymentReversal.

        The Fedwire input source identifier.

        :param input_source: The input_source of this InboundWireDrawdownPaymentReversal.
        :type input_source: str
        """
        if input_source is None:
            raise ValueError("Invalid value for `input_source`, must not be `None`")

        self._input_source = input_source

    @property
    def previous_message_input_cycle_date(self):
        """Gets the previous_message_input_cycle_date of this InboundWireDrawdownPaymentReversal.

        The Fedwire cycle date for the wire transfer that was reversed.

        :return: The previous_message_input_cycle_date of this InboundWireDrawdownPaymentReversal.
        :rtype: date
        """
        return self._previous_message_input_cycle_date

    @previous_message_input_cycle_date.setter
    def previous_message_input_cycle_date(self, previous_message_input_cycle_date):
        """Sets the previous_message_input_cycle_date of this InboundWireDrawdownPaymentReversal.

        The Fedwire cycle date for the wire transfer that was reversed.

        :param previous_message_input_cycle_date: The previous_message_input_cycle_date of this InboundWireDrawdownPaymentReversal.
        :type previous_message_input_cycle_date: date
        """
        if previous_message_input_cycle_date is None:
            raise ValueError("Invalid value for `previous_message_input_cycle_date`, must not be `None`")

        self._previous_message_input_cycle_date = previous_message_input_cycle_date

    @property
    def previous_message_input_message_accountability_data(self):
        """Gets the previous_message_input_message_accountability_data of this InboundWireDrawdownPaymentReversal.

        The Fedwire transaction identifier for the wire transfer that was reversed.

        :return: The previous_message_input_message_accountability_data of this InboundWireDrawdownPaymentReversal.
        :rtype: str
        """
        return self._previous_message_input_message_accountability_data

    @previous_message_input_message_accountability_data.setter
    def previous_message_input_message_accountability_data(self, previous_message_input_message_accountability_data):
        """Sets the previous_message_input_message_accountability_data of this InboundWireDrawdownPaymentReversal.

        The Fedwire transaction identifier for the wire transfer that was reversed.

        :param previous_message_input_message_accountability_data: The previous_message_input_message_accountability_data of this InboundWireDrawdownPaymentReversal.
        :type previous_message_input_message_accountability_data: str
        """
        if previous_message_input_message_accountability_data is None:
            raise ValueError("Invalid value for `previous_message_input_message_accountability_data`, must not be `None`")

        self._previous_message_input_message_accountability_data = previous_message_input_message_accountability_data

    @property
    def previous_message_input_sequence_number(self):
        """Gets the previous_message_input_sequence_number of this InboundWireDrawdownPaymentReversal.

        The Fedwire sequence number for the wire transfer that was reversed.

        :return: The previous_message_input_sequence_number of this InboundWireDrawdownPaymentReversal.
        :rtype: str
        """
        return self._previous_message_input_sequence_number

    @previous_message_input_sequence_number.setter
    def previous_message_input_sequence_number(self, previous_message_input_sequence_number):
        """Sets the previous_message_input_sequence_number of this InboundWireDrawdownPaymentReversal.

        The Fedwire sequence number for the wire transfer that was reversed.

        :param previous_message_input_sequence_number: The previous_message_input_sequence_number of this InboundWireDrawdownPaymentReversal.
        :type previous_message_input_sequence_number: str
        """
        if previous_message_input_sequence_number is None:
            raise ValueError("Invalid value for `previous_message_input_sequence_number`, must not be `None`")

        self._previous_message_input_sequence_number = previous_message_input_sequence_number

    @property
    def previous_message_input_source(self):
        """Gets the previous_message_input_source of this InboundWireDrawdownPaymentReversal.

        The Fedwire input source identifier for the wire transfer that was reversed.

        :return: The previous_message_input_source of this InboundWireDrawdownPaymentReversal.
        :rtype: str
        """
        return self._previous_message_input_source

    @previous_message_input_source.setter
    def previous_message_input_source(self, previous_message_input_source):
        """Sets the previous_message_input_source of this InboundWireDrawdownPaymentReversal.

        The Fedwire input source identifier for the wire transfer that was reversed.

        :param previous_message_input_source: The previous_message_input_source of this InboundWireDrawdownPaymentReversal.
        :type previous_message_input_source: str
        """
        if previous_message_input_source is None:
            raise ValueError("Invalid value for `previous_message_input_source`, must not be `None`")

        self._previous_message_input_source = previous_message_input_source
