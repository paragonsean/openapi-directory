# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class InboundACHTransfer(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, amount: int=None, originator_company_descriptive_date: str=None, originator_company_discretionary_data: str=None, originator_company_entry_description: str=None, originator_company_id: str=None, originator_company_name: str=None, receiver_id_number: str=None, receiver_name: str=None, trace_number: str=None):
        """InboundACHTransfer - a model defined in OpenAPI

        :param amount: The amount of this InboundACHTransfer.
        :param originator_company_descriptive_date: The originator_company_descriptive_date of this InboundACHTransfer.
        :param originator_company_discretionary_data: The originator_company_discretionary_data of this InboundACHTransfer.
        :param originator_company_entry_description: The originator_company_entry_description of this InboundACHTransfer.
        :param originator_company_id: The originator_company_id of this InboundACHTransfer.
        :param originator_company_name: The originator_company_name of this InboundACHTransfer.
        :param receiver_id_number: The receiver_id_number of this InboundACHTransfer.
        :param receiver_name: The receiver_name of this InboundACHTransfer.
        :param trace_number: The trace_number of this InboundACHTransfer.
        """
        self.openapi_types = {
            'amount': int,
            'originator_company_descriptive_date': str,
            'originator_company_discretionary_data': str,
            'originator_company_entry_description': str,
            'originator_company_id': str,
            'originator_company_name': str,
            'receiver_id_number': str,
            'receiver_name': str,
            'trace_number': str
        }

        self.attribute_map = {
            'amount': 'amount',
            'originator_company_descriptive_date': 'originator_company_descriptive_date',
            'originator_company_discretionary_data': 'originator_company_discretionary_data',
            'originator_company_entry_description': 'originator_company_entry_description',
            'originator_company_id': 'originator_company_id',
            'originator_company_name': 'originator_company_name',
            'receiver_id_number': 'receiver_id_number',
            'receiver_name': 'receiver_name',
            'trace_number': 'trace_number'
        }

        self._amount = amount
        self._originator_company_descriptive_date = originator_company_descriptive_date
        self._originator_company_discretionary_data = originator_company_discretionary_data
        self._originator_company_entry_description = originator_company_entry_description
        self._originator_company_id = originator_company_id
        self._originator_company_name = originator_company_name
        self._receiver_id_number = receiver_id_number
        self._receiver_name = receiver_name
        self._trace_number = trace_number

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InboundACHTransfer':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Inbound_ACH_Transfer of this InboundACHTransfer.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def amount(self):
        """Gets the amount of this InboundACHTransfer.

        The amount in the minor unit of the destination account currency. For dollars, for example, this is cents.

        :return: The amount of this InboundACHTransfer.
        :rtype: int
        """
        return self._amount

    @amount.setter
    def amount(self, amount):
        """Sets the amount of this InboundACHTransfer.

        The amount in the minor unit of the destination account currency. For dollars, for example, this is cents.

        :param amount: The amount of this InboundACHTransfer.
        :type amount: int
        """
        if amount is None:
            raise ValueError("Invalid value for `amount`, must not be `None`")

        self._amount = amount

    @property
    def originator_company_descriptive_date(self):
        """Gets the originator_company_descriptive_date of this InboundACHTransfer.

        

        :return: The originator_company_descriptive_date of this InboundACHTransfer.
        :rtype: str
        """
        return self._originator_company_descriptive_date

    @originator_company_descriptive_date.setter
    def originator_company_descriptive_date(self, originator_company_descriptive_date):
        """Sets the originator_company_descriptive_date of this InboundACHTransfer.

        

        :param originator_company_descriptive_date: The originator_company_descriptive_date of this InboundACHTransfer.
        :type originator_company_descriptive_date: str
        """
        if originator_company_descriptive_date is None:
            raise ValueError("Invalid value for `originator_company_descriptive_date`, must not be `None`")

        self._originator_company_descriptive_date = originator_company_descriptive_date

    @property
    def originator_company_discretionary_data(self):
        """Gets the originator_company_discretionary_data of this InboundACHTransfer.

        

        :return: The originator_company_discretionary_data of this InboundACHTransfer.
        :rtype: str
        """
        return self._originator_company_discretionary_data

    @originator_company_discretionary_data.setter
    def originator_company_discretionary_data(self, originator_company_discretionary_data):
        """Sets the originator_company_discretionary_data of this InboundACHTransfer.

        

        :param originator_company_discretionary_data: The originator_company_discretionary_data of this InboundACHTransfer.
        :type originator_company_discretionary_data: str
        """
        if originator_company_discretionary_data is None:
            raise ValueError("Invalid value for `originator_company_discretionary_data`, must not be `None`")

        self._originator_company_discretionary_data = originator_company_discretionary_data

    @property
    def originator_company_entry_description(self):
        """Gets the originator_company_entry_description of this InboundACHTransfer.

        

        :return: The originator_company_entry_description of this InboundACHTransfer.
        :rtype: str
        """
        return self._originator_company_entry_description

    @originator_company_entry_description.setter
    def originator_company_entry_description(self, originator_company_entry_description):
        """Sets the originator_company_entry_description of this InboundACHTransfer.

        

        :param originator_company_entry_description: The originator_company_entry_description of this InboundACHTransfer.
        :type originator_company_entry_description: str
        """
        if originator_company_entry_description is None:
            raise ValueError("Invalid value for `originator_company_entry_description`, must not be `None`")

        self._originator_company_entry_description = originator_company_entry_description

    @property
    def originator_company_id(self):
        """Gets the originator_company_id of this InboundACHTransfer.

        

        :return: The originator_company_id of this InboundACHTransfer.
        :rtype: str
        """
        return self._originator_company_id

    @originator_company_id.setter
    def originator_company_id(self, originator_company_id):
        """Sets the originator_company_id of this InboundACHTransfer.

        

        :param originator_company_id: The originator_company_id of this InboundACHTransfer.
        :type originator_company_id: str
        """
        if originator_company_id is None:
            raise ValueError("Invalid value for `originator_company_id`, must not be `None`")

        self._originator_company_id = originator_company_id

    @property
    def originator_company_name(self):
        """Gets the originator_company_name of this InboundACHTransfer.

        

        :return: The originator_company_name of this InboundACHTransfer.
        :rtype: str
        """
        return self._originator_company_name

    @originator_company_name.setter
    def originator_company_name(self, originator_company_name):
        """Sets the originator_company_name of this InboundACHTransfer.

        

        :param originator_company_name: The originator_company_name of this InboundACHTransfer.
        :type originator_company_name: str
        """
        if originator_company_name is None:
            raise ValueError("Invalid value for `originator_company_name`, must not be `None`")

        self._originator_company_name = originator_company_name

    @property
    def receiver_id_number(self):
        """Gets the receiver_id_number of this InboundACHTransfer.

        

        :return: The receiver_id_number of this InboundACHTransfer.
        :rtype: str
        """
        return self._receiver_id_number

    @receiver_id_number.setter
    def receiver_id_number(self, receiver_id_number):
        """Sets the receiver_id_number of this InboundACHTransfer.

        

        :param receiver_id_number: The receiver_id_number of this InboundACHTransfer.
        :type receiver_id_number: str
        """
        if receiver_id_number is None:
            raise ValueError("Invalid value for `receiver_id_number`, must not be `None`")

        self._receiver_id_number = receiver_id_number

    @property
    def receiver_name(self):
        """Gets the receiver_name of this InboundACHTransfer.

        

        :return: The receiver_name of this InboundACHTransfer.
        :rtype: str
        """
        return self._receiver_name

    @receiver_name.setter
    def receiver_name(self, receiver_name):
        """Sets the receiver_name of this InboundACHTransfer.

        

        :param receiver_name: The receiver_name of this InboundACHTransfer.
        :type receiver_name: str
        """
        if receiver_name is None:
            raise ValueError("Invalid value for `receiver_name`, must not be `None`")

        self._receiver_name = receiver_name

    @property
    def trace_number(self):
        """Gets the trace_number of this InboundACHTransfer.

        

        :return: The trace_number of this InboundACHTransfer.
        :rtype: str
        """
        return self._trace_number

    @trace_number.setter
    def trace_number(self, trace_number):
        """Sets the trace_number of this InboundACHTransfer.

        

        :param trace_number: The trace_number of this InboundACHTransfer.
        :type trace_number: str
        """
        if trace_number is None:
            raise ValueError("Invalid value for `trace_number`, must not be `None`")

        self._trace_number = trace_number
