# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SimulateAWireTransferToYourAccountParameters(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_number_id: str=None, amount: int=None, beneficiary_address_line1: str=None, beneficiary_address_line2: str=None, beneficiary_address_line3: str=None, beneficiary_name: str=None, beneficiary_reference: str=None, originator_address_line1: str=None, originator_address_line2: str=None, originator_address_line3: str=None, originator_name: str=None, originator_to_beneficiary_information_line1: str=None, originator_to_beneficiary_information_line2: str=None, originator_to_beneficiary_information_line3: str=None, originator_to_beneficiary_information_line4: str=None):
        """SimulateAWireTransferToYourAccountParameters - a model defined in OpenAPI

        :param account_number_id: The account_number_id of this SimulateAWireTransferToYourAccountParameters.
        :param amount: The amount of this SimulateAWireTransferToYourAccountParameters.
        :param beneficiary_address_line1: The beneficiary_address_line1 of this SimulateAWireTransferToYourAccountParameters.
        :param beneficiary_address_line2: The beneficiary_address_line2 of this SimulateAWireTransferToYourAccountParameters.
        :param beneficiary_address_line3: The beneficiary_address_line3 of this SimulateAWireTransferToYourAccountParameters.
        :param beneficiary_name: The beneficiary_name of this SimulateAWireTransferToYourAccountParameters.
        :param beneficiary_reference: The beneficiary_reference of this SimulateAWireTransferToYourAccountParameters.
        :param originator_address_line1: The originator_address_line1 of this SimulateAWireTransferToYourAccountParameters.
        :param originator_address_line2: The originator_address_line2 of this SimulateAWireTransferToYourAccountParameters.
        :param originator_address_line3: The originator_address_line3 of this SimulateAWireTransferToYourAccountParameters.
        :param originator_name: The originator_name of this SimulateAWireTransferToYourAccountParameters.
        :param originator_to_beneficiary_information_line1: The originator_to_beneficiary_information_line1 of this SimulateAWireTransferToYourAccountParameters.
        :param originator_to_beneficiary_information_line2: The originator_to_beneficiary_information_line2 of this SimulateAWireTransferToYourAccountParameters.
        :param originator_to_beneficiary_information_line3: The originator_to_beneficiary_information_line3 of this SimulateAWireTransferToYourAccountParameters.
        :param originator_to_beneficiary_information_line4: The originator_to_beneficiary_information_line4 of this SimulateAWireTransferToYourAccountParameters.
        """
        self.openapi_types = {
            'account_number_id': str,
            'amount': int,
            'beneficiary_address_line1': str,
            'beneficiary_address_line2': str,
            'beneficiary_address_line3': str,
            'beneficiary_name': str,
            'beneficiary_reference': str,
            'originator_address_line1': str,
            'originator_address_line2': str,
            'originator_address_line3': str,
            'originator_name': str,
            'originator_to_beneficiary_information_line1': str,
            'originator_to_beneficiary_information_line2': str,
            'originator_to_beneficiary_information_line3': str,
            'originator_to_beneficiary_information_line4': str
        }

        self.attribute_map = {
            'account_number_id': 'account_number_id',
            'amount': 'amount',
            'beneficiary_address_line1': 'beneficiary_address_line1',
            'beneficiary_address_line2': 'beneficiary_address_line2',
            'beneficiary_address_line3': 'beneficiary_address_line3',
            'beneficiary_name': 'beneficiary_name',
            'beneficiary_reference': 'beneficiary_reference',
            'originator_address_line1': 'originator_address_line1',
            'originator_address_line2': 'originator_address_line2',
            'originator_address_line3': 'originator_address_line3',
            'originator_name': 'originator_name',
            'originator_to_beneficiary_information_line1': 'originator_to_beneficiary_information_line1',
            'originator_to_beneficiary_information_line2': 'originator_to_beneficiary_information_line2',
            'originator_to_beneficiary_information_line3': 'originator_to_beneficiary_information_line3',
            'originator_to_beneficiary_information_line4': 'originator_to_beneficiary_information_line4'
        }

        self._account_number_id = account_number_id
        self._amount = amount
        self._beneficiary_address_line1 = beneficiary_address_line1
        self._beneficiary_address_line2 = beneficiary_address_line2
        self._beneficiary_address_line3 = beneficiary_address_line3
        self._beneficiary_name = beneficiary_name
        self._beneficiary_reference = beneficiary_reference
        self._originator_address_line1 = originator_address_line1
        self._originator_address_line2 = originator_address_line2
        self._originator_address_line3 = originator_address_line3
        self._originator_name = originator_name
        self._originator_to_beneficiary_information_line1 = originator_to_beneficiary_information_line1
        self._originator_to_beneficiary_information_line2 = originator_to_beneficiary_information_line2
        self._originator_to_beneficiary_information_line3 = originator_to_beneficiary_information_line3
        self._originator_to_beneficiary_information_line4 = originator_to_beneficiary_information_line4

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SimulateAWireTransferToYourAccountParameters':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The simulate_a_wire_transfer_to_your_account_parameters of this SimulateAWireTransferToYourAccountParameters.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_number_id(self):
        """Gets the account_number_id of this SimulateAWireTransferToYourAccountParameters.

        The identifier of the Account Number the inbound Wire Transfer is for.

        :return: The account_number_id of this SimulateAWireTransferToYourAccountParameters.
        :rtype: str
        """
        return self._account_number_id

    @account_number_id.setter
    def account_number_id(self, account_number_id):
        """Sets the account_number_id of this SimulateAWireTransferToYourAccountParameters.

        The identifier of the Account Number the inbound Wire Transfer is for.

        :param account_number_id: The account_number_id of this SimulateAWireTransferToYourAccountParameters.
        :type account_number_id: str
        """
        if account_number_id is None:
            raise ValueError("Invalid value for `account_number_id`, must not be `None`")

        self._account_number_id = account_number_id

    @property
    def amount(self):
        """Gets the amount of this SimulateAWireTransferToYourAccountParameters.

        The transfer amount in cents. Must be positive.

        :return: The amount of this SimulateAWireTransferToYourAccountParameters.
        :rtype: int
        """
        return self._amount

    @amount.setter
    def amount(self, amount):
        """Sets the amount of this SimulateAWireTransferToYourAccountParameters.

        The transfer amount in cents. Must be positive.

        :param amount: The amount of this SimulateAWireTransferToYourAccountParameters.
        :type amount: int
        """
        if amount is None:
            raise ValueError("Invalid value for `amount`, must not be `None`")
        if amount is not None and amount < 1:
            raise ValueError("Invalid value for `amount`, must be a value greater than or equal to `1`")

        self._amount = amount

    @property
    def beneficiary_address_line1(self):
        """Gets the beneficiary_address_line1 of this SimulateAWireTransferToYourAccountParameters.

        The sending bank will set beneficiary_address_line1 in production. You can simulate any value here.

        :return: The beneficiary_address_line1 of this SimulateAWireTransferToYourAccountParameters.
        :rtype: str
        """
        return self._beneficiary_address_line1

    @beneficiary_address_line1.setter
    def beneficiary_address_line1(self, beneficiary_address_line1):
        """Sets the beneficiary_address_line1 of this SimulateAWireTransferToYourAccountParameters.

        The sending bank will set beneficiary_address_line1 in production. You can simulate any value here.

        :param beneficiary_address_line1: The beneficiary_address_line1 of this SimulateAWireTransferToYourAccountParameters.
        :type beneficiary_address_line1: str
        """
        if beneficiary_address_line1 is not None and len(beneficiary_address_line1) > 200:
            raise ValueError("Invalid value for `beneficiary_address_line1`, length must be less than or equal to `200`")
        if beneficiary_address_line1 is not None and len(beneficiary_address_line1) < 1:
            raise ValueError("Invalid value for `beneficiary_address_line1`, length must be greater than or equal to `1`")

        self._beneficiary_address_line1 = beneficiary_address_line1

    @property
    def beneficiary_address_line2(self):
        """Gets the beneficiary_address_line2 of this SimulateAWireTransferToYourAccountParameters.

        The sending bank will set beneficiary_address_line2 in production. You can simulate any value here.

        :return: The beneficiary_address_line2 of this SimulateAWireTransferToYourAccountParameters.
        :rtype: str
        """
        return self._beneficiary_address_line2

    @beneficiary_address_line2.setter
    def beneficiary_address_line2(self, beneficiary_address_line2):
        """Sets the beneficiary_address_line2 of this SimulateAWireTransferToYourAccountParameters.

        The sending bank will set beneficiary_address_line2 in production. You can simulate any value here.

        :param beneficiary_address_line2: The beneficiary_address_line2 of this SimulateAWireTransferToYourAccountParameters.
        :type beneficiary_address_line2: str
        """
        if beneficiary_address_line2 is not None and len(beneficiary_address_line2) > 200:
            raise ValueError("Invalid value for `beneficiary_address_line2`, length must be less than or equal to `200`")
        if beneficiary_address_line2 is not None and len(beneficiary_address_line2) < 1:
            raise ValueError("Invalid value for `beneficiary_address_line2`, length must be greater than or equal to `1`")

        self._beneficiary_address_line2 = beneficiary_address_line2

    @property
    def beneficiary_address_line3(self):
        """Gets the beneficiary_address_line3 of this SimulateAWireTransferToYourAccountParameters.

        The sending bank will set beneficiary_address_line3 in production. You can simulate any value here.

        :return: The beneficiary_address_line3 of this SimulateAWireTransferToYourAccountParameters.
        :rtype: str
        """
        return self._beneficiary_address_line3

    @beneficiary_address_line3.setter
    def beneficiary_address_line3(self, beneficiary_address_line3):
        """Sets the beneficiary_address_line3 of this SimulateAWireTransferToYourAccountParameters.

        The sending bank will set beneficiary_address_line3 in production. You can simulate any value here.

        :param beneficiary_address_line3: The beneficiary_address_line3 of this SimulateAWireTransferToYourAccountParameters.
        :type beneficiary_address_line3: str
        """
        if beneficiary_address_line3 is not None and len(beneficiary_address_line3) > 200:
            raise ValueError("Invalid value for `beneficiary_address_line3`, length must be less than or equal to `200`")
        if beneficiary_address_line3 is not None and len(beneficiary_address_line3) < 1:
            raise ValueError("Invalid value for `beneficiary_address_line3`, length must be greater than or equal to `1`")

        self._beneficiary_address_line3 = beneficiary_address_line3

    @property
    def beneficiary_name(self):
        """Gets the beneficiary_name of this SimulateAWireTransferToYourAccountParameters.

        The sending bank will set beneficiary_name in production. You can simulate any value here.

        :return: The beneficiary_name of this SimulateAWireTransferToYourAccountParameters.
        :rtype: str
        """
        return self._beneficiary_name

    @beneficiary_name.setter
    def beneficiary_name(self, beneficiary_name):
        """Sets the beneficiary_name of this SimulateAWireTransferToYourAccountParameters.

        The sending bank will set beneficiary_name in production. You can simulate any value here.

        :param beneficiary_name: The beneficiary_name of this SimulateAWireTransferToYourAccountParameters.
        :type beneficiary_name: str
        """
        if beneficiary_name is not None and len(beneficiary_name) > 200:
            raise ValueError("Invalid value for `beneficiary_name`, length must be less than or equal to `200`")
        if beneficiary_name is not None and len(beneficiary_name) < 1:
            raise ValueError("Invalid value for `beneficiary_name`, length must be greater than or equal to `1`")

        self._beneficiary_name = beneficiary_name

    @property
    def beneficiary_reference(self):
        """Gets the beneficiary_reference of this SimulateAWireTransferToYourAccountParameters.

        The sending bank will set beneficiary_reference in production. You can simulate any value here.

        :return: The beneficiary_reference of this SimulateAWireTransferToYourAccountParameters.
        :rtype: str
        """
        return self._beneficiary_reference

    @beneficiary_reference.setter
    def beneficiary_reference(self, beneficiary_reference):
        """Sets the beneficiary_reference of this SimulateAWireTransferToYourAccountParameters.

        The sending bank will set beneficiary_reference in production. You can simulate any value here.

        :param beneficiary_reference: The beneficiary_reference of this SimulateAWireTransferToYourAccountParameters.
        :type beneficiary_reference: str
        """
        if beneficiary_reference is not None and len(beneficiary_reference) > 200:
            raise ValueError("Invalid value for `beneficiary_reference`, length must be less than or equal to `200`")
        if beneficiary_reference is not None and len(beneficiary_reference) < 1:
            raise ValueError("Invalid value for `beneficiary_reference`, length must be greater than or equal to `1`")

        self._beneficiary_reference = beneficiary_reference

    @property
    def originator_address_line1(self):
        """Gets the originator_address_line1 of this SimulateAWireTransferToYourAccountParameters.

        The sending bank will set originator_address_line1 in production. You can simulate any value here.

        :return: The originator_address_line1 of this SimulateAWireTransferToYourAccountParameters.
        :rtype: str
        """
        return self._originator_address_line1

    @originator_address_line1.setter
    def originator_address_line1(self, originator_address_line1):
        """Sets the originator_address_line1 of this SimulateAWireTransferToYourAccountParameters.

        The sending bank will set originator_address_line1 in production. You can simulate any value here.

        :param originator_address_line1: The originator_address_line1 of this SimulateAWireTransferToYourAccountParameters.
        :type originator_address_line1: str
        """
        if originator_address_line1 is not None and len(originator_address_line1) > 200:
            raise ValueError("Invalid value for `originator_address_line1`, length must be less than or equal to `200`")
        if originator_address_line1 is not None and len(originator_address_line1) < 1:
            raise ValueError("Invalid value for `originator_address_line1`, length must be greater than or equal to `1`")

        self._originator_address_line1 = originator_address_line1

    @property
    def originator_address_line2(self):
        """Gets the originator_address_line2 of this SimulateAWireTransferToYourAccountParameters.

        The sending bank will set originator_address_line2 in production. You can simulate any value here.

        :return: The originator_address_line2 of this SimulateAWireTransferToYourAccountParameters.
        :rtype: str
        """
        return self._originator_address_line2

    @originator_address_line2.setter
    def originator_address_line2(self, originator_address_line2):
        """Sets the originator_address_line2 of this SimulateAWireTransferToYourAccountParameters.

        The sending bank will set originator_address_line2 in production. You can simulate any value here.

        :param originator_address_line2: The originator_address_line2 of this SimulateAWireTransferToYourAccountParameters.
        :type originator_address_line2: str
        """
        if originator_address_line2 is not None and len(originator_address_line2) > 200:
            raise ValueError("Invalid value for `originator_address_line2`, length must be less than or equal to `200`")
        if originator_address_line2 is not None and len(originator_address_line2) < 1:
            raise ValueError("Invalid value for `originator_address_line2`, length must be greater than or equal to `1`")

        self._originator_address_line2 = originator_address_line2

    @property
    def originator_address_line3(self):
        """Gets the originator_address_line3 of this SimulateAWireTransferToYourAccountParameters.

        The sending bank will set originator_address_line3 in production. You can simulate any value here.

        :return: The originator_address_line3 of this SimulateAWireTransferToYourAccountParameters.
        :rtype: str
        """
        return self._originator_address_line3

    @originator_address_line3.setter
    def originator_address_line3(self, originator_address_line3):
        """Sets the originator_address_line3 of this SimulateAWireTransferToYourAccountParameters.

        The sending bank will set originator_address_line3 in production. You can simulate any value here.

        :param originator_address_line3: The originator_address_line3 of this SimulateAWireTransferToYourAccountParameters.
        :type originator_address_line3: str
        """
        if originator_address_line3 is not None and len(originator_address_line3) > 200:
            raise ValueError("Invalid value for `originator_address_line3`, length must be less than or equal to `200`")
        if originator_address_line3 is not None and len(originator_address_line3) < 1:
            raise ValueError("Invalid value for `originator_address_line3`, length must be greater than or equal to `1`")

        self._originator_address_line3 = originator_address_line3

    @property
    def originator_name(self):
        """Gets the originator_name of this SimulateAWireTransferToYourAccountParameters.

        The sending bank will set originator_name in production. You can simulate any value here.

        :return: The originator_name of this SimulateAWireTransferToYourAccountParameters.
        :rtype: str
        """
        return self._originator_name

    @originator_name.setter
    def originator_name(self, originator_name):
        """Sets the originator_name of this SimulateAWireTransferToYourAccountParameters.

        The sending bank will set originator_name in production. You can simulate any value here.

        :param originator_name: The originator_name of this SimulateAWireTransferToYourAccountParameters.
        :type originator_name: str
        """
        if originator_name is not None and len(originator_name) > 200:
            raise ValueError("Invalid value for `originator_name`, length must be less than or equal to `200`")
        if originator_name is not None and len(originator_name) < 1:
            raise ValueError("Invalid value for `originator_name`, length must be greater than or equal to `1`")

        self._originator_name = originator_name

    @property
    def originator_to_beneficiary_information_line1(self):
        """Gets the originator_to_beneficiary_information_line1 of this SimulateAWireTransferToYourAccountParameters.

        The sending bank will set originator_to_beneficiary_information_line1 in production. You can simulate any value here.

        :return: The originator_to_beneficiary_information_line1 of this SimulateAWireTransferToYourAccountParameters.
        :rtype: str
        """
        return self._originator_to_beneficiary_information_line1

    @originator_to_beneficiary_information_line1.setter
    def originator_to_beneficiary_information_line1(self, originator_to_beneficiary_information_line1):
        """Sets the originator_to_beneficiary_information_line1 of this SimulateAWireTransferToYourAccountParameters.

        The sending bank will set originator_to_beneficiary_information_line1 in production. You can simulate any value here.

        :param originator_to_beneficiary_information_line1: The originator_to_beneficiary_information_line1 of this SimulateAWireTransferToYourAccountParameters.
        :type originator_to_beneficiary_information_line1: str
        """
        if originator_to_beneficiary_information_line1 is not None and len(originator_to_beneficiary_information_line1) > 200:
            raise ValueError("Invalid value for `originator_to_beneficiary_information_line1`, length must be less than or equal to `200`")
        if originator_to_beneficiary_information_line1 is not None and len(originator_to_beneficiary_information_line1) < 1:
            raise ValueError("Invalid value for `originator_to_beneficiary_information_line1`, length must be greater than or equal to `1`")

        self._originator_to_beneficiary_information_line1 = originator_to_beneficiary_information_line1

    @property
    def originator_to_beneficiary_information_line2(self):
        """Gets the originator_to_beneficiary_information_line2 of this SimulateAWireTransferToYourAccountParameters.

        The sending bank will set originator_to_beneficiary_information_line2 in production. You can simulate any value here.

        :return: The originator_to_beneficiary_information_line2 of this SimulateAWireTransferToYourAccountParameters.
        :rtype: str
        """
        return self._originator_to_beneficiary_information_line2

    @originator_to_beneficiary_information_line2.setter
    def originator_to_beneficiary_information_line2(self, originator_to_beneficiary_information_line2):
        """Sets the originator_to_beneficiary_information_line2 of this SimulateAWireTransferToYourAccountParameters.

        The sending bank will set originator_to_beneficiary_information_line2 in production. You can simulate any value here.

        :param originator_to_beneficiary_information_line2: The originator_to_beneficiary_information_line2 of this SimulateAWireTransferToYourAccountParameters.
        :type originator_to_beneficiary_information_line2: str
        """
        if originator_to_beneficiary_information_line2 is not None and len(originator_to_beneficiary_information_line2) > 200:
            raise ValueError("Invalid value for `originator_to_beneficiary_information_line2`, length must be less than or equal to `200`")
        if originator_to_beneficiary_information_line2 is not None and len(originator_to_beneficiary_information_line2) < 1:
            raise ValueError("Invalid value for `originator_to_beneficiary_information_line2`, length must be greater than or equal to `1`")

        self._originator_to_beneficiary_information_line2 = originator_to_beneficiary_information_line2

    @property
    def originator_to_beneficiary_information_line3(self):
        """Gets the originator_to_beneficiary_information_line3 of this SimulateAWireTransferToYourAccountParameters.

        The sending bank will set originator_to_beneficiary_information_line3 in production. You can simulate any value here.

        :return: The originator_to_beneficiary_information_line3 of this SimulateAWireTransferToYourAccountParameters.
        :rtype: str
        """
        return self._originator_to_beneficiary_information_line3

    @originator_to_beneficiary_information_line3.setter
    def originator_to_beneficiary_information_line3(self, originator_to_beneficiary_information_line3):
        """Sets the originator_to_beneficiary_information_line3 of this SimulateAWireTransferToYourAccountParameters.

        The sending bank will set originator_to_beneficiary_information_line3 in production. You can simulate any value here.

        :param originator_to_beneficiary_information_line3: The originator_to_beneficiary_information_line3 of this SimulateAWireTransferToYourAccountParameters.
        :type originator_to_beneficiary_information_line3: str
        """
        if originator_to_beneficiary_information_line3 is not None and len(originator_to_beneficiary_information_line3) > 200:
            raise ValueError("Invalid value for `originator_to_beneficiary_information_line3`, length must be less than or equal to `200`")
        if originator_to_beneficiary_information_line3 is not None and len(originator_to_beneficiary_information_line3) < 1:
            raise ValueError("Invalid value for `originator_to_beneficiary_information_line3`, length must be greater than or equal to `1`")

        self._originator_to_beneficiary_information_line3 = originator_to_beneficiary_information_line3

    @property
    def originator_to_beneficiary_information_line4(self):
        """Gets the originator_to_beneficiary_information_line4 of this SimulateAWireTransferToYourAccountParameters.

        The sending bank will set originator_to_beneficiary_information_line4 in production. You can simulate any value here.

        :return: The originator_to_beneficiary_information_line4 of this SimulateAWireTransferToYourAccountParameters.
        :rtype: str
        """
        return self._originator_to_beneficiary_information_line4

    @originator_to_beneficiary_information_line4.setter
    def originator_to_beneficiary_information_line4(self, originator_to_beneficiary_information_line4):
        """Sets the originator_to_beneficiary_information_line4 of this SimulateAWireTransferToYourAccountParameters.

        The sending bank will set originator_to_beneficiary_information_line4 in production. You can simulate any value here.

        :param originator_to_beneficiary_information_line4: The originator_to_beneficiary_information_line4 of this SimulateAWireTransferToYourAccountParameters.
        :type originator_to_beneficiary_information_line4: str
        """
        if originator_to_beneficiary_information_line4 is not None and len(originator_to_beneficiary_information_line4) > 200:
            raise ValueError("Invalid value for `originator_to_beneficiary_information_line4`, length must be less than or equal to `200`")
        if originator_to_beneficiary_information_line4 is not None and len(originator_to_beneficiary_information_line4) < 1:
            raise ValueError("Invalid value for `originator_to_beneficiary_information_line4`, length must be greater than or equal to `1`")

        self._originator_to_beneficiary_information_line4 = originator_to_beneficiary_information_line4
