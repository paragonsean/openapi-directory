/*
 * Increase API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * If your transfer is reversed, this will contain details of the reversal.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:10:15.306647-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class InboundWireReversal1 {
  public static final String SERIALIZED_NAME_AMOUNT = "amount";
  @SerializedName(SERIALIZED_NAME_AMOUNT)
  private Integer amount;

  public static final String SERIALIZED_NAME_CREATED_AT = "created_at";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private OffsetDateTime createdAt;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_FINANCIAL_INSTITUTION_TO_FINANCIAL_INSTITUTION_INFORMATION = "financial_institution_to_financial_institution_information";
  @SerializedName(SERIALIZED_NAME_FINANCIAL_INSTITUTION_TO_FINANCIAL_INSTITUTION_INFORMATION)
  private String financialInstitutionToFinancialInstitutionInformation;

  public static final String SERIALIZED_NAME_INPUT_CYCLE_DATE = "input_cycle_date";
  @SerializedName(SERIALIZED_NAME_INPUT_CYCLE_DATE)
  private LocalDate inputCycleDate;

  public static final String SERIALIZED_NAME_INPUT_MESSAGE_ACCOUNTABILITY_DATA = "input_message_accountability_data";
  @SerializedName(SERIALIZED_NAME_INPUT_MESSAGE_ACCOUNTABILITY_DATA)
  private String inputMessageAccountabilityData;

  public static final String SERIALIZED_NAME_INPUT_SEQUENCE_NUMBER = "input_sequence_number";
  @SerializedName(SERIALIZED_NAME_INPUT_SEQUENCE_NUMBER)
  private String inputSequenceNumber;

  public static final String SERIALIZED_NAME_INPUT_SOURCE = "input_source";
  @SerializedName(SERIALIZED_NAME_INPUT_SOURCE)
  private String inputSource;

  public static final String SERIALIZED_NAME_PREVIOUS_MESSAGE_INPUT_CYCLE_DATE = "previous_message_input_cycle_date";
  @SerializedName(SERIALIZED_NAME_PREVIOUS_MESSAGE_INPUT_CYCLE_DATE)
  private LocalDate previousMessageInputCycleDate;

  public static final String SERIALIZED_NAME_PREVIOUS_MESSAGE_INPUT_MESSAGE_ACCOUNTABILITY_DATA = "previous_message_input_message_accountability_data";
  @SerializedName(SERIALIZED_NAME_PREVIOUS_MESSAGE_INPUT_MESSAGE_ACCOUNTABILITY_DATA)
  private String previousMessageInputMessageAccountabilityData;

  public static final String SERIALIZED_NAME_PREVIOUS_MESSAGE_INPUT_SEQUENCE_NUMBER = "previous_message_input_sequence_number";
  @SerializedName(SERIALIZED_NAME_PREVIOUS_MESSAGE_INPUT_SEQUENCE_NUMBER)
  private String previousMessageInputSequenceNumber;

  public static final String SERIALIZED_NAME_PREVIOUS_MESSAGE_INPUT_SOURCE = "previous_message_input_source";
  @SerializedName(SERIALIZED_NAME_PREVIOUS_MESSAGE_INPUT_SOURCE)
  private String previousMessageInputSource;

  public static final String SERIALIZED_NAME_RECEIVER_FINANCIAL_INSTITUTION_INFORMATION = "receiver_financial_institution_information";
  @SerializedName(SERIALIZED_NAME_RECEIVER_FINANCIAL_INSTITUTION_INFORMATION)
  private String receiverFinancialInstitutionInformation;

  public static final String SERIALIZED_NAME_TRANSACTION_ID = "transaction_id";
  @SerializedName(SERIALIZED_NAME_TRANSACTION_ID)
  private String transactionId;

  public InboundWireReversal1() {
  }

  public InboundWireReversal1 amount(Integer amount) {
    this.amount = amount;
    return this;
  }

  /**
   * The amount that was reversed.
   * @return amount
   */
  @javax.annotation.Nonnull
  public Integer getAmount() {
    return amount;
  }

  public void setAmount(Integer amount) {
    this.amount = amount;
  }


  public InboundWireReversal1 createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  /**
   * The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the reversal was created.
   * @return createdAt
   */
  @javax.annotation.Nonnull
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }


  public InboundWireReversal1 description(String description) {
    this.description = description;
    return this;
  }

  /**
   * The description on the reversal message from Fedwire.
   * @return description
   */
  @javax.annotation.Nonnull
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public InboundWireReversal1 financialInstitutionToFinancialInstitutionInformation(String financialInstitutionToFinancialInstitutionInformation) {
    this.financialInstitutionToFinancialInstitutionInformation = financialInstitutionToFinancialInstitutionInformation;
    return this;
  }

  /**
   * Additional financial institution information included in the wire reversal.
   * @return financialInstitutionToFinancialInstitutionInformation
   */
  @javax.annotation.Nullable
  public String getFinancialInstitutionToFinancialInstitutionInformation() {
    return financialInstitutionToFinancialInstitutionInformation;
  }

  public void setFinancialInstitutionToFinancialInstitutionInformation(String financialInstitutionToFinancialInstitutionInformation) {
    this.financialInstitutionToFinancialInstitutionInformation = financialInstitutionToFinancialInstitutionInformation;
  }


  public InboundWireReversal1 inputCycleDate(LocalDate inputCycleDate) {
    this.inputCycleDate = inputCycleDate;
    return this;
  }

  /**
   * The Fedwire cycle date for the wire reversal.
   * @return inputCycleDate
   */
  @javax.annotation.Nonnull
  public LocalDate getInputCycleDate() {
    return inputCycleDate;
  }

  public void setInputCycleDate(LocalDate inputCycleDate) {
    this.inputCycleDate = inputCycleDate;
  }


  public InboundWireReversal1 inputMessageAccountabilityData(String inputMessageAccountabilityData) {
    this.inputMessageAccountabilityData = inputMessageAccountabilityData;
    return this;
  }

  /**
   * The Fedwire transaction identifier.
   * @return inputMessageAccountabilityData
   */
  @javax.annotation.Nonnull
  public String getInputMessageAccountabilityData() {
    return inputMessageAccountabilityData;
  }

  public void setInputMessageAccountabilityData(String inputMessageAccountabilityData) {
    this.inputMessageAccountabilityData = inputMessageAccountabilityData;
  }


  public InboundWireReversal1 inputSequenceNumber(String inputSequenceNumber) {
    this.inputSequenceNumber = inputSequenceNumber;
    return this;
  }

  /**
   * The Fedwire sequence number.
   * @return inputSequenceNumber
   */
  @javax.annotation.Nonnull
  public String getInputSequenceNumber() {
    return inputSequenceNumber;
  }

  public void setInputSequenceNumber(String inputSequenceNumber) {
    this.inputSequenceNumber = inputSequenceNumber;
  }


  public InboundWireReversal1 inputSource(String inputSource) {
    this.inputSource = inputSource;
    return this;
  }

  /**
   * The Fedwire input source identifier.
   * @return inputSource
   */
  @javax.annotation.Nonnull
  public String getInputSource() {
    return inputSource;
  }

  public void setInputSource(String inputSource) {
    this.inputSource = inputSource;
  }


  public InboundWireReversal1 previousMessageInputCycleDate(LocalDate previousMessageInputCycleDate) {
    this.previousMessageInputCycleDate = previousMessageInputCycleDate;
    return this;
  }

  /**
   * The Fedwire cycle date for the wire transfer that was reversed.
   * @return previousMessageInputCycleDate
   */
  @javax.annotation.Nonnull
  public LocalDate getPreviousMessageInputCycleDate() {
    return previousMessageInputCycleDate;
  }

  public void setPreviousMessageInputCycleDate(LocalDate previousMessageInputCycleDate) {
    this.previousMessageInputCycleDate = previousMessageInputCycleDate;
  }


  public InboundWireReversal1 previousMessageInputMessageAccountabilityData(String previousMessageInputMessageAccountabilityData) {
    this.previousMessageInputMessageAccountabilityData = previousMessageInputMessageAccountabilityData;
    return this;
  }

  /**
   * The Fedwire transaction identifier for the wire transfer that was reversed.
   * @return previousMessageInputMessageAccountabilityData
   */
  @javax.annotation.Nonnull
  public String getPreviousMessageInputMessageAccountabilityData() {
    return previousMessageInputMessageAccountabilityData;
  }

  public void setPreviousMessageInputMessageAccountabilityData(String previousMessageInputMessageAccountabilityData) {
    this.previousMessageInputMessageAccountabilityData = previousMessageInputMessageAccountabilityData;
  }


  public InboundWireReversal1 previousMessageInputSequenceNumber(String previousMessageInputSequenceNumber) {
    this.previousMessageInputSequenceNumber = previousMessageInputSequenceNumber;
    return this;
  }

  /**
   * The Fedwire sequence number for the wire transfer that was reversed.
   * @return previousMessageInputSequenceNumber
   */
  @javax.annotation.Nonnull
  public String getPreviousMessageInputSequenceNumber() {
    return previousMessageInputSequenceNumber;
  }

  public void setPreviousMessageInputSequenceNumber(String previousMessageInputSequenceNumber) {
    this.previousMessageInputSequenceNumber = previousMessageInputSequenceNumber;
  }


  public InboundWireReversal1 previousMessageInputSource(String previousMessageInputSource) {
    this.previousMessageInputSource = previousMessageInputSource;
    return this;
  }

  /**
   * The Fedwire input source identifier for the wire transfer that was reversed.
   * @return previousMessageInputSource
   */
  @javax.annotation.Nonnull
  public String getPreviousMessageInputSource() {
    return previousMessageInputSource;
  }

  public void setPreviousMessageInputSource(String previousMessageInputSource) {
    this.previousMessageInputSource = previousMessageInputSource;
  }


  public InboundWireReversal1 receiverFinancialInstitutionInformation(String receiverFinancialInstitutionInformation) {
    this.receiverFinancialInstitutionInformation = receiverFinancialInstitutionInformation;
    return this;
  }

  /**
   * Information included in the wire reversal for the receiving financial institution.
   * @return receiverFinancialInstitutionInformation
   */
  @javax.annotation.Nullable
  public String getReceiverFinancialInstitutionInformation() {
    return receiverFinancialInstitutionInformation;
  }

  public void setReceiverFinancialInstitutionInformation(String receiverFinancialInstitutionInformation) {
    this.receiverFinancialInstitutionInformation = receiverFinancialInstitutionInformation;
  }


  public InboundWireReversal1 transactionId(String transactionId) {
    this.transactionId = transactionId;
    return this;
  }

  /**
   * The ID for the Transaction associated with the transfer reversal.
   * @return transactionId
   */
  @javax.annotation.Nullable
  public String getTransactionId() {
    return transactionId;
  }

  public void setTransactionId(String transactionId) {
    this.transactionId = transactionId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InboundWireReversal1 inboundWireReversal1 = (InboundWireReversal1) o;
    return Objects.equals(this.amount, inboundWireReversal1.amount) &&
        Objects.equals(this.createdAt, inboundWireReversal1.createdAt) &&
        Objects.equals(this.description, inboundWireReversal1.description) &&
        Objects.equals(this.financialInstitutionToFinancialInstitutionInformation, inboundWireReversal1.financialInstitutionToFinancialInstitutionInformation) &&
        Objects.equals(this.inputCycleDate, inboundWireReversal1.inputCycleDate) &&
        Objects.equals(this.inputMessageAccountabilityData, inboundWireReversal1.inputMessageAccountabilityData) &&
        Objects.equals(this.inputSequenceNumber, inboundWireReversal1.inputSequenceNumber) &&
        Objects.equals(this.inputSource, inboundWireReversal1.inputSource) &&
        Objects.equals(this.previousMessageInputCycleDate, inboundWireReversal1.previousMessageInputCycleDate) &&
        Objects.equals(this.previousMessageInputMessageAccountabilityData, inboundWireReversal1.previousMessageInputMessageAccountabilityData) &&
        Objects.equals(this.previousMessageInputSequenceNumber, inboundWireReversal1.previousMessageInputSequenceNumber) &&
        Objects.equals(this.previousMessageInputSource, inboundWireReversal1.previousMessageInputSource) &&
        Objects.equals(this.receiverFinancialInstitutionInformation, inboundWireReversal1.receiverFinancialInstitutionInformation) &&
        Objects.equals(this.transactionId, inboundWireReversal1.transactionId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(amount, createdAt, description, financialInstitutionToFinancialInstitutionInformation, inputCycleDate, inputMessageAccountabilityData, inputSequenceNumber, inputSource, previousMessageInputCycleDate, previousMessageInputMessageAccountabilityData, previousMessageInputSequenceNumber, previousMessageInputSource, receiverFinancialInstitutionInformation, transactionId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InboundWireReversal1 {\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    financialInstitutionToFinancialInstitutionInformation: ").append(toIndentedString(financialInstitutionToFinancialInstitutionInformation)).append("\n");
    sb.append("    inputCycleDate: ").append(toIndentedString(inputCycleDate)).append("\n");
    sb.append("    inputMessageAccountabilityData: ").append(toIndentedString(inputMessageAccountabilityData)).append("\n");
    sb.append("    inputSequenceNumber: ").append(toIndentedString(inputSequenceNumber)).append("\n");
    sb.append("    inputSource: ").append(toIndentedString(inputSource)).append("\n");
    sb.append("    previousMessageInputCycleDate: ").append(toIndentedString(previousMessageInputCycleDate)).append("\n");
    sb.append("    previousMessageInputMessageAccountabilityData: ").append(toIndentedString(previousMessageInputMessageAccountabilityData)).append("\n");
    sb.append("    previousMessageInputSequenceNumber: ").append(toIndentedString(previousMessageInputSequenceNumber)).append("\n");
    sb.append("    previousMessageInputSource: ").append(toIndentedString(previousMessageInputSource)).append("\n");
    sb.append("    receiverFinancialInstitutionInformation: ").append(toIndentedString(receiverFinancialInstitutionInformation)).append("\n");
    sb.append("    transactionId: ").append(toIndentedString(transactionId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("amount");
    openapiFields.add("created_at");
    openapiFields.add("description");
    openapiFields.add("financial_institution_to_financial_institution_information");
    openapiFields.add("input_cycle_date");
    openapiFields.add("input_message_accountability_data");
    openapiFields.add("input_sequence_number");
    openapiFields.add("input_source");
    openapiFields.add("previous_message_input_cycle_date");
    openapiFields.add("previous_message_input_message_accountability_data");
    openapiFields.add("previous_message_input_sequence_number");
    openapiFields.add("previous_message_input_source");
    openapiFields.add("receiver_financial_institution_information");
    openapiFields.add("transaction_id");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("amount");
    openapiRequiredFields.add("created_at");
    openapiRequiredFields.add("description");
    openapiRequiredFields.add("financial_institution_to_financial_institution_information");
    openapiRequiredFields.add("input_cycle_date");
    openapiRequiredFields.add("input_message_accountability_data");
    openapiRequiredFields.add("input_sequence_number");
    openapiRequiredFields.add("input_source");
    openapiRequiredFields.add("previous_message_input_cycle_date");
    openapiRequiredFields.add("previous_message_input_message_accountability_data");
    openapiRequiredFields.add("previous_message_input_sequence_number");
    openapiRequiredFields.add("previous_message_input_source");
    openapiRequiredFields.add("receiver_financial_institution_information");
    openapiRequiredFields.add("transaction_id");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to InboundWireReversal1
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!InboundWireReversal1.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in InboundWireReversal1 is not found in the empty JSON string", InboundWireReversal1.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!InboundWireReversal1.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `InboundWireReversal1` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : InboundWireReversal1.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("financial_institution_to_financial_institution_information") != null && !jsonObj.get("financial_institution_to_financial_institution_information").isJsonNull()) && !jsonObj.get("financial_institution_to_financial_institution_information").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `financial_institution_to_financial_institution_information` to be a primitive type in the JSON string but got `%s`", jsonObj.get("financial_institution_to_financial_institution_information").toString()));
      }
      if (!jsonObj.get("input_message_accountability_data").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `input_message_accountability_data` to be a primitive type in the JSON string but got `%s`", jsonObj.get("input_message_accountability_data").toString()));
      }
      if (!jsonObj.get("input_sequence_number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `input_sequence_number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("input_sequence_number").toString()));
      }
      if (!jsonObj.get("input_source").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `input_source` to be a primitive type in the JSON string but got `%s`", jsonObj.get("input_source").toString()));
      }
      if (!jsonObj.get("previous_message_input_message_accountability_data").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `previous_message_input_message_accountability_data` to be a primitive type in the JSON string but got `%s`", jsonObj.get("previous_message_input_message_accountability_data").toString()));
      }
      if (!jsonObj.get("previous_message_input_sequence_number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `previous_message_input_sequence_number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("previous_message_input_sequence_number").toString()));
      }
      if (!jsonObj.get("previous_message_input_source").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `previous_message_input_source` to be a primitive type in the JSON string but got `%s`", jsonObj.get("previous_message_input_source").toString()));
      }
      if ((jsonObj.get("receiver_financial_institution_information") != null && !jsonObj.get("receiver_financial_institution_information").isJsonNull()) && !jsonObj.get("receiver_financial_institution_information").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `receiver_financial_institution_information` to be a primitive type in the JSON string but got `%s`", jsonObj.get("receiver_financial_institution_information").toString()));
      }
      if ((jsonObj.get("transaction_id") != null && !jsonObj.get("transaction_id").isJsonNull()) && !jsonObj.get("transaction_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `transaction_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("transaction_id").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!InboundWireReversal1.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'InboundWireReversal1' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<InboundWireReversal1> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(InboundWireReversal1.class));

       return (TypeAdapter<T>) new TypeAdapter<InboundWireReversal1>() {
           @Override
           public void write(JsonWriter out, InboundWireReversal1 value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public InboundWireReversal1 read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of InboundWireReversal1 given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of InboundWireReversal1
   * @throws IOException if the JSON string is invalid with respect to InboundWireReversal1
   */
  public static InboundWireReversal1 fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, InboundWireReversal1.class);
  }

  /**
   * Convert an instance of InboundWireReversal1 to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

