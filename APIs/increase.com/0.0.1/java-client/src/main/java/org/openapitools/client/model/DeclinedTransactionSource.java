/*
 * Increase API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.ACHDecline;
import org.openapitools.client.model.CardDecline;
import org.openapitools.client.model.CheckDecline;
import org.openapitools.client.model.DeprecatedCardDecline;
import org.openapitools.client.model.InboundRealTimePaymentsTransferDecline;
import org.openapitools.client.model.InternationalACHDecline;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * This is an object giving more details on the network-level event that caused the Declined Transaction. For example, for a card transaction this lists the merchant&#39;s industry and location. Note that for backwards compatibility reasons, additional undocumented keys may appear in this object. These should be treated as deprecated and will be removed in the future.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:10:15.306647-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class DeclinedTransactionSource {
  public static final String SERIALIZED_NAME_ACH_DECLINE = "ach_decline";
  @SerializedName(SERIALIZED_NAME_ACH_DECLINE)
  private ACHDecline achDecline;

  public static final String SERIALIZED_NAME_CARD_DECLINE = "card_decline";
  @SerializedName(SERIALIZED_NAME_CARD_DECLINE)
  private CardDecline cardDecline;

  public static final String SERIALIZED_NAME_CARD_ROUTE_DECLINE = "card_route_decline";
  @SerializedName(SERIALIZED_NAME_CARD_ROUTE_DECLINE)
  private DeprecatedCardDecline cardRouteDecline;

  /**
   * The type of decline that took place. We may add additional possible values for this enum over time; your application should be able to handle such additions gracefully.
   */
  @JsonAdapter(CategoryEnum.Adapter.class)
  public enum CategoryEnum {
    /**
     * The Declined Transaction was created by a ACH Decline object. Details will be under the &#x60;ach_decline&#x60; object.
     */
    ACH_DECLINE("ach_decline"),
    
    /**
     * The Declined Transaction was created by a Card Decline object. Details will be under the &#x60;card_decline&#x60; object.
     */
    CARD_DECLINE("card_decline"),
    
    /**
     * The Declined Transaction was created by a Check Decline object. Details will be under the &#x60;check_decline&#x60; object.
     */
    CHECK_DECLINE("check_decline"),
    
    /**
     * The Declined Transaction was created by a Inbound Real Time Payments Transfer Decline object. Details will be under the &#x60;inbound_real_time_payments_transfer_decline&#x60; object.
     */
    INBOUND_REAL_TIME_PAYMENTS_TRANSFER_DECLINE("inbound_real_time_payments_transfer_decline"),
    
    /**
     * The Declined Transaction was created by a International ACH Decline object. Details will be under the &#x60;international_ach_decline&#x60; object.
     */
    INTERNATIONAL_ACH_DECLINE("international_ach_decline"),
    
    /**
     * The Declined Transaction was created by a Deprecated Card Decline object. Details will be under the &#x60;card_route_decline&#x60; object.
     */
    CARD_ROUTE_DECLINE("card_route_decline"),
    
    /**
     * The Declined Transaction was made for an undocumented or deprecated reason.
     */
    OTHER("other");

    private String value;

    CategoryEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static CategoryEnum fromValue(String value) {
      for (CategoryEnum b : CategoryEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<CategoryEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final CategoryEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public CategoryEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return CategoryEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      CategoryEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_CATEGORY = "category";
  @SerializedName(SERIALIZED_NAME_CATEGORY)
  private CategoryEnum category;

  public static final String SERIALIZED_NAME_CHECK_DECLINE = "check_decline";
  @SerializedName(SERIALIZED_NAME_CHECK_DECLINE)
  private CheckDecline checkDecline;

  public static final String SERIALIZED_NAME_INBOUND_REAL_TIME_PAYMENTS_TRANSFER_DECLINE = "inbound_real_time_payments_transfer_decline";
  @SerializedName(SERIALIZED_NAME_INBOUND_REAL_TIME_PAYMENTS_TRANSFER_DECLINE)
  private InboundRealTimePaymentsTransferDecline inboundRealTimePaymentsTransferDecline;

  public static final String SERIALIZED_NAME_INTERNATIONAL_ACH_DECLINE = "international_ach_decline";
  @SerializedName(SERIALIZED_NAME_INTERNATIONAL_ACH_DECLINE)
  private InternationalACHDecline internationalAchDecline;

  public DeclinedTransactionSource() {
  }

  public DeclinedTransactionSource achDecline(ACHDecline achDecline) {
    this.achDecline = achDecline;
    return this;
  }

  /**
   * Get achDecline
   * @return achDecline
   */
  @javax.annotation.Nullable
  public ACHDecline getAchDecline() {
    return achDecline;
  }

  public void setAchDecline(ACHDecline achDecline) {
    this.achDecline = achDecline;
  }


  public DeclinedTransactionSource cardDecline(CardDecline cardDecline) {
    this.cardDecline = cardDecline;
    return this;
  }

  /**
   * Get cardDecline
   * @return cardDecline
   */
  @javax.annotation.Nullable
  public CardDecline getCardDecline() {
    return cardDecline;
  }

  public void setCardDecline(CardDecline cardDecline) {
    this.cardDecline = cardDecline;
  }


  public DeclinedTransactionSource cardRouteDecline(DeprecatedCardDecline cardRouteDecline) {
    this.cardRouteDecline = cardRouteDecline;
    return this;
  }

  /**
   * Get cardRouteDecline
   * @return cardRouteDecline
   */
  @javax.annotation.Nullable
  public DeprecatedCardDecline getCardRouteDecline() {
    return cardRouteDecline;
  }

  public void setCardRouteDecline(DeprecatedCardDecline cardRouteDecline) {
    this.cardRouteDecline = cardRouteDecline;
  }


  public DeclinedTransactionSource category(CategoryEnum category) {
    this.category = category;
    return this;
  }

  /**
   * The type of decline that took place. We may add additional possible values for this enum over time; your application should be able to handle such additions gracefully.
   * @return category
   */
  @javax.annotation.Nonnull
  public CategoryEnum getCategory() {
    return category;
  }

  public void setCategory(CategoryEnum category) {
    this.category = category;
  }


  public DeclinedTransactionSource checkDecline(CheckDecline checkDecline) {
    this.checkDecline = checkDecline;
    return this;
  }

  /**
   * Get checkDecline
   * @return checkDecline
   */
  @javax.annotation.Nullable
  public CheckDecline getCheckDecline() {
    return checkDecline;
  }

  public void setCheckDecline(CheckDecline checkDecline) {
    this.checkDecline = checkDecline;
  }


  public DeclinedTransactionSource inboundRealTimePaymentsTransferDecline(InboundRealTimePaymentsTransferDecline inboundRealTimePaymentsTransferDecline) {
    this.inboundRealTimePaymentsTransferDecline = inboundRealTimePaymentsTransferDecline;
    return this;
  }

  /**
   * Get inboundRealTimePaymentsTransferDecline
   * @return inboundRealTimePaymentsTransferDecline
   */
  @javax.annotation.Nullable
  public InboundRealTimePaymentsTransferDecline getInboundRealTimePaymentsTransferDecline() {
    return inboundRealTimePaymentsTransferDecline;
  }

  public void setInboundRealTimePaymentsTransferDecline(InboundRealTimePaymentsTransferDecline inboundRealTimePaymentsTransferDecline) {
    this.inboundRealTimePaymentsTransferDecline = inboundRealTimePaymentsTransferDecline;
  }


  public DeclinedTransactionSource internationalAchDecline(InternationalACHDecline internationalAchDecline) {
    this.internationalAchDecline = internationalAchDecline;
    return this;
  }

  /**
   * Get internationalAchDecline
   * @return internationalAchDecline
   */
  @javax.annotation.Nullable
  public InternationalACHDecline getInternationalAchDecline() {
    return internationalAchDecline;
  }

  public void setInternationalAchDecline(InternationalACHDecline internationalAchDecline) {
    this.internationalAchDecline = internationalAchDecline;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DeclinedTransactionSource declinedTransactionSource = (DeclinedTransactionSource) o;
    return Objects.equals(this.achDecline, declinedTransactionSource.achDecline) &&
        Objects.equals(this.cardDecline, declinedTransactionSource.cardDecline) &&
        Objects.equals(this.cardRouteDecline, declinedTransactionSource.cardRouteDecline) &&
        Objects.equals(this.category, declinedTransactionSource.category) &&
        Objects.equals(this.checkDecline, declinedTransactionSource.checkDecline) &&
        Objects.equals(this.inboundRealTimePaymentsTransferDecline, declinedTransactionSource.inboundRealTimePaymentsTransferDecline) &&
        Objects.equals(this.internationalAchDecline, declinedTransactionSource.internationalAchDecline);
  }

  @Override
  public int hashCode() {
    return Objects.hash(achDecline, cardDecline, cardRouteDecline, category, checkDecline, inboundRealTimePaymentsTransferDecline, internationalAchDecline);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DeclinedTransactionSource {\n");
    sb.append("    achDecline: ").append(toIndentedString(achDecline)).append("\n");
    sb.append("    cardDecline: ").append(toIndentedString(cardDecline)).append("\n");
    sb.append("    cardRouteDecline: ").append(toIndentedString(cardRouteDecline)).append("\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    checkDecline: ").append(toIndentedString(checkDecline)).append("\n");
    sb.append("    inboundRealTimePaymentsTransferDecline: ").append(toIndentedString(inboundRealTimePaymentsTransferDecline)).append("\n");
    sb.append("    internationalAchDecline: ").append(toIndentedString(internationalAchDecline)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ach_decline");
    openapiFields.add("card_decline");
    openapiFields.add("card_route_decline");
    openapiFields.add("category");
    openapiFields.add("check_decline");
    openapiFields.add("inbound_real_time_payments_transfer_decline");
    openapiFields.add("international_ach_decline");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("ach_decline");
    openapiRequiredFields.add("card_decline");
    openapiRequiredFields.add("card_route_decline");
    openapiRequiredFields.add("category");
    openapiRequiredFields.add("check_decline");
    openapiRequiredFields.add("inbound_real_time_payments_transfer_decline");
    openapiRequiredFields.add("international_ach_decline");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DeclinedTransactionSource
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DeclinedTransactionSource.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DeclinedTransactionSource is not found in the empty JSON string", DeclinedTransactionSource.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DeclinedTransactionSource.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DeclinedTransactionSource` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : DeclinedTransactionSource.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `ach_decline`
      ACHDecline.validateJsonElement(jsonObj.get("ach_decline"));
      // validate the required field `card_decline`
      CardDecline.validateJsonElement(jsonObj.get("card_decline"));
      // validate the required field `card_route_decline`
      DeprecatedCardDecline.validateJsonElement(jsonObj.get("card_route_decline"));
      if (!jsonObj.get("category").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `category` to be a primitive type in the JSON string but got `%s`", jsonObj.get("category").toString()));
      }
      // validate the required field `category`
      CategoryEnum.validateJsonElement(jsonObj.get("category"));
      // validate the required field `check_decline`
      CheckDecline.validateJsonElement(jsonObj.get("check_decline"));
      // validate the required field `inbound_real_time_payments_transfer_decline`
      InboundRealTimePaymentsTransferDecline.validateJsonElement(jsonObj.get("inbound_real_time_payments_transfer_decline"));
      // validate the required field `international_ach_decline`
      InternationalACHDecline.validateJsonElement(jsonObj.get("international_ach_decline"));
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DeclinedTransactionSource.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DeclinedTransactionSource' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DeclinedTransactionSource> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DeclinedTransactionSource.class));

       return (TypeAdapter<T>) new TypeAdapter<DeclinedTransactionSource>() {
           @Override
           public void write(JsonWriter out, DeclinedTransactionSource value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DeclinedTransactionSource read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DeclinedTransactionSource given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DeclinedTransactionSource
   * @throws IOException if the JSON string is invalid with respect to DeclinedTransactionSource
   */
  public static DeclinedTransactionSource fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DeclinedTransactionSource.class);
  }

  /**
   * Convert an instance of DeclinedTransactionSource to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

