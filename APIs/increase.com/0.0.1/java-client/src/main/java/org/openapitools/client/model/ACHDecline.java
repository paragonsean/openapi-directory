/*
 * Increase API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A ACH Decline object. This field will be present in the JSON response if and only if &#x60;category&#x60; is equal to &#x60;ach_decline&#x60;.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:10:15.306647-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ACHDecline {
  public static final String SERIALIZED_NAME_AMOUNT = "amount";
  @SerializedName(SERIALIZED_NAME_AMOUNT)
  private Integer amount;

  public static final String SERIALIZED_NAME_ORIGINATOR_COMPANY_DESCRIPTIVE_DATE = "originator_company_descriptive_date";
  @SerializedName(SERIALIZED_NAME_ORIGINATOR_COMPANY_DESCRIPTIVE_DATE)
  private String originatorCompanyDescriptiveDate;

  public static final String SERIALIZED_NAME_ORIGINATOR_COMPANY_DISCRETIONARY_DATA = "originator_company_discretionary_data";
  @SerializedName(SERIALIZED_NAME_ORIGINATOR_COMPANY_DISCRETIONARY_DATA)
  private String originatorCompanyDiscretionaryData;

  public static final String SERIALIZED_NAME_ORIGINATOR_COMPANY_ID = "originator_company_id";
  @SerializedName(SERIALIZED_NAME_ORIGINATOR_COMPANY_ID)
  private String originatorCompanyId;

  public static final String SERIALIZED_NAME_ORIGINATOR_COMPANY_NAME = "originator_company_name";
  @SerializedName(SERIALIZED_NAME_ORIGINATOR_COMPANY_NAME)
  private String originatorCompanyName;

  /**
   * Why the ACH transfer was declined.
   */
  @JsonAdapter(ReasonEnum.Adapter.class)
  public enum ReasonEnum {
    /**
     * The account number is canceled.
     */
    ACH_ROUTE_CANCELED("ach_route_canceled"),
    
    /**
     * The account number is disabled.
     */
    ACH_ROUTE_DISABLED("ach_route_disabled"),
    
    /**
     * The transaction would cause a limit to be exceeded.
     */
    BREACHES_LIMIT("breaches_limit"),
    
    /**
     * A credit was refused.
     */
    CREDIT_ENTRY_REFUSED_BY_RECEIVER("credit_entry_refused_by_receiver"),
    
    /**
     * Other.
     */
    DUPLICATE_RETURN("duplicate_return"),
    
    /**
     * The account&#39;s entity is not active.
     */
    ENTITY_NOT_ACTIVE("entity_not_active"),
    
    /**
     * Your account is inactive.
     */
    GROUP_LOCKED("group_locked"),
    
    /**
     * Your account contains insufficient funds.
     */
    INSUFFICIENT_FUNDS("insufficient_funds"),
    
    /**
     * Other.
     */
    MISROUTED_RETURN("misrouted_return"),
    
    /**
     * The account number that was debited does not exist.
     */
    NO_ACH_ROUTE("no_ach_route"),
    
    /**
     * Other.
     */
    ORIGINATOR_REQUEST("originator_request"),
    
    /**
     * The transaction is not allowed per Increase&#39;s terms
     */
    TRANSACTION_NOT_ALLOWED("transaction_not_allowed");

    private String value;

    ReasonEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ReasonEnum fromValue(String value) {
      for (ReasonEnum b : ReasonEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ReasonEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ReasonEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ReasonEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ReasonEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      ReasonEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_REASON = "reason";
  @SerializedName(SERIALIZED_NAME_REASON)
  private ReasonEnum reason;

  public static final String SERIALIZED_NAME_RECEIVER_ID_NUMBER = "receiver_id_number";
  @SerializedName(SERIALIZED_NAME_RECEIVER_ID_NUMBER)
  private String receiverIdNumber;

  public static final String SERIALIZED_NAME_RECEIVER_NAME = "receiver_name";
  @SerializedName(SERIALIZED_NAME_RECEIVER_NAME)
  private String receiverName;

  public static final String SERIALIZED_NAME_TRACE_NUMBER = "trace_number";
  @SerializedName(SERIALIZED_NAME_TRACE_NUMBER)
  private String traceNumber;

  public ACHDecline() {
  }

  public ACHDecline amount(Integer amount) {
    this.amount = amount;
    return this;
  }

  /**
   * The declined amount in the minor unit of the destination account currency. For dollars, for example, this is cents.
   * @return amount
   */
  @javax.annotation.Nonnull
  public Integer getAmount() {
    return amount;
  }

  public void setAmount(Integer amount) {
    this.amount = amount;
  }


  public ACHDecline originatorCompanyDescriptiveDate(String originatorCompanyDescriptiveDate) {
    this.originatorCompanyDescriptiveDate = originatorCompanyDescriptiveDate;
    return this;
  }

  /**
   * 
   * @return originatorCompanyDescriptiveDate
   */
  @javax.annotation.Nullable
  public String getOriginatorCompanyDescriptiveDate() {
    return originatorCompanyDescriptiveDate;
  }

  public void setOriginatorCompanyDescriptiveDate(String originatorCompanyDescriptiveDate) {
    this.originatorCompanyDescriptiveDate = originatorCompanyDescriptiveDate;
  }


  public ACHDecline originatorCompanyDiscretionaryData(String originatorCompanyDiscretionaryData) {
    this.originatorCompanyDiscretionaryData = originatorCompanyDiscretionaryData;
    return this;
  }

  /**
   * 
   * @return originatorCompanyDiscretionaryData
   */
  @javax.annotation.Nullable
  public String getOriginatorCompanyDiscretionaryData() {
    return originatorCompanyDiscretionaryData;
  }

  public void setOriginatorCompanyDiscretionaryData(String originatorCompanyDiscretionaryData) {
    this.originatorCompanyDiscretionaryData = originatorCompanyDiscretionaryData;
  }


  public ACHDecline originatorCompanyId(String originatorCompanyId) {
    this.originatorCompanyId = originatorCompanyId;
    return this;
  }

  /**
   * 
   * @return originatorCompanyId
   */
  @javax.annotation.Nonnull
  public String getOriginatorCompanyId() {
    return originatorCompanyId;
  }

  public void setOriginatorCompanyId(String originatorCompanyId) {
    this.originatorCompanyId = originatorCompanyId;
  }


  public ACHDecline originatorCompanyName(String originatorCompanyName) {
    this.originatorCompanyName = originatorCompanyName;
    return this;
  }

  /**
   * 
   * @return originatorCompanyName
   */
  @javax.annotation.Nonnull
  public String getOriginatorCompanyName() {
    return originatorCompanyName;
  }

  public void setOriginatorCompanyName(String originatorCompanyName) {
    this.originatorCompanyName = originatorCompanyName;
  }


  public ACHDecline reason(ReasonEnum reason) {
    this.reason = reason;
    return this;
  }

  /**
   * Why the ACH transfer was declined.
   * @return reason
   */
  @javax.annotation.Nonnull
  public ReasonEnum getReason() {
    return reason;
  }

  public void setReason(ReasonEnum reason) {
    this.reason = reason;
  }


  public ACHDecline receiverIdNumber(String receiverIdNumber) {
    this.receiverIdNumber = receiverIdNumber;
    return this;
  }

  /**
   * 
   * @return receiverIdNumber
   */
  @javax.annotation.Nullable
  public String getReceiverIdNumber() {
    return receiverIdNumber;
  }

  public void setReceiverIdNumber(String receiverIdNumber) {
    this.receiverIdNumber = receiverIdNumber;
  }


  public ACHDecline receiverName(String receiverName) {
    this.receiverName = receiverName;
    return this;
  }

  /**
   * 
   * @return receiverName
   */
  @javax.annotation.Nullable
  public String getReceiverName() {
    return receiverName;
  }

  public void setReceiverName(String receiverName) {
    this.receiverName = receiverName;
  }


  public ACHDecline traceNumber(String traceNumber) {
    this.traceNumber = traceNumber;
    return this;
  }

  /**
   * 
   * @return traceNumber
   */
  @javax.annotation.Nonnull
  public String getTraceNumber() {
    return traceNumber;
  }

  public void setTraceNumber(String traceNumber) {
    this.traceNumber = traceNumber;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ACHDecline acHDecline = (ACHDecline) o;
    return Objects.equals(this.amount, acHDecline.amount) &&
        Objects.equals(this.originatorCompanyDescriptiveDate, acHDecline.originatorCompanyDescriptiveDate) &&
        Objects.equals(this.originatorCompanyDiscretionaryData, acHDecline.originatorCompanyDiscretionaryData) &&
        Objects.equals(this.originatorCompanyId, acHDecline.originatorCompanyId) &&
        Objects.equals(this.originatorCompanyName, acHDecline.originatorCompanyName) &&
        Objects.equals(this.reason, acHDecline.reason) &&
        Objects.equals(this.receiverIdNumber, acHDecline.receiverIdNumber) &&
        Objects.equals(this.receiverName, acHDecline.receiverName) &&
        Objects.equals(this.traceNumber, acHDecline.traceNumber);
  }

  @Override
  public int hashCode() {
    return Objects.hash(amount, originatorCompanyDescriptiveDate, originatorCompanyDiscretionaryData, originatorCompanyId, originatorCompanyName, reason, receiverIdNumber, receiverName, traceNumber);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ACHDecline {\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    originatorCompanyDescriptiveDate: ").append(toIndentedString(originatorCompanyDescriptiveDate)).append("\n");
    sb.append("    originatorCompanyDiscretionaryData: ").append(toIndentedString(originatorCompanyDiscretionaryData)).append("\n");
    sb.append("    originatorCompanyId: ").append(toIndentedString(originatorCompanyId)).append("\n");
    sb.append("    originatorCompanyName: ").append(toIndentedString(originatorCompanyName)).append("\n");
    sb.append("    reason: ").append(toIndentedString(reason)).append("\n");
    sb.append("    receiverIdNumber: ").append(toIndentedString(receiverIdNumber)).append("\n");
    sb.append("    receiverName: ").append(toIndentedString(receiverName)).append("\n");
    sb.append("    traceNumber: ").append(toIndentedString(traceNumber)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("amount");
    openapiFields.add("originator_company_descriptive_date");
    openapiFields.add("originator_company_discretionary_data");
    openapiFields.add("originator_company_id");
    openapiFields.add("originator_company_name");
    openapiFields.add("reason");
    openapiFields.add("receiver_id_number");
    openapiFields.add("receiver_name");
    openapiFields.add("trace_number");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("amount");
    openapiRequiredFields.add("originator_company_descriptive_date");
    openapiRequiredFields.add("originator_company_discretionary_data");
    openapiRequiredFields.add("originator_company_id");
    openapiRequiredFields.add("originator_company_name");
    openapiRequiredFields.add("reason");
    openapiRequiredFields.add("receiver_id_number");
    openapiRequiredFields.add("receiver_name");
    openapiRequiredFields.add("trace_number");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ACHDecline
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ACHDecline.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ACHDecline is not found in the empty JSON string", ACHDecline.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ACHDecline.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ACHDecline` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : ACHDecline.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("originator_company_descriptive_date") != null && !jsonObj.get("originator_company_descriptive_date").isJsonNull()) && !jsonObj.get("originator_company_descriptive_date").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `originator_company_descriptive_date` to be a primitive type in the JSON string but got `%s`", jsonObj.get("originator_company_descriptive_date").toString()));
      }
      if ((jsonObj.get("originator_company_discretionary_data") != null && !jsonObj.get("originator_company_discretionary_data").isJsonNull()) && !jsonObj.get("originator_company_discretionary_data").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `originator_company_discretionary_data` to be a primitive type in the JSON string but got `%s`", jsonObj.get("originator_company_discretionary_data").toString()));
      }
      if (!jsonObj.get("originator_company_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `originator_company_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("originator_company_id").toString()));
      }
      if (!jsonObj.get("originator_company_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `originator_company_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("originator_company_name").toString()));
      }
      if (!jsonObj.get("reason").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `reason` to be a primitive type in the JSON string but got `%s`", jsonObj.get("reason").toString()));
      }
      // validate the required field `reason`
      ReasonEnum.validateJsonElement(jsonObj.get("reason"));
      if ((jsonObj.get("receiver_id_number") != null && !jsonObj.get("receiver_id_number").isJsonNull()) && !jsonObj.get("receiver_id_number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `receiver_id_number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("receiver_id_number").toString()));
      }
      if ((jsonObj.get("receiver_name") != null && !jsonObj.get("receiver_name").isJsonNull()) && !jsonObj.get("receiver_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `receiver_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("receiver_name").toString()));
      }
      if (!jsonObj.get("trace_number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `trace_number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("trace_number").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ACHDecline.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ACHDecline' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ACHDecline> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ACHDecline.class));

       return (TypeAdapter<T>) new TypeAdapter<ACHDecline>() {
           @Override
           public void write(JsonWriter out, ACHDecline value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ACHDecline read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ACHDecline given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ACHDecline
   * @throws IOException if the JSON string is invalid with respect to ACHDecline
   */
  public static ACHDecline fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ACHDecline.class);
  }

  /**
   * Convert an instance of ACHDecline to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

