/*
 * Increase API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CreateAWireDrawdownRequestParameters
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:10:15.306647-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CreateAWireDrawdownRequestParameters {
  public static final String SERIALIZED_NAME_ACCOUNT_NUMBER_ID = "account_number_id";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_NUMBER_ID)
  private String accountNumberId;

  public static final String SERIALIZED_NAME_AMOUNT = "amount";
  @SerializedName(SERIALIZED_NAME_AMOUNT)
  private Integer amount;

  public static final String SERIALIZED_NAME_MESSAGE_TO_RECIPIENT = "message_to_recipient";
  @SerializedName(SERIALIZED_NAME_MESSAGE_TO_RECIPIENT)
  private String messageToRecipient;

  public static final String SERIALIZED_NAME_RECIPIENT_ACCOUNT_NUMBER = "recipient_account_number";
  @SerializedName(SERIALIZED_NAME_RECIPIENT_ACCOUNT_NUMBER)
  private String recipientAccountNumber;

  public static final String SERIALIZED_NAME_RECIPIENT_ADDRESS_LINE1 = "recipient_address_line1";
  @SerializedName(SERIALIZED_NAME_RECIPIENT_ADDRESS_LINE1)
  private String recipientAddressLine1;

  public static final String SERIALIZED_NAME_RECIPIENT_ADDRESS_LINE2 = "recipient_address_line2";
  @SerializedName(SERIALIZED_NAME_RECIPIENT_ADDRESS_LINE2)
  private String recipientAddressLine2;

  public static final String SERIALIZED_NAME_RECIPIENT_ADDRESS_LINE3 = "recipient_address_line3";
  @SerializedName(SERIALIZED_NAME_RECIPIENT_ADDRESS_LINE3)
  private String recipientAddressLine3;

  public static final String SERIALIZED_NAME_RECIPIENT_NAME = "recipient_name";
  @SerializedName(SERIALIZED_NAME_RECIPIENT_NAME)
  private String recipientName;

  public static final String SERIALIZED_NAME_RECIPIENT_ROUTING_NUMBER = "recipient_routing_number";
  @SerializedName(SERIALIZED_NAME_RECIPIENT_ROUTING_NUMBER)
  private String recipientRoutingNumber;

  public CreateAWireDrawdownRequestParameters() {
  }

  public CreateAWireDrawdownRequestParameters accountNumberId(String accountNumberId) {
    this.accountNumberId = accountNumberId;
    return this;
  }

  /**
   * The Account Number to which the recipient should send funds.
   * @return accountNumberId
   */
  @javax.annotation.Nonnull
  public String getAccountNumberId() {
    return accountNumberId;
  }

  public void setAccountNumberId(String accountNumberId) {
    this.accountNumberId = accountNumberId;
  }


  public CreateAWireDrawdownRequestParameters amount(Integer amount) {
    this.amount = amount;
    return this;
  }

  /**
   * The amount requested from the recipient, in cents.
   * minimum: 1
   * @return amount
   */
  @javax.annotation.Nonnull
  public Integer getAmount() {
    return amount;
  }

  public void setAmount(Integer amount) {
    this.amount = amount;
  }


  public CreateAWireDrawdownRequestParameters messageToRecipient(String messageToRecipient) {
    this.messageToRecipient = messageToRecipient;
    return this;
  }

  /**
   * A message the recipient will see as part of the request.
   * @return messageToRecipient
   */
  @javax.annotation.Nonnull
  public String getMessageToRecipient() {
    return messageToRecipient;
  }

  public void setMessageToRecipient(String messageToRecipient) {
    this.messageToRecipient = messageToRecipient;
  }


  public CreateAWireDrawdownRequestParameters recipientAccountNumber(String recipientAccountNumber) {
    this.recipientAccountNumber = recipientAccountNumber;
    return this;
  }

  /**
   * The drawdown request&#39;s recipient&#39;s account number.
   * @return recipientAccountNumber
   */
  @javax.annotation.Nonnull
  public String getRecipientAccountNumber() {
    return recipientAccountNumber;
  }

  public void setRecipientAccountNumber(String recipientAccountNumber) {
    this.recipientAccountNumber = recipientAccountNumber;
  }


  public CreateAWireDrawdownRequestParameters recipientAddressLine1(String recipientAddressLine1) {
    this.recipientAddressLine1 = recipientAddressLine1;
    return this;
  }

  /**
   * Line 1 of the drawdown request&#39;s recipient&#39;s address.
   * @return recipientAddressLine1
   */
  @javax.annotation.Nullable
  public String getRecipientAddressLine1() {
    return recipientAddressLine1;
  }

  public void setRecipientAddressLine1(String recipientAddressLine1) {
    this.recipientAddressLine1 = recipientAddressLine1;
  }


  public CreateAWireDrawdownRequestParameters recipientAddressLine2(String recipientAddressLine2) {
    this.recipientAddressLine2 = recipientAddressLine2;
    return this;
  }

  /**
   * Line 2 of the drawdown request&#39;s recipient&#39;s address.
   * @return recipientAddressLine2
   */
  @javax.annotation.Nullable
  public String getRecipientAddressLine2() {
    return recipientAddressLine2;
  }

  public void setRecipientAddressLine2(String recipientAddressLine2) {
    this.recipientAddressLine2 = recipientAddressLine2;
  }


  public CreateAWireDrawdownRequestParameters recipientAddressLine3(String recipientAddressLine3) {
    this.recipientAddressLine3 = recipientAddressLine3;
    return this;
  }

  /**
   * Line 3 of the drawdown request&#39;s recipient&#39;s address.
   * @return recipientAddressLine3
   */
  @javax.annotation.Nullable
  public String getRecipientAddressLine3() {
    return recipientAddressLine3;
  }

  public void setRecipientAddressLine3(String recipientAddressLine3) {
    this.recipientAddressLine3 = recipientAddressLine3;
  }


  public CreateAWireDrawdownRequestParameters recipientName(String recipientName) {
    this.recipientName = recipientName;
    return this;
  }

  /**
   * The drawdown request&#39;s recipient&#39;s name.
   * @return recipientName
   */
  @javax.annotation.Nonnull
  public String getRecipientName() {
    return recipientName;
  }

  public void setRecipientName(String recipientName) {
    this.recipientName = recipientName;
  }


  public CreateAWireDrawdownRequestParameters recipientRoutingNumber(String recipientRoutingNumber) {
    this.recipientRoutingNumber = recipientRoutingNumber;
    return this;
  }

  /**
   * The drawdown request&#39;s recipient&#39;s routing number.
   * @return recipientRoutingNumber
   */
  @javax.annotation.Nonnull
  public String getRecipientRoutingNumber() {
    return recipientRoutingNumber;
  }

  public void setRecipientRoutingNumber(String recipientRoutingNumber) {
    this.recipientRoutingNumber = recipientRoutingNumber;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateAWireDrawdownRequestParameters createAWireDrawdownRequestParameters = (CreateAWireDrawdownRequestParameters) o;
    return Objects.equals(this.accountNumberId, createAWireDrawdownRequestParameters.accountNumberId) &&
        Objects.equals(this.amount, createAWireDrawdownRequestParameters.amount) &&
        Objects.equals(this.messageToRecipient, createAWireDrawdownRequestParameters.messageToRecipient) &&
        Objects.equals(this.recipientAccountNumber, createAWireDrawdownRequestParameters.recipientAccountNumber) &&
        Objects.equals(this.recipientAddressLine1, createAWireDrawdownRequestParameters.recipientAddressLine1) &&
        Objects.equals(this.recipientAddressLine2, createAWireDrawdownRequestParameters.recipientAddressLine2) &&
        Objects.equals(this.recipientAddressLine3, createAWireDrawdownRequestParameters.recipientAddressLine3) &&
        Objects.equals(this.recipientName, createAWireDrawdownRequestParameters.recipientName) &&
        Objects.equals(this.recipientRoutingNumber, createAWireDrawdownRequestParameters.recipientRoutingNumber);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountNumberId, amount, messageToRecipient, recipientAccountNumber, recipientAddressLine1, recipientAddressLine2, recipientAddressLine3, recipientName, recipientRoutingNumber);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateAWireDrawdownRequestParameters {\n");
    sb.append("    accountNumberId: ").append(toIndentedString(accountNumberId)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    messageToRecipient: ").append(toIndentedString(messageToRecipient)).append("\n");
    sb.append("    recipientAccountNumber: ").append(toIndentedString(recipientAccountNumber)).append("\n");
    sb.append("    recipientAddressLine1: ").append(toIndentedString(recipientAddressLine1)).append("\n");
    sb.append("    recipientAddressLine2: ").append(toIndentedString(recipientAddressLine2)).append("\n");
    sb.append("    recipientAddressLine3: ").append(toIndentedString(recipientAddressLine3)).append("\n");
    sb.append("    recipientName: ").append(toIndentedString(recipientName)).append("\n");
    sb.append("    recipientRoutingNumber: ").append(toIndentedString(recipientRoutingNumber)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("account_number_id");
    openapiFields.add("amount");
    openapiFields.add("message_to_recipient");
    openapiFields.add("recipient_account_number");
    openapiFields.add("recipient_address_line1");
    openapiFields.add("recipient_address_line2");
    openapiFields.add("recipient_address_line3");
    openapiFields.add("recipient_name");
    openapiFields.add("recipient_routing_number");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("account_number_id");
    openapiRequiredFields.add("amount");
    openapiRequiredFields.add("message_to_recipient");
    openapiRequiredFields.add("recipient_account_number");
    openapiRequiredFields.add("recipient_name");
    openapiRequiredFields.add("recipient_routing_number");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreateAWireDrawdownRequestParameters
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreateAWireDrawdownRequestParameters.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateAWireDrawdownRequestParameters is not found in the empty JSON string", CreateAWireDrawdownRequestParameters.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreateAWireDrawdownRequestParameters.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateAWireDrawdownRequestParameters` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CreateAWireDrawdownRequestParameters.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("account_number_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `account_number_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("account_number_id").toString()));
      }
      if (!jsonObj.get("message_to_recipient").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `message_to_recipient` to be a primitive type in the JSON string but got `%s`", jsonObj.get("message_to_recipient").toString()));
      }
      if (!jsonObj.get("recipient_account_number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `recipient_account_number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("recipient_account_number").toString()));
      }
      if ((jsonObj.get("recipient_address_line1") != null && !jsonObj.get("recipient_address_line1").isJsonNull()) && !jsonObj.get("recipient_address_line1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `recipient_address_line1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("recipient_address_line1").toString()));
      }
      if ((jsonObj.get("recipient_address_line2") != null && !jsonObj.get("recipient_address_line2").isJsonNull()) && !jsonObj.get("recipient_address_line2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `recipient_address_line2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("recipient_address_line2").toString()));
      }
      if ((jsonObj.get("recipient_address_line3") != null && !jsonObj.get("recipient_address_line3").isJsonNull()) && !jsonObj.get("recipient_address_line3").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `recipient_address_line3` to be a primitive type in the JSON string but got `%s`", jsonObj.get("recipient_address_line3").toString()));
      }
      if (!jsonObj.get("recipient_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `recipient_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("recipient_name").toString()));
      }
      if (!jsonObj.get("recipient_routing_number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `recipient_routing_number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("recipient_routing_number").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateAWireDrawdownRequestParameters.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateAWireDrawdownRequestParameters' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateAWireDrawdownRequestParameters> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateAWireDrawdownRequestParameters.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateAWireDrawdownRequestParameters>() {
           @Override
           public void write(JsonWriter out, CreateAWireDrawdownRequestParameters value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateAWireDrawdownRequestParameters read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreateAWireDrawdownRequestParameters given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreateAWireDrawdownRequestParameters
   * @throws IOException if the JSON string is invalid with respect to CreateAWireDrawdownRequestParameters
   */
  public static CreateAWireDrawdownRequestParameters fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateAWireDrawdownRequestParameters.class);
  }

  /**
   * Convert an instance of CreateAWireDrawdownRequestParameters to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

