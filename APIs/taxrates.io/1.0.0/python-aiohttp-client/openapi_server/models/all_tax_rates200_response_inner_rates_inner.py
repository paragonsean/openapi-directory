# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AllTaxRates200ResponseInnerRatesInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, data_name: str=None, data_value: str=None, product_code: str=None, type: str=None):
        """AllTaxRates200ResponseInnerRatesInner - a model defined in OpenAPI

        :param data_name: The data_name of this AllTaxRates200ResponseInnerRatesInner.
        :param data_value: The data_value of this AllTaxRates200ResponseInnerRatesInner.
        :param product_code: The product_code of this AllTaxRates200ResponseInnerRatesInner.
        :param type: The type of this AllTaxRates200ResponseInnerRatesInner.
        """
        self.openapi_types = {
            'data_name': str,
            'data_value': str,
            'product_code': str,
            'type': str
        }

        self.attribute_map = {
            'data_name': 'data_name',
            'data_value': 'data_value',
            'product_code': 'product_code',
            'type': 'type'
        }

        self._data_name = data_name
        self._data_value = data_value
        self._product_code = product_code
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AllTaxRates200ResponseInnerRatesInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The allTaxRates_200_response_inner_rates_inner of this AllTaxRates200ResponseInnerRatesInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def data_name(self):
        """Gets the data_name of this AllTaxRates200ResponseInnerRatesInner.


        :return: The data_name of this AllTaxRates200ResponseInnerRatesInner.
        :rtype: str
        """
        return self._data_name

    @data_name.setter
    def data_name(self, data_name):
        """Sets the data_name of this AllTaxRates200ResponseInnerRatesInner.


        :param data_name: The data_name of this AllTaxRates200ResponseInnerRatesInner.
        :type data_name: str
        """

        self._data_name = data_name

    @property
    def data_value(self):
        """Gets the data_value of this AllTaxRates200ResponseInnerRatesInner.


        :return: The data_value of this AllTaxRates200ResponseInnerRatesInner.
        :rtype: str
        """
        return self._data_value

    @data_value.setter
    def data_value(self, data_value):
        """Sets the data_value of this AllTaxRates200ResponseInnerRatesInner.


        :param data_value: The data_value of this AllTaxRates200ResponseInnerRatesInner.
        :type data_value: str
        """

        self._data_value = data_value

    @property
    def product_code(self):
        """Gets the product_code of this AllTaxRates200ResponseInnerRatesInner.


        :return: The product_code of this AllTaxRates200ResponseInnerRatesInner.
        :rtype: str
        """
        return self._product_code

    @product_code.setter
    def product_code(self, product_code):
        """Sets the product_code of this AllTaxRates200ResponseInnerRatesInner.


        :param product_code: The product_code of this AllTaxRates200ResponseInnerRatesInner.
        :type product_code: str
        """

        self._product_code = product_code

    @property
    def type(self):
        """Gets the type of this AllTaxRates200ResponseInnerRatesInner.


        :return: The type of this AllTaxRates200ResponseInnerRatesInner.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this AllTaxRates200ResponseInnerRatesInner.


        :param type: The type of this AllTaxRates200ResponseInnerRatesInner.
        :type type: str
        """

        self._type = type
