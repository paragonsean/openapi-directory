/*
 * Ex Libris APIs
 * For more information on how to use these APIs, including how to create an API key required for authentication, see [Alma REST APIs](https://developers.exlibrisgroup.com/alma/apis).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.GetAlmawsV1TaskListsPrintouts200ResponsePrintoutInnerPrinter;
import org.openapitools.client.model.GetAlmawsV1TaskListsPrintouts200ResponsePrintoutInnerStatus;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Printout Object.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:25:51.263757-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GetAlmawsV1TaskListsPrintouts200ResponsePrintoutInner {
  public static final String SERIALIZED_NAME_DATE = "date";
  @SerializedName(SERIALIZED_NAME_DATE)
  private OffsetDateTime date;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_LETTER = "letter";
  @SerializedName(SERIALIZED_NAME_LETTER)
  private String letter;

  public static final String SERIALIZED_NAME_LINK = "link";
  @SerializedName(SERIALIZED_NAME_LINK)
  private String link;

  public static final String SERIALIZED_NAME_PRINTER = "printer";
  @SerializedName(SERIALIZED_NAME_PRINTER)
  private GetAlmawsV1TaskListsPrintouts200ResponsePrintoutInnerPrinter printer;

  public static final String SERIALIZED_NAME_PRINTOUT = "printout";
  @SerializedName(SERIALIZED_NAME_PRINTOUT)
  private String printout;

  public static final String SERIALIZED_NAME_SIZE = "size";
  @SerializedName(SERIALIZED_NAME_SIZE)
  private String size;

  public static final String SERIALIZED_NAME_SOURCE = "source";
  @SerializedName(SERIALIZED_NAME_SOURCE)
  private String source;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private GetAlmawsV1TaskListsPrintouts200ResponsePrintoutInnerStatus status;

  public GetAlmawsV1TaskListsPrintouts200ResponsePrintoutInner() {
  }

  public GetAlmawsV1TaskListsPrintouts200ResponsePrintoutInner date(OffsetDateTime date) {
    this.date = date;
    return this;
  }

  /**
   * The time that the letter has been send to the Printout Queue.
   * @return date
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDate() {
    return date;
  }

  public void setDate(OffsetDateTime date) {
    this.date = date;
  }


  public GetAlmawsV1TaskListsPrintouts200ResponsePrintoutInner id(String id) {
    this.id = id;
    return this;
  }

  /**
   * The printout id.
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public GetAlmawsV1TaskListsPrintouts200ResponsePrintoutInner letter(String letter) {
    this.letter = letter;
    return this;
  }

  /**
   * Letter Html body.
   * @return letter
   */
  @javax.annotation.Nullable
  public String getLetter() {
    return letter;
  }

  public void setLetter(String letter) {
    this.letter = letter;
  }


  public GetAlmawsV1TaskListsPrintouts200ResponsePrintoutInner link(String link) {
    this.link = link;
    return this;
  }

  /**
   * Get link
   * @return link
   */
  @javax.annotation.Nullable
  public String getLink() {
    return link;
  }

  public void setLink(String link) {
    this.link = link;
  }


  public GetAlmawsV1TaskListsPrintouts200ResponsePrintoutInner printer(GetAlmawsV1TaskListsPrintouts200ResponsePrintoutInnerPrinter printer) {
    this.printer = printer;
    return this;
  }

  /**
   * Get printer
   * @return printer
   */
  @javax.annotation.Nullable
  public GetAlmawsV1TaskListsPrintouts200ResponsePrintoutInnerPrinter getPrinter() {
    return printer;
  }

  public void setPrinter(GetAlmawsV1TaskListsPrintouts200ResponsePrintoutInnerPrinter printer) {
    this.printer = printer;
  }


  public GetAlmawsV1TaskListsPrintouts200ResponsePrintoutInner printout(String printout) {
    this.printout = printout;
    return this;
  }

  /**
   * The printout name.
   * @return printout
   */
  @javax.annotation.Nullable
  public String getPrintout() {
    return printout;
  }

  public void setPrintout(String printout) {
    this.printout = printout;
  }


  public GetAlmawsV1TaskListsPrintouts200ResponsePrintoutInner size(String size) {
    this.size = size;
    return this;
  }

  /**
   * The size of the letter.
   * @return size
   */
  @javax.annotation.Nullable
  public String getSize() {
    return size;
  }

  public void setSize(String size) {
    this.size = size;
  }


  public GetAlmawsV1TaskListsPrintouts200ResponsePrintoutInner source(String source) {
    this.source = source;
    return this;
  }

  /**
   * The user who printed the letter.
   * @return source
   */
  @javax.annotation.Nullable
  public String getSource() {
    return source;
  }

  public void setSource(String source) {
    this.source = source;
  }


  public GetAlmawsV1TaskListsPrintouts200ResponsePrintoutInner status(GetAlmawsV1TaskListsPrintouts200ResponsePrintoutInnerStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public GetAlmawsV1TaskListsPrintouts200ResponsePrintoutInnerStatus getStatus() {
    return status;
  }

  public void setStatus(GetAlmawsV1TaskListsPrintouts200ResponsePrintoutInnerStatus status) {
    this.status = status;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetAlmawsV1TaskListsPrintouts200ResponsePrintoutInner getAlmawsV1TaskListsPrintouts200ResponsePrintoutInner = (GetAlmawsV1TaskListsPrintouts200ResponsePrintoutInner) o;
    return Objects.equals(this.date, getAlmawsV1TaskListsPrintouts200ResponsePrintoutInner.date) &&
        Objects.equals(this.id, getAlmawsV1TaskListsPrintouts200ResponsePrintoutInner.id) &&
        Objects.equals(this.letter, getAlmawsV1TaskListsPrintouts200ResponsePrintoutInner.letter) &&
        Objects.equals(this.link, getAlmawsV1TaskListsPrintouts200ResponsePrintoutInner.link) &&
        Objects.equals(this.printer, getAlmawsV1TaskListsPrintouts200ResponsePrintoutInner.printer) &&
        Objects.equals(this.printout, getAlmawsV1TaskListsPrintouts200ResponsePrintoutInner.printout) &&
        Objects.equals(this.size, getAlmawsV1TaskListsPrintouts200ResponsePrintoutInner.size) &&
        Objects.equals(this.source, getAlmawsV1TaskListsPrintouts200ResponsePrintoutInner.source) &&
        Objects.equals(this.status, getAlmawsV1TaskListsPrintouts200ResponsePrintoutInner.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(date, id, letter, link, printer, printout, size, source, status);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetAlmawsV1TaskListsPrintouts200ResponsePrintoutInner {\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    letter: ").append(toIndentedString(letter)).append("\n");
    sb.append("    link: ").append(toIndentedString(link)).append("\n");
    sb.append("    printer: ").append(toIndentedString(printer)).append("\n");
    sb.append("    printout: ").append(toIndentedString(printout)).append("\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("date");
    openapiFields.add("id");
    openapiFields.add("letter");
    openapiFields.add("link");
    openapiFields.add("printer");
    openapiFields.add("printout");
    openapiFields.add("size");
    openapiFields.add("source");
    openapiFields.add("status");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetAlmawsV1TaskListsPrintouts200ResponsePrintoutInner
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetAlmawsV1TaskListsPrintouts200ResponsePrintoutInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetAlmawsV1TaskListsPrintouts200ResponsePrintoutInner is not found in the empty JSON string", GetAlmawsV1TaskListsPrintouts200ResponsePrintoutInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetAlmawsV1TaskListsPrintouts200ResponsePrintoutInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetAlmawsV1TaskListsPrintouts200ResponsePrintoutInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("letter") != null && !jsonObj.get("letter").isJsonNull()) && !jsonObj.get("letter").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `letter` to be a primitive type in the JSON string but got `%s`", jsonObj.get("letter").toString()));
      }
      if ((jsonObj.get("link") != null && !jsonObj.get("link").isJsonNull()) && !jsonObj.get("link").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `link` to be a primitive type in the JSON string but got `%s`", jsonObj.get("link").toString()));
      }
      // validate the optional field `printer`
      if (jsonObj.get("printer") != null && !jsonObj.get("printer").isJsonNull()) {
        GetAlmawsV1TaskListsPrintouts200ResponsePrintoutInnerPrinter.validateJsonElement(jsonObj.get("printer"));
      }
      if ((jsonObj.get("printout") != null && !jsonObj.get("printout").isJsonNull()) && !jsonObj.get("printout").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `printout` to be a primitive type in the JSON string but got `%s`", jsonObj.get("printout").toString()));
      }
      if ((jsonObj.get("size") != null && !jsonObj.get("size").isJsonNull()) && !jsonObj.get("size").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `size` to be a primitive type in the JSON string but got `%s`", jsonObj.get("size").toString()));
      }
      if ((jsonObj.get("source") != null && !jsonObj.get("source").isJsonNull()) && !jsonObj.get("source").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `source` to be a primitive type in the JSON string but got `%s`", jsonObj.get("source").toString()));
      }
      // validate the optional field `status`
      if (jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) {
        GetAlmawsV1TaskListsPrintouts200ResponsePrintoutInnerStatus.validateJsonElement(jsonObj.get("status"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetAlmawsV1TaskListsPrintouts200ResponsePrintoutInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetAlmawsV1TaskListsPrintouts200ResponsePrintoutInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetAlmawsV1TaskListsPrintouts200ResponsePrintoutInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetAlmawsV1TaskListsPrintouts200ResponsePrintoutInner.class));

       return (TypeAdapter<T>) new TypeAdapter<GetAlmawsV1TaskListsPrintouts200ResponsePrintoutInner>() {
           @Override
           public void write(JsonWriter out, GetAlmawsV1TaskListsPrintouts200ResponsePrintoutInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetAlmawsV1TaskListsPrintouts200ResponsePrintoutInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetAlmawsV1TaskListsPrintouts200ResponsePrintoutInner given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetAlmawsV1TaskListsPrintouts200ResponsePrintoutInner
   * @throws IOException if the JSON string is invalid with respect to GetAlmawsV1TaskListsPrintouts200ResponsePrintoutInner
   */
  public static GetAlmawsV1TaskListsPrintouts200ResponsePrintoutInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetAlmawsV1TaskListsPrintouts200ResponsePrintoutInner.class);
  }

  /**
   * Convert an instance of GetAlmawsV1TaskListsPrintouts200ResponsePrintoutInner to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

