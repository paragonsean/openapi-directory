/*
 * Ex Libris APIs
 * For more information on how to use these APIs, including how to create an API key required for authentication, see [Alma REST APIs](https://developers.exlibrisgroup.com/alma/apis).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GetAlmawsV1TaskListsPrintouts200ResponsePrintoutInner;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A list of printouts.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:25:51.263757-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GetAlmawsV1TaskListsPrintouts200Response {
  public static final String SERIALIZED_NAME_PRINTOUT = "printout";
  @SerializedName(SERIALIZED_NAME_PRINTOUT)
  private List<GetAlmawsV1TaskListsPrintouts200ResponsePrintoutInner> printout = new ArrayList<>();

  public static final String SERIALIZED_NAME_TOTAL_RECORD_COUNT = "total_record_count";
  @SerializedName(SERIALIZED_NAME_TOTAL_RECORD_COUNT)
  private Integer totalRecordCount;

  public GetAlmawsV1TaskListsPrintouts200Response() {
  }

  public GetAlmawsV1TaskListsPrintouts200Response printout(List<GetAlmawsV1TaskListsPrintouts200ResponsePrintoutInner> printout) {
    this.printout = printout;
    return this;
  }

  public GetAlmawsV1TaskListsPrintouts200Response addPrintoutItem(GetAlmawsV1TaskListsPrintouts200ResponsePrintoutInner printoutItem) {
    if (this.printout == null) {
      this.printout = new ArrayList<>();
    }
    this.printout.add(printoutItem);
    return this;
  }

  /**
   * printout object.
   * @return printout
   */
  @javax.annotation.Nullable
  public List<GetAlmawsV1TaskListsPrintouts200ResponsePrintoutInner> getPrintout() {
    return printout;
  }

  public void setPrintout(List<GetAlmawsV1TaskListsPrintouts200ResponsePrintoutInner> printout) {
    this.printout = printout;
  }


  public GetAlmawsV1TaskListsPrintouts200Response totalRecordCount(Integer totalRecordCount) {
    this.totalRecordCount = totalRecordCount;
    return this;
  }

  /**
   * The total number of printouts.
   * @return totalRecordCount
   */
  @javax.annotation.Nullable
  public Integer getTotalRecordCount() {
    return totalRecordCount;
  }

  public void setTotalRecordCount(Integer totalRecordCount) {
    this.totalRecordCount = totalRecordCount;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetAlmawsV1TaskListsPrintouts200Response getAlmawsV1TaskListsPrintouts200Response = (GetAlmawsV1TaskListsPrintouts200Response) o;
    return Objects.equals(this.printout, getAlmawsV1TaskListsPrintouts200Response.printout) &&
        Objects.equals(this.totalRecordCount, getAlmawsV1TaskListsPrintouts200Response.totalRecordCount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(printout, totalRecordCount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetAlmawsV1TaskListsPrintouts200Response {\n");
    sb.append("    printout: ").append(toIndentedString(printout)).append("\n");
    sb.append("    totalRecordCount: ").append(toIndentedString(totalRecordCount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("printout");
    openapiFields.add("total_record_count");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetAlmawsV1TaskListsPrintouts200Response
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetAlmawsV1TaskListsPrintouts200Response.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetAlmawsV1TaskListsPrintouts200Response is not found in the empty JSON string", GetAlmawsV1TaskListsPrintouts200Response.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetAlmawsV1TaskListsPrintouts200Response.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetAlmawsV1TaskListsPrintouts200Response` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("printout") != null && !jsonObj.get("printout").isJsonNull()) {
        JsonArray jsonArrayprintout = jsonObj.getAsJsonArray("printout");
        if (jsonArrayprintout != null) {
          // ensure the json data is an array
          if (!jsonObj.get("printout").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `printout` to be an array in the JSON string but got `%s`", jsonObj.get("printout").toString()));
          }

          // validate the optional field `printout` (array)
          for (int i = 0; i < jsonArrayprintout.size(); i++) {
            GetAlmawsV1TaskListsPrintouts200ResponsePrintoutInner.validateJsonElement(jsonArrayprintout.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetAlmawsV1TaskListsPrintouts200Response.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetAlmawsV1TaskListsPrintouts200Response' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetAlmawsV1TaskListsPrintouts200Response> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetAlmawsV1TaskListsPrintouts200Response.class));

       return (TypeAdapter<T>) new TypeAdapter<GetAlmawsV1TaskListsPrintouts200Response>() {
           @Override
           public void write(JsonWriter out, GetAlmawsV1TaskListsPrintouts200Response value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetAlmawsV1TaskListsPrintouts200Response read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetAlmawsV1TaskListsPrintouts200Response given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetAlmawsV1TaskListsPrintouts200Response
   * @throws IOException if the JSON string is invalid with respect to GetAlmawsV1TaskListsPrintouts200Response
   */
  public static GetAlmawsV1TaskListsPrintouts200Response fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetAlmawsV1TaskListsPrintouts200Response.class);
  }

  /**
   * Convert an instance of GetAlmawsV1TaskListsPrintouts200Response to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

