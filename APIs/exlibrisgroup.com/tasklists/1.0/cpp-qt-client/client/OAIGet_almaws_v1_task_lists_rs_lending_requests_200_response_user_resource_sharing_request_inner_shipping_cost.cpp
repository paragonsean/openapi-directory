/**
 * Ex Libris APIs
 * For more information on how to use these APIs, including how to create an API key required for authentication, see [Alma REST APIs](https://developers.exlibrisgroup.com/alma/apis).
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGet_almaws_v1_task_lists_rs_lending_requests_200_response_user_resource_sharing_request_inner_shipping_cost.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGet_almaws_v1_task_lists_rs_lending_requests_200_response_user_resource_sharing_request_inner_shipping_cost::OAIGet_almaws_v1_task_lists_rs_lending_requests_200_response_user_resource_sharing_request_inner_shipping_cost(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGet_almaws_v1_task_lists_rs_lending_requests_200_response_user_resource_sharing_request_inner_shipping_cost::OAIGet_almaws_v1_task_lists_rs_lending_requests_200_response_user_resource_sharing_request_inner_shipping_cost() {
    this->initializeModel();
}

OAIGet_almaws_v1_task_lists_rs_lending_requests_200_response_user_resource_sharing_request_inner_shipping_cost::~OAIGet_almaws_v1_task_lists_rs_lending_requests_200_response_user_resource_sharing_request_inner_shipping_cost() {}

void OAIGet_almaws_v1_task_lists_rs_lending_requests_200_response_user_resource_sharing_request_inner_shipping_cost::initializeModel() {

    m_currency_isSet = false;
    m_currency_isValid = false;

    m_sum_isSet = false;
    m_sum_isValid = false;
}

void OAIGet_almaws_v1_task_lists_rs_lending_requests_200_response_user_resource_sharing_request_inner_shipping_cost::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGet_almaws_v1_task_lists_rs_lending_requests_200_response_user_resource_sharing_request_inner_shipping_cost::fromJsonObject(QJsonObject json) {

    m_currency_isValid = ::OpenAPI::fromJsonValue(m_currency, json[QString("currency")]);
    m_currency_isSet = !json[QString("currency")].isNull() && m_currency_isValid;

    m_sum_isValid = ::OpenAPI::fromJsonValue(m_sum, json[QString("sum")]);
    m_sum_isSet = !json[QString("sum")].isNull() && m_sum_isValid;
}

QString OAIGet_almaws_v1_task_lists_rs_lending_requests_200_response_user_resource_sharing_request_inner_shipping_cost::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGet_almaws_v1_task_lists_rs_lending_requests_200_response_user_resource_sharing_request_inner_shipping_cost::asJsonObject() const {
    QJsonObject obj;
    if (m_currency.isSet()) {
        obj.insert(QString("currency"), ::OpenAPI::toJsonValue(m_currency));
    }
    if (m_sum_isSet) {
        obj.insert(QString("sum"), ::OpenAPI::toJsonValue(m_sum));
    }
    return obj;
}

OAIGet_almaws_v1_task_lists_rs_lending_requests_200_response_user_resource_sharing_request_inner_shipping_cost_currency OAIGet_almaws_v1_task_lists_rs_lending_requests_200_response_user_resource_sharing_request_inner_shipping_cost::getCurrency() const {
    return m_currency;
}
void OAIGet_almaws_v1_task_lists_rs_lending_requests_200_response_user_resource_sharing_request_inner_shipping_cost::setCurrency(const OAIGet_almaws_v1_task_lists_rs_lending_requests_200_response_user_resource_sharing_request_inner_shipping_cost_currency &currency) {
    m_currency = currency;
    m_currency_isSet = true;
}

bool OAIGet_almaws_v1_task_lists_rs_lending_requests_200_response_user_resource_sharing_request_inner_shipping_cost::is_currency_Set() const{
    return m_currency_isSet;
}

bool OAIGet_almaws_v1_task_lists_rs_lending_requests_200_response_user_resource_sharing_request_inner_shipping_cost::is_currency_Valid() const{
    return m_currency_isValid;
}

double OAIGet_almaws_v1_task_lists_rs_lending_requests_200_response_user_resource_sharing_request_inner_shipping_cost::getSum() const {
    return m_sum;
}
void OAIGet_almaws_v1_task_lists_rs_lending_requests_200_response_user_resource_sharing_request_inner_shipping_cost::setSum(const double &sum) {
    m_sum = sum;
    m_sum_isSet = true;
}

bool OAIGet_almaws_v1_task_lists_rs_lending_requests_200_response_user_resource_sharing_request_inner_shipping_cost::is_sum_Set() const{
    return m_sum_isSet;
}

bool OAIGet_almaws_v1_task_lists_rs_lending_requests_200_response_user_resource_sharing_request_inner_shipping_cost::is_sum_Valid() const{
    return m_sum_isValid;
}

bool OAIGet_almaws_v1_task_lists_rs_lending_requests_200_response_user_resource_sharing_request_inner_shipping_cost::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_currency.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_sum_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGet_almaws_v1_task_lists_rs_lending_requests_200_response_user_resource_sharing_request_inner_shipping_cost::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_currency_isValid && m_sum_isValid && true;
}

} // namespace OpenAPI
