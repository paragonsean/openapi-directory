/**
 * Ex Libris APIs
 * For more information on how to use these APIs, including how to create an API key required for authentication, see [Alma REST APIs](https://developers.exlibrisgroup.com/alma/apis).
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGet_almaws_v1_task_lists_rs_lending_requests_200_response.h
 *
 * A list of resource sharing requests.
 */

#ifndef OAIGet_almaws_v1_task_lists_rs_lending_requests_200_response_H
#define OAIGet_almaws_v1_task_lists_rs_lending_requests_200_response_H

#include <QJsonObject>

#include "OAIGet_almaws_v1_task_lists_rs_lending_requests_200_response_user_resource_sharing_request_inner.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGet_almaws_v1_task_lists_rs_lending_requests_200_response_user_resource_sharing_request_inner;

class OAIGet_almaws_v1_task_lists_rs_lending_requests_200_response : public OAIObject {
public:
    OAIGet_almaws_v1_task_lists_rs_lending_requests_200_response();
    OAIGet_almaws_v1_task_lists_rs_lending_requests_200_response(QString json);
    ~OAIGet_almaws_v1_task_lists_rs_lending_requests_200_response() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint64 getTotalRecordCount() const;
    void setTotalRecordCount(const qint64 &total_record_count);
    bool is_total_record_count_Set() const;
    bool is_total_record_count_Valid() const;

    QList<OAIGet_almaws_v1_task_lists_rs_lending_requests_200_response_user_resource_sharing_request_inner> getUserResourceSharingRequest() const;
    void setUserResourceSharingRequest(const QList<OAIGet_almaws_v1_task_lists_rs_lending_requests_200_response_user_resource_sharing_request_inner> &user_resource_sharing_request);
    bool is_user_resource_sharing_request_Set() const;
    bool is_user_resource_sharing_request_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint64 m_total_record_count;
    bool m_total_record_count_isSet;
    bool m_total_record_count_isValid;

    QList<OAIGet_almaws_v1_task_lists_rs_lending_requests_200_response_user_resource_sharing_request_inner> m_user_resource_sharing_request;
    bool m_user_resource_sharing_request_isSet;
    bool m_user_resource_sharing_request_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGet_almaws_v1_task_lists_rs_lending_requests_200_response)

#endif // OAIGet_almaws_v1_task_lists_rs_lending_requests_200_response_H
