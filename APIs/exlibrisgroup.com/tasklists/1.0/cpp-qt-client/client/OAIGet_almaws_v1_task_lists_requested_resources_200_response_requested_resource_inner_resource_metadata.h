/**
 * Ex Libris APIs
 * For more information on how to use these APIs, including how to create an API key required for authentication, see [Alma REST APIs](https://developers.exlibrisgroup.com/alma/apis).
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_resource_metadata.h
 *
 * Metadata about the requested resource.
 */

#ifndef OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_resource_metadata_H
#define OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_resource_metadata_H

#include <QJsonObject>

#include "OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_resource_metadata_mms_id.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_resource_metadata_mms_id;

class OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_resource_metadata : public OAIObject {
public:
    OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_resource_metadata();
    OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_resource_metadata(QString json);
    ~OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_resource_metadata() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAuthor() const;
    void setAuthor(const QString &author);
    bool is_author_Set() const;
    bool is_author_Valid() const;

    QString getIsbn() const;
    void setIsbn(const QString &isbn);
    bool is_isbn_Set() const;
    bool is_isbn_Valid() const;

    QString getIssn() const;
    void setIssn(const QString &issn);
    bool is_issn_Set() const;
    bool is_issn_Valid() const;

    OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_resource_metadata_mms_id getMmsId() const;
    void setMmsId(const OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_resource_metadata_mms_id &mms_id);
    bool is_mms_id_Set() const;
    bool is_mms_id_Valid() const;

    QString getPublicationPlace() const;
    void setPublicationPlace(const QString &publication_place);
    bool is_publication_place_Set() const;
    bool is_publication_place_Valid() const;

    QString getPublicationYear() const;
    void setPublicationYear(const QString &publication_year);
    bool is_publication_year_Set() const;
    bool is_publication_year_Valid() const;

    QString getPublisher() const;
    void setPublisher(const QString &publisher);
    bool is_publisher_Set() const;
    bool is_publisher_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_author;
    bool m_author_isSet;
    bool m_author_isValid;

    QString m_isbn;
    bool m_isbn_isSet;
    bool m_isbn_isValid;

    QString m_issn;
    bool m_issn_isSet;
    bool m_issn_isValid;

    OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_resource_metadata_mms_id m_mms_id;
    bool m_mms_id_isSet;
    bool m_mms_id_isValid;

    QString m_publication_place;
    bool m_publication_place_isSet;
    bool m_publication_place_isValid;

    QString m_publication_year;
    bool m_publication_year_isSet;
    bool m_publication_year_isValid;

    QString m_publisher;
    bool m_publisher_isSet;
    bool m_publisher_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_resource_metadata)

#endif // OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_resource_metadata_H
