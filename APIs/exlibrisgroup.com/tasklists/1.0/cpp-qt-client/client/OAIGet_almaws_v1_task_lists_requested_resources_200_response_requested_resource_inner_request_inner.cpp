/**
 * Ex Libris APIs
 * For more information on how to use these APIs, including how to create an API key required for authentication, see [Alma REST APIs](https://developers.exlibrisgroup.com/alma/apis).
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_request_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_request_inner::OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_request_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_request_inner::OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_request_inner() {
    this->initializeModel();
}

OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_request_inner::~OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_request_inner() {}

void OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_request_inner::initializeModel() {

    m_comment_isSet = false;
    m_comment_isValid = false;

    m_destination_isSet = false;
    m_destination_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_link_isSet = false;
    m_link_isValid = false;

    m_printed_isSet = false;
    m_printed_isValid = false;

    m_reported_isSet = false;
    m_reported_isValid = false;

    m_request_date_isSet = false;
    m_request_date_isValid = false;

    m_request_sub_type_isSet = false;
    m_request_sub_type_isValid = false;

    m_request_time_isSet = false;
    m_request_time_isValid = false;

    m_request_type_isSet = false;
    m_request_type_isValid = false;

    m_requester_isSet = false;
    m_requester_isValid = false;
}

void OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_request_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_request_inner::fromJsonObject(QJsonObject json) {

    m_comment_isValid = ::OpenAPI::fromJsonValue(m_comment, json[QString("comment")]);
    m_comment_isSet = !json[QString("comment")].isNull() && m_comment_isValid;

    m_destination_isValid = ::OpenAPI::fromJsonValue(m_destination, json[QString("destination")]);
    m_destination_isSet = !json[QString("destination")].isNull() && m_destination_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_link_isValid = ::OpenAPI::fromJsonValue(m_link, json[QString("link")]);
    m_link_isSet = !json[QString("link")].isNull() && m_link_isValid;

    m_printed_isValid = ::OpenAPI::fromJsonValue(m_printed, json[QString("printed")]);
    m_printed_isSet = !json[QString("printed")].isNull() && m_printed_isValid;

    m_reported_isValid = ::OpenAPI::fromJsonValue(m_reported, json[QString("reported")]);
    m_reported_isSet = !json[QString("reported")].isNull() && m_reported_isValid;

    m_request_date_isValid = ::OpenAPI::fromJsonValue(m_request_date, json[QString("request_date")]);
    m_request_date_isSet = !json[QString("request_date")].isNull() && m_request_date_isValid;

    m_request_sub_type_isValid = ::OpenAPI::fromJsonValue(m_request_sub_type, json[QString("request_sub_type")]);
    m_request_sub_type_isSet = !json[QString("request_sub_type")].isNull() && m_request_sub_type_isValid;

    m_request_time_isValid = ::OpenAPI::fromJsonValue(m_request_time, json[QString("request_time")]);
    m_request_time_isSet = !json[QString("request_time")].isNull() && m_request_time_isValid;

    m_request_type_isValid = ::OpenAPI::fromJsonValue(m_request_type, json[QString("request_type")]);
    m_request_type_isSet = !json[QString("request_type")].isNull() && m_request_type_isValid;

    m_requester_isValid = ::OpenAPI::fromJsonValue(m_requester, json[QString("requester")]);
    m_requester_isSet = !json[QString("requester")].isNull() && m_requester_isValid;
}

QString OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_request_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_request_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_comment_isSet) {
        obj.insert(QString("comment"), ::OpenAPI::toJsonValue(m_comment));
    }
    if (m_destination.isSet()) {
        obj.insert(QString("destination"), ::OpenAPI::toJsonValue(m_destination));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_link_isSet) {
        obj.insert(QString("link"), ::OpenAPI::toJsonValue(m_link));
    }
    if (m_printed_isSet) {
        obj.insert(QString("printed"), ::OpenAPI::toJsonValue(m_printed));
    }
    if (m_reported_isSet) {
        obj.insert(QString("reported"), ::OpenAPI::toJsonValue(m_reported));
    }
    if (m_request_date_isSet) {
        obj.insert(QString("request_date"), ::OpenAPI::toJsonValue(m_request_date));
    }
    if (m_request_sub_type.isSet()) {
        obj.insert(QString("request_sub_type"), ::OpenAPI::toJsonValue(m_request_sub_type));
    }
    if (m_request_time_isSet) {
        obj.insert(QString("request_time"), ::OpenAPI::toJsonValue(m_request_time));
    }
    if (m_request_type_isSet) {
        obj.insert(QString("request_type"), ::OpenAPI::toJsonValue(m_request_type));
    }
    if (m_requester.isSet()) {
        obj.insert(QString("requester"), ::OpenAPI::toJsonValue(m_requester));
    }
    return obj;
}

QString OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_request_inner::getComment() const {
    return m_comment;
}
void OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_request_inner::setComment(const QString &comment) {
    m_comment = comment;
    m_comment_isSet = true;
}

bool OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_request_inner::is_comment_Set() const{
    return m_comment_isSet;
}

bool OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_request_inner::is_comment_Valid() const{
    return m_comment_isValid;
}

OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_request_inner_destination OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_request_inner::getDestination() const {
    return m_destination;
}
void OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_request_inner::setDestination(const OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_request_inner_destination &destination) {
    m_destination = destination;
    m_destination_isSet = true;
}

bool OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_request_inner::is_destination_Set() const{
    return m_destination_isSet;
}

bool OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_request_inner::is_destination_Valid() const{
    return m_destination_isValid;
}

QString OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_request_inner::getId() const {
    return m_id;
}
void OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_request_inner::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_request_inner::is_id_Set() const{
    return m_id_isSet;
}

bool OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_request_inner::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_request_inner::getLink() const {
    return m_link;
}
void OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_request_inner::setLink(const QString &link) {
    m_link = link;
    m_link_isSet = true;
}

bool OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_request_inner::is_link_Set() const{
    return m_link_isSet;
}

bool OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_request_inner::is_link_Valid() const{
    return m_link_isValid;
}

bool OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_request_inner::isPrinted() const {
    return m_printed;
}
void OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_request_inner::setPrinted(const bool &printed) {
    m_printed = printed;
    m_printed_isSet = true;
}

bool OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_request_inner::is_printed_Set() const{
    return m_printed_isSet;
}

bool OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_request_inner::is_printed_Valid() const{
    return m_printed_isValid;
}

bool OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_request_inner::isReported() const {
    return m_reported;
}
void OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_request_inner::setReported(const bool &reported) {
    m_reported = reported;
    m_reported_isSet = true;
}

bool OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_request_inner::is_reported_Set() const{
    return m_reported_isSet;
}

bool OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_request_inner::is_reported_Valid() const{
    return m_reported_isValid;
}

QDate OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_request_inner::getRequestDate() const {
    return m_request_date;
}
void OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_request_inner::setRequestDate(const QDate &request_date) {
    m_request_date = request_date;
    m_request_date_isSet = true;
}

bool OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_request_inner::is_request_date_Set() const{
    return m_request_date_isSet;
}

bool OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_request_inner::is_request_date_Valid() const{
    return m_request_date_isValid;
}

OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_request_inner_request_sub_type OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_request_inner::getRequestSubType() const {
    return m_request_sub_type;
}
void OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_request_inner::setRequestSubType(const OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_request_inner_request_sub_type &request_sub_type) {
    m_request_sub_type = request_sub_type;
    m_request_sub_type_isSet = true;
}

bool OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_request_inner::is_request_sub_type_Set() const{
    return m_request_sub_type_isSet;
}

bool OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_request_inner::is_request_sub_type_Valid() const{
    return m_request_sub_type_isValid;
}

QDateTime OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_request_inner::getRequestTime() const {
    return m_request_time;
}
void OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_request_inner::setRequestTime(const QDateTime &request_time) {
    m_request_time = request_time;
    m_request_time_isSet = true;
}

bool OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_request_inner::is_request_time_Set() const{
    return m_request_time_isSet;
}

bool OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_request_inner::is_request_time_Valid() const{
    return m_request_time_isValid;
}

QString OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_request_inner::getRequestType() const {
    return m_request_type;
}
void OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_request_inner::setRequestType(const QString &request_type) {
    m_request_type = request_type;
    m_request_type_isSet = true;
}

bool OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_request_inner::is_request_type_Set() const{
    return m_request_type_isSet;
}

bool OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_request_inner::is_request_type_Valid() const{
    return m_request_type_isValid;
}

OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_request_inner_requester OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_request_inner::getRequester() const {
    return m_requester;
}
void OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_request_inner::setRequester(const OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_request_inner_requester &requester) {
    m_requester = requester;
    m_requester_isSet = true;
}

bool OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_request_inner::is_requester_Set() const{
    return m_requester_isSet;
}

bool OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_request_inner::is_requester_Valid() const{
    return m_requester_isValid;
}

bool OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_request_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_comment_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_destination.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_link_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_printed_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_reported_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_request_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_request_sub_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_request_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_request_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_requester.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_request_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_request_type_isValid && true;
}

} // namespace OpenAPI
