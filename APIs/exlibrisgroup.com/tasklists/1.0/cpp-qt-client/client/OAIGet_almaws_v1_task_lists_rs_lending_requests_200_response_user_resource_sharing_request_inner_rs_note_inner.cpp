/**
 * Ex Libris APIs
 * For more information on how to use these APIs, including how to create an API key required for authentication, see [Alma REST APIs](https://developers.exlibrisgroup.com/alma/apis).
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGet_almaws_v1_task_lists_rs_lending_requests_200_response_user_resource_sharing_request_inner_rs_note_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGet_almaws_v1_task_lists_rs_lending_requests_200_response_user_resource_sharing_request_inner_rs_note_inner::OAIGet_almaws_v1_task_lists_rs_lending_requests_200_response_user_resource_sharing_request_inner_rs_note_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGet_almaws_v1_task_lists_rs_lending_requests_200_response_user_resource_sharing_request_inner_rs_note_inner::OAIGet_almaws_v1_task_lists_rs_lending_requests_200_response_user_resource_sharing_request_inner_rs_note_inner() {
    this->initializeModel();
}

OAIGet_almaws_v1_task_lists_rs_lending_requests_200_response_user_resource_sharing_request_inner_rs_note_inner::~OAIGet_almaws_v1_task_lists_rs_lending_requests_200_response_user_resource_sharing_request_inner_rs_note_inner() {}

void OAIGet_almaws_v1_task_lists_rs_lending_requests_200_response_user_resource_sharing_request_inner_rs_note_inner::initializeModel() {

    m_content_isSet = false;
    m_content_isValid = false;

    m_created_by_isSet = false;
    m_created_by_isValid = false;

    m_created_date_isSet = false;
    m_created_date_isValid = false;
}

void OAIGet_almaws_v1_task_lists_rs_lending_requests_200_response_user_resource_sharing_request_inner_rs_note_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGet_almaws_v1_task_lists_rs_lending_requests_200_response_user_resource_sharing_request_inner_rs_note_inner::fromJsonObject(QJsonObject json) {

    m_content_isValid = ::OpenAPI::fromJsonValue(m_content, json[QString("content")]);
    m_content_isSet = !json[QString("content")].isNull() && m_content_isValid;

    m_created_by_isValid = ::OpenAPI::fromJsonValue(m_created_by, json[QString("created_by")]);
    m_created_by_isSet = !json[QString("created_by")].isNull() && m_created_by_isValid;

    m_created_date_isValid = ::OpenAPI::fromJsonValue(m_created_date, json[QString("created_date")]);
    m_created_date_isSet = !json[QString("created_date")].isNull() && m_created_date_isValid;
}

QString OAIGet_almaws_v1_task_lists_rs_lending_requests_200_response_user_resource_sharing_request_inner_rs_note_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGet_almaws_v1_task_lists_rs_lending_requests_200_response_user_resource_sharing_request_inner_rs_note_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_content_isSet) {
        obj.insert(QString("content"), ::OpenAPI::toJsonValue(m_content));
    }
    if (m_created_by_isSet) {
        obj.insert(QString("created_by"), ::OpenAPI::toJsonValue(m_created_by));
    }
    if (m_created_date_isSet) {
        obj.insert(QString("created_date"), ::OpenAPI::toJsonValue(m_created_date));
    }
    return obj;
}

QString OAIGet_almaws_v1_task_lists_rs_lending_requests_200_response_user_resource_sharing_request_inner_rs_note_inner::getContent() const {
    return m_content;
}
void OAIGet_almaws_v1_task_lists_rs_lending_requests_200_response_user_resource_sharing_request_inner_rs_note_inner::setContent(const QString &content) {
    m_content = content;
    m_content_isSet = true;
}

bool OAIGet_almaws_v1_task_lists_rs_lending_requests_200_response_user_resource_sharing_request_inner_rs_note_inner::is_content_Set() const{
    return m_content_isSet;
}

bool OAIGet_almaws_v1_task_lists_rs_lending_requests_200_response_user_resource_sharing_request_inner_rs_note_inner::is_content_Valid() const{
    return m_content_isValid;
}

QString OAIGet_almaws_v1_task_lists_rs_lending_requests_200_response_user_resource_sharing_request_inner_rs_note_inner::getCreatedBy() const {
    return m_created_by;
}
void OAIGet_almaws_v1_task_lists_rs_lending_requests_200_response_user_resource_sharing_request_inner_rs_note_inner::setCreatedBy(const QString &created_by) {
    m_created_by = created_by;
    m_created_by_isSet = true;
}

bool OAIGet_almaws_v1_task_lists_rs_lending_requests_200_response_user_resource_sharing_request_inner_rs_note_inner::is_created_by_Set() const{
    return m_created_by_isSet;
}

bool OAIGet_almaws_v1_task_lists_rs_lending_requests_200_response_user_resource_sharing_request_inner_rs_note_inner::is_created_by_Valid() const{
    return m_created_by_isValid;
}

QDate OAIGet_almaws_v1_task_lists_rs_lending_requests_200_response_user_resource_sharing_request_inner_rs_note_inner::getCreatedDate() const {
    return m_created_date;
}
void OAIGet_almaws_v1_task_lists_rs_lending_requests_200_response_user_resource_sharing_request_inner_rs_note_inner::setCreatedDate(const QDate &created_date) {
    m_created_date = created_date;
    m_created_date_isSet = true;
}

bool OAIGet_almaws_v1_task_lists_rs_lending_requests_200_response_user_resource_sharing_request_inner_rs_note_inner::is_created_date_Set() const{
    return m_created_date_isSet;
}

bool OAIGet_almaws_v1_task_lists_rs_lending_requests_200_response_user_resource_sharing_request_inner_rs_note_inner::is_created_date_Valid() const{
    return m_created_date_isValid;
}

bool OAIGet_almaws_v1_task_lists_rs_lending_requests_200_response_user_resource_sharing_request_inner_rs_note_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_content_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_by_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_date_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGet_almaws_v1_task_lists_rs_lending_requests_200_response_user_resource_sharing_request_inner_rs_note_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
