/**
 * Ex Libris APIs
 * For more information on how to use these APIs, including how to create an API key required for authentication, see [Alma REST APIs](https://developers.exlibrisgroup.com/alma/apis).
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_location.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_location::OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_location(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_location::OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_location() {
    this->initializeModel();
}

OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_location::~OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_location() {}

void OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_location::initializeModel() {

    m_call_number_isSet = false;
    m_call_number_isValid = false;

    m_copy_isSet = false;
    m_copy_isValid = false;

    m_holding_id_isSet = false;
    m_holding_id_isValid = false;

    m_library_isSet = false;
    m_library_isValid = false;

    m_shelving_location_isSet = false;
    m_shelving_location_isValid = false;
}

void OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_location::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_location::fromJsonObject(QJsonObject json) {

    m_call_number_isValid = ::OpenAPI::fromJsonValue(m_call_number, json[QString("call_number")]);
    m_call_number_isSet = !json[QString("call_number")].isNull() && m_call_number_isValid;

    m_copy_isValid = ::OpenAPI::fromJsonValue(m_copy, json[QString("copy")]);
    m_copy_isSet = !json[QString("copy")].isNull() && m_copy_isValid;

    m_holding_id_isValid = ::OpenAPI::fromJsonValue(m_holding_id, json[QString("holding_id")]);
    m_holding_id_isSet = !json[QString("holding_id")].isNull() && m_holding_id_isValid;

    m_library_isValid = ::OpenAPI::fromJsonValue(m_library, json[QString("library")]);
    m_library_isSet = !json[QString("library")].isNull() && m_library_isValid;

    m_shelving_location_isValid = ::OpenAPI::fromJsonValue(m_shelving_location, json[QString("shelving_location")]);
    m_shelving_location_isSet = !json[QString("shelving_location")].isNull() && m_shelving_location_isValid;
}

QString OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_location::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_location::asJsonObject() const {
    QJsonObject obj;
    if (m_call_number_isSet) {
        obj.insert(QString("call_number"), ::OpenAPI::toJsonValue(m_call_number));
    }
    if (m_copy.size() > 0) {
        obj.insert(QString("copy"), ::OpenAPI::toJsonValue(m_copy));
    }
    if (m_holding_id.isSet()) {
        obj.insert(QString("holding_id"), ::OpenAPI::toJsonValue(m_holding_id));
    }
    if (m_library.isSet()) {
        obj.insert(QString("library"), ::OpenAPI::toJsonValue(m_library));
    }
    if (m_shelving_location_isSet) {
        obj.insert(QString("shelving_location"), ::OpenAPI::toJsonValue(m_shelving_location));
    }
    return obj;
}

QString OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_location::getCallNumber() const {
    return m_call_number;
}
void OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_location::setCallNumber(const QString &call_number) {
    m_call_number = call_number;
    m_call_number_isSet = true;
}

bool OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_location::is_call_number_Set() const{
    return m_call_number_isSet;
}

bool OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_location::is_call_number_Valid() const{
    return m_call_number_isValid;
}

QList<OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_location_copy_inner> OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_location::getCopy() const {
    return m_copy;
}
void OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_location::setCopy(const QList<OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_location_copy_inner> &copy) {
    m_copy = copy;
    m_copy_isSet = true;
}

bool OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_location::is_copy_Set() const{
    return m_copy_isSet;
}

bool OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_location::is_copy_Valid() const{
    return m_copy_isValid;
}

OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_location_holding_id OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_location::getHoldingId() const {
    return m_holding_id;
}
void OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_location::setHoldingId(const OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_location_holding_id &holding_id) {
    m_holding_id = holding_id;
    m_holding_id_isSet = true;
}

bool OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_location::is_holding_id_Set() const{
    return m_holding_id_isSet;
}

bool OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_location::is_holding_id_Valid() const{
    return m_holding_id_isValid;
}

OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_location_library OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_location::getLibrary() const {
    return m_library;
}
void OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_location::setLibrary(const OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_location_library &library) {
    m_library = library;
    m_library_isSet = true;
}

bool OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_location::is_library_Set() const{
    return m_library_isSet;
}

bool OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_location::is_library_Valid() const{
    return m_library_isValid;
}

QString OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_location::getShelvingLocation() const {
    return m_shelving_location;
}
void OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_location::setShelvingLocation(const QString &shelving_location) {
    m_shelving_location = shelving_location;
    m_shelving_location_isSet = true;
}

bool OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_location::is_shelving_location_Set() const{
    return m_shelving_location_isSet;
}

bool OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_location::is_shelving_location_Valid() const{
    return m_shelving_location_isValid;
}

bool OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_location::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_call_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_copy.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_holding_id.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_library.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_shelving_location_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGet_almaws_v1_task_lists_requested_resources_200_response_requested_resource_inner_location::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
