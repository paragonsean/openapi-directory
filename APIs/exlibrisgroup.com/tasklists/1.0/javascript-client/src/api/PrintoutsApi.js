/**
 * Ex Libris APIs
 * For more information on how to use these APIs, including how to create an API key required for authentication, see [Alma REST APIs](https://developers.exlibrisgroup.com/alma/apis).
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import GetAlmawsV1TaskListsPrintouts200Response from '../model/GetAlmawsV1TaskListsPrintouts200Response';

/**
* Printouts service.
* @module api/PrintoutsApi
* @version 1.0
*/
export default class PrintoutsApi {

    /**
    * Constructs a new PrintoutsApi. 
    * @alias module:api/PrintoutsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getAlmawsV1TaskListsPrintouts operation.
     * @callback module:api/PrintoutsApi~getAlmawsV1TaskListsPrintoutsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetAlmawsV1TaskListsPrintouts200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve Printouts
     * This API returns a list of Printouts.
     * @param {Object} opts Optional parameters
     * @param {String} [letter = 'ALL')] Printout Name. Optional. 
     * @param {String} [status = 'ALL')] Printout status. Optional. Valid values are: Printed, Pending, Canceled.
     * @param {String} [printerId = 'ALL')] Printout Printer
     * @param {String} [printoutId = 'ALL')] A list of Printout IDs (for example: 123,456,778) from 1 to the limit of 100 Optional. Use of this option overrides all of the filtering parameters
     * @param {Number} [limit] Limits the number of results. Optional. Valid values are 0-100. Default value: 10.
     * @param {Number} [offset] Offset of the results returned. Optional. Default value: 0, which means that the first results will be returned.
     * @param {module:api/PrintoutsApi~getAlmawsV1TaskListsPrintoutsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetAlmawsV1TaskListsPrintouts200Response}
     */
    getAlmawsV1TaskListsPrintouts(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'letter': opts['letter'],
        'status': opts['status'],
        'printer_id': opts['printerId'],
        'printout_id': opts['printoutId'],
        'limit': opts['limit'],
        'offset': opts['offset']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['ApiKeyAuth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = GetAlmawsV1TaskListsPrintouts200Response;
      return this.apiClient.callApi(
        '/almaws/v1/task-lists/printouts', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getAlmawsV1TaskListsPrintoutsPrintoutId operation.
     * @callback module:api/PrintoutsApi~getAlmawsV1TaskListsPrintoutsPrintoutIdCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve a Printout
     * This Web service returns a Printout given a Printout ID.
     * @param {String} printoutId The Printout ID
     * @param {module:api/PrintoutsApi~getAlmawsV1TaskListsPrintoutsPrintoutIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    getAlmawsV1TaskListsPrintoutsPrintoutId(printoutId, callback) {
      let postBody = null;
      // verify the required parameter 'printoutId' is set
      if (printoutId === undefined || printoutId === null) {
        throw new Error("Missing the required parameter 'printoutId' when calling getAlmawsV1TaskListsPrintoutsPrintoutId");
      }

      let pathParams = {
        'printout_id': printoutId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['ApiKeyAuth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/almaws/v1/task-lists/printouts/{printout_id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the postAlmawsV1TaskListsPrintouts operation.
     * @callback module:api/PrintoutsApi~postAlmawsV1TaskListsPrintoutsCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Act on Printouts
     * This API performs an action on printouts: mark as printed or canceled. 10,000 records can be handled in one requests. Only printouts which were updated will be returned.
     * @param {String} op The operation to perform on the printout. Currently, the options are: 'mark_as_printed','mark_as_canceled'
     * @param {Object} opts Optional parameters
     * @param {String} [letter = 'ALL')] Printout Name. Optional. 
     * @param {String} [status = 'ALL')] Printout status. Optional. Valid values are: Printed, Pending, Canceled.
     * @param {String} [printerId = 'ALL')] Printout Printer
     * @param {String} [printoutId = 'ALL')] A list of Printout IDs (for example: 123,456,778) from 1 to the limit of 100 Optional. Use of this option overrides all of the filtering parameters
     * @param {module:api/PrintoutsApi~postAlmawsV1TaskListsPrintoutsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    postAlmawsV1TaskListsPrintouts(op, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'op' is set
      if (op === undefined || op === null) {
        throw new Error("Missing the required parameter 'op' when calling postAlmawsV1TaskListsPrintouts");
      }

      let pathParams = {
      };
      let queryParams = {
        'letter': opts['letter'],
        'status': opts['status'],
        'printer_id': opts['printerId'],
        'printout_id': opts['printoutId'],
        'op': op
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['ApiKeyAuth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/almaws/v1/task-lists/printouts', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the postAlmawsV1TaskListsPrintoutsPrintoutId operation.
     * @callback module:api/PrintoutsApi~postAlmawsV1TaskListsPrintoutsPrintoutIdCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Printout Service
     * This API operates on an printout. given a Printout ID.
     * @param {String} printoutId The Printout ID
     * @param {String} op The operation to perform on the printout. Currently, the options are 'mark_as_printed','mark_as_canceled'
     * @param {module:api/PrintoutsApi~postAlmawsV1TaskListsPrintoutsPrintoutIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    postAlmawsV1TaskListsPrintoutsPrintoutId(printoutId, op, callback) {
      let postBody = null;
      // verify the required parameter 'printoutId' is set
      if (printoutId === undefined || printoutId === null) {
        throw new Error("Missing the required parameter 'printoutId' when calling postAlmawsV1TaskListsPrintoutsPrintoutId");
      }
      // verify the required parameter 'op' is set
      if (op === undefined || op === null) {
        throw new Error("Missing the required parameter 'op' when calling postAlmawsV1TaskListsPrintoutsPrintoutId");
      }

      let pathParams = {
        'printout_id': printoutId
      };
      let queryParams = {
        'op': op
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['ApiKeyAuth'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/almaws/v1/task-lists/printouts/{printout_id}', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
