/**
 * Bhagavad Gita API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The VerseSchema model module.
 * @module model/VerseSchema
 * @version 1.0
 */
class VerseSchema {
    /**
     * Constructs a new <code>VerseSchema</code>.
     * @alias module:model/VerseSchema
     */
    constructor() { 
        
        VerseSchema.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>VerseSchema</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VerseSchema} obj Optional instance to populate.
     * @return {module:model/VerseSchema} The populated <code>VerseSchema</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VerseSchema();

            if (data.hasOwnProperty('meaning')) {
                obj['meaning'] = ApiClient.convertToType(data['meaning'], 'String');
            }
            if (data.hasOwnProperty('text')) {
                obj['text'] = ApiClient.convertToType(data['text'], 'String');
            }
            if (data.hasOwnProperty('transliteration')) {
                obj['transliteration'] = ApiClient.convertToType(data['transliteration'], 'String');
            }
            if (data.hasOwnProperty('verse_number')) {
                obj['verse_number'] = ApiClient.convertToType(data['verse_number'], 'String');
            }
            if (data.hasOwnProperty('word_meanings')) {
                obj['word_meanings'] = ApiClient.convertToType(data['word_meanings'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>VerseSchema</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>VerseSchema</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['meaning'] && !(typeof data['meaning'] === 'string' || data['meaning'] instanceof String)) {
            throw new Error("Expected the field `meaning` to be a primitive type in the JSON string but got " + data['meaning']);
        }
        // ensure the json data is a string
        if (data['text'] && !(typeof data['text'] === 'string' || data['text'] instanceof String)) {
            throw new Error("Expected the field `text` to be a primitive type in the JSON string but got " + data['text']);
        }
        // ensure the json data is a string
        if (data['transliteration'] && !(typeof data['transliteration'] === 'string' || data['transliteration'] instanceof String)) {
            throw new Error("Expected the field `transliteration` to be a primitive type in the JSON string but got " + data['transliteration']);
        }
        // ensure the json data is a string
        if (data['verse_number'] && !(typeof data['verse_number'] === 'string' || data['verse_number'] instanceof String)) {
            throw new Error("Expected the field `verse_number` to be a primitive type in the JSON string but got " + data['verse_number']);
        }
        // ensure the json data is a string
        if (data['word_meanings'] && !(typeof data['word_meanings'] === 'string' || data['word_meanings'] instanceof String)) {
            throw new Error("Expected the field `word_meanings` to be a primitive type in the JSON string but got " + data['word_meanings']);
        }

        return true;
    }


}



/**
 * @member {String} meaning
 */
VerseSchema.prototype['meaning'] = undefined;

/**
 * @member {String} text
 */
VerseSchema.prototype['text'] = undefined;

/**
 * @member {String} transliteration
 */
VerseSchema.prototype['transliteration'] = undefined;

/**
 * @member {String} verse_number
 */
VerseSchema.prototype['verse_number'] = undefined;

/**
 * @member {String} word_meanings
 */
VerseSchema.prototype['word_meanings'] = undefined;






export default VerseSchema;

