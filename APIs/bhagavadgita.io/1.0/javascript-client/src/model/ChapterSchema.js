/**
 * Bhagavad Gita API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ChapterSchema model module.
 * @module model/ChapterSchema
 * @version 1.0
 */
class ChapterSchema {
    /**
     * Constructs a new <code>ChapterSchema</code>.
     * @alias module:model/ChapterSchema
     */
    constructor() { 
        
        ChapterSchema.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ChapterSchema</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ChapterSchema} obj Optional instance to populate.
     * @return {module:model/ChapterSchema} The populated <code>ChapterSchema</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ChapterSchema();

            if (data.hasOwnProperty('chapter_number')) {
                obj['chapter_number'] = ApiClient.convertToType(data['chapter_number'], 'Number');
            }
            if (data.hasOwnProperty('chapter_summary')) {
                obj['chapter_summary'] = ApiClient.convertToType(data['chapter_summary'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('name_meaning')) {
                obj['name_meaning'] = ApiClient.convertToType(data['name_meaning'], 'String');
            }
            if (data.hasOwnProperty('name_translation')) {
                obj['name_translation'] = ApiClient.convertToType(data['name_translation'], 'String');
            }
            if (data.hasOwnProperty('name_transliterated')) {
                obj['name_transliterated'] = ApiClient.convertToType(data['name_transliterated'], 'String');
            }
            if (data.hasOwnProperty('verses_count')) {
                obj['verses_count'] = ApiClient.convertToType(data['verses_count'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ChapterSchema</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ChapterSchema</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['chapter_summary'] && !(typeof data['chapter_summary'] === 'string' || data['chapter_summary'] instanceof String)) {
            throw new Error("Expected the field `chapter_summary` to be a primitive type in the JSON string but got " + data['chapter_summary']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['name_meaning'] && !(typeof data['name_meaning'] === 'string' || data['name_meaning'] instanceof String)) {
            throw new Error("Expected the field `name_meaning` to be a primitive type in the JSON string but got " + data['name_meaning']);
        }
        // ensure the json data is a string
        if (data['name_translation'] && !(typeof data['name_translation'] === 'string' || data['name_translation'] instanceof String)) {
            throw new Error("Expected the field `name_translation` to be a primitive type in the JSON string but got " + data['name_translation']);
        }
        // ensure the json data is a string
        if (data['name_transliterated'] && !(typeof data['name_transliterated'] === 'string' || data['name_transliterated'] instanceof String)) {
            throw new Error("Expected the field `name_transliterated` to be a primitive type in the JSON string but got " + data['name_transliterated']);
        }

        return true;
    }


}



/**
 * @member {Number} chapter_number
 */
ChapterSchema.prototype['chapter_number'] = undefined;

/**
 * @member {String} chapter_summary
 */
ChapterSchema.prototype['chapter_summary'] = undefined;

/**
 * @member {String} name
 */
ChapterSchema.prototype['name'] = undefined;

/**
 * @member {String} name_meaning
 */
ChapterSchema.prototype['name_meaning'] = undefined;

/**
 * @member {String} name_translation
 */
ChapterSchema.prototype['name_translation'] = undefined;

/**
 * @member {String} name_transliterated
 */
ChapterSchema.prototype['name_transliterated'] = undefined;

/**
 * @member {Number} verses_count
 */
ChapterSchema.prototype['verses_count'] = undefined;






export default ChapterSchema;

