/**
 * Bhagavad Gita API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ChapterSchema from '../model/ChapterSchema';

/**
* Chapter service.
* @module api/ChapterApi
* @version 1.0
*/
export default class ChapterApi {

    /**
    * Constructs a new ChapterApi. 
    * @alias module:api/ChapterApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the apiV1ChaptersChapterNumberGet operation.
     * @callback module:api/ChapterApi~apiV1ChaptersChapterNumberGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ChapterSchema} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a specific chapter from the Bhagavad Gita.
     * Get information about a specific chapter from the Bhagavad Gita.<br/>
     * @param {String} accessToken Your app's access token.
     * @param {module:model/Number} chapterNumber Which Chapter Number to filter?
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [language] Language to query. Leave blank for english.
     * @param {module:api/ChapterApi~apiV1ChaptersChapterNumberGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ChapterSchema}
     */
    apiV1ChaptersChapterNumberGet(accessToken, chapterNumber, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'accessToken' is set
      if (accessToken === undefined || accessToken === null) {
        throw new Error("Missing the required parameter 'accessToken' when calling apiV1ChaptersChapterNumberGet");
      }
      // verify the required parameter 'chapterNumber' is set
      if (chapterNumber === undefined || chapterNumber === null) {
        throw new Error("Missing the required parameter 'chapterNumber' when calling apiV1ChaptersChapterNumberGet");
      }

      let pathParams = {
        'chapter_number': chapterNumber
      };
      let queryParams = {
        'access_token': accessToken,
        'language': opts['language']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ChapterSchema;
      return this.apiClient.callApi(
        '/api/v1/chapters/{chapter_number}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiV1ChaptersGet operation.
     * @callback module:api/ChapterApi~apiV1ChaptersGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ChapterSchema} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get all the 18 Chapters of the Bhagavad Gita.
     * Get a list of all the 18 Chapters of the Bhagavad Gita.<br/>
     * @param {String} accessToken Your app's access token.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [language] Language to query. Leave blank for english.
     * @param {module:api/ChapterApi~apiV1ChaptersGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ChapterSchema}
     */
    apiV1ChaptersGet(accessToken, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'accessToken' is set
      if (accessToken === undefined || accessToken === null) {
        throw new Error("Missing the required parameter 'accessToken' when calling apiV1ChaptersGet");
      }

      let pathParams = {
      };
      let queryParams = {
        'access_token': accessToken,
        'language': opts['language']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ChapterSchema;
      return this.apiClient.callApi(
        '/api/v1/chapters', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
