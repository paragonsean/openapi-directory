/*
 * Bhagavad Gita API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.VerseSchema;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class VerseApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public VerseApi() {
        this(Configuration.getDefaultApiClient());
    }

    public VerseApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for apiV1ChaptersChapterNumberVersesGet
     * @param accessToken Your app&#39;s access token. (required)
     * @param chapterNumber Which Chapter Number to filter? (required)
     * @param language Language to query. Leave blank for english. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success: Everything worked as expected. </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad Request: The request was unacceptable due to wrong parameter(s). </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Unauthorized: Invalid access_token used. </td><td>  -  </td></tr>
        <tr><td> 402 </td><td> Request Failed. </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not Found: The chapter number you are looking for could not be found. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Server Error: Something went wrong on our end. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call apiV1ChaptersChapterNumberVersesGetCall(String accessToken, Integer chapterNumber, String language, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/chapters/{chapter_number}/verses"
            .replace("{" + "chapter_number" + "}", localVarApiClient.escapeString(chapterNumber.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (accessToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("access_token", accessToken));
        }

        if (language != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("language", language));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call apiV1ChaptersChapterNumberVersesGetValidateBeforeCall(String accessToken, Integer chapterNumber, String language, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'accessToken' is set
        if (accessToken == null) {
            throw new ApiException("Missing the required parameter 'accessToken' when calling apiV1ChaptersChapterNumberVersesGet(Async)");
        }

        // verify the required parameter 'chapterNumber' is set
        if (chapterNumber == null) {
            throw new ApiException("Missing the required parameter 'chapterNumber' when calling apiV1ChaptersChapterNumberVersesGet(Async)");
        }

        return apiV1ChaptersChapterNumberVersesGetCall(accessToken, chapterNumber, language, _callback);

    }

    /**
     * Get all the Verses from a Chapter.
     * Get a list of all Verses from a particular Chapter.&lt;br/&gt;
     * @param accessToken Your app&#39;s access token. (required)
     * @param chapterNumber Which Chapter Number to filter? (required)
     * @param language Language to query. Leave blank for english. (optional)
     * @return VerseSchema
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success: Everything worked as expected. </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad Request: The request was unacceptable due to wrong parameter(s). </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Unauthorized: Invalid access_token used. </td><td>  -  </td></tr>
        <tr><td> 402 </td><td> Request Failed. </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not Found: The chapter number you are looking for could not be found. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Server Error: Something went wrong on our end. </td><td>  -  </td></tr>
     </table>
     */
    public VerseSchema apiV1ChaptersChapterNumberVersesGet(String accessToken, Integer chapterNumber, String language) throws ApiException {
        ApiResponse<VerseSchema> localVarResp = apiV1ChaptersChapterNumberVersesGetWithHttpInfo(accessToken, chapterNumber, language);
        return localVarResp.getData();
    }

    /**
     * Get all the Verses from a Chapter.
     * Get a list of all Verses from a particular Chapter.&lt;br/&gt;
     * @param accessToken Your app&#39;s access token. (required)
     * @param chapterNumber Which Chapter Number to filter? (required)
     * @param language Language to query. Leave blank for english. (optional)
     * @return ApiResponse&lt;VerseSchema&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success: Everything worked as expected. </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad Request: The request was unacceptable due to wrong parameter(s). </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Unauthorized: Invalid access_token used. </td><td>  -  </td></tr>
        <tr><td> 402 </td><td> Request Failed. </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not Found: The chapter number you are looking for could not be found. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Server Error: Something went wrong on our end. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<VerseSchema> apiV1ChaptersChapterNumberVersesGetWithHttpInfo(String accessToken, Integer chapterNumber, String language) throws ApiException {
        okhttp3.Call localVarCall = apiV1ChaptersChapterNumberVersesGetValidateBeforeCall(accessToken, chapterNumber, language, null);
        Type localVarReturnType = new TypeToken<VerseSchema>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Get all the Verses from a Chapter. (asynchronously)
     * Get a list of all Verses from a particular Chapter.&lt;br/&gt;
     * @param accessToken Your app&#39;s access token. (required)
     * @param chapterNumber Which Chapter Number to filter? (required)
     * @param language Language to query. Leave blank for english. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success: Everything worked as expected. </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad Request: The request was unacceptable due to wrong parameter(s). </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Unauthorized: Invalid access_token used. </td><td>  -  </td></tr>
        <tr><td> 402 </td><td> Request Failed. </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not Found: The chapter number you are looking for could not be found. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Server Error: Something went wrong on our end. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call apiV1ChaptersChapterNumberVersesGetAsync(String accessToken, Integer chapterNumber, String language, final ApiCallback<VerseSchema> _callback) throws ApiException {

        okhttp3.Call localVarCall = apiV1ChaptersChapterNumberVersesGetValidateBeforeCall(accessToken, chapterNumber, language, _callback);
        Type localVarReturnType = new TypeToken<VerseSchema>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for apiV1ChaptersChapterNumberVersesVerseNumberGet
     * @param accessToken Your app&#39;s access token. (required)
     * @param chapterNumber Which Chapter Number to filter? (required)
     * @param verseNumber Which Verse Number to filter? (required)
     * @param language Language to query. Leave blank for english. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success: Everything worked as expected. </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad Request: The request was unacceptable due to wrong parameter(s). </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Unauthorized: Invalid access_token used. </td><td>  -  </td></tr>
        <tr><td> 402 </td><td> Request Failed. </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not Found: The chapter/verse number you are looking for could not be found. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Server Error: Something went wrong on our end. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call apiV1ChaptersChapterNumberVersesVerseNumberGetCall(String accessToken, Integer chapterNumber, String verseNumber, String language, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/chapters/{chapter_number}/verses/{verse_number}"
            .replace("{" + "chapter_number" + "}", localVarApiClient.escapeString(chapterNumber.toString()))
            .replace("{" + "verse_number" + "}", localVarApiClient.escapeString(verseNumber.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (accessToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("access_token", accessToken));
        }

        if (language != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("language", language));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call apiV1ChaptersChapterNumberVersesVerseNumberGetValidateBeforeCall(String accessToken, Integer chapterNumber, String verseNumber, String language, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'accessToken' is set
        if (accessToken == null) {
            throw new ApiException("Missing the required parameter 'accessToken' when calling apiV1ChaptersChapterNumberVersesVerseNumberGet(Async)");
        }

        // verify the required parameter 'chapterNumber' is set
        if (chapterNumber == null) {
            throw new ApiException("Missing the required parameter 'chapterNumber' when calling apiV1ChaptersChapterNumberVersesVerseNumberGet(Async)");
        }

        // verify the required parameter 'verseNumber' is set
        if (verseNumber == null) {
            throw new ApiException("Missing the required parameter 'verseNumber' when calling apiV1ChaptersChapterNumberVersesVerseNumberGet(Async)");
        }

        return apiV1ChaptersChapterNumberVersesVerseNumberGetCall(accessToken, chapterNumber, verseNumber, language, _callback);

    }

    /**
     * Get a particular verse from a chapter.
     * Get a specific verse from a specific chapter.&lt;br/&gt;
     * @param accessToken Your app&#39;s access token. (required)
     * @param chapterNumber Which Chapter Number to filter? (required)
     * @param verseNumber Which Verse Number to filter? (required)
     * @param language Language to query. Leave blank for english. (optional)
     * @return VerseSchema
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success: Everything worked as expected. </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad Request: The request was unacceptable due to wrong parameter(s). </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Unauthorized: Invalid access_token used. </td><td>  -  </td></tr>
        <tr><td> 402 </td><td> Request Failed. </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not Found: The chapter/verse number you are looking for could not be found. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Server Error: Something went wrong on our end. </td><td>  -  </td></tr>
     </table>
     */
    public VerseSchema apiV1ChaptersChapterNumberVersesVerseNumberGet(String accessToken, Integer chapterNumber, String verseNumber, String language) throws ApiException {
        ApiResponse<VerseSchema> localVarResp = apiV1ChaptersChapterNumberVersesVerseNumberGetWithHttpInfo(accessToken, chapterNumber, verseNumber, language);
        return localVarResp.getData();
    }

    /**
     * Get a particular verse from a chapter.
     * Get a specific verse from a specific chapter.&lt;br/&gt;
     * @param accessToken Your app&#39;s access token. (required)
     * @param chapterNumber Which Chapter Number to filter? (required)
     * @param verseNumber Which Verse Number to filter? (required)
     * @param language Language to query. Leave blank for english. (optional)
     * @return ApiResponse&lt;VerseSchema&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success: Everything worked as expected. </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad Request: The request was unacceptable due to wrong parameter(s). </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Unauthorized: Invalid access_token used. </td><td>  -  </td></tr>
        <tr><td> 402 </td><td> Request Failed. </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not Found: The chapter/verse number you are looking for could not be found. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Server Error: Something went wrong on our end. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<VerseSchema> apiV1ChaptersChapterNumberVersesVerseNumberGetWithHttpInfo(String accessToken, Integer chapterNumber, String verseNumber, String language) throws ApiException {
        okhttp3.Call localVarCall = apiV1ChaptersChapterNumberVersesVerseNumberGetValidateBeforeCall(accessToken, chapterNumber, verseNumber, language, null);
        Type localVarReturnType = new TypeToken<VerseSchema>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Get a particular verse from a chapter. (asynchronously)
     * Get a specific verse from a specific chapter.&lt;br/&gt;
     * @param accessToken Your app&#39;s access token. (required)
     * @param chapterNumber Which Chapter Number to filter? (required)
     * @param verseNumber Which Verse Number to filter? (required)
     * @param language Language to query. Leave blank for english. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success: Everything worked as expected. </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad Request: The request was unacceptable due to wrong parameter(s). </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Unauthorized: Invalid access_token used. </td><td>  -  </td></tr>
        <tr><td> 402 </td><td> Request Failed. </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not Found: The chapter/verse number you are looking for could not be found. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Server Error: Something went wrong on our end. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call apiV1ChaptersChapterNumberVersesVerseNumberGetAsync(String accessToken, Integer chapterNumber, String verseNumber, String language, final ApiCallback<VerseSchema> _callback) throws ApiException {

        okhttp3.Call localVarCall = apiV1ChaptersChapterNumberVersesVerseNumberGetValidateBeforeCall(accessToken, chapterNumber, verseNumber, language, _callback);
        Type localVarReturnType = new TypeToken<VerseSchema>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for apiV1VersesGet
     * @param accessToken Your app&#39;s access token. (required)
     * @param language Language to query. Leave blank for english. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success: Everything worked as expected. </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad Request: The request was unacceptable due to wrong parameter(s). </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Unauthorized: Inavlid access_token used. </td><td>  -  </td></tr>
        <tr><td> 402 </td><td> Request Failed. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Server Error: Something went wrong on our end. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call apiV1VersesGetCall(String accessToken, String language, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v1/verses";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (accessToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("access_token", accessToken));
        }

        if (language != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("language", language));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call apiV1VersesGetValidateBeforeCall(String accessToken, String language, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'accessToken' is set
        if (accessToken == null) {
            throw new ApiException("Missing the required parameter 'accessToken' when calling apiV1VersesGet(Async)");
        }

        return apiV1VersesGetCall(accessToken, language, _callback);

    }

    /**
     * Get all the Verses.
     * Get a list of all Verses.&lt;br/&gt;
     * @param accessToken Your app&#39;s access token. (required)
     * @param language Language to query. Leave blank for english. (optional)
     * @return VerseSchema
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success: Everything worked as expected. </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad Request: The request was unacceptable due to wrong parameter(s). </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Unauthorized: Inavlid access_token used. </td><td>  -  </td></tr>
        <tr><td> 402 </td><td> Request Failed. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Server Error: Something went wrong on our end. </td><td>  -  </td></tr>
     </table>
     */
    public VerseSchema apiV1VersesGet(String accessToken, String language) throws ApiException {
        ApiResponse<VerseSchema> localVarResp = apiV1VersesGetWithHttpInfo(accessToken, language);
        return localVarResp.getData();
    }

    /**
     * Get all the Verses.
     * Get a list of all Verses.&lt;br/&gt;
     * @param accessToken Your app&#39;s access token. (required)
     * @param language Language to query. Leave blank for english. (optional)
     * @return ApiResponse&lt;VerseSchema&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success: Everything worked as expected. </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad Request: The request was unacceptable due to wrong parameter(s). </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Unauthorized: Inavlid access_token used. </td><td>  -  </td></tr>
        <tr><td> 402 </td><td> Request Failed. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Server Error: Something went wrong on our end. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<VerseSchema> apiV1VersesGetWithHttpInfo(String accessToken, String language) throws ApiException {
        okhttp3.Call localVarCall = apiV1VersesGetValidateBeforeCall(accessToken, language, null);
        Type localVarReturnType = new TypeToken<VerseSchema>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Get all the Verses. (asynchronously)
     * Get a list of all Verses.&lt;br/&gt;
     * @param accessToken Your app&#39;s access token. (required)
     * @param language Language to query. Leave blank for english. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success: Everything worked as expected. </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad Request: The request was unacceptable due to wrong parameter(s). </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Unauthorized: Inavlid access_token used. </td><td>  -  </td></tr>
        <tr><td> 402 </td><td> Request Failed. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Server Error: Something went wrong on our end. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call apiV1VersesGetAsync(String accessToken, String language, final ApiCallback<VerseSchema> _callback) throws ApiException {

        okhttp3.Call localVarCall = apiV1VersesGetValidateBeforeCall(accessToken, language, _callback);
        Type localVarReturnType = new TypeToken<VerseSchema>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
