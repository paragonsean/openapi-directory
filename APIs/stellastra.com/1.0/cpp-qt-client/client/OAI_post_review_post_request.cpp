/**
 * Stellastra
 * Stellastra makes it easy to get reviews for your cybersecurity solution in real-time with its platform-agnostic REST API.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@stellastra.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAI_post_review_post_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAI_post_review_post_request::OAI_post_review_post_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAI_post_review_post_request::OAI_post_review_post_request() {
    this->initializeModel();
}

OAI_post_review_post_request::~OAI_post_review_post_request() {}

void OAI_post_review_post_request::initializeModel() {

    m_rating_isSet = false;
    m_rating_isValid = false;

    m_user_email_isSet = false;
    m_user_email_isValid = false;

    m_user_name_isSet = false;
    m_user_name_isValid = false;
}

void OAI_post_review_post_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAI_post_review_post_request::fromJsonObject(QJsonObject json) {

    m_rating_isValid = ::OpenAPI::fromJsonValue(m_rating, json[QString("rating")]);
    m_rating_isSet = !json[QString("rating")].isNull() && m_rating_isValid;

    m_user_email_isValid = ::OpenAPI::fromJsonValue(m_user_email, json[QString("user_email")]);
    m_user_email_isSet = !json[QString("user_email")].isNull() && m_user_email_isValid;

    m_user_name_isValid = ::OpenAPI::fromJsonValue(m_user_name, json[QString("user_name")]);
    m_user_name_isSet = !json[QString("user_name")].isNull() && m_user_name_isValid;
}

QString OAI_post_review_post_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAI_post_review_post_request::asJsonObject() const {
    QJsonObject obj;
    if (m_rating_isSet) {
        obj.insert(QString("rating"), ::OpenAPI::toJsonValue(m_rating));
    }
    if (m_user_email_isSet) {
        obj.insert(QString("user_email"), ::OpenAPI::toJsonValue(m_user_email));
    }
    if (m_user_name_isSet) {
        obj.insert(QString("user_name"), ::OpenAPI::toJsonValue(m_user_name));
    }
    return obj;
}

qint32 OAI_post_review_post_request::getRating() const {
    return m_rating;
}
void OAI_post_review_post_request::setRating(const qint32 &rating) {
    m_rating = rating;
    m_rating_isSet = true;
}

bool OAI_post_review_post_request::is_rating_Set() const{
    return m_rating_isSet;
}

bool OAI_post_review_post_request::is_rating_Valid() const{
    return m_rating_isValid;
}

QString OAI_post_review_post_request::getUserEmail() const {
    return m_user_email;
}
void OAI_post_review_post_request::setUserEmail(const QString &user_email) {
    m_user_email = user_email;
    m_user_email_isSet = true;
}

bool OAI_post_review_post_request::is_user_email_Set() const{
    return m_user_email_isSet;
}

bool OAI_post_review_post_request::is_user_email_Valid() const{
    return m_user_email_isValid;
}

QString OAI_post_review_post_request::getUserName() const {
    return m_user_name;
}
void OAI_post_review_post_request::setUserName(const QString &user_name) {
    m_user_name = user_name;
    m_user_name_isSet = true;
}

bool OAI_post_review_post_request::is_user_name_Set() const{
    return m_user_name_isSet;
}

bool OAI_post_review_post_request::is_user_name_Valid() const{
    return m_user_name_isValid;
}

bool OAI_post_review_post_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_rating_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_user_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_user_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAI_post_review_post_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_rating_isValid && m_user_email_isValid && true;
}

} // namespace OpenAPI
