/**
 * Stellastra
 * Stellastra makes it easy to get reviews for your cybersecurity solution in real-time with its platform-agnostic REST API.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@stellastra.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import PostReviewPost200Response from '../model/PostReviewPost200Response';
import PostReviewPost400Response from '../model/PostReviewPost400Response';
import PostReviewPost401Response from '../model/PostReviewPost401Response';
import PostReviewPost403Response from '../model/PostReviewPost403Response';
import PostReviewPostRequest from '../model/PostReviewPostRequest';

/**
* Default service.
* @module api/DefaultApi
* @version 1.0
*/
export default class DefaultApi {

    /**
    * Constructs a new DefaultApi. 
    * @alias module:api/DefaultApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the postReviewPost operation.
     * @callback module:api/DefaultApi~postReviewPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PostReviewPost200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Posts the user's review to Stellastra
     * @param {String} userEmail User's email to which the review verification will be sent. 
     * @param {module:model/Number} rating The user's star rating, must be a single integer from [1, 2, 3, 4, 5]
     * @param {module:model/PostReviewPostRequest} postReviewPostRequest The request body requires the user_email and rating. The parameter use_name is optional. 
     * @param {Object} opts Optional parameters
     * @param {String} [userName] The user's name, defaults to empty string \"\".  Thus, if this is omitted, the email to the user will not use the user's name. 
     * @param {module:api/DefaultApi~postReviewPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PostReviewPost200Response}
     */
    postReviewPost(userEmail, rating, postReviewPostRequest, opts, callback) {
      opts = opts || {};
      let postBody = postReviewPostRequest;
      // verify the required parameter 'userEmail' is set
      if (userEmail === undefined || userEmail === null) {
        throw new Error("Missing the required parameter 'userEmail' when calling postReviewPost");
      }
      // verify the required parameter 'rating' is set
      if (rating === undefined || rating === null) {
        throw new Error("Missing the required parameter 'rating' when calling postReviewPost");
      }
      // verify the required parameter 'postReviewPostRequest' is set
      if (postReviewPostRequest === undefined || postReviewPostRequest === null) {
        throw new Error("Missing the required parameter 'postReviewPostRequest' when calling postReviewPost");
      }

      let pathParams = {
      };
      let queryParams = {
        'user_email': userEmail,
        'user_name': opts['userName'],
        'rating': rating
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['BasicAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = PostReviewPost200Response;
      return this.apiClient.callApi(
        '/post-review', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
