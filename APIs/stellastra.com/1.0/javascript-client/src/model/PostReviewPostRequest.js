/**
 * Stellastra
 * Stellastra makes it easy to get reviews for your cybersecurity solution in real-time with its platform-agnostic REST API.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@stellastra.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PostReviewPostRequest model module.
 * @module model/PostReviewPostRequest
 * @version 1.0
 */
class PostReviewPostRequest {
    /**
     * Constructs a new <code>PostReviewPostRequest</code>.
     * The user_email must use a professional domain, free domains are not supported. 
     * @alias module:model/PostReviewPostRequest
     * @param rating {Number} 
     * @param userEmail {String} 
     */
    constructor(rating, userEmail) { 
        
        PostReviewPostRequest.initialize(this, rating, userEmail);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, rating, userEmail) { 
        obj['rating'] = rating;
        obj['user_email'] = userEmail;
    }

    /**
     * Constructs a <code>PostReviewPostRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PostReviewPostRequest} obj Optional instance to populate.
     * @return {module:model/PostReviewPostRequest} The populated <code>PostReviewPostRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PostReviewPostRequest();

            if (data.hasOwnProperty('rating')) {
                obj['rating'] = ApiClient.convertToType(data['rating'], 'Number');
            }
            if (data.hasOwnProperty('user_email')) {
                obj['user_email'] = ApiClient.convertToType(data['user_email'], 'String');
            }
            if (data.hasOwnProperty('user_name')) {
                obj['user_name'] = ApiClient.convertToType(data['user_name'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PostReviewPostRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PostReviewPostRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PostReviewPostRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['user_email'] && !(typeof data['user_email'] === 'string' || data['user_email'] instanceof String)) {
            throw new Error("Expected the field `user_email` to be a primitive type in the JSON string but got " + data['user_email']);
        }
        // ensure the json data is a string
        if (data['user_name'] && !(typeof data['user_name'] === 'string' || data['user_name'] instanceof String)) {
            throw new Error("Expected the field `user_name` to be a primitive type in the JSON string but got " + data['user_name']);
        }

        return true;
    }


}

PostReviewPostRequest.RequiredProperties = ["rating", "user_email"];

/**
 * @member {Number} rating
 */
PostReviewPostRequest.prototype['rating'] = undefined;

/**
 * @member {String} user_email
 */
PostReviewPostRequest.prototype['user_email'] = undefined;

/**
 * @member {String} user_name
 */
PostReviewPostRequest.prototype['user_name'] = undefined;






export default PostReviewPostRequest;

