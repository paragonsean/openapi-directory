# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ListDescription(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, color_count: int=None, description: str=None, key: str=None, license: str=None, source: str=None, title: str=None, url: str=None):
        """ListDescription - a model defined in OpenAPI

        :param color_count: The color_count of this ListDescription.
        :param description: The description of this ListDescription.
        :param key: The key of this ListDescription.
        :param license: The license of this ListDescription.
        :param source: The source of this ListDescription.
        :param title: The title of this ListDescription.
        :param url: The url of this ListDescription.
        """
        self.openapi_types = {
            'color_count': int,
            'description': str,
            'key': str,
            'license': str,
            'source': str,
            'title': str,
            'url': str
        }

        self.attribute_map = {
            'color_count': 'colorCount',
            'description': 'description',
            'key': 'key',
            'license': 'license',
            'source': 'source',
            'title': 'title',
            'url': 'url'
        }

        self._color_count = color_count
        self._description = description
        self._key = key
        self._license = license
        self._source = source
        self._title = title
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListDescription':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The listDescription of this ListDescription.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def color_count(self):
        """Gets the color_count of this ListDescription.


        :return: The color_count of this ListDescription.
        :rtype: int
        """
        return self._color_count

    @color_count.setter
    def color_count(self, color_count):
        """Sets the color_count of this ListDescription.


        :param color_count: The color_count of this ListDescription.
        :type color_count: int
        """

        self._color_count = color_count

    @property
    def description(self):
        """Gets the description of this ListDescription.


        :return: The description of this ListDescription.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this ListDescription.


        :param description: The description of this ListDescription.
        :type description: str
        """

        self._description = description

    @property
    def key(self):
        """Gets the key of this ListDescription.


        :return: The key of this ListDescription.
        :rtype: str
        """
        return self._key

    @key.setter
    def key(self, key):
        """Sets the key of this ListDescription.


        :param key: The key of this ListDescription.
        :type key: str
        """

        self._key = key

    @property
    def license(self):
        """Gets the license of this ListDescription.


        :return: The license of this ListDescription.
        :rtype: str
        """
        return self._license

    @license.setter
    def license(self, license):
        """Sets the license of this ListDescription.


        :param license: The license of this ListDescription.
        :type license: str
        """

        self._license = license

    @property
    def source(self):
        """Gets the source of this ListDescription.


        :return: The source of this ListDescription.
        :rtype: str
        """
        return self._source

    @source.setter
    def source(self, source):
        """Sets the source of this ListDescription.


        :param source: The source of this ListDescription.
        :type source: str
        """

        self._source = source

    @property
    def title(self):
        """Gets the title of this ListDescription.


        :return: The title of this ListDescription.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this ListDescription.


        :param title: The title of this ListDescription.
        :type title: str
        """

        self._title = title

    @property
    def url(self):
        """Gets the url of this ListDescription.


        :return: The url of this ListDescription.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this ListDescription.


        :param url: The url of this ListDescription.
        :type url: str
        """

        self._url = url
