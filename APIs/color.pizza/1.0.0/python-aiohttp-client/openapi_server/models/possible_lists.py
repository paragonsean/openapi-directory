# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PossibleLists(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    DEFAULT = 'default'
    BESTOF = 'bestOf'
    WIKIPEDIA = 'wikipedia'
    FRENCH = 'french'
    RIDGWAY = 'ridgway'
    RISOGRAPH = 'risograph'
    BASIC = 'basic'
    CHINESETRADITIONAL = 'chineseTraditional'
    HTML = 'html'
    JAPANESETRADITIONAL = 'japaneseTraditional'
    LECORBUSIER = 'leCorbusier'
    NBSISCC = 'nbsIscc'
    NTC = 'ntc'
    OSXCRAYONS = 'osxcrayons'
    RAL = 'ral'
    SANZOWADAI = 'sanzoWadaI'
    THESAURUS = 'thesaurus'
    WERNER = 'werner'
    WINDOWS = 'windows'
    X11 = 'x11'
    XKCD = 'xkcd'

    def __init__(self):
        """PossibleLists - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PossibleLists':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The possibleLists of this PossibleLists.
        """
        return util.deserialize_model(dikt, cls)
