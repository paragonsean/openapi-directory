# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ColorBaseSwatchImg(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, svg: str=None, svg_named: str=None):
        """ColorBaseSwatchImg - a model defined in OpenAPI

        :param svg: The svg of this ColorBaseSwatchImg.
        :param svg_named: The svg_named of this ColorBaseSwatchImg.
        """
        self.openapi_types = {
            'svg': str,
            'svg_named': str
        }

        self.attribute_map = {
            'svg': 'svg',
            'svg_named': 'svgNamed'
        }

        self._svg = svg
        self._svg_named = svg_named

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ColorBaseSwatchImg':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The colorBase_swatchImg of this ColorBaseSwatchImg.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def svg(self):
        """Gets the svg of this ColorBaseSwatchImg.


        :return: The svg of this ColorBaseSwatchImg.
        :rtype: str
        """
        return self._svg

    @svg.setter
    def svg(self, svg):
        """Sets the svg of this ColorBaseSwatchImg.


        :param svg: The svg of this ColorBaseSwatchImg.
        :type svg: str
        """

        self._svg = svg

    @property
    def svg_named(self):
        """Gets the svg_named of this ColorBaseSwatchImg.


        :return: The svg_named of this ColorBaseSwatchImg.
        :rtype: str
        """
        return self._svg_named

    @svg_named.setter
    def svg_named(self, svg_named):
        """Sets the svg_named of this ColorBaseSwatchImg.


        :param svg_named: The svg_named of this ColorBaseSwatchImg.
        :type svg_named: str
        """

        self._svg_named = svg_named
