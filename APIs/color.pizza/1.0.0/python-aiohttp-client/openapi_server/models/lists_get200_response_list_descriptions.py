# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.list_description import ListDescription
from openapi_server import util


class ListsGet200ResponseListDescriptions(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, basic: ListDescription=None, best_of: ListDescription=None, chinese_traditional: ListDescription=None, default: ListDescription=None, french: ListDescription=None, html: ListDescription=None, japanese_traditional: ListDescription=None, le_corbusier: ListDescription=None, nbs_iscc: ListDescription=None, ntc: ListDescription=None, osxcrayons: ListDescription=None, ral: ListDescription=None, ridgway: ListDescription=None, risograph: ListDescription=None, sanzo_wada_i: ListDescription=None, thesaurus: ListDescription=None, werner: ListDescription=None, wikipedia: ListDescription=None, windows: ListDescription=None, x11: ListDescription=None, xkcd: ListDescription=None):
        """ListsGet200ResponseListDescriptions - a model defined in OpenAPI

        :param basic: The basic of this ListsGet200ResponseListDescriptions.
        :param best_of: The best_of of this ListsGet200ResponseListDescriptions.
        :param chinese_traditional: The chinese_traditional of this ListsGet200ResponseListDescriptions.
        :param default: The default of this ListsGet200ResponseListDescriptions.
        :param french: The french of this ListsGet200ResponseListDescriptions.
        :param html: The html of this ListsGet200ResponseListDescriptions.
        :param japanese_traditional: The japanese_traditional of this ListsGet200ResponseListDescriptions.
        :param le_corbusier: The le_corbusier of this ListsGet200ResponseListDescriptions.
        :param nbs_iscc: The nbs_iscc of this ListsGet200ResponseListDescriptions.
        :param ntc: The ntc of this ListsGet200ResponseListDescriptions.
        :param osxcrayons: The osxcrayons of this ListsGet200ResponseListDescriptions.
        :param ral: The ral of this ListsGet200ResponseListDescriptions.
        :param ridgway: The ridgway of this ListsGet200ResponseListDescriptions.
        :param risograph: The risograph of this ListsGet200ResponseListDescriptions.
        :param sanzo_wada_i: The sanzo_wada_i of this ListsGet200ResponseListDescriptions.
        :param thesaurus: The thesaurus of this ListsGet200ResponseListDescriptions.
        :param werner: The werner of this ListsGet200ResponseListDescriptions.
        :param wikipedia: The wikipedia of this ListsGet200ResponseListDescriptions.
        :param windows: The windows of this ListsGet200ResponseListDescriptions.
        :param x11: The x11 of this ListsGet200ResponseListDescriptions.
        :param xkcd: The xkcd of this ListsGet200ResponseListDescriptions.
        """
        self.openapi_types = {
            'basic': ListDescription,
            'best_of': ListDescription,
            'chinese_traditional': ListDescription,
            'default': ListDescription,
            'french': ListDescription,
            'html': ListDescription,
            'japanese_traditional': ListDescription,
            'le_corbusier': ListDescription,
            'nbs_iscc': ListDescription,
            'ntc': ListDescription,
            'osxcrayons': ListDescription,
            'ral': ListDescription,
            'ridgway': ListDescription,
            'risograph': ListDescription,
            'sanzo_wada_i': ListDescription,
            'thesaurus': ListDescription,
            'werner': ListDescription,
            'wikipedia': ListDescription,
            'windows': ListDescription,
            'x11': ListDescription,
            'xkcd': ListDescription
        }

        self.attribute_map = {
            'basic': 'basic',
            'best_of': 'bestOf',
            'chinese_traditional': 'chineseTraditional',
            'default': 'default',
            'french': 'french',
            'html': 'html',
            'japanese_traditional': 'japaneseTraditional',
            'le_corbusier': 'leCorbusier',
            'nbs_iscc': 'nbsIscc',
            'ntc': 'ntc',
            'osxcrayons': 'osxcrayons',
            'ral': 'ral',
            'ridgway': 'ridgway',
            'risograph': 'risograph',
            'sanzo_wada_i': 'sanzoWadaI',
            'thesaurus': 'thesaurus',
            'werner': 'werner',
            'wikipedia': 'wikipedia',
            'windows': 'windows',
            'x11': 'x11',
            'xkcd': 'xkcd'
        }

        self._basic = basic
        self._best_of = best_of
        self._chinese_traditional = chinese_traditional
        self._default = default
        self._french = french
        self._html = html
        self._japanese_traditional = japanese_traditional
        self._le_corbusier = le_corbusier
        self._nbs_iscc = nbs_iscc
        self._ntc = ntc
        self._osxcrayons = osxcrayons
        self._ral = ral
        self._ridgway = ridgway
        self._risograph = risograph
        self._sanzo_wada_i = sanzo_wada_i
        self._thesaurus = thesaurus
        self._werner = werner
        self._wikipedia = wikipedia
        self._windows = windows
        self._x11 = x11
        self._xkcd = xkcd

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListsGet200ResponseListDescriptions':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The _lists__get_200_response_listDescriptions of this ListsGet200ResponseListDescriptions.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def basic(self):
        """Gets the basic of this ListsGet200ResponseListDescriptions.


        :return: The basic of this ListsGet200ResponseListDescriptions.
        :rtype: ListDescription
        """
        return self._basic

    @basic.setter
    def basic(self, basic):
        """Sets the basic of this ListsGet200ResponseListDescriptions.


        :param basic: The basic of this ListsGet200ResponseListDescriptions.
        :type basic: ListDescription
        """

        self._basic = basic

    @property
    def best_of(self):
        """Gets the best_of of this ListsGet200ResponseListDescriptions.


        :return: The best_of of this ListsGet200ResponseListDescriptions.
        :rtype: ListDescription
        """
        return self._best_of

    @best_of.setter
    def best_of(self, best_of):
        """Sets the best_of of this ListsGet200ResponseListDescriptions.


        :param best_of: The best_of of this ListsGet200ResponseListDescriptions.
        :type best_of: ListDescription
        """

        self._best_of = best_of

    @property
    def chinese_traditional(self):
        """Gets the chinese_traditional of this ListsGet200ResponseListDescriptions.


        :return: The chinese_traditional of this ListsGet200ResponseListDescriptions.
        :rtype: ListDescription
        """
        return self._chinese_traditional

    @chinese_traditional.setter
    def chinese_traditional(self, chinese_traditional):
        """Sets the chinese_traditional of this ListsGet200ResponseListDescriptions.


        :param chinese_traditional: The chinese_traditional of this ListsGet200ResponseListDescriptions.
        :type chinese_traditional: ListDescription
        """

        self._chinese_traditional = chinese_traditional

    @property
    def default(self):
        """Gets the default of this ListsGet200ResponseListDescriptions.


        :return: The default of this ListsGet200ResponseListDescriptions.
        :rtype: ListDescription
        """
        return self._default

    @default.setter
    def default(self, default):
        """Sets the default of this ListsGet200ResponseListDescriptions.


        :param default: The default of this ListsGet200ResponseListDescriptions.
        :type default: ListDescription
        """

        self._default = default

    @property
    def french(self):
        """Gets the french of this ListsGet200ResponseListDescriptions.


        :return: The french of this ListsGet200ResponseListDescriptions.
        :rtype: ListDescription
        """
        return self._french

    @french.setter
    def french(self, french):
        """Sets the french of this ListsGet200ResponseListDescriptions.


        :param french: The french of this ListsGet200ResponseListDescriptions.
        :type french: ListDescription
        """

        self._french = french

    @property
    def html(self):
        """Gets the html of this ListsGet200ResponseListDescriptions.


        :return: The html of this ListsGet200ResponseListDescriptions.
        :rtype: ListDescription
        """
        return self._html

    @html.setter
    def html(self, html):
        """Sets the html of this ListsGet200ResponseListDescriptions.


        :param html: The html of this ListsGet200ResponseListDescriptions.
        :type html: ListDescription
        """

        self._html = html

    @property
    def japanese_traditional(self):
        """Gets the japanese_traditional of this ListsGet200ResponseListDescriptions.


        :return: The japanese_traditional of this ListsGet200ResponseListDescriptions.
        :rtype: ListDescription
        """
        return self._japanese_traditional

    @japanese_traditional.setter
    def japanese_traditional(self, japanese_traditional):
        """Sets the japanese_traditional of this ListsGet200ResponseListDescriptions.


        :param japanese_traditional: The japanese_traditional of this ListsGet200ResponseListDescriptions.
        :type japanese_traditional: ListDescription
        """

        self._japanese_traditional = japanese_traditional

    @property
    def le_corbusier(self):
        """Gets the le_corbusier of this ListsGet200ResponseListDescriptions.


        :return: The le_corbusier of this ListsGet200ResponseListDescriptions.
        :rtype: ListDescription
        """
        return self._le_corbusier

    @le_corbusier.setter
    def le_corbusier(self, le_corbusier):
        """Sets the le_corbusier of this ListsGet200ResponseListDescriptions.


        :param le_corbusier: The le_corbusier of this ListsGet200ResponseListDescriptions.
        :type le_corbusier: ListDescription
        """

        self._le_corbusier = le_corbusier

    @property
    def nbs_iscc(self):
        """Gets the nbs_iscc of this ListsGet200ResponseListDescriptions.


        :return: The nbs_iscc of this ListsGet200ResponseListDescriptions.
        :rtype: ListDescription
        """
        return self._nbs_iscc

    @nbs_iscc.setter
    def nbs_iscc(self, nbs_iscc):
        """Sets the nbs_iscc of this ListsGet200ResponseListDescriptions.


        :param nbs_iscc: The nbs_iscc of this ListsGet200ResponseListDescriptions.
        :type nbs_iscc: ListDescription
        """

        self._nbs_iscc = nbs_iscc

    @property
    def ntc(self):
        """Gets the ntc of this ListsGet200ResponseListDescriptions.


        :return: The ntc of this ListsGet200ResponseListDescriptions.
        :rtype: ListDescription
        """
        return self._ntc

    @ntc.setter
    def ntc(self, ntc):
        """Sets the ntc of this ListsGet200ResponseListDescriptions.


        :param ntc: The ntc of this ListsGet200ResponseListDescriptions.
        :type ntc: ListDescription
        """

        self._ntc = ntc

    @property
    def osxcrayons(self):
        """Gets the osxcrayons of this ListsGet200ResponseListDescriptions.


        :return: The osxcrayons of this ListsGet200ResponseListDescriptions.
        :rtype: ListDescription
        """
        return self._osxcrayons

    @osxcrayons.setter
    def osxcrayons(self, osxcrayons):
        """Sets the osxcrayons of this ListsGet200ResponseListDescriptions.


        :param osxcrayons: The osxcrayons of this ListsGet200ResponseListDescriptions.
        :type osxcrayons: ListDescription
        """

        self._osxcrayons = osxcrayons

    @property
    def ral(self):
        """Gets the ral of this ListsGet200ResponseListDescriptions.


        :return: The ral of this ListsGet200ResponseListDescriptions.
        :rtype: ListDescription
        """
        return self._ral

    @ral.setter
    def ral(self, ral):
        """Sets the ral of this ListsGet200ResponseListDescriptions.


        :param ral: The ral of this ListsGet200ResponseListDescriptions.
        :type ral: ListDescription
        """

        self._ral = ral

    @property
    def ridgway(self):
        """Gets the ridgway of this ListsGet200ResponseListDescriptions.


        :return: The ridgway of this ListsGet200ResponseListDescriptions.
        :rtype: ListDescription
        """
        return self._ridgway

    @ridgway.setter
    def ridgway(self, ridgway):
        """Sets the ridgway of this ListsGet200ResponseListDescriptions.


        :param ridgway: The ridgway of this ListsGet200ResponseListDescriptions.
        :type ridgway: ListDescription
        """

        self._ridgway = ridgway

    @property
    def risograph(self):
        """Gets the risograph of this ListsGet200ResponseListDescriptions.


        :return: The risograph of this ListsGet200ResponseListDescriptions.
        :rtype: ListDescription
        """
        return self._risograph

    @risograph.setter
    def risograph(self, risograph):
        """Sets the risograph of this ListsGet200ResponseListDescriptions.


        :param risograph: The risograph of this ListsGet200ResponseListDescriptions.
        :type risograph: ListDescription
        """

        self._risograph = risograph

    @property
    def sanzo_wada_i(self):
        """Gets the sanzo_wada_i of this ListsGet200ResponseListDescriptions.


        :return: The sanzo_wada_i of this ListsGet200ResponseListDescriptions.
        :rtype: ListDescription
        """
        return self._sanzo_wada_i

    @sanzo_wada_i.setter
    def sanzo_wada_i(self, sanzo_wada_i):
        """Sets the sanzo_wada_i of this ListsGet200ResponseListDescriptions.


        :param sanzo_wada_i: The sanzo_wada_i of this ListsGet200ResponseListDescriptions.
        :type sanzo_wada_i: ListDescription
        """

        self._sanzo_wada_i = sanzo_wada_i

    @property
    def thesaurus(self):
        """Gets the thesaurus of this ListsGet200ResponseListDescriptions.


        :return: The thesaurus of this ListsGet200ResponseListDescriptions.
        :rtype: ListDescription
        """
        return self._thesaurus

    @thesaurus.setter
    def thesaurus(self, thesaurus):
        """Sets the thesaurus of this ListsGet200ResponseListDescriptions.


        :param thesaurus: The thesaurus of this ListsGet200ResponseListDescriptions.
        :type thesaurus: ListDescription
        """

        self._thesaurus = thesaurus

    @property
    def werner(self):
        """Gets the werner of this ListsGet200ResponseListDescriptions.


        :return: The werner of this ListsGet200ResponseListDescriptions.
        :rtype: ListDescription
        """
        return self._werner

    @werner.setter
    def werner(self, werner):
        """Sets the werner of this ListsGet200ResponseListDescriptions.


        :param werner: The werner of this ListsGet200ResponseListDescriptions.
        :type werner: ListDescription
        """

        self._werner = werner

    @property
    def wikipedia(self):
        """Gets the wikipedia of this ListsGet200ResponseListDescriptions.


        :return: The wikipedia of this ListsGet200ResponseListDescriptions.
        :rtype: ListDescription
        """
        return self._wikipedia

    @wikipedia.setter
    def wikipedia(self, wikipedia):
        """Sets the wikipedia of this ListsGet200ResponseListDescriptions.


        :param wikipedia: The wikipedia of this ListsGet200ResponseListDescriptions.
        :type wikipedia: ListDescription
        """

        self._wikipedia = wikipedia

    @property
    def windows(self):
        """Gets the windows of this ListsGet200ResponseListDescriptions.


        :return: The windows of this ListsGet200ResponseListDescriptions.
        :rtype: ListDescription
        """
        return self._windows

    @windows.setter
    def windows(self, windows):
        """Sets the windows of this ListsGet200ResponseListDescriptions.


        :param windows: The windows of this ListsGet200ResponseListDescriptions.
        :type windows: ListDescription
        """

        self._windows = windows

    @property
    def x11(self):
        """Gets the x11 of this ListsGet200ResponseListDescriptions.


        :return: The x11 of this ListsGet200ResponseListDescriptions.
        :rtype: ListDescription
        """
        return self._x11

    @x11.setter
    def x11(self, x11):
        """Sets the x11 of this ListsGet200ResponseListDescriptions.


        :param x11: The x11 of this ListsGet200ResponseListDescriptions.
        :type x11: ListDescription
        """

        self._x11 = x11

    @property
    def xkcd(self):
        """Gets the xkcd of this ListsGet200ResponseListDescriptions.


        :return: The xkcd of this ListsGet200ResponseListDescriptions.
        :rtype: ListDescription
        """
        return self._xkcd

    @xkcd.setter
    def xkcd(self, xkcd):
        """Sets the xkcd of this ListsGet200ResponseListDescriptions.


        :param xkcd: The xkcd of this ListsGet200ResponseListDescriptions.
        :type xkcd: ListDescription
        """

        self._xkcd = xkcd
