/**
 * Color Name API
 * An API that provides names for colors based on their hex value
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: color-name-api@elastiq.click
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIColor_rgb.h
 *
 * 
 */

#ifndef OAIColor_rgb_H
#define OAIColor_rgb_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIColor_rgb : public OAIObject {
public:
    OAIColor_rgb();
    OAIColor_rgb(QString json);
    ~OAIColor_rgb() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getB() const;
    void setB(const qint32 &b);
    bool is_b_Set() const;
    bool is_b_Valid() const;

    qint32 getG() const;
    void setG(const qint32 &g);
    bool is_g_Set() const;
    bool is_g_Valid() const;

    qint32 getR() const;
    void setR(const qint32 &r);
    bool is_r_Set() const;
    bool is_r_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_b;
    bool m_b_isSet;
    bool m_b_isValid;

    qint32 m_g;
    bool m_g_isSet;
    bool m_g_isValid;

    qint32 m_r;
    bool m_r_isSet;
    bool m_r_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIColor_rgb)

#endif // OAIColor_rgb_H
