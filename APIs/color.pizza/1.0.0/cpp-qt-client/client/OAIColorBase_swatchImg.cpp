/**
 * Color Name API
 * An API that provides names for colors based on their hex value
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: color-name-api@elastiq.click
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIColorBase_swatchImg.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIColorBase_swatchImg::OAIColorBase_swatchImg(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIColorBase_swatchImg::OAIColorBase_swatchImg() {
    this->initializeModel();
}

OAIColorBase_swatchImg::~OAIColorBase_swatchImg() {}

void OAIColorBase_swatchImg::initializeModel() {

    m_svg_isSet = false;
    m_svg_isValid = false;

    m_svg_named_isSet = false;
    m_svg_named_isValid = false;
}

void OAIColorBase_swatchImg::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIColorBase_swatchImg::fromJsonObject(QJsonObject json) {

    m_svg_isValid = ::OpenAPI::fromJsonValue(m_svg, json[QString("svg")]);
    m_svg_isSet = !json[QString("svg")].isNull() && m_svg_isValid;

    m_svg_named_isValid = ::OpenAPI::fromJsonValue(m_svg_named, json[QString("svgNamed")]);
    m_svg_named_isSet = !json[QString("svgNamed")].isNull() && m_svg_named_isValid;
}

QString OAIColorBase_swatchImg::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIColorBase_swatchImg::asJsonObject() const {
    QJsonObject obj;
    if (m_svg_isSet) {
        obj.insert(QString("svg"), ::OpenAPI::toJsonValue(m_svg));
    }
    if (m_svg_named_isSet) {
        obj.insert(QString("svgNamed"), ::OpenAPI::toJsonValue(m_svg_named));
    }
    return obj;
}

QString OAIColorBase_swatchImg::getSvg() const {
    return m_svg;
}
void OAIColorBase_swatchImg::setSvg(const QString &svg) {
    m_svg = svg;
    m_svg_isSet = true;
}

bool OAIColorBase_swatchImg::is_svg_Set() const{
    return m_svg_isSet;
}

bool OAIColorBase_swatchImg::is_svg_Valid() const{
    return m_svg_isValid;
}

QString OAIColorBase_swatchImg::getSvgNamed() const {
    return m_svg_named;
}
void OAIColorBase_swatchImg::setSvgNamed(const QString &svg_named) {
    m_svg_named = svg_named;
    m_svg_named_isSet = true;
}

bool OAIColorBase_swatchImg::is_svg_named_Set() const{
    return m_svg_named_isSet;
}

bool OAIColorBase_swatchImg::is_svg_named_Valid() const{
    return m_svg_named_isValid;
}

bool OAIColorBase_swatchImg::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_svg_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_svg_named_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIColorBase_swatchImg::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
