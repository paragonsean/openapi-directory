/**
 * Color Name API
 * An API that provides names for colors based on their hex value
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: color-name-api@elastiq.click
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIColor_hsl.h
 *
 * 
 */

#ifndef OAIColor_hsl_H
#define OAIColor_hsl_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIColor_hsl : public OAIObject {
public:
    OAIColor_hsl();
    OAIColor_hsl(QString json);
    ~OAIColor_hsl() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getH() const;
    void setH(const double &h);
    bool is_h_Set() const;
    bool is_h_Valid() const;

    double getL() const;
    void setL(const double &l);
    bool is_l_Set() const;
    bool is_l_Valid() const;

    double getS() const;
    void setS(const double &s);
    bool is_s_Set() const;
    bool is_s_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_h;
    bool m_h_isSet;
    bool m_h_isValid;

    double m_l;
    bool m_l_isSet;
    bool m_l_isValid;

    double m_s;
    bool m_s_isSet;
    bool m_s_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIColor_hsl)

#endif // OAIColor_hsl_H
