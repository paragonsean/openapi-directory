/**
 * Color Name API
 * An API that provides names for colors based on their hex value
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: color-name-api@elastiq.click
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAI_lists__get_200_response_listDescriptions.h
 *
 * 
 */

#ifndef OAI_lists__get_200_response_listDescriptions_H
#define OAI_lists__get_200_response_listDescriptions_H

#include <QJsonObject>

#include "OAIListDescription.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIListDescription;

class OAI_lists__get_200_response_listDescriptions : public OAIObject {
public:
    OAI_lists__get_200_response_listDescriptions();
    OAI_lists__get_200_response_listDescriptions(QString json);
    ~OAI_lists__get_200_response_listDescriptions() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIListDescription getBasic() const;
    void setBasic(const OAIListDescription &basic);
    bool is_basic_Set() const;
    bool is_basic_Valid() const;

    OAIListDescription getBestOf() const;
    void setBestOf(const OAIListDescription &best_of);
    bool is_best_of_Set() const;
    bool is_best_of_Valid() const;

    OAIListDescription getChineseTraditional() const;
    void setChineseTraditional(const OAIListDescription &chinese_traditional);
    bool is_chinese_traditional_Set() const;
    bool is_chinese_traditional_Valid() const;

    OAIListDescription getRDefault() const;
    void setRDefault(const OAIListDescription &r_default);
    bool is_r_default_Set() const;
    bool is_r_default_Valid() const;

    OAIListDescription getFrench() const;
    void setFrench(const OAIListDescription &french);
    bool is_french_Set() const;
    bool is_french_Valid() const;

    OAIListDescription getHtml() const;
    void setHtml(const OAIListDescription &html);
    bool is_html_Set() const;
    bool is_html_Valid() const;

    OAIListDescription getJapaneseTraditional() const;
    void setJapaneseTraditional(const OAIListDescription &japanese_traditional);
    bool is_japanese_traditional_Set() const;
    bool is_japanese_traditional_Valid() const;

    OAIListDescription getLeCorbusier() const;
    void setLeCorbusier(const OAIListDescription &le_corbusier);
    bool is_le_corbusier_Set() const;
    bool is_le_corbusier_Valid() const;

    OAIListDescription getNbsIscc() const;
    void setNbsIscc(const OAIListDescription &nbs_iscc);
    bool is_nbs_iscc_Set() const;
    bool is_nbs_iscc_Valid() const;

    OAIListDescription getNtc() const;
    void setNtc(const OAIListDescription &ntc);
    bool is_ntc_Set() const;
    bool is_ntc_Valid() const;

    OAIListDescription getOsxcrayons() const;
    void setOsxcrayons(const OAIListDescription &osxcrayons);
    bool is_osxcrayons_Set() const;
    bool is_osxcrayons_Valid() const;

    OAIListDescription getRal() const;
    void setRal(const OAIListDescription &ral);
    bool is_ral_Set() const;
    bool is_ral_Valid() const;

    OAIListDescription getRidgway() const;
    void setRidgway(const OAIListDescription &ridgway);
    bool is_ridgway_Set() const;
    bool is_ridgway_Valid() const;

    OAIListDescription getRisograph() const;
    void setRisograph(const OAIListDescription &risograph);
    bool is_risograph_Set() const;
    bool is_risograph_Valid() const;

    OAIListDescription getSanzoWadaI() const;
    void setSanzoWadaI(const OAIListDescription &sanzo_wada_i);
    bool is_sanzo_wada_i_Set() const;
    bool is_sanzo_wada_i_Valid() const;

    OAIListDescription getThesaurus() const;
    void setThesaurus(const OAIListDescription &thesaurus);
    bool is_thesaurus_Set() const;
    bool is_thesaurus_Valid() const;

    OAIListDescription getWerner() const;
    void setWerner(const OAIListDescription &werner);
    bool is_werner_Set() const;
    bool is_werner_Valid() const;

    OAIListDescription getWikipedia() const;
    void setWikipedia(const OAIListDescription &wikipedia);
    bool is_wikipedia_Set() const;
    bool is_wikipedia_Valid() const;

    OAIListDescription getWindows() const;
    void setWindows(const OAIListDescription &windows);
    bool is_windows_Set() const;
    bool is_windows_Valid() const;

    OAIListDescription getX11() const;
    void setX11(const OAIListDescription &x11);
    bool is_x11_Set() const;
    bool is_x11_Valid() const;

    OAIListDescription getXkcd() const;
    void setXkcd(const OAIListDescription &xkcd);
    bool is_xkcd_Set() const;
    bool is_xkcd_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIListDescription m_basic;
    bool m_basic_isSet;
    bool m_basic_isValid;

    OAIListDescription m_best_of;
    bool m_best_of_isSet;
    bool m_best_of_isValid;

    OAIListDescription m_chinese_traditional;
    bool m_chinese_traditional_isSet;
    bool m_chinese_traditional_isValid;

    OAIListDescription m_r_default;
    bool m_r_default_isSet;
    bool m_r_default_isValid;

    OAIListDescription m_french;
    bool m_french_isSet;
    bool m_french_isValid;

    OAIListDescription m_html;
    bool m_html_isSet;
    bool m_html_isValid;

    OAIListDescription m_japanese_traditional;
    bool m_japanese_traditional_isSet;
    bool m_japanese_traditional_isValid;

    OAIListDescription m_le_corbusier;
    bool m_le_corbusier_isSet;
    bool m_le_corbusier_isValid;

    OAIListDescription m_nbs_iscc;
    bool m_nbs_iscc_isSet;
    bool m_nbs_iscc_isValid;

    OAIListDescription m_ntc;
    bool m_ntc_isSet;
    bool m_ntc_isValid;

    OAIListDescription m_osxcrayons;
    bool m_osxcrayons_isSet;
    bool m_osxcrayons_isValid;

    OAIListDescription m_ral;
    bool m_ral_isSet;
    bool m_ral_isValid;

    OAIListDescription m_ridgway;
    bool m_ridgway_isSet;
    bool m_ridgway_isValid;

    OAIListDescription m_risograph;
    bool m_risograph_isSet;
    bool m_risograph_isValid;

    OAIListDescription m_sanzo_wada_i;
    bool m_sanzo_wada_i_isSet;
    bool m_sanzo_wada_i_isValid;

    OAIListDescription m_thesaurus;
    bool m_thesaurus_isSet;
    bool m_thesaurus_isValid;

    OAIListDescription m_werner;
    bool m_werner_isSet;
    bool m_werner_isValid;

    OAIListDescription m_wikipedia;
    bool m_wikipedia_isSet;
    bool m_wikipedia_isValid;

    OAIListDescription m_windows;
    bool m_windows_isSet;
    bool m_windows_isValid;

    OAIListDescription m_x11;
    bool m_x11_isSet;
    bool m_x11_isValid;

    OAIListDescription m_xkcd;
    bool m_xkcd_isSet;
    bool m_xkcd_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAI_lists__get_200_response_listDescriptions)

#endif // OAI_lists__get_200_response_listDescriptions_H
