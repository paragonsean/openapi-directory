/**
 * Color Name API
 * An API that provides names for colors based on their hex value
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: color-name-api@elastiq.click
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPossibleLists.h
 *
 * 
 */

#ifndef OAIPossibleLists_H
#define OAIPossibleLists_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPossibleLists : public OAIEnum {
public:
    OAIPossibleLists();
    OAIPossibleLists(QString json);
    ~OAIPossibleLists() override;

    QString asJson() const override;
    QJsonValue asJsonValue() const override;
    void fromJsonValue(QJsonValue json) override;
    void fromJson(QString jsonString) override;

    enum class eOAIPossibleLists {
        INVALID_VALUE_OPENAPI_GENERATED = 0,
        DEFAULT, 
        BESTOF, 
        WIKIPEDIA, 
        FRENCH, 
        RIDGWAY, 
        RISOGRAPH, 
        BASIC, 
        CHINESETRADITIONAL, 
        HTML, 
        JAPANESETRADITIONAL, 
        LECORBUSIER, 
        NBSISCC, 
        NTC, 
        OSXCRAYONS, 
        RAL, 
        SANZOWADAI, 
        THESAURUS, 
        WERNER, 
        WINDOWS, 
        X11, 
        XKCD
    };
    OAIPossibleLists::eOAIPossibleLists getValue() const;
    void setValue(const OAIPossibleLists::eOAIPossibleLists& value);
    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    eOAIPossibleLists m_value;
    bool m_value_isSet;
    bool m_value_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPossibleLists)

#endif // OAIPossibleLists_H
