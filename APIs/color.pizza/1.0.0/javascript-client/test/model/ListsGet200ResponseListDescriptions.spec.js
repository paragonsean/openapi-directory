/**
 * Color Name API
 * An API that provides names for colors based on their hex value
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: color-name-api@elastiq.click
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ColorNameApi);
  }
}(this, function(expect, ColorNameApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ColorNameApi.ListsGet200ResponseListDescriptions();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ListsGet200ResponseListDescriptions', function() {
    it('should create an instance of ListsGet200ResponseListDescriptions', function() {
      // uncomment below and update the code to test ListsGet200ResponseListDescriptions
      //var instance = new ColorNameApi.ListsGet200ResponseListDescriptions();
      //expect(instance).to.be.a(ColorNameApi.ListsGet200ResponseListDescriptions);
    });

    it('should have the property basic (base name: "basic")', function() {
      // uncomment below and update the code to test the property basic
      //var instance = new ColorNameApi.ListsGet200ResponseListDescriptions();
      //expect(instance).to.be();
    });

    it('should have the property bestOf (base name: "bestOf")', function() {
      // uncomment below and update the code to test the property bestOf
      //var instance = new ColorNameApi.ListsGet200ResponseListDescriptions();
      //expect(instance).to.be();
    });

    it('should have the property chineseTraditional (base name: "chineseTraditional")', function() {
      // uncomment below and update the code to test the property chineseTraditional
      //var instance = new ColorNameApi.ListsGet200ResponseListDescriptions();
      //expect(instance).to.be();
    });

    it('should have the property _default (base name: "default")', function() {
      // uncomment below and update the code to test the property _default
      //var instance = new ColorNameApi.ListsGet200ResponseListDescriptions();
      //expect(instance).to.be();
    });

    it('should have the property french (base name: "french")', function() {
      // uncomment below and update the code to test the property french
      //var instance = new ColorNameApi.ListsGet200ResponseListDescriptions();
      //expect(instance).to.be();
    });

    it('should have the property html (base name: "html")', function() {
      // uncomment below and update the code to test the property html
      //var instance = new ColorNameApi.ListsGet200ResponseListDescriptions();
      //expect(instance).to.be();
    });

    it('should have the property japaneseTraditional (base name: "japaneseTraditional")', function() {
      // uncomment below and update the code to test the property japaneseTraditional
      //var instance = new ColorNameApi.ListsGet200ResponseListDescriptions();
      //expect(instance).to.be();
    });

    it('should have the property leCorbusier (base name: "leCorbusier")', function() {
      // uncomment below and update the code to test the property leCorbusier
      //var instance = new ColorNameApi.ListsGet200ResponseListDescriptions();
      //expect(instance).to.be();
    });

    it('should have the property nbsIscc (base name: "nbsIscc")', function() {
      // uncomment below and update the code to test the property nbsIscc
      //var instance = new ColorNameApi.ListsGet200ResponseListDescriptions();
      //expect(instance).to.be();
    });

    it('should have the property ntc (base name: "ntc")', function() {
      // uncomment below and update the code to test the property ntc
      //var instance = new ColorNameApi.ListsGet200ResponseListDescriptions();
      //expect(instance).to.be();
    });

    it('should have the property osxcrayons (base name: "osxcrayons")', function() {
      // uncomment below and update the code to test the property osxcrayons
      //var instance = new ColorNameApi.ListsGet200ResponseListDescriptions();
      //expect(instance).to.be();
    });

    it('should have the property ral (base name: "ral")', function() {
      // uncomment below and update the code to test the property ral
      //var instance = new ColorNameApi.ListsGet200ResponseListDescriptions();
      //expect(instance).to.be();
    });

    it('should have the property ridgway (base name: "ridgway")', function() {
      // uncomment below and update the code to test the property ridgway
      //var instance = new ColorNameApi.ListsGet200ResponseListDescriptions();
      //expect(instance).to.be();
    });

    it('should have the property risograph (base name: "risograph")', function() {
      // uncomment below and update the code to test the property risograph
      //var instance = new ColorNameApi.ListsGet200ResponseListDescriptions();
      //expect(instance).to.be();
    });

    it('should have the property sanzoWadaI (base name: "sanzoWadaI")', function() {
      // uncomment below and update the code to test the property sanzoWadaI
      //var instance = new ColorNameApi.ListsGet200ResponseListDescriptions();
      //expect(instance).to.be();
    });

    it('should have the property thesaurus (base name: "thesaurus")', function() {
      // uncomment below and update the code to test the property thesaurus
      //var instance = new ColorNameApi.ListsGet200ResponseListDescriptions();
      //expect(instance).to.be();
    });

    it('should have the property werner (base name: "werner")', function() {
      // uncomment below and update the code to test the property werner
      //var instance = new ColorNameApi.ListsGet200ResponseListDescriptions();
      //expect(instance).to.be();
    });

    it('should have the property wikipedia (base name: "wikipedia")', function() {
      // uncomment below and update the code to test the property wikipedia
      //var instance = new ColorNameApi.ListsGet200ResponseListDescriptions();
      //expect(instance).to.be();
    });

    it('should have the property windows (base name: "windows")', function() {
      // uncomment below and update the code to test the property windows
      //var instance = new ColorNameApi.ListsGet200ResponseListDescriptions();
      //expect(instance).to.be();
    });

    it('should have the property x11 (base name: "x11")', function() {
      // uncomment below and update the code to test the property x11
      //var instance = new ColorNameApi.ListsGet200ResponseListDescriptions();
      //expect(instance).to.be();
    });

    it('should have the property xkcd (base name: "xkcd")', function() {
      // uncomment below and update the code to test the property xkcd
      //var instance = new ColorNameApi.ListsGet200ResponseListDescriptions();
      //expect(instance).to.be();
    });

  });

}));
