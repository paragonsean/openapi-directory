/*
 * Color Name API
 * An API that provides names for colors based on their hex value
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: color-name-api@elastiq.click
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.ListDescription;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for ListsGet200ResponseListDescriptions
 */
public class ListsGet200ResponseListDescriptionsTest {
    private final ListsGet200ResponseListDescriptions model = new ListsGet200ResponseListDescriptions();

    /**
     * Model tests for ListsGet200ResponseListDescriptions
     */
    @Test
    public void testListsGet200ResponseListDescriptions() {
        // TODO: test ListsGet200ResponseListDescriptions
    }

    /**
     * Test the property 'basic'
     */
    @Test
    public void basicTest() {
        // TODO: test basic
    }

    /**
     * Test the property 'bestOf'
     */
    @Test
    public void bestOfTest() {
        // TODO: test bestOf
    }

    /**
     * Test the property 'chineseTraditional'
     */
    @Test
    public void chineseTraditionalTest() {
        // TODO: test chineseTraditional
    }

    /**
     * Test the property '_default'
     */
    @Test
    public void _defaultTest() {
        // TODO: test _default
    }

    /**
     * Test the property 'french'
     */
    @Test
    public void frenchTest() {
        // TODO: test french
    }

    /**
     * Test the property 'html'
     */
    @Test
    public void htmlTest() {
        // TODO: test html
    }

    /**
     * Test the property 'japaneseTraditional'
     */
    @Test
    public void japaneseTraditionalTest() {
        // TODO: test japaneseTraditional
    }

    /**
     * Test the property 'leCorbusier'
     */
    @Test
    public void leCorbusierTest() {
        // TODO: test leCorbusier
    }

    /**
     * Test the property 'nbsIscc'
     */
    @Test
    public void nbsIsccTest() {
        // TODO: test nbsIscc
    }

    /**
     * Test the property 'ntc'
     */
    @Test
    public void ntcTest() {
        // TODO: test ntc
    }

    /**
     * Test the property 'osxcrayons'
     */
    @Test
    public void osxcrayonsTest() {
        // TODO: test osxcrayons
    }

    /**
     * Test the property 'ral'
     */
    @Test
    public void ralTest() {
        // TODO: test ral
    }

    /**
     * Test the property 'ridgway'
     */
    @Test
    public void ridgwayTest() {
        // TODO: test ridgway
    }

    /**
     * Test the property 'risograph'
     */
    @Test
    public void risographTest() {
        // TODO: test risograph
    }

    /**
     * Test the property 'sanzoWadaI'
     */
    @Test
    public void sanzoWadaITest() {
        // TODO: test sanzoWadaI
    }

    /**
     * Test the property 'thesaurus'
     */
    @Test
    public void thesaurusTest() {
        // TODO: test thesaurus
    }

    /**
     * Test the property 'werner'
     */
    @Test
    public void wernerTest() {
        // TODO: test werner
    }

    /**
     * Test the property 'wikipedia'
     */
    @Test
    public void wikipediaTest() {
        // TODO: test wikipedia
    }

    /**
     * Test the property 'windows'
     */
    @Test
    public void windowsTest() {
        // TODO: test windows
    }

    /**
     * Test the property 'x11'
     */
    @Test
    public void x11Test() {
        // TODO: test x11
    }

    /**
     * Test the property 'xkcd'
     */
    @Test
    public void xkcdTest() {
        // TODO: test xkcd
    }

}
