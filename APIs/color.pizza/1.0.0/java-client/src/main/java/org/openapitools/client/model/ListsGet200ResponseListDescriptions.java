/*
 * Color Name API
 * An API that provides names for colors based on their hex value
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: color-name-api@elastiq.click
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.ListDescription;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ListsGet200ResponseListDescriptions
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:17:38.891030-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ListsGet200ResponseListDescriptions {
  public static final String SERIALIZED_NAME_BASIC = "basic";
  @SerializedName(SERIALIZED_NAME_BASIC)
  private ListDescription basic;

  public static final String SERIALIZED_NAME_BEST_OF = "bestOf";
  @SerializedName(SERIALIZED_NAME_BEST_OF)
  private ListDescription bestOf;

  public static final String SERIALIZED_NAME_CHINESE_TRADITIONAL = "chineseTraditional";
  @SerializedName(SERIALIZED_NAME_CHINESE_TRADITIONAL)
  private ListDescription chineseTraditional;

  public static final String SERIALIZED_NAME_DEFAULT = "default";
  @SerializedName(SERIALIZED_NAME_DEFAULT)
  private ListDescription _default;

  public static final String SERIALIZED_NAME_FRENCH = "french";
  @SerializedName(SERIALIZED_NAME_FRENCH)
  private ListDescription french;

  public static final String SERIALIZED_NAME_HTML = "html";
  @SerializedName(SERIALIZED_NAME_HTML)
  private ListDescription html;

  public static final String SERIALIZED_NAME_JAPANESE_TRADITIONAL = "japaneseTraditional";
  @SerializedName(SERIALIZED_NAME_JAPANESE_TRADITIONAL)
  private ListDescription japaneseTraditional;

  public static final String SERIALIZED_NAME_LE_CORBUSIER = "leCorbusier";
  @SerializedName(SERIALIZED_NAME_LE_CORBUSIER)
  private ListDescription leCorbusier;

  public static final String SERIALIZED_NAME_NBS_ISCC = "nbsIscc";
  @SerializedName(SERIALIZED_NAME_NBS_ISCC)
  private ListDescription nbsIscc;

  public static final String SERIALIZED_NAME_NTC = "ntc";
  @SerializedName(SERIALIZED_NAME_NTC)
  private ListDescription ntc;

  public static final String SERIALIZED_NAME_OSXCRAYONS = "osxcrayons";
  @SerializedName(SERIALIZED_NAME_OSXCRAYONS)
  private ListDescription osxcrayons;

  public static final String SERIALIZED_NAME_RAL = "ral";
  @SerializedName(SERIALIZED_NAME_RAL)
  private ListDescription ral;

  public static final String SERIALIZED_NAME_RIDGWAY = "ridgway";
  @SerializedName(SERIALIZED_NAME_RIDGWAY)
  private ListDescription ridgway;

  public static final String SERIALIZED_NAME_RISOGRAPH = "risograph";
  @SerializedName(SERIALIZED_NAME_RISOGRAPH)
  private ListDescription risograph;

  public static final String SERIALIZED_NAME_SANZO_WADA_I = "sanzoWadaI";
  @SerializedName(SERIALIZED_NAME_SANZO_WADA_I)
  private ListDescription sanzoWadaI;

  public static final String SERIALIZED_NAME_THESAURUS = "thesaurus";
  @SerializedName(SERIALIZED_NAME_THESAURUS)
  private ListDescription thesaurus;

  public static final String SERIALIZED_NAME_WERNER = "werner";
  @SerializedName(SERIALIZED_NAME_WERNER)
  private ListDescription werner;

  public static final String SERIALIZED_NAME_WIKIPEDIA = "wikipedia";
  @SerializedName(SERIALIZED_NAME_WIKIPEDIA)
  private ListDescription wikipedia;

  public static final String SERIALIZED_NAME_WINDOWS = "windows";
  @SerializedName(SERIALIZED_NAME_WINDOWS)
  private ListDescription windows;

  public static final String SERIALIZED_NAME_X11 = "x11";
  @SerializedName(SERIALIZED_NAME_X11)
  private ListDescription x11;

  public static final String SERIALIZED_NAME_XKCD = "xkcd";
  @SerializedName(SERIALIZED_NAME_XKCD)
  private ListDescription xkcd;

  public ListsGet200ResponseListDescriptions() {
  }

  public ListsGet200ResponseListDescriptions basic(ListDescription basic) {
    this.basic = basic;
    return this;
  }

  /**
   * Get basic
   * @return basic
   */
  @javax.annotation.Nullable
  public ListDescription getBasic() {
    return basic;
  }

  public void setBasic(ListDescription basic) {
    this.basic = basic;
  }


  public ListsGet200ResponseListDescriptions bestOf(ListDescription bestOf) {
    this.bestOf = bestOf;
    return this;
  }

  /**
   * Get bestOf
   * @return bestOf
   */
  @javax.annotation.Nullable
  public ListDescription getBestOf() {
    return bestOf;
  }

  public void setBestOf(ListDescription bestOf) {
    this.bestOf = bestOf;
  }


  public ListsGet200ResponseListDescriptions chineseTraditional(ListDescription chineseTraditional) {
    this.chineseTraditional = chineseTraditional;
    return this;
  }

  /**
   * Get chineseTraditional
   * @return chineseTraditional
   */
  @javax.annotation.Nullable
  public ListDescription getChineseTraditional() {
    return chineseTraditional;
  }

  public void setChineseTraditional(ListDescription chineseTraditional) {
    this.chineseTraditional = chineseTraditional;
  }


  public ListsGet200ResponseListDescriptions _default(ListDescription _default) {
    this._default = _default;
    return this;
  }

  /**
   * Get _default
   * @return _default
   */
  @javax.annotation.Nullable
  public ListDescription getDefault() {
    return _default;
  }

  public void setDefault(ListDescription _default) {
    this._default = _default;
  }


  public ListsGet200ResponseListDescriptions french(ListDescription french) {
    this.french = french;
    return this;
  }

  /**
   * Get french
   * @return french
   */
  @javax.annotation.Nullable
  public ListDescription getFrench() {
    return french;
  }

  public void setFrench(ListDescription french) {
    this.french = french;
  }


  public ListsGet200ResponseListDescriptions html(ListDescription html) {
    this.html = html;
    return this;
  }

  /**
   * Get html
   * @return html
   */
  @javax.annotation.Nullable
  public ListDescription getHtml() {
    return html;
  }

  public void setHtml(ListDescription html) {
    this.html = html;
  }


  public ListsGet200ResponseListDescriptions japaneseTraditional(ListDescription japaneseTraditional) {
    this.japaneseTraditional = japaneseTraditional;
    return this;
  }

  /**
   * Get japaneseTraditional
   * @return japaneseTraditional
   */
  @javax.annotation.Nullable
  public ListDescription getJapaneseTraditional() {
    return japaneseTraditional;
  }

  public void setJapaneseTraditional(ListDescription japaneseTraditional) {
    this.japaneseTraditional = japaneseTraditional;
  }


  public ListsGet200ResponseListDescriptions leCorbusier(ListDescription leCorbusier) {
    this.leCorbusier = leCorbusier;
    return this;
  }

  /**
   * Get leCorbusier
   * @return leCorbusier
   */
  @javax.annotation.Nullable
  public ListDescription getLeCorbusier() {
    return leCorbusier;
  }

  public void setLeCorbusier(ListDescription leCorbusier) {
    this.leCorbusier = leCorbusier;
  }


  public ListsGet200ResponseListDescriptions nbsIscc(ListDescription nbsIscc) {
    this.nbsIscc = nbsIscc;
    return this;
  }

  /**
   * Get nbsIscc
   * @return nbsIscc
   */
  @javax.annotation.Nullable
  public ListDescription getNbsIscc() {
    return nbsIscc;
  }

  public void setNbsIscc(ListDescription nbsIscc) {
    this.nbsIscc = nbsIscc;
  }


  public ListsGet200ResponseListDescriptions ntc(ListDescription ntc) {
    this.ntc = ntc;
    return this;
  }

  /**
   * Get ntc
   * @return ntc
   */
  @javax.annotation.Nullable
  public ListDescription getNtc() {
    return ntc;
  }

  public void setNtc(ListDescription ntc) {
    this.ntc = ntc;
  }


  public ListsGet200ResponseListDescriptions osxcrayons(ListDescription osxcrayons) {
    this.osxcrayons = osxcrayons;
    return this;
  }

  /**
   * Get osxcrayons
   * @return osxcrayons
   */
  @javax.annotation.Nullable
  public ListDescription getOsxcrayons() {
    return osxcrayons;
  }

  public void setOsxcrayons(ListDescription osxcrayons) {
    this.osxcrayons = osxcrayons;
  }


  public ListsGet200ResponseListDescriptions ral(ListDescription ral) {
    this.ral = ral;
    return this;
  }

  /**
   * Get ral
   * @return ral
   */
  @javax.annotation.Nullable
  public ListDescription getRal() {
    return ral;
  }

  public void setRal(ListDescription ral) {
    this.ral = ral;
  }


  public ListsGet200ResponseListDescriptions ridgway(ListDescription ridgway) {
    this.ridgway = ridgway;
    return this;
  }

  /**
   * Get ridgway
   * @return ridgway
   */
  @javax.annotation.Nullable
  public ListDescription getRidgway() {
    return ridgway;
  }

  public void setRidgway(ListDescription ridgway) {
    this.ridgway = ridgway;
  }


  public ListsGet200ResponseListDescriptions risograph(ListDescription risograph) {
    this.risograph = risograph;
    return this;
  }

  /**
   * Get risograph
   * @return risograph
   */
  @javax.annotation.Nullable
  public ListDescription getRisograph() {
    return risograph;
  }

  public void setRisograph(ListDescription risograph) {
    this.risograph = risograph;
  }


  public ListsGet200ResponseListDescriptions sanzoWadaI(ListDescription sanzoWadaI) {
    this.sanzoWadaI = sanzoWadaI;
    return this;
  }

  /**
   * Get sanzoWadaI
   * @return sanzoWadaI
   */
  @javax.annotation.Nullable
  public ListDescription getSanzoWadaI() {
    return sanzoWadaI;
  }

  public void setSanzoWadaI(ListDescription sanzoWadaI) {
    this.sanzoWadaI = sanzoWadaI;
  }


  public ListsGet200ResponseListDescriptions thesaurus(ListDescription thesaurus) {
    this.thesaurus = thesaurus;
    return this;
  }

  /**
   * Get thesaurus
   * @return thesaurus
   */
  @javax.annotation.Nullable
  public ListDescription getThesaurus() {
    return thesaurus;
  }

  public void setThesaurus(ListDescription thesaurus) {
    this.thesaurus = thesaurus;
  }


  public ListsGet200ResponseListDescriptions werner(ListDescription werner) {
    this.werner = werner;
    return this;
  }

  /**
   * Get werner
   * @return werner
   */
  @javax.annotation.Nullable
  public ListDescription getWerner() {
    return werner;
  }

  public void setWerner(ListDescription werner) {
    this.werner = werner;
  }


  public ListsGet200ResponseListDescriptions wikipedia(ListDescription wikipedia) {
    this.wikipedia = wikipedia;
    return this;
  }

  /**
   * Get wikipedia
   * @return wikipedia
   */
  @javax.annotation.Nullable
  public ListDescription getWikipedia() {
    return wikipedia;
  }

  public void setWikipedia(ListDescription wikipedia) {
    this.wikipedia = wikipedia;
  }


  public ListsGet200ResponseListDescriptions windows(ListDescription windows) {
    this.windows = windows;
    return this;
  }

  /**
   * Get windows
   * @return windows
   */
  @javax.annotation.Nullable
  public ListDescription getWindows() {
    return windows;
  }

  public void setWindows(ListDescription windows) {
    this.windows = windows;
  }


  public ListsGet200ResponseListDescriptions x11(ListDescription x11) {
    this.x11 = x11;
    return this;
  }

  /**
   * Get x11
   * @return x11
   */
  @javax.annotation.Nullable
  public ListDescription getX11() {
    return x11;
  }

  public void setX11(ListDescription x11) {
    this.x11 = x11;
  }


  public ListsGet200ResponseListDescriptions xkcd(ListDescription xkcd) {
    this.xkcd = xkcd;
    return this;
  }

  /**
   * Get xkcd
   * @return xkcd
   */
  @javax.annotation.Nullable
  public ListDescription getXkcd() {
    return xkcd;
  }

  public void setXkcd(ListDescription xkcd) {
    this.xkcd = xkcd;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ListsGet200ResponseListDescriptions listsGet200ResponseListDescriptions = (ListsGet200ResponseListDescriptions) o;
    return Objects.equals(this.basic, listsGet200ResponseListDescriptions.basic) &&
        Objects.equals(this.bestOf, listsGet200ResponseListDescriptions.bestOf) &&
        Objects.equals(this.chineseTraditional, listsGet200ResponseListDescriptions.chineseTraditional) &&
        Objects.equals(this._default, listsGet200ResponseListDescriptions._default) &&
        Objects.equals(this.french, listsGet200ResponseListDescriptions.french) &&
        Objects.equals(this.html, listsGet200ResponseListDescriptions.html) &&
        Objects.equals(this.japaneseTraditional, listsGet200ResponseListDescriptions.japaneseTraditional) &&
        Objects.equals(this.leCorbusier, listsGet200ResponseListDescriptions.leCorbusier) &&
        Objects.equals(this.nbsIscc, listsGet200ResponseListDescriptions.nbsIscc) &&
        Objects.equals(this.ntc, listsGet200ResponseListDescriptions.ntc) &&
        Objects.equals(this.osxcrayons, listsGet200ResponseListDescriptions.osxcrayons) &&
        Objects.equals(this.ral, listsGet200ResponseListDescriptions.ral) &&
        Objects.equals(this.ridgway, listsGet200ResponseListDescriptions.ridgway) &&
        Objects.equals(this.risograph, listsGet200ResponseListDescriptions.risograph) &&
        Objects.equals(this.sanzoWadaI, listsGet200ResponseListDescriptions.sanzoWadaI) &&
        Objects.equals(this.thesaurus, listsGet200ResponseListDescriptions.thesaurus) &&
        Objects.equals(this.werner, listsGet200ResponseListDescriptions.werner) &&
        Objects.equals(this.wikipedia, listsGet200ResponseListDescriptions.wikipedia) &&
        Objects.equals(this.windows, listsGet200ResponseListDescriptions.windows) &&
        Objects.equals(this.x11, listsGet200ResponseListDescriptions.x11) &&
        Objects.equals(this.xkcd, listsGet200ResponseListDescriptions.xkcd);
  }

  @Override
  public int hashCode() {
    return Objects.hash(basic, bestOf, chineseTraditional, _default, french, html, japaneseTraditional, leCorbusier, nbsIscc, ntc, osxcrayons, ral, ridgway, risograph, sanzoWadaI, thesaurus, werner, wikipedia, windows, x11, xkcd);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ListsGet200ResponseListDescriptions {\n");
    sb.append("    basic: ").append(toIndentedString(basic)).append("\n");
    sb.append("    bestOf: ").append(toIndentedString(bestOf)).append("\n");
    sb.append("    chineseTraditional: ").append(toIndentedString(chineseTraditional)).append("\n");
    sb.append("    _default: ").append(toIndentedString(_default)).append("\n");
    sb.append("    french: ").append(toIndentedString(french)).append("\n");
    sb.append("    html: ").append(toIndentedString(html)).append("\n");
    sb.append("    japaneseTraditional: ").append(toIndentedString(japaneseTraditional)).append("\n");
    sb.append("    leCorbusier: ").append(toIndentedString(leCorbusier)).append("\n");
    sb.append("    nbsIscc: ").append(toIndentedString(nbsIscc)).append("\n");
    sb.append("    ntc: ").append(toIndentedString(ntc)).append("\n");
    sb.append("    osxcrayons: ").append(toIndentedString(osxcrayons)).append("\n");
    sb.append("    ral: ").append(toIndentedString(ral)).append("\n");
    sb.append("    ridgway: ").append(toIndentedString(ridgway)).append("\n");
    sb.append("    risograph: ").append(toIndentedString(risograph)).append("\n");
    sb.append("    sanzoWadaI: ").append(toIndentedString(sanzoWadaI)).append("\n");
    sb.append("    thesaurus: ").append(toIndentedString(thesaurus)).append("\n");
    sb.append("    werner: ").append(toIndentedString(werner)).append("\n");
    sb.append("    wikipedia: ").append(toIndentedString(wikipedia)).append("\n");
    sb.append("    windows: ").append(toIndentedString(windows)).append("\n");
    sb.append("    x11: ").append(toIndentedString(x11)).append("\n");
    sb.append("    xkcd: ").append(toIndentedString(xkcd)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("basic");
    openapiFields.add("bestOf");
    openapiFields.add("chineseTraditional");
    openapiFields.add("default");
    openapiFields.add("french");
    openapiFields.add("html");
    openapiFields.add("japaneseTraditional");
    openapiFields.add("leCorbusier");
    openapiFields.add("nbsIscc");
    openapiFields.add("ntc");
    openapiFields.add("osxcrayons");
    openapiFields.add("ral");
    openapiFields.add("ridgway");
    openapiFields.add("risograph");
    openapiFields.add("sanzoWadaI");
    openapiFields.add("thesaurus");
    openapiFields.add("werner");
    openapiFields.add("wikipedia");
    openapiFields.add("windows");
    openapiFields.add("x11");
    openapiFields.add("xkcd");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ListsGet200ResponseListDescriptions
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ListsGet200ResponseListDescriptions.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ListsGet200ResponseListDescriptions is not found in the empty JSON string", ListsGet200ResponseListDescriptions.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ListsGet200ResponseListDescriptions.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ListsGet200ResponseListDescriptions` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `basic`
      if (jsonObj.get("basic") != null && !jsonObj.get("basic").isJsonNull()) {
        ListDescription.validateJsonElement(jsonObj.get("basic"));
      }
      // validate the optional field `bestOf`
      if (jsonObj.get("bestOf") != null && !jsonObj.get("bestOf").isJsonNull()) {
        ListDescription.validateJsonElement(jsonObj.get("bestOf"));
      }
      // validate the optional field `chineseTraditional`
      if (jsonObj.get("chineseTraditional") != null && !jsonObj.get("chineseTraditional").isJsonNull()) {
        ListDescription.validateJsonElement(jsonObj.get("chineseTraditional"));
      }
      // validate the optional field `default`
      if (jsonObj.get("default") != null && !jsonObj.get("default").isJsonNull()) {
        ListDescription.validateJsonElement(jsonObj.get("default"));
      }
      // validate the optional field `french`
      if (jsonObj.get("french") != null && !jsonObj.get("french").isJsonNull()) {
        ListDescription.validateJsonElement(jsonObj.get("french"));
      }
      // validate the optional field `html`
      if (jsonObj.get("html") != null && !jsonObj.get("html").isJsonNull()) {
        ListDescription.validateJsonElement(jsonObj.get("html"));
      }
      // validate the optional field `japaneseTraditional`
      if (jsonObj.get("japaneseTraditional") != null && !jsonObj.get("japaneseTraditional").isJsonNull()) {
        ListDescription.validateJsonElement(jsonObj.get("japaneseTraditional"));
      }
      // validate the optional field `leCorbusier`
      if (jsonObj.get("leCorbusier") != null && !jsonObj.get("leCorbusier").isJsonNull()) {
        ListDescription.validateJsonElement(jsonObj.get("leCorbusier"));
      }
      // validate the optional field `nbsIscc`
      if (jsonObj.get("nbsIscc") != null && !jsonObj.get("nbsIscc").isJsonNull()) {
        ListDescription.validateJsonElement(jsonObj.get("nbsIscc"));
      }
      // validate the optional field `ntc`
      if (jsonObj.get("ntc") != null && !jsonObj.get("ntc").isJsonNull()) {
        ListDescription.validateJsonElement(jsonObj.get("ntc"));
      }
      // validate the optional field `osxcrayons`
      if (jsonObj.get("osxcrayons") != null && !jsonObj.get("osxcrayons").isJsonNull()) {
        ListDescription.validateJsonElement(jsonObj.get("osxcrayons"));
      }
      // validate the optional field `ral`
      if (jsonObj.get("ral") != null && !jsonObj.get("ral").isJsonNull()) {
        ListDescription.validateJsonElement(jsonObj.get("ral"));
      }
      // validate the optional field `ridgway`
      if (jsonObj.get("ridgway") != null && !jsonObj.get("ridgway").isJsonNull()) {
        ListDescription.validateJsonElement(jsonObj.get("ridgway"));
      }
      // validate the optional field `risograph`
      if (jsonObj.get("risograph") != null && !jsonObj.get("risograph").isJsonNull()) {
        ListDescription.validateJsonElement(jsonObj.get("risograph"));
      }
      // validate the optional field `sanzoWadaI`
      if (jsonObj.get("sanzoWadaI") != null && !jsonObj.get("sanzoWadaI").isJsonNull()) {
        ListDescription.validateJsonElement(jsonObj.get("sanzoWadaI"));
      }
      // validate the optional field `thesaurus`
      if (jsonObj.get("thesaurus") != null && !jsonObj.get("thesaurus").isJsonNull()) {
        ListDescription.validateJsonElement(jsonObj.get("thesaurus"));
      }
      // validate the optional field `werner`
      if (jsonObj.get("werner") != null && !jsonObj.get("werner").isJsonNull()) {
        ListDescription.validateJsonElement(jsonObj.get("werner"));
      }
      // validate the optional field `wikipedia`
      if (jsonObj.get("wikipedia") != null && !jsonObj.get("wikipedia").isJsonNull()) {
        ListDescription.validateJsonElement(jsonObj.get("wikipedia"));
      }
      // validate the optional field `windows`
      if (jsonObj.get("windows") != null && !jsonObj.get("windows").isJsonNull()) {
        ListDescription.validateJsonElement(jsonObj.get("windows"));
      }
      // validate the optional field `x11`
      if (jsonObj.get("x11") != null && !jsonObj.get("x11").isJsonNull()) {
        ListDescription.validateJsonElement(jsonObj.get("x11"));
      }
      // validate the optional field `xkcd`
      if (jsonObj.get("xkcd") != null && !jsonObj.get("xkcd").isJsonNull()) {
        ListDescription.validateJsonElement(jsonObj.get("xkcd"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ListsGet200ResponseListDescriptions.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ListsGet200ResponseListDescriptions' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ListsGet200ResponseListDescriptions> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ListsGet200ResponseListDescriptions.class));

       return (TypeAdapter<T>) new TypeAdapter<ListsGet200ResponseListDescriptions>() {
           @Override
           public void write(JsonWriter out, ListsGet200ResponseListDescriptions value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ListsGet200ResponseListDescriptions read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ListsGet200ResponseListDescriptions given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ListsGet200ResponseListDescriptions
   * @throws IOException if the JSON string is invalid with respect to ListsGet200ResponseListDescriptions
   */
  public static ListsGet200ResponseListDescriptions fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ListsGet200ResponseListDescriptions.class);
  }

  /**
   * Convert an instance of ListsGet200ResponseListDescriptions to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

