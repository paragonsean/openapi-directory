/**
 * Solar VPS
 * This is the Solar VPS Public API. You can find more at http://www.solarvps.com
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@solarvps.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";

/**
* Pods service.
* @module api/PodsApi
* @version 1.0.0
*/
export default class PodsApi {

    /**
    * Constructs a new PodsApi. 
    * @alias module:api/PodsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the podsGet operation.
     * @callback module:api/PodsApi~podsGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * View all your pods
     * Shows all your pods
     * @param {module:api/PodsApi~podsGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    podsGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apiKey'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/pods', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the podsPodIdActionGet operation.
     * @callback module:api/PodsApi~podsPodIdActionGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Perform action on a specific pod
     * Allowed actions are reboot, shutdown, boot
     * @param {Number} podId Id of the pod you want to perform actions on
     * @param {String} action Action to perform on selected pod
     * @param {module:api/PodsApi~podsPodIdActionGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    podsPodIdActionGet(podId, action, callback) {
      let postBody = null;
      // verify the required parameter 'podId' is set
      if (podId === undefined || podId === null) {
        throw new Error("Missing the required parameter 'podId' when calling podsPodIdActionGet");
      }
      // verify the required parameter 'action' is set
      if (action === undefined || action === null) {
        throw new Error("Missing the required parameter 'action' when calling podsPodIdActionGet");
      }

      let pathParams = {
        'podId': podId,
        'action': action
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apiKey'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/pods/{podId}/{action}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the podsPodIdGet operation.
     * @callback module:api/PodsApi~podsPodIdGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * View information on a specific pod
     * Shows details of a specific pod. Enter 1 below to see an example
     * @param {Number} podId Id of the pod you want to perform actions on
     * @param {module:api/PodsApi~podsPodIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    podsPodIdGet(podId, callback) {
      let postBody = null;
      // verify the required parameter 'podId' is set
      if (podId === undefined || podId === null) {
        throw new Error("Missing the required parameter 'podId' when calling podsPodIdGet");
      }

      let pathParams = {
        'podId': podId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apiKey'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/pods/{podId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the podsPodIdPingGet operation.
     * @callback module:api/PodsApi~podsPodIdPingGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Ping your specified pod
     * Returns the ping response from your server.
     * @param {Number} podId Id of the pod you want to ping check
     * @param {module:api/PodsApi~podsPodIdPingGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    podsPodIdPingGet(podId, callback) {
      let postBody = null;
      // verify the required parameter 'podId' is set
      if (podId === undefined || podId === null) {
        throw new Error("Missing the required parameter 'podId' when calling podsPodIdPingGet");
      }

      let pathParams = {
        'podId': podId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apiKey'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/pods/{podId}/ping', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
