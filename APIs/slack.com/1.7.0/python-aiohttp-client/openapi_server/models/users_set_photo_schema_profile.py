# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
import re
from openapi_server import util


class UsersSetPhotoSchemaProfile(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, avatar_hash: str=None, image_1024: str=None, image_192: str=None, image_24: str=None, image_32: str=None, image_48: str=None, image_512: str=None, image_72: str=None, image_original: str=None):
        """UsersSetPhotoSchemaProfile - a model defined in OpenAPI

        :param avatar_hash: The avatar_hash of this UsersSetPhotoSchemaProfile.
        :param image_1024: The image_1024 of this UsersSetPhotoSchemaProfile.
        :param image_192: The image_192 of this UsersSetPhotoSchemaProfile.
        :param image_24: The image_24 of this UsersSetPhotoSchemaProfile.
        :param image_32: The image_32 of this UsersSetPhotoSchemaProfile.
        :param image_48: The image_48 of this UsersSetPhotoSchemaProfile.
        :param image_512: The image_512 of this UsersSetPhotoSchemaProfile.
        :param image_72: The image_72 of this UsersSetPhotoSchemaProfile.
        :param image_original: The image_original of this UsersSetPhotoSchemaProfile.
        """
        self.openapi_types = {
            'avatar_hash': str,
            'image_1024': str,
            'image_192': str,
            'image_24': str,
            'image_32': str,
            'image_48': str,
            'image_512': str,
            'image_72': str,
            'image_original': str
        }

        self.attribute_map = {
            'avatar_hash': 'avatar_hash',
            'image_1024': 'image_1024',
            'image_192': 'image_192',
            'image_24': 'image_24',
            'image_32': 'image_32',
            'image_48': 'image_48',
            'image_512': 'image_512',
            'image_72': 'image_72',
            'image_original': 'image_original'
        }

        self._avatar_hash = avatar_hash
        self._image_1024 = image_1024
        self._image_192 = image_192
        self._image_24 = image_24
        self._image_32 = image_32
        self._image_48 = image_48
        self._image_512 = image_512
        self._image_72 = image_72
        self._image_original = image_original

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UsersSetPhotoSchemaProfile':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The users_setPhoto_schema_profile of this UsersSetPhotoSchemaProfile.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def avatar_hash(self):
        """Gets the avatar_hash of this UsersSetPhotoSchemaProfile.


        :return: The avatar_hash of this UsersSetPhotoSchemaProfile.
        :rtype: str
        """
        return self._avatar_hash

    @avatar_hash.setter
    def avatar_hash(self, avatar_hash):
        """Sets the avatar_hash of this UsersSetPhotoSchemaProfile.


        :param avatar_hash: The avatar_hash of this UsersSetPhotoSchemaProfile.
        :type avatar_hash: str
        """
        if avatar_hash is None:
            raise ValueError("Invalid value for `avatar_hash`, must not be `None`")
        if avatar_hash is not None and not re.search(r'^[0-9a-f]{12}$', avatar_hash):
            raise ValueError("Invalid value for `avatar_hash`, must be a follow pattern or equal to `/^[0-9a-f]{12}$/`")

        self._avatar_hash = avatar_hash

    @property
    def image_1024(self):
        """Gets the image_1024 of this UsersSetPhotoSchemaProfile.


        :return: The image_1024 of this UsersSetPhotoSchemaProfile.
        :rtype: str
        """
        return self._image_1024

    @image_1024.setter
    def image_1024(self, image_1024):
        """Sets the image_1024 of this UsersSetPhotoSchemaProfile.


        :param image_1024: The image_1024 of this UsersSetPhotoSchemaProfile.
        :type image_1024: str
        """
        if image_1024 is None:
            raise ValueError("Invalid value for `image_1024`, must not be `None`")

        self._image_1024 = image_1024

    @property
    def image_192(self):
        """Gets the image_192 of this UsersSetPhotoSchemaProfile.


        :return: The image_192 of this UsersSetPhotoSchemaProfile.
        :rtype: str
        """
        return self._image_192

    @image_192.setter
    def image_192(self, image_192):
        """Sets the image_192 of this UsersSetPhotoSchemaProfile.


        :param image_192: The image_192 of this UsersSetPhotoSchemaProfile.
        :type image_192: str
        """
        if image_192 is None:
            raise ValueError("Invalid value for `image_192`, must not be `None`")

        self._image_192 = image_192

    @property
    def image_24(self):
        """Gets the image_24 of this UsersSetPhotoSchemaProfile.


        :return: The image_24 of this UsersSetPhotoSchemaProfile.
        :rtype: str
        """
        return self._image_24

    @image_24.setter
    def image_24(self, image_24):
        """Sets the image_24 of this UsersSetPhotoSchemaProfile.


        :param image_24: The image_24 of this UsersSetPhotoSchemaProfile.
        :type image_24: str
        """
        if image_24 is None:
            raise ValueError("Invalid value for `image_24`, must not be `None`")

        self._image_24 = image_24

    @property
    def image_32(self):
        """Gets the image_32 of this UsersSetPhotoSchemaProfile.


        :return: The image_32 of this UsersSetPhotoSchemaProfile.
        :rtype: str
        """
        return self._image_32

    @image_32.setter
    def image_32(self, image_32):
        """Sets the image_32 of this UsersSetPhotoSchemaProfile.


        :param image_32: The image_32 of this UsersSetPhotoSchemaProfile.
        :type image_32: str
        """
        if image_32 is None:
            raise ValueError("Invalid value for `image_32`, must not be `None`")

        self._image_32 = image_32

    @property
    def image_48(self):
        """Gets the image_48 of this UsersSetPhotoSchemaProfile.


        :return: The image_48 of this UsersSetPhotoSchemaProfile.
        :rtype: str
        """
        return self._image_48

    @image_48.setter
    def image_48(self, image_48):
        """Sets the image_48 of this UsersSetPhotoSchemaProfile.


        :param image_48: The image_48 of this UsersSetPhotoSchemaProfile.
        :type image_48: str
        """
        if image_48 is None:
            raise ValueError("Invalid value for `image_48`, must not be `None`")

        self._image_48 = image_48

    @property
    def image_512(self):
        """Gets the image_512 of this UsersSetPhotoSchemaProfile.


        :return: The image_512 of this UsersSetPhotoSchemaProfile.
        :rtype: str
        """
        return self._image_512

    @image_512.setter
    def image_512(self, image_512):
        """Sets the image_512 of this UsersSetPhotoSchemaProfile.


        :param image_512: The image_512 of this UsersSetPhotoSchemaProfile.
        :type image_512: str
        """
        if image_512 is None:
            raise ValueError("Invalid value for `image_512`, must not be `None`")

        self._image_512 = image_512

    @property
    def image_72(self):
        """Gets the image_72 of this UsersSetPhotoSchemaProfile.


        :return: The image_72 of this UsersSetPhotoSchemaProfile.
        :rtype: str
        """
        return self._image_72

    @image_72.setter
    def image_72(self, image_72):
        """Sets the image_72 of this UsersSetPhotoSchemaProfile.


        :param image_72: The image_72 of this UsersSetPhotoSchemaProfile.
        :type image_72: str
        """
        if image_72 is None:
            raise ValueError("Invalid value for `image_72`, must not be `None`")

        self._image_72 = image_72

    @property
    def image_original(self):
        """Gets the image_original of this UsersSetPhotoSchemaProfile.


        :return: The image_original of this UsersSetPhotoSchemaProfile.
        :rtype: str
        """
        return self._image_original

    @image_original.setter
    def image_original(self, image_original):
        """Sets the image_original of this UsersSetPhotoSchemaProfile.


        :param image_original: The image_original of this UsersSetPhotoSchemaProfile.
        :type image_original: str
        """
        if image_original is None:
            raise ValueError("Invalid value for `image_original`, must not be `None`")

        self._image_original = image_original
