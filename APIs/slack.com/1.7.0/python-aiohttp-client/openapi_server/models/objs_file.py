# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.objs_file_shares import ObjsFileShares
from openapi_server.models.objs_reaction import ObjsReaction
import re
from openapi_server import util


class ObjsFile(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, channels: list[str]=None, comments_count: int=None, created: int=None, date_delete: int=None, display_as_bot: bool=None, editable: bool=None, editor: str=None, external_id: str=None, external_type: str=None, external_url: str=None, filetype: str=None, groups: list[str]=None, has_rich_preview: bool=None, id: str=None, image_exif_rotation: int=None, ims: list[str]=None, is_external: bool=None, is_public: bool=None, is_starred: bool=None, is_tombstoned: bool=None, last_editor: str=None, mimetype: str=None, mode: str=None, name: str=None, non_owner_editable: bool=None, num_stars: int=None, original_h: int=None, original_w: int=None, permalink: str=None, permalink_public: str=None, pinned_info: object=None, pinned_to: List[str]=None, pretty_type: str=None, preview: str=None, public_url_shared: bool=None, reactions: List[ObjsReaction]=None, shares: ObjsFileShares=None, size: int=None, source_team: str=None, state: str=None, thumb_1024: str=None, thumb_1024_h: int=None, thumb_1024_w: int=None, thumb_160: str=None, thumb_360: str=None, thumb_360_h: int=None, thumb_360_w: int=None, thumb_480: str=None, thumb_480_h: int=None, thumb_480_w: int=None, thumb_64: str=None, thumb_720: str=None, thumb_720_h: int=None, thumb_720_w: int=None, thumb_80: str=None, thumb_800: str=None, thumb_800_h: int=None, thumb_800_w: int=None, thumb_960: str=None, thumb_960_h: int=None, thumb_960_w: int=None, thumb_tiny: str=None, timestamp: int=None, title: str=None, updated: int=None, url_private: str=None, url_private_download: str=None, user: str=None, user_team: str=None, username: str=None):
        """ObjsFile - a model defined in OpenAPI

        :param channels: The channels of this ObjsFile.
        :param comments_count: The comments_count of this ObjsFile.
        :param created: The created of this ObjsFile.
        :param date_delete: The date_delete of this ObjsFile.
        :param display_as_bot: The display_as_bot of this ObjsFile.
        :param editable: The editable of this ObjsFile.
        :param editor: The editor of this ObjsFile.
        :param external_id: The external_id of this ObjsFile.
        :param external_type: The external_type of this ObjsFile.
        :param external_url: The external_url of this ObjsFile.
        :param filetype: The filetype of this ObjsFile.
        :param groups: The groups of this ObjsFile.
        :param has_rich_preview: The has_rich_preview of this ObjsFile.
        :param id: The id of this ObjsFile.
        :param image_exif_rotation: The image_exif_rotation of this ObjsFile.
        :param ims: The ims of this ObjsFile.
        :param is_external: The is_external of this ObjsFile.
        :param is_public: The is_public of this ObjsFile.
        :param is_starred: The is_starred of this ObjsFile.
        :param is_tombstoned: The is_tombstoned of this ObjsFile.
        :param last_editor: The last_editor of this ObjsFile.
        :param mimetype: The mimetype of this ObjsFile.
        :param mode: The mode of this ObjsFile.
        :param name: The name of this ObjsFile.
        :param non_owner_editable: The non_owner_editable of this ObjsFile.
        :param num_stars: The num_stars of this ObjsFile.
        :param original_h: The original_h of this ObjsFile.
        :param original_w: The original_w of this ObjsFile.
        :param permalink: The permalink of this ObjsFile.
        :param permalink_public: The permalink_public of this ObjsFile.
        :param pinned_info: The pinned_info of this ObjsFile.
        :param pinned_to: The pinned_to of this ObjsFile.
        :param pretty_type: The pretty_type of this ObjsFile.
        :param preview: The preview of this ObjsFile.
        :param public_url_shared: The public_url_shared of this ObjsFile.
        :param reactions: The reactions of this ObjsFile.
        :param shares: The shares of this ObjsFile.
        :param size: The size of this ObjsFile.
        :param source_team: The source_team of this ObjsFile.
        :param state: The state of this ObjsFile.
        :param thumb_1024: The thumb_1024 of this ObjsFile.
        :param thumb_1024_h: The thumb_1024_h of this ObjsFile.
        :param thumb_1024_w: The thumb_1024_w of this ObjsFile.
        :param thumb_160: The thumb_160 of this ObjsFile.
        :param thumb_360: The thumb_360 of this ObjsFile.
        :param thumb_360_h: The thumb_360_h of this ObjsFile.
        :param thumb_360_w: The thumb_360_w of this ObjsFile.
        :param thumb_480: The thumb_480 of this ObjsFile.
        :param thumb_480_h: The thumb_480_h of this ObjsFile.
        :param thumb_480_w: The thumb_480_w of this ObjsFile.
        :param thumb_64: The thumb_64 of this ObjsFile.
        :param thumb_720: The thumb_720 of this ObjsFile.
        :param thumb_720_h: The thumb_720_h of this ObjsFile.
        :param thumb_720_w: The thumb_720_w of this ObjsFile.
        :param thumb_80: The thumb_80 of this ObjsFile.
        :param thumb_800: The thumb_800 of this ObjsFile.
        :param thumb_800_h: The thumb_800_h of this ObjsFile.
        :param thumb_800_w: The thumb_800_w of this ObjsFile.
        :param thumb_960: The thumb_960 of this ObjsFile.
        :param thumb_960_h: The thumb_960_h of this ObjsFile.
        :param thumb_960_w: The thumb_960_w of this ObjsFile.
        :param thumb_tiny: The thumb_tiny of this ObjsFile.
        :param timestamp: The timestamp of this ObjsFile.
        :param title: The title of this ObjsFile.
        :param updated: The updated of this ObjsFile.
        :param url_private: The url_private of this ObjsFile.
        :param url_private_download: The url_private_download of this ObjsFile.
        :param user: The user of this ObjsFile.
        :param user_team: The user_team of this ObjsFile.
        :param username: The username of this ObjsFile.
        """
        self.openapi_types = {
            'channels': list[str],
            'comments_count': int,
            'created': int,
            'date_delete': int,
            'display_as_bot': bool,
            'editable': bool,
            'editor': str,
            'external_id': str,
            'external_type': str,
            'external_url': str,
            'filetype': str,
            'groups': list[str],
            'has_rich_preview': bool,
            'id': str,
            'image_exif_rotation': int,
            'ims': list[str],
            'is_external': bool,
            'is_public': bool,
            'is_starred': bool,
            'is_tombstoned': bool,
            'last_editor': str,
            'mimetype': str,
            'mode': str,
            'name': str,
            'non_owner_editable': bool,
            'num_stars': int,
            'original_h': int,
            'original_w': int,
            'permalink': str,
            'permalink_public': str,
            'pinned_info': object,
            'pinned_to': List[str],
            'pretty_type': str,
            'preview': str,
            'public_url_shared': bool,
            'reactions': List[ObjsReaction],
            'shares': ObjsFileShares,
            'size': int,
            'source_team': str,
            'state': str,
            'thumb_1024': str,
            'thumb_1024_h': int,
            'thumb_1024_w': int,
            'thumb_160': str,
            'thumb_360': str,
            'thumb_360_h': int,
            'thumb_360_w': int,
            'thumb_480': str,
            'thumb_480_h': int,
            'thumb_480_w': int,
            'thumb_64': str,
            'thumb_720': str,
            'thumb_720_h': int,
            'thumb_720_w': int,
            'thumb_80': str,
            'thumb_800': str,
            'thumb_800_h': int,
            'thumb_800_w': int,
            'thumb_960': str,
            'thumb_960_h': int,
            'thumb_960_w': int,
            'thumb_tiny': str,
            'timestamp': int,
            'title': str,
            'updated': int,
            'url_private': str,
            'url_private_download': str,
            'user': str,
            'user_team': str,
            'username': str
        }

        self.attribute_map = {
            'channels': 'channels',
            'comments_count': 'comments_count',
            'created': 'created',
            'date_delete': 'date_delete',
            'display_as_bot': 'display_as_bot',
            'editable': 'editable',
            'editor': 'editor',
            'external_id': 'external_id',
            'external_type': 'external_type',
            'external_url': 'external_url',
            'filetype': 'filetype',
            'groups': 'groups',
            'has_rich_preview': 'has_rich_preview',
            'id': 'id',
            'image_exif_rotation': 'image_exif_rotation',
            'ims': 'ims',
            'is_external': 'is_external',
            'is_public': 'is_public',
            'is_starred': 'is_starred',
            'is_tombstoned': 'is_tombstoned',
            'last_editor': 'last_editor',
            'mimetype': 'mimetype',
            'mode': 'mode',
            'name': 'name',
            'non_owner_editable': 'non_owner_editable',
            'num_stars': 'num_stars',
            'original_h': 'original_h',
            'original_w': 'original_w',
            'permalink': 'permalink',
            'permalink_public': 'permalink_public',
            'pinned_info': 'pinned_info',
            'pinned_to': 'pinned_to',
            'pretty_type': 'pretty_type',
            'preview': 'preview',
            'public_url_shared': 'public_url_shared',
            'reactions': 'reactions',
            'shares': 'shares',
            'size': 'size',
            'source_team': 'source_team',
            'state': 'state',
            'thumb_1024': 'thumb_1024',
            'thumb_1024_h': 'thumb_1024_h',
            'thumb_1024_w': 'thumb_1024_w',
            'thumb_160': 'thumb_160',
            'thumb_360': 'thumb_360',
            'thumb_360_h': 'thumb_360_h',
            'thumb_360_w': 'thumb_360_w',
            'thumb_480': 'thumb_480',
            'thumb_480_h': 'thumb_480_h',
            'thumb_480_w': 'thumb_480_w',
            'thumb_64': 'thumb_64',
            'thumb_720': 'thumb_720',
            'thumb_720_h': 'thumb_720_h',
            'thumb_720_w': 'thumb_720_w',
            'thumb_80': 'thumb_80',
            'thumb_800': 'thumb_800',
            'thumb_800_h': 'thumb_800_h',
            'thumb_800_w': 'thumb_800_w',
            'thumb_960': 'thumb_960',
            'thumb_960_h': 'thumb_960_h',
            'thumb_960_w': 'thumb_960_w',
            'thumb_tiny': 'thumb_tiny',
            'timestamp': 'timestamp',
            'title': 'title',
            'updated': 'updated',
            'url_private': 'url_private',
            'url_private_download': 'url_private_download',
            'user': 'user',
            'user_team': 'user_team',
            'username': 'username'
        }

        self._channels = channels
        self._comments_count = comments_count
        self._created = created
        self._date_delete = date_delete
        self._display_as_bot = display_as_bot
        self._editable = editable
        self._editor = editor
        self._external_id = external_id
        self._external_type = external_type
        self._external_url = external_url
        self._filetype = filetype
        self._groups = groups
        self._has_rich_preview = has_rich_preview
        self._id = id
        self._image_exif_rotation = image_exif_rotation
        self._ims = ims
        self._is_external = is_external
        self._is_public = is_public
        self._is_starred = is_starred
        self._is_tombstoned = is_tombstoned
        self._last_editor = last_editor
        self._mimetype = mimetype
        self._mode = mode
        self._name = name
        self._non_owner_editable = non_owner_editable
        self._num_stars = num_stars
        self._original_h = original_h
        self._original_w = original_w
        self._permalink = permalink
        self._permalink_public = permalink_public
        self._pinned_info = pinned_info
        self._pinned_to = pinned_to
        self._pretty_type = pretty_type
        self._preview = preview
        self._public_url_shared = public_url_shared
        self._reactions = reactions
        self._shares = shares
        self._size = size
        self._source_team = source_team
        self._state = state
        self._thumb_1024 = thumb_1024
        self._thumb_1024_h = thumb_1024_h
        self._thumb_1024_w = thumb_1024_w
        self._thumb_160 = thumb_160
        self._thumb_360 = thumb_360
        self._thumb_360_h = thumb_360_h
        self._thumb_360_w = thumb_360_w
        self._thumb_480 = thumb_480
        self._thumb_480_h = thumb_480_h
        self._thumb_480_w = thumb_480_w
        self._thumb_64 = thumb_64
        self._thumb_720 = thumb_720
        self._thumb_720_h = thumb_720_h
        self._thumb_720_w = thumb_720_w
        self._thumb_80 = thumb_80
        self._thumb_800 = thumb_800
        self._thumb_800_h = thumb_800_h
        self._thumb_800_w = thumb_800_w
        self._thumb_960 = thumb_960
        self._thumb_960_h = thumb_960_h
        self._thumb_960_w = thumb_960_w
        self._thumb_tiny = thumb_tiny
        self._timestamp = timestamp
        self._title = title
        self._updated = updated
        self._url_private = url_private
        self._url_private_download = url_private_download
        self._user = user
        self._user_team = user_team
        self._username = username

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ObjsFile':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The objs_file of this ObjsFile.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def channels(self):
        """Gets the channels of this ObjsFile.


        :return: The channels of this ObjsFile.
        :rtype: list[str]
        """
        return self._channels

    @channels.setter
    def channels(self, channels):
        """Sets the channels of this ObjsFile.


        :param channels: The channels of this ObjsFile.
        :type channels: list[str]
        """

        self._channels = channels

    @property
    def comments_count(self):
        """Gets the comments_count of this ObjsFile.


        :return: The comments_count of this ObjsFile.
        :rtype: int
        """
        return self._comments_count

    @comments_count.setter
    def comments_count(self, comments_count):
        """Sets the comments_count of this ObjsFile.


        :param comments_count: The comments_count of this ObjsFile.
        :type comments_count: int
        """

        self._comments_count = comments_count

    @property
    def created(self):
        """Gets the created of this ObjsFile.


        :return: The created of this ObjsFile.
        :rtype: int
        """
        return self._created

    @created.setter
    def created(self, created):
        """Sets the created of this ObjsFile.


        :param created: The created of this ObjsFile.
        :type created: int
        """

        self._created = created

    @property
    def date_delete(self):
        """Gets the date_delete of this ObjsFile.


        :return: The date_delete of this ObjsFile.
        :rtype: int
        """
        return self._date_delete

    @date_delete.setter
    def date_delete(self, date_delete):
        """Sets the date_delete of this ObjsFile.


        :param date_delete: The date_delete of this ObjsFile.
        :type date_delete: int
        """

        self._date_delete = date_delete

    @property
    def display_as_bot(self):
        """Gets the display_as_bot of this ObjsFile.


        :return: The display_as_bot of this ObjsFile.
        :rtype: bool
        """
        return self._display_as_bot

    @display_as_bot.setter
    def display_as_bot(self, display_as_bot):
        """Sets the display_as_bot of this ObjsFile.


        :param display_as_bot: The display_as_bot of this ObjsFile.
        :type display_as_bot: bool
        """

        self._display_as_bot = display_as_bot

    @property
    def editable(self):
        """Gets the editable of this ObjsFile.


        :return: The editable of this ObjsFile.
        :rtype: bool
        """
        return self._editable

    @editable.setter
    def editable(self, editable):
        """Sets the editable of this ObjsFile.


        :param editable: The editable of this ObjsFile.
        :type editable: bool
        """

        self._editable = editable

    @property
    def editor(self):
        """Gets the editor of this ObjsFile.


        :return: The editor of this ObjsFile.
        :rtype: str
        """
        return self._editor

    @editor.setter
    def editor(self, editor):
        """Sets the editor of this ObjsFile.


        :param editor: The editor of this ObjsFile.
        :type editor: str
        """
        if editor is not None and not re.search(r'^[UW][A-Z0-9]{2,}$', editor):
            raise ValueError("Invalid value for `editor`, must be a follow pattern or equal to `/^[UW][A-Z0-9]{2,}$/`")

        self._editor = editor

    @property
    def external_id(self):
        """Gets the external_id of this ObjsFile.


        :return: The external_id of this ObjsFile.
        :rtype: str
        """
        return self._external_id

    @external_id.setter
    def external_id(self, external_id):
        """Sets the external_id of this ObjsFile.


        :param external_id: The external_id of this ObjsFile.
        :type external_id: str
        """

        self._external_id = external_id

    @property
    def external_type(self):
        """Gets the external_type of this ObjsFile.


        :return: The external_type of this ObjsFile.
        :rtype: str
        """
        return self._external_type

    @external_type.setter
    def external_type(self, external_type):
        """Sets the external_type of this ObjsFile.


        :param external_type: The external_type of this ObjsFile.
        :type external_type: str
        """

        self._external_type = external_type

    @property
    def external_url(self):
        """Gets the external_url of this ObjsFile.


        :return: The external_url of this ObjsFile.
        :rtype: str
        """
        return self._external_url

    @external_url.setter
    def external_url(self, external_url):
        """Sets the external_url of this ObjsFile.


        :param external_url: The external_url of this ObjsFile.
        :type external_url: str
        """

        self._external_url = external_url

    @property
    def filetype(self):
        """Gets the filetype of this ObjsFile.


        :return: The filetype of this ObjsFile.
        :rtype: str
        """
        return self._filetype

    @filetype.setter
    def filetype(self, filetype):
        """Sets the filetype of this ObjsFile.


        :param filetype: The filetype of this ObjsFile.
        :type filetype: str
        """

        self._filetype = filetype

    @property
    def groups(self):
        """Gets the groups of this ObjsFile.


        :return: The groups of this ObjsFile.
        :rtype: list[str]
        """
        return self._groups

    @groups.setter
    def groups(self, groups):
        """Sets the groups of this ObjsFile.


        :param groups: The groups of this ObjsFile.
        :type groups: list[str]
        """

        self._groups = groups

    @property
    def has_rich_preview(self):
        """Gets the has_rich_preview of this ObjsFile.


        :return: The has_rich_preview of this ObjsFile.
        :rtype: bool
        """
        return self._has_rich_preview

    @has_rich_preview.setter
    def has_rich_preview(self, has_rich_preview):
        """Sets the has_rich_preview of this ObjsFile.


        :param has_rich_preview: The has_rich_preview of this ObjsFile.
        :type has_rich_preview: bool
        """

        self._has_rich_preview = has_rich_preview

    @property
    def id(self):
        """Gets the id of this ObjsFile.


        :return: The id of this ObjsFile.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ObjsFile.


        :param id: The id of this ObjsFile.
        :type id: str
        """
        if id is not None and not re.search(r'^[F][A-Z0-9]{8,}$', id):
            raise ValueError("Invalid value for `id`, must be a follow pattern or equal to `/^[F][A-Z0-9]{8,}$/`")

        self._id = id

    @property
    def image_exif_rotation(self):
        """Gets the image_exif_rotation of this ObjsFile.


        :return: The image_exif_rotation of this ObjsFile.
        :rtype: int
        """
        return self._image_exif_rotation

    @image_exif_rotation.setter
    def image_exif_rotation(self, image_exif_rotation):
        """Sets the image_exif_rotation of this ObjsFile.


        :param image_exif_rotation: The image_exif_rotation of this ObjsFile.
        :type image_exif_rotation: int
        """

        self._image_exif_rotation = image_exif_rotation

    @property
    def ims(self):
        """Gets the ims of this ObjsFile.


        :return: The ims of this ObjsFile.
        :rtype: list[str]
        """
        return self._ims

    @ims.setter
    def ims(self, ims):
        """Sets the ims of this ObjsFile.


        :param ims: The ims of this ObjsFile.
        :type ims: list[str]
        """

        self._ims = ims

    @property
    def is_external(self):
        """Gets the is_external of this ObjsFile.


        :return: The is_external of this ObjsFile.
        :rtype: bool
        """
        return self._is_external

    @is_external.setter
    def is_external(self, is_external):
        """Sets the is_external of this ObjsFile.


        :param is_external: The is_external of this ObjsFile.
        :type is_external: bool
        """

        self._is_external = is_external

    @property
    def is_public(self):
        """Gets the is_public of this ObjsFile.


        :return: The is_public of this ObjsFile.
        :rtype: bool
        """
        return self._is_public

    @is_public.setter
    def is_public(self, is_public):
        """Sets the is_public of this ObjsFile.


        :param is_public: The is_public of this ObjsFile.
        :type is_public: bool
        """

        self._is_public = is_public

    @property
    def is_starred(self):
        """Gets the is_starred of this ObjsFile.


        :return: The is_starred of this ObjsFile.
        :rtype: bool
        """
        return self._is_starred

    @is_starred.setter
    def is_starred(self, is_starred):
        """Sets the is_starred of this ObjsFile.


        :param is_starred: The is_starred of this ObjsFile.
        :type is_starred: bool
        """

        self._is_starred = is_starred

    @property
    def is_tombstoned(self):
        """Gets the is_tombstoned of this ObjsFile.


        :return: The is_tombstoned of this ObjsFile.
        :rtype: bool
        """
        return self._is_tombstoned

    @is_tombstoned.setter
    def is_tombstoned(self, is_tombstoned):
        """Sets the is_tombstoned of this ObjsFile.


        :param is_tombstoned: The is_tombstoned of this ObjsFile.
        :type is_tombstoned: bool
        """

        self._is_tombstoned = is_tombstoned

    @property
    def last_editor(self):
        """Gets the last_editor of this ObjsFile.


        :return: The last_editor of this ObjsFile.
        :rtype: str
        """
        return self._last_editor

    @last_editor.setter
    def last_editor(self, last_editor):
        """Sets the last_editor of this ObjsFile.


        :param last_editor: The last_editor of this ObjsFile.
        :type last_editor: str
        """
        if last_editor is not None and not re.search(r'^[UW][A-Z0-9]{2,}$', last_editor):
            raise ValueError("Invalid value for `last_editor`, must be a follow pattern or equal to `/^[UW][A-Z0-9]{2,}$/`")

        self._last_editor = last_editor

    @property
    def mimetype(self):
        """Gets the mimetype of this ObjsFile.


        :return: The mimetype of this ObjsFile.
        :rtype: str
        """
        return self._mimetype

    @mimetype.setter
    def mimetype(self, mimetype):
        """Sets the mimetype of this ObjsFile.


        :param mimetype: The mimetype of this ObjsFile.
        :type mimetype: str
        """

        self._mimetype = mimetype

    @property
    def mode(self):
        """Gets the mode of this ObjsFile.


        :return: The mode of this ObjsFile.
        :rtype: str
        """
        return self._mode

    @mode.setter
    def mode(self, mode):
        """Sets the mode of this ObjsFile.


        :param mode: The mode of this ObjsFile.
        :type mode: str
        """

        self._mode = mode

    @property
    def name(self):
        """Gets the name of this ObjsFile.


        :return: The name of this ObjsFile.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ObjsFile.


        :param name: The name of this ObjsFile.
        :type name: str
        """

        self._name = name

    @property
    def non_owner_editable(self):
        """Gets the non_owner_editable of this ObjsFile.


        :return: The non_owner_editable of this ObjsFile.
        :rtype: bool
        """
        return self._non_owner_editable

    @non_owner_editable.setter
    def non_owner_editable(self, non_owner_editable):
        """Sets the non_owner_editable of this ObjsFile.


        :param non_owner_editable: The non_owner_editable of this ObjsFile.
        :type non_owner_editable: bool
        """

        self._non_owner_editable = non_owner_editable

    @property
    def num_stars(self):
        """Gets the num_stars of this ObjsFile.


        :return: The num_stars of this ObjsFile.
        :rtype: int
        """
        return self._num_stars

    @num_stars.setter
    def num_stars(self, num_stars):
        """Sets the num_stars of this ObjsFile.


        :param num_stars: The num_stars of this ObjsFile.
        :type num_stars: int
        """

        self._num_stars = num_stars

    @property
    def original_h(self):
        """Gets the original_h of this ObjsFile.


        :return: The original_h of this ObjsFile.
        :rtype: int
        """
        return self._original_h

    @original_h.setter
    def original_h(self, original_h):
        """Sets the original_h of this ObjsFile.


        :param original_h: The original_h of this ObjsFile.
        :type original_h: int
        """

        self._original_h = original_h

    @property
    def original_w(self):
        """Gets the original_w of this ObjsFile.


        :return: The original_w of this ObjsFile.
        :rtype: int
        """
        return self._original_w

    @original_w.setter
    def original_w(self, original_w):
        """Sets the original_w of this ObjsFile.


        :param original_w: The original_w of this ObjsFile.
        :type original_w: int
        """

        self._original_w = original_w

    @property
    def permalink(self):
        """Gets the permalink of this ObjsFile.


        :return: The permalink of this ObjsFile.
        :rtype: str
        """
        return self._permalink

    @permalink.setter
    def permalink(self, permalink):
        """Sets the permalink of this ObjsFile.


        :param permalink: The permalink of this ObjsFile.
        :type permalink: str
        """

        self._permalink = permalink

    @property
    def permalink_public(self):
        """Gets the permalink_public of this ObjsFile.


        :return: The permalink_public of this ObjsFile.
        :rtype: str
        """
        return self._permalink_public

    @permalink_public.setter
    def permalink_public(self, permalink_public):
        """Sets the permalink_public of this ObjsFile.


        :param permalink_public: The permalink_public of this ObjsFile.
        :type permalink_public: str
        """

        self._permalink_public = permalink_public

    @property
    def pinned_info(self):
        """Gets the pinned_info of this ObjsFile.


        :return: The pinned_info of this ObjsFile.
        :rtype: object
        """
        return self._pinned_info

    @pinned_info.setter
    def pinned_info(self, pinned_info):
        """Sets the pinned_info of this ObjsFile.


        :param pinned_info: The pinned_info of this ObjsFile.
        :type pinned_info: object
        """

        self._pinned_info = pinned_info

    @property
    def pinned_to(self):
        """Gets the pinned_to of this ObjsFile.


        :return: The pinned_to of this ObjsFile.
        :rtype: List[str]
        """
        return self._pinned_to

    @pinned_to.setter
    def pinned_to(self, pinned_to):
        """Sets the pinned_to of this ObjsFile.


        :param pinned_to: The pinned_to of this ObjsFile.
        :type pinned_to: List[str]
        """

        self._pinned_to = pinned_to

    @property
    def pretty_type(self):
        """Gets the pretty_type of this ObjsFile.


        :return: The pretty_type of this ObjsFile.
        :rtype: str
        """
        return self._pretty_type

    @pretty_type.setter
    def pretty_type(self, pretty_type):
        """Sets the pretty_type of this ObjsFile.


        :param pretty_type: The pretty_type of this ObjsFile.
        :type pretty_type: str
        """

        self._pretty_type = pretty_type

    @property
    def preview(self):
        """Gets the preview of this ObjsFile.


        :return: The preview of this ObjsFile.
        :rtype: str
        """
        return self._preview

    @preview.setter
    def preview(self, preview):
        """Sets the preview of this ObjsFile.


        :param preview: The preview of this ObjsFile.
        :type preview: str
        """

        self._preview = preview

    @property
    def public_url_shared(self):
        """Gets the public_url_shared of this ObjsFile.


        :return: The public_url_shared of this ObjsFile.
        :rtype: bool
        """
        return self._public_url_shared

    @public_url_shared.setter
    def public_url_shared(self, public_url_shared):
        """Sets the public_url_shared of this ObjsFile.


        :param public_url_shared: The public_url_shared of this ObjsFile.
        :type public_url_shared: bool
        """

        self._public_url_shared = public_url_shared

    @property
    def reactions(self):
        """Gets the reactions of this ObjsFile.


        :return: The reactions of this ObjsFile.
        :rtype: List[ObjsReaction]
        """
        return self._reactions

    @reactions.setter
    def reactions(self, reactions):
        """Sets the reactions of this ObjsFile.


        :param reactions: The reactions of this ObjsFile.
        :type reactions: List[ObjsReaction]
        """

        self._reactions = reactions

    @property
    def shares(self):
        """Gets the shares of this ObjsFile.


        :return: The shares of this ObjsFile.
        :rtype: ObjsFileShares
        """
        return self._shares

    @shares.setter
    def shares(self, shares):
        """Sets the shares of this ObjsFile.


        :param shares: The shares of this ObjsFile.
        :type shares: ObjsFileShares
        """

        self._shares = shares

    @property
    def size(self):
        """Gets the size of this ObjsFile.


        :return: The size of this ObjsFile.
        :rtype: int
        """
        return self._size

    @size.setter
    def size(self, size):
        """Sets the size of this ObjsFile.


        :param size: The size of this ObjsFile.
        :type size: int
        """

        self._size = size

    @property
    def source_team(self):
        """Gets the source_team of this ObjsFile.


        :return: The source_team of this ObjsFile.
        :rtype: str
        """
        return self._source_team

    @source_team.setter
    def source_team(self, source_team):
        """Sets the source_team of this ObjsFile.


        :param source_team: The source_team of this ObjsFile.
        :type source_team: str
        """
        if source_team is not None and not re.search(r'^[T][A-Z0-9]{2,}$', source_team):
            raise ValueError("Invalid value for `source_team`, must be a follow pattern or equal to `/^[T][A-Z0-9]{2,}$/`")

        self._source_team = source_team

    @property
    def state(self):
        """Gets the state of this ObjsFile.


        :return: The state of this ObjsFile.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this ObjsFile.


        :param state: The state of this ObjsFile.
        :type state: str
        """

        self._state = state

    @property
    def thumb_1024(self):
        """Gets the thumb_1024 of this ObjsFile.


        :return: The thumb_1024 of this ObjsFile.
        :rtype: str
        """
        return self._thumb_1024

    @thumb_1024.setter
    def thumb_1024(self, thumb_1024):
        """Sets the thumb_1024 of this ObjsFile.


        :param thumb_1024: The thumb_1024 of this ObjsFile.
        :type thumb_1024: str
        """

        self._thumb_1024 = thumb_1024

    @property
    def thumb_1024_h(self):
        """Gets the thumb_1024_h of this ObjsFile.


        :return: The thumb_1024_h of this ObjsFile.
        :rtype: int
        """
        return self._thumb_1024_h

    @thumb_1024_h.setter
    def thumb_1024_h(self, thumb_1024_h):
        """Sets the thumb_1024_h of this ObjsFile.


        :param thumb_1024_h: The thumb_1024_h of this ObjsFile.
        :type thumb_1024_h: int
        """

        self._thumb_1024_h = thumb_1024_h

    @property
    def thumb_1024_w(self):
        """Gets the thumb_1024_w of this ObjsFile.


        :return: The thumb_1024_w of this ObjsFile.
        :rtype: int
        """
        return self._thumb_1024_w

    @thumb_1024_w.setter
    def thumb_1024_w(self, thumb_1024_w):
        """Sets the thumb_1024_w of this ObjsFile.


        :param thumb_1024_w: The thumb_1024_w of this ObjsFile.
        :type thumb_1024_w: int
        """

        self._thumb_1024_w = thumb_1024_w

    @property
    def thumb_160(self):
        """Gets the thumb_160 of this ObjsFile.


        :return: The thumb_160 of this ObjsFile.
        :rtype: str
        """
        return self._thumb_160

    @thumb_160.setter
    def thumb_160(self, thumb_160):
        """Sets the thumb_160 of this ObjsFile.


        :param thumb_160: The thumb_160 of this ObjsFile.
        :type thumb_160: str
        """

        self._thumb_160 = thumb_160

    @property
    def thumb_360(self):
        """Gets the thumb_360 of this ObjsFile.


        :return: The thumb_360 of this ObjsFile.
        :rtype: str
        """
        return self._thumb_360

    @thumb_360.setter
    def thumb_360(self, thumb_360):
        """Sets the thumb_360 of this ObjsFile.


        :param thumb_360: The thumb_360 of this ObjsFile.
        :type thumb_360: str
        """

        self._thumb_360 = thumb_360

    @property
    def thumb_360_h(self):
        """Gets the thumb_360_h of this ObjsFile.


        :return: The thumb_360_h of this ObjsFile.
        :rtype: int
        """
        return self._thumb_360_h

    @thumb_360_h.setter
    def thumb_360_h(self, thumb_360_h):
        """Sets the thumb_360_h of this ObjsFile.


        :param thumb_360_h: The thumb_360_h of this ObjsFile.
        :type thumb_360_h: int
        """

        self._thumb_360_h = thumb_360_h

    @property
    def thumb_360_w(self):
        """Gets the thumb_360_w of this ObjsFile.


        :return: The thumb_360_w of this ObjsFile.
        :rtype: int
        """
        return self._thumb_360_w

    @thumb_360_w.setter
    def thumb_360_w(self, thumb_360_w):
        """Sets the thumb_360_w of this ObjsFile.


        :param thumb_360_w: The thumb_360_w of this ObjsFile.
        :type thumb_360_w: int
        """

        self._thumb_360_w = thumb_360_w

    @property
    def thumb_480(self):
        """Gets the thumb_480 of this ObjsFile.


        :return: The thumb_480 of this ObjsFile.
        :rtype: str
        """
        return self._thumb_480

    @thumb_480.setter
    def thumb_480(self, thumb_480):
        """Sets the thumb_480 of this ObjsFile.


        :param thumb_480: The thumb_480 of this ObjsFile.
        :type thumb_480: str
        """

        self._thumb_480 = thumb_480

    @property
    def thumb_480_h(self):
        """Gets the thumb_480_h of this ObjsFile.


        :return: The thumb_480_h of this ObjsFile.
        :rtype: int
        """
        return self._thumb_480_h

    @thumb_480_h.setter
    def thumb_480_h(self, thumb_480_h):
        """Sets the thumb_480_h of this ObjsFile.


        :param thumb_480_h: The thumb_480_h of this ObjsFile.
        :type thumb_480_h: int
        """

        self._thumb_480_h = thumb_480_h

    @property
    def thumb_480_w(self):
        """Gets the thumb_480_w of this ObjsFile.


        :return: The thumb_480_w of this ObjsFile.
        :rtype: int
        """
        return self._thumb_480_w

    @thumb_480_w.setter
    def thumb_480_w(self, thumb_480_w):
        """Sets the thumb_480_w of this ObjsFile.


        :param thumb_480_w: The thumb_480_w of this ObjsFile.
        :type thumb_480_w: int
        """

        self._thumb_480_w = thumb_480_w

    @property
    def thumb_64(self):
        """Gets the thumb_64 of this ObjsFile.


        :return: The thumb_64 of this ObjsFile.
        :rtype: str
        """
        return self._thumb_64

    @thumb_64.setter
    def thumb_64(self, thumb_64):
        """Sets the thumb_64 of this ObjsFile.


        :param thumb_64: The thumb_64 of this ObjsFile.
        :type thumb_64: str
        """

        self._thumb_64 = thumb_64

    @property
    def thumb_720(self):
        """Gets the thumb_720 of this ObjsFile.


        :return: The thumb_720 of this ObjsFile.
        :rtype: str
        """
        return self._thumb_720

    @thumb_720.setter
    def thumb_720(self, thumb_720):
        """Sets the thumb_720 of this ObjsFile.


        :param thumb_720: The thumb_720 of this ObjsFile.
        :type thumb_720: str
        """

        self._thumb_720 = thumb_720

    @property
    def thumb_720_h(self):
        """Gets the thumb_720_h of this ObjsFile.


        :return: The thumb_720_h of this ObjsFile.
        :rtype: int
        """
        return self._thumb_720_h

    @thumb_720_h.setter
    def thumb_720_h(self, thumb_720_h):
        """Sets the thumb_720_h of this ObjsFile.


        :param thumb_720_h: The thumb_720_h of this ObjsFile.
        :type thumb_720_h: int
        """

        self._thumb_720_h = thumb_720_h

    @property
    def thumb_720_w(self):
        """Gets the thumb_720_w of this ObjsFile.


        :return: The thumb_720_w of this ObjsFile.
        :rtype: int
        """
        return self._thumb_720_w

    @thumb_720_w.setter
    def thumb_720_w(self, thumb_720_w):
        """Sets the thumb_720_w of this ObjsFile.


        :param thumb_720_w: The thumb_720_w of this ObjsFile.
        :type thumb_720_w: int
        """

        self._thumb_720_w = thumb_720_w

    @property
    def thumb_80(self):
        """Gets the thumb_80 of this ObjsFile.


        :return: The thumb_80 of this ObjsFile.
        :rtype: str
        """
        return self._thumb_80

    @thumb_80.setter
    def thumb_80(self, thumb_80):
        """Sets the thumb_80 of this ObjsFile.


        :param thumb_80: The thumb_80 of this ObjsFile.
        :type thumb_80: str
        """

        self._thumb_80 = thumb_80

    @property
    def thumb_800(self):
        """Gets the thumb_800 of this ObjsFile.


        :return: The thumb_800 of this ObjsFile.
        :rtype: str
        """
        return self._thumb_800

    @thumb_800.setter
    def thumb_800(self, thumb_800):
        """Sets the thumb_800 of this ObjsFile.


        :param thumb_800: The thumb_800 of this ObjsFile.
        :type thumb_800: str
        """

        self._thumb_800 = thumb_800

    @property
    def thumb_800_h(self):
        """Gets the thumb_800_h of this ObjsFile.


        :return: The thumb_800_h of this ObjsFile.
        :rtype: int
        """
        return self._thumb_800_h

    @thumb_800_h.setter
    def thumb_800_h(self, thumb_800_h):
        """Sets the thumb_800_h of this ObjsFile.


        :param thumb_800_h: The thumb_800_h of this ObjsFile.
        :type thumb_800_h: int
        """

        self._thumb_800_h = thumb_800_h

    @property
    def thumb_800_w(self):
        """Gets the thumb_800_w of this ObjsFile.


        :return: The thumb_800_w of this ObjsFile.
        :rtype: int
        """
        return self._thumb_800_w

    @thumb_800_w.setter
    def thumb_800_w(self, thumb_800_w):
        """Sets the thumb_800_w of this ObjsFile.


        :param thumb_800_w: The thumb_800_w of this ObjsFile.
        :type thumb_800_w: int
        """

        self._thumb_800_w = thumb_800_w

    @property
    def thumb_960(self):
        """Gets the thumb_960 of this ObjsFile.


        :return: The thumb_960 of this ObjsFile.
        :rtype: str
        """
        return self._thumb_960

    @thumb_960.setter
    def thumb_960(self, thumb_960):
        """Sets the thumb_960 of this ObjsFile.


        :param thumb_960: The thumb_960 of this ObjsFile.
        :type thumb_960: str
        """

        self._thumb_960 = thumb_960

    @property
    def thumb_960_h(self):
        """Gets the thumb_960_h of this ObjsFile.


        :return: The thumb_960_h of this ObjsFile.
        :rtype: int
        """
        return self._thumb_960_h

    @thumb_960_h.setter
    def thumb_960_h(self, thumb_960_h):
        """Sets the thumb_960_h of this ObjsFile.


        :param thumb_960_h: The thumb_960_h of this ObjsFile.
        :type thumb_960_h: int
        """

        self._thumb_960_h = thumb_960_h

    @property
    def thumb_960_w(self):
        """Gets the thumb_960_w of this ObjsFile.


        :return: The thumb_960_w of this ObjsFile.
        :rtype: int
        """
        return self._thumb_960_w

    @thumb_960_w.setter
    def thumb_960_w(self, thumb_960_w):
        """Sets the thumb_960_w of this ObjsFile.


        :param thumb_960_w: The thumb_960_w of this ObjsFile.
        :type thumb_960_w: int
        """

        self._thumb_960_w = thumb_960_w

    @property
    def thumb_tiny(self):
        """Gets the thumb_tiny of this ObjsFile.


        :return: The thumb_tiny of this ObjsFile.
        :rtype: str
        """
        return self._thumb_tiny

    @thumb_tiny.setter
    def thumb_tiny(self, thumb_tiny):
        """Sets the thumb_tiny of this ObjsFile.


        :param thumb_tiny: The thumb_tiny of this ObjsFile.
        :type thumb_tiny: str
        """

        self._thumb_tiny = thumb_tiny

    @property
    def timestamp(self):
        """Gets the timestamp of this ObjsFile.


        :return: The timestamp of this ObjsFile.
        :rtype: int
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp):
        """Sets the timestamp of this ObjsFile.


        :param timestamp: The timestamp of this ObjsFile.
        :type timestamp: int
        """

        self._timestamp = timestamp

    @property
    def title(self):
        """Gets the title of this ObjsFile.


        :return: The title of this ObjsFile.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this ObjsFile.


        :param title: The title of this ObjsFile.
        :type title: str
        """

        self._title = title

    @property
    def updated(self):
        """Gets the updated of this ObjsFile.


        :return: The updated of this ObjsFile.
        :rtype: int
        """
        return self._updated

    @updated.setter
    def updated(self, updated):
        """Sets the updated of this ObjsFile.


        :param updated: The updated of this ObjsFile.
        :type updated: int
        """

        self._updated = updated

    @property
    def url_private(self):
        """Gets the url_private of this ObjsFile.


        :return: The url_private of this ObjsFile.
        :rtype: str
        """
        return self._url_private

    @url_private.setter
    def url_private(self, url_private):
        """Sets the url_private of this ObjsFile.


        :param url_private: The url_private of this ObjsFile.
        :type url_private: str
        """

        self._url_private = url_private

    @property
    def url_private_download(self):
        """Gets the url_private_download of this ObjsFile.


        :return: The url_private_download of this ObjsFile.
        :rtype: str
        """
        return self._url_private_download

    @url_private_download.setter
    def url_private_download(self, url_private_download):
        """Sets the url_private_download of this ObjsFile.


        :param url_private_download: The url_private_download of this ObjsFile.
        :type url_private_download: str
        """

        self._url_private_download = url_private_download

    @property
    def user(self):
        """Gets the user of this ObjsFile.


        :return: The user of this ObjsFile.
        :rtype: str
        """
        return self._user

    @user.setter
    def user(self, user):
        """Sets the user of this ObjsFile.


        :param user: The user of this ObjsFile.
        :type user: str
        """

        self._user = user

    @property
    def user_team(self):
        """Gets the user_team of this ObjsFile.


        :return: The user_team of this ObjsFile.
        :rtype: str
        """
        return self._user_team

    @user_team.setter
    def user_team(self, user_team):
        """Sets the user_team of this ObjsFile.


        :param user_team: The user_team of this ObjsFile.
        :type user_team: str
        """
        if user_team is not None and not re.search(r'^[T][A-Z0-9]{2,}$', user_team):
            raise ValueError("Invalid value for `user_team`, must be a follow pattern or equal to `/^[T][A-Z0-9]{2,}$/`")

        self._user_team = user_team

    @property
    def username(self):
        """Gets the username of this ObjsFile.


        :return: The username of this ObjsFile.
        :rtype: str
        """
        return self._username

    @username.setter
    def username(self, username):
        """Sets the username of this ObjsFile.


        :param username: The username of this ObjsFile.
        :type username: str
        """

        self._username = username
