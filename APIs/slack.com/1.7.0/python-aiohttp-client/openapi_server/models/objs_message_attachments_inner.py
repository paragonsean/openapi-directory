# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ObjsMessageAttachmentsInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, fallback: str=None, id: int=None, image_bytes: int=None, image_height: int=None, image_url: str=None, image_width: int=None):
        """ObjsMessageAttachmentsInner - a model defined in OpenAPI

        :param fallback: The fallback of this ObjsMessageAttachmentsInner.
        :param id: The id of this ObjsMessageAttachmentsInner.
        :param image_bytes: The image_bytes of this ObjsMessageAttachmentsInner.
        :param image_height: The image_height of this ObjsMessageAttachmentsInner.
        :param image_url: The image_url of this ObjsMessageAttachmentsInner.
        :param image_width: The image_width of this ObjsMessageAttachmentsInner.
        """
        self.openapi_types = {
            'fallback': str,
            'id': int,
            'image_bytes': int,
            'image_height': int,
            'image_url': str,
            'image_width': int
        }

        self.attribute_map = {
            'fallback': 'fallback',
            'id': 'id',
            'image_bytes': 'image_bytes',
            'image_height': 'image_height',
            'image_url': 'image_url',
            'image_width': 'image_width'
        }

        self._fallback = fallback
        self._id = id
        self._image_bytes = image_bytes
        self._image_height = image_height
        self._image_url = image_url
        self._image_width = image_width

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ObjsMessageAttachmentsInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The objs_message_attachments_inner of this ObjsMessageAttachmentsInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def fallback(self):
        """Gets the fallback of this ObjsMessageAttachmentsInner.


        :return: The fallback of this ObjsMessageAttachmentsInner.
        :rtype: str
        """
        return self._fallback

    @fallback.setter
    def fallback(self, fallback):
        """Sets the fallback of this ObjsMessageAttachmentsInner.


        :param fallback: The fallback of this ObjsMessageAttachmentsInner.
        :type fallback: str
        """

        self._fallback = fallback

    @property
    def id(self):
        """Gets the id of this ObjsMessageAttachmentsInner.


        :return: The id of this ObjsMessageAttachmentsInner.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ObjsMessageAttachmentsInner.


        :param id: The id of this ObjsMessageAttachmentsInner.
        :type id: int
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")

        self._id = id

    @property
    def image_bytes(self):
        """Gets the image_bytes of this ObjsMessageAttachmentsInner.


        :return: The image_bytes of this ObjsMessageAttachmentsInner.
        :rtype: int
        """
        return self._image_bytes

    @image_bytes.setter
    def image_bytes(self, image_bytes):
        """Sets the image_bytes of this ObjsMessageAttachmentsInner.


        :param image_bytes: The image_bytes of this ObjsMessageAttachmentsInner.
        :type image_bytes: int
        """

        self._image_bytes = image_bytes

    @property
    def image_height(self):
        """Gets the image_height of this ObjsMessageAttachmentsInner.


        :return: The image_height of this ObjsMessageAttachmentsInner.
        :rtype: int
        """
        return self._image_height

    @image_height.setter
    def image_height(self, image_height):
        """Sets the image_height of this ObjsMessageAttachmentsInner.


        :param image_height: The image_height of this ObjsMessageAttachmentsInner.
        :type image_height: int
        """

        self._image_height = image_height

    @property
    def image_url(self):
        """Gets the image_url of this ObjsMessageAttachmentsInner.


        :return: The image_url of this ObjsMessageAttachmentsInner.
        :rtype: str
        """
        return self._image_url

    @image_url.setter
    def image_url(self, image_url):
        """Sets the image_url of this ObjsMessageAttachmentsInner.


        :param image_url: The image_url of this ObjsMessageAttachmentsInner.
        :type image_url: str
        """

        self._image_url = image_url

    @property
    def image_width(self):
        """Gets the image_width of this ObjsMessageAttachmentsInner.


        :return: The image_width of this ObjsMessageAttachmentsInner.
        :rtype: int
        """
        return self._image_width

    @image_width.setter
    def image_width(self, image_width):
        """Sets the image_width of this ObjsMessageAttachmentsInner.


        :param image_width: The image_width of this ObjsMessageAttachmentsInner.
        :type image_width: int
        """

        self._image_width = image_width
