# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
import re
from openapi_server import util


class ObjsUserProfile(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, always_active: bool=None, api_app_id: str=None, avatar_hash: str=None, bot_id: str=None, display_name: str=None, display_name_normalized: str=None, email: str=None, fields: List[object]=None, first_name: str=None, guest_expiration_ts: int=None, guest_invited_by: str=None, image_1024: str=None, image_192: str=None, image_24: str=None, image_32: str=None, image_48: str=None, image_512: str=None, image_72: str=None, image_original: str=None, is_app_user: bool=None, is_custom_image: bool=None, is_restricted: bool=None, is_ultra_restricted: bool=None, last_avatar_image_hash: str=None, last_name: str=None, memberships_count: int=None, name: str=None, phone: str=None, pronouns: str=None, real_name: str=None, real_name_normalized: str=None, skype: str=None, status_default_emoji: str=None, status_default_text: str=None, status_default_text_canonical: str=None, status_emoji: str=None, status_expiration: int=None, status_text: str=None, status_text_canonical: str=None, team: str=None, title: str=None, updated: int=None, user_id: str=None, username: str=None):
        """ObjsUserProfile - a model defined in OpenAPI

        :param always_active: The always_active of this ObjsUserProfile.
        :param api_app_id: The api_app_id of this ObjsUserProfile.
        :param avatar_hash: The avatar_hash of this ObjsUserProfile.
        :param bot_id: The bot_id of this ObjsUserProfile.
        :param display_name: The display_name of this ObjsUserProfile.
        :param display_name_normalized: The display_name_normalized of this ObjsUserProfile.
        :param email: The email of this ObjsUserProfile.
        :param fields: The fields of this ObjsUserProfile.
        :param first_name: The first_name of this ObjsUserProfile.
        :param guest_expiration_ts: The guest_expiration_ts of this ObjsUserProfile.
        :param guest_invited_by: The guest_invited_by of this ObjsUserProfile.
        :param image_1024: The image_1024 of this ObjsUserProfile.
        :param image_192: The image_192 of this ObjsUserProfile.
        :param image_24: The image_24 of this ObjsUserProfile.
        :param image_32: The image_32 of this ObjsUserProfile.
        :param image_48: The image_48 of this ObjsUserProfile.
        :param image_512: The image_512 of this ObjsUserProfile.
        :param image_72: The image_72 of this ObjsUserProfile.
        :param image_original: The image_original of this ObjsUserProfile.
        :param is_app_user: The is_app_user of this ObjsUserProfile.
        :param is_custom_image: The is_custom_image of this ObjsUserProfile.
        :param is_restricted: The is_restricted of this ObjsUserProfile.
        :param is_ultra_restricted: The is_ultra_restricted of this ObjsUserProfile.
        :param last_avatar_image_hash: The last_avatar_image_hash of this ObjsUserProfile.
        :param last_name: The last_name of this ObjsUserProfile.
        :param memberships_count: The memberships_count of this ObjsUserProfile.
        :param name: The name of this ObjsUserProfile.
        :param phone: The phone of this ObjsUserProfile.
        :param pronouns: The pronouns of this ObjsUserProfile.
        :param real_name: The real_name of this ObjsUserProfile.
        :param real_name_normalized: The real_name_normalized of this ObjsUserProfile.
        :param skype: The skype of this ObjsUserProfile.
        :param status_default_emoji: The status_default_emoji of this ObjsUserProfile.
        :param status_default_text: The status_default_text of this ObjsUserProfile.
        :param status_default_text_canonical: The status_default_text_canonical of this ObjsUserProfile.
        :param status_emoji: The status_emoji of this ObjsUserProfile.
        :param status_expiration: The status_expiration of this ObjsUserProfile.
        :param status_text: The status_text of this ObjsUserProfile.
        :param status_text_canonical: The status_text_canonical of this ObjsUserProfile.
        :param team: The team of this ObjsUserProfile.
        :param title: The title of this ObjsUserProfile.
        :param updated: The updated of this ObjsUserProfile.
        :param user_id: The user_id of this ObjsUserProfile.
        :param username: The username of this ObjsUserProfile.
        """
        self.openapi_types = {
            'always_active': bool,
            'api_app_id': str,
            'avatar_hash': str,
            'bot_id': str,
            'display_name': str,
            'display_name_normalized': str,
            'email': str,
            'fields': List[object],
            'first_name': str,
            'guest_expiration_ts': int,
            'guest_invited_by': str,
            'image_1024': str,
            'image_192': str,
            'image_24': str,
            'image_32': str,
            'image_48': str,
            'image_512': str,
            'image_72': str,
            'image_original': str,
            'is_app_user': bool,
            'is_custom_image': bool,
            'is_restricted': bool,
            'is_ultra_restricted': bool,
            'last_avatar_image_hash': str,
            'last_name': str,
            'memberships_count': int,
            'name': str,
            'phone': str,
            'pronouns': str,
            'real_name': str,
            'real_name_normalized': str,
            'skype': str,
            'status_default_emoji': str,
            'status_default_text': str,
            'status_default_text_canonical': str,
            'status_emoji': str,
            'status_expiration': int,
            'status_text': str,
            'status_text_canonical': str,
            'team': str,
            'title': str,
            'updated': int,
            'user_id': str,
            'username': str
        }

        self.attribute_map = {
            'always_active': 'always_active',
            'api_app_id': 'api_app_id',
            'avatar_hash': 'avatar_hash',
            'bot_id': 'bot_id',
            'display_name': 'display_name',
            'display_name_normalized': 'display_name_normalized',
            'email': 'email',
            'fields': 'fields',
            'first_name': 'first_name',
            'guest_expiration_ts': 'guest_expiration_ts',
            'guest_invited_by': 'guest_invited_by',
            'image_1024': 'image_1024',
            'image_192': 'image_192',
            'image_24': 'image_24',
            'image_32': 'image_32',
            'image_48': 'image_48',
            'image_512': 'image_512',
            'image_72': 'image_72',
            'image_original': 'image_original',
            'is_app_user': 'is_app_user',
            'is_custom_image': 'is_custom_image',
            'is_restricted': 'is_restricted',
            'is_ultra_restricted': 'is_ultra_restricted',
            'last_avatar_image_hash': 'last_avatar_image_hash',
            'last_name': 'last_name',
            'memberships_count': 'memberships_count',
            'name': 'name',
            'phone': 'phone',
            'pronouns': 'pronouns',
            'real_name': 'real_name',
            'real_name_normalized': 'real_name_normalized',
            'skype': 'skype',
            'status_default_emoji': 'status_default_emoji',
            'status_default_text': 'status_default_text',
            'status_default_text_canonical': 'status_default_text_canonical',
            'status_emoji': 'status_emoji',
            'status_expiration': 'status_expiration',
            'status_text': 'status_text',
            'status_text_canonical': 'status_text_canonical',
            'team': 'team',
            'title': 'title',
            'updated': 'updated',
            'user_id': 'user_id',
            'username': 'username'
        }

        self._always_active = always_active
        self._api_app_id = api_app_id
        self._avatar_hash = avatar_hash
        self._bot_id = bot_id
        self._display_name = display_name
        self._display_name_normalized = display_name_normalized
        self._email = email
        self._fields = fields
        self._first_name = first_name
        self._guest_expiration_ts = guest_expiration_ts
        self._guest_invited_by = guest_invited_by
        self._image_1024 = image_1024
        self._image_192 = image_192
        self._image_24 = image_24
        self._image_32 = image_32
        self._image_48 = image_48
        self._image_512 = image_512
        self._image_72 = image_72
        self._image_original = image_original
        self._is_app_user = is_app_user
        self._is_custom_image = is_custom_image
        self._is_restricted = is_restricted
        self._is_ultra_restricted = is_ultra_restricted
        self._last_avatar_image_hash = last_avatar_image_hash
        self._last_name = last_name
        self._memberships_count = memberships_count
        self._name = name
        self._phone = phone
        self._pronouns = pronouns
        self._real_name = real_name
        self._real_name_normalized = real_name_normalized
        self._skype = skype
        self._status_default_emoji = status_default_emoji
        self._status_default_text = status_default_text
        self._status_default_text_canonical = status_default_text_canonical
        self._status_emoji = status_emoji
        self._status_expiration = status_expiration
        self._status_text = status_text
        self._status_text_canonical = status_text_canonical
        self._team = team
        self._title = title
        self._updated = updated
        self._user_id = user_id
        self._username = username

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ObjsUserProfile':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The objs_user_profile of this ObjsUserProfile.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def always_active(self):
        """Gets the always_active of this ObjsUserProfile.


        :return: The always_active of this ObjsUserProfile.
        :rtype: bool
        """
        return self._always_active

    @always_active.setter
    def always_active(self, always_active):
        """Sets the always_active of this ObjsUserProfile.


        :param always_active: The always_active of this ObjsUserProfile.
        :type always_active: bool
        """

        self._always_active = always_active

    @property
    def api_app_id(self):
        """Gets the api_app_id of this ObjsUserProfile.


        :return: The api_app_id of this ObjsUserProfile.
        :rtype: str
        """
        return self._api_app_id

    @api_app_id.setter
    def api_app_id(self, api_app_id):
        """Sets the api_app_id of this ObjsUserProfile.


        :param api_app_id: The api_app_id of this ObjsUserProfile.
        :type api_app_id: str
        """
        if api_app_id is not None and not re.search(r'^(A[A-Z0-9]{1,})?$', api_app_id):
            raise ValueError("Invalid value for `api_app_id`, must be a follow pattern or equal to `/^(A[A-Z0-9]{1,})?$/`")

        self._api_app_id = api_app_id

    @property
    def avatar_hash(self):
        """Gets the avatar_hash of this ObjsUserProfile.


        :return: The avatar_hash of this ObjsUserProfile.
        :rtype: str
        """
        return self._avatar_hash

    @avatar_hash.setter
    def avatar_hash(self, avatar_hash):
        """Sets the avatar_hash of this ObjsUserProfile.


        :param avatar_hash: The avatar_hash of this ObjsUserProfile.
        :type avatar_hash: str
        """
        if avatar_hash is None:
            raise ValueError("Invalid value for `avatar_hash`, must not be `None`")

        self._avatar_hash = avatar_hash

    @property
    def bot_id(self):
        """Gets the bot_id of this ObjsUserProfile.


        :return: The bot_id of this ObjsUserProfile.
        :rtype: str
        """
        return self._bot_id

    @bot_id.setter
    def bot_id(self, bot_id):
        """Sets the bot_id of this ObjsUserProfile.


        :param bot_id: The bot_id of this ObjsUserProfile.
        :type bot_id: str
        """
        if bot_id is not None and not re.search(r'^B[A-Z0-9]{8,}$', bot_id):
            raise ValueError("Invalid value for `bot_id`, must be a follow pattern or equal to `/^B[A-Z0-9]{8,}$/`")

        self._bot_id = bot_id

    @property
    def display_name(self):
        """Gets the display_name of this ObjsUserProfile.


        :return: The display_name of this ObjsUserProfile.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this ObjsUserProfile.


        :param display_name: The display_name of this ObjsUserProfile.
        :type display_name: str
        """
        if display_name is None:
            raise ValueError("Invalid value for `display_name`, must not be `None`")

        self._display_name = display_name

    @property
    def display_name_normalized(self):
        """Gets the display_name_normalized of this ObjsUserProfile.


        :return: The display_name_normalized of this ObjsUserProfile.
        :rtype: str
        """
        return self._display_name_normalized

    @display_name_normalized.setter
    def display_name_normalized(self, display_name_normalized):
        """Sets the display_name_normalized of this ObjsUserProfile.


        :param display_name_normalized: The display_name_normalized of this ObjsUserProfile.
        :type display_name_normalized: str
        """
        if display_name_normalized is None:
            raise ValueError("Invalid value for `display_name_normalized`, must not be `None`")

        self._display_name_normalized = display_name_normalized

    @property
    def email(self):
        """Gets the email of this ObjsUserProfile.


        :return: The email of this ObjsUserProfile.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this ObjsUserProfile.


        :param email: The email of this ObjsUserProfile.
        :type email: str
        """

        self._email = email

    @property
    def fields(self):
        """Gets the fields of this ObjsUserProfile.


        :return: The fields of this ObjsUserProfile.
        :rtype: List[object]
        """
        return self._fields

    @fields.setter
    def fields(self, fields):
        """Sets the fields of this ObjsUserProfile.


        :param fields: The fields of this ObjsUserProfile.
        :type fields: List[object]
        """
        if fields is None:
            raise ValueError("Invalid value for `fields`, must not be `None`")

        self._fields = fields

    @property
    def first_name(self):
        """Gets the first_name of this ObjsUserProfile.


        :return: The first_name of this ObjsUserProfile.
        :rtype: str
        """
        return self._first_name

    @first_name.setter
    def first_name(self, first_name):
        """Sets the first_name of this ObjsUserProfile.


        :param first_name: The first_name of this ObjsUserProfile.
        :type first_name: str
        """

        self._first_name = first_name

    @property
    def guest_expiration_ts(self):
        """Gets the guest_expiration_ts of this ObjsUserProfile.


        :return: The guest_expiration_ts of this ObjsUserProfile.
        :rtype: int
        """
        return self._guest_expiration_ts

    @guest_expiration_ts.setter
    def guest_expiration_ts(self, guest_expiration_ts):
        """Sets the guest_expiration_ts of this ObjsUserProfile.


        :param guest_expiration_ts: The guest_expiration_ts of this ObjsUserProfile.
        :type guest_expiration_ts: int
        """

        self._guest_expiration_ts = guest_expiration_ts

    @property
    def guest_invited_by(self):
        """Gets the guest_invited_by of this ObjsUserProfile.


        :return: The guest_invited_by of this ObjsUserProfile.
        :rtype: str
        """
        return self._guest_invited_by

    @guest_invited_by.setter
    def guest_invited_by(self, guest_invited_by):
        """Sets the guest_invited_by of this ObjsUserProfile.


        :param guest_invited_by: The guest_invited_by of this ObjsUserProfile.
        :type guest_invited_by: str
        """

        self._guest_invited_by = guest_invited_by

    @property
    def image_1024(self):
        """Gets the image_1024 of this ObjsUserProfile.


        :return: The image_1024 of this ObjsUserProfile.
        :rtype: str
        """
        return self._image_1024

    @image_1024.setter
    def image_1024(self, image_1024):
        """Sets the image_1024 of this ObjsUserProfile.


        :param image_1024: The image_1024 of this ObjsUserProfile.
        :type image_1024: str
        """

        self._image_1024 = image_1024

    @property
    def image_192(self):
        """Gets the image_192 of this ObjsUserProfile.


        :return: The image_192 of this ObjsUserProfile.
        :rtype: str
        """
        return self._image_192

    @image_192.setter
    def image_192(self, image_192):
        """Sets the image_192 of this ObjsUserProfile.


        :param image_192: The image_192 of this ObjsUserProfile.
        :type image_192: str
        """

        self._image_192 = image_192

    @property
    def image_24(self):
        """Gets the image_24 of this ObjsUserProfile.


        :return: The image_24 of this ObjsUserProfile.
        :rtype: str
        """
        return self._image_24

    @image_24.setter
    def image_24(self, image_24):
        """Sets the image_24 of this ObjsUserProfile.


        :param image_24: The image_24 of this ObjsUserProfile.
        :type image_24: str
        """

        self._image_24 = image_24

    @property
    def image_32(self):
        """Gets the image_32 of this ObjsUserProfile.


        :return: The image_32 of this ObjsUserProfile.
        :rtype: str
        """
        return self._image_32

    @image_32.setter
    def image_32(self, image_32):
        """Sets the image_32 of this ObjsUserProfile.


        :param image_32: The image_32 of this ObjsUserProfile.
        :type image_32: str
        """

        self._image_32 = image_32

    @property
    def image_48(self):
        """Gets the image_48 of this ObjsUserProfile.


        :return: The image_48 of this ObjsUserProfile.
        :rtype: str
        """
        return self._image_48

    @image_48.setter
    def image_48(self, image_48):
        """Sets the image_48 of this ObjsUserProfile.


        :param image_48: The image_48 of this ObjsUserProfile.
        :type image_48: str
        """

        self._image_48 = image_48

    @property
    def image_512(self):
        """Gets the image_512 of this ObjsUserProfile.


        :return: The image_512 of this ObjsUserProfile.
        :rtype: str
        """
        return self._image_512

    @image_512.setter
    def image_512(self, image_512):
        """Sets the image_512 of this ObjsUserProfile.


        :param image_512: The image_512 of this ObjsUserProfile.
        :type image_512: str
        """

        self._image_512 = image_512

    @property
    def image_72(self):
        """Gets the image_72 of this ObjsUserProfile.


        :return: The image_72 of this ObjsUserProfile.
        :rtype: str
        """
        return self._image_72

    @image_72.setter
    def image_72(self, image_72):
        """Sets the image_72 of this ObjsUserProfile.


        :param image_72: The image_72 of this ObjsUserProfile.
        :type image_72: str
        """

        self._image_72 = image_72

    @property
    def image_original(self):
        """Gets the image_original of this ObjsUserProfile.


        :return: The image_original of this ObjsUserProfile.
        :rtype: str
        """
        return self._image_original

    @image_original.setter
    def image_original(self, image_original):
        """Sets the image_original of this ObjsUserProfile.


        :param image_original: The image_original of this ObjsUserProfile.
        :type image_original: str
        """

        self._image_original = image_original

    @property
    def is_app_user(self):
        """Gets the is_app_user of this ObjsUserProfile.


        :return: The is_app_user of this ObjsUserProfile.
        :rtype: bool
        """
        return self._is_app_user

    @is_app_user.setter
    def is_app_user(self, is_app_user):
        """Sets the is_app_user of this ObjsUserProfile.


        :param is_app_user: The is_app_user of this ObjsUserProfile.
        :type is_app_user: bool
        """

        self._is_app_user = is_app_user

    @property
    def is_custom_image(self):
        """Gets the is_custom_image of this ObjsUserProfile.


        :return: The is_custom_image of this ObjsUserProfile.
        :rtype: bool
        """
        return self._is_custom_image

    @is_custom_image.setter
    def is_custom_image(self, is_custom_image):
        """Sets the is_custom_image of this ObjsUserProfile.


        :param is_custom_image: The is_custom_image of this ObjsUserProfile.
        :type is_custom_image: bool
        """

        self._is_custom_image = is_custom_image

    @property
    def is_restricted(self):
        """Gets the is_restricted of this ObjsUserProfile.


        :return: The is_restricted of this ObjsUserProfile.
        :rtype: bool
        """
        return self._is_restricted

    @is_restricted.setter
    def is_restricted(self, is_restricted):
        """Sets the is_restricted of this ObjsUserProfile.


        :param is_restricted: The is_restricted of this ObjsUserProfile.
        :type is_restricted: bool
        """

        self._is_restricted = is_restricted

    @property
    def is_ultra_restricted(self):
        """Gets the is_ultra_restricted of this ObjsUserProfile.


        :return: The is_ultra_restricted of this ObjsUserProfile.
        :rtype: bool
        """
        return self._is_ultra_restricted

    @is_ultra_restricted.setter
    def is_ultra_restricted(self, is_ultra_restricted):
        """Sets the is_ultra_restricted of this ObjsUserProfile.


        :param is_ultra_restricted: The is_ultra_restricted of this ObjsUserProfile.
        :type is_ultra_restricted: bool
        """

        self._is_ultra_restricted = is_ultra_restricted

    @property
    def last_avatar_image_hash(self):
        """Gets the last_avatar_image_hash of this ObjsUserProfile.


        :return: The last_avatar_image_hash of this ObjsUserProfile.
        :rtype: str
        """
        return self._last_avatar_image_hash

    @last_avatar_image_hash.setter
    def last_avatar_image_hash(self, last_avatar_image_hash):
        """Sets the last_avatar_image_hash of this ObjsUserProfile.


        :param last_avatar_image_hash: The last_avatar_image_hash of this ObjsUserProfile.
        :type last_avatar_image_hash: str
        """

        self._last_avatar_image_hash = last_avatar_image_hash

    @property
    def last_name(self):
        """Gets the last_name of this ObjsUserProfile.


        :return: The last_name of this ObjsUserProfile.
        :rtype: str
        """
        return self._last_name

    @last_name.setter
    def last_name(self, last_name):
        """Sets the last_name of this ObjsUserProfile.


        :param last_name: The last_name of this ObjsUserProfile.
        :type last_name: str
        """

        self._last_name = last_name

    @property
    def memberships_count(self):
        """Gets the memberships_count of this ObjsUserProfile.


        :return: The memberships_count of this ObjsUserProfile.
        :rtype: int
        """
        return self._memberships_count

    @memberships_count.setter
    def memberships_count(self, memberships_count):
        """Sets the memberships_count of this ObjsUserProfile.


        :param memberships_count: The memberships_count of this ObjsUserProfile.
        :type memberships_count: int
        """

        self._memberships_count = memberships_count

    @property
    def name(self):
        """Gets the name of this ObjsUserProfile.


        :return: The name of this ObjsUserProfile.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ObjsUserProfile.


        :param name: The name of this ObjsUserProfile.
        :type name: str
        """

        self._name = name

    @property
    def phone(self):
        """Gets the phone of this ObjsUserProfile.


        :return: The phone of this ObjsUserProfile.
        :rtype: str
        """
        return self._phone

    @phone.setter
    def phone(self, phone):
        """Sets the phone of this ObjsUserProfile.


        :param phone: The phone of this ObjsUserProfile.
        :type phone: str
        """
        if phone is None:
            raise ValueError("Invalid value for `phone`, must not be `None`")

        self._phone = phone

    @property
    def pronouns(self):
        """Gets the pronouns of this ObjsUserProfile.


        :return: The pronouns of this ObjsUserProfile.
        :rtype: str
        """
        return self._pronouns

    @pronouns.setter
    def pronouns(self, pronouns):
        """Sets the pronouns of this ObjsUserProfile.


        :param pronouns: The pronouns of this ObjsUserProfile.
        :type pronouns: str
        """

        self._pronouns = pronouns

    @property
    def real_name(self):
        """Gets the real_name of this ObjsUserProfile.


        :return: The real_name of this ObjsUserProfile.
        :rtype: str
        """
        return self._real_name

    @real_name.setter
    def real_name(self, real_name):
        """Sets the real_name of this ObjsUserProfile.


        :param real_name: The real_name of this ObjsUserProfile.
        :type real_name: str
        """
        if real_name is None:
            raise ValueError("Invalid value for `real_name`, must not be `None`")

        self._real_name = real_name

    @property
    def real_name_normalized(self):
        """Gets the real_name_normalized of this ObjsUserProfile.


        :return: The real_name_normalized of this ObjsUserProfile.
        :rtype: str
        """
        return self._real_name_normalized

    @real_name_normalized.setter
    def real_name_normalized(self, real_name_normalized):
        """Sets the real_name_normalized of this ObjsUserProfile.


        :param real_name_normalized: The real_name_normalized of this ObjsUserProfile.
        :type real_name_normalized: str
        """
        if real_name_normalized is None:
            raise ValueError("Invalid value for `real_name_normalized`, must not be `None`")

        self._real_name_normalized = real_name_normalized

    @property
    def skype(self):
        """Gets the skype of this ObjsUserProfile.


        :return: The skype of this ObjsUserProfile.
        :rtype: str
        """
        return self._skype

    @skype.setter
    def skype(self, skype):
        """Sets the skype of this ObjsUserProfile.


        :param skype: The skype of this ObjsUserProfile.
        :type skype: str
        """
        if skype is None:
            raise ValueError("Invalid value for `skype`, must not be `None`")

        self._skype = skype

    @property
    def status_default_emoji(self):
        """Gets the status_default_emoji of this ObjsUserProfile.


        :return: The status_default_emoji of this ObjsUserProfile.
        :rtype: str
        """
        return self._status_default_emoji

    @status_default_emoji.setter
    def status_default_emoji(self, status_default_emoji):
        """Sets the status_default_emoji of this ObjsUserProfile.


        :param status_default_emoji: The status_default_emoji of this ObjsUserProfile.
        :type status_default_emoji: str
        """

        self._status_default_emoji = status_default_emoji

    @property
    def status_default_text(self):
        """Gets the status_default_text of this ObjsUserProfile.


        :return: The status_default_text of this ObjsUserProfile.
        :rtype: str
        """
        return self._status_default_text

    @status_default_text.setter
    def status_default_text(self, status_default_text):
        """Sets the status_default_text of this ObjsUserProfile.


        :param status_default_text: The status_default_text of this ObjsUserProfile.
        :type status_default_text: str
        """

        self._status_default_text = status_default_text

    @property
    def status_default_text_canonical(self):
        """Gets the status_default_text_canonical of this ObjsUserProfile.


        :return: The status_default_text_canonical of this ObjsUserProfile.
        :rtype: str
        """
        return self._status_default_text_canonical

    @status_default_text_canonical.setter
    def status_default_text_canonical(self, status_default_text_canonical):
        """Sets the status_default_text_canonical of this ObjsUserProfile.


        :param status_default_text_canonical: The status_default_text_canonical of this ObjsUserProfile.
        :type status_default_text_canonical: str
        """

        self._status_default_text_canonical = status_default_text_canonical

    @property
    def status_emoji(self):
        """Gets the status_emoji of this ObjsUserProfile.


        :return: The status_emoji of this ObjsUserProfile.
        :rtype: str
        """
        return self._status_emoji

    @status_emoji.setter
    def status_emoji(self, status_emoji):
        """Sets the status_emoji of this ObjsUserProfile.


        :param status_emoji: The status_emoji of this ObjsUserProfile.
        :type status_emoji: str
        """
        if status_emoji is None:
            raise ValueError("Invalid value for `status_emoji`, must not be `None`")

        self._status_emoji = status_emoji

    @property
    def status_expiration(self):
        """Gets the status_expiration of this ObjsUserProfile.


        :return: The status_expiration of this ObjsUserProfile.
        :rtype: int
        """
        return self._status_expiration

    @status_expiration.setter
    def status_expiration(self, status_expiration):
        """Sets the status_expiration of this ObjsUserProfile.


        :param status_expiration: The status_expiration of this ObjsUserProfile.
        :type status_expiration: int
        """

        self._status_expiration = status_expiration

    @property
    def status_text(self):
        """Gets the status_text of this ObjsUserProfile.


        :return: The status_text of this ObjsUserProfile.
        :rtype: str
        """
        return self._status_text

    @status_text.setter
    def status_text(self, status_text):
        """Sets the status_text of this ObjsUserProfile.


        :param status_text: The status_text of this ObjsUserProfile.
        :type status_text: str
        """
        if status_text is None:
            raise ValueError("Invalid value for `status_text`, must not be `None`")

        self._status_text = status_text

    @property
    def status_text_canonical(self):
        """Gets the status_text_canonical of this ObjsUserProfile.


        :return: The status_text_canonical of this ObjsUserProfile.
        :rtype: str
        """
        return self._status_text_canonical

    @status_text_canonical.setter
    def status_text_canonical(self, status_text_canonical):
        """Sets the status_text_canonical of this ObjsUserProfile.


        :param status_text_canonical: The status_text_canonical of this ObjsUserProfile.
        :type status_text_canonical: str
        """

        self._status_text_canonical = status_text_canonical

    @property
    def team(self):
        """Gets the team of this ObjsUserProfile.


        :return: The team of this ObjsUserProfile.
        :rtype: str
        """
        return self._team

    @team.setter
    def team(self, team):
        """Sets the team of this ObjsUserProfile.


        :param team: The team of this ObjsUserProfile.
        :type team: str
        """
        if team is not None and not re.search(r'^[TE][A-Z0-9]{8,}$', team):
            raise ValueError("Invalid value for `team`, must be a follow pattern or equal to `/^[TE][A-Z0-9]{8,}$/`")

        self._team = team

    @property
    def title(self):
        """Gets the title of this ObjsUserProfile.


        :return: The title of this ObjsUserProfile.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this ObjsUserProfile.


        :param title: The title of this ObjsUserProfile.
        :type title: str
        """
        if title is None:
            raise ValueError("Invalid value for `title`, must not be `None`")

        self._title = title

    @property
    def updated(self):
        """Gets the updated of this ObjsUserProfile.


        :return: The updated of this ObjsUserProfile.
        :rtype: int
        """
        return self._updated

    @updated.setter
    def updated(self, updated):
        """Sets the updated of this ObjsUserProfile.


        :param updated: The updated of this ObjsUserProfile.
        :type updated: int
        """

        self._updated = updated

    @property
    def user_id(self):
        """Gets the user_id of this ObjsUserProfile.


        :return: The user_id of this ObjsUserProfile.
        :rtype: str
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id):
        """Sets the user_id of this ObjsUserProfile.


        :param user_id: The user_id of this ObjsUserProfile.
        :type user_id: str
        """

        self._user_id = user_id

    @property
    def username(self):
        """Gets the username of this ObjsUserProfile.


        :return: The username of this ObjsUserProfile.
        :rtype: str
        """
        return self._username

    @username.setter
    def username(self, username):
        """Sets the username of this ObjsUserProfile.


        :param username: The username of this ObjsUserProfile.
        :type username: str
        """

        self._username = username
