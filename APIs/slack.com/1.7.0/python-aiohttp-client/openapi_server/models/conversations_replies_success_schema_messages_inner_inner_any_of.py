# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.objs_user_profile_short import ObjsUserProfileShort
import re
from openapi_server import util


class ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, last_read: str=None, latest_reply: str=None, reply_count: int=None, reply_users: list[str]=None, reply_users_count: int=None, source_team: str=None, subscribed: bool=None, team: str=None, text: str=None, thread_ts: str=None, ts: str=None, type: str=None, unread_count: int=None, user: str=None, user_profile: ObjsUserProfileShort=None, user_team: str=None):
        """ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf - a model defined in OpenAPI

        :param last_read: The last_read of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf.
        :param latest_reply: The latest_reply of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf.
        :param reply_count: The reply_count of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf.
        :param reply_users: The reply_users of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf.
        :param reply_users_count: The reply_users_count of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf.
        :param source_team: The source_team of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf.
        :param subscribed: The subscribed of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf.
        :param team: The team of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf.
        :param text: The text of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf.
        :param thread_ts: The thread_ts of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf.
        :param ts: The ts of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf.
        :param type: The type of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf.
        :param unread_count: The unread_count of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf.
        :param user: The user of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf.
        :param user_profile: The user_profile of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf.
        :param user_team: The user_team of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf.
        """
        self.openapi_types = {
            'last_read': str,
            'latest_reply': str,
            'reply_count': int,
            'reply_users': list[str],
            'reply_users_count': int,
            'source_team': str,
            'subscribed': bool,
            'team': str,
            'text': str,
            'thread_ts': str,
            'ts': str,
            'type': str,
            'unread_count': int,
            'user': str,
            'user_profile': ObjsUserProfileShort,
            'user_team': str
        }

        self.attribute_map = {
            'last_read': 'last_read',
            'latest_reply': 'latest_reply',
            'reply_count': 'reply_count',
            'reply_users': 'reply_users',
            'reply_users_count': 'reply_users_count',
            'source_team': 'source_team',
            'subscribed': 'subscribed',
            'team': 'team',
            'text': 'text',
            'thread_ts': 'thread_ts',
            'ts': 'ts',
            'type': 'type',
            'unread_count': 'unread_count',
            'user': 'user',
            'user_profile': 'user_profile',
            'user_team': 'user_team'
        }

        self._last_read = last_read
        self._latest_reply = latest_reply
        self._reply_count = reply_count
        self._reply_users = reply_users
        self._reply_users_count = reply_users_count
        self._source_team = source_team
        self._subscribed = subscribed
        self._team = team
        self._text = text
        self._thread_ts = thread_ts
        self._ts = ts
        self._type = type
        self._unread_count = unread_count
        self._user = user
        self._user_profile = user_profile
        self._user_team = user_team

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The conversations_replies_success_schema_messages_inner_inner_anyOf of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def last_read(self):
        """Gets the last_read of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf.


        :return: The last_read of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf.
        :rtype: str
        """
        return self._last_read

    @last_read.setter
    def last_read(self, last_read):
        """Sets the last_read of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf.


        :param last_read: The last_read of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf.
        :type last_read: str
        """
        if last_read is not None and not re.search(r'^\d{10}\.\d{6}$', last_read):
            raise ValueError("Invalid value for `last_read`, must be a follow pattern or equal to `/^\d{10}\.\d{6}$/`")

        self._last_read = last_read

    @property
    def latest_reply(self):
        """Gets the latest_reply of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf.


        :return: The latest_reply of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf.
        :rtype: str
        """
        return self._latest_reply

    @latest_reply.setter
    def latest_reply(self, latest_reply):
        """Sets the latest_reply of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf.


        :param latest_reply: The latest_reply of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf.
        :type latest_reply: str
        """
        if latest_reply is not None and not re.search(r'^\d{10}\.\d{6}$', latest_reply):
            raise ValueError("Invalid value for `latest_reply`, must be a follow pattern or equal to `/^\d{10}\.\d{6}$/`")

        self._latest_reply = latest_reply

    @property
    def reply_count(self):
        """Gets the reply_count of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf.


        :return: The reply_count of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf.
        :rtype: int
        """
        return self._reply_count

    @reply_count.setter
    def reply_count(self, reply_count):
        """Sets the reply_count of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf.


        :param reply_count: The reply_count of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf.
        :type reply_count: int
        """
        if reply_count is None:
            raise ValueError("Invalid value for `reply_count`, must not be `None`")

        self._reply_count = reply_count

    @property
    def reply_users(self):
        """Gets the reply_users of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf.


        :return: The reply_users of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf.
        :rtype: list[str]
        """
        return self._reply_users

    @reply_users.setter
    def reply_users(self, reply_users):
        """Sets the reply_users of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf.


        :param reply_users: The reply_users of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf.
        :type reply_users: list[str]
        """

        self._reply_users = reply_users

    @property
    def reply_users_count(self):
        """Gets the reply_users_count of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf.


        :return: The reply_users_count of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf.
        :rtype: int
        """
        return self._reply_users_count

    @reply_users_count.setter
    def reply_users_count(self, reply_users_count):
        """Sets the reply_users_count of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf.


        :param reply_users_count: The reply_users_count of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf.
        :type reply_users_count: int
        """

        self._reply_users_count = reply_users_count

    @property
    def source_team(self):
        """Gets the source_team of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf.


        :return: The source_team of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf.
        :rtype: str
        """
        return self._source_team

    @source_team.setter
    def source_team(self, source_team):
        """Sets the source_team of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf.


        :param source_team: The source_team of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf.
        :type source_team: str
        """
        if source_team is not None and not re.search(r'^[T][A-Z0-9]{2,}$', source_team):
            raise ValueError("Invalid value for `source_team`, must be a follow pattern or equal to `/^[T][A-Z0-9]{2,}$/`")

        self._source_team = source_team

    @property
    def subscribed(self):
        """Gets the subscribed of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf.


        :return: The subscribed of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf.
        :rtype: bool
        """
        return self._subscribed

    @subscribed.setter
    def subscribed(self, subscribed):
        """Sets the subscribed of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf.


        :param subscribed: The subscribed of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf.
        :type subscribed: bool
        """
        if subscribed is None:
            raise ValueError("Invalid value for `subscribed`, must not be `None`")

        self._subscribed = subscribed

    @property
    def team(self):
        """Gets the team of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf.


        :return: The team of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf.
        :rtype: str
        """
        return self._team

    @team.setter
    def team(self, team):
        """Sets the team of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf.


        :param team: The team of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf.
        :type team: str
        """
        if team is not None and not re.search(r'^[T][A-Z0-9]{2,}$', team):
            raise ValueError("Invalid value for `team`, must be a follow pattern or equal to `/^[T][A-Z0-9]{2,}$/`")

        self._team = team

    @property
    def text(self):
        """Gets the text of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf.


        :return: The text of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf.
        :rtype: str
        """
        return self._text

    @text.setter
    def text(self, text):
        """Sets the text of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf.


        :param text: The text of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf.
        :type text: str
        """
        if text is None:
            raise ValueError("Invalid value for `text`, must not be `None`")

        self._text = text

    @property
    def thread_ts(self):
        """Gets the thread_ts of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf.


        :return: The thread_ts of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf.
        :rtype: str
        """
        return self._thread_ts

    @thread_ts.setter
    def thread_ts(self, thread_ts):
        """Sets the thread_ts of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf.


        :param thread_ts: The thread_ts of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf.
        :type thread_ts: str
        """
        if thread_ts is None:
            raise ValueError("Invalid value for `thread_ts`, must not be `None`")
        if thread_ts is not None and not re.search(r'^\d{10}\.\d{6}$', thread_ts):
            raise ValueError("Invalid value for `thread_ts`, must be a follow pattern or equal to `/^\d{10}\.\d{6}$/`")

        self._thread_ts = thread_ts

    @property
    def ts(self):
        """Gets the ts of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf.


        :return: The ts of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf.
        :rtype: str
        """
        return self._ts

    @ts.setter
    def ts(self, ts):
        """Sets the ts of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf.


        :param ts: The ts of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf.
        :type ts: str
        """
        if ts is None:
            raise ValueError("Invalid value for `ts`, must not be `None`")
        if ts is not None and not re.search(r'^\d{10}\.\d{6}$', ts):
            raise ValueError("Invalid value for `ts`, must be a follow pattern or equal to `/^\d{10}\.\d{6}$/`")

        self._ts = ts

    @property
    def type(self):
        """Gets the type of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf.


        :return: The type of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf.


        :param type: The type of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf.
        :type type: str
        """
        if type is None:
            raise ValueError("Invalid value for `type`, must not be `None`")

        self._type = type

    @property
    def unread_count(self):
        """Gets the unread_count of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf.


        :return: The unread_count of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf.
        :rtype: int
        """
        return self._unread_count

    @unread_count.setter
    def unread_count(self, unread_count):
        """Sets the unread_count of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf.


        :param unread_count: The unread_count of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf.
        :type unread_count: int
        """

        self._unread_count = unread_count

    @property
    def user(self):
        """Gets the user of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf.


        :return: The user of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf.
        :rtype: str
        """
        return self._user

    @user.setter
    def user(self, user):
        """Sets the user of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf.


        :param user: The user of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf.
        :type user: str
        """
        if user is None:
            raise ValueError("Invalid value for `user`, must not be `None`")
        if user is not None and not re.search(r'^[UW][A-Z0-9]{2,}$', user):
            raise ValueError("Invalid value for `user`, must be a follow pattern or equal to `/^[UW][A-Z0-9]{2,}$/`")

        self._user = user

    @property
    def user_profile(self):
        """Gets the user_profile of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf.


        :return: The user_profile of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf.
        :rtype: ObjsUserProfileShort
        """
        return self._user_profile

    @user_profile.setter
    def user_profile(self, user_profile):
        """Sets the user_profile of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf.


        :param user_profile: The user_profile of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf.
        :type user_profile: ObjsUserProfileShort
        """

        self._user_profile = user_profile

    @property
    def user_team(self):
        """Gets the user_team of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf.


        :return: The user_team of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf.
        :rtype: str
        """
        return self._user_team

    @user_team.setter
    def user_team(self, user_team):
        """Sets the user_team of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf.


        :param user_team: The user_team of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf.
        :type user_team: str
        """
        if user_team is not None and not re.search(r'^[T][A-Z0-9]{2,}$', user_team):
            raise ValueError("Invalid value for `user_team`, must be a follow pattern or equal to `/^[T][A-Z0-9]{2,}$/`")

        self._user_team = user_team
