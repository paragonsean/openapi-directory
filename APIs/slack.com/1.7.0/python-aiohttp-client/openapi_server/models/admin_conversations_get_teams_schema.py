# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.admin_conversations_get_teams_schema_response_metadata import AdminConversationsGetTeamsSchemaResponseMetadata
from openapi_server import util


class AdminConversationsGetTeamsSchema(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ok: bool=None, response_metadata: AdminConversationsGetTeamsSchemaResponseMetadata=None, team_ids: List[str]=None):
        """AdminConversationsGetTeamsSchema - a model defined in OpenAPI

        :param ok: The ok of this AdminConversationsGetTeamsSchema.
        :param response_metadata: The response_metadata of this AdminConversationsGetTeamsSchema.
        :param team_ids: The team_ids of this AdminConversationsGetTeamsSchema.
        """
        self.openapi_types = {
            'ok': bool,
            'response_metadata': AdminConversationsGetTeamsSchemaResponseMetadata,
            'team_ids': List[str]
        }

        self.attribute_map = {
            'ok': 'ok',
            'response_metadata': 'response_metadata',
            'team_ids': 'team_ids'
        }

        self._ok = ok
        self._response_metadata = response_metadata
        self._team_ids = team_ids

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AdminConversationsGetTeamsSchema':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The admin_conversations_getTeams_schema of this AdminConversationsGetTeamsSchema.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ok(self):
        """Gets the ok of this AdminConversationsGetTeamsSchema.


        :return: The ok of this AdminConversationsGetTeamsSchema.
        :rtype: bool
        """
        return self._ok

    @ok.setter
    def ok(self, ok):
        """Sets the ok of this AdminConversationsGetTeamsSchema.


        :param ok: The ok of this AdminConversationsGetTeamsSchema.
        :type ok: bool
        """
        if ok is None:
            raise ValueError("Invalid value for `ok`, must not be `None`")

        self._ok = ok

    @property
    def response_metadata(self):
        """Gets the response_metadata of this AdminConversationsGetTeamsSchema.


        :return: The response_metadata of this AdminConversationsGetTeamsSchema.
        :rtype: AdminConversationsGetTeamsSchemaResponseMetadata
        """
        return self._response_metadata

    @response_metadata.setter
    def response_metadata(self, response_metadata):
        """Sets the response_metadata of this AdminConversationsGetTeamsSchema.


        :param response_metadata: The response_metadata of this AdminConversationsGetTeamsSchema.
        :type response_metadata: AdminConversationsGetTeamsSchemaResponseMetadata
        """

        self._response_metadata = response_metadata

    @property
    def team_ids(self):
        """Gets the team_ids of this AdminConversationsGetTeamsSchema.


        :return: The team_ids of this AdminConversationsGetTeamsSchema.
        :rtype: List[str]
        """
        return self._team_ids

    @team_ids.setter
    def team_ids(self, team_ids):
        """Sets the team_ids of this AdminConversationsGetTeamsSchema.


        :param team_ids: The team_ids of this AdminConversationsGetTeamsSchema.
        :type team_ids: List[str]
        """
        if team_ids is None:
            raise ValueError("Invalid value for `team_ids`, must not be `None`")

        self._team_ids = team_ids
