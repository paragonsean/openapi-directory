# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.admin_conversations_get_teams_schema_response_metadata import AdminConversationsGetTeamsSchemaResponseMetadata
from openapi_server.models.chat_scheduled_messages_list_schema_scheduled_messages_inner import ChatScheduledMessagesListSchemaScheduledMessagesInner
from openapi_server import util


class ChatScheduledMessagesListSchema(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ok: bool=None, response_metadata: AdminConversationsGetTeamsSchemaResponseMetadata=None, scheduled_messages: List[ChatScheduledMessagesListSchemaScheduledMessagesInner]=None):
        """ChatScheduledMessagesListSchema - a model defined in OpenAPI

        :param ok: The ok of this ChatScheduledMessagesListSchema.
        :param response_metadata: The response_metadata of this ChatScheduledMessagesListSchema.
        :param scheduled_messages: The scheduled_messages of this ChatScheduledMessagesListSchema.
        """
        self.openapi_types = {
            'ok': bool,
            'response_metadata': AdminConversationsGetTeamsSchemaResponseMetadata,
            'scheduled_messages': List[ChatScheduledMessagesListSchemaScheduledMessagesInner]
        }

        self.attribute_map = {
            'ok': 'ok',
            'response_metadata': 'response_metadata',
            'scheduled_messages': 'scheduled_messages'
        }

        self._ok = ok
        self._response_metadata = response_metadata
        self._scheduled_messages = scheduled_messages

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ChatScheduledMessagesListSchema':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The chat_scheduledMessages_list_schema of this ChatScheduledMessagesListSchema.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ok(self):
        """Gets the ok of this ChatScheduledMessagesListSchema.


        :return: The ok of this ChatScheduledMessagesListSchema.
        :rtype: bool
        """
        return self._ok

    @ok.setter
    def ok(self, ok):
        """Sets the ok of this ChatScheduledMessagesListSchema.


        :param ok: The ok of this ChatScheduledMessagesListSchema.
        :type ok: bool
        """
        if ok is None:
            raise ValueError("Invalid value for `ok`, must not be `None`")

        self._ok = ok

    @property
    def response_metadata(self):
        """Gets the response_metadata of this ChatScheduledMessagesListSchema.


        :return: The response_metadata of this ChatScheduledMessagesListSchema.
        :rtype: AdminConversationsGetTeamsSchemaResponseMetadata
        """
        return self._response_metadata

    @response_metadata.setter
    def response_metadata(self, response_metadata):
        """Sets the response_metadata of this ChatScheduledMessagesListSchema.


        :param response_metadata: The response_metadata of this ChatScheduledMessagesListSchema.
        :type response_metadata: AdminConversationsGetTeamsSchemaResponseMetadata
        """
        if response_metadata is None:
            raise ValueError("Invalid value for `response_metadata`, must not be `None`")

        self._response_metadata = response_metadata

    @property
    def scheduled_messages(self):
        """Gets the scheduled_messages of this ChatScheduledMessagesListSchema.


        :return: The scheduled_messages of this ChatScheduledMessagesListSchema.
        :rtype: List[ChatScheduledMessagesListSchemaScheduledMessagesInner]
        """
        return self._scheduled_messages

    @scheduled_messages.setter
    def scheduled_messages(self, scheduled_messages):
        """Sets the scheduled_messages of this ChatScheduledMessagesListSchema.


        :param scheduled_messages: The scheduled_messages of this ChatScheduledMessagesListSchema.
        :type scheduled_messages: List[ChatScheduledMessagesListSchemaScheduledMessagesInner]
        """
        if scheduled_messages is None:
            raise ValueError("Invalid value for `scheduled_messages`, must not be `None`")

        self._scheduled_messages = scheduled_messages
