# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.objs_response_metadata_inner import ObjsResponseMetadataInner
from openapi_server.models.objs_user_inner import ObjsUserInner
from openapi_server import util


class UsersListSchema(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cache_ts: int=None, members: list[List[ObjsUserInner]]=None, ok: bool=None, response_metadata: List[ObjsResponseMetadataInner]=None):
        """UsersListSchema - a model defined in OpenAPI

        :param cache_ts: The cache_ts of this UsersListSchema.
        :param members: The members of this UsersListSchema.
        :param ok: The ok of this UsersListSchema.
        :param response_metadata: The response_metadata of this UsersListSchema.
        """
        self.openapi_types = {
            'cache_ts': int,
            'members': list[List[ObjsUserInner]],
            'ok': bool,
            'response_metadata': List[ObjsResponseMetadataInner]
        }

        self.attribute_map = {
            'cache_ts': 'cache_ts',
            'members': 'members',
            'ok': 'ok',
            'response_metadata': 'response_metadata'
        }

        self._cache_ts = cache_ts
        self._members = members
        self._ok = ok
        self._response_metadata = response_metadata

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UsersListSchema':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The users_list_schema of this UsersListSchema.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cache_ts(self):
        """Gets the cache_ts of this UsersListSchema.


        :return: The cache_ts of this UsersListSchema.
        :rtype: int
        """
        return self._cache_ts

    @cache_ts.setter
    def cache_ts(self, cache_ts):
        """Sets the cache_ts of this UsersListSchema.


        :param cache_ts: The cache_ts of this UsersListSchema.
        :type cache_ts: int
        """
        if cache_ts is None:
            raise ValueError("Invalid value for `cache_ts`, must not be `None`")

        self._cache_ts = cache_ts

    @property
    def members(self):
        """Gets the members of this UsersListSchema.


        :return: The members of this UsersListSchema.
        :rtype: list[List[ObjsUserInner]]
        """
        return self._members

    @members.setter
    def members(self, members):
        """Sets the members of this UsersListSchema.


        :param members: The members of this UsersListSchema.
        :type members: list[List[ObjsUserInner]]
        """
        if members is None:
            raise ValueError("Invalid value for `members`, must not be `None`")
        if members is not None and len(members) < 1:
            raise ValueError("Invalid value for `members`, number of items must be greater than or equal to `1`")

        self._members = members

    @property
    def ok(self):
        """Gets the ok of this UsersListSchema.


        :return: The ok of this UsersListSchema.
        :rtype: bool
        """
        return self._ok

    @ok.setter
    def ok(self, ok):
        """Sets the ok of this UsersListSchema.


        :param ok: The ok of this UsersListSchema.
        :type ok: bool
        """
        if ok is None:
            raise ValueError("Invalid value for `ok`, must not be `None`")

        self._ok = ok

    @property
    def response_metadata(self):
        """Gets the response_metadata of this UsersListSchema.


        :return: The response_metadata of this UsersListSchema.
        :rtype: List[ObjsResponseMetadataInner]
        """
        return self._response_metadata

    @response_metadata.setter
    def response_metadata(self, response_metadata):
        """Sets the response_metadata of this UsersListSchema.


        :param response_metadata: The response_metadata of this UsersListSchema.
        :type response_metadata: List[ObjsResponseMetadataInner]
        """

        self._response_metadata = response_metadata
