# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BotsInfoSchemaBotIcons(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, image_36: str=None, image_48: str=None, image_72: str=None):
        """BotsInfoSchemaBotIcons - a model defined in OpenAPI

        :param image_36: The image_36 of this BotsInfoSchemaBotIcons.
        :param image_48: The image_48 of this BotsInfoSchemaBotIcons.
        :param image_72: The image_72 of this BotsInfoSchemaBotIcons.
        """
        self.openapi_types = {
            'image_36': str,
            'image_48': str,
            'image_72': str
        }

        self.attribute_map = {
            'image_36': 'image_36',
            'image_48': 'image_48',
            'image_72': 'image_72'
        }

        self._image_36 = image_36
        self._image_48 = image_48
        self._image_72 = image_72

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BotsInfoSchemaBotIcons':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The bots_info_schema_bot_icons of this BotsInfoSchemaBotIcons.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def image_36(self):
        """Gets the image_36 of this BotsInfoSchemaBotIcons.


        :return: The image_36 of this BotsInfoSchemaBotIcons.
        :rtype: str
        """
        return self._image_36

    @image_36.setter
    def image_36(self, image_36):
        """Sets the image_36 of this BotsInfoSchemaBotIcons.


        :param image_36: The image_36 of this BotsInfoSchemaBotIcons.
        :type image_36: str
        """
        if image_36 is None:
            raise ValueError("Invalid value for `image_36`, must not be `None`")

        self._image_36 = image_36

    @property
    def image_48(self):
        """Gets the image_48 of this BotsInfoSchemaBotIcons.


        :return: The image_48 of this BotsInfoSchemaBotIcons.
        :rtype: str
        """
        return self._image_48

    @image_48.setter
    def image_48(self, image_48):
        """Sets the image_48 of this BotsInfoSchemaBotIcons.


        :param image_48: The image_48 of this BotsInfoSchemaBotIcons.
        :type image_48: str
        """
        if image_48 is None:
            raise ValueError("Invalid value for `image_48`, must not be `None`")

        self._image_48 = image_48

    @property
    def image_72(self):
        """Gets the image_72 of this BotsInfoSchemaBotIcons.


        :return: The image_72 of this BotsInfoSchemaBotIcons.
        :rtype: str
        """
        return self._image_72

    @image_72.setter
    def image_72(self, image_72):
        """Sets the image_72 of this BotsInfoSchemaBotIcons.


        :param image_72: The image_72 of this BotsInfoSchemaBotIcons.
        :type image_72: str
        """
        if image_72 is None:
            raise ValueError("Invalid value for `image_72`, must not be `None`")

        self._image_72 = image_72
