# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ObjsMessageIcons(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, emoji: str=None, image_64: str=None):
        """ObjsMessageIcons - a model defined in OpenAPI

        :param emoji: The emoji of this ObjsMessageIcons.
        :param image_64: The image_64 of this ObjsMessageIcons.
        """
        self.openapi_types = {
            'emoji': str,
            'image_64': str
        }

        self.attribute_map = {
            'emoji': 'emoji',
            'image_64': 'image_64'
        }

        self._emoji = emoji
        self._image_64 = image_64

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ObjsMessageIcons':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The objs_message_icons of this ObjsMessageIcons.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def emoji(self):
        """Gets the emoji of this ObjsMessageIcons.


        :return: The emoji of this ObjsMessageIcons.
        :rtype: str
        """
        return self._emoji

    @emoji.setter
    def emoji(self, emoji):
        """Sets the emoji of this ObjsMessageIcons.


        :param emoji: The emoji of this ObjsMessageIcons.
        :type emoji: str
        """

        self._emoji = emoji

    @property
    def image_64(self):
        """Gets the image_64 of this ObjsMessageIcons.


        :return: The image_64 of this ObjsMessageIcons.
        :rtype: str
        """
        return self._image_64

    @image_64.setter
    def image_64(self, image_64):
        """Sets the image_64 of this ObjsMessageIcons.


        :param image_64: The image_64 of this ObjsMessageIcons.
        :type image_64: str
        """

        self._image_64 = image_64
