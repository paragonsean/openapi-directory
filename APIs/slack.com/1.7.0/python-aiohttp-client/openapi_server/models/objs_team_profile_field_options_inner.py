# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.objs_team_profile_field_option import ObjsTeamProfileFieldOption
from openapi_server import util


class ObjsTeamProfileFieldOptionsInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, is_custom: bool=None, is_multiple_entry: bool=None, is_protected: bool=None, is_scim: bool=None):
        """ObjsTeamProfileFieldOptionsInner - a model defined in OpenAPI

        :param is_custom: The is_custom of this ObjsTeamProfileFieldOptionsInner.
        :param is_multiple_entry: The is_multiple_entry of this ObjsTeamProfileFieldOptionsInner.
        :param is_protected: The is_protected of this ObjsTeamProfileFieldOptionsInner.
        :param is_scim: The is_scim of this ObjsTeamProfileFieldOptionsInner.
        """
        self.openapi_types = {
            'is_custom': bool,
            'is_multiple_entry': bool,
            'is_protected': bool,
            'is_scim': bool
        }

        self.attribute_map = {
            'is_custom': 'is_custom',
            'is_multiple_entry': 'is_multiple_entry',
            'is_protected': 'is_protected',
            'is_scim': 'is_scim'
        }

        self._is_custom = is_custom
        self._is_multiple_entry = is_multiple_entry
        self._is_protected = is_protected
        self._is_scim = is_scim

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ObjsTeamProfileFieldOptionsInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The objs_team_profile_field_options_inner of this ObjsTeamProfileFieldOptionsInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def is_custom(self):
        """Gets the is_custom of this ObjsTeamProfileFieldOptionsInner.


        :return: The is_custom of this ObjsTeamProfileFieldOptionsInner.
        :rtype: bool
        """
        return self._is_custom

    @is_custom.setter
    def is_custom(self, is_custom):
        """Sets the is_custom of this ObjsTeamProfileFieldOptionsInner.


        :param is_custom: The is_custom of this ObjsTeamProfileFieldOptionsInner.
        :type is_custom: bool
        """

        self._is_custom = is_custom

    @property
    def is_multiple_entry(self):
        """Gets the is_multiple_entry of this ObjsTeamProfileFieldOptionsInner.


        :return: The is_multiple_entry of this ObjsTeamProfileFieldOptionsInner.
        :rtype: bool
        """
        return self._is_multiple_entry

    @is_multiple_entry.setter
    def is_multiple_entry(self, is_multiple_entry):
        """Sets the is_multiple_entry of this ObjsTeamProfileFieldOptionsInner.


        :param is_multiple_entry: The is_multiple_entry of this ObjsTeamProfileFieldOptionsInner.
        :type is_multiple_entry: bool
        """

        self._is_multiple_entry = is_multiple_entry

    @property
    def is_protected(self):
        """Gets the is_protected of this ObjsTeamProfileFieldOptionsInner.


        :return: The is_protected of this ObjsTeamProfileFieldOptionsInner.
        :rtype: bool
        """
        return self._is_protected

    @is_protected.setter
    def is_protected(self, is_protected):
        """Sets the is_protected of this ObjsTeamProfileFieldOptionsInner.


        :param is_protected: The is_protected of this ObjsTeamProfileFieldOptionsInner.
        :type is_protected: bool
        """

        self._is_protected = is_protected

    @property
    def is_scim(self):
        """Gets the is_scim of this ObjsTeamProfileFieldOptionsInner.


        :return: The is_scim of this ObjsTeamProfileFieldOptionsInner.
        :rtype: bool
        """
        return self._is_scim

    @is_scim.setter
    def is_scim(self, is_scim):
        """Sets the is_scim of this ObjsTeamProfileFieldOptionsInner.


        :param is_scim: The is_scim of this ObjsTeamProfileFieldOptionsInner.
        :type is_scim: bool
        """

        self._is_scim = is_scim
