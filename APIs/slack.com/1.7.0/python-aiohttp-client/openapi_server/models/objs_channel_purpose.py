# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
import re
from openapi_server import util


class ObjsChannelPurpose(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, creator: str=None, last_set: int=None, value: str=None):
        """ObjsChannelPurpose - a model defined in OpenAPI

        :param creator: The creator of this ObjsChannelPurpose.
        :param last_set: The last_set of this ObjsChannelPurpose.
        :param value: The value of this ObjsChannelPurpose.
        """
        self.openapi_types = {
            'creator': str,
            'last_set': int,
            'value': str
        }

        self.attribute_map = {
            'creator': 'creator',
            'last_set': 'last_set',
            'value': 'value'
        }

        self._creator = creator
        self._last_set = last_set
        self._value = value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ObjsChannelPurpose':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The objs_channel_purpose of this ObjsChannelPurpose.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def creator(self):
        """Gets the creator of this ObjsChannelPurpose.


        :return: The creator of this ObjsChannelPurpose.
        :rtype: str
        """
        return self._creator

    @creator.setter
    def creator(self, creator):
        """Sets the creator of this ObjsChannelPurpose.


        :param creator: The creator of this ObjsChannelPurpose.
        :type creator: str
        """
        if creator is None:
            raise ValueError("Invalid value for `creator`, must not be `None`")
        if creator is not None and not re.search(r'^[UW][A-Z0-9]{8,}$|^$', creator):
            raise ValueError("Invalid value for `creator`, must be a follow pattern or equal to `/^[UW][A-Z0-9]{8,}$|^$/`")

        self._creator = creator

    @property
    def last_set(self):
        """Gets the last_set of this ObjsChannelPurpose.


        :return: The last_set of this ObjsChannelPurpose.
        :rtype: int
        """
        return self._last_set

    @last_set.setter
    def last_set(self, last_set):
        """Sets the last_set of this ObjsChannelPurpose.


        :param last_set: The last_set of this ObjsChannelPurpose.
        :type last_set: int
        """
        if last_set is None:
            raise ValueError("Invalid value for `last_set`, must not be `None`")

        self._last_set = last_set

    @property
    def value(self):
        """Gets the value of this ObjsChannelPurpose.


        :return: The value of this ObjsChannelPurpose.
        :rtype: str
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this ObjsChannelPurpose.


        :param value: The value of this ObjsChannelPurpose.
        :type value: str
        """
        if value is None:
            raise ValueError("Invalid value for `value`, must not be `None`")

        self._value = value
