# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.objs_user_profile_short import ObjsUserProfileShort
import re
from openapi_server import util


class ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf1(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, is_starred: bool=None, parent_user_id: str=None, source_team: str=None, team: str=None, text: str=None, thread_ts: str=None, ts: str=None, type: str=None, user: str=None, user_profile: ObjsUserProfileShort=None, user_team: str=None):
        """ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf1 - a model defined in OpenAPI

        :param is_starred: The is_starred of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf1.
        :param parent_user_id: The parent_user_id of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf1.
        :param source_team: The source_team of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf1.
        :param team: The team of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf1.
        :param text: The text of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf1.
        :param thread_ts: The thread_ts of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf1.
        :param ts: The ts of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf1.
        :param type: The type of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf1.
        :param user: The user of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf1.
        :param user_profile: The user_profile of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf1.
        :param user_team: The user_team of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf1.
        """
        self.openapi_types = {
            'is_starred': bool,
            'parent_user_id': str,
            'source_team': str,
            'team': str,
            'text': str,
            'thread_ts': str,
            'ts': str,
            'type': str,
            'user': str,
            'user_profile': ObjsUserProfileShort,
            'user_team': str
        }

        self.attribute_map = {
            'is_starred': 'is_starred',
            'parent_user_id': 'parent_user_id',
            'source_team': 'source_team',
            'team': 'team',
            'text': 'text',
            'thread_ts': 'thread_ts',
            'ts': 'ts',
            'type': 'type',
            'user': 'user',
            'user_profile': 'user_profile',
            'user_team': 'user_team'
        }

        self._is_starred = is_starred
        self._parent_user_id = parent_user_id
        self._source_team = source_team
        self._team = team
        self._text = text
        self._thread_ts = thread_ts
        self._ts = ts
        self._type = type
        self._user = user
        self._user_profile = user_profile
        self._user_team = user_team

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf1':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The conversations_replies_success_schema_messages_inner_inner_anyOf_1 of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf1.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def is_starred(self):
        """Gets the is_starred of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf1.


        :return: The is_starred of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf1.
        :rtype: bool
        """
        return self._is_starred

    @is_starred.setter
    def is_starred(self, is_starred):
        """Sets the is_starred of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf1.


        :param is_starred: The is_starred of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf1.
        :type is_starred: bool
        """

        self._is_starred = is_starred

    @property
    def parent_user_id(self):
        """Gets the parent_user_id of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf1.


        :return: The parent_user_id of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf1.
        :rtype: str
        """
        return self._parent_user_id

    @parent_user_id.setter
    def parent_user_id(self, parent_user_id):
        """Sets the parent_user_id of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf1.


        :param parent_user_id: The parent_user_id of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf1.
        :type parent_user_id: str
        """
        if parent_user_id is None:
            raise ValueError("Invalid value for `parent_user_id`, must not be `None`")
        if parent_user_id is not None and not re.search(r'^[UW][A-Z0-9]{2,}$', parent_user_id):
            raise ValueError("Invalid value for `parent_user_id`, must be a follow pattern or equal to `/^[UW][A-Z0-9]{2,}$/`")

        self._parent_user_id = parent_user_id

    @property
    def source_team(self):
        """Gets the source_team of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf1.


        :return: The source_team of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf1.
        :rtype: str
        """
        return self._source_team

    @source_team.setter
    def source_team(self, source_team):
        """Sets the source_team of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf1.


        :param source_team: The source_team of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf1.
        :type source_team: str
        """
        if source_team is not None and not re.search(r'^[T][A-Z0-9]{2,}$', source_team):
            raise ValueError("Invalid value for `source_team`, must be a follow pattern or equal to `/^[T][A-Z0-9]{2,}$/`")

        self._source_team = source_team

    @property
    def team(self):
        """Gets the team of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf1.


        :return: The team of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf1.
        :rtype: str
        """
        return self._team

    @team.setter
    def team(self, team):
        """Sets the team of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf1.


        :param team: The team of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf1.
        :type team: str
        """
        if team is not None and not re.search(r'^[T][A-Z0-9]{2,}$', team):
            raise ValueError("Invalid value for `team`, must be a follow pattern or equal to `/^[T][A-Z0-9]{2,}$/`")

        self._team = team

    @property
    def text(self):
        """Gets the text of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf1.


        :return: The text of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf1.
        :rtype: str
        """
        return self._text

    @text.setter
    def text(self, text):
        """Sets the text of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf1.


        :param text: The text of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf1.
        :type text: str
        """
        if text is None:
            raise ValueError("Invalid value for `text`, must not be `None`")

        self._text = text

    @property
    def thread_ts(self):
        """Gets the thread_ts of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf1.


        :return: The thread_ts of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf1.
        :rtype: str
        """
        return self._thread_ts

    @thread_ts.setter
    def thread_ts(self, thread_ts):
        """Sets the thread_ts of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf1.


        :param thread_ts: The thread_ts of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf1.
        :type thread_ts: str
        """
        if thread_ts is None:
            raise ValueError("Invalid value for `thread_ts`, must not be `None`")
        if thread_ts is not None and not re.search(r'^\d{10}\.\d{6}$', thread_ts):
            raise ValueError("Invalid value for `thread_ts`, must be a follow pattern or equal to `/^\d{10}\.\d{6}$/`")

        self._thread_ts = thread_ts

    @property
    def ts(self):
        """Gets the ts of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf1.


        :return: The ts of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf1.
        :rtype: str
        """
        return self._ts

    @ts.setter
    def ts(self, ts):
        """Sets the ts of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf1.


        :param ts: The ts of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf1.
        :type ts: str
        """
        if ts is None:
            raise ValueError("Invalid value for `ts`, must not be `None`")
        if ts is not None and not re.search(r'^\d{10}\.\d{6}$', ts):
            raise ValueError("Invalid value for `ts`, must be a follow pattern or equal to `/^\d{10}\.\d{6}$/`")

        self._ts = ts

    @property
    def type(self):
        """Gets the type of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf1.


        :return: The type of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf1.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf1.


        :param type: The type of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf1.
        :type type: str
        """
        if type is None:
            raise ValueError("Invalid value for `type`, must not be `None`")

        self._type = type

    @property
    def user(self):
        """Gets the user of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf1.


        :return: The user of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf1.
        :rtype: str
        """
        return self._user

    @user.setter
    def user(self, user):
        """Sets the user of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf1.


        :param user: The user of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf1.
        :type user: str
        """
        if user is None:
            raise ValueError("Invalid value for `user`, must not be `None`")
        if user is not None and not re.search(r'^[UW][A-Z0-9]{2,}$', user):
            raise ValueError("Invalid value for `user`, must be a follow pattern or equal to `/^[UW][A-Z0-9]{2,}$/`")

        self._user = user

    @property
    def user_profile(self):
        """Gets the user_profile of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf1.


        :return: The user_profile of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf1.
        :rtype: ObjsUserProfileShort
        """
        return self._user_profile

    @user_profile.setter
    def user_profile(self, user_profile):
        """Sets the user_profile of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf1.


        :param user_profile: The user_profile of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf1.
        :type user_profile: ObjsUserProfileShort
        """

        self._user_profile = user_profile

    @property
    def user_team(self):
        """Gets the user_team of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf1.


        :return: The user_team of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf1.
        :rtype: str
        """
        return self._user_team

    @user_team.setter
    def user_team(self, user_team):
        """Sets the user_team of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf1.


        :param user_team: The user_team of this ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf1.
        :type user_team: str
        """
        if user_team is not None and not re.search(r'^[T][A-Z0-9]{2,}$', user_team):
            raise ValueError("Invalid value for `user_team`, must be a follow pattern or equal to `/^[T][A-Z0-9]{2,}$/`")

        self._user_team = user_team
