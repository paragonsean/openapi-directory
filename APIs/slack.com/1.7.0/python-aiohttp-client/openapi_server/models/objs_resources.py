# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.objs_resources_excluded_ids_inner_inner import ObjsResourcesExcludedIdsInnerInner
from openapi_server import util


class ObjsResources(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, excluded_ids: List[List[ObjsResourcesExcludedIdsInnerInner]]=None, ids: List[List[ObjsResourcesExcludedIdsInnerInner]]=None, wildcard: bool=None):
        """ObjsResources - a model defined in OpenAPI

        :param excluded_ids: The excluded_ids of this ObjsResources.
        :param ids: The ids of this ObjsResources.
        :param wildcard: The wildcard of this ObjsResources.
        """
        self.openapi_types = {
            'excluded_ids': List[List[ObjsResourcesExcludedIdsInnerInner]],
            'ids': List[List[ObjsResourcesExcludedIdsInnerInner]],
            'wildcard': bool
        }

        self.attribute_map = {
            'excluded_ids': 'excluded_ids',
            'ids': 'ids',
            'wildcard': 'wildcard'
        }

        self._excluded_ids = excluded_ids
        self._ids = ids
        self._wildcard = wildcard

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ObjsResources':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The objs_resources of this ObjsResources.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def excluded_ids(self):
        """Gets the excluded_ids of this ObjsResources.


        :return: The excluded_ids of this ObjsResources.
        :rtype: List[List[ObjsResourcesExcludedIdsInnerInner]]
        """
        return self._excluded_ids

    @excluded_ids.setter
    def excluded_ids(self, excluded_ids):
        """Sets the excluded_ids of this ObjsResources.


        :param excluded_ids: The excluded_ids of this ObjsResources.
        :type excluded_ids: List[List[ObjsResourcesExcludedIdsInnerInner]]
        """

        self._excluded_ids = excluded_ids

    @property
    def ids(self):
        """Gets the ids of this ObjsResources.


        :return: The ids of this ObjsResources.
        :rtype: List[List[ObjsResourcesExcludedIdsInnerInner]]
        """
        return self._ids

    @ids.setter
    def ids(self, ids):
        """Sets the ids of this ObjsResources.


        :param ids: The ids of this ObjsResources.
        :type ids: List[List[ObjsResourcesExcludedIdsInnerInner]]
        """
        if ids is None:
            raise ValueError("Invalid value for `ids`, must not be `None`")

        self._ids = ids

    @property
    def wildcard(self):
        """Gets the wildcard of this ObjsResources.


        :return: The wildcard of this ObjsResources.
        :rtype: bool
        """
        return self._wildcard

    @wildcard.setter
    def wildcard(self, wildcard):
        """Sets the wildcard of this ObjsResources.


        :param wildcard: The wildcard of this ObjsResources.
        :type wildcard: bool
        """

        self._wildcard = wildcard
