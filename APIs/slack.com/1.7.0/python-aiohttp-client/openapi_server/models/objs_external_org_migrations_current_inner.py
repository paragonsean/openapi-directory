# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ObjsExternalOrgMigrationsCurrentInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, date_started: int=None, team_id: str=None):
        """ObjsExternalOrgMigrationsCurrentInner - a model defined in OpenAPI

        :param date_started: The date_started of this ObjsExternalOrgMigrationsCurrentInner.
        :param team_id: The team_id of this ObjsExternalOrgMigrationsCurrentInner.
        """
        self.openapi_types = {
            'date_started': int,
            'team_id': str
        }

        self.attribute_map = {
            'date_started': 'date_started',
            'team_id': 'team_id'
        }

        self._date_started = date_started
        self._team_id = team_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ObjsExternalOrgMigrationsCurrentInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The objs_external_org_migrations_current_inner of this ObjsExternalOrgMigrationsCurrentInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def date_started(self):
        """Gets the date_started of this ObjsExternalOrgMigrationsCurrentInner.


        :return: The date_started of this ObjsExternalOrgMigrationsCurrentInner.
        :rtype: int
        """
        return self._date_started

    @date_started.setter
    def date_started(self, date_started):
        """Sets the date_started of this ObjsExternalOrgMigrationsCurrentInner.


        :param date_started: The date_started of this ObjsExternalOrgMigrationsCurrentInner.
        :type date_started: int
        """
        if date_started is None:
            raise ValueError("Invalid value for `date_started`, must not be `None`")

        self._date_started = date_started

    @property
    def team_id(self):
        """Gets the team_id of this ObjsExternalOrgMigrationsCurrentInner.


        :return: The team_id of this ObjsExternalOrgMigrationsCurrentInner.
        :rtype: str
        """
        return self._team_id

    @team_id.setter
    def team_id(self, team_id):
        """Sets the team_id of this ObjsExternalOrgMigrationsCurrentInner.


        :param team_id: The team_id of this ObjsExternalOrgMigrationsCurrentInner.
        :type team_id: str
        """
        if team_id is None:
            raise ValueError("Invalid value for `team_id`, must not be `None`")

        self._team_id = team_id
