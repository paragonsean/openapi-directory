# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.admin_conversations_get_teams_schema_response_metadata import AdminConversationsGetTeamsSchemaResponseMetadata
from openapi_server.models.objs_conversation_inner import ObjsConversationInner
from openapi_server import util


class ConversationsListSuccessSchema(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, channels: list[List[ObjsConversationInner]]=None, ok: bool=None, response_metadata: AdminConversationsGetTeamsSchemaResponseMetadata=None):
        """ConversationsListSuccessSchema - a model defined in OpenAPI

        :param channels: The channels of this ConversationsListSuccessSchema.
        :param ok: The ok of this ConversationsListSuccessSchema.
        :param response_metadata: The response_metadata of this ConversationsListSuccessSchema.
        """
        self.openapi_types = {
            'channels': list[List[ObjsConversationInner]],
            'ok': bool,
            'response_metadata': AdminConversationsGetTeamsSchemaResponseMetadata
        }

        self.attribute_map = {
            'channels': 'channels',
            'ok': 'ok',
            'response_metadata': 'response_metadata'
        }

        self._channels = channels
        self._ok = ok
        self._response_metadata = response_metadata

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ConversationsListSuccessSchema':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The conversations_list_success_schema of this ConversationsListSuccessSchema.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def channels(self):
        """Gets the channels of this ConversationsListSuccessSchema.


        :return: The channels of this ConversationsListSuccessSchema.
        :rtype: list[List[ObjsConversationInner]]
        """
        return self._channels

    @channels.setter
    def channels(self, channels):
        """Sets the channels of this ConversationsListSuccessSchema.


        :param channels: The channels of this ConversationsListSuccessSchema.
        :type channels: list[List[ObjsConversationInner]]
        """
        if channels is None:
            raise ValueError("Invalid value for `channels`, must not be `None`")

        self._channels = channels

    @property
    def ok(self):
        """Gets the ok of this ConversationsListSuccessSchema.


        :return: The ok of this ConversationsListSuccessSchema.
        :rtype: bool
        """
        return self._ok

    @ok.setter
    def ok(self, ok):
        """Sets the ok of this ConversationsListSuccessSchema.


        :param ok: The ok of this ConversationsListSuccessSchema.
        :type ok: bool
        """
        if ok is None:
            raise ValueError("Invalid value for `ok`, must not be `None`")

        self._ok = ok

    @property
    def response_metadata(self):
        """Gets the response_metadata of this ConversationsListSuccessSchema.


        :return: The response_metadata of this ConversationsListSuccessSchema.
        :rtype: AdminConversationsGetTeamsSchemaResponseMetadata
        """
        return self._response_metadata

    @response_metadata.setter
    def response_metadata(self, response_metadata):
        """Sets the response_metadata of this ConversationsListSuccessSchema.


        :param response_metadata: The response_metadata of this ConversationsListSuccessSchema.
        :type response_metadata: AdminConversationsGetTeamsSchemaResponseMetadata
        """

        self._response_metadata = response_metadata
