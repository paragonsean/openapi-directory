# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
import re
from openapi_server import util


class UsersIdentitySchemaInnerAnyOf2User(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, image_192: str=None, image_24: str=None, image_32: str=None, image_48: str=None, image_512: str=None, image_72: str=None, name: str=None):
        """UsersIdentitySchemaInnerAnyOf2User - a model defined in OpenAPI

        :param id: The id of this UsersIdentitySchemaInnerAnyOf2User.
        :param image_192: The image_192 of this UsersIdentitySchemaInnerAnyOf2User.
        :param image_24: The image_24 of this UsersIdentitySchemaInnerAnyOf2User.
        :param image_32: The image_32 of this UsersIdentitySchemaInnerAnyOf2User.
        :param image_48: The image_48 of this UsersIdentitySchemaInnerAnyOf2User.
        :param image_512: The image_512 of this UsersIdentitySchemaInnerAnyOf2User.
        :param image_72: The image_72 of this UsersIdentitySchemaInnerAnyOf2User.
        :param name: The name of this UsersIdentitySchemaInnerAnyOf2User.
        """
        self.openapi_types = {
            'id': str,
            'image_192': str,
            'image_24': str,
            'image_32': str,
            'image_48': str,
            'image_512': str,
            'image_72': str,
            'name': str
        }

        self.attribute_map = {
            'id': 'id',
            'image_192': 'image_192',
            'image_24': 'image_24',
            'image_32': 'image_32',
            'image_48': 'image_48',
            'image_512': 'image_512',
            'image_72': 'image_72',
            'name': 'name'
        }

        self._id = id
        self._image_192 = image_192
        self._image_24 = image_24
        self._image_32 = image_32
        self._image_48 = image_48
        self._image_512 = image_512
        self._image_72 = image_72
        self._name = name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UsersIdentitySchemaInnerAnyOf2User':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The users_identity_schema_inner_anyOf_2_user of this UsersIdentitySchemaInnerAnyOf2User.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this UsersIdentitySchemaInnerAnyOf2User.


        :return: The id of this UsersIdentitySchemaInnerAnyOf2User.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this UsersIdentitySchemaInnerAnyOf2User.


        :param id: The id of this UsersIdentitySchemaInnerAnyOf2User.
        :type id: str
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")
        if id is not None and not re.search(r'^[UW][A-Z0-9]{2,}$', id):
            raise ValueError("Invalid value for `id`, must be a follow pattern or equal to `/^[UW][A-Z0-9]{2,}$/`")

        self._id = id

    @property
    def image_192(self):
        """Gets the image_192 of this UsersIdentitySchemaInnerAnyOf2User.


        :return: The image_192 of this UsersIdentitySchemaInnerAnyOf2User.
        :rtype: str
        """
        return self._image_192

    @image_192.setter
    def image_192(self, image_192):
        """Sets the image_192 of this UsersIdentitySchemaInnerAnyOf2User.


        :param image_192: The image_192 of this UsersIdentitySchemaInnerAnyOf2User.
        :type image_192: str
        """
        if image_192 is None:
            raise ValueError("Invalid value for `image_192`, must not be `None`")

        self._image_192 = image_192

    @property
    def image_24(self):
        """Gets the image_24 of this UsersIdentitySchemaInnerAnyOf2User.


        :return: The image_24 of this UsersIdentitySchemaInnerAnyOf2User.
        :rtype: str
        """
        return self._image_24

    @image_24.setter
    def image_24(self, image_24):
        """Sets the image_24 of this UsersIdentitySchemaInnerAnyOf2User.


        :param image_24: The image_24 of this UsersIdentitySchemaInnerAnyOf2User.
        :type image_24: str
        """
        if image_24 is None:
            raise ValueError("Invalid value for `image_24`, must not be `None`")

        self._image_24 = image_24

    @property
    def image_32(self):
        """Gets the image_32 of this UsersIdentitySchemaInnerAnyOf2User.


        :return: The image_32 of this UsersIdentitySchemaInnerAnyOf2User.
        :rtype: str
        """
        return self._image_32

    @image_32.setter
    def image_32(self, image_32):
        """Sets the image_32 of this UsersIdentitySchemaInnerAnyOf2User.


        :param image_32: The image_32 of this UsersIdentitySchemaInnerAnyOf2User.
        :type image_32: str
        """
        if image_32 is None:
            raise ValueError("Invalid value for `image_32`, must not be `None`")

        self._image_32 = image_32

    @property
    def image_48(self):
        """Gets the image_48 of this UsersIdentitySchemaInnerAnyOf2User.


        :return: The image_48 of this UsersIdentitySchemaInnerAnyOf2User.
        :rtype: str
        """
        return self._image_48

    @image_48.setter
    def image_48(self, image_48):
        """Sets the image_48 of this UsersIdentitySchemaInnerAnyOf2User.


        :param image_48: The image_48 of this UsersIdentitySchemaInnerAnyOf2User.
        :type image_48: str
        """
        if image_48 is None:
            raise ValueError("Invalid value for `image_48`, must not be `None`")

        self._image_48 = image_48

    @property
    def image_512(self):
        """Gets the image_512 of this UsersIdentitySchemaInnerAnyOf2User.


        :return: The image_512 of this UsersIdentitySchemaInnerAnyOf2User.
        :rtype: str
        """
        return self._image_512

    @image_512.setter
    def image_512(self, image_512):
        """Sets the image_512 of this UsersIdentitySchemaInnerAnyOf2User.


        :param image_512: The image_512 of this UsersIdentitySchemaInnerAnyOf2User.
        :type image_512: str
        """
        if image_512 is None:
            raise ValueError("Invalid value for `image_512`, must not be `None`")

        self._image_512 = image_512

    @property
    def image_72(self):
        """Gets the image_72 of this UsersIdentitySchemaInnerAnyOf2User.


        :return: The image_72 of this UsersIdentitySchemaInnerAnyOf2User.
        :rtype: str
        """
        return self._image_72

    @image_72.setter
    def image_72(self, image_72):
        """Sets the image_72 of this UsersIdentitySchemaInnerAnyOf2User.


        :param image_72: The image_72 of this UsersIdentitySchemaInnerAnyOf2User.
        :type image_72: str
        """
        if image_72 is None:
            raise ValueError("Invalid value for `image_72`, must not be `None`")

        self._image_72 = image_72

    @property
    def name(self):
        """Gets the name of this UsersIdentitySchemaInnerAnyOf2User.


        :return: The name of this UsersIdentitySchemaInnerAnyOf2User.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this UsersIdentitySchemaInnerAnyOf2User.


        :param name: The name of this UsersIdentitySchemaInnerAnyOf2User.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")

        self._name = name
