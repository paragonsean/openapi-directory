# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.objs_comment import ObjsComment
from openapi_server.models.objs_file import ObjsFile
from openapi_server.models.objs_message import ObjsMessage
from openapi_server.models.stars_list_schema_items_inner_inner_any_of import StarsListSchemaItemsInnerInnerAnyOf
from openapi_server.models.stars_list_schema_items_inner_inner_any_of1 import StarsListSchemaItemsInnerInnerAnyOf1
from openapi_server.models.stars_list_schema_items_inner_inner_any_of2 import StarsListSchemaItemsInnerInnerAnyOf2
from openapi_server.models.stars_list_schema_items_inner_inner_any_of3 import StarsListSchemaItemsInnerInnerAnyOf3
from openapi_server.models.stars_list_schema_items_inner_inner_any_of4 import StarsListSchemaItemsInnerInnerAnyOf4
from openapi_server.models.stars_list_schema_items_inner_inner_any_of5 import StarsListSchemaItemsInnerInnerAnyOf5
import re
from openapi_server import util


class StarsListSchemaItemsInnerInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, channel: str=None, date_create: int=None, message: ObjsMessage=None, type: str=None, file: ObjsFile=None, comment: ObjsComment=None):
        """StarsListSchemaItemsInnerInner - a model defined in OpenAPI

        :param channel: The channel of this StarsListSchemaItemsInnerInner.
        :param date_create: The date_create of this StarsListSchemaItemsInnerInner.
        :param message: The message of this StarsListSchemaItemsInnerInner.
        :param type: The type of this StarsListSchemaItemsInnerInner.
        :param file: The file of this StarsListSchemaItemsInnerInner.
        :param comment: The comment of this StarsListSchemaItemsInnerInner.
        """
        self.openapi_types = {
            'channel': str,
            'date_create': int,
            'message': ObjsMessage,
            'type': str,
            'file': ObjsFile,
            'comment': ObjsComment
        }

        self.attribute_map = {
            'channel': 'channel',
            'date_create': 'date_create',
            'message': 'message',
            'type': 'type',
            'file': 'file',
            'comment': 'comment'
        }

        self._channel = channel
        self._date_create = date_create
        self._message = message
        self._type = type
        self._file = file
        self._comment = comment

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StarsListSchemaItemsInnerInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The stars_list_schema_items_inner_inner of this StarsListSchemaItemsInnerInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def channel(self):
        """Gets the channel of this StarsListSchemaItemsInnerInner.


        :return: The channel of this StarsListSchemaItemsInnerInner.
        :rtype: str
        """
        return self._channel

    @channel.setter
    def channel(self, channel):
        """Sets the channel of this StarsListSchemaItemsInnerInner.


        :param channel: The channel of this StarsListSchemaItemsInnerInner.
        :type channel: str
        """
        if channel is None:
            raise ValueError("Invalid value for `channel`, must not be `None`")
        if channel is not None and not re.search(r'^[G][A-Z0-9]{8,}$', channel):
            raise ValueError("Invalid value for `channel`, must be a follow pattern or equal to `/^[G][A-Z0-9]{8,}$/`")

        self._channel = channel

    @property
    def date_create(self):
        """Gets the date_create of this StarsListSchemaItemsInnerInner.


        :return: The date_create of this StarsListSchemaItemsInnerInner.
        :rtype: int
        """
        return self._date_create

    @date_create.setter
    def date_create(self, date_create):
        """Sets the date_create of this StarsListSchemaItemsInnerInner.


        :param date_create: The date_create of this StarsListSchemaItemsInnerInner.
        :type date_create: int
        """
        if date_create is None:
            raise ValueError("Invalid value for `date_create`, must not be `None`")

        self._date_create = date_create

    @property
    def message(self):
        """Gets the message of this StarsListSchemaItemsInnerInner.


        :return: The message of this StarsListSchemaItemsInnerInner.
        :rtype: ObjsMessage
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this StarsListSchemaItemsInnerInner.


        :param message: The message of this StarsListSchemaItemsInnerInner.
        :type message: ObjsMessage
        """
        if message is None:
            raise ValueError("Invalid value for `message`, must not be `None`")

        self._message = message

    @property
    def type(self):
        """Gets the type of this StarsListSchemaItemsInnerInner.


        :return: The type of this StarsListSchemaItemsInnerInner.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this StarsListSchemaItemsInnerInner.


        :param type: The type of this StarsListSchemaItemsInnerInner.
        :type type: str
        """
        allowed_values = ["message", "file", "file_comment", "channel", "im", "group"]  # noqa: E501
        if type not in allowed_values:
            raise ValueError(
                "Invalid value for `type` ({0}), must be one of {1}"
                .format(type, allowed_values)
            )

        self._type = type

    @property
    def file(self):
        """Gets the file of this StarsListSchemaItemsInnerInner.


        :return: The file of this StarsListSchemaItemsInnerInner.
        :rtype: ObjsFile
        """
        return self._file

    @file.setter
    def file(self, file):
        """Sets the file of this StarsListSchemaItemsInnerInner.


        :param file: The file of this StarsListSchemaItemsInnerInner.
        :type file: ObjsFile
        """
        if file is None:
            raise ValueError("Invalid value for `file`, must not be `None`")

        self._file = file

    @property
    def comment(self):
        """Gets the comment of this StarsListSchemaItemsInnerInner.


        :return: The comment of this StarsListSchemaItemsInnerInner.
        :rtype: ObjsComment
        """
        return self._comment

    @comment.setter
    def comment(self, comment):
        """Sets the comment of this StarsListSchemaItemsInnerInner.


        :param comment: The comment of this StarsListSchemaItemsInnerInner.
        :type comment: ObjsComment
        """
        if comment is None:
            raise ValueError("Invalid value for `comment`, must not be `None`")

        self._comment = comment
