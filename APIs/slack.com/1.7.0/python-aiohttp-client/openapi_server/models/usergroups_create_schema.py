# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.objs_subteam import ObjsSubteam
from openapi_server import util


class UsergroupsCreateSchema(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ok: bool=None, usergroup: ObjsSubteam=None):
        """UsergroupsCreateSchema - a model defined in OpenAPI

        :param ok: The ok of this UsergroupsCreateSchema.
        :param usergroup: The usergroup of this UsergroupsCreateSchema.
        """
        self.openapi_types = {
            'ok': bool,
            'usergroup': ObjsSubteam
        }

        self.attribute_map = {
            'ok': 'ok',
            'usergroup': 'usergroup'
        }

        self._ok = ok
        self._usergroup = usergroup

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UsergroupsCreateSchema':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The usergroups_create_schema of this UsergroupsCreateSchema.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ok(self):
        """Gets the ok of this UsergroupsCreateSchema.


        :return: The ok of this UsergroupsCreateSchema.
        :rtype: bool
        """
        return self._ok

    @ok.setter
    def ok(self, ok):
        """Sets the ok of this UsergroupsCreateSchema.


        :param ok: The ok of this UsergroupsCreateSchema.
        :type ok: bool
        """
        if ok is None:
            raise ValueError("Invalid value for `ok`, must not be `None`")

        self._ok = ok

    @property
    def usergroup(self):
        """Gets the usergroup of this UsergroupsCreateSchema.


        :return: The usergroup of this UsergroupsCreateSchema.
        :rtype: ObjsSubteam
        """
        return self._usergroup

    @usergroup.setter
    def usergroup(self, usergroup):
        """Sets the usergroup of this UsergroupsCreateSchema.


        :param usergroup: The usergroup of this UsergroupsCreateSchema.
        :type usergroup: ObjsSubteam
        """
        if usergroup is None:
            raise ValueError("Invalid value for `usergroup`, must not be `None`")

        self._usergroup = usergroup
