# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
import re
from openapi_server import util


class ChatScheduledMessagesListSchemaScheduledMessagesInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, channel_id: str=None, date_created: int=None, id: str=None, post_at: int=None, text: str=None):
        """ChatScheduledMessagesListSchemaScheduledMessagesInner - a model defined in OpenAPI

        :param channel_id: The channel_id of this ChatScheduledMessagesListSchemaScheduledMessagesInner.
        :param date_created: The date_created of this ChatScheduledMessagesListSchemaScheduledMessagesInner.
        :param id: The id of this ChatScheduledMessagesListSchemaScheduledMessagesInner.
        :param post_at: The post_at of this ChatScheduledMessagesListSchemaScheduledMessagesInner.
        :param text: The text of this ChatScheduledMessagesListSchemaScheduledMessagesInner.
        """
        self.openapi_types = {
            'channel_id': str,
            'date_created': int,
            'id': str,
            'post_at': int,
            'text': str
        }

        self.attribute_map = {
            'channel_id': 'channel_id',
            'date_created': 'date_created',
            'id': 'id',
            'post_at': 'post_at',
            'text': 'text'
        }

        self._channel_id = channel_id
        self._date_created = date_created
        self._id = id
        self._post_at = post_at
        self._text = text

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ChatScheduledMessagesListSchemaScheduledMessagesInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The chat_scheduledMessages_list_schema_scheduled_messages_inner of this ChatScheduledMessagesListSchemaScheduledMessagesInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def channel_id(self):
        """Gets the channel_id of this ChatScheduledMessagesListSchemaScheduledMessagesInner.


        :return: The channel_id of this ChatScheduledMessagesListSchemaScheduledMessagesInner.
        :rtype: str
        """
        return self._channel_id

    @channel_id.setter
    def channel_id(self, channel_id):
        """Sets the channel_id of this ChatScheduledMessagesListSchemaScheduledMessagesInner.


        :param channel_id: The channel_id of this ChatScheduledMessagesListSchemaScheduledMessagesInner.
        :type channel_id: str
        """
        if channel_id is None:
            raise ValueError("Invalid value for `channel_id`, must not be `None`")
        if channel_id is not None and not re.search(r'^[C][A-Z0-9]{2,}$', channel_id):
            raise ValueError("Invalid value for `channel_id`, must be a follow pattern or equal to `/^[C][A-Z0-9]{2,}$/`")

        self._channel_id = channel_id

    @property
    def date_created(self):
        """Gets the date_created of this ChatScheduledMessagesListSchemaScheduledMessagesInner.


        :return: The date_created of this ChatScheduledMessagesListSchemaScheduledMessagesInner.
        :rtype: int
        """
        return self._date_created

    @date_created.setter
    def date_created(self, date_created):
        """Sets the date_created of this ChatScheduledMessagesListSchemaScheduledMessagesInner.


        :param date_created: The date_created of this ChatScheduledMessagesListSchemaScheduledMessagesInner.
        :type date_created: int
        """
        if date_created is None:
            raise ValueError("Invalid value for `date_created`, must not be `None`")

        self._date_created = date_created

    @property
    def id(self):
        """Gets the id of this ChatScheduledMessagesListSchemaScheduledMessagesInner.


        :return: The id of this ChatScheduledMessagesListSchemaScheduledMessagesInner.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ChatScheduledMessagesListSchemaScheduledMessagesInner.


        :param id: The id of this ChatScheduledMessagesListSchemaScheduledMessagesInner.
        :type id: str
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")
        if id is not None and not re.search(r'^[Q][A-Z0-9]{8,}$', id):
            raise ValueError("Invalid value for `id`, must be a follow pattern or equal to `/^[Q][A-Z0-9]{8,}$/`")

        self._id = id

    @property
    def post_at(self):
        """Gets the post_at of this ChatScheduledMessagesListSchemaScheduledMessagesInner.


        :return: The post_at of this ChatScheduledMessagesListSchemaScheduledMessagesInner.
        :rtype: int
        """
        return self._post_at

    @post_at.setter
    def post_at(self, post_at):
        """Sets the post_at of this ChatScheduledMessagesListSchemaScheduledMessagesInner.


        :param post_at: The post_at of this ChatScheduledMessagesListSchemaScheduledMessagesInner.
        :type post_at: int
        """
        if post_at is None:
            raise ValueError("Invalid value for `post_at`, must not be `None`")

        self._post_at = post_at

    @property
    def text(self):
        """Gets the text of this ChatScheduledMessagesListSchemaScheduledMessagesInner.


        :return: The text of this ChatScheduledMessagesListSchemaScheduledMessagesInner.
        :rtype: str
        """
        return self._text

    @text.setter
    def text(self, text):
        """Sets the text of this ChatScheduledMessagesListSchemaScheduledMessagesInner.


        :param text: The text of this ChatScheduledMessagesListSchemaScheduledMessagesInner.
        :type text: str
        """

        self._text = text
