# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.objs_subteam import ObjsSubteam
from openapi_server import util


class UsergroupsListSchema(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ok: bool=None, usergroups: List[ObjsSubteam]=None):
        """UsergroupsListSchema - a model defined in OpenAPI

        :param ok: The ok of this UsergroupsListSchema.
        :param usergroups: The usergroups of this UsergroupsListSchema.
        """
        self.openapi_types = {
            'ok': bool,
            'usergroups': List[ObjsSubteam]
        }

        self.attribute_map = {
            'ok': 'ok',
            'usergroups': 'usergroups'
        }

        self._ok = ok
        self._usergroups = usergroups

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UsergroupsListSchema':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The usergroups_list_schema of this UsergroupsListSchema.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ok(self):
        """Gets the ok of this UsergroupsListSchema.


        :return: The ok of this UsergroupsListSchema.
        :rtype: bool
        """
        return self._ok

    @ok.setter
    def ok(self, ok):
        """Sets the ok of this UsergroupsListSchema.


        :param ok: The ok of this UsergroupsListSchema.
        :type ok: bool
        """
        if ok is None:
            raise ValueError("Invalid value for `ok`, must not be `None`")

        self._ok = ok

    @property
    def usergroups(self):
        """Gets the usergroups of this UsergroupsListSchema.


        :return: The usergroups of this UsergroupsListSchema.
        :rtype: List[ObjsSubteam]
        """
        return self._usergroups

    @usergroups.setter
    def usergroups(self, usergroups):
        """Sets the usergroups of this UsergroupsListSchema.


        :param usergroups: The usergroups of this UsergroupsListSchema.
        :type usergroups: List[ObjsSubteam]
        """
        if usergroups is None:
            raise ValueError("Invalid value for `usergroups`, must not be `None`")

        self._usergroups = usergroups
