# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ApiPermissionsScopesListSuccessSchemaScopes(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, app_home: List[str]=None, channel: List[str]=None, group: List[str]=None, im: List[str]=None, mpim: List[str]=None, team: List[str]=None, user: List[str]=None):
        """ApiPermissionsScopesListSuccessSchemaScopes - a model defined in OpenAPI

        :param app_home: The app_home of this ApiPermissionsScopesListSuccessSchemaScopes.
        :param channel: The channel of this ApiPermissionsScopesListSuccessSchemaScopes.
        :param group: The group of this ApiPermissionsScopesListSuccessSchemaScopes.
        :param im: The im of this ApiPermissionsScopesListSuccessSchemaScopes.
        :param mpim: The mpim of this ApiPermissionsScopesListSuccessSchemaScopes.
        :param team: The team of this ApiPermissionsScopesListSuccessSchemaScopes.
        :param user: The user of this ApiPermissionsScopesListSuccessSchemaScopes.
        """
        self.openapi_types = {
            'app_home': List[str],
            'channel': List[str],
            'group': List[str],
            'im': List[str],
            'mpim': List[str],
            'team': List[str],
            'user': List[str]
        }

        self.attribute_map = {
            'app_home': 'app_home',
            'channel': 'channel',
            'group': 'group',
            'im': 'im',
            'mpim': 'mpim',
            'team': 'team',
            'user': 'user'
        }

        self._app_home = app_home
        self._channel = channel
        self._group = group
        self._im = im
        self._mpim = mpim
        self._team = team
        self._user = user

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApiPermissionsScopesListSuccessSchemaScopes':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The api_permissions_scopes_list_success_schema_scopes of this ApiPermissionsScopesListSuccessSchemaScopes.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def app_home(self):
        """Gets the app_home of this ApiPermissionsScopesListSuccessSchemaScopes.


        :return: The app_home of this ApiPermissionsScopesListSuccessSchemaScopes.
        :rtype: List[str]
        """
        return self._app_home

    @app_home.setter
    def app_home(self, app_home):
        """Sets the app_home of this ApiPermissionsScopesListSuccessSchemaScopes.


        :param app_home: The app_home of this ApiPermissionsScopesListSuccessSchemaScopes.
        :type app_home: List[str]
        """

        self._app_home = app_home

    @property
    def channel(self):
        """Gets the channel of this ApiPermissionsScopesListSuccessSchemaScopes.


        :return: The channel of this ApiPermissionsScopesListSuccessSchemaScopes.
        :rtype: List[str]
        """
        return self._channel

    @channel.setter
    def channel(self, channel):
        """Sets the channel of this ApiPermissionsScopesListSuccessSchemaScopes.


        :param channel: The channel of this ApiPermissionsScopesListSuccessSchemaScopes.
        :type channel: List[str]
        """

        self._channel = channel

    @property
    def group(self):
        """Gets the group of this ApiPermissionsScopesListSuccessSchemaScopes.


        :return: The group of this ApiPermissionsScopesListSuccessSchemaScopes.
        :rtype: List[str]
        """
        return self._group

    @group.setter
    def group(self, group):
        """Sets the group of this ApiPermissionsScopesListSuccessSchemaScopes.


        :param group: The group of this ApiPermissionsScopesListSuccessSchemaScopes.
        :type group: List[str]
        """

        self._group = group

    @property
    def im(self):
        """Gets the im of this ApiPermissionsScopesListSuccessSchemaScopes.


        :return: The im of this ApiPermissionsScopesListSuccessSchemaScopes.
        :rtype: List[str]
        """
        return self._im

    @im.setter
    def im(self, im):
        """Sets the im of this ApiPermissionsScopesListSuccessSchemaScopes.


        :param im: The im of this ApiPermissionsScopesListSuccessSchemaScopes.
        :type im: List[str]
        """

        self._im = im

    @property
    def mpim(self):
        """Gets the mpim of this ApiPermissionsScopesListSuccessSchemaScopes.


        :return: The mpim of this ApiPermissionsScopesListSuccessSchemaScopes.
        :rtype: List[str]
        """
        return self._mpim

    @mpim.setter
    def mpim(self, mpim):
        """Sets the mpim of this ApiPermissionsScopesListSuccessSchemaScopes.


        :param mpim: The mpim of this ApiPermissionsScopesListSuccessSchemaScopes.
        :type mpim: List[str]
        """

        self._mpim = mpim

    @property
    def team(self):
        """Gets the team of this ApiPermissionsScopesListSuccessSchemaScopes.


        :return: The team of this ApiPermissionsScopesListSuccessSchemaScopes.
        :rtype: List[str]
        """
        return self._team

    @team.setter
    def team(self, team):
        """Sets the team of this ApiPermissionsScopesListSuccessSchemaScopes.


        :param team: The team of this ApiPermissionsScopesListSuccessSchemaScopes.
        :type team: List[str]
        """

        self._team = team

    @property
    def user(self):
        """Gets the user of this ApiPermissionsScopesListSuccessSchemaScopes.


        :return: The user of this ApiPermissionsScopesListSuccessSchemaScopes.
        :rtype: List[str]
        """
        return self._user

    @user.setter
    def user(self, user):
        """Sets the user of this ApiPermissionsScopesListSuccessSchemaScopes.


        :param user: The user of this ApiPermissionsScopesListSuccessSchemaScopes.
        :type user: List[str]
        """

        self._user = user
