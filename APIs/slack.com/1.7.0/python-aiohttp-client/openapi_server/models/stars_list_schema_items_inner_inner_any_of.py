# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.objs_message import ObjsMessage
import re
from openapi_server import util


class StarsListSchemaItemsInnerInnerAnyOf(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, channel: str=None, date_create: int=None, message: ObjsMessage=None, type: str=None):
        """StarsListSchemaItemsInnerInnerAnyOf - a model defined in OpenAPI

        :param channel: The channel of this StarsListSchemaItemsInnerInnerAnyOf.
        :param date_create: The date_create of this StarsListSchemaItemsInnerInnerAnyOf.
        :param message: The message of this StarsListSchemaItemsInnerInnerAnyOf.
        :param type: The type of this StarsListSchemaItemsInnerInnerAnyOf.
        """
        self.openapi_types = {
            'channel': str,
            'date_create': int,
            'message': ObjsMessage,
            'type': str
        }

        self.attribute_map = {
            'channel': 'channel',
            'date_create': 'date_create',
            'message': 'message',
            'type': 'type'
        }

        self._channel = channel
        self._date_create = date_create
        self._message = message
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StarsListSchemaItemsInnerInnerAnyOf':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The stars_list_schema_items_inner_inner_anyOf of this StarsListSchemaItemsInnerInnerAnyOf.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def channel(self):
        """Gets the channel of this StarsListSchemaItemsInnerInnerAnyOf.


        :return: The channel of this StarsListSchemaItemsInnerInnerAnyOf.
        :rtype: str
        """
        return self._channel

    @channel.setter
    def channel(self, channel):
        """Sets the channel of this StarsListSchemaItemsInnerInnerAnyOf.


        :param channel: The channel of this StarsListSchemaItemsInnerInnerAnyOf.
        :type channel: str
        """
        if channel is None:
            raise ValueError("Invalid value for `channel`, must not be `None`")
        if channel is not None and not re.search(r'^[CGD][A-Z0-9]{8,}$', channel):
            raise ValueError("Invalid value for `channel`, must be a follow pattern or equal to `/^[CGD][A-Z0-9]{8,}$/`")

        self._channel = channel

    @property
    def date_create(self):
        """Gets the date_create of this StarsListSchemaItemsInnerInnerAnyOf.


        :return: The date_create of this StarsListSchemaItemsInnerInnerAnyOf.
        :rtype: int
        """
        return self._date_create

    @date_create.setter
    def date_create(self, date_create):
        """Sets the date_create of this StarsListSchemaItemsInnerInnerAnyOf.


        :param date_create: The date_create of this StarsListSchemaItemsInnerInnerAnyOf.
        :type date_create: int
        """
        if date_create is None:
            raise ValueError("Invalid value for `date_create`, must not be `None`")

        self._date_create = date_create

    @property
    def message(self):
        """Gets the message of this StarsListSchemaItemsInnerInnerAnyOf.


        :return: The message of this StarsListSchemaItemsInnerInnerAnyOf.
        :rtype: ObjsMessage
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this StarsListSchemaItemsInnerInnerAnyOf.


        :param message: The message of this StarsListSchemaItemsInnerInnerAnyOf.
        :type message: ObjsMessage
        """
        if message is None:
            raise ValueError("Invalid value for `message`, must not be `None`")

        self._message = message

    @property
    def type(self):
        """Gets the type of this StarsListSchemaItemsInnerInnerAnyOf.


        :return: The type of this StarsListSchemaItemsInnerInnerAnyOf.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this StarsListSchemaItemsInnerInnerAnyOf.


        :param type: The type of this StarsListSchemaItemsInnerInnerAnyOf.
        :type type: str
        """
        allowed_values = ["message"]  # noqa: E501
        if type not in allowed_values:
            raise ValueError(
                "Invalid value for `type` ({0}), must be one of {1}"
                .format(type, allowed_values)
            )

        self._type = type
