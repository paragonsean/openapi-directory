# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.conversations_replies_success_schema_messages_inner_inner import ConversationsRepliesSuccessSchemaMessagesInnerInner
from openapi_server import util


class ConversationsRepliesSuccessSchema(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, has_more: bool=None, messages: List[List[ConversationsRepliesSuccessSchemaMessagesInnerInner]]=None, ok: bool=None):
        """ConversationsRepliesSuccessSchema - a model defined in OpenAPI

        :param has_more: The has_more of this ConversationsRepliesSuccessSchema.
        :param messages: The messages of this ConversationsRepliesSuccessSchema.
        :param ok: The ok of this ConversationsRepliesSuccessSchema.
        """
        self.openapi_types = {
            'has_more': bool,
            'messages': List[List[ConversationsRepliesSuccessSchemaMessagesInnerInner]],
            'ok': bool
        }

        self.attribute_map = {
            'has_more': 'has_more',
            'messages': 'messages',
            'ok': 'ok'
        }

        self._has_more = has_more
        self._messages = messages
        self._ok = ok

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ConversationsRepliesSuccessSchema':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The conversations_replies_success_schema of this ConversationsRepliesSuccessSchema.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def has_more(self):
        """Gets the has_more of this ConversationsRepliesSuccessSchema.


        :return: The has_more of this ConversationsRepliesSuccessSchema.
        :rtype: bool
        """
        return self._has_more

    @has_more.setter
    def has_more(self, has_more):
        """Sets the has_more of this ConversationsRepliesSuccessSchema.


        :param has_more: The has_more of this ConversationsRepliesSuccessSchema.
        :type has_more: bool
        """

        self._has_more = has_more

    @property
    def messages(self):
        """Gets the messages of this ConversationsRepliesSuccessSchema.


        :return: The messages of this ConversationsRepliesSuccessSchema.
        :rtype: List[List[ConversationsRepliesSuccessSchemaMessagesInnerInner]]
        """
        return self._messages

    @messages.setter
    def messages(self, messages):
        """Sets the messages of this ConversationsRepliesSuccessSchema.


        :param messages: The messages of this ConversationsRepliesSuccessSchema.
        :type messages: List[List[ConversationsRepliesSuccessSchemaMessagesInnerInner]]
        """
        if messages is None:
            raise ValueError("Invalid value for `messages`, must not be `None`")

        self._messages = messages

    @property
    def ok(self):
        """Gets the ok of this ConversationsRepliesSuccessSchema.


        :return: The ok of this ConversationsRepliesSuccessSchema.
        :rtype: bool
        """
        return self._ok

    @ok.setter
    def ok(self, ok):
        """Sets the ok of this ConversationsRepliesSuccessSchema.


        :param ok: The ok of this ConversationsRepliesSuccessSchema.
        :type ok: bool
        """
        if ok is None:
            raise ValueError("Invalid value for `ok`, must not be `None`")

        self._ok = ok
