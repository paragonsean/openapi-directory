/**
 * Slack Web API
 * One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SlackWebApi);
  }
}(this, function(expect, SlackWebApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SlackWebApi.ObjsTeam();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ObjsTeam', function() {
    it('should create an instance of ObjsTeam', function() {
      // uncomment below and update the code to test ObjsTeam
      //var instance = new SlackWebApi.ObjsTeam();
      //expect(instance).to.be.a(SlackWebApi.ObjsTeam);
    });

    it('should have the property archived (base name: "archived")', function() {
      // uncomment below and update the code to test the property archived
      //var instance = new SlackWebApi.ObjsTeam();
      //expect(instance).to.be();
    });

    it('should have the property avatarBaseUrl (base name: "avatar_base_url")', function() {
      // uncomment below and update the code to test the property avatarBaseUrl
      //var instance = new SlackWebApi.ObjsTeam();
      //expect(instance).to.be();
    });

    it('should have the property created (base name: "created")', function() {
      // uncomment below and update the code to test the property created
      //var instance = new SlackWebApi.ObjsTeam();
      //expect(instance).to.be();
    });

    it('should have the property dateCreate (base name: "date_create")', function() {
      // uncomment below and update the code to test the property dateCreate
      //var instance = new SlackWebApi.ObjsTeam();
      //expect(instance).to.be();
    });

    it('should have the property deleted (base name: "deleted")', function() {
      // uncomment below and update the code to test the property deleted
      //var instance = new SlackWebApi.ObjsTeam();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new SlackWebApi.ObjsTeam();
      //expect(instance).to.be();
    });

    it('should have the property discoverable (base name: "discoverable")', function() {
      // uncomment below and update the code to test the property discoverable
      //var instance = new SlackWebApi.ObjsTeam();
      //expect(instance).to.be();
    });

    it('should have the property domain (base name: "domain")', function() {
      // uncomment below and update the code to test the property domain
      //var instance = new SlackWebApi.ObjsTeam();
      //expect(instance).to.be();
    });

    it('should have the property emailDomain (base name: "email_domain")', function() {
      // uncomment below and update the code to test the property emailDomain
      //var instance = new SlackWebApi.ObjsTeam();
      //expect(instance).to.be();
    });

    it('should have the property enterpriseId (base name: "enterprise_id")', function() {
      // uncomment below and update the code to test the property enterpriseId
      //var instance = new SlackWebApi.ObjsTeam();
      //expect(instance).to.be();
    });

    it('should have the property enterpriseName (base name: "enterprise_name")', function() {
      // uncomment below and update the code to test the property enterpriseName
      //var instance = new SlackWebApi.ObjsTeam();
      //expect(instance).to.be();
    });

    it('should have the property externalOrgMigrations (base name: "external_org_migrations")', function() {
      // uncomment below and update the code to test the property externalOrgMigrations
      //var instance = new SlackWebApi.ObjsTeam();
      //expect(instance).to.be();
    });

    it('should have the property hasComplianceExport (base name: "has_compliance_export")', function() {
      // uncomment below and update the code to test the property hasComplianceExport
      //var instance = new SlackWebApi.ObjsTeam();
      //expect(instance).to.be();
    });

    it('should have the property icon (base name: "icon")', function() {
      // uncomment below and update the code to test the property icon
      //var instance = new SlackWebApi.ObjsTeam();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new SlackWebApi.ObjsTeam();
      //expect(instance).to.be();
    });

    it('should have the property isAssigned (base name: "is_assigned")', function() {
      // uncomment below and update the code to test the property isAssigned
      //var instance = new SlackWebApi.ObjsTeam();
      //expect(instance).to.be();
    });

    it('should have the property isEnterprise (base name: "is_enterprise")', function() {
      // uncomment below and update the code to test the property isEnterprise
      //var instance = new SlackWebApi.ObjsTeam();
      //expect(instance).to.be();
    });

    it('should have the property isOverStorageLimit (base name: "is_over_storage_limit")', function() {
      // uncomment below and update the code to test the property isOverStorageLimit
      //var instance = new SlackWebApi.ObjsTeam();
      //expect(instance).to.be();
    });

    it('should have the property limitTs (base name: "limit_ts")', function() {
      // uncomment below and update the code to test the property limitTs
      //var instance = new SlackWebApi.ObjsTeam();
      //expect(instance).to.be();
    });

    it('should have the property locale (base name: "locale")', function() {
      // uncomment below and update the code to test the property locale
      //var instance = new SlackWebApi.ObjsTeam();
      //expect(instance).to.be();
    });

    it('should have the property messagesCount (base name: "messages_count")', function() {
      // uncomment below and update the code to test the property messagesCount
      //var instance = new SlackWebApi.ObjsTeam();
      //expect(instance).to.be();
    });

    it('should have the property msgEditWindowMins (base name: "msg_edit_window_mins")', function() {
      // uncomment below and update the code to test the property msgEditWindowMins
      //var instance = new SlackWebApi.ObjsTeam();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new SlackWebApi.ObjsTeam();
      //expect(instance).to.be();
    });

    it('should have the property overIntegrationsLimit (base name: "over_integrations_limit")', function() {
      // uncomment below and update the code to test the property overIntegrationsLimit
      //var instance = new SlackWebApi.ObjsTeam();
      //expect(instance).to.be();
    });

    it('should have the property overStorageLimit (base name: "over_storage_limit")', function() {
      // uncomment below and update the code to test the property overStorageLimit
      //var instance = new SlackWebApi.ObjsTeam();
      //expect(instance).to.be();
    });

    it('should have the property payProdCur (base name: "pay_prod_cur")', function() {
      // uncomment below and update the code to test the property payProdCur
      //var instance = new SlackWebApi.ObjsTeam();
      //expect(instance).to.be();
    });

    it('should have the property plan (base name: "plan")', function() {
      // uncomment below and update the code to test the property plan
      //var instance = new SlackWebApi.ObjsTeam();
      //expect(instance).to.be();
    });

    it('should have the property primaryOwner (base name: "primary_owner")', function() {
      // uncomment below and update the code to test the property primaryOwner
      //var instance = new SlackWebApi.ObjsTeam();
      //expect(instance).to.be();
    });

    it('should have the property ssoProvider (base name: "sso_provider")', function() {
      // uncomment below and update the code to test the property ssoProvider
      //var instance = new SlackWebApi.ObjsTeam();
      //expect(instance).to.be();
    });

  });

}));
