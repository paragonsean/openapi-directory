/**
 * Slack Web API
 * One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SlackWebApi);
  }
}(this, function(expect, SlackWebApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SlackWebApi.ObjsFile();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ObjsFile', function() {
    it('should create an instance of ObjsFile', function() {
      // uncomment below and update the code to test ObjsFile
      //var instance = new SlackWebApi.ObjsFile();
      //expect(instance).to.be.a(SlackWebApi.ObjsFile);
    });

    it('should have the property channels (base name: "channels")', function() {
      // uncomment below and update the code to test the property channels
      //var instance = new SlackWebApi.ObjsFile();
      //expect(instance).to.be();
    });

    it('should have the property commentsCount (base name: "comments_count")', function() {
      // uncomment below and update the code to test the property commentsCount
      //var instance = new SlackWebApi.ObjsFile();
      //expect(instance).to.be();
    });

    it('should have the property created (base name: "created")', function() {
      // uncomment below and update the code to test the property created
      //var instance = new SlackWebApi.ObjsFile();
      //expect(instance).to.be();
    });

    it('should have the property dateDelete (base name: "date_delete")', function() {
      // uncomment below and update the code to test the property dateDelete
      //var instance = new SlackWebApi.ObjsFile();
      //expect(instance).to.be();
    });

    it('should have the property displayAsBot (base name: "display_as_bot")', function() {
      // uncomment below and update the code to test the property displayAsBot
      //var instance = new SlackWebApi.ObjsFile();
      //expect(instance).to.be();
    });

    it('should have the property editable (base name: "editable")', function() {
      // uncomment below and update the code to test the property editable
      //var instance = new SlackWebApi.ObjsFile();
      //expect(instance).to.be();
    });

    it('should have the property editor (base name: "editor")', function() {
      // uncomment below and update the code to test the property editor
      //var instance = new SlackWebApi.ObjsFile();
      //expect(instance).to.be();
    });

    it('should have the property externalId (base name: "external_id")', function() {
      // uncomment below and update the code to test the property externalId
      //var instance = new SlackWebApi.ObjsFile();
      //expect(instance).to.be();
    });

    it('should have the property externalType (base name: "external_type")', function() {
      // uncomment below and update the code to test the property externalType
      //var instance = new SlackWebApi.ObjsFile();
      //expect(instance).to.be();
    });

    it('should have the property externalUrl (base name: "external_url")', function() {
      // uncomment below and update the code to test the property externalUrl
      //var instance = new SlackWebApi.ObjsFile();
      //expect(instance).to.be();
    });

    it('should have the property filetype (base name: "filetype")', function() {
      // uncomment below and update the code to test the property filetype
      //var instance = new SlackWebApi.ObjsFile();
      //expect(instance).to.be();
    });

    it('should have the property groups (base name: "groups")', function() {
      // uncomment below and update the code to test the property groups
      //var instance = new SlackWebApi.ObjsFile();
      //expect(instance).to.be();
    });

    it('should have the property hasRichPreview (base name: "has_rich_preview")', function() {
      // uncomment below and update the code to test the property hasRichPreview
      //var instance = new SlackWebApi.ObjsFile();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new SlackWebApi.ObjsFile();
      //expect(instance).to.be();
    });

    it('should have the property imageExifRotation (base name: "image_exif_rotation")', function() {
      // uncomment below and update the code to test the property imageExifRotation
      //var instance = new SlackWebApi.ObjsFile();
      //expect(instance).to.be();
    });

    it('should have the property ims (base name: "ims")', function() {
      // uncomment below and update the code to test the property ims
      //var instance = new SlackWebApi.ObjsFile();
      //expect(instance).to.be();
    });

    it('should have the property isExternal (base name: "is_external")', function() {
      // uncomment below and update the code to test the property isExternal
      //var instance = new SlackWebApi.ObjsFile();
      //expect(instance).to.be();
    });

    it('should have the property isPublic (base name: "is_public")', function() {
      // uncomment below and update the code to test the property isPublic
      //var instance = new SlackWebApi.ObjsFile();
      //expect(instance).to.be();
    });

    it('should have the property isStarred (base name: "is_starred")', function() {
      // uncomment below and update the code to test the property isStarred
      //var instance = new SlackWebApi.ObjsFile();
      //expect(instance).to.be();
    });

    it('should have the property isTombstoned (base name: "is_tombstoned")', function() {
      // uncomment below and update the code to test the property isTombstoned
      //var instance = new SlackWebApi.ObjsFile();
      //expect(instance).to.be();
    });

    it('should have the property lastEditor (base name: "last_editor")', function() {
      // uncomment below and update the code to test the property lastEditor
      //var instance = new SlackWebApi.ObjsFile();
      //expect(instance).to.be();
    });

    it('should have the property mimetype (base name: "mimetype")', function() {
      // uncomment below and update the code to test the property mimetype
      //var instance = new SlackWebApi.ObjsFile();
      //expect(instance).to.be();
    });

    it('should have the property mode (base name: "mode")', function() {
      // uncomment below and update the code to test the property mode
      //var instance = new SlackWebApi.ObjsFile();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new SlackWebApi.ObjsFile();
      //expect(instance).to.be();
    });

    it('should have the property nonOwnerEditable (base name: "non_owner_editable")', function() {
      // uncomment below and update the code to test the property nonOwnerEditable
      //var instance = new SlackWebApi.ObjsFile();
      //expect(instance).to.be();
    });

    it('should have the property numStars (base name: "num_stars")', function() {
      // uncomment below and update the code to test the property numStars
      //var instance = new SlackWebApi.ObjsFile();
      //expect(instance).to.be();
    });

    it('should have the property originalH (base name: "original_h")', function() {
      // uncomment below and update the code to test the property originalH
      //var instance = new SlackWebApi.ObjsFile();
      //expect(instance).to.be();
    });

    it('should have the property originalW (base name: "original_w")', function() {
      // uncomment below and update the code to test the property originalW
      //var instance = new SlackWebApi.ObjsFile();
      //expect(instance).to.be();
    });

    it('should have the property permalink (base name: "permalink")', function() {
      // uncomment below and update the code to test the property permalink
      //var instance = new SlackWebApi.ObjsFile();
      //expect(instance).to.be();
    });

    it('should have the property permalinkPublic (base name: "permalink_public")', function() {
      // uncomment below and update the code to test the property permalinkPublic
      //var instance = new SlackWebApi.ObjsFile();
      //expect(instance).to.be();
    });

    it('should have the property pinnedInfo (base name: "pinned_info")', function() {
      // uncomment below and update the code to test the property pinnedInfo
      //var instance = new SlackWebApi.ObjsFile();
      //expect(instance).to.be();
    });

    it('should have the property pinnedTo (base name: "pinned_to")', function() {
      // uncomment below and update the code to test the property pinnedTo
      //var instance = new SlackWebApi.ObjsFile();
      //expect(instance).to.be();
    });

    it('should have the property prettyType (base name: "pretty_type")', function() {
      // uncomment below and update the code to test the property prettyType
      //var instance = new SlackWebApi.ObjsFile();
      //expect(instance).to.be();
    });

    it('should have the property preview (base name: "preview")', function() {
      // uncomment below and update the code to test the property preview
      //var instance = new SlackWebApi.ObjsFile();
      //expect(instance).to.be();
    });

    it('should have the property publicUrlShared (base name: "public_url_shared")', function() {
      // uncomment below and update the code to test the property publicUrlShared
      //var instance = new SlackWebApi.ObjsFile();
      //expect(instance).to.be();
    });

    it('should have the property reactions (base name: "reactions")', function() {
      // uncomment below and update the code to test the property reactions
      //var instance = new SlackWebApi.ObjsFile();
      //expect(instance).to.be();
    });

    it('should have the property shares (base name: "shares")', function() {
      // uncomment below and update the code to test the property shares
      //var instance = new SlackWebApi.ObjsFile();
      //expect(instance).to.be();
    });

    it('should have the property size (base name: "size")', function() {
      // uncomment below and update the code to test the property size
      //var instance = new SlackWebApi.ObjsFile();
      //expect(instance).to.be();
    });

    it('should have the property sourceTeam (base name: "source_team")', function() {
      // uncomment below and update the code to test the property sourceTeam
      //var instance = new SlackWebApi.ObjsFile();
      //expect(instance).to.be();
    });

    it('should have the property state (base name: "state")', function() {
      // uncomment below and update the code to test the property state
      //var instance = new SlackWebApi.ObjsFile();
      //expect(instance).to.be();
    });

    it('should have the property thumb1024 (base name: "thumb_1024")', function() {
      // uncomment below and update the code to test the property thumb1024
      //var instance = new SlackWebApi.ObjsFile();
      //expect(instance).to.be();
    });

    it('should have the property thumb1024H (base name: "thumb_1024_h")', function() {
      // uncomment below and update the code to test the property thumb1024H
      //var instance = new SlackWebApi.ObjsFile();
      //expect(instance).to.be();
    });

    it('should have the property thumb1024W (base name: "thumb_1024_w")', function() {
      // uncomment below and update the code to test the property thumb1024W
      //var instance = new SlackWebApi.ObjsFile();
      //expect(instance).to.be();
    });

    it('should have the property thumb160 (base name: "thumb_160")', function() {
      // uncomment below and update the code to test the property thumb160
      //var instance = new SlackWebApi.ObjsFile();
      //expect(instance).to.be();
    });

    it('should have the property thumb360 (base name: "thumb_360")', function() {
      // uncomment below and update the code to test the property thumb360
      //var instance = new SlackWebApi.ObjsFile();
      //expect(instance).to.be();
    });

    it('should have the property thumb360H (base name: "thumb_360_h")', function() {
      // uncomment below and update the code to test the property thumb360H
      //var instance = new SlackWebApi.ObjsFile();
      //expect(instance).to.be();
    });

    it('should have the property thumb360W (base name: "thumb_360_w")', function() {
      // uncomment below and update the code to test the property thumb360W
      //var instance = new SlackWebApi.ObjsFile();
      //expect(instance).to.be();
    });

    it('should have the property thumb480 (base name: "thumb_480")', function() {
      // uncomment below and update the code to test the property thumb480
      //var instance = new SlackWebApi.ObjsFile();
      //expect(instance).to.be();
    });

    it('should have the property thumb480H (base name: "thumb_480_h")', function() {
      // uncomment below and update the code to test the property thumb480H
      //var instance = new SlackWebApi.ObjsFile();
      //expect(instance).to.be();
    });

    it('should have the property thumb480W (base name: "thumb_480_w")', function() {
      // uncomment below and update the code to test the property thumb480W
      //var instance = new SlackWebApi.ObjsFile();
      //expect(instance).to.be();
    });

    it('should have the property thumb64 (base name: "thumb_64")', function() {
      // uncomment below and update the code to test the property thumb64
      //var instance = new SlackWebApi.ObjsFile();
      //expect(instance).to.be();
    });

    it('should have the property thumb720 (base name: "thumb_720")', function() {
      // uncomment below and update the code to test the property thumb720
      //var instance = new SlackWebApi.ObjsFile();
      //expect(instance).to.be();
    });

    it('should have the property thumb720H (base name: "thumb_720_h")', function() {
      // uncomment below and update the code to test the property thumb720H
      //var instance = new SlackWebApi.ObjsFile();
      //expect(instance).to.be();
    });

    it('should have the property thumb720W (base name: "thumb_720_w")', function() {
      // uncomment below and update the code to test the property thumb720W
      //var instance = new SlackWebApi.ObjsFile();
      //expect(instance).to.be();
    });

    it('should have the property thumb80 (base name: "thumb_80")', function() {
      // uncomment below and update the code to test the property thumb80
      //var instance = new SlackWebApi.ObjsFile();
      //expect(instance).to.be();
    });

    it('should have the property thumb800 (base name: "thumb_800")', function() {
      // uncomment below and update the code to test the property thumb800
      //var instance = new SlackWebApi.ObjsFile();
      //expect(instance).to.be();
    });

    it('should have the property thumb800H (base name: "thumb_800_h")', function() {
      // uncomment below and update the code to test the property thumb800H
      //var instance = new SlackWebApi.ObjsFile();
      //expect(instance).to.be();
    });

    it('should have the property thumb800W (base name: "thumb_800_w")', function() {
      // uncomment below and update the code to test the property thumb800W
      //var instance = new SlackWebApi.ObjsFile();
      //expect(instance).to.be();
    });

    it('should have the property thumb960 (base name: "thumb_960")', function() {
      // uncomment below and update the code to test the property thumb960
      //var instance = new SlackWebApi.ObjsFile();
      //expect(instance).to.be();
    });

    it('should have the property thumb960H (base name: "thumb_960_h")', function() {
      // uncomment below and update the code to test the property thumb960H
      //var instance = new SlackWebApi.ObjsFile();
      //expect(instance).to.be();
    });

    it('should have the property thumb960W (base name: "thumb_960_w")', function() {
      // uncomment below and update the code to test the property thumb960W
      //var instance = new SlackWebApi.ObjsFile();
      //expect(instance).to.be();
    });

    it('should have the property thumbTiny (base name: "thumb_tiny")', function() {
      // uncomment below and update the code to test the property thumbTiny
      //var instance = new SlackWebApi.ObjsFile();
      //expect(instance).to.be();
    });

    it('should have the property timestamp (base name: "timestamp")', function() {
      // uncomment below and update the code to test the property timestamp
      //var instance = new SlackWebApi.ObjsFile();
      //expect(instance).to.be();
    });

    it('should have the property title (base name: "title")', function() {
      // uncomment below and update the code to test the property title
      //var instance = new SlackWebApi.ObjsFile();
      //expect(instance).to.be();
    });

    it('should have the property updated (base name: "updated")', function() {
      // uncomment below and update the code to test the property updated
      //var instance = new SlackWebApi.ObjsFile();
      //expect(instance).to.be();
    });

    it('should have the property urlPrivate (base name: "url_private")', function() {
      // uncomment below and update the code to test the property urlPrivate
      //var instance = new SlackWebApi.ObjsFile();
      //expect(instance).to.be();
    });

    it('should have the property urlPrivateDownload (base name: "url_private_download")', function() {
      // uncomment below and update the code to test the property urlPrivateDownload
      //var instance = new SlackWebApi.ObjsFile();
      //expect(instance).to.be();
    });

    it('should have the property user (base name: "user")', function() {
      // uncomment below and update the code to test the property user
      //var instance = new SlackWebApi.ObjsFile();
      //expect(instance).to.be();
    });

    it('should have the property userTeam (base name: "user_team")', function() {
      // uncomment below and update the code to test the property userTeam
      //var instance = new SlackWebApi.ObjsFile();
      //expect(instance).to.be();
    });

    it('should have the property username (base name: "username")', function() {
      // uncomment below and update the code to test the property username
      //var instance = new SlackWebApi.ObjsFile();
      //expect(instance).to.be();
    });

  });

}));
