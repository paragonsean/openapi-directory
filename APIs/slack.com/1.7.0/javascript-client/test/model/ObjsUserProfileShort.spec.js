/**
 * Slack Web API
 * One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SlackWebApi);
  }
}(this, function(expect, SlackWebApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SlackWebApi.ObjsUserProfileShort();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ObjsUserProfileShort', function() {
    it('should create an instance of ObjsUserProfileShort', function() {
      // uncomment below and update the code to test ObjsUserProfileShort
      //var instance = new SlackWebApi.ObjsUserProfileShort();
      //expect(instance).to.be.a(SlackWebApi.ObjsUserProfileShort);
    });

    it('should have the property avatarHash (base name: "avatar_hash")', function() {
      // uncomment below and update the code to test the property avatarHash
      //var instance = new SlackWebApi.ObjsUserProfileShort();
      //expect(instance).to.be();
    });

    it('should have the property displayName (base name: "display_name")', function() {
      // uncomment below and update the code to test the property displayName
      //var instance = new SlackWebApi.ObjsUserProfileShort();
      //expect(instance).to.be();
    });

    it('should have the property displayNameNormalized (base name: "display_name_normalized")', function() {
      // uncomment below and update the code to test the property displayNameNormalized
      //var instance = new SlackWebApi.ObjsUserProfileShort();
      //expect(instance).to.be();
    });

    it('should have the property firstName (base name: "first_name")', function() {
      // uncomment below and update the code to test the property firstName
      //var instance = new SlackWebApi.ObjsUserProfileShort();
      //expect(instance).to.be();
    });

    it('should have the property image72 (base name: "image_72")', function() {
      // uncomment below and update the code to test the property image72
      //var instance = new SlackWebApi.ObjsUserProfileShort();
      //expect(instance).to.be();
    });

    it('should have the property isRestricted (base name: "is_restricted")', function() {
      // uncomment below and update the code to test the property isRestricted
      //var instance = new SlackWebApi.ObjsUserProfileShort();
      //expect(instance).to.be();
    });

    it('should have the property isUltraRestricted (base name: "is_ultra_restricted")', function() {
      // uncomment below and update the code to test the property isUltraRestricted
      //var instance = new SlackWebApi.ObjsUserProfileShort();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new SlackWebApi.ObjsUserProfileShort();
      //expect(instance).to.be();
    });

    it('should have the property realName (base name: "real_name")', function() {
      // uncomment below and update the code to test the property realName
      //var instance = new SlackWebApi.ObjsUserProfileShort();
      //expect(instance).to.be();
    });

    it('should have the property realNameNormalized (base name: "real_name_normalized")', function() {
      // uncomment below and update the code to test the property realNameNormalized
      //var instance = new SlackWebApi.ObjsUserProfileShort();
      //expect(instance).to.be();
    });

    it('should have the property team (base name: "team")', function() {
      // uncomment below and update the code to test the property team
      //var instance = new SlackWebApi.ObjsUserProfileShort();
      //expect(instance).to.be();
    });

  });

}));
