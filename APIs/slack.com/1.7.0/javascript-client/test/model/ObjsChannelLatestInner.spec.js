/**
 * Slack Web API
 * One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SlackWebApi);
  }
}(this, function(expect, SlackWebApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SlackWebApi.ObjsChannelLatestInner();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ObjsChannelLatestInner', function() {
    it('should create an instance of ObjsChannelLatestInner', function() {
      // uncomment below and update the code to test ObjsChannelLatestInner
      //var instance = new SlackWebApi.ObjsChannelLatestInner();
      //expect(instance).to.be.a(SlackWebApi.ObjsChannelLatestInner);
    });

    it('should have the property attachments (base name: "attachments")', function() {
      // uncomment below and update the code to test the property attachments
      //var instance = new SlackWebApi.ObjsChannelLatestInner();
      //expect(instance).to.be();
    });

    it('should have the property blocks (base name: "blocks")', function() {
      // uncomment below and update the code to test the property blocks
      //var instance = new SlackWebApi.ObjsChannelLatestInner();
      //expect(instance).to.be();
    });

    it('should have the property botId (base name: "bot_id")', function() {
      // uncomment below and update the code to test the property botId
      //var instance = new SlackWebApi.ObjsChannelLatestInner();
      //expect(instance).to.be();
    });

    it('should have the property botProfile (base name: "bot_profile")', function() {
      // uncomment below and update the code to test the property botProfile
      //var instance = new SlackWebApi.ObjsChannelLatestInner();
      //expect(instance).to.be();
    });

    it('should have the property clientMsgId (base name: "client_msg_id")', function() {
      // uncomment below and update the code to test the property clientMsgId
      //var instance = new SlackWebApi.ObjsChannelLatestInner();
      //expect(instance).to.be();
    });

    it('should have the property comment (base name: "comment")', function() {
      // uncomment below and update the code to test the property comment
      //var instance = new SlackWebApi.ObjsChannelLatestInner();
      //expect(instance).to.be();
    });

    it('should have the property displayAsBot (base name: "display_as_bot")', function() {
      // uncomment below and update the code to test the property displayAsBot
      //var instance = new SlackWebApi.ObjsChannelLatestInner();
      //expect(instance).to.be();
    });

    it('should have the property file (base name: "file")', function() {
      // uncomment below and update the code to test the property file
      //var instance = new SlackWebApi.ObjsChannelLatestInner();
      //expect(instance).to.be();
    });

    it('should have the property files (base name: "files")', function() {
      // uncomment below and update the code to test the property files
      //var instance = new SlackWebApi.ObjsChannelLatestInner();
      //expect(instance).to.be();
    });

    it('should have the property icons (base name: "icons")', function() {
      // uncomment below and update the code to test the property icons
      //var instance = new SlackWebApi.ObjsChannelLatestInner();
      //expect(instance).to.be();
    });

    it('should have the property inviter (base name: "inviter")', function() {
      // uncomment below and update the code to test the property inviter
      //var instance = new SlackWebApi.ObjsChannelLatestInner();
      //expect(instance).to.be();
    });

    it('should have the property isDelayedMessage (base name: "is_delayed_message")', function() {
      // uncomment below and update the code to test the property isDelayedMessage
      //var instance = new SlackWebApi.ObjsChannelLatestInner();
      //expect(instance).to.be();
    });

    it('should have the property isIntro (base name: "is_intro")', function() {
      // uncomment below and update the code to test the property isIntro
      //var instance = new SlackWebApi.ObjsChannelLatestInner();
      //expect(instance).to.be();
    });

    it('should have the property isStarred (base name: "is_starred")', function() {
      // uncomment below and update the code to test the property isStarred
      //var instance = new SlackWebApi.ObjsChannelLatestInner();
      //expect(instance).to.be();
    });

    it('should have the property lastRead (base name: "last_read")', function() {
      // uncomment below and update the code to test the property lastRead
      //var instance = new SlackWebApi.ObjsChannelLatestInner();
      //expect(instance).to.be();
    });

    it('should have the property latestReply (base name: "latest_reply")', function() {
      // uncomment below and update the code to test the property latestReply
      //var instance = new SlackWebApi.ObjsChannelLatestInner();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new SlackWebApi.ObjsChannelLatestInner();
      //expect(instance).to.be();
    });

    it('should have the property oldName (base name: "old_name")', function() {
      // uncomment below and update the code to test the property oldName
      //var instance = new SlackWebApi.ObjsChannelLatestInner();
      //expect(instance).to.be();
    });

    it('should have the property parentUserId (base name: "parent_user_id")', function() {
      // uncomment below and update the code to test the property parentUserId
      //var instance = new SlackWebApi.ObjsChannelLatestInner();
      //expect(instance).to.be();
    });

    it('should have the property permalink (base name: "permalink")', function() {
      // uncomment below and update the code to test the property permalink
      //var instance = new SlackWebApi.ObjsChannelLatestInner();
      //expect(instance).to.be();
    });

    it('should have the property pinnedTo (base name: "pinned_to")', function() {
      // uncomment below and update the code to test the property pinnedTo
      //var instance = new SlackWebApi.ObjsChannelLatestInner();
      //expect(instance).to.be();
    });

    it('should have the property purpose (base name: "purpose")', function() {
      // uncomment below and update the code to test the property purpose
      //var instance = new SlackWebApi.ObjsChannelLatestInner();
      //expect(instance).to.be();
    });

    it('should have the property reactions (base name: "reactions")', function() {
      // uncomment below and update the code to test the property reactions
      //var instance = new SlackWebApi.ObjsChannelLatestInner();
      //expect(instance).to.be();
    });

    it('should have the property replyCount (base name: "reply_count")', function() {
      // uncomment below and update the code to test the property replyCount
      //var instance = new SlackWebApi.ObjsChannelLatestInner();
      //expect(instance).to.be();
    });

    it('should have the property replyUsers (base name: "reply_users")', function() {
      // uncomment below and update the code to test the property replyUsers
      //var instance = new SlackWebApi.ObjsChannelLatestInner();
      //expect(instance).to.be();
    });

    it('should have the property replyUsersCount (base name: "reply_users_count")', function() {
      // uncomment below and update the code to test the property replyUsersCount
      //var instance = new SlackWebApi.ObjsChannelLatestInner();
      //expect(instance).to.be();
    });

    it('should have the property sourceTeam (base name: "source_team")', function() {
      // uncomment below and update the code to test the property sourceTeam
      //var instance = new SlackWebApi.ObjsChannelLatestInner();
      //expect(instance).to.be();
    });

    it('should have the property subscribed (base name: "subscribed")', function() {
      // uncomment below and update the code to test the property subscribed
      //var instance = new SlackWebApi.ObjsChannelLatestInner();
      //expect(instance).to.be();
    });

    it('should have the property subtype (base name: "subtype")', function() {
      // uncomment below and update the code to test the property subtype
      //var instance = new SlackWebApi.ObjsChannelLatestInner();
      //expect(instance).to.be();
    });

    it('should have the property team (base name: "team")', function() {
      // uncomment below and update the code to test the property team
      //var instance = new SlackWebApi.ObjsChannelLatestInner();
      //expect(instance).to.be();
    });

    it('should have the property text (base name: "text")', function() {
      // uncomment below and update the code to test the property text
      //var instance = new SlackWebApi.ObjsChannelLatestInner();
      //expect(instance).to.be();
    });

    it('should have the property threadTs (base name: "thread_ts")', function() {
      // uncomment below and update the code to test the property threadTs
      //var instance = new SlackWebApi.ObjsChannelLatestInner();
      //expect(instance).to.be();
    });

    it('should have the property topic (base name: "topic")', function() {
      // uncomment below and update the code to test the property topic
      //var instance = new SlackWebApi.ObjsChannelLatestInner();
      //expect(instance).to.be();
    });

    it('should have the property ts (base name: "ts")', function() {
      // uncomment below and update the code to test the property ts
      //var instance = new SlackWebApi.ObjsChannelLatestInner();
      //expect(instance).to.be();
    });

    it('should have the property type (base name: "type")', function() {
      // uncomment below and update the code to test the property type
      //var instance = new SlackWebApi.ObjsChannelLatestInner();
      //expect(instance).to.be();
    });

    it('should have the property unreadCount (base name: "unread_count")', function() {
      // uncomment below and update the code to test the property unreadCount
      //var instance = new SlackWebApi.ObjsChannelLatestInner();
      //expect(instance).to.be();
    });

    it('should have the property upload (base name: "upload")', function() {
      // uncomment below and update the code to test the property upload
      //var instance = new SlackWebApi.ObjsChannelLatestInner();
      //expect(instance).to.be();
    });

    it('should have the property user (base name: "user")', function() {
      // uncomment below and update the code to test the property user
      //var instance = new SlackWebApi.ObjsChannelLatestInner();
      //expect(instance).to.be();
    });

    it('should have the property userProfile (base name: "user_profile")', function() {
      // uncomment below and update the code to test the property userProfile
      //var instance = new SlackWebApi.ObjsChannelLatestInner();
      //expect(instance).to.be();
    });

    it('should have the property userTeam (base name: "user_team")', function() {
      // uncomment below and update the code to test the property userTeam
      //var instance = new SlackWebApi.ObjsChannelLatestInner();
      //expect(instance).to.be();
    });

    it('should have the property username (base name: "username")', function() {
      // uncomment below and update the code to test the property username
      //var instance = new SlackWebApi.ObjsChannelLatestInner();
      //expect(instance).to.be();
    });

  });

}));
