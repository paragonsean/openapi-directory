/**
 * Slack Web API
 * One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SlackWebApi);
  }
}(this, function(expect, SlackWebApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SlackWebApi.AdminConversationsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('AdminConversationsApi', function() {
    describe('adminConversationsArchive', function() {
      it('should call adminConversationsArchive successfully', function(done) {
        //uncomment below and update the code to test adminConversationsArchive
        //instance.adminConversationsArchive(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('adminConversationsConvertToPrivate', function() {
      it('should call adminConversationsConvertToPrivate successfully', function(done) {
        //uncomment below and update the code to test adminConversationsConvertToPrivate
        //instance.adminConversationsConvertToPrivate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('adminConversationsCreate', function() {
      it('should call adminConversationsCreate successfully', function(done) {
        //uncomment below and update the code to test adminConversationsCreate
        //instance.adminConversationsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('adminConversationsDelete', function() {
      it('should call adminConversationsDelete successfully', function(done) {
        //uncomment below and update the code to test adminConversationsDelete
        //instance.adminConversationsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('adminConversationsDisconnectShared', function() {
      it('should call adminConversationsDisconnectShared successfully', function(done) {
        //uncomment below and update the code to test adminConversationsDisconnectShared
        //instance.adminConversationsDisconnectShared(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('adminConversationsGetConversationPrefs', function() {
      it('should call adminConversationsGetConversationPrefs successfully', function(done) {
        //uncomment below and update the code to test adminConversationsGetConversationPrefs
        //instance.adminConversationsGetConversationPrefs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('adminConversationsGetTeams', function() {
      it('should call adminConversationsGetTeams successfully', function(done) {
        //uncomment below and update the code to test adminConversationsGetTeams
        //instance.adminConversationsGetTeams(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('adminConversationsInvite', function() {
      it('should call adminConversationsInvite successfully', function(done) {
        //uncomment below and update the code to test adminConversationsInvite
        //instance.adminConversationsInvite(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('adminConversationsRename', function() {
      it('should call adminConversationsRename successfully', function(done) {
        //uncomment below and update the code to test adminConversationsRename
        //instance.adminConversationsRename(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('adminConversationsSearch', function() {
      it('should call adminConversationsSearch successfully', function(done) {
        //uncomment below and update the code to test adminConversationsSearch
        //instance.adminConversationsSearch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('adminConversationsSetConversationPrefs', function() {
      it('should call adminConversationsSetConversationPrefs successfully', function(done) {
        //uncomment below and update the code to test adminConversationsSetConversationPrefs
        //instance.adminConversationsSetConversationPrefs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('adminConversationsSetTeams', function() {
      it('should call adminConversationsSetTeams successfully', function(done) {
        //uncomment below and update the code to test adminConversationsSetTeams
        //instance.adminConversationsSetTeams(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('adminConversationsUnarchive', function() {
      it('should call adminConversationsUnarchive successfully', function(done) {
        //uncomment below and update the code to test adminConversationsUnarchive
        //instance.adminConversationsUnarchive(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
