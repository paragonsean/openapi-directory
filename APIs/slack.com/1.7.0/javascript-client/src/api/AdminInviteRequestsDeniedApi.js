/**
 * Slack Web API
 * One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import DefaultErrorTemplate from '../model/DefaultErrorTemplate';
import DefaultSuccessTemplate from '../model/DefaultSuccessTemplate';

/**
* AdminInviteRequestsDenied service.
* @module api/AdminInviteRequestsDeniedApi
* @version 1.7.0
*/
export default class AdminInviteRequestsDeniedApi {

    /**
    * Constructs a new AdminInviteRequestsDeniedApi. 
    * @alias module:api/AdminInviteRequestsDeniedApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the adminInviteRequestsDeniedList operation.
     * @callback module:api/AdminInviteRequestsDeniedApi~adminInviteRequestsDeniedListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DefaultSuccessTemplate} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List all denied workspace invite requests.
     * @param {String} token Authentication token. Requires scope: `admin.invites:read`
     * @param {Object} opts Optional parameters
     * @param {String} [teamId] ID for the workspace where the invite requests were made.
     * @param {String} [cursor] Value of the `next_cursor` field sent as part of the previous api response
     * @param {Number} [limit] The number of results that will be returned by the API on each invocation. Must be between 1 - 1000 both inclusive
     * @param {module:api/AdminInviteRequestsDeniedApi~adminInviteRequestsDeniedListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DefaultSuccessTemplate}
     */
    adminInviteRequestsDeniedList(token, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'token' is set
      if (token === undefined || token === null) {
        throw new Error("Missing the required parameter 'token' when calling adminInviteRequestsDeniedList");
      }

      let pathParams = {
      };
      let queryParams = {
        'team_id': opts['teamId'],
        'cursor': opts['cursor'],
        'limit': opts['limit']
      };
      let headerParams = {
        'token': token
      };
      let formParams = {
      };

      let authNames = ['slackAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = DefaultSuccessTemplate;
      return this.apiClient.callApi(
        '/admin.inviteRequests.denied.list', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
