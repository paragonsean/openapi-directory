/**
 * Slack Web API
 * One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import MigrationExchangeErrorSchema from '../model/MigrationExchangeErrorSchema';
import MigrationExchangeSuccessSchema from '../model/MigrationExchangeSuccessSchema';

/**
* Migration service.
* @module api/MigrationApi
* @version 1.7.0
*/
export default class MigrationApi {

    /**
    * Constructs a new MigrationApi. 
    * @alias module:api/MigrationApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the migrationExchange operation.
     * @callback module:api/MigrationApi~migrationExchangeCallback
     * @param {String} error Error message, if any.
     * @param {module:model/MigrationExchangeSuccessSchema} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * For Enterprise Grid workspaces, map local user IDs to global user IDs
     * @param {String} token Authentication token. Requires scope: `tokens.basic`
     * @param {String} users A comma-separated list of user ids, up to 400 per request
     * @param {Object} opts Optional parameters
     * @param {String} [teamId] Specify team_id starts with `T` in case of Org Token
     * @param {Boolean} [toOld] Specify `true` to convert `W` global user IDs to workspace-specific `U` IDs. Defaults to `false`.
     * @param {module:api/MigrationApi~migrationExchangeCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/MigrationExchangeSuccessSchema}
     */
    migrationExchange(token, users, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'token' is set
      if (token === undefined || token === null) {
        throw new Error("Missing the required parameter 'token' when calling migrationExchange");
      }
      // verify the required parameter 'users' is set
      if (users === undefined || users === null) {
        throw new Error("Missing the required parameter 'users' when calling migrationExchange");
      }

      let pathParams = {
      };
      let queryParams = {
        'token': token,
        'users': users,
        'team_id': opts['teamId'],
        'to_old': opts['toOld']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['slackAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = MigrationExchangeSuccessSchema;
      return this.apiClient.callApi(
        '/migration.exchange', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
