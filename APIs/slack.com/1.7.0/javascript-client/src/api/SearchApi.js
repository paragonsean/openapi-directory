/**
 * Slack Web API
 * One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import DefaultErrorTemplate from '../model/DefaultErrorTemplate';
import DefaultSuccessTemplate from '../model/DefaultSuccessTemplate';

/**
* Search service.
* @module api/SearchApi
* @version 1.7.0
*/
export default class SearchApi {

    /**
    * Constructs a new SearchApi. 
    * @alias module:api/SearchApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the searchMessages operation.
     * @callback module:api/SearchApi~searchMessagesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DefaultSuccessTemplate} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Searches for messages matching a query.
     * @param {String} token Authentication token. Requires scope: `search:read`
     * @param {String} query Search query.
     * @param {Object} opts Optional parameters
     * @param {Number} [count] Pass the number of results you want per \"page\". Maximum of `100`.
     * @param {Boolean} [highlight] Pass a value of `true` to enable query highlight markers (see below).
     * @param {Number} [page] 
     * @param {String} [sort] Return matches sorted by either `score` or `timestamp`.
     * @param {String} [sortDir] Change sort direction to ascending (`asc`) or descending (`desc`).
     * @param {module:api/SearchApi~searchMessagesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DefaultSuccessTemplate}
     */
    searchMessages(token, query, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'token' is set
      if (token === undefined || token === null) {
        throw new Error("Missing the required parameter 'token' when calling searchMessages");
      }
      // verify the required parameter 'query' is set
      if (query === undefined || query === null) {
        throw new Error("Missing the required parameter 'query' when calling searchMessages");
      }

      let pathParams = {
      };
      let queryParams = {
        'token': token,
        'count': opts['count'],
        'highlight': opts['highlight'],
        'page': opts['page'],
        'query': query,
        'sort': opts['sort'],
        'sort_dir': opts['sortDir']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['slackAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = DefaultSuccessTemplate;
      return this.apiClient.callApi(
        '/search.messages', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
