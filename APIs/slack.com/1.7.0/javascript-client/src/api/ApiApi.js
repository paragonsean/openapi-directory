/**
 * Slack Web API
 * One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ApiTestErrorSchema from '../model/ApiTestErrorSchema';
import ApiTestSuccessSchema from '../model/ApiTestSuccessSchema';

/**
* Api service.
* @module api/ApiApi
* @version 1.7.0
*/
export default class ApiApi {

    /**
    * Constructs a new ApiApi. 
    * @alias module:api/ApiApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the apiTest operation.
     * @callback module:api/ApiApi~apiTestCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApiTestSuccessSchema} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Checks API calling code.
     * @param {Object} opts Optional parameters
     * @param {String} [error] Error response to return
     * @param {String} [foo] example property to return
     * @param {module:api/ApiApi~apiTestCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApiTestSuccessSchema}
     */
    apiTest(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'error': opts['error'],
        'foo': opts['foo']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['slackAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ApiTestSuccessSchema;
      return this.apiClient.callApi(
        '/api.test', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
