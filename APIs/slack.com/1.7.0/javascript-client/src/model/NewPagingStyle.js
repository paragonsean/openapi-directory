/**
 * Slack Web API
 * One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The NewPagingStyle model module.
 * @module model/NewPagingStyle
 * @version 1.7.0
 */
class NewPagingStyle {
    /**
     * Constructs a new <code>NewPagingStyle</code>.
     * @alias module:model/NewPagingStyle
     * @param nextCursor {String} 
     */
    constructor(nextCursor) { 
        
        NewPagingStyle.initialize(this, nextCursor);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, nextCursor) { 
        obj['next_cursor'] = nextCursor;
    }

    /**
     * Constructs a <code>NewPagingStyle</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/NewPagingStyle} obj Optional instance to populate.
     * @return {module:model/NewPagingStyle} The populated <code>NewPagingStyle</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new NewPagingStyle();

            if (data.hasOwnProperty('next_cursor')) {
                obj['next_cursor'] = ApiClient.convertToType(data['next_cursor'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>NewPagingStyle</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>NewPagingStyle</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of NewPagingStyle.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['next_cursor'] && !(typeof data['next_cursor'] === 'string' || data['next_cursor'] instanceof String)) {
            throw new Error("Expected the field `next_cursor` to be a primitive type in the JSON string but got " + data['next_cursor']);
        }

        return true;
    }


}

NewPagingStyle.RequiredProperties = ["next_cursor"];

/**
 * @member {String} next_cursor
 */
NewPagingStyle.prototype['next_cursor'] = undefined;






export default NewPagingStyle;

