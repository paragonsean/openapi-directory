/**
 * Slack Web API
 * One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ObjsMessageAttachmentsInner model module.
 * @module model/ObjsMessageAttachmentsInner
 * @version 1.7.0
 */
class ObjsMessageAttachmentsInner {
    /**
     * Constructs a new <code>ObjsMessageAttachmentsInner</code>.
     * @alias module:model/ObjsMessageAttachmentsInner
     * @param id {Number} 
     */
    constructor(id) { 
        
        ObjsMessageAttachmentsInner.initialize(this, id);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id) { 
        obj['id'] = id;
    }

    /**
     * Constructs a <code>ObjsMessageAttachmentsInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ObjsMessageAttachmentsInner} obj Optional instance to populate.
     * @return {module:model/ObjsMessageAttachmentsInner} The populated <code>ObjsMessageAttachmentsInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ObjsMessageAttachmentsInner();

            if (data.hasOwnProperty('fallback')) {
                obj['fallback'] = ApiClient.convertToType(data['fallback'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('image_bytes')) {
                obj['image_bytes'] = ApiClient.convertToType(data['image_bytes'], 'Number');
            }
            if (data.hasOwnProperty('image_height')) {
                obj['image_height'] = ApiClient.convertToType(data['image_height'], 'Number');
            }
            if (data.hasOwnProperty('image_url')) {
                obj['image_url'] = ApiClient.convertToType(data['image_url'], 'String');
            }
            if (data.hasOwnProperty('image_width')) {
                obj['image_width'] = ApiClient.convertToType(data['image_width'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ObjsMessageAttachmentsInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ObjsMessageAttachmentsInner</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ObjsMessageAttachmentsInner.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['fallback'] && !(typeof data['fallback'] === 'string' || data['fallback'] instanceof String)) {
            throw new Error("Expected the field `fallback` to be a primitive type in the JSON string but got " + data['fallback']);
        }
        // ensure the json data is a string
        if (data['image_url'] && !(typeof data['image_url'] === 'string' || data['image_url'] instanceof String)) {
            throw new Error("Expected the field `image_url` to be a primitive type in the JSON string but got " + data['image_url']);
        }

        return true;
    }


}

ObjsMessageAttachmentsInner.RequiredProperties = ["id"];

/**
 * @member {String} fallback
 */
ObjsMessageAttachmentsInner.prototype['fallback'] = undefined;

/**
 * @member {Number} id
 */
ObjsMessageAttachmentsInner.prototype['id'] = undefined;

/**
 * @member {Number} image_bytes
 */
ObjsMessageAttachmentsInner.prototype['image_bytes'] = undefined;

/**
 * @member {Number} image_height
 */
ObjsMessageAttachmentsInner.prototype['image_height'] = undefined;

/**
 * @member {String} image_url
 */
ObjsMessageAttachmentsInner.prototype['image_url'] = undefined;

/**
 * @member {Number} image_width
 */
ObjsMessageAttachmentsInner.prototype['image_width'] = undefined;






export default ObjsMessageAttachmentsInner;

