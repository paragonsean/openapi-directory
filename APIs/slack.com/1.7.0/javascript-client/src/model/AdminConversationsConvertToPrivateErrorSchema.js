/**
 * Slack Web API
 * One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AdminConversationsConvertToPrivateErrorSchema model module.
 * @module model/AdminConversationsConvertToPrivateErrorSchema
 * @version 1.7.0
 */
class AdminConversationsConvertToPrivateErrorSchema {
    /**
     * Constructs a new <code>AdminConversationsConvertToPrivateErrorSchema</code>.
     * Schema for error response from admin.conversations.convertToPrivate
     * @alias module:model/AdminConversationsConvertToPrivateErrorSchema
     * @param error {module:model/AdminConversationsConvertToPrivateErrorSchema.ErrorEnum} 
     * @param ok {Boolean} 
     */
    constructor(error, ok) { 
        
        AdminConversationsConvertToPrivateErrorSchema.initialize(this, error, ok);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, error, ok) { 
        obj['error'] = error;
        obj['ok'] = ok;
    }

    /**
     * Constructs a <code>AdminConversationsConvertToPrivateErrorSchema</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AdminConversationsConvertToPrivateErrorSchema} obj Optional instance to populate.
     * @return {module:model/AdminConversationsConvertToPrivateErrorSchema} The populated <code>AdminConversationsConvertToPrivateErrorSchema</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AdminConversationsConvertToPrivateErrorSchema();

            if (data.hasOwnProperty('error')) {
                obj['error'] = ApiClient.convertToType(data['error'], 'String');
            }
            if (data.hasOwnProperty('ok')) {
                obj['ok'] = ApiClient.convertToType(data['ok'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AdminConversationsConvertToPrivateErrorSchema</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AdminConversationsConvertToPrivateErrorSchema</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AdminConversationsConvertToPrivateErrorSchema.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['error'] && !(typeof data['error'] === 'string' || data['error'] instanceof String)) {
            throw new Error("Expected the field `error` to be a primitive type in the JSON string but got " + data['error']);
        }

        return true;
    }


}

AdminConversationsConvertToPrivateErrorSchema.RequiredProperties = ["error", "ok"];

/**
 * @member {module:model/AdminConversationsConvertToPrivateErrorSchema.ErrorEnum} error
 */
AdminConversationsConvertToPrivateErrorSchema.prototype['error'] = undefined;

/**
 * @member {Boolean} ok
 */
AdminConversationsConvertToPrivateErrorSchema.prototype['ok'] = undefined;





/**
 * Allowed values for the <code>error</code> property.
 * @enum {String}
 * @readonly
 */
AdminConversationsConvertToPrivateErrorSchema['ErrorEnum'] = {

    /**
     * value: "feature_not_enabled"
     * @const
     */
    "feature_not_enabled": "feature_not_enabled",

    /**
     * value: "restricted_action"
     * @const
     */
    "restricted_action": "restricted_action",

    /**
     * value: "name_taken"
     * @const
     */
    "name_taken": "name_taken",

    /**
     * value: "channel_not_found"
     * @const
     */
    "channel_not_found": "channel_not_found",

    /**
     * value: "channel_type_not_supported"
     * @const
     */
    "channel_type_not_supported": "channel_type_not_supported",

    /**
     * value: "default_org_wide_channel"
     * @const
     */
    "default_org_wide_channel": "default_org_wide_channel",

    /**
     * value: "method_not_supported_for_channel_type"
     * @const
     */
    "method_not_supported_for_channel_type": "method_not_supported_for_channel_type",

    /**
     * value: "could_not_convert_channel"
     * @const
     */
    "could_not_convert_channel": "could_not_convert_channel",

    /**
     * value: "external_channel_migrating"
     * @const
     */
    "external_channel_migrating": "external_channel_migrating"
};



export default AdminConversationsConvertToPrivateErrorSchema;

