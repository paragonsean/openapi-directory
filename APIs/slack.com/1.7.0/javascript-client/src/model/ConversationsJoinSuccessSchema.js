/**
 * Slack Web API
 * One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ObjsConversationInner from './ObjsConversationInner';
import ResponseMetadata from './ResponseMetadata';

/**
 * The ConversationsJoinSuccessSchema model module.
 * @module model/ConversationsJoinSuccessSchema
 * @version 1.7.0
 */
class ConversationsJoinSuccessSchema {
    /**
     * Constructs a new <code>ConversationsJoinSuccessSchema</code>.
     * Schema for successful response from conversations.join method
     * @alias module:model/ConversationsJoinSuccessSchema
     * @param channel {Array.<module:model/ObjsConversationInner>} 
     * @param ok {Boolean} 
     */
    constructor(channel, ok) { 
        
        ConversationsJoinSuccessSchema.initialize(this, channel, ok);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, channel, ok) { 
        obj['channel'] = channel;
        obj['ok'] = ok;
    }

    /**
     * Constructs a <code>ConversationsJoinSuccessSchema</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ConversationsJoinSuccessSchema} obj Optional instance to populate.
     * @return {module:model/ConversationsJoinSuccessSchema} The populated <code>ConversationsJoinSuccessSchema</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ConversationsJoinSuccessSchema();

            if (data.hasOwnProperty('channel')) {
                obj['channel'] = ApiClient.convertToType(data['channel'], [ObjsConversationInner]);
            }
            if (data.hasOwnProperty('ok')) {
                obj['ok'] = ApiClient.convertToType(data['ok'], 'Boolean');
            }
            if (data.hasOwnProperty('response_metadata')) {
                obj['response_metadata'] = ResponseMetadata.constructFromObject(data['response_metadata']);
            }
            if (data.hasOwnProperty('warning')) {
                obj['warning'] = ApiClient.convertToType(data['warning'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ConversationsJoinSuccessSchema</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ConversationsJoinSuccessSchema</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ConversationsJoinSuccessSchema.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['channel']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['channel'])) {
                throw new Error("Expected the field `channel` to be an array in the JSON data but got " + data['channel']);
            }
            // validate the optional field `channel` (array)
            for (const item of data['channel']) {
                ObjsConversationInner.validateJSON(item);
            };
        }
        // validate the optional field `response_metadata`
        if (data['response_metadata']) { // data not null
          ResponseMetadata.validateJSON(data['response_metadata']);
        }
        // ensure the json data is a string
        if (data['warning'] && !(typeof data['warning'] === 'string' || data['warning'] instanceof String)) {
            throw new Error("Expected the field `warning` to be a primitive type in the JSON string but got " + data['warning']);
        }

        return true;
    }


}

ConversationsJoinSuccessSchema.RequiredProperties = ["channel", "ok"];

/**
 * @member {Array.<module:model/ObjsConversationInner>} channel
 */
ConversationsJoinSuccessSchema.prototype['channel'] = undefined;

/**
 * @member {Boolean} ok
 */
ConversationsJoinSuccessSchema.prototype['ok'] = undefined;

/**
 * @member {module:model/ResponseMetadata} response_metadata
 */
ConversationsJoinSuccessSchema.prototype['response_metadata'] = undefined;

/**
 * @member {String} warning
 */
ConversationsJoinSuccessSchema.prototype['warning'] = undefined;






export default ConversationsJoinSuccessSchema;

