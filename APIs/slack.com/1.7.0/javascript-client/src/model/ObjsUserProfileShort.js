/**
 * Slack Web API
 * One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ObjsUserProfileShort model module.
 * @module model/ObjsUserProfileShort
 * @version 1.7.0
 */
class ObjsUserProfileShort {
    /**
     * Constructs a new <code>ObjsUserProfileShort</code>.
     * @alias module:model/ObjsUserProfileShort
     * @param avatarHash {String} 
     * @param displayName {String} 
     * @param firstName {String} 
     * @param image72 {String} 
     * @param isRestricted {Boolean} 
     * @param isUltraRestricted {Boolean} 
     * @param name {String} 
     * @param realName {String} 
     * @param team {String} 
     */
    constructor(avatarHash, displayName, firstName, image72, isRestricted, isUltraRestricted, name, realName, team) { 
        
        ObjsUserProfileShort.initialize(this, avatarHash, displayName, firstName, image72, isRestricted, isUltraRestricted, name, realName, team);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, avatarHash, displayName, firstName, image72, isRestricted, isUltraRestricted, name, realName, team) { 
        obj['avatar_hash'] = avatarHash;
        obj['display_name'] = displayName;
        obj['first_name'] = firstName;
        obj['image_72'] = image72;
        obj['is_restricted'] = isRestricted;
        obj['is_ultra_restricted'] = isUltraRestricted;
        obj['name'] = name;
        obj['real_name'] = realName;
        obj['team'] = team;
    }

    /**
     * Constructs a <code>ObjsUserProfileShort</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ObjsUserProfileShort} obj Optional instance to populate.
     * @return {module:model/ObjsUserProfileShort} The populated <code>ObjsUserProfileShort</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ObjsUserProfileShort();

            if (data.hasOwnProperty('avatar_hash')) {
                obj['avatar_hash'] = ApiClient.convertToType(data['avatar_hash'], 'String');
            }
            if (data.hasOwnProperty('display_name')) {
                obj['display_name'] = ApiClient.convertToType(data['display_name'], 'String');
            }
            if (data.hasOwnProperty('display_name_normalized')) {
                obj['display_name_normalized'] = ApiClient.convertToType(data['display_name_normalized'], 'String');
            }
            if (data.hasOwnProperty('first_name')) {
                obj['first_name'] = ApiClient.convertToType(data['first_name'], 'String');
            }
            if (data.hasOwnProperty('image_72')) {
                obj['image_72'] = ApiClient.convertToType(data['image_72'], 'String');
            }
            if (data.hasOwnProperty('is_restricted')) {
                obj['is_restricted'] = ApiClient.convertToType(data['is_restricted'], 'Boolean');
            }
            if (data.hasOwnProperty('is_ultra_restricted')) {
                obj['is_ultra_restricted'] = ApiClient.convertToType(data['is_ultra_restricted'], 'Boolean');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('real_name')) {
                obj['real_name'] = ApiClient.convertToType(data['real_name'], 'String');
            }
            if (data.hasOwnProperty('real_name_normalized')) {
                obj['real_name_normalized'] = ApiClient.convertToType(data['real_name_normalized'], 'String');
            }
            if (data.hasOwnProperty('team')) {
                obj['team'] = ApiClient.convertToType(data['team'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ObjsUserProfileShort</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ObjsUserProfileShort</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ObjsUserProfileShort.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['avatar_hash'] && !(typeof data['avatar_hash'] === 'string' || data['avatar_hash'] instanceof String)) {
            throw new Error("Expected the field `avatar_hash` to be a primitive type in the JSON string but got " + data['avatar_hash']);
        }
        // ensure the json data is a string
        if (data['display_name'] && !(typeof data['display_name'] === 'string' || data['display_name'] instanceof String)) {
            throw new Error("Expected the field `display_name` to be a primitive type in the JSON string but got " + data['display_name']);
        }
        // ensure the json data is a string
        if (data['display_name_normalized'] && !(typeof data['display_name_normalized'] === 'string' || data['display_name_normalized'] instanceof String)) {
            throw new Error("Expected the field `display_name_normalized` to be a primitive type in the JSON string but got " + data['display_name_normalized']);
        }
        // ensure the json data is a string
        if (data['first_name'] && !(typeof data['first_name'] === 'string' || data['first_name'] instanceof String)) {
            throw new Error("Expected the field `first_name` to be a primitive type in the JSON string but got " + data['first_name']);
        }
        // ensure the json data is a string
        if (data['image_72'] && !(typeof data['image_72'] === 'string' || data['image_72'] instanceof String)) {
            throw new Error("Expected the field `image_72` to be a primitive type in the JSON string but got " + data['image_72']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['real_name'] && !(typeof data['real_name'] === 'string' || data['real_name'] instanceof String)) {
            throw new Error("Expected the field `real_name` to be a primitive type in the JSON string but got " + data['real_name']);
        }
        // ensure the json data is a string
        if (data['real_name_normalized'] && !(typeof data['real_name_normalized'] === 'string' || data['real_name_normalized'] instanceof String)) {
            throw new Error("Expected the field `real_name_normalized` to be a primitive type in the JSON string but got " + data['real_name_normalized']);
        }
        // ensure the json data is a string
        if (data['team'] && !(typeof data['team'] === 'string' || data['team'] instanceof String)) {
            throw new Error("Expected the field `team` to be a primitive type in the JSON string but got " + data['team']);
        }

        return true;
    }


}

ObjsUserProfileShort.RequiredProperties = ["avatar_hash", "display_name", "first_name", "image_72", "is_restricted", "is_ultra_restricted", "name", "real_name", "team"];

/**
 * @member {String} avatar_hash
 */
ObjsUserProfileShort.prototype['avatar_hash'] = undefined;

/**
 * @member {String} display_name
 */
ObjsUserProfileShort.prototype['display_name'] = undefined;

/**
 * @member {String} display_name_normalized
 */
ObjsUserProfileShort.prototype['display_name_normalized'] = undefined;

/**
 * @member {String} first_name
 */
ObjsUserProfileShort.prototype['first_name'] = undefined;

/**
 * @member {String} image_72
 */
ObjsUserProfileShort.prototype['image_72'] = undefined;

/**
 * @member {Boolean} is_restricted
 */
ObjsUserProfileShort.prototype['is_restricted'] = undefined;

/**
 * @member {Boolean} is_ultra_restricted
 */
ObjsUserProfileShort.prototype['is_ultra_restricted'] = undefined;

/**
 * @member {String} name
 */
ObjsUserProfileShort.prototype['name'] = undefined;

/**
 * @member {String} real_name
 */
ObjsUserProfileShort.prototype['real_name'] = undefined;

/**
 * @member {String} real_name_normalized
 */
ObjsUserProfileShort.prototype['real_name_normalized'] = undefined;

/**
 * @member {String} team
 */
ObjsUserProfileShort.prototype['team'] = undefined;






export default ObjsUserProfileShort;

