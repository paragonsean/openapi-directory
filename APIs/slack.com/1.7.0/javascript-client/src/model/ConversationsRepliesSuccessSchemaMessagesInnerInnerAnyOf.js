/**
 * Slack Web API
 * One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ObjsUserProfileShort from './ObjsUserProfileShort';

/**
 * The ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf model module.
 * @module model/ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf
 * @version 1.7.0
 */
class ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf {
    /**
     * Constructs a new <code>ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf</code>.
     * @alias module:model/ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf
     * @param replyCount {Number} 
     * @param subscribed {Boolean} 
     * @param text {String} 
     * @param threadTs {String} 
     * @param ts {String} 
     * @param type {String} 
     * @param user {String} 
     */
    constructor(replyCount, subscribed, text, threadTs, ts, type, user) { 
        
        ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf.initialize(this, replyCount, subscribed, text, threadTs, ts, type, user);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, replyCount, subscribed, text, threadTs, ts, type, user) { 
        obj['reply_count'] = replyCount;
        obj['subscribed'] = subscribed;
        obj['text'] = text;
        obj['thread_ts'] = threadTs;
        obj['ts'] = ts;
        obj['type'] = type;
        obj['user'] = user;
    }

    /**
     * Constructs a <code>ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf} obj Optional instance to populate.
     * @return {module:model/ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf} The populated <code>ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf();

            if (data.hasOwnProperty('last_read')) {
                obj['last_read'] = ApiClient.convertToType(data['last_read'], 'String');
            }
            if (data.hasOwnProperty('latest_reply')) {
                obj['latest_reply'] = ApiClient.convertToType(data['latest_reply'], 'String');
            }
            if (data.hasOwnProperty('reply_count')) {
                obj['reply_count'] = ApiClient.convertToType(data['reply_count'], 'Number');
            }
            if (data.hasOwnProperty('reply_users')) {
                obj['reply_users'] = ApiClient.convertToType(data['reply_users'], ['String']);
            }
            if (data.hasOwnProperty('reply_users_count')) {
                obj['reply_users_count'] = ApiClient.convertToType(data['reply_users_count'], 'Number');
            }
            if (data.hasOwnProperty('source_team')) {
                obj['source_team'] = ApiClient.convertToType(data['source_team'], 'String');
            }
            if (data.hasOwnProperty('subscribed')) {
                obj['subscribed'] = ApiClient.convertToType(data['subscribed'], 'Boolean');
            }
            if (data.hasOwnProperty('team')) {
                obj['team'] = ApiClient.convertToType(data['team'], 'String');
            }
            if (data.hasOwnProperty('text')) {
                obj['text'] = ApiClient.convertToType(data['text'], 'String');
            }
            if (data.hasOwnProperty('thread_ts')) {
                obj['thread_ts'] = ApiClient.convertToType(data['thread_ts'], 'String');
            }
            if (data.hasOwnProperty('ts')) {
                obj['ts'] = ApiClient.convertToType(data['ts'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('unread_count')) {
                obj['unread_count'] = ApiClient.convertToType(data['unread_count'], 'Number');
            }
            if (data.hasOwnProperty('user')) {
                obj['user'] = ApiClient.convertToType(data['user'], 'String');
            }
            if (data.hasOwnProperty('user_profile')) {
                obj['user_profile'] = ObjsUserProfileShort.constructFromObject(data['user_profile']);
            }
            if (data.hasOwnProperty('user_team')) {
                obj['user_team'] = ApiClient.convertToType(data['user_team'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['last_read'] && !(typeof data['last_read'] === 'string' || data['last_read'] instanceof String)) {
            throw new Error("Expected the field `last_read` to be a primitive type in the JSON string but got " + data['last_read']);
        }
        // ensure the json data is a string
        if (data['latest_reply'] && !(typeof data['latest_reply'] === 'string' || data['latest_reply'] instanceof String)) {
            throw new Error("Expected the field `latest_reply` to be a primitive type in the JSON string but got " + data['latest_reply']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['reply_users'])) {
            throw new Error("Expected the field `reply_users` to be an array in the JSON data but got " + data['reply_users']);
        }
        // ensure the json data is a string
        if (data['source_team'] && !(typeof data['source_team'] === 'string' || data['source_team'] instanceof String)) {
            throw new Error("Expected the field `source_team` to be a primitive type in the JSON string but got " + data['source_team']);
        }
        // ensure the json data is a string
        if (data['team'] && !(typeof data['team'] === 'string' || data['team'] instanceof String)) {
            throw new Error("Expected the field `team` to be a primitive type in the JSON string but got " + data['team']);
        }
        // ensure the json data is a string
        if (data['text'] && !(typeof data['text'] === 'string' || data['text'] instanceof String)) {
            throw new Error("Expected the field `text` to be a primitive type in the JSON string but got " + data['text']);
        }
        // ensure the json data is a string
        if (data['thread_ts'] && !(typeof data['thread_ts'] === 'string' || data['thread_ts'] instanceof String)) {
            throw new Error("Expected the field `thread_ts` to be a primitive type in the JSON string but got " + data['thread_ts']);
        }
        // ensure the json data is a string
        if (data['ts'] && !(typeof data['ts'] === 'string' || data['ts'] instanceof String)) {
            throw new Error("Expected the field `ts` to be a primitive type in the JSON string but got " + data['ts']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }
        // ensure the json data is a string
        if (data['user'] && !(typeof data['user'] === 'string' || data['user'] instanceof String)) {
            throw new Error("Expected the field `user` to be a primitive type in the JSON string but got " + data['user']);
        }
        // validate the optional field `user_profile`
        if (data['user_profile']) { // data not null
          ObjsUserProfileShort.validateJSON(data['user_profile']);
        }
        // ensure the json data is a string
        if (data['user_team'] && !(typeof data['user_team'] === 'string' || data['user_team'] instanceof String)) {
            throw new Error("Expected the field `user_team` to be a primitive type in the JSON string but got " + data['user_team']);
        }

        return true;
    }


}

ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf.RequiredProperties = ["reply_count", "subscribed", "text", "thread_ts", "ts", "type", "user"];

/**
 * @member {String} last_read
 */
ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf.prototype['last_read'] = undefined;

/**
 * @member {String} latest_reply
 */
ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf.prototype['latest_reply'] = undefined;

/**
 * @member {Number} reply_count
 */
ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf.prototype['reply_count'] = undefined;

/**
 * @member {Array.<String>} reply_users
 */
ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf.prototype['reply_users'] = undefined;

/**
 * @member {Number} reply_users_count
 */
ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf.prototype['reply_users_count'] = undefined;

/**
 * @member {String} source_team
 */
ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf.prototype['source_team'] = undefined;

/**
 * @member {Boolean} subscribed
 */
ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf.prototype['subscribed'] = undefined;

/**
 * @member {String} team
 */
ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf.prototype['team'] = undefined;

/**
 * @member {String} text
 */
ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf.prototype['text'] = undefined;

/**
 * @member {String} thread_ts
 */
ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf.prototype['thread_ts'] = undefined;

/**
 * @member {String} ts
 */
ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf.prototype['ts'] = undefined;

/**
 * @member {String} type
 */
ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf.prototype['type'] = undefined;

/**
 * @member {Number} unread_count
 */
ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf.prototype['unread_count'] = undefined;

/**
 * @member {String} user
 */
ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf.prototype['user'] = undefined;

/**
 * @member {module:model/ObjsUserProfileShort} user_profile
 */
ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf.prototype['user_profile'] = undefined;

/**
 * @member {String} user_team
 */
ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf.prototype['user_team'] = undefined;






export default ConversationsRepliesSuccessSchemaMessagesInnerInnerAnyOf;

