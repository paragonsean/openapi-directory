/**
 * Slack Web API
 * One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ObjsExternalOrgMigrations from './ObjsExternalOrgMigrations';
import ObjsIcon from './ObjsIcon';
import ObjsPrimaryOwner from './ObjsPrimaryOwner';
import ObjsTeamDiscoverableInner from './ObjsTeamDiscoverableInner';
import ObjsTeamSsoProvider from './ObjsTeamSsoProvider';

/**
 * The ObjsTeam model module.
 * @module model/ObjsTeam
 * @version 1.7.0
 */
class ObjsTeam {
    /**
     * Constructs a new <code>ObjsTeam</code>.
     * @alias module:model/ObjsTeam
     * @param domain {String} 
     * @param emailDomain {String} 
     * @param icon {module:model/ObjsIcon} 
     * @param id {String} 
     * @param name {String} 
     */
    constructor(domain, emailDomain, icon, id, name) { 
        
        ObjsTeam.initialize(this, domain, emailDomain, icon, id, name);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, domain, emailDomain, icon, id, name) { 
        obj['domain'] = domain;
        obj['email_domain'] = emailDomain;
        obj['icon'] = icon;
        obj['id'] = id;
        obj['name'] = name;
    }

    /**
     * Constructs a <code>ObjsTeam</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ObjsTeam} obj Optional instance to populate.
     * @return {module:model/ObjsTeam} The populated <code>ObjsTeam</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ObjsTeam();

            if (data.hasOwnProperty('archived')) {
                obj['archived'] = ApiClient.convertToType(data['archived'], 'Boolean');
            }
            if (data.hasOwnProperty('avatar_base_url')) {
                obj['avatar_base_url'] = ApiClient.convertToType(data['avatar_base_url'], 'String');
            }
            if (data.hasOwnProperty('created')) {
                obj['created'] = ApiClient.convertToType(data['created'], 'Number');
            }
            if (data.hasOwnProperty('date_create')) {
                obj['date_create'] = ApiClient.convertToType(data['date_create'], 'Number');
            }
            if (data.hasOwnProperty('deleted')) {
                obj['deleted'] = ApiClient.convertToType(data['deleted'], 'Boolean');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('discoverable')) {
                obj['discoverable'] = ApiClient.convertToType(data['discoverable'], [ObjsTeamDiscoverableInner]);
            }
            if (data.hasOwnProperty('domain')) {
                obj['domain'] = ApiClient.convertToType(data['domain'], 'String');
            }
            if (data.hasOwnProperty('email_domain')) {
                obj['email_domain'] = ApiClient.convertToType(data['email_domain'], 'String');
            }
            if (data.hasOwnProperty('enterprise_id')) {
                obj['enterprise_id'] = ApiClient.convertToType(data['enterprise_id'], 'String');
            }
            if (data.hasOwnProperty('enterprise_name')) {
                obj['enterprise_name'] = ApiClient.convertToType(data['enterprise_name'], 'String');
            }
            if (data.hasOwnProperty('external_org_migrations')) {
                obj['external_org_migrations'] = ObjsExternalOrgMigrations.constructFromObject(data['external_org_migrations']);
            }
            if (data.hasOwnProperty('has_compliance_export')) {
                obj['has_compliance_export'] = ApiClient.convertToType(data['has_compliance_export'], 'Boolean');
            }
            if (data.hasOwnProperty('icon')) {
                obj['icon'] = ObjsIcon.constructFromObject(data['icon']);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('is_assigned')) {
                obj['is_assigned'] = ApiClient.convertToType(data['is_assigned'], 'Boolean');
            }
            if (data.hasOwnProperty('is_enterprise')) {
                obj['is_enterprise'] = ApiClient.convertToType(data['is_enterprise'], 'Number');
            }
            if (data.hasOwnProperty('is_over_storage_limit')) {
                obj['is_over_storage_limit'] = ApiClient.convertToType(data['is_over_storage_limit'], 'Boolean');
            }
            if (data.hasOwnProperty('limit_ts')) {
                obj['limit_ts'] = ApiClient.convertToType(data['limit_ts'], 'Number');
            }
            if (data.hasOwnProperty('locale')) {
                obj['locale'] = ApiClient.convertToType(data['locale'], 'String');
            }
            if (data.hasOwnProperty('messages_count')) {
                obj['messages_count'] = ApiClient.convertToType(data['messages_count'], 'Number');
            }
            if (data.hasOwnProperty('msg_edit_window_mins')) {
                obj['msg_edit_window_mins'] = ApiClient.convertToType(data['msg_edit_window_mins'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('over_integrations_limit')) {
                obj['over_integrations_limit'] = ApiClient.convertToType(data['over_integrations_limit'], 'Boolean');
            }
            if (data.hasOwnProperty('over_storage_limit')) {
                obj['over_storage_limit'] = ApiClient.convertToType(data['over_storage_limit'], 'Boolean');
            }
            if (data.hasOwnProperty('pay_prod_cur')) {
                obj['pay_prod_cur'] = ApiClient.convertToType(data['pay_prod_cur'], 'String');
            }
            if (data.hasOwnProperty('plan')) {
                obj['plan'] = ApiClient.convertToType(data['plan'], 'String');
            }
            if (data.hasOwnProperty('primary_owner')) {
                obj['primary_owner'] = ObjsPrimaryOwner.constructFromObject(data['primary_owner']);
            }
            if (data.hasOwnProperty('sso_provider')) {
                obj['sso_provider'] = ObjsTeamSsoProvider.constructFromObject(data['sso_provider']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ObjsTeam</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ObjsTeam</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ObjsTeam.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['avatar_base_url'] && !(typeof data['avatar_base_url'] === 'string' || data['avatar_base_url'] instanceof String)) {
            throw new Error("Expected the field `avatar_base_url` to be a primitive type in the JSON string but got " + data['avatar_base_url']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        if (data['discoverable']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['discoverable'])) {
                throw new Error("Expected the field `discoverable` to be an array in the JSON data but got " + data['discoverable']);
            }
            // validate the optional field `discoverable` (array)
            for (const item of data['discoverable']) {
                ObjsTeamDiscoverableInner.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['domain'] && !(typeof data['domain'] === 'string' || data['domain'] instanceof String)) {
            throw new Error("Expected the field `domain` to be a primitive type in the JSON string but got " + data['domain']);
        }
        // ensure the json data is a string
        if (data['email_domain'] && !(typeof data['email_domain'] === 'string' || data['email_domain'] instanceof String)) {
            throw new Error("Expected the field `email_domain` to be a primitive type in the JSON string but got " + data['email_domain']);
        }
        // ensure the json data is a string
        if (data['enterprise_id'] && !(typeof data['enterprise_id'] === 'string' || data['enterprise_id'] instanceof String)) {
            throw new Error("Expected the field `enterprise_id` to be a primitive type in the JSON string but got " + data['enterprise_id']);
        }
        // ensure the json data is a string
        if (data['enterprise_name'] && !(typeof data['enterprise_name'] === 'string' || data['enterprise_name'] instanceof String)) {
            throw new Error("Expected the field `enterprise_name` to be a primitive type in the JSON string but got " + data['enterprise_name']);
        }
        // validate the optional field `external_org_migrations`
        if (data['external_org_migrations']) { // data not null
          ObjsExternalOrgMigrations.validateJSON(data['external_org_migrations']);
        }
        // validate the optional field `icon`
        if (data['icon']) { // data not null
          ObjsIcon.validateJSON(data['icon']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['locale'] && !(typeof data['locale'] === 'string' || data['locale'] instanceof String)) {
            throw new Error("Expected the field `locale` to be a primitive type in the JSON string but got " + data['locale']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['pay_prod_cur'] && !(typeof data['pay_prod_cur'] === 'string' || data['pay_prod_cur'] instanceof String)) {
            throw new Error("Expected the field `pay_prod_cur` to be a primitive type in the JSON string but got " + data['pay_prod_cur']);
        }
        // ensure the json data is a string
        if (data['plan'] && !(typeof data['plan'] === 'string' || data['plan'] instanceof String)) {
            throw new Error("Expected the field `plan` to be a primitive type in the JSON string but got " + data['plan']);
        }
        // validate the optional field `primary_owner`
        if (data['primary_owner']) { // data not null
          ObjsPrimaryOwner.validateJSON(data['primary_owner']);
        }
        // validate the optional field `sso_provider`
        if (data['sso_provider']) { // data not null
          ObjsTeamSsoProvider.validateJSON(data['sso_provider']);
        }

        return true;
    }


}

ObjsTeam.RequiredProperties = ["domain", "email_domain", "icon", "id", "name"];

/**
 * @member {Boolean} archived
 */
ObjsTeam.prototype['archived'] = undefined;

/**
 * @member {String} avatar_base_url
 */
ObjsTeam.prototype['avatar_base_url'] = undefined;

/**
 * @member {Number} created
 */
ObjsTeam.prototype['created'] = undefined;

/**
 * @member {Number} date_create
 */
ObjsTeam.prototype['date_create'] = undefined;

/**
 * @member {Boolean} deleted
 */
ObjsTeam.prototype['deleted'] = undefined;

/**
 * @member {String} description
 */
ObjsTeam.prototype['description'] = undefined;

/**
 * @member {Array.<module:model/ObjsTeamDiscoverableInner>} discoverable
 */
ObjsTeam.prototype['discoverable'] = undefined;

/**
 * @member {String} domain
 */
ObjsTeam.prototype['domain'] = undefined;

/**
 * @member {String} email_domain
 */
ObjsTeam.prototype['email_domain'] = undefined;

/**
 * @member {String} enterprise_id
 */
ObjsTeam.prototype['enterprise_id'] = undefined;

/**
 * @member {String} enterprise_name
 */
ObjsTeam.prototype['enterprise_name'] = undefined;

/**
 * @member {module:model/ObjsExternalOrgMigrations} external_org_migrations
 */
ObjsTeam.prototype['external_org_migrations'] = undefined;

/**
 * @member {Boolean} has_compliance_export
 */
ObjsTeam.prototype['has_compliance_export'] = undefined;

/**
 * @member {module:model/ObjsIcon} icon
 */
ObjsTeam.prototype['icon'] = undefined;

/**
 * @member {String} id
 */
ObjsTeam.prototype['id'] = undefined;

/**
 * @member {Boolean} is_assigned
 */
ObjsTeam.prototype['is_assigned'] = undefined;

/**
 * @member {Number} is_enterprise
 */
ObjsTeam.prototype['is_enterprise'] = undefined;

/**
 * @member {Boolean} is_over_storage_limit
 */
ObjsTeam.prototype['is_over_storage_limit'] = undefined;

/**
 * @member {Number} limit_ts
 */
ObjsTeam.prototype['limit_ts'] = undefined;

/**
 * @member {String} locale
 */
ObjsTeam.prototype['locale'] = undefined;

/**
 * @member {Number} messages_count
 */
ObjsTeam.prototype['messages_count'] = undefined;

/**
 * @member {Number} msg_edit_window_mins
 */
ObjsTeam.prototype['msg_edit_window_mins'] = undefined;

/**
 * @member {String} name
 */
ObjsTeam.prototype['name'] = undefined;

/**
 * @member {Boolean} over_integrations_limit
 */
ObjsTeam.prototype['over_integrations_limit'] = undefined;

/**
 * @member {Boolean} over_storage_limit
 */
ObjsTeam.prototype['over_storage_limit'] = undefined;

/**
 * @member {String} pay_prod_cur
 */
ObjsTeam.prototype['pay_prod_cur'] = undefined;

/**
 * @member {module:model/ObjsTeam.PlanEnum} plan
 */
ObjsTeam.prototype['plan'] = undefined;

/**
 * @member {module:model/ObjsPrimaryOwner} primary_owner
 */
ObjsTeam.prototype['primary_owner'] = undefined;

/**
 * @member {module:model/ObjsTeamSsoProvider} sso_provider
 */
ObjsTeam.prototype['sso_provider'] = undefined;





/**
 * Allowed values for the <code>plan</code> property.
 * @enum {String}
 * @readonly
 */
ObjsTeam['PlanEnum'] = {

    /**
     * value: ""
     * @const
     */
    "empty": "",

    /**
     * value: "std"
     * @const
     */
    "std": "std",

    /**
     * value: "plus"
     * @const
     */
    "plus": "plus",

    /**
     * value: "compliance"
     * @const
     */
    "compliance": "compliance",

    /**
     * value: "enterprise"
     * @const
     */
    "enterprise": "enterprise"
};



export default ObjsTeam;

