/**
 * Slack Web API
 * One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AppsPermissionsInfoSchemaInfoAppHome from './AppsPermissionsInfoSchemaInfoAppHome';
import AppsPermissionsInfoSchemaInfoTeam from './AppsPermissionsInfoSchemaInfoTeam';

/**
 * The AppsPermissionsInfoSchemaInfo model module.
 * @module model/AppsPermissionsInfoSchemaInfo
 * @version 1.7.0
 */
class AppsPermissionsInfoSchemaInfo {
    /**
     * Constructs a new <code>AppsPermissionsInfoSchemaInfo</code>.
     * @alias module:model/AppsPermissionsInfoSchemaInfo
     * @param appHome {module:model/AppsPermissionsInfoSchemaInfoAppHome} 
     * @param channel {module:model/AppsPermissionsInfoSchemaInfoAppHome} 
     * @param group {module:model/AppsPermissionsInfoSchemaInfoAppHome} 
     * @param im {module:model/AppsPermissionsInfoSchemaInfoAppHome} 
     * @param mpim {module:model/AppsPermissionsInfoSchemaInfoAppHome} 
     * @param team {module:model/AppsPermissionsInfoSchemaInfoTeam} 
     */
    constructor(appHome, channel, group, im, mpim, team) { 
        
        AppsPermissionsInfoSchemaInfo.initialize(this, appHome, channel, group, im, mpim, team);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, appHome, channel, group, im, mpim, team) { 
        obj['app_home'] = appHome;
        obj['channel'] = channel;
        obj['group'] = group;
        obj['im'] = im;
        obj['mpim'] = mpim;
        obj['team'] = team;
    }

    /**
     * Constructs a <code>AppsPermissionsInfoSchemaInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AppsPermissionsInfoSchemaInfo} obj Optional instance to populate.
     * @return {module:model/AppsPermissionsInfoSchemaInfo} The populated <code>AppsPermissionsInfoSchemaInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AppsPermissionsInfoSchemaInfo();

            if (data.hasOwnProperty('app_home')) {
                obj['app_home'] = AppsPermissionsInfoSchemaInfoAppHome.constructFromObject(data['app_home']);
            }
            if (data.hasOwnProperty('channel')) {
                obj['channel'] = AppsPermissionsInfoSchemaInfoAppHome.constructFromObject(data['channel']);
            }
            if (data.hasOwnProperty('group')) {
                obj['group'] = AppsPermissionsInfoSchemaInfoAppHome.constructFromObject(data['group']);
            }
            if (data.hasOwnProperty('im')) {
                obj['im'] = AppsPermissionsInfoSchemaInfoAppHome.constructFromObject(data['im']);
            }
            if (data.hasOwnProperty('mpim')) {
                obj['mpim'] = AppsPermissionsInfoSchemaInfoAppHome.constructFromObject(data['mpim']);
            }
            if (data.hasOwnProperty('team')) {
                obj['team'] = AppsPermissionsInfoSchemaInfoTeam.constructFromObject(data['team']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AppsPermissionsInfoSchemaInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AppsPermissionsInfoSchemaInfo</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AppsPermissionsInfoSchemaInfo.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `app_home`
        if (data['app_home']) { // data not null
          AppsPermissionsInfoSchemaInfoAppHome.validateJSON(data['app_home']);
        }
        // validate the optional field `channel`
        if (data['channel']) { // data not null
          AppsPermissionsInfoSchemaInfoAppHome.validateJSON(data['channel']);
        }
        // validate the optional field `group`
        if (data['group']) { // data not null
          AppsPermissionsInfoSchemaInfoAppHome.validateJSON(data['group']);
        }
        // validate the optional field `im`
        if (data['im']) { // data not null
          AppsPermissionsInfoSchemaInfoAppHome.validateJSON(data['im']);
        }
        // validate the optional field `mpim`
        if (data['mpim']) { // data not null
          AppsPermissionsInfoSchemaInfoAppHome.validateJSON(data['mpim']);
        }
        // validate the optional field `team`
        if (data['team']) { // data not null
          AppsPermissionsInfoSchemaInfoTeam.validateJSON(data['team']);
        }

        return true;
    }


}

AppsPermissionsInfoSchemaInfo.RequiredProperties = ["app_home", "channel", "group", "im", "mpim", "team"];

/**
 * @member {module:model/AppsPermissionsInfoSchemaInfoAppHome} app_home
 */
AppsPermissionsInfoSchemaInfo.prototype['app_home'] = undefined;

/**
 * @member {module:model/AppsPermissionsInfoSchemaInfoAppHome} channel
 */
AppsPermissionsInfoSchemaInfo.prototype['channel'] = undefined;

/**
 * @member {module:model/AppsPermissionsInfoSchemaInfoAppHome} group
 */
AppsPermissionsInfoSchemaInfo.prototype['group'] = undefined;

/**
 * @member {module:model/AppsPermissionsInfoSchemaInfoAppHome} im
 */
AppsPermissionsInfoSchemaInfo.prototype['im'] = undefined;

/**
 * @member {module:model/AppsPermissionsInfoSchemaInfoAppHome} mpim
 */
AppsPermissionsInfoSchemaInfo.prototype['mpim'] = undefined;

/**
 * @member {module:model/AppsPermissionsInfoSchemaInfoTeam} team
 */
AppsPermissionsInfoSchemaInfo.prototype['team'] = undefined;






export default AppsPermissionsInfoSchemaInfo;

