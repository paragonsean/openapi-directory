/**
 * Slack Web API
 * One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ObjsResponseMetadataInner from './ObjsResponseMetadataInner';
import ObjsUserInner from './ObjsUserInner';

/**
 * The UsersListSchema model module.
 * @module model/UsersListSchema
 * @version 1.7.0
 */
class UsersListSchema {
    /**
     * Constructs a new <code>UsersListSchema</code>.
     * Schema for successful response from users.list method
     * @alias module:model/UsersListSchema
     * @param cacheTs {Number} 
     * @param members {Array.<Array.<module:model/ObjsUserInner>>} 
     * @param ok {Boolean} 
     */
    constructor(cacheTs, members, ok) { 
        
        UsersListSchema.initialize(this, cacheTs, members, ok);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, cacheTs, members, ok) { 
        obj['cache_ts'] = cacheTs;
        obj['members'] = members;
        obj['ok'] = ok;
    }

    /**
     * Constructs a <code>UsersListSchema</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UsersListSchema} obj Optional instance to populate.
     * @return {module:model/UsersListSchema} The populated <code>UsersListSchema</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UsersListSchema();

            if (data.hasOwnProperty('cache_ts')) {
                obj['cache_ts'] = ApiClient.convertToType(data['cache_ts'], 'Number');
            }
            if (data.hasOwnProperty('members')) {
                obj['members'] = ApiClient.convertToType(data['members'], [Array]);
            }
            if (data.hasOwnProperty('ok')) {
                obj['ok'] = ApiClient.convertToType(data['ok'], 'Boolean');
            }
            if (data.hasOwnProperty('response_metadata')) {
                obj['response_metadata'] = ApiClient.convertToType(data['response_metadata'], [ObjsResponseMetadataInner]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UsersListSchema</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UsersListSchema</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of UsersListSchema.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is an array
        if (!Array.isArray(data['members'])) {
            throw new Error("Expected the field `members` to be an array in the JSON data but got " + data['members']);
        }
        if (data['response_metadata']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['response_metadata'])) {
                throw new Error("Expected the field `response_metadata` to be an array in the JSON data but got " + data['response_metadata']);
            }
            // validate the optional field `response_metadata` (array)
            for (const item of data['response_metadata']) {
                ObjsResponseMetadataInner.validateJSON(item);
            };
        }

        return true;
    }


}

UsersListSchema.RequiredProperties = ["cache_ts", "members", "ok"];

/**
 * @member {Number} cache_ts
 */
UsersListSchema.prototype['cache_ts'] = undefined;

/**
 * @member {Array.<Array.<module:model/ObjsUserInner>>} members
 */
UsersListSchema.prototype['members'] = undefined;

/**
 * @member {Boolean} ok
 */
UsersListSchema.prototype['ok'] = undefined;

/**
 * @member {Array.<module:model/ObjsResponseMetadataInner>} response_metadata
 */
UsersListSchema.prototype['response_metadata'] = undefined;






export default UsersListSchema;

