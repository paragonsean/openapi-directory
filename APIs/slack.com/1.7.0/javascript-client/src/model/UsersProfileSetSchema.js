/**
 * Slack Web API
 * One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ObjsUserProfile from './ObjsUserProfile';

/**
 * The UsersProfileSetSchema model module.
 * @module model/UsersProfileSetSchema
 * @version 1.7.0
 */
class UsersProfileSetSchema {
    /**
     * Constructs a new <code>UsersProfileSetSchema</code>.
     * Schema for successful response from users.profile.set method
     * @alias module:model/UsersProfileSetSchema
     * @param ok {Boolean} 
     * @param profile {module:model/ObjsUserProfile} 
     * @param username {String} 
     */
    constructor(ok, profile, username) { 
        
        UsersProfileSetSchema.initialize(this, ok, profile, username);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, ok, profile, username) { 
        obj['ok'] = ok;
        obj['profile'] = profile;
        obj['username'] = username;
    }

    /**
     * Constructs a <code>UsersProfileSetSchema</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UsersProfileSetSchema} obj Optional instance to populate.
     * @return {module:model/UsersProfileSetSchema} The populated <code>UsersProfileSetSchema</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UsersProfileSetSchema();

            if (data.hasOwnProperty('email_pending')) {
                obj['email_pending'] = ApiClient.convertToType(data['email_pending'], 'String');
            }
            if (data.hasOwnProperty('ok')) {
                obj['ok'] = ApiClient.convertToType(data['ok'], 'Boolean');
            }
            if (data.hasOwnProperty('profile')) {
                obj['profile'] = ObjsUserProfile.constructFromObject(data['profile']);
            }
            if (data.hasOwnProperty('username')) {
                obj['username'] = ApiClient.convertToType(data['username'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UsersProfileSetSchema</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UsersProfileSetSchema</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of UsersProfileSetSchema.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['email_pending'] && !(typeof data['email_pending'] === 'string' || data['email_pending'] instanceof String)) {
            throw new Error("Expected the field `email_pending` to be a primitive type in the JSON string but got " + data['email_pending']);
        }
        // validate the optional field `profile`
        if (data['profile']) { // data not null
          ObjsUserProfile.validateJSON(data['profile']);
        }
        // ensure the json data is a string
        if (data['username'] && !(typeof data['username'] === 'string' || data['username'] instanceof String)) {
            throw new Error("Expected the field `username` to be a primitive type in the JSON string but got " + data['username']);
        }

        return true;
    }


}

UsersProfileSetSchema.RequiredProperties = ["ok", "profile", "username"];

/**
 * @member {String} email_pending
 */
UsersProfileSetSchema.prototype['email_pending'] = undefined;

/**
 * @member {Boolean} ok
 */
UsersProfileSetSchema.prototype['ok'] = undefined;

/**
 * @member {module:model/ObjsUserProfile} profile
 */
UsersProfileSetSchema.prototype['profile'] = undefined;

/**
 * @member {String} username
 */
UsersProfileSetSchema.prototype['username'] = undefined;






export default UsersProfileSetSchema;

