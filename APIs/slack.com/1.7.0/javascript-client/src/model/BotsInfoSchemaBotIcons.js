/**
 * Slack Web API
 * One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The BotsInfoSchemaBotIcons model module.
 * @module model/BotsInfoSchemaBotIcons
 * @version 1.7.0
 */
class BotsInfoSchemaBotIcons {
    /**
     * Constructs a new <code>BotsInfoSchemaBotIcons</code>.
     * @alias module:model/BotsInfoSchemaBotIcons
     * @param image36 {String} 
     * @param image48 {String} 
     * @param image72 {String} 
     */
    constructor(image36, image48, image72) { 
        
        BotsInfoSchemaBotIcons.initialize(this, image36, image48, image72);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, image36, image48, image72) { 
        obj['image_36'] = image36;
        obj['image_48'] = image48;
        obj['image_72'] = image72;
    }

    /**
     * Constructs a <code>BotsInfoSchemaBotIcons</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BotsInfoSchemaBotIcons} obj Optional instance to populate.
     * @return {module:model/BotsInfoSchemaBotIcons} The populated <code>BotsInfoSchemaBotIcons</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BotsInfoSchemaBotIcons();

            if (data.hasOwnProperty('image_36')) {
                obj['image_36'] = ApiClient.convertToType(data['image_36'], 'String');
            }
            if (data.hasOwnProperty('image_48')) {
                obj['image_48'] = ApiClient.convertToType(data['image_48'], 'String');
            }
            if (data.hasOwnProperty('image_72')) {
                obj['image_72'] = ApiClient.convertToType(data['image_72'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BotsInfoSchemaBotIcons</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BotsInfoSchemaBotIcons</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of BotsInfoSchemaBotIcons.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['image_36'] && !(typeof data['image_36'] === 'string' || data['image_36'] instanceof String)) {
            throw new Error("Expected the field `image_36` to be a primitive type in the JSON string but got " + data['image_36']);
        }
        // ensure the json data is a string
        if (data['image_48'] && !(typeof data['image_48'] === 'string' || data['image_48'] instanceof String)) {
            throw new Error("Expected the field `image_48` to be a primitive type in the JSON string but got " + data['image_48']);
        }
        // ensure the json data is a string
        if (data['image_72'] && !(typeof data['image_72'] === 'string' || data['image_72'] instanceof String)) {
            throw new Error("Expected the field `image_72` to be a primitive type in the JSON string but got " + data['image_72']);
        }

        return true;
    }


}

BotsInfoSchemaBotIcons.RequiredProperties = ["image_36", "image_48", "image_72"];

/**
 * @member {String} image_36
 */
BotsInfoSchemaBotIcons.prototype['image_36'] = undefined;

/**
 * @member {String} image_48
 */
BotsInfoSchemaBotIcons.prototype['image_48'] = undefined;

/**
 * @member {String} image_72
 */
BotsInfoSchemaBotIcons.prototype['image_72'] = undefined;






export default BotsInfoSchemaBotIcons;

