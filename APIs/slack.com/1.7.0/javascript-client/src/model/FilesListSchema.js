/**
 * Slack Web API
 * One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ObjsFile from './ObjsFile';
import ObjsPaging from './ObjsPaging';

/**
 * The FilesListSchema model module.
 * @module model/FilesListSchema
 * @version 1.7.0
 */
class FilesListSchema {
    /**
     * Constructs a new <code>FilesListSchema</code>.
     * Schema for successful response from files.list method
     * @alias module:model/FilesListSchema
     * @param files {Array.<module:model/ObjsFile>} 
     * @param ok {Boolean} 
     * @param paging {module:model/ObjsPaging} 
     */
    constructor(files, ok, paging) { 
        
        FilesListSchema.initialize(this, files, ok, paging);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, files, ok, paging) { 
        obj['files'] = files;
        obj['ok'] = ok;
        obj['paging'] = paging;
    }

    /**
     * Constructs a <code>FilesListSchema</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FilesListSchema} obj Optional instance to populate.
     * @return {module:model/FilesListSchema} The populated <code>FilesListSchema</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FilesListSchema();

            if (data.hasOwnProperty('files')) {
                obj['files'] = ApiClient.convertToType(data['files'], [ObjsFile]);
            }
            if (data.hasOwnProperty('ok')) {
                obj['ok'] = ApiClient.convertToType(data['ok'], 'Boolean');
            }
            if (data.hasOwnProperty('paging')) {
                obj['paging'] = ObjsPaging.constructFromObject(data['paging']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FilesListSchema</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FilesListSchema</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of FilesListSchema.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['files']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['files'])) {
                throw new Error("Expected the field `files` to be an array in the JSON data but got " + data['files']);
            }
            // validate the optional field `files` (array)
            for (const item of data['files']) {
                ObjsFile.validateJSON(item);
            };
        }
        // validate the optional field `paging`
        if (data['paging']) { // data not null
          ObjsPaging.validateJSON(data['paging']);
        }

        return true;
    }


}

FilesListSchema.RequiredProperties = ["files", "ok", "paging"];

/**
 * @member {Array.<module:model/ObjsFile>} files
 */
FilesListSchema.prototype['files'] = undefined;

/**
 * @member {Boolean} ok
 */
FilesListSchema.prototype['ok'] = undefined;

/**
 * @member {module:model/ObjsPaging} paging
 */
FilesListSchema.prototype['paging'] = undefined;






export default FilesListSchema;

