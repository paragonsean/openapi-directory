/**
 * Slack Web API
 * One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ObjsReminder model module.
 * @module model/ObjsReminder
 * @version 1.7.0
 */
class ObjsReminder {
    /**
     * Constructs a new <code>ObjsReminder</code>.
     * @alias module:model/ObjsReminder
     * @param creator {String} 
     * @param id {String} 
     * @param recurring {Boolean} 
     * @param text {String} 
     * @param user {String} 
     */
    constructor(creator, id, recurring, text, user) { 
        
        ObjsReminder.initialize(this, creator, id, recurring, text, user);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, creator, id, recurring, text, user) { 
        obj['creator'] = creator;
        obj['id'] = id;
        obj['recurring'] = recurring;
        obj['text'] = text;
        obj['user'] = user;
    }

    /**
     * Constructs a <code>ObjsReminder</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ObjsReminder} obj Optional instance to populate.
     * @return {module:model/ObjsReminder} The populated <code>ObjsReminder</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ObjsReminder();

            if (data.hasOwnProperty('complete_ts')) {
                obj['complete_ts'] = ApiClient.convertToType(data['complete_ts'], 'Number');
            }
            if (data.hasOwnProperty('creator')) {
                obj['creator'] = ApiClient.convertToType(data['creator'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('recurring')) {
                obj['recurring'] = ApiClient.convertToType(data['recurring'], 'Boolean');
            }
            if (data.hasOwnProperty('text')) {
                obj['text'] = ApiClient.convertToType(data['text'], 'String');
            }
            if (data.hasOwnProperty('time')) {
                obj['time'] = ApiClient.convertToType(data['time'], 'Number');
            }
            if (data.hasOwnProperty('user')) {
                obj['user'] = ApiClient.convertToType(data['user'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ObjsReminder</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ObjsReminder</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ObjsReminder.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['creator'] && !(typeof data['creator'] === 'string' || data['creator'] instanceof String)) {
            throw new Error("Expected the field `creator` to be a primitive type in the JSON string but got " + data['creator']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['text'] && !(typeof data['text'] === 'string' || data['text'] instanceof String)) {
            throw new Error("Expected the field `text` to be a primitive type in the JSON string but got " + data['text']);
        }
        // ensure the json data is a string
        if (data['user'] && !(typeof data['user'] === 'string' || data['user'] instanceof String)) {
            throw new Error("Expected the field `user` to be a primitive type in the JSON string but got " + data['user']);
        }

        return true;
    }


}

ObjsReminder.RequiredProperties = ["creator", "id", "recurring", "text", "user"];

/**
 * @member {Number} complete_ts
 */
ObjsReminder.prototype['complete_ts'] = undefined;

/**
 * @member {String} creator
 */
ObjsReminder.prototype['creator'] = undefined;

/**
 * @member {String} id
 */
ObjsReminder.prototype['id'] = undefined;

/**
 * @member {Boolean} recurring
 */
ObjsReminder.prototype['recurring'] = undefined;

/**
 * @member {String} text
 */
ObjsReminder.prototype['text'] = undefined;

/**
 * @member {Number} time
 */
ObjsReminder.prototype['time'] = undefined;

/**
 * @member {String} user
 */
ObjsReminder.prototype['user'] = undefined;






export default ObjsReminder;

