/**
 * Slack Web API
 * One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ObjsTeam from './ObjsTeam';

/**
 * The ConversationObjectSharesInner model module.
 * @module model/ConversationObjectSharesInner
 * @version 1.7.0
 */
class ConversationObjectSharesInner {
    /**
     * Constructs a new <code>ConversationObjectSharesInner</code>.
     * @alias module:model/ConversationObjectSharesInner
     * @param isActive {Boolean} 
     * @param team {module:model/ObjsTeam} 
     * @param user {String} 
     */
    constructor(isActive, team, user) { 
        
        ConversationObjectSharesInner.initialize(this, isActive, team, user);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, isActive, team, user) { 
        obj['is_active'] = isActive;
        obj['team'] = team;
        obj['user'] = user;
    }

    /**
     * Constructs a <code>ConversationObjectSharesInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ConversationObjectSharesInner} obj Optional instance to populate.
     * @return {module:model/ConversationObjectSharesInner} The populated <code>ConversationObjectSharesInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ConversationObjectSharesInner();

            if (data.hasOwnProperty('accepted_user')) {
                obj['accepted_user'] = ApiClient.convertToType(data['accepted_user'], 'String');
            }
            if (data.hasOwnProperty('is_active')) {
                obj['is_active'] = ApiClient.convertToType(data['is_active'], 'Boolean');
            }
            if (data.hasOwnProperty('team')) {
                obj['team'] = ObjsTeam.constructFromObject(data['team']);
            }
            if (data.hasOwnProperty('user')) {
                obj['user'] = ApiClient.convertToType(data['user'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ConversationObjectSharesInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ConversationObjectSharesInner</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ConversationObjectSharesInner.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['accepted_user'] && !(typeof data['accepted_user'] === 'string' || data['accepted_user'] instanceof String)) {
            throw new Error("Expected the field `accepted_user` to be a primitive type in the JSON string but got " + data['accepted_user']);
        }
        // validate the optional field `team`
        if (data['team']) { // data not null
          ObjsTeam.validateJSON(data['team']);
        }
        // ensure the json data is a string
        if (data['user'] && !(typeof data['user'] === 'string' || data['user'] instanceof String)) {
            throw new Error("Expected the field `user` to be a primitive type in the JSON string but got " + data['user']);
        }

        return true;
    }


}

ConversationObjectSharesInner.RequiredProperties = ["is_active", "team", "user"];

/**
 * @member {String} accepted_user
 */
ConversationObjectSharesInner.prototype['accepted_user'] = undefined;

/**
 * @member {Boolean} is_active
 */
ConversationObjectSharesInner.prototype['is_active'] = undefined;

/**
 * @member {module:model/ObjsTeam} team
 */
ConversationObjectSharesInner.prototype['team'] = undefined;

/**
 * @member {String} user
 */
ConversationObjectSharesInner.prototype['user'] = undefined;






export default ConversationObjectSharesInner;

