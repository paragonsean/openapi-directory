/**
 * Slack Web API
 * One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ObjsEnterpriseUser from './ObjsEnterpriseUser';
import ObjsTeamDiscoverableInner from './ObjsTeamDiscoverableInner';
import ObjsUserInnerAnyOfTeamProfile from './ObjsUserInnerAnyOfTeamProfile';
import ObjsUserProfile from './ObjsUserProfile';

/**
 * The ObjsUserInnerAnyOf1 model module.
 * @module model/ObjsUserInnerAnyOf1
 * @version 1.7.0
 */
class ObjsUserInnerAnyOf1 {
    /**
     * Constructs a new <code>ObjsUserInnerAnyOf1</code>.
     * enterprise user
     * @alias module:model/ObjsUserInnerAnyOf1
     * @param id {String} 
     * @param isAppUser {Boolean} 
     * @param isBot {Boolean} 
     * @param name {String} 
     * @param profile {module:model/ObjsUserProfile} 
     * @param updated {Number} 
     */
    constructor(id, isAppUser, isBot, name, profile, updated) { 
        
        ObjsUserInnerAnyOf1.initialize(this, id, isAppUser, isBot, name, profile, updated);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, isAppUser, isBot, name, profile, updated) { 
        obj['id'] = id;
        obj['is_app_user'] = isAppUser;
        obj['is_bot'] = isBot;
        obj['name'] = name;
        obj['profile'] = profile;
        obj['updated'] = updated;
    }

    /**
     * Constructs a <code>ObjsUserInnerAnyOf1</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ObjsUserInnerAnyOf1} obj Optional instance to populate.
     * @return {module:model/ObjsUserInnerAnyOf1} The populated <code>ObjsUserInnerAnyOf1</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ObjsUserInnerAnyOf1();

            if (data.hasOwnProperty('color')) {
                obj['color'] = ApiClient.convertToType(data['color'], 'String');
            }
            if (data.hasOwnProperty('deleted')) {
                obj['deleted'] = ApiClient.convertToType(data['deleted'], 'Boolean');
            }
            if (data.hasOwnProperty('enterprise_user')) {
                obj['enterprise_user'] = ObjsEnterpriseUser.constructFromObject(data['enterprise_user']);
            }
            if (data.hasOwnProperty('has_2fa')) {
                obj['has_2fa'] = ApiClient.convertToType(data['has_2fa'], 'Boolean');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('is_admin')) {
                obj['is_admin'] = ApiClient.convertToType(data['is_admin'], 'Boolean');
            }
            if (data.hasOwnProperty('is_app_user')) {
                obj['is_app_user'] = ApiClient.convertToType(data['is_app_user'], 'Boolean');
            }
            if (data.hasOwnProperty('is_bot')) {
                obj['is_bot'] = ApiClient.convertToType(data['is_bot'], 'Boolean');
            }
            if (data.hasOwnProperty('is_external')) {
                obj['is_external'] = ApiClient.convertToType(data['is_external'], 'Boolean');
            }
            if (data.hasOwnProperty('is_forgotten')) {
                obj['is_forgotten'] = ApiClient.convertToType(data['is_forgotten'], 'Boolean');
            }
            if (data.hasOwnProperty('is_owner')) {
                obj['is_owner'] = ApiClient.convertToType(data['is_owner'], 'Boolean');
            }
            if (data.hasOwnProperty('is_primary_owner')) {
                obj['is_primary_owner'] = ApiClient.convertToType(data['is_primary_owner'], 'Boolean');
            }
            if (data.hasOwnProperty('is_restricted')) {
                obj['is_restricted'] = ApiClient.convertToType(data['is_restricted'], 'Boolean');
            }
            if (data.hasOwnProperty('is_stranger')) {
                obj['is_stranger'] = ApiClient.convertToType(data['is_stranger'], 'Boolean');
            }
            if (data.hasOwnProperty('is_ultra_restricted')) {
                obj['is_ultra_restricted'] = ApiClient.convertToType(data['is_ultra_restricted'], 'Boolean');
            }
            if (data.hasOwnProperty('locale')) {
                obj['locale'] = ApiClient.convertToType(data['locale'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('presence')) {
                obj['presence'] = ApiClient.convertToType(data['presence'], 'String');
            }
            if (data.hasOwnProperty('profile')) {
                obj['profile'] = ObjsUserProfile.constructFromObject(data['profile']);
            }
            if (data.hasOwnProperty('real_name')) {
                obj['real_name'] = ApiClient.convertToType(data['real_name'], 'String');
            }
            if (data.hasOwnProperty('team_id')) {
                obj['team_id'] = ApiClient.convertToType(data['team_id'], 'String');
            }
            if (data.hasOwnProperty('team_profile')) {
                obj['team_profile'] = ObjsUserInnerAnyOfTeamProfile.constructFromObject(data['team_profile']);
            }
            if (data.hasOwnProperty('teams')) {
                obj['teams'] = ApiClient.convertToType(data['teams'], ['String']);
            }
            if (data.hasOwnProperty('two_factor_type')) {
                obj['two_factor_type'] = ApiClient.convertToType(data['two_factor_type'], 'String');
            }
            if (data.hasOwnProperty('tz')) {
                obj['tz'] = ApiClient.convertToType(data['tz'], [ObjsTeamDiscoverableInner]);
            }
            if (data.hasOwnProperty('tz_label')) {
                obj['tz_label'] = ApiClient.convertToType(data['tz_label'], 'String');
            }
            if (data.hasOwnProperty('tz_offset')) {
                obj['tz_offset'] = ApiClient.convertToType(data['tz_offset'], 'Number');
            }
            if (data.hasOwnProperty('updated')) {
                obj['updated'] = ApiClient.convertToType(data['updated'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ObjsUserInnerAnyOf1</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ObjsUserInnerAnyOf1</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ObjsUserInnerAnyOf1.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['color'] && !(typeof data['color'] === 'string' || data['color'] instanceof String)) {
            throw new Error("Expected the field `color` to be a primitive type in the JSON string but got " + data['color']);
        }
        // validate the optional field `enterprise_user`
        if (data['enterprise_user']) { // data not null
          ObjsEnterpriseUser.validateJSON(data['enterprise_user']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['locale'] && !(typeof data['locale'] === 'string' || data['locale'] instanceof String)) {
            throw new Error("Expected the field `locale` to be a primitive type in the JSON string but got " + data['locale']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['presence'] && !(typeof data['presence'] === 'string' || data['presence'] instanceof String)) {
            throw new Error("Expected the field `presence` to be a primitive type in the JSON string but got " + data['presence']);
        }
        // validate the optional field `profile`
        if (data['profile']) { // data not null
          ObjsUserProfile.validateJSON(data['profile']);
        }
        // ensure the json data is a string
        if (data['real_name'] && !(typeof data['real_name'] === 'string' || data['real_name'] instanceof String)) {
            throw new Error("Expected the field `real_name` to be a primitive type in the JSON string but got " + data['real_name']);
        }
        // ensure the json data is a string
        if (data['team_id'] && !(typeof data['team_id'] === 'string' || data['team_id'] instanceof String)) {
            throw new Error("Expected the field `team_id` to be a primitive type in the JSON string but got " + data['team_id']);
        }
        // validate the optional field `team_profile`
        if (data['team_profile']) { // data not null
          ObjsUserInnerAnyOfTeamProfile.validateJSON(data['team_profile']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['teams'])) {
            throw new Error("Expected the field `teams` to be an array in the JSON data but got " + data['teams']);
        }
        // ensure the json data is a string
        if (data['two_factor_type'] && !(typeof data['two_factor_type'] === 'string' || data['two_factor_type'] instanceof String)) {
            throw new Error("Expected the field `two_factor_type` to be a primitive type in the JSON string but got " + data['two_factor_type']);
        }
        if (data['tz']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['tz'])) {
                throw new Error("Expected the field `tz` to be an array in the JSON data but got " + data['tz']);
            }
            // validate the optional field `tz` (array)
            for (const item of data['tz']) {
                ObjsTeamDiscoverableInner.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['tz_label'] && !(typeof data['tz_label'] === 'string' || data['tz_label'] instanceof String)) {
            throw new Error("Expected the field `tz_label` to be a primitive type in the JSON string but got " + data['tz_label']);
        }

        return true;
    }


}

ObjsUserInnerAnyOf1.RequiredProperties = ["id", "is_app_user", "is_bot", "name", "profile", "updated"];

/**
 * refercing to bug: https://jira.tinyspeck.com/browse/EVALUE-1559
 * @member {String} color
 */
ObjsUserInnerAnyOf1.prototype['color'] = undefined;

/**
 * @member {Boolean} deleted
 */
ObjsUserInnerAnyOf1.prototype['deleted'] = undefined;

/**
 * @member {module:model/ObjsEnterpriseUser} enterprise_user
 */
ObjsUserInnerAnyOf1.prototype['enterprise_user'] = undefined;

/**
 * @member {Boolean} has_2fa
 */
ObjsUserInnerAnyOf1.prototype['has_2fa'] = undefined;

/**
 * @member {String} id
 */
ObjsUserInnerAnyOf1.prototype['id'] = undefined;

/**
 * @member {Boolean} is_admin
 */
ObjsUserInnerAnyOf1.prototype['is_admin'] = undefined;

/**
 * @member {Boolean} is_app_user
 */
ObjsUserInnerAnyOf1.prototype['is_app_user'] = undefined;

/**
 * @member {Boolean} is_bot
 */
ObjsUserInnerAnyOf1.prototype['is_bot'] = undefined;

/**
 * @member {Boolean} is_external
 */
ObjsUserInnerAnyOf1.prototype['is_external'] = undefined;

/**
 * @member {Boolean} is_forgotten
 */
ObjsUserInnerAnyOf1.prototype['is_forgotten'] = undefined;

/**
 * @member {Boolean} is_owner
 */
ObjsUserInnerAnyOf1.prototype['is_owner'] = undefined;

/**
 * @member {Boolean} is_primary_owner
 */
ObjsUserInnerAnyOf1.prototype['is_primary_owner'] = undefined;

/**
 * @member {Boolean} is_restricted
 */
ObjsUserInnerAnyOf1.prototype['is_restricted'] = undefined;

/**
 * @member {Boolean} is_stranger
 */
ObjsUserInnerAnyOf1.prototype['is_stranger'] = undefined;

/**
 * @member {Boolean} is_ultra_restricted
 */
ObjsUserInnerAnyOf1.prototype['is_ultra_restricted'] = undefined;

/**
 * @member {String} locale
 */
ObjsUserInnerAnyOf1.prototype['locale'] = undefined;

/**
 * @member {String} name
 */
ObjsUserInnerAnyOf1.prototype['name'] = undefined;

/**
 * @member {String} presence
 */
ObjsUserInnerAnyOf1.prototype['presence'] = undefined;

/**
 * @member {module:model/ObjsUserProfile} profile
 */
ObjsUserInnerAnyOf1.prototype['profile'] = undefined;

/**
 * @member {String} real_name
 */
ObjsUserInnerAnyOf1.prototype['real_name'] = undefined;

/**
 * @member {String} team_id
 */
ObjsUserInnerAnyOf1.prototype['team_id'] = undefined;

/**
 * @member {module:model/ObjsUserInnerAnyOfTeamProfile} team_profile
 */
ObjsUserInnerAnyOf1.prototype['team_profile'] = undefined;

/**
 * @member {Array.<String>} teams
 */
ObjsUserInnerAnyOf1.prototype['teams'] = undefined;

/**
 * @member {String} two_factor_type
 */
ObjsUserInnerAnyOf1.prototype['two_factor_type'] = undefined;

/**
 * @member {Array.<module:model/ObjsTeamDiscoverableInner>} tz
 */
ObjsUserInnerAnyOf1.prototype['tz'] = undefined;

/**
 * @member {String} tz_label
 */
ObjsUserInnerAnyOf1.prototype['tz_label'] = undefined;

/**
 * @member {Number} tz_offset
 */
ObjsUserInnerAnyOf1.prototype['tz_offset'] = undefined;

/**
 * @member {Number} updated
 */
ObjsUserInnerAnyOf1.prototype['updated'] = undefined;






export default ObjsUserInnerAnyOf1;

