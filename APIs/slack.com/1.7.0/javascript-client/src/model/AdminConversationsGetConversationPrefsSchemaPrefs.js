/**
 * Slack Web API
 * One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AdminConversationsGetConversationPrefsSchemaPrefsCanThread from './AdminConversationsGetConversationPrefsSchemaPrefsCanThread';

/**
 * The AdminConversationsGetConversationPrefsSchemaPrefs model module.
 * @module model/AdminConversationsGetConversationPrefsSchemaPrefs
 * @version 1.7.0
 */
class AdminConversationsGetConversationPrefsSchemaPrefs {
    /**
     * Constructs a new <code>AdminConversationsGetConversationPrefsSchemaPrefs</code>.
     * @alias module:model/AdminConversationsGetConversationPrefsSchemaPrefs
     */
    constructor() { 
        
        AdminConversationsGetConversationPrefsSchemaPrefs.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AdminConversationsGetConversationPrefsSchemaPrefs</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AdminConversationsGetConversationPrefsSchemaPrefs} obj Optional instance to populate.
     * @return {module:model/AdminConversationsGetConversationPrefsSchemaPrefs} The populated <code>AdminConversationsGetConversationPrefsSchemaPrefs</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AdminConversationsGetConversationPrefsSchemaPrefs();

            if (data.hasOwnProperty('can_thread')) {
                obj['can_thread'] = AdminConversationsGetConversationPrefsSchemaPrefsCanThread.constructFromObject(data['can_thread']);
            }
            if (data.hasOwnProperty('who_can_post')) {
                obj['who_can_post'] = AdminConversationsGetConversationPrefsSchemaPrefsCanThread.constructFromObject(data['who_can_post']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AdminConversationsGetConversationPrefsSchemaPrefs</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AdminConversationsGetConversationPrefsSchemaPrefs</code>.
     */
    static validateJSON(data) {
        // validate the optional field `can_thread`
        if (data['can_thread']) { // data not null
          AdminConversationsGetConversationPrefsSchemaPrefsCanThread.validateJSON(data['can_thread']);
        }
        // validate the optional field `who_can_post`
        if (data['who_can_post']) { // data not null
          AdminConversationsGetConversationPrefsSchemaPrefsCanThread.validateJSON(data['who_can_post']);
        }

        return true;
    }


}



/**
 * @member {module:model/AdminConversationsGetConversationPrefsSchemaPrefsCanThread} can_thread
 */
AdminConversationsGetConversationPrefsSchemaPrefs.prototype['can_thread'] = undefined;

/**
 * @member {module:model/AdminConversationsGetConversationPrefsSchemaPrefsCanThread} who_can_post
 */
AdminConversationsGetConversationPrefsSchemaPrefs.prototype['who_can_post'] = undefined;






export default AdminConversationsGetConversationPrefsSchemaPrefs;

