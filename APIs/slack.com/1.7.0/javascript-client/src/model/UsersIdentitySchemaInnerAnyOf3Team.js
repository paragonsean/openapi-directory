/**
 * Slack Web API
 * One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The UsersIdentitySchemaInnerAnyOf3Team model module.
 * @module model/UsersIdentitySchemaInnerAnyOf3Team
 * @version 1.7.0
 */
class UsersIdentitySchemaInnerAnyOf3Team {
    /**
     * Constructs a new <code>UsersIdentitySchemaInnerAnyOf3Team</code>.
     * @alias module:model/UsersIdentitySchemaInnerAnyOf3Team
     * @param domain {String} 
     * @param id {String} 
     * @param image102 {String} 
     * @param image132 {String} 
     * @param image230 {String} 
     * @param image34 {String} 
     * @param image44 {String} 
     * @param image68 {String} 
     * @param image88 {String} 
     * @param imageDefault {Boolean} 
     * @param name {String} 
     */
    constructor(domain, id, image102, image132, image230, image34, image44, image68, image88, imageDefault, name) { 
        
        UsersIdentitySchemaInnerAnyOf3Team.initialize(this, domain, id, image102, image132, image230, image34, image44, image68, image88, imageDefault, name);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, domain, id, image102, image132, image230, image34, image44, image68, image88, imageDefault, name) { 
        obj['domain'] = domain;
        obj['id'] = id;
        obj['image_102'] = image102;
        obj['image_132'] = image132;
        obj['image_230'] = image230;
        obj['image_34'] = image34;
        obj['image_44'] = image44;
        obj['image_68'] = image68;
        obj['image_88'] = image88;
        obj['image_default'] = imageDefault;
        obj['name'] = name;
    }

    /**
     * Constructs a <code>UsersIdentitySchemaInnerAnyOf3Team</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UsersIdentitySchemaInnerAnyOf3Team} obj Optional instance to populate.
     * @return {module:model/UsersIdentitySchemaInnerAnyOf3Team} The populated <code>UsersIdentitySchemaInnerAnyOf3Team</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UsersIdentitySchemaInnerAnyOf3Team();

            if (data.hasOwnProperty('domain')) {
                obj['domain'] = ApiClient.convertToType(data['domain'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('image_102')) {
                obj['image_102'] = ApiClient.convertToType(data['image_102'], 'String');
            }
            if (data.hasOwnProperty('image_132')) {
                obj['image_132'] = ApiClient.convertToType(data['image_132'], 'String');
            }
            if (data.hasOwnProperty('image_230')) {
                obj['image_230'] = ApiClient.convertToType(data['image_230'], 'String');
            }
            if (data.hasOwnProperty('image_34')) {
                obj['image_34'] = ApiClient.convertToType(data['image_34'], 'String');
            }
            if (data.hasOwnProperty('image_44')) {
                obj['image_44'] = ApiClient.convertToType(data['image_44'], 'String');
            }
            if (data.hasOwnProperty('image_68')) {
                obj['image_68'] = ApiClient.convertToType(data['image_68'], 'String');
            }
            if (data.hasOwnProperty('image_88')) {
                obj['image_88'] = ApiClient.convertToType(data['image_88'], 'String');
            }
            if (data.hasOwnProperty('image_default')) {
                obj['image_default'] = ApiClient.convertToType(data['image_default'], 'Boolean');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UsersIdentitySchemaInnerAnyOf3Team</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UsersIdentitySchemaInnerAnyOf3Team</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of UsersIdentitySchemaInnerAnyOf3Team.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['domain'] && !(typeof data['domain'] === 'string' || data['domain'] instanceof String)) {
            throw new Error("Expected the field `domain` to be a primitive type in the JSON string but got " + data['domain']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['image_102'] && !(typeof data['image_102'] === 'string' || data['image_102'] instanceof String)) {
            throw new Error("Expected the field `image_102` to be a primitive type in the JSON string but got " + data['image_102']);
        }
        // ensure the json data is a string
        if (data['image_132'] && !(typeof data['image_132'] === 'string' || data['image_132'] instanceof String)) {
            throw new Error("Expected the field `image_132` to be a primitive type in the JSON string but got " + data['image_132']);
        }
        // ensure the json data is a string
        if (data['image_230'] && !(typeof data['image_230'] === 'string' || data['image_230'] instanceof String)) {
            throw new Error("Expected the field `image_230` to be a primitive type in the JSON string but got " + data['image_230']);
        }
        // ensure the json data is a string
        if (data['image_34'] && !(typeof data['image_34'] === 'string' || data['image_34'] instanceof String)) {
            throw new Error("Expected the field `image_34` to be a primitive type in the JSON string but got " + data['image_34']);
        }
        // ensure the json data is a string
        if (data['image_44'] && !(typeof data['image_44'] === 'string' || data['image_44'] instanceof String)) {
            throw new Error("Expected the field `image_44` to be a primitive type in the JSON string but got " + data['image_44']);
        }
        // ensure the json data is a string
        if (data['image_68'] && !(typeof data['image_68'] === 'string' || data['image_68'] instanceof String)) {
            throw new Error("Expected the field `image_68` to be a primitive type in the JSON string but got " + data['image_68']);
        }
        // ensure the json data is a string
        if (data['image_88'] && !(typeof data['image_88'] === 'string' || data['image_88'] instanceof String)) {
            throw new Error("Expected the field `image_88` to be a primitive type in the JSON string but got " + data['image_88']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }

        return true;
    }


}

UsersIdentitySchemaInnerAnyOf3Team.RequiredProperties = ["domain", "id", "image_102", "image_132", "image_230", "image_34", "image_44", "image_68", "image_88", "image_default", "name"];

/**
 * @member {String} domain
 */
UsersIdentitySchemaInnerAnyOf3Team.prototype['domain'] = undefined;

/**
 * @member {String} id
 */
UsersIdentitySchemaInnerAnyOf3Team.prototype['id'] = undefined;

/**
 * @member {String} image_102
 */
UsersIdentitySchemaInnerAnyOf3Team.prototype['image_102'] = undefined;

/**
 * @member {String} image_132
 */
UsersIdentitySchemaInnerAnyOf3Team.prototype['image_132'] = undefined;

/**
 * @member {String} image_230
 */
UsersIdentitySchemaInnerAnyOf3Team.prototype['image_230'] = undefined;

/**
 * @member {String} image_34
 */
UsersIdentitySchemaInnerAnyOf3Team.prototype['image_34'] = undefined;

/**
 * @member {String} image_44
 */
UsersIdentitySchemaInnerAnyOf3Team.prototype['image_44'] = undefined;

/**
 * @member {String} image_68
 */
UsersIdentitySchemaInnerAnyOf3Team.prototype['image_68'] = undefined;

/**
 * @member {String} image_88
 */
UsersIdentitySchemaInnerAnyOf3Team.prototype['image_88'] = undefined;

/**
 * @member {Boolean} image_default
 */
UsersIdentitySchemaInnerAnyOf3Team.prototype['image_default'] = undefined;

/**
 * @member {String} name
 */
UsersIdentitySchemaInnerAnyOf3Team.prototype['name'] = undefined;






export default UsersIdentitySchemaInnerAnyOf3Team;

