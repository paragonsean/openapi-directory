/**
 * Slack Web API
 * One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The MigrationExchangeSuccessSchema model module.
 * @module model/MigrationExchangeSuccessSchema
 * @version 1.7.0
 */
class MigrationExchangeSuccessSchema {
    /**
     * Constructs a new <code>MigrationExchangeSuccessSchema</code>.
     * Schema for successful response from migration.exchange method
     * @alias module:model/MigrationExchangeSuccessSchema
     * @extends Object
     * @param enterpriseId {String} 
     * @param ok {Boolean} 
     * @param teamId {String} 
     */
    constructor(enterpriseId, ok, teamId) { 
        
        MigrationExchangeSuccessSchema.initialize(this, enterpriseId, ok, teamId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, enterpriseId, ok, teamId) { 
        obj['enterprise_id'] = enterpriseId;
        obj['ok'] = ok;
        obj['team_id'] = teamId;
    }

    /**
     * Constructs a <code>MigrationExchangeSuccessSchema</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MigrationExchangeSuccessSchema} obj Optional instance to populate.
     * @return {module:model/MigrationExchangeSuccessSchema} The populated <code>MigrationExchangeSuccessSchema</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MigrationExchangeSuccessSchema();

            ApiClient.constructFromObject(data, obj, 'Object');
            

            if (data.hasOwnProperty('enterprise_id')) {
                obj['enterprise_id'] = ApiClient.convertToType(data['enterprise_id'], 'String');
            }
            if (data.hasOwnProperty('invalid_user_ids')) {
                obj['invalid_user_ids'] = ApiClient.convertToType(data['invalid_user_ids'], ['String']);
            }
            if (data.hasOwnProperty('ok')) {
                obj['ok'] = ApiClient.convertToType(data['ok'], 'Boolean');
            }
            if (data.hasOwnProperty('team_id')) {
                obj['team_id'] = ApiClient.convertToType(data['team_id'], 'String');
            }
            if (data.hasOwnProperty('user_id_map')) {
                obj['user_id_map'] = ApiClient.convertToType(data['user_id_map'], {'String': Object});
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MigrationExchangeSuccessSchema</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MigrationExchangeSuccessSchema</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of MigrationExchangeSuccessSchema.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['enterprise_id'] && !(typeof data['enterprise_id'] === 'string' || data['enterprise_id'] instanceof String)) {
            throw new Error("Expected the field `enterprise_id` to be a primitive type in the JSON string but got " + data['enterprise_id']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['invalid_user_ids'])) {
            throw new Error("Expected the field `invalid_user_ids` to be an array in the JSON data but got " + data['invalid_user_ids']);
        }
        // ensure the json data is a string
        if (data['team_id'] && !(typeof data['team_id'] === 'string' || data['team_id'] instanceof String)) {
            throw new Error("Expected the field `team_id` to be a primitive type in the JSON string but got " + data['team_id']);
        }

        return true;
    }


}

MigrationExchangeSuccessSchema.RequiredProperties = ["enterprise_id", "ok", "team_id"];

/**
 * @member {String} enterprise_id
 */
MigrationExchangeSuccessSchema.prototype['enterprise_id'] = undefined;

/**
 * @member {Array.<String>} invalid_user_ids
 */
MigrationExchangeSuccessSchema.prototype['invalid_user_ids'] = undefined;

/**
 * @member {Boolean} ok
 */
MigrationExchangeSuccessSchema.prototype['ok'] = undefined;

/**
 * @member {String} team_id
 */
MigrationExchangeSuccessSchema.prototype['team_id'] = undefined;

/**
 * @member {Object.<String, Object>} user_id_map
 */
MigrationExchangeSuccessSchema.prototype['user_id_map'] = undefined;






export default MigrationExchangeSuccessSchema;

