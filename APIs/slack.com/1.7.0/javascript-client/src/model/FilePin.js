/**
 * Slack Web API
 * One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ObjsFile from './ObjsFile';

/**
 * The FilePin model module.
 * @module model/FilePin
 * @version 1.7.0
 */
class FilePin {
    /**
     * Constructs a new <code>FilePin</code>.
     * @alias module:model/FilePin
     */
    constructor() { 
        
        FilePin.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>FilePin</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FilePin} obj Optional instance to populate.
     * @return {module:model/FilePin} The populated <code>FilePin</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FilePin();

            if (data.hasOwnProperty('created')) {
                obj['created'] = ApiClient.convertToType(data['created'], 'Number');
            }
            if (data.hasOwnProperty('created_by')) {
                obj['created_by'] = ApiClient.convertToType(data['created_by'], 'String');
            }
            if (data.hasOwnProperty('file')) {
                obj['file'] = ObjsFile.constructFromObject(data['file']);
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FilePin</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FilePin</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['created_by'] && !(typeof data['created_by'] === 'string' || data['created_by'] instanceof String)) {
            throw new Error("Expected the field `created_by` to be a primitive type in the JSON string but got " + data['created_by']);
        }
        // validate the optional field `file`
        if (data['file']) { // data not null
          ObjsFile.validateJSON(data['file']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}



/**
 * @member {Number} created
 */
FilePin.prototype['created'] = undefined;

/**
 * @member {String} created_by
 */
FilePin.prototype['created_by'] = undefined;

/**
 * @member {module:model/ObjsFile} file
 */
FilePin.prototype['file'] = undefined;

/**
 * @member {module:model/FilePin.TypeEnum} type
 */
FilePin.prototype['type'] = undefined;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
FilePin['TypeEnum'] = {

    /**
     * value: "file"
     * @const
     */
    "file": "file"
};



export default FilePin;

