/**
 * Slack Web API
 * One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ObjsSubteamAutoTypeInner from './ObjsSubteamAutoTypeInner';
import ObjsSubteamDeletedByInner from './ObjsSubteamDeletedByInner';
import ObjsSubteamPrefs from './ObjsSubteamPrefs';

/**
 * The ObjsSubteam model module.
 * @module model/ObjsSubteam
 * @version 1.7.0
 */
class ObjsSubteam {
    /**
     * Constructs a new <code>ObjsSubteam</code>.
     * @alias module:model/ObjsSubteam
     * @param autoProvision {Boolean} 
     * @param autoType {Array.<module:model/ObjsSubteamAutoTypeInner>} 
     * @param createdBy {String} 
     * @param dateCreate {Number} 
     * @param dateDelete {Number} 
     * @param dateUpdate {Number} 
     * @param deletedBy {Array.<module:model/ObjsSubteamDeletedByInner>} 
     * @param description {String} 
     * @param enterpriseSubteamId {String} 
     * @param handle {String} 
     * @param id {String} 
     * @param isExternal {Boolean} 
     * @param isSubteam {Boolean} 
     * @param isUsergroup {Boolean} 
     * @param name {String} 
     * @param prefs {module:model/ObjsSubteamPrefs} 
     * @param teamId {String} 
     * @param updatedBy {String} 
     */
    constructor(autoProvision, autoType, createdBy, dateCreate, dateDelete, dateUpdate, deletedBy, description, enterpriseSubteamId, handle, id, isExternal, isSubteam, isUsergroup, name, prefs, teamId, updatedBy) { 
        
        ObjsSubteam.initialize(this, autoProvision, autoType, createdBy, dateCreate, dateDelete, dateUpdate, deletedBy, description, enterpriseSubteamId, handle, id, isExternal, isSubteam, isUsergroup, name, prefs, teamId, updatedBy);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, autoProvision, autoType, createdBy, dateCreate, dateDelete, dateUpdate, deletedBy, description, enterpriseSubteamId, handle, id, isExternal, isSubteam, isUsergroup, name, prefs, teamId, updatedBy) { 
        obj['auto_provision'] = autoProvision;
        obj['auto_type'] = autoType;
        obj['created_by'] = createdBy;
        obj['date_create'] = dateCreate;
        obj['date_delete'] = dateDelete;
        obj['date_update'] = dateUpdate;
        obj['deleted_by'] = deletedBy;
        obj['description'] = description;
        obj['enterprise_subteam_id'] = enterpriseSubteamId;
        obj['handle'] = handle;
        obj['id'] = id;
        obj['is_external'] = isExternal;
        obj['is_subteam'] = isSubteam;
        obj['is_usergroup'] = isUsergroup;
        obj['name'] = name;
        obj['prefs'] = prefs;
        obj['team_id'] = teamId;
        obj['updated_by'] = updatedBy;
    }

    /**
     * Constructs a <code>ObjsSubteam</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ObjsSubteam} obj Optional instance to populate.
     * @return {module:model/ObjsSubteam} The populated <code>ObjsSubteam</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ObjsSubteam();

            if (data.hasOwnProperty('auto_provision')) {
                obj['auto_provision'] = ApiClient.convertToType(data['auto_provision'], 'Boolean');
            }
            if (data.hasOwnProperty('auto_type')) {
                obj['auto_type'] = ApiClient.convertToType(data['auto_type'], [ObjsSubteamAutoTypeInner]);
            }
            if (data.hasOwnProperty('channel_count')) {
                obj['channel_count'] = ApiClient.convertToType(data['channel_count'], 'Number');
            }
            if (data.hasOwnProperty('created_by')) {
                obj['created_by'] = ApiClient.convertToType(data['created_by'], 'String');
            }
            if (data.hasOwnProperty('date_create')) {
                obj['date_create'] = ApiClient.convertToType(data['date_create'], 'Number');
            }
            if (data.hasOwnProperty('date_delete')) {
                obj['date_delete'] = ApiClient.convertToType(data['date_delete'], 'Number');
            }
            if (data.hasOwnProperty('date_update')) {
                obj['date_update'] = ApiClient.convertToType(data['date_update'], 'Number');
            }
            if (data.hasOwnProperty('deleted_by')) {
                obj['deleted_by'] = ApiClient.convertToType(data['deleted_by'], [ObjsSubteamDeletedByInner]);
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('enterprise_subteam_id')) {
                obj['enterprise_subteam_id'] = ApiClient.convertToType(data['enterprise_subteam_id'], 'String');
            }
            if (data.hasOwnProperty('handle')) {
                obj['handle'] = ApiClient.convertToType(data['handle'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('is_external')) {
                obj['is_external'] = ApiClient.convertToType(data['is_external'], 'Boolean');
            }
            if (data.hasOwnProperty('is_subteam')) {
                obj['is_subteam'] = ApiClient.convertToType(data['is_subteam'], 'Boolean');
            }
            if (data.hasOwnProperty('is_usergroup')) {
                obj['is_usergroup'] = ApiClient.convertToType(data['is_usergroup'], 'Boolean');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('prefs')) {
                obj['prefs'] = ObjsSubteamPrefs.constructFromObject(data['prefs']);
            }
            if (data.hasOwnProperty('team_id')) {
                obj['team_id'] = ApiClient.convertToType(data['team_id'], 'String');
            }
            if (data.hasOwnProperty('updated_by')) {
                obj['updated_by'] = ApiClient.convertToType(data['updated_by'], 'String');
            }
            if (data.hasOwnProperty('user_count')) {
                obj['user_count'] = ApiClient.convertToType(data['user_count'], 'Number');
            }
            if (data.hasOwnProperty('users')) {
                obj['users'] = ApiClient.convertToType(data['users'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ObjsSubteam</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ObjsSubteam</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ObjsSubteam.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['auto_type']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['auto_type'])) {
                throw new Error("Expected the field `auto_type` to be an array in the JSON data but got " + data['auto_type']);
            }
            // validate the optional field `auto_type` (array)
            for (const item of data['auto_type']) {
                ObjsSubteamAutoTypeInner.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['created_by'] && !(typeof data['created_by'] === 'string' || data['created_by'] instanceof String)) {
            throw new Error("Expected the field `created_by` to be a primitive type in the JSON string but got " + data['created_by']);
        }
        if (data['deleted_by']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['deleted_by'])) {
                throw new Error("Expected the field `deleted_by` to be an array in the JSON data but got " + data['deleted_by']);
            }
            // validate the optional field `deleted_by` (array)
            for (const item of data['deleted_by']) {
                ObjsSubteamDeletedByInner.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['enterprise_subteam_id'] && !(typeof data['enterprise_subteam_id'] === 'string' || data['enterprise_subteam_id'] instanceof String)) {
            throw new Error("Expected the field `enterprise_subteam_id` to be a primitive type in the JSON string but got " + data['enterprise_subteam_id']);
        }
        // ensure the json data is a string
        if (data['handle'] && !(typeof data['handle'] === 'string' || data['handle'] instanceof String)) {
            throw new Error("Expected the field `handle` to be a primitive type in the JSON string but got " + data['handle']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // validate the optional field `prefs`
        if (data['prefs']) { // data not null
          ObjsSubteamPrefs.validateJSON(data['prefs']);
        }
        // ensure the json data is a string
        if (data['team_id'] && !(typeof data['team_id'] === 'string' || data['team_id'] instanceof String)) {
            throw new Error("Expected the field `team_id` to be a primitive type in the JSON string but got " + data['team_id']);
        }
        // ensure the json data is a string
        if (data['updated_by'] && !(typeof data['updated_by'] === 'string' || data['updated_by'] instanceof String)) {
            throw new Error("Expected the field `updated_by` to be a primitive type in the JSON string but got " + data['updated_by']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['users'])) {
            throw new Error("Expected the field `users` to be an array in the JSON data but got " + data['users']);
        }

        return true;
    }


}

ObjsSubteam.RequiredProperties = ["auto_provision", "auto_type", "created_by", "date_create", "date_delete", "date_update", "deleted_by", "description", "enterprise_subteam_id", "handle", "id", "is_external", "is_subteam", "is_usergroup", "name", "prefs", "team_id", "updated_by"];

/**
 * @member {Boolean} auto_provision
 */
ObjsSubteam.prototype['auto_provision'] = undefined;

/**
 * @member {Array.<module:model/ObjsSubteamAutoTypeInner>} auto_type
 */
ObjsSubteam.prototype['auto_type'] = undefined;

/**
 * @member {Number} channel_count
 */
ObjsSubteam.prototype['channel_count'] = undefined;

/**
 * @member {String} created_by
 */
ObjsSubteam.prototype['created_by'] = undefined;

/**
 * @member {Number} date_create
 */
ObjsSubteam.prototype['date_create'] = undefined;

/**
 * @member {Number} date_delete
 */
ObjsSubteam.prototype['date_delete'] = undefined;

/**
 * @member {Number} date_update
 */
ObjsSubteam.prototype['date_update'] = undefined;

/**
 * @member {Array.<module:model/ObjsSubteamDeletedByInner>} deleted_by
 */
ObjsSubteam.prototype['deleted_by'] = undefined;

/**
 * @member {String} description
 */
ObjsSubteam.prototype['description'] = undefined;

/**
 * @member {String} enterprise_subteam_id
 */
ObjsSubteam.prototype['enterprise_subteam_id'] = undefined;

/**
 * @member {String} handle
 */
ObjsSubteam.prototype['handle'] = undefined;

/**
 * @member {String} id
 */
ObjsSubteam.prototype['id'] = undefined;

/**
 * @member {Boolean} is_external
 */
ObjsSubteam.prototype['is_external'] = undefined;

/**
 * @member {Boolean} is_subteam
 */
ObjsSubteam.prototype['is_subteam'] = undefined;

/**
 * @member {Boolean} is_usergroup
 */
ObjsSubteam.prototype['is_usergroup'] = undefined;

/**
 * @member {String} name
 */
ObjsSubteam.prototype['name'] = undefined;

/**
 * @member {module:model/ObjsSubteamPrefs} prefs
 */
ObjsSubteam.prototype['prefs'] = undefined;

/**
 * @member {String} team_id
 */
ObjsSubteam.prototype['team_id'] = undefined;

/**
 * @member {String} updated_by
 */
ObjsSubteam.prototype['updated_by'] = undefined;

/**
 * @member {Number} user_count
 */
ObjsSubteam.prototype['user_count'] = undefined;

/**
 * @member {Array.<String>} users
 */
ObjsSubteam.prototype['users'] = undefined;






export default ObjsSubteam;

