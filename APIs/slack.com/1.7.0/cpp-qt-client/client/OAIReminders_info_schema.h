/**
 * Slack Web API
 * One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.
 *
 * The version of the OpenAPI document: 1.7.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIReminders_info_schema.h
 *
 * Schema for successful response from reminders.info method
 */

#ifndef OAIReminders_info_schema_H
#define OAIReminders_info_schema_H

#include <QJsonObject>

#include "OAIObjs_reminder.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIObjs_reminder;

class OAIReminders_info_schema : public OAIObject {
public:
    OAIReminders_info_schema();
    OAIReminders_info_schema(QString json);
    ~OAIReminders_info_schema() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isOk() const;
    void setOk(const bool &ok);
    bool is_ok_Set() const;
    bool is_ok_Valid() const;

    OAIObjs_reminder getReminder() const;
    void setReminder(const OAIObjs_reminder &reminder);
    bool is_reminder_Set() const;
    bool is_reminder_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_ok;
    bool m_ok_isSet;
    bool m_ok_isValid;

    OAIObjs_reminder m_reminder;
    bool m_reminder_isSet;
    bool m_reminder_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIReminders_info_schema)

#endif // OAIReminders_info_schema_H
