/**
 * Slack Web API
 * One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.
 *
 * The version of the OpenAPI document: 1.7.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIConversations_join_success_schema.h
 *
 * Schema for successful response from conversations.join method
 */

#ifndef OAIConversations_join_success_schema_H
#define OAIConversations_join_success_schema_H

#include <QJsonObject>

#include "OAIObjs_conversation_inner.h"
#include "OAIResponse_metadata.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIObjs_conversation_inner;
class OAIResponse_metadata;

class OAIConversations_join_success_schema : public OAIObject {
public:
    OAIConversations_join_success_schema();
    OAIConversations_join_success_schema(QString json);
    ~OAIConversations_join_success_schema() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIObjs_conversation_inner> getChannel() const;
    void setChannel(const QList<OAIObjs_conversation_inner> &channel);
    bool is_channel_Set() const;
    bool is_channel_Valid() const;

    bool isOk() const;
    void setOk(const bool &ok);
    bool is_ok_Set() const;
    bool is_ok_Valid() const;

    OAIResponse_metadata getResponseMetadata() const;
    void setResponseMetadata(const OAIResponse_metadata &response_metadata);
    bool is_response_metadata_Set() const;
    bool is_response_metadata_Valid() const;

    QString getWarning() const;
    void setWarning(const QString &warning);
    bool is_warning_Set() const;
    bool is_warning_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIObjs_conversation_inner> m_channel;
    bool m_channel_isSet;
    bool m_channel_isValid;

    bool m_ok;
    bool m_ok_isSet;
    bool m_ok_isValid;

    OAIResponse_metadata m_response_metadata;
    bool m_response_metadata_isSet;
    bool m_response_metadata_isValid;

    QString m_warning;
    bool m_warning_isSet;
    bool m_warning_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIConversations_join_success_schema)

#endif // OAIConversations_join_success_schema_H
