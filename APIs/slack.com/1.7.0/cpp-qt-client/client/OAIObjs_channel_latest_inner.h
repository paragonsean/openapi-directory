/**
 * Slack Web API
 * One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.
 *
 * The version of the OpenAPI document: 1.7.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIObjs_channel_latest_inner.h
 *
 * 
 */

#ifndef OAIObjs_channel_latest_inner_H
#define OAIObjs_channel_latest_inner_H

#include <QJsonObject>

#include "OAIBlocks_inner.h"
#include "OAIObjs_bot_profile.h"
#include "OAIObjs_comment.h"
#include "OAIObjs_file.h"
#include "OAIObjs_message.h"
#include "OAIObjs_message_attachments_inner.h"
#include "OAIObjs_message_bot_id_inner.h"
#include "OAIObjs_message_icons.h"
#include "OAIObjs_reaction.h"
#include "OAIObjs_user_profile_short.h"
#include <QList>
#include <QSet>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIObjs_message_attachments_inner;
class OAIObjs_bot_profile;
class OAIObjs_comment;
class OAIObjs_file;
class OAIObjs_message_icons;
class OAIObjs_user_profile_short;

class OAIObjs_channel_latest_inner : public OAIObject {
public:
    OAIObjs_channel_latest_inner();
    OAIObjs_channel_latest_inner(QString json);
    ~OAIObjs_channel_latest_inner() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QSet<OAIObjs_message_attachments_inner> getAttachments() const;
    void setAttachments(const QSet<OAIObjs_message_attachments_inner> &attachments);
    bool is_attachments_Set() const;
    bool is_attachments_Valid() const;

    QList<OAIBlocks_inner> getBlocks() const;
    void setBlocks(const QList<OAIBlocks_inner> &blocks);
    bool is_blocks_Set() const;
    bool is_blocks_Valid() const;

    QList<OAIObjs_message_bot_id_inner> getBotId() const;
    void setBotId(const QList<OAIObjs_message_bot_id_inner> &bot_id);
    bool is_bot_id_Set() const;
    bool is_bot_id_Valid() const;

    OAIObjs_bot_profile getBotProfile() const;
    void setBotProfile(const OAIObjs_bot_profile &bot_profile);
    bool is_bot_profile_Set() const;
    bool is_bot_profile_Valid() const;

    QString getClientMsgId() const;
    void setClientMsgId(const QString &client_msg_id);
    bool is_client_msg_id_Set() const;
    bool is_client_msg_id_Valid() const;

    OAIObjs_comment getComment() const;
    void setComment(const OAIObjs_comment &comment);
    bool is_comment_Set() const;
    bool is_comment_Valid() const;

    bool isDisplayAsBot() const;
    void setDisplayAsBot(const bool &display_as_bot);
    bool is_display_as_bot_Set() const;
    bool is_display_as_bot_Valid() const;

    OAIObjs_file getFile() const;
    void setFile(const OAIObjs_file &file);
    bool is_file_Set() const;
    bool is_file_Valid() const;

    QSet<OAIObjs_file> getFiles() const;
    void setFiles(const QSet<OAIObjs_file> &files);
    bool is_files_Set() const;
    bool is_files_Valid() const;

    OAIObjs_message_icons getIcons() const;
    void setIcons(const OAIObjs_message_icons &icons);
    bool is_icons_Set() const;
    bool is_icons_Valid() const;

    QString getInviter() const;
    void setInviter(const QString &inviter);
    bool is_inviter_Set() const;
    bool is_inviter_Valid() const;

    bool isIsDelayedMessage() const;
    void setIsDelayedMessage(const bool &is_delayed_message);
    bool is_is_delayed_message_Set() const;
    bool is_is_delayed_message_Valid() const;

    bool isIsIntro() const;
    void setIsIntro(const bool &is_intro);
    bool is_is_intro_Set() const;
    bool is_is_intro_Valid() const;

    bool isIsStarred() const;
    void setIsStarred(const bool &is_starred);
    bool is_is_starred_Set() const;
    bool is_is_starred_Valid() const;

    QString getLastRead() const;
    void setLastRead(const QString &last_read);
    bool is_last_read_Set() const;
    bool is_last_read_Valid() const;

    QString getLatestReply() const;
    void setLatestReply(const QString &latest_reply);
    bool is_latest_reply_Set() const;
    bool is_latest_reply_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getOldName() const;
    void setOldName(const QString &old_name);
    bool is_old_name_Set() const;
    bool is_old_name_Valid() const;

    QString getParentUserId() const;
    void setParentUserId(const QString &parent_user_id);
    bool is_parent_user_id_Set() const;
    bool is_parent_user_id_Valid() const;

    QString getPermalink() const;
    void setPermalink(const QString &permalink);
    bool is_permalink_Set() const;
    bool is_permalink_Valid() const;

    QList<QString> getPinnedTo() const;
    void setPinnedTo(const QList<QString> &pinned_to);
    bool is_pinned_to_Set() const;
    bool is_pinned_to_Valid() const;

    QString getPurpose() const;
    void setPurpose(const QString &purpose);
    bool is_purpose_Set() const;
    bool is_purpose_Valid() const;

    QList<OAIObjs_reaction> getReactions() const;
    void setReactions(const QList<OAIObjs_reaction> &reactions);
    bool is_reactions_Set() const;
    bool is_reactions_Valid() const;

    qint32 getReplyCount() const;
    void setReplyCount(const qint32 &reply_count);
    bool is_reply_count_Set() const;
    bool is_reply_count_Valid() const;

    QSet<QString> getReplyUsers() const;
    void setReplyUsers(const QSet<QString> &reply_users);
    bool is_reply_users_Set() const;
    bool is_reply_users_Valid() const;

    qint32 getReplyUsersCount() const;
    void setReplyUsersCount(const qint32 &reply_users_count);
    bool is_reply_users_count_Set() const;
    bool is_reply_users_count_Valid() const;

    QString getSourceTeam() const;
    void setSourceTeam(const QString &source_team);
    bool is_source_team_Set() const;
    bool is_source_team_Valid() const;

    bool isSubscribed() const;
    void setSubscribed(const bool &subscribed);
    bool is_subscribed_Set() const;
    bool is_subscribed_Valid() const;

    QString getSubtype() const;
    void setSubtype(const QString &subtype);
    bool is_subtype_Set() const;
    bool is_subtype_Valid() const;

    QString getTeam() const;
    void setTeam(const QString &team);
    bool is_team_Set() const;
    bool is_team_Valid() const;

    QString getText() const;
    void setText(const QString &text);
    bool is_text_Set() const;
    bool is_text_Valid() const;

    QString getThreadTs() const;
    void setThreadTs(const QString &thread_ts);
    bool is_thread_ts_Set() const;
    bool is_thread_ts_Valid() const;

    QString getTopic() const;
    void setTopic(const QString &topic);
    bool is_topic_Set() const;
    bool is_topic_Valid() const;

    QString getTs() const;
    void setTs(const QString &ts);
    bool is_ts_Set() const;
    bool is_ts_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    qint32 getUnreadCount() const;
    void setUnreadCount(const qint32 &unread_count);
    bool is_unread_count_Set() const;
    bool is_unread_count_Valid() const;

    bool isUpload() const;
    void setUpload(const bool &upload);
    bool is_upload_Set() const;
    bool is_upload_Valid() const;

    QString getUser() const;
    void setUser(const QString &user);
    bool is_user_Set() const;
    bool is_user_Valid() const;

    OAIObjs_user_profile_short getUserProfile() const;
    void setUserProfile(const OAIObjs_user_profile_short &user_profile);
    bool is_user_profile_Set() const;
    bool is_user_profile_Valid() const;

    QString getUserTeam() const;
    void setUserTeam(const QString &user_team);
    bool is_user_team_Set() const;
    bool is_user_team_Valid() const;

    QString getUsername() const;
    void setUsername(const QString &username);
    bool is_username_Set() const;
    bool is_username_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QSet<OAIObjs_message_attachments_inner> m_attachments;
    bool m_attachments_isSet;
    bool m_attachments_isValid;

    QList<OAIBlocks_inner> m_blocks;
    bool m_blocks_isSet;
    bool m_blocks_isValid;

    QList<OAIObjs_message_bot_id_inner> m_bot_id;
    bool m_bot_id_isSet;
    bool m_bot_id_isValid;

    OAIObjs_bot_profile m_bot_profile;
    bool m_bot_profile_isSet;
    bool m_bot_profile_isValid;

    QString m_client_msg_id;
    bool m_client_msg_id_isSet;
    bool m_client_msg_id_isValid;

    OAIObjs_comment m_comment;
    bool m_comment_isSet;
    bool m_comment_isValid;

    bool m_display_as_bot;
    bool m_display_as_bot_isSet;
    bool m_display_as_bot_isValid;

    OAIObjs_file m_file;
    bool m_file_isSet;
    bool m_file_isValid;

    QSet<OAIObjs_file> m_files;
    bool m_files_isSet;
    bool m_files_isValid;

    OAIObjs_message_icons m_icons;
    bool m_icons_isSet;
    bool m_icons_isValid;

    QString m_inviter;
    bool m_inviter_isSet;
    bool m_inviter_isValid;

    bool m_is_delayed_message;
    bool m_is_delayed_message_isSet;
    bool m_is_delayed_message_isValid;

    bool m_is_intro;
    bool m_is_intro_isSet;
    bool m_is_intro_isValid;

    bool m_is_starred;
    bool m_is_starred_isSet;
    bool m_is_starred_isValid;

    QString m_last_read;
    bool m_last_read_isSet;
    bool m_last_read_isValid;

    QString m_latest_reply;
    bool m_latest_reply_isSet;
    bool m_latest_reply_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_old_name;
    bool m_old_name_isSet;
    bool m_old_name_isValid;

    QString m_parent_user_id;
    bool m_parent_user_id_isSet;
    bool m_parent_user_id_isValid;

    QString m_permalink;
    bool m_permalink_isSet;
    bool m_permalink_isValid;

    QList<QString> m_pinned_to;
    bool m_pinned_to_isSet;
    bool m_pinned_to_isValid;

    QString m_purpose;
    bool m_purpose_isSet;
    bool m_purpose_isValid;

    QList<OAIObjs_reaction> m_reactions;
    bool m_reactions_isSet;
    bool m_reactions_isValid;

    qint32 m_reply_count;
    bool m_reply_count_isSet;
    bool m_reply_count_isValid;

    QSet<QString> m_reply_users;
    bool m_reply_users_isSet;
    bool m_reply_users_isValid;

    qint32 m_reply_users_count;
    bool m_reply_users_count_isSet;
    bool m_reply_users_count_isValid;

    QString m_source_team;
    bool m_source_team_isSet;
    bool m_source_team_isValid;

    bool m_subscribed;
    bool m_subscribed_isSet;
    bool m_subscribed_isValid;

    QString m_subtype;
    bool m_subtype_isSet;
    bool m_subtype_isValid;

    QString m_team;
    bool m_team_isSet;
    bool m_team_isValid;

    QString m_text;
    bool m_text_isSet;
    bool m_text_isValid;

    QString m_thread_ts;
    bool m_thread_ts_isSet;
    bool m_thread_ts_isValid;

    QString m_topic;
    bool m_topic_isSet;
    bool m_topic_isValid;

    QString m_ts;
    bool m_ts_isSet;
    bool m_ts_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    qint32 m_unread_count;
    bool m_unread_count_isSet;
    bool m_unread_count_isValid;

    bool m_upload;
    bool m_upload_isSet;
    bool m_upload_isValid;

    QString m_user;
    bool m_user_isSet;
    bool m_user_isValid;

    OAIObjs_user_profile_short m_user_profile;
    bool m_user_profile_isSet;
    bool m_user_profile_isValid;

    QString m_user_team;
    bool m_user_team_isSet;
    bool m_user_team_isValid;

    QString m_username;
    bool m_username_isSet;
    bool m_username_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIObjs_channel_latest_inner)

#endif // OAIObjs_channel_latest_inner_H
