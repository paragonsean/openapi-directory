/**
 * Slack Web API
 * One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.
 *
 * The version of the OpenAPI document: 1.7.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPins_list_success_schema_inner_anyOf_items_inner.h
 *
 * 
 */

#ifndef OAIPins_list_success_schema_inner_anyOf_items_inner_H
#define OAIPins_list_success_schema_inner_anyOf_items_inner_H

#include <QJsonObject>

#include "OAIFile_Pin.h"
#include "OAIMessage_Pin.h"
#include "OAIObjs_file.h"
#include "OAIObjs_message.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIObjs_file;
class OAIObjs_message;

class OAIPins_list_success_schema_inner_anyOf_items_inner : public OAIObject {
public:
    OAIPins_list_success_schema_inner_anyOf_items_inner();
    OAIPins_list_success_schema_inner_anyOf_items_inner(QString json);
    ~OAIPins_list_success_schema_inner_anyOf_items_inner() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getCreated() const;
    void setCreated(const qint32 &created);
    bool is_created_Set() const;
    bool is_created_Valid() const;

    QString getCreatedBy() const;
    void setCreatedBy(const QString &created_by);
    bool is_created_by_Set() const;
    bool is_created_by_Valid() const;

    OAIObjs_file getFile() const;
    void setFile(const OAIObjs_file &file);
    bool is_file_Set() const;
    bool is_file_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getChannel() const;
    void setChannel(const QString &channel);
    bool is_channel_Set() const;
    bool is_channel_Valid() const;

    OAIObjs_message getMessage() const;
    void setMessage(const OAIObjs_message &message);
    bool is_message_Set() const;
    bool is_message_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_created;
    bool m_created_isSet;
    bool m_created_isValid;

    QString m_created_by;
    bool m_created_by_isSet;
    bool m_created_by_isValid;

    OAIObjs_file m_file;
    bool m_file_isSet;
    bool m_file_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_channel;
    bool m_channel_isSet;
    bool m_channel_isValid;

    OAIObjs_message m_message;
    bool m_message_isSet;
    bool m_message_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPins_list_success_schema_inner_anyOf_items_inner)

#endif // OAIPins_list_success_schema_inner_anyOf_items_inner_H
