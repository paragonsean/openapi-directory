/**
 * Slack Web API
 * One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.
 *
 * The version of the OpenAPI document: 1.7.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIApi_permissions_scopes_list_success_schema_scopes.h
 *
 * 
 */

#ifndef OAIApi_permissions_scopes_list_success_schema_scopes_H
#define OAIApi_permissions_scopes_list_success_schema_scopes_H

#include <QJsonObject>

#include <QJsonValue>
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIApi_permissions_scopes_list_success_schema_scopes : public OAIObject {
public:
    OAIApi_permissions_scopes_list_success_schema_scopes();
    OAIApi_permissions_scopes_list_success_schema_scopes(QString json);
    ~OAIApi_permissions_scopes_list_success_schema_scopes() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getAppHome() const;
    void setAppHome(const QList<QString> &app_home);
    bool is_app_home_Set() const;
    bool is_app_home_Valid() const;

    QList<QString> getChannel() const;
    void setChannel(const QList<QString> &channel);
    bool is_channel_Set() const;
    bool is_channel_Valid() const;

    QList<QString> getGroup() const;
    void setGroup(const QList<QString> &group);
    bool is_group_Set() const;
    bool is_group_Valid() const;

    QList<QString> getIm() const;
    void setIm(const QList<QString> &im);
    bool is_im_Set() const;
    bool is_im_Valid() const;

    QList<QString> getMpim() const;
    void setMpim(const QList<QString> &mpim);
    bool is_mpim_Set() const;
    bool is_mpim_Valid() const;

    QList<QString> getTeam() const;
    void setTeam(const QList<QString> &team);
    bool is_team_Set() const;
    bool is_team_Valid() const;

    QList<QString> getUser() const;
    void setUser(const QList<QString> &user);
    bool is_user_Set() const;
    bool is_user_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_app_home;
    bool m_app_home_isSet;
    bool m_app_home_isValid;

    QList<QString> m_channel;
    bool m_channel_isSet;
    bool m_channel_isValid;

    QList<QString> m_group;
    bool m_group_isSet;
    bool m_group_isValid;

    QList<QString> m_im;
    bool m_im_isSet;
    bool m_im_isValid;

    QList<QString> m_mpim;
    bool m_mpim_isSet;
    bool m_mpim_isValid;

    QList<QString> m_team;
    bool m_team_isSet;
    bool m_team_isValid;

    QList<QString> m_user;
    bool m_user_isSet;
    bool m_user_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIApi_permissions_scopes_list_success_schema_scopes)

#endif // OAIApi_permissions_scopes_list_success_schema_scopes_H
