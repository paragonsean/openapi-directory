/**
 * Slack Web API
 * One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.
 *
 * The version of the OpenAPI document: 1.7.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIObjs_team.h
 *
 * 
 */

#ifndef OAIObjs_team_H
#define OAIObjs_team_H

#include <QJsonObject>

#include "OAIObjs_external_org_migrations.h"
#include "OAIObjs_icon.h"
#include "OAIObjs_primary_owner.h"
#include "OAIObjs_team_discoverable_inner.h"
#include "OAIObjs_team_sso_provider.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIObjs_external_org_migrations;
class OAIObjs_icon;
class OAIObjs_primary_owner;
class OAIObjs_team_sso_provider;

class OAIObjs_team : public OAIObject {
public:
    OAIObjs_team();
    OAIObjs_team(QString json);
    ~OAIObjs_team() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isArchived() const;
    void setArchived(const bool &archived);
    bool is_archived_Set() const;
    bool is_archived_Valid() const;

    QString getAvatarBaseUrl() const;
    void setAvatarBaseUrl(const QString &avatar_base_url);
    bool is_avatar_base_url_Set() const;
    bool is_avatar_base_url_Valid() const;

    qint32 getCreated() const;
    void setCreated(const qint32 &created);
    bool is_created_Set() const;
    bool is_created_Valid() const;

    qint32 getDateCreate() const;
    void setDateCreate(const qint32 &date_create);
    bool is_date_create_Set() const;
    bool is_date_create_Valid() const;

    bool isDeleted() const;
    void setDeleted(const bool &deleted);
    bool is_deleted_Set() const;
    bool is_deleted_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QList<OAIObjs_team_discoverable_inner> getDiscoverable() const;
    void setDiscoverable(const QList<OAIObjs_team_discoverable_inner> &discoverable);
    bool is_discoverable_Set() const;
    bool is_discoverable_Valid() const;

    QString getDomain() const;
    void setDomain(const QString &domain);
    bool is_domain_Set() const;
    bool is_domain_Valid() const;

    QString getEmailDomain() const;
    void setEmailDomain(const QString &email_domain);
    bool is_email_domain_Set() const;
    bool is_email_domain_Valid() const;

    QString getEnterpriseId() const;
    void setEnterpriseId(const QString &enterprise_id);
    bool is_enterprise_id_Set() const;
    bool is_enterprise_id_Valid() const;

    QString getEnterpriseName() const;
    void setEnterpriseName(const QString &enterprise_name);
    bool is_enterprise_name_Set() const;
    bool is_enterprise_name_Valid() const;

    OAIObjs_external_org_migrations getExternalOrgMigrations() const;
    void setExternalOrgMigrations(const OAIObjs_external_org_migrations &external_org_migrations);
    bool is_external_org_migrations_Set() const;
    bool is_external_org_migrations_Valid() const;

    bool isHasComplianceExport() const;
    void setHasComplianceExport(const bool &has_compliance_export);
    bool is_has_compliance_export_Set() const;
    bool is_has_compliance_export_Valid() const;

    OAIObjs_icon getIcon() const;
    void setIcon(const OAIObjs_icon &icon);
    bool is_icon_Set() const;
    bool is_icon_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    bool isIsAssigned() const;
    void setIsAssigned(const bool &is_assigned);
    bool is_is_assigned_Set() const;
    bool is_is_assigned_Valid() const;

    qint32 getIsEnterprise() const;
    void setIsEnterprise(const qint32 &is_enterprise);
    bool is_is_enterprise_Set() const;
    bool is_is_enterprise_Valid() const;

    bool isIsOverStorageLimit() const;
    void setIsOverStorageLimit(const bool &is_over_storage_limit);
    bool is_is_over_storage_limit_Set() const;
    bool is_is_over_storage_limit_Valid() const;

    qint32 getLimitTs() const;
    void setLimitTs(const qint32 &limit_ts);
    bool is_limit_ts_Set() const;
    bool is_limit_ts_Valid() const;

    QString getLocale() const;
    void setLocale(const QString &locale);
    bool is_locale_Set() const;
    bool is_locale_Valid() const;

    qint32 getMessagesCount() const;
    void setMessagesCount(const qint32 &messages_count);
    bool is_messages_count_Set() const;
    bool is_messages_count_Valid() const;

    qint32 getMsgEditWindowMins() const;
    void setMsgEditWindowMins(const qint32 &msg_edit_window_mins);
    bool is_msg_edit_window_mins_Set() const;
    bool is_msg_edit_window_mins_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    bool isOverIntegrationsLimit() const;
    void setOverIntegrationsLimit(const bool &over_integrations_limit);
    bool is_over_integrations_limit_Set() const;
    bool is_over_integrations_limit_Valid() const;

    bool isOverStorageLimit() const;
    void setOverStorageLimit(const bool &over_storage_limit);
    bool is_over_storage_limit_Set() const;
    bool is_over_storage_limit_Valid() const;

    QString getPayProdCur() const;
    void setPayProdCur(const QString &pay_prod_cur);
    bool is_pay_prod_cur_Set() const;
    bool is_pay_prod_cur_Valid() const;

    QString getPlan() const;
    void setPlan(const QString &plan);
    bool is_plan_Set() const;
    bool is_plan_Valid() const;

    OAIObjs_primary_owner getPrimaryOwner() const;
    void setPrimaryOwner(const OAIObjs_primary_owner &primary_owner);
    bool is_primary_owner_Set() const;
    bool is_primary_owner_Valid() const;

    OAIObjs_team_sso_provider getSsoProvider() const;
    void setSsoProvider(const OAIObjs_team_sso_provider &sso_provider);
    bool is_sso_provider_Set() const;
    bool is_sso_provider_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_archived;
    bool m_archived_isSet;
    bool m_archived_isValid;

    QString m_avatar_base_url;
    bool m_avatar_base_url_isSet;
    bool m_avatar_base_url_isValid;

    qint32 m_created;
    bool m_created_isSet;
    bool m_created_isValid;

    qint32 m_date_create;
    bool m_date_create_isSet;
    bool m_date_create_isValid;

    bool m_deleted;
    bool m_deleted_isSet;
    bool m_deleted_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QList<OAIObjs_team_discoverable_inner> m_discoverable;
    bool m_discoverable_isSet;
    bool m_discoverable_isValid;

    QString m_domain;
    bool m_domain_isSet;
    bool m_domain_isValid;

    QString m_email_domain;
    bool m_email_domain_isSet;
    bool m_email_domain_isValid;

    QString m_enterprise_id;
    bool m_enterprise_id_isSet;
    bool m_enterprise_id_isValid;

    QString m_enterprise_name;
    bool m_enterprise_name_isSet;
    bool m_enterprise_name_isValid;

    OAIObjs_external_org_migrations m_external_org_migrations;
    bool m_external_org_migrations_isSet;
    bool m_external_org_migrations_isValid;

    bool m_has_compliance_export;
    bool m_has_compliance_export_isSet;
    bool m_has_compliance_export_isValid;

    OAIObjs_icon m_icon;
    bool m_icon_isSet;
    bool m_icon_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    bool m_is_assigned;
    bool m_is_assigned_isSet;
    bool m_is_assigned_isValid;

    qint32 m_is_enterprise;
    bool m_is_enterprise_isSet;
    bool m_is_enterprise_isValid;

    bool m_is_over_storage_limit;
    bool m_is_over_storage_limit_isSet;
    bool m_is_over_storage_limit_isValid;

    qint32 m_limit_ts;
    bool m_limit_ts_isSet;
    bool m_limit_ts_isValid;

    QString m_locale;
    bool m_locale_isSet;
    bool m_locale_isValid;

    qint32 m_messages_count;
    bool m_messages_count_isSet;
    bool m_messages_count_isValid;

    qint32 m_msg_edit_window_mins;
    bool m_msg_edit_window_mins_isSet;
    bool m_msg_edit_window_mins_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    bool m_over_integrations_limit;
    bool m_over_integrations_limit_isSet;
    bool m_over_integrations_limit_isValid;

    bool m_over_storage_limit;
    bool m_over_storage_limit_isSet;
    bool m_over_storage_limit_isValid;

    QString m_pay_prod_cur;
    bool m_pay_prod_cur_isSet;
    bool m_pay_prod_cur_isValid;

    QString m_plan;
    bool m_plan_isSet;
    bool m_plan_isValid;

    OAIObjs_primary_owner m_primary_owner;
    bool m_primary_owner_isSet;
    bool m_primary_owner_isValid;

    OAIObjs_team_sso_provider m_sso_provider;
    bool m_sso_provider_isSet;
    bool m_sso_provider_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIObjs_team)

#endif // OAIObjs_team_H
