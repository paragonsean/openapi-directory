/**
 * Slack Web API
 * One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.
 *
 * The version of the OpenAPI document: 1.7.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIObjs_user_inner_anyOf.h
 *
 * user object for non enterprise type
 */

#ifndef OAIObjs_user_inner_anyOf_H
#define OAIObjs_user_inner_anyOf_H

#include <QJsonObject>

#include "OAIObjs_enterprise_user.h"
#include "OAIObjs_team_discoverable_inner.h"
#include "OAIObjs_user_inner_anyOf_team_profile.h"
#include "OAIObjs_user_profile.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIObjs_enterprise_user;
class OAIObjs_user_profile;
class OAIObjs_user_inner_anyOf_team_profile;

class OAIObjs_user_inner_anyOf : public OAIObject {
public:
    OAIObjs_user_inner_anyOf();
    OAIObjs_user_inner_anyOf(QString json);
    ~OAIObjs_user_inner_anyOf() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getColor() const;
    void setColor(const QString &color);
    bool is_color_Set() const;
    bool is_color_Valid() const;

    bool isDeleted() const;
    void setDeleted(const bool &deleted);
    bool is_deleted_Set() const;
    bool is_deleted_Valid() const;

    OAIObjs_enterprise_user getEnterpriseUser() const;
    void setEnterpriseUser(const OAIObjs_enterprise_user &enterprise_user);
    bool is_enterprise_user_Set() const;
    bool is_enterprise_user_Valid() const;

    bool isHas2fa() const;
    void setHas2fa(const bool &has_2fa);
    bool is_has_2fa_Set() const;
    bool is_has_2fa_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    bool isIsAdmin() const;
    void setIsAdmin(const bool &is_admin);
    bool is_is_admin_Set() const;
    bool is_is_admin_Valid() const;

    bool isIsAppUser() const;
    void setIsAppUser(const bool &is_app_user);
    bool is_is_app_user_Set() const;
    bool is_is_app_user_Valid() const;

    bool isIsBot() const;
    void setIsBot(const bool &is_bot);
    bool is_is_bot_Set() const;
    bool is_is_bot_Valid() const;

    bool isIsExternal() const;
    void setIsExternal(const bool &is_external);
    bool is_is_external_Set() const;
    bool is_is_external_Valid() const;

    bool isIsForgotten() const;
    void setIsForgotten(const bool &is_forgotten);
    bool is_is_forgotten_Set() const;
    bool is_is_forgotten_Valid() const;

    bool isIsInvitedUser() const;
    void setIsInvitedUser(const bool &is_invited_user);
    bool is_is_invited_user_Set() const;
    bool is_is_invited_user_Valid() const;

    bool isIsOwner() const;
    void setIsOwner(const bool &is_owner);
    bool is_is_owner_Set() const;
    bool is_is_owner_Valid() const;

    bool isIsPrimaryOwner() const;
    void setIsPrimaryOwner(const bool &is_primary_owner);
    bool is_is_primary_owner_Set() const;
    bool is_is_primary_owner_Valid() const;

    bool isIsRestricted() const;
    void setIsRestricted(const bool &is_restricted);
    bool is_is_restricted_Set() const;
    bool is_is_restricted_Valid() const;

    bool isIsStranger() const;
    void setIsStranger(const bool &is_stranger);
    bool is_is_stranger_Set() const;
    bool is_is_stranger_Valid() const;

    bool isIsUltraRestricted() const;
    void setIsUltraRestricted(const bool &is_ultra_restricted);
    bool is_is_ultra_restricted_Set() const;
    bool is_is_ultra_restricted_Valid() const;

    QString getLocale() const;
    void setLocale(const QString &locale);
    bool is_locale_Set() const;
    bool is_locale_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getPresence() const;
    void setPresence(const QString &presence);
    bool is_presence_Set() const;
    bool is_presence_Valid() const;

    OAIObjs_user_profile getProfile() const;
    void setProfile(const OAIObjs_user_profile &profile);
    bool is_profile_Set() const;
    bool is_profile_Valid() const;

    QString getRealName() const;
    void setRealName(const QString &real_name);
    bool is_real_name_Set() const;
    bool is_real_name_Valid() const;

    QString getTeam() const;
    void setTeam(const QString &team);
    bool is_team_Set() const;
    bool is_team_Valid() const;

    QString getTeamId() const;
    void setTeamId(const QString &team_id);
    bool is_team_id_Set() const;
    bool is_team_id_Valid() const;

    OAIObjs_user_inner_anyOf_team_profile getTeamProfile() const;
    void setTeamProfile(const OAIObjs_user_inner_anyOf_team_profile &team_profile);
    bool is_team_profile_Set() const;
    bool is_team_profile_Valid() const;

    QString getTwoFactorType() const;
    void setTwoFactorType(const QString &two_factor_type);
    bool is_two_factor_type_Set() const;
    bool is_two_factor_type_Valid() const;

    QList<OAIObjs_team_discoverable_inner> getTz() const;
    void setTz(const QList<OAIObjs_team_discoverable_inner> &tz);
    bool is_tz_Set() const;
    bool is_tz_Valid() const;

    QString getTzLabel() const;
    void setTzLabel(const QString &tz_label);
    bool is_tz_label_Set() const;
    bool is_tz_label_Valid() const;

    double getTzOffset() const;
    void setTzOffset(const double &tz_offset);
    bool is_tz_offset_Set() const;
    bool is_tz_offset_Valid() const;

    double getUpdated() const;
    void setUpdated(const double &updated);
    bool is_updated_Set() const;
    bool is_updated_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_color;
    bool m_color_isSet;
    bool m_color_isValid;

    bool m_deleted;
    bool m_deleted_isSet;
    bool m_deleted_isValid;

    OAIObjs_enterprise_user m_enterprise_user;
    bool m_enterprise_user_isSet;
    bool m_enterprise_user_isValid;

    bool m_has_2fa;
    bool m_has_2fa_isSet;
    bool m_has_2fa_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    bool m_is_admin;
    bool m_is_admin_isSet;
    bool m_is_admin_isValid;

    bool m_is_app_user;
    bool m_is_app_user_isSet;
    bool m_is_app_user_isValid;

    bool m_is_bot;
    bool m_is_bot_isSet;
    bool m_is_bot_isValid;

    bool m_is_external;
    bool m_is_external_isSet;
    bool m_is_external_isValid;

    bool m_is_forgotten;
    bool m_is_forgotten_isSet;
    bool m_is_forgotten_isValid;

    bool m_is_invited_user;
    bool m_is_invited_user_isSet;
    bool m_is_invited_user_isValid;

    bool m_is_owner;
    bool m_is_owner_isSet;
    bool m_is_owner_isValid;

    bool m_is_primary_owner;
    bool m_is_primary_owner_isSet;
    bool m_is_primary_owner_isValid;

    bool m_is_restricted;
    bool m_is_restricted_isSet;
    bool m_is_restricted_isValid;

    bool m_is_stranger;
    bool m_is_stranger_isSet;
    bool m_is_stranger_isValid;

    bool m_is_ultra_restricted;
    bool m_is_ultra_restricted_isSet;
    bool m_is_ultra_restricted_isValid;

    QString m_locale;
    bool m_locale_isSet;
    bool m_locale_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_presence;
    bool m_presence_isSet;
    bool m_presence_isValid;

    OAIObjs_user_profile m_profile;
    bool m_profile_isSet;
    bool m_profile_isValid;

    QString m_real_name;
    bool m_real_name_isSet;
    bool m_real_name_isValid;

    QString m_team;
    bool m_team_isSet;
    bool m_team_isValid;

    QString m_team_id;
    bool m_team_id_isSet;
    bool m_team_id_isValid;

    OAIObjs_user_inner_anyOf_team_profile m_team_profile;
    bool m_team_profile_isSet;
    bool m_team_profile_isValid;

    QString m_two_factor_type;
    bool m_two_factor_type_isSet;
    bool m_two_factor_type_isValid;

    QList<OAIObjs_team_discoverable_inner> m_tz;
    bool m_tz_isSet;
    bool m_tz_isValid;

    QString m_tz_label;
    bool m_tz_label_isSet;
    bool m_tz_label_isValid;

    double m_tz_offset;
    bool m_tz_offset_isSet;
    bool m_tz_offset_isValid;

    double m_updated;
    bool m_updated_isSet;
    bool m_updated_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIObjs_user_inner_anyOf)

#endif // OAIObjs_user_inner_anyOf_H
