/**
 * Slack Web API
 * One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.
 *
 * The version of the OpenAPI document: 1.7.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUsers_identity_schema_inner_anyOf_3_team.h
 *
 * 
 */

#ifndef OAIUsers_identity_schema_inner_anyOf_3_team_H
#define OAIUsers_identity_schema_inner_anyOf_3_team_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIUsers_identity_schema_inner_anyOf_3_team : public OAIObject {
public:
    OAIUsers_identity_schema_inner_anyOf_3_team();
    OAIUsers_identity_schema_inner_anyOf_3_team(QString json);
    ~OAIUsers_identity_schema_inner_anyOf_3_team() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDomain() const;
    void setDomain(const QString &domain);
    bool is_domain_Set() const;
    bool is_domain_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getImage102() const;
    void setImage102(const QString &image_102);
    bool is_image_102_Set() const;
    bool is_image_102_Valid() const;

    QString getImage132() const;
    void setImage132(const QString &image_132);
    bool is_image_132_Set() const;
    bool is_image_132_Valid() const;

    QString getImage230() const;
    void setImage230(const QString &image_230);
    bool is_image_230_Set() const;
    bool is_image_230_Valid() const;

    QString getImage34() const;
    void setImage34(const QString &image_34);
    bool is_image_34_Set() const;
    bool is_image_34_Valid() const;

    QString getImage44() const;
    void setImage44(const QString &image_44);
    bool is_image_44_Set() const;
    bool is_image_44_Valid() const;

    QString getImage68() const;
    void setImage68(const QString &image_68);
    bool is_image_68_Set() const;
    bool is_image_68_Valid() const;

    QString getImage88() const;
    void setImage88(const QString &image_88);
    bool is_image_88_Set() const;
    bool is_image_88_Valid() const;

    bool isImageDefault() const;
    void setImageDefault(const bool &image_default);
    bool is_image_default_Set() const;
    bool is_image_default_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_domain;
    bool m_domain_isSet;
    bool m_domain_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_image_102;
    bool m_image_102_isSet;
    bool m_image_102_isValid;

    QString m_image_132;
    bool m_image_132_isSet;
    bool m_image_132_isValid;

    QString m_image_230;
    bool m_image_230_isSet;
    bool m_image_230_isValid;

    QString m_image_34;
    bool m_image_34_isSet;
    bool m_image_34_isValid;

    QString m_image_44;
    bool m_image_44_isSet;
    bool m_image_44_isValid;

    QString m_image_68;
    bool m_image_68_isSet;
    bool m_image_68_isValid;

    QString m_image_88;
    bool m_image_88_isSet;
    bool m_image_88_isValid;

    bool m_image_default;
    bool m_image_default_isSet;
    bool m_image_default_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUsers_identity_schema_inner_anyOf_3_team)

#endif // OAIUsers_identity_schema_inner_anyOf_3_team_H
