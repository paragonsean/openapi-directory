/**
 * Slack Web API
 * One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.
 *
 * The version of the OpenAPI document: 1.7.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIApps_permissions_info_schema_info.h
 *
 * 
 */

#ifndef OAIApps_permissions_info_schema_info_H
#define OAIApps_permissions_info_schema_info_H

#include <QJsonObject>

#include "OAIApps_permissions_info_schema_info_app_home.h"
#include "OAIApps_permissions_info_schema_info_team.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIApps_permissions_info_schema_info_app_home;
class OAIApps_permissions_info_schema_info_team;

class OAIApps_permissions_info_schema_info : public OAIObject {
public:
    OAIApps_permissions_info_schema_info();
    OAIApps_permissions_info_schema_info(QString json);
    ~OAIApps_permissions_info_schema_info() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIApps_permissions_info_schema_info_app_home getAppHome() const;
    void setAppHome(const OAIApps_permissions_info_schema_info_app_home &app_home);
    bool is_app_home_Set() const;
    bool is_app_home_Valid() const;

    OAIApps_permissions_info_schema_info_app_home getChannel() const;
    void setChannel(const OAIApps_permissions_info_schema_info_app_home &channel);
    bool is_channel_Set() const;
    bool is_channel_Valid() const;

    OAIApps_permissions_info_schema_info_app_home getGroup() const;
    void setGroup(const OAIApps_permissions_info_schema_info_app_home &group);
    bool is_group_Set() const;
    bool is_group_Valid() const;

    OAIApps_permissions_info_schema_info_app_home getIm() const;
    void setIm(const OAIApps_permissions_info_schema_info_app_home &im);
    bool is_im_Set() const;
    bool is_im_Valid() const;

    OAIApps_permissions_info_schema_info_app_home getMpim() const;
    void setMpim(const OAIApps_permissions_info_schema_info_app_home &mpim);
    bool is_mpim_Set() const;
    bool is_mpim_Valid() const;

    OAIApps_permissions_info_schema_info_team getTeam() const;
    void setTeam(const OAIApps_permissions_info_schema_info_team &team);
    bool is_team_Set() const;
    bool is_team_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIApps_permissions_info_schema_info_app_home m_app_home;
    bool m_app_home_isSet;
    bool m_app_home_isValid;

    OAIApps_permissions_info_schema_info_app_home m_channel;
    bool m_channel_isSet;
    bool m_channel_isValid;

    OAIApps_permissions_info_schema_info_app_home m_group;
    bool m_group_isSet;
    bool m_group_isValid;

    OAIApps_permissions_info_schema_info_app_home m_im;
    bool m_im_isSet;
    bool m_im_isValid;

    OAIApps_permissions_info_schema_info_app_home m_mpim;
    bool m_mpim_isSet;
    bool m_mpim_isValid;

    OAIApps_permissions_info_schema_info_team m_team;
    bool m_team_isSet;
    bool m_team_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIApps_permissions_info_schema_info)

#endif // OAIApps_permissions_info_schema_info_H
