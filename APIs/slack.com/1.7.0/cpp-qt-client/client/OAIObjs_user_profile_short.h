/**
 * Slack Web API
 * One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.
 *
 * The version of the OpenAPI document: 1.7.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIObjs_user_profile_short.h
 *
 * 
 */

#ifndef OAIObjs_user_profile_short_H
#define OAIObjs_user_profile_short_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIObjs_user_profile_short : public OAIObject {
public:
    OAIObjs_user_profile_short();
    OAIObjs_user_profile_short(QString json);
    ~OAIObjs_user_profile_short() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAvatarHash() const;
    void setAvatarHash(const QString &avatar_hash);
    bool is_avatar_hash_Set() const;
    bool is_avatar_hash_Valid() const;

    QString getDisplayName() const;
    void setDisplayName(const QString &display_name);
    bool is_display_name_Set() const;
    bool is_display_name_Valid() const;

    QString getDisplayNameNormalized() const;
    void setDisplayNameNormalized(const QString &display_name_normalized);
    bool is_display_name_normalized_Set() const;
    bool is_display_name_normalized_Valid() const;

    QString getFirstName() const;
    void setFirstName(const QString &first_name);
    bool is_first_name_Set() const;
    bool is_first_name_Valid() const;

    QString getImage72() const;
    void setImage72(const QString &image_72);
    bool is_image_72_Set() const;
    bool is_image_72_Valid() const;

    bool isIsRestricted() const;
    void setIsRestricted(const bool &is_restricted);
    bool is_is_restricted_Set() const;
    bool is_is_restricted_Valid() const;

    bool isIsUltraRestricted() const;
    void setIsUltraRestricted(const bool &is_ultra_restricted);
    bool is_is_ultra_restricted_Set() const;
    bool is_is_ultra_restricted_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getRealName() const;
    void setRealName(const QString &real_name);
    bool is_real_name_Set() const;
    bool is_real_name_Valid() const;

    QString getRealNameNormalized() const;
    void setRealNameNormalized(const QString &real_name_normalized);
    bool is_real_name_normalized_Set() const;
    bool is_real_name_normalized_Valid() const;

    QString getTeam() const;
    void setTeam(const QString &team);
    bool is_team_Set() const;
    bool is_team_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_avatar_hash;
    bool m_avatar_hash_isSet;
    bool m_avatar_hash_isValid;

    QString m_display_name;
    bool m_display_name_isSet;
    bool m_display_name_isValid;

    QString m_display_name_normalized;
    bool m_display_name_normalized_isSet;
    bool m_display_name_normalized_isValid;

    QString m_first_name;
    bool m_first_name_isSet;
    bool m_first_name_isValid;

    QString m_image_72;
    bool m_image_72_isSet;
    bool m_image_72_isValid;

    bool m_is_restricted;
    bool m_is_restricted_isSet;
    bool m_is_restricted_isValid;

    bool m_is_ultra_restricted;
    bool m_is_ultra_restricted_isSet;
    bool m_is_ultra_restricted_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_real_name;
    bool m_real_name_isSet;
    bool m_real_name_isValid;

    QString m_real_name_normalized;
    bool m_real_name_normalized_isSet;
    bool m_real_name_normalized_isValid;

    QString m_team;
    bool m_team_isSet;
    bool m_team_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIObjs_user_profile_short)

#endif // OAIObjs_user_profile_short_H
