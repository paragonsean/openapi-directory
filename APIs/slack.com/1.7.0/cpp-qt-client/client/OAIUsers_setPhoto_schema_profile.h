/**
 * Slack Web API
 * One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.
 *
 * The version of the OpenAPI document: 1.7.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUsers_setPhoto_schema_profile.h
 *
 * 
 */

#ifndef OAIUsers_setPhoto_schema_profile_H
#define OAIUsers_setPhoto_schema_profile_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIUsers_setPhoto_schema_profile : public OAIObject {
public:
    OAIUsers_setPhoto_schema_profile();
    OAIUsers_setPhoto_schema_profile(QString json);
    ~OAIUsers_setPhoto_schema_profile() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAvatarHash() const;
    void setAvatarHash(const QString &avatar_hash);
    bool is_avatar_hash_Set() const;
    bool is_avatar_hash_Valid() const;

    QString getImage1024() const;
    void setImage1024(const QString &image_1024);
    bool is_image_1024_Set() const;
    bool is_image_1024_Valid() const;

    QString getImage192() const;
    void setImage192(const QString &image_192);
    bool is_image_192_Set() const;
    bool is_image_192_Valid() const;

    QString getImage24() const;
    void setImage24(const QString &image_24);
    bool is_image_24_Set() const;
    bool is_image_24_Valid() const;

    QString getImage32() const;
    void setImage32(const QString &image_32);
    bool is_image_32_Set() const;
    bool is_image_32_Valid() const;

    QString getImage48() const;
    void setImage48(const QString &image_48);
    bool is_image_48_Set() const;
    bool is_image_48_Valid() const;

    QString getImage512() const;
    void setImage512(const QString &image_512);
    bool is_image_512_Set() const;
    bool is_image_512_Valid() const;

    QString getImage72() const;
    void setImage72(const QString &image_72);
    bool is_image_72_Set() const;
    bool is_image_72_Valid() const;

    QString getImageOriginal() const;
    void setImageOriginal(const QString &image_original);
    bool is_image_original_Set() const;
    bool is_image_original_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_avatar_hash;
    bool m_avatar_hash_isSet;
    bool m_avatar_hash_isValid;

    QString m_image_1024;
    bool m_image_1024_isSet;
    bool m_image_1024_isValid;

    QString m_image_192;
    bool m_image_192_isSet;
    bool m_image_192_isValid;

    QString m_image_24;
    bool m_image_24_isSet;
    bool m_image_24_isValid;

    QString m_image_32;
    bool m_image_32_isSet;
    bool m_image_32_isValid;

    QString m_image_48;
    bool m_image_48_isSet;
    bool m_image_48_isValid;

    QString m_image_512;
    bool m_image_512_isSet;
    bool m_image_512_isValid;

    QString m_image_72;
    bool m_image_72_isSet;
    bool m_image_72_isValid;

    QString m_image_original;
    bool m_image_original_isSet;
    bool m_image_original_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUsers_setPhoto_schema_profile)

#endif // OAIUsers_setPhoto_schema_profile_H
