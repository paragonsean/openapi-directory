/**
 * Slack Web API
 * One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.
 *
 * The version of the OpenAPI document: 1.7.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRtm_connect_schema.h
 *
 * Schema for successful response from rtm.connect method
 */

#ifndef OAIRtm_connect_schema_H
#define OAIRtm_connect_schema_H

#include <QJsonObject>

#include "OAIRtm_connect_schema_self.h"
#include "OAIRtm_connect_schema_team.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIRtm_connect_schema_self;
class OAIRtm_connect_schema_team;

class OAIRtm_connect_schema : public OAIObject {
public:
    OAIRtm_connect_schema();
    OAIRtm_connect_schema(QString json);
    ~OAIRtm_connect_schema() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isOk() const;
    void setOk(const bool &ok);
    bool is_ok_Set() const;
    bool is_ok_Valid() const;

    OAIRtm_connect_schema_self getSelf() const;
    void setSelf(const OAIRtm_connect_schema_self &self);
    bool is_self_Set() const;
    bool is_self_Valid() const;

    OAIRtm_connect_schema_team getTeam() const;
    void setTeam(const OAIRtm_connect_schema_team &team);
    bool is_team_Set() const;
    bool is_team_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_ok;
    bool m_ok_isSet;
    bool m_ok_isValid;

    OAIRtm_connect_schema_self m_self;
    bool m_self_isSet;
    bool m_self_isValid;

    OAIRtm_connect_schema_team m_team;
    bool m_team_isSet;
    bool m_team_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRtm_connect_schema)

#endif // OAIRtm_connect_schema_H
