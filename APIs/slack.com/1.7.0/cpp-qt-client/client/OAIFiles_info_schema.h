/**
 * Slack Web API
 * One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.
 *
 * The version of the OpenAPI document: 1.7.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFiles_info_schema.h
 *
 * Schema for successful response from files.info method
 */

#ifndef OAIFiles_info_schema_H
#define OAIFiles_info_schema_H

#include <QJsonObject>

#include "OAIObjs_file.h"
#include "OAIObjs_paging.h"
#include "OAIObjs_response_metadata_inner.h"
#include <QJsonValue>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIObjs_file;
class OAIObjs_paging;
class OAIObjs_response_metadata_inner;

class OAIFiles_info_schema : public OAIObject {
public:
    OAIFiles_info_schema();
    OAIFiles_info_schema(QString json);
    ~OAIFiles_info_schema() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QJsonValue> getComments() const;
    void setComments(const QList<QJsonValue> &comments);
    bool is_comments_Set() const;
    bool is_comments_Valid() const;

    QJsonValue getContentHtml() const;
    void setContentHtml(const QJsonValue &content_html);
    bool is_content_html_Set() const;
    bool is_content_html_Valid() const;

    QString getEditor() const;
    void setEditor(const QString &editor);
    bool is_editor_Set() const;
    bool is_editor_Valid() const;

    OAIObjs_file getFile() const;
    void setFile(const OAIObjs_file &file);
    bool is_file_Set() const;
    bool is_file_Valid() const;

    bool isOk() const;
    void setOk(const bool &ok);
    bool is_ok_Set() const;
    bool is_ok_Valid() const;

    OAIObjs_paging getPaging() const;
    void setPaging(const OAIObjs_paging &paging);
    bool is_paging_Set() const;
    bool is_paging_Valid() const;

    QList<OAIObjs_response_metadata_inner> getResponseMetadata() const;
    void setResponseMetadata(const QList<OAIObjs_response_metadata_inner> &response_metadata);
    bool is_response_metadata_Set() const;
    bool is_response_metadata_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QJsonValue> m_comments;
    bool m_comments_isSet;
    bool m_comments_isValid;

    QJsonValue m_content_html;
    bool m_content_html_isSet;
    bool m_content_html_isValid;

    QString m_editor;
    bool m_editor_isSet;
    bool m_editor_isValid;

    OAIObjs_file m_file;
    bool m_file_isSet;
    bool m_file_isValid;

    bool m_ok;
    bool m_ok_isSet;
    bool m_ok_isValid;

    OAIObjs_paging m_paging;
    bool m_paging_isSet;
    bool m_paging_isValid;

    QList<OAIObjs_response_metadata_inner> m_response_metadata;
    bool m_response_metadata_isSet;
    bool m_response_metadata_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFiles_info_schema)

#endif // OAIFiles_info_schema_H
