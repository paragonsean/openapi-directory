/**
 * Slack Web API
 * One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.
 *
 * The version of the OpenAPI document: 1.7.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIApps_permissions_resources_list_success_schema.h
 *
 * Schema for successful response apps.permissions.resources.list method
 */

#ifndef OAIApps_permissions_resources_list_success_schema_H
#define OAIApps_permissions_resources_list_success_schema_H

#include <QJsonObject>

#include "OAIApps_permissions_resources_list_success_schema_resources_inner.h"
#include "OAIApps_permissions_resources_list_success_schema_response_metadata.h"
#include <QJsonValue>
#include <QList>
#include <QMap>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIApps_permissions_resources_list_success_schema_resources_inner;
class OAIApps_permissions_resources_list_success_schema_response_metadata;

class OAIApps_permissions_resources_list_success_schema : public OAIObject {
public:
    OAIApps_permissions_resources_list_success_schema();
    OAIApps_permissions_resources_list_success_schema(QString json);
    ~OAIApps_permissions_resources_list_success_schema() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isOk() const;
    void setOk(const bool &ok);
    bool is_ok_Set() const;
    bool is_ok_Valid() const;

    QList<OAIApps_permissions_resources_list_success_schema_resources_inner> getResources() const;
    void setResources(const QList<OAIApps_permissions_resources_list_success_schema_resources_inner> &resources);
    bool is_resources_Set() const;
    bool is_resources_Valid() const;

    OAIApps_permissions_resources_list_success_schema_response_metadata getResponseMetadata() const;
    void setResponseMetadata(const OAIApps_permissions_resources_list_success_schema_response_metadata &response_metadata);
    bool is_response_metadata_Set() const;
    bool is_response_metadata_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_ok;
    bool m_ok_isSet;
    bool m_ok_isValid;

    QList<OAIApps_permissions_resources_list_success_schema_resources_inner> m_resources;
    bool m_resources_isSet;
    bool m_resources_isValid;

    OAIApps_permissions_resources_list_success_schema_response_metadata m_response_metadata;
    bool m_response_metadata_isSet;
    bool m_response_metadata_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIApps_permissions_resources_list_success_schema)

#endif // OAIApps_permissions_resources_list_success_schema_H
