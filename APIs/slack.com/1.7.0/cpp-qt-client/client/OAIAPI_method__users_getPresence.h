/**
 * Slack Web API
 * One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.
 *
 * The version of the OpenAPI document: 1.7.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAPI_method__users_getPresence.h
 *
 * Generated from users.getPresence with shasum e7251aec575d8863f9e0eb38663ae9dc26655f65
 */

#ifndef OAIAPI_method__users_getPresence_H
#define OAIAPI_method__users_getPresence_H

#include <QJsonObject>

#include <QJsonValue>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAPI_method__users_getPresence : public OAIObject {
public:
    OAIAPI_method__users_getPresence();
    OAIAPI_method__users_getPresence(QString json);
    ~OAIAPI_method__users_getPresence() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isAutoAway() const;
    void setAutoAway(const bool &auto_away);
    bool is_auto_away_Set() const;
    bool is_auto_away_Valid() const;

    qint32 getConnectionCount() const;
    void setConnectionCount(const qint32 &connection_count);
    bool is_connection_count_Set() const;
    bool is_connection_count_Valid() const;

    qint32 getLastActivity() const;
    void setLastActivity(const qint32 &last_activity);
    bool is_last_activity_Set() const;
    bool is_last_activity_Valid() const;

    bool isManualAway() const;
    void setManualAway(const bool &manual_away);
    bool is_manual_away_Set() const;
    bool is_manual_away_Valid() const;

    bool isOk() const;
    void setOk(const bool &ok);
    bool is_ok_Set() const;
    bool is_ok_Valid() const;

    bool isOnline() const;
    void setOnline(const bool &online);
    bool is_online_Set() const;
    bool is_online_Valid() const;

    QString getPresence() const;
    void setPresence(const QString &presence);
    bool is_presence_Set() const;
    bool is_presence_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_auto_away;
    bool m_auto_away_isSet;
    bool m_auto_away_isValid;

    qint32 m_connection_count;
    bool m_connection_count_isSet;
    bool m_connection_count_isValid;

    qint32 m_last_activity;
    bool m_last_activity_isSet;
    bool m_last_activity_isValid;

    bool m_manual_away;
    bool m_manual_away_isSet;
    bool m_manual_away_isValid;

    bool m_ok;
    bool m_ok_isSet;
    bool m_ok_isValid;

    bool m_online;
    bool m_online_isSet;
    bool m_online_isValid;

    QString m_presence;
    bool m_presence_isSet;
    bool m_presence_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAPI_method__users_getPresence)

#endif // OAIAPI_method__users_getPresence_H
