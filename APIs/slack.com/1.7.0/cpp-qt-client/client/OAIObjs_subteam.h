/**
 * Slack Web API
 * One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.
 *
 * The version of the OpenAPI document: 1.7.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIObjs_subteam.h
 *
 * 
 */

#ifndef OAIObjs_subteam_H
#define OAIObjs_subteam_H

#include <QJsonObject>

#include "OAIObjs_subteam_auto_type_inner.h"
#include "OAIObjs_subteam_deleted_by_inner.h"
#include "OAIObjs_subteam_prefs.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIObjs_subteam_prefs;

class OAIObjs_subteam : public OAIObject {
public:
    OAIObjs_subteam();
    OAIObjs_subteam(QString json);
    ~OAIObjs_subteam() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isAutoProvision() const;
    void setAutoProvision(const bool &auto_provision);
    bool is_auto_provision_Set() const;
    bool is_auto_provision_Valid() const;

    QList<OAIObjs_subteam_auto_type_inner> getAutoType() const;
    void setAutoType(const QList<OAIObjs_subteam_auto_type_inner> &auto_type);
    bool is_auto_type_Set() const;
    bool is_auto_type_Valid() const;

    qint32 getChannelCount() const;
    void setChannelCount(const qint32 &channel_count);
    bool is_channel_count_Set() const;
    bool is_channel_count_Valid() const;

    QString getCreatedBy() const;
    void setCreatedBy(const QString &created_by);
    bool is_created_by_Set() const;
    bool is_created_by_Valid() const;

    qint32 getDateCreate() const;
    void setDateCreate(const qint32 &date_create);
    bool is_date_create_Set() const;
    bool is_date_create_Valid() const;

    qint32 getDateDelete() const;
    void setDateDelete(const qint32 &date_delete);
    bool is_date_delete_Set() const;
    bool is_date_delete_Valid() const;

    qint32 getDateUpdate() const;
    void setDateUpdate(const qint32 &date_update);
    bool is_date_update_Set() const;
    bool is_date_update_Valid() const;

    QList<OAIObjs_subteam_deleted_by_inner> getDeletedBy() const;
    void setDeletedBy(const QList<OAIObjs_subteam_deleted_by_inner> &deleted_by);
    bool is_deleted_by_Set() const;
    bool is_deleted_by_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getEnterpriseSubteamId() const;
    void setEnterpriseSubteamId(const QString &enterprise_subteam_id);
    bool is_enterprise_subteam_id_Set() const;
    bool is_enterprise_subteam_id_Valid() const;

    QString getHandle() const;
    void setHandle(const QString &handle);
    bool is_handle_Set() const;
    bool is_handle_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    bool isIsExternal() const;
    void setIsExternal(const bool &is_external);
    bool is_is_external_Set() const;
    bool is_is_external_Valid() const;

    bool isIsSubteam() const;
    void setIsSubteam(const bool &is_subteam);
    bool is_is_subteam_Set() const;
    bool is_is_subteam_Valid() const;

    bool isIsUsergroup() const;
    void setIsUsergroup(const bool &is_usergroup);
    bool is_is_usergroup_Set() const;
    bool is_is_usergroup_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAIObjs_subteam_prefs getPrefs() const;
    void setPrefs(const OAIObjs_subteam_prefs &prefs);
    bool is_prefs_Set() const;
    bool is_prefs_Valid() const;

    QString getTeamId() const;
    void setTeamId(const QString &team_id);
    bool is_team_id_Set() const;
    bool is_team_id_Valid() const;

    QString getUpdatedBy() const;
    void setUpdatedBy(const QString &updated_by);
    bool is_updated_by_Set() const;
    bool is_updated_by_Valid() const;

    qint32 getUserCount() const;
    void setUserCount(const qint32 &user_count);
    bool is_user_count_Set() const;
    bool is_user_count_Valid() const;

    QList<QString> getUsers() const;
    void setUsers(const QList<QString> &users);
    bool is_users_Set() const;
    bool is_users_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_auto_provision;
    bool m_auto_provision_isSet;
    bool m_auto_provision_isValid;

    QList<OAIObjs_subteam_auto_type_inner> m_auto_type;
    bool m_auto_type_isSet;
    bool m_auto_type_isValid;

    qint32 m_channel_count;
    bool m_channel_count_isSet;
    bool m_channel_count_isValid;

    QString m_created_by;
    bool m_created_by_isSet;
    bool m_created_by_isValid;

    qint32 m_date_create;
    bool m_date_create_isSet;
    bool m_date_create_isValid;

    qint32 m_date_delete;
    bool m_date_delete_isSet;
    bool m_date_delete_isValid;

    qint32 m_date_update;
    bool m_date_update_isSet;
    bool m_date_update_isValid;

    QList<OAIObjs_subteam_deleted_by_inner> m_deleted_by;
    bool m_deleted_by_isSet;
    bool m_deleted_by_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_enterprise_subteam_id;
    bool m_enterprise_subteam_id_isSet;
    bool m_enterprise_subteam_id_isValid;

    QString m_handle;
    bool m_handle_isSet;
    bool m_handle_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    bool m_is_external;
    bool m_is_external_isSet;
    bool m_is_external_isValid;

    bool m_is_subteam;
    bool m_is_subteam_isSet;
    bool m_is_subteam_isValid;

    bool m_is_usergroup;
    bool m_is_usergroup_isSet;
    bool m_is_usergroup_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAIObjs_subteam_prefs m_prefs;
    bool m_prefs_isSet;
    bool m_prefs_isValid;

    QString m_team_id;
    bool m_team_id_isSet;
    bool m_team_id_isValid;

    QString m_updated_by;
    bool m_updated_by_isSet;
    bool m_updated_by_isValid;

    qint32 m_user_count;
    bool m_user_count_isSet;
    bool m_user_count_isValid;

    QList<QString> m_users;
    bool m_users_isSet;
    bool m_users_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIObjs_subteam)

#endif // OAIObjs_subteam_H
