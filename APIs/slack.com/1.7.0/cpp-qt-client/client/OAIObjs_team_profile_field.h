/**
 * Slack Web API
 * One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.
 *
 * The version of the OpenAPI document: 1.7.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIObjs_team_profile_field.h
 *
 * 
 */

#ifndef OAIObjs_team_profile_field_H
#define OAIObjs_team_profile_field_H

#include <QJsonObject>

#include "OAIObjs_team_profile_field_options_inner.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIObjs_team_profile_field_options_inner;

class OAIObjs_team_profile_field : public OAIObject {
public:
    OAIObjs_team_profile_field();
    OAIObjs_team_profile_field(QString json);
    ~OAIObjs_team_profile_field() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getFieldName() const;
    void setFieldName(const QString &field_name);
    bool is_field_name_Set() const;
    bool is_field_name_Valid() const;

    QString getHint() const;
    void setHint(const QString &hint);
    bool is_hint_Set() const;
    bool is_hint_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    bool isIsHidden() const;
    void setIsHidden(const bool &is_hidden);
    bool is_is_hidden_Set() const;
    bool is_is_hidden_Valid() const;

    QString getLabel() const;
    void setLabel(const QString &label);
    bool is_label_Set() const;
    bool is_label_Valid() const;

    QList<OAIObjs_team_profile_field_options_inner> getOptions() const;
    void setOptions(const QList<OAIObjs_team_profile_field_options_inner> &options);
    bool is_options_Set() const;
    bool is_options_Valid() const;

    double getOrdering() const;
    void setOrdering(const double &ordering);
    bool is_ordering_Set() const;
    bool is_ordering_Valid() const;

    QList<QString> getPossibleValues() const;
    void setPossibleValues(const QList<QString> &possible_values);
    bool is_possible_values_Set() const;
    bool is_possible_values_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_field_name;
    bool m_field_name_isSet;
    bool m_field_name_isValid;

    QString m_hint;
    bool m_hint_isSet;
    bool m_hint_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    bool m_is_hidden;
    bool m_is_hidden_isSet;
    bool m_is_hidden_isValid;

    QString m_label;
    bool m_label_isSet;
    bool m_label_isValid;

    QList<OAIObjs_team_profile_field_options_inner> m_options;
    bool m_options_isSet;
    bool m_options_isValid;

    double m_ordering;
    bool m_ordering_isSet;
    bool m_ordering_isValid;

    QList<QString> m_possible_values;
    bool m_possible_values_isSet;
    bool m_possible_values_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIObjs_team_profile_field)

#endif // OAIObjs_team_profile_field_H
