/**
 * Slack Web API
 * One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.
 *
 * The version of the OpenAPI document: 1.7.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIObjs_user_profile_short.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIObjs_user_profile_short::OAIObjs_user_profile_short(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIObjs_user_profile_short::OAIObjs_user_profile_short() {
    this->initializeModel();
}

OAIObjs_user_profile_short::~OAIObjs_user_profile_short() {}

void OAIObjs_user_profile_short::initializeModel() {

    m_avatar_hash_isSet = false;
    m_avatar_hash_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_display_name_normalized_isSet = false;
    m_display_name_normalized_isValid = false;

    m_first_name_isSet = false;
    m_first_name_isValid = false;

    m_image_72_isSet = false;
    m_image_72_isValid = false;

    m_is_restricted_isSet = false;
    m_is_restricted_isValid = false;

    m_is_ultra_restricted_isSet = false;
    m_is_ultra_restricted_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_real_name_isSet = false;
    m_real_name_isValid = false;

    m_real_name_normalized_isSet = false;
    m_real_name_normalized_isValid = false;

    m_team_isSet = false;
    m_team_isValid = false;
}

void OAIObjs_user_profile_short::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIObjs_user_profile_short::fromJsonObject(QJsonObject json) {

    m_avatar_hash_isValid = ::OpenAPI::fromJsonValue(m_avatar_hash, json[QString("avatar_hash")]);
    m_avatar_hash_isSet = !json[QString("avatar_hash")].isNull() && m_avatar_hash_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("display_name")]);
    m_display_name_isSet = !json[QString("display_name")].isNull() && m_display_name_isValid;

    m_display_name_normalized_isValid = ::OpenAPI::fromJsonValue(m_display_name_normalized, json[QString("display_name_normalized")]);
    m_display_name_normalized_isSet = !json[QString("display_name_normalized")].isNull() && m_display_name_normalized_isValid;

    m_first_name_isValid = ::OpenAPI::fromJsonValue(m_first_name, json[QString("first_name")]);
    m_first_name_isSet = !json[QString("first_name")].isNull() && m_first_name_isValid;

    m_image_72_isValid = ::OpenAPI::fromJsonValue(m_image_72, json[QString("image_72")]);
    m_image_72_isSet = !json[QString("image_72")].isNull() && m_image_72_isValid;

    m_is_restricted_isValid = ::OpenAPI::fromJsonValue(m_is_restricted, json[QString("is_restricted")]);
    m_is_restricted_isSet = !json[QString("is_restricted")].isNull() && m_is_restricted_isValid;

    m_is_ultra_restricted_isValid = ::OpenAPI::fromJsonValue(m_is_ultra_restricted, json[QString("is_ultra_restricted")]);
    m_is_ultra_restricted_isSet = !json[QString("is_ultra_restricted")].isNull() && m_is_ultra_restricted_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_real_name_isValid = ::OpenAPI::fromJsonValue(m_real_name, json[QString("real_name")]);
    m_real_name_isSet = !json[QString("real_name")].isNull() && m_real_name_isValid;

    m_real_name_normalized_isValid = ::OpenAPI::fromJsonValue(m_real_name_normalized, json[QString("real_name_normalized")]);
    m_real_name_normalized_isSet = !json[QString("real_name_normalized")].isNull() && m_real_name_normalized_isValid;

    m_team_isValid = ::OpenAPI::fromJsonValue(m_team, json[QString("team")]);
    m_team_isSet = !json[QString("team")].isNull() && m_team_isValid;
}

QString OAIObjs_user_profile_short::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIObjs_user_profile_short::asJsonObject() const {
    QJsonObject obj;
    if (m_avatar_hash_isSet) {
        obj.insert(QString("avatar_hash"), ::OpenAPI::toJsonValue(m_avatar_hash));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("display_name"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_display_name_normalized_isSet) {
        obj.insert(QString("display_name_normalized"), ::OpenAPI::toJsonValue(m_display_name_normalized));
    }
    if (m_first_name_isSet) {
        obj.insert(QString("first_name"), ::OpenAPI::toJsonValue(m_first_name));
    }
    if (m_image_72_isSet) {
        obj.insert(QString("image_72"), ::OpenAPI::toJsonValue(m_image_72));
    }
    if (m_is_restricted_isSet) {
        obj.insert(QString("is_restricted"), ::OpenAPI::toJsonValue(m_is_restricted));
    }
    if (m_is_ultra_restricted_isSet) {
        obj.insert(QString("is_ultra_restricted"), ::OpenAPI::toJsonValue(m_is_ultra_restricted));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_real_name_isSet) {
        obj.insert(QString("real_name"), ::OpenAPI::toJsonValue(m_real_name));
    }
    if (m_real_name_normalized_isSet) {
        obj.insert(QString("real_name_normalized"), ::OpenAPI::toJsonValue(m_real_name_normalized));
    }
    if (m_team_isSet) {
        obj.insert(QString("team"), ::OpenAPI::toJsonValue(m_team));
    }
    return obj;
}

QString OAIObjs_user_profile_short::getAvatarHash() const {
    return m_avatar_hash;
}
void OAIObjs_user_profile_short::setAvatarHash(const QString &avatar_hash) {
    m_avatar_hash = avatar_hash;
    m_avatar_hash_isSet = true;
}

bool OAIObjs_user_profile_short::is_avatar_hash_Set() const{
    return m_avatar_hash_isSet;
}

bool OAIObjs_user_profile_short::is_avatar_hash_Valid() const{
    return m_avatar_hash_isValid;
}

QString OAIObjs_user_profile_short::getDisplayName() const {
    return m_display_name;
}
void OAIObjs_user_profile_short::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIObjs_user_profile_short::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIObjs_user_profile_short::is_display_name_Valid() const{
    return m_display_name_isValid;
}

QString OAIObjs_user_profile_short::getDisplayNameNormalized() const {
    return m_display_name_normalized;
}
void OAIObjs_user_profile_short::setDisplayNameNormalized(const QString &display_name_normalized) {
    m_display_name_normalized = display_name_normalized;
    m_display_name_normalized_isSet = true;
}

bool OAIObjs_user_profile_short::is_display_name_normalized_Set() const{
    return m_display_name_normalized_isSet;
}

bool OAIObjs_user_profile_short::is_display_name_normalized_Valid() const{
    return m_display_name_normalized_isValid;
}

QString OAIObjs_user_profile_short::getFirstName() const {
    return m_first_name;
}
void OAIObjs_user_profile_short::setFirstName(const QString &first_name) {
    m_first_name = first_name;
    m_first_name_isSet = true;
}

bool OAIObjs_user_profile_short::is_first_name_Set() const{
    return m_first_name_isSet;
}

bool OAIObjs_user_profile_short::is_first_name_Valid() const{
    return m_first_name_isValid;
}

QString OAIObjs_user_profile_short::getImage72() const {
    return m_image_72;
}
void OAIObjs_user_profile_short::setImage72(const QString &image_72) {
    m_image_72 = image_72;
    m_image_72_isSet = true;
}

bool OAIObjs_user_profile_short::is_image_72_Set() const{
    return m_image_72_isSet;
}

bool OAIObjs_user_profile_short::is_image_72_Valid() const{
    return m_image_72_isValid;
}

bool OAIObjs_user_profile_short::isIsRestricted() const {
    return m_is_restricted;
}
void OAIObjs_user_profile_short::setIsRestricted(const bool &is_restricted) {
    m_is_restricted = is_restricted;
    m_is_restricted_isSet = true;
}

bool OAIObjs_user_profile_short::is_is_restricted_Set() const{
    return m_is_restricted_isSet;
}

bool OAIObjs_user_profile_short::is_is_restricted_Valid() const{
    return m_is_restricted_isValid;
}

bool OAIObjs_user_profile_short::isIsUltraRestricted() const {
    return m_is_ultra_restricted;
}
void OAIObjs_user_profile_short::setIsUltraRestricted(const bool &is_ultra_restricted) {
    m_is_ultra_restricted = is_ultra_restricted;
    m_is_ultra_restricted_isSet = true;
}

bool OAIObjs_user_profile_short::is_is_ultra_restricted_Set() const{
    return m_is_ultra_restricted_isSet;
}

bool OAIObjs_user_profile_short::is_is_ultra_restricted_Valid() const{
    return m_is_ultra_restricted_isValid;
}

QString OAIObjs_user_profile_short::getName() const {
    return m_name;
}
void OAIObjs_user_profile_short::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIObjs_user_profile_short::is_name_Set() const{
    return m_name_isSet;
}

bool OAIObjs_user_profile_short::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIObjs_user_profile_short::getRealName() const {
    return m_real_name;
}
void OAIObjs_user_profile_short::setRealName(const QString &real_name) {
    m_real_name = real_name;
    m_real_name_isSet = true;
}

bool OAIObjs_user_profile_short::is_real_name_Set() const{
    return m_real_name_isSet;
}

bool OAIObjs_user_profile_short::is_real_name_Valid() const{
    return m_real_name_isValid;
}

QString OAIObjs_user_profile_short::getRealNameNormalized() const {
    return m_real_name_normalized;
}
void OAIObjs_user_profile_short::setRealNameNormalized(const QString &real_name_normalized) {
    m_real_name_normalized = real_name_normalized;
    m_real_name_normalized_isSet = true;
}

bool OAIObjs_user_profile_short::is_real_name_normalized_Set() const{
    return m_real_name_normalized_isSet;
}

bool OAIObjs_user_profile_short::is_real_name_normalized_Valid() const{
    return m_real_name_normalized_isValid;
}

QString OAIObjs_user_profile_short::getTeam() const {
    return m_team;
}
void OAIObjs_user_profile_short::setTeam(const QString &team) {
    m_team = team;
    m_team_isSet = true;
}

bool OAIObjs_user_profile_short::is_team_Set() const{
    return m_team_isSet;
}

bool OAIObjs_user_profile_short::is_team_Valid() const{
    return m_team_isValid;
}

bool OAIObjs_user_profile_short::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_avatar_hash_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_normalized_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_first_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_image_72_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_restricted_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_ultra_restricted_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_real_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_real_name_normalized_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_team_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIObjs_user_profile_short::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_avatar_hash_isValid && m_display_name_isValid && m_first_name_isValid && m_image_72_isValid && m_is_restricted_isValid && m_is_ultra_restricted_isValid && m_name_isValid && m_real_name_isValid && m_team_isValid && true;
}

} // namespace OpenAPI
