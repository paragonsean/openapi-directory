/**
 * Slack Web API
 * One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.
 *
 * The version of the OpenAPI document: 1.7.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIObjs_message_icons.h
 *
 * 
 */

#ifndef OAIObjs_message_icons_H
#define OAIObjs_message_icons_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIObjs_message_icons : public OAIObject {
public:
    OAIObjs_message_icons();
    OAIObjs_message_icons(QString json);
    ~OAIObjs_message_icons() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getEmoji() const;
    void setEmoji(const QString &emoji);
    bool is_emoji_Set() const;
    bool is_emoji_Valid() const;

    QString getImage64() const;
    void setImage64(const QString &image_64);
    bool is_image_64_Set() const;
    bool is_image_64_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_emoji;
    bool m_emoji_isSet;
    bool m_emoji_isValid;

    QString m_image_64;
    bool m_image_64_isSet;
    bool m_image_64_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIObjs_message_icons)

#endif // OAIObjs_message_icons_H
