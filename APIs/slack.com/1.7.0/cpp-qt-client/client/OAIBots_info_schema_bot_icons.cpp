/**
 * Slack Web API
 * One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.
 *
 * The version of the OpenAPI document: 1.7.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBots_info_schema_bot_icons.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBots_info_schema_bot_icons::OAIBots_info_schema_bot_icons(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBots_info_schema_bot_icons::OAIBots_info_schema_bot_icons() {
    this->initializeModel();
}

OAIBots_info_schema_bot_icons::~OAIBots_info_schema_bot_icons() {}

void OAIBots_info_schema_bot_icons::initializeModel() {

    m_image_36_isSet = false;
    m_image_36_isValid = false;

    m_image_48_isSet = false;
    m_image_48_isValid = false;

    m_image_72_isSet = false;
    m_image_72_isValid = false;
}

void OAIBots_info_schema_bot_icons::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBots_info_schema_bot_icons::fromJsonObject(QJsonObject json) {

    m_image_36_isValid = ::OpenAPI::fromJsonValue(m_image_36, json[QString("image_36")]);
    m_image_36_isSet = !json[QString("image_36")].isNull() && m_image_36_isValid;

    m_image_48_isValid = ::OpenAPI::fromJsonValue(m_image_48, json[QString("image_48")]);
    m_image_48_isSet = !json[QString("image_48")].isNull() && m_image_48_isValid;

    m_image_72_isValid = ::OpenAPI::fromJsonValue(m_image_72, json[QString("image_72")]);
    m_image_72_isSet = !json[QString("image_72")].isNull() && m_image_72_isValid;
}

QString OAIBots_info_schema_bot_icons::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBots_info_schema_bot_icons::asJsonObject() const {
    QJsonObject obj;
    if (m_image_36_isSet) {
        obj.insert(QString("image_36"), ::OpenAPI::toJsonValue(m_image_36));
    }
    if (m_image_48_isSet) {
        obj.insert(QString("image_48"), ::OpenAPI::toJsonValue(m_image_48));
    }
    if (m_image_72_isSet) {
        obj.insert(QString("image_72"), ::OpenAPI::toJsonValue(m_image_72));
    }
    return obj;
}

QString OAIBots_info_schema_bot_icons::getImage36() const {
    return m_image_36;
}
void OAIBots_info_schema_bot_icons::setImage36(const QString &image_36) {
    m_image_36 = image_36;
    m_image_36_isSet = true;
}

bool OAIBots_info_schema_bot_icons::is_image_36_Set() const{
    return m_image_36_isSet;
}

bool OAIBots_info_schema_bot_icons::is_image_36_Valid() const{
    return m_image_36_isValid;
}

QString OAIBots_info_schema_bot_icons::getImage48() const {
    return m_image_48;
}
void OAIBots_info_schema_bot_icons::setImage48(const QString &image_48) {
    m_image_48 = image_48;
    m_image_48_isSet = true;
}

bool OAIBots_info_schema_bot_icons::is_image_48_Set() const{
    return m_image_48_isSet;
}

bool OAIBots_info_schema_bot_icons::is_image_48_Valid() const{
    return m_image_48_isValid;
}

QString OAIBots_info_schema_bot_icons::getImage72() const {
    return m_image_72;
}
void OAIBots_info_schema_bot_icons::setImage72(const QString &image_72) {
    m_image_72 = image_72;
    m_image_72_isSet = true;
}

bool OAIBots_info_schema_bot_icons::is_image_72_Set() const{
    return m_image_72_isSet;
}

bool OAIBots_info_schema_bot_icons::is_image_72_Valid() const{
    return m_image_72_isValid;
}

bool OAIBots_info_schema_bot_icons::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_image_36_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_image_48_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_image_72_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBots_info_schema_bot_icons::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_image_36_isValid && m_image_48_isValid && m_image_72_isValid && true;
}

} // namespace OpenAPI
