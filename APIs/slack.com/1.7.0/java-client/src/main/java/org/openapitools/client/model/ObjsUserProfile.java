/*
 * Slack Web API
 * One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.net.URI;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ObjsUserProfile
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:22:39.442809-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ObjsUserProfile {
  public static final String SERIALIZED_NAME_ALWAYS_ACTIVE = "always_active";
  @SerializedName(SERIALIZED_NAME_ALWAYS_ACTIVE)
  private Boolean alwaysActive;

  public static final String SERIALIZED_NAME_API_APP_ID = "api_app_id";
  @SerializedName(SERIALIZED_NAME_API_APP_ID)
  private String apiAppId;

  public static final String SERIALIZED_NAME_AVATAR_HASH = "avatar_hash";
  @SerializedName(SERIALIZED_NAME_AVATAR_HASH)
  private String avatarHash;

  public static final String SERIALIZED_NAME_BOT_ID = "bot_id";
  @SerializedName(SERIALIZED_NAME_BOT_ID)
  private String botId;

  public static final String SERIALIZED_NAME_DISPLAY_NAME = "display_name";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  private String displayName;

  public static final String SERIALIZED_NAME_DISPLAY_NAME_NORMALIZED = "display_name_normalized";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME_NORMALIZED)
  private String displayNameNormalized;

  public static final String SERIALIZED_NAME_EMAIL = "email";
  @SerializedName(SERIALIZED_NAME_EMAIL)
  private String email;

  public static final String SERIALIZED_NAME_FIELDS = "fields";
  @SerializedName(SERIALIZED_NAME_FIELDS)
  private List<Object> fields;

  public static final String SERIALIZED_NAME_FIRST_NAME = "first_name";
  @SerializedName(SERIALIZED_NAME_FIRST_NAME)
  private String firstName;

  public static final String SERIALIZED_NAME_GUEST_EXPIRATION_TS = "guest_expiration_ts";
  @SerializedName(SERIALIZED_NAME_GUEST_EXPIRATION_TS)
  private Integer guestExpirationTs;

  public static final String SERIALIZED_NAME_GUEST_INVITED_BY = "guest_invited_by";
  @SerializedName(SERIALIZED_NAME_GUEST_INVITED_BY)
  private String guestInvitedBy;

  public static final String SERIALIZED_NAME_IMAGE1024 = "image_1024";
  @SerializedName(SERIALIZED_NAME_IMAGE1024)
  private URI image1024;

  public static final String SERIALIZED_NAME_IMAGE192 = "image_192";
  @SerializedName(SERIALIZED_NAME_IMAGE192)
  private URI image192;

  public static final String SERIALIZED_NAME_IMAGE24 = "image_24";
  @SerializedName(SERIALIZED_NAME_IMAGE24)
  private URI image24;

  public static final String SERIALIZED_NAME_IMAGE32 = "image_32";
  @SerializedName(SERIALIZED_NAME_IMAGE32)
  private URI image32;

  public static final String SERIALIZED_NAME_IMAGE48 = "image_48";
  @SerializedName(SERIALIZED_NAME_IMAGE48)
  private URI image48;

  public static final String SERIALIZED_NAME_IMAGE512 = "image_512";
  @SerializedName(SERIALIZED_NAME_IMAGE512)
  private URI image512;

  public static final String SERIALIZED_NAME_IMAGE72 = "image_72";
  @SerializedName(SERIALIZED_NAME_IMAGE72)
  private URI image72;

  public static final String SERIALIZED_NAME_IMAGE_ORIGINAL = "image_original";
  @SerializedName(SERIALIZED_NAME_IMAGE_ORIGINAL)
  private URI imageOriginal;

  public static final String SERIALIZED_NAME_IS_APP_USER = "is_app_user";
  @SerializedName(SERIALIZED_NAME_IS_APP_USER)
  private Boolean isAppUser;

  public static final String SERIALIZED_NAME_IS_CUSTOM_IMAGE = "is_custom_image";
  @SerializedName(SERIALIZED_NAME_IS_CUSTOM_IMAGE)
  private Boolean isCustomImage;

  public static final String SERIALIZED_NAME_IS_RESTRICTED = "is_restricted";
  @SerializedName(SERIALIZED_NAME_IS_RESTRICTED)
  private Boolean isRestricted;

  public static final String SERIALIZED_NAME_IS_ULTRA_RESTRICTED = "is_ultra_restricted";
  @SerializedName(SERIALIZED_NAME_IS_ULTRA_RESTRICTED)
  private Boolean isUltraRestricted;

  public static final String SERIALIZED_NAME_LAST_AVATAR_IMAGE_HASH = "last_avatar_image_hash";
  @SerializedName(SERIALIZED_NAME_LAST_AVATAR_IMAGE_HASH)
  private String lastAvatarImageHash;

  public static final String SERIALIZED_NAME_LAST_NAME = "last_name";
  @SerializedName(SERIALIZED_NAME_LAST_NAME)
  private String lastName;

  public static final String SERIALIZED_NAME_MEMBERSHIPS_COUNT = "memberships_count";
  @SerializedName(SERIALIZED_NAME_MEMBERSHIPS_COUNT)
  private Integer membershipsCount;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PHONE = "phone";
  @SerializedName(SERIALIZED_NAME_PHONE)
  private String phone;

  public static final String SERIALIZED_NAME_PRONOUNS = "pronouns";
  @SerializedName(SERIALIZED_NAME_PRONOUNS)
  private String pronouns;

  public static final String SERIALIZED_NAME_REAL_NAME = "real_name";
  @SerializedName(SERIALIZED_NAME_REAL_NAME)
  private String realName;

  public static final String SERIALIZED_NAME_REAL_NAME_NORMALIZED = "real_name_normalized";
  @SerializedName(SERIALIZED_NAME_REAL_NAME_NORMALIZED)
  private String realNameNormalized;

  public static final String SERIALIZED_NAME_SKYPE = "skype";
  @SerializedName(SERIALIZED_NAME_SKYPE)
  private String skype;

  public static final String SERIALIZED_NAME_STATUS_DEFAULT_EMOJI = "status_default_emoji";
  @SerializedName(SERIALIZED_NAME_STATUS_DEFAULT_EMOJI)
  private String statusDefaultEmoji;

  public static final String SERIALIZED_NAME_STATUS_DEFAULT_TEXT = "status_default_text";
  @SerializedName(SERIALIZED_NAME_STATUS_DEFAULT_TEXT)
  private String statusDefaultText;

  public static final String SERIALIZED_NAME_STATUS_DEFAULT_TEXT_CANONICAL = "status_default_text_canonical";
  @SerializedName(SERIALIZED_NAME_STATUS_DEFAULT_TEXT_CANONICAL)
  private String statusDefaultTextCanonical;

  public static final String SERIALIZED_NAME_STATUS_EMOJI = "status_emoji";
  @SerializedName(SERIALIZED_NAME_STATUS_EMOJI)
  private String statusEmoji;

  public static final String SERIALIZED_NAME_STATUS_EXPIRATION = "status_expiration";
  @SerializedName(SERIALIZED_NAME_STATUS_EXPIRATION)
  private Integer statusExpiration;

  public static final String SERIALIZED_NAME_STATUS_TEXT = "status_text";
  @SerializedName(SERIALIZED_NAME_STATUS_TEXT)
  private String statusText;

  public static final String SERIALIZED_NAME_STATUS_TEXT_CANONICAL = "status_text_canonical";
  @SerializedName(SERIALIZED_NAME_STATUS_TEXT_CANONICAL)
  private String statusTextCanonical;

  public static final String SERIALIZED_NAME_TEAM = "team";
  @SerializedName(SERIALIZED_NAME_TEAM)
  private String team;

  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public static final String SERIALIZED_NAME_UPDATED = "updated";
  @SerializedName(SERIALIZED_NAME_UPDATED)
  private Integer updated;

  public static final String SERIALIZED_NAME_USER_ID = "user_id";
  @SerializedName(SERIALIZED_NAME_USER_ID)
  private String userId;

  public static final String SERIALIZED_NAME_USERNAME = "username";
  @SerializedName(SERIALIZED_NAME_USERNAME)
  private String username;

  public ObjsUserProfile() {
  }

  public ObjsUserProfile alwaysActive(Boolean alwaysActive) {
    this.alwaysActive = alwaysActive;
    return this;
  }

  /**
   * Get alwaysActive
   * @return alwaysActive
   */
  @javax.annotation.Nullable
  public Boolean getAlwaysActive() {
    return alwaysActive;
  }

  public void setAlwaysActive(Boolean alwaysActive) {
    this.alwaysActive = alwaysActive;
  }


  public ObjsUserProfile apiAppId(String apiAppId) {
    this.apiAppId = apiAppId;
    return this;
  }

  /**
   * Get apiAppId
   * @return apiAppId
   */
  @javax.annotation.Nullable
  public String getApiAppId() {
    return apiAppId;
  }

  public void setApiAppId(String apiAppId) {
    this.apiAppId = apiAppId;
  }


  public ObjsUserProfile avatarHash(String avatarHash) {
    this.avatarHash = avatarHash;
    return this;
  }

  /**
   * Get avatarHash
   * @return avatarHash
   */
  @javax.annotation.Nonnull
  public String getAvatarHash() {
    return avatarHash;
  }

  public void setAvatarHash(String avatarHash) {
    this.avatarHash = avatarHash;
  }


  public ObjsUserProfile botId(String botId) {
    this.botId = botId;
    return this;
  }

  /**
   * Get botId
   * @return botId
   */
  @javax.annotation.Nullable
  public String getBotId() {
    return botId;
  }

  public void setBotId(String botId) {
    this.botId = botId;
  }


  public ObjsUserProfile displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Get displayName
   * @return displayName
   */
  @javax.annotation.Nonnull
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public ObjsUserProfile displayNameNormalized(String displayNameNormalized) {
    this.displayNameNormalized = displayNameNormalized;
    return this;
  }

  /**
   * Get displayNameNormalized
   * @return displayNameNormalized
   */
  @javax.annotation.Nonnull
  public String getDisplayNameNormalized() {
    return displayNameNormalized;
  }

  public void setDisplayNameNormalized(String displayNameNormalized) {
    this.displayNameNormalized = displayNameNormalized;
  }


  public ObjsUserProfile email(String email) {
    this.email = email;
    return this;
  }

  /**
   * Get email
   * @return email
   */
  @javax.annotation.Nullable
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }


  public ObjsUserProfile fields(List<Object> fields) {
    this.fields = fields;
    return this;
  }

  public ObjsUserProfile addFieldsItem(Object fieldsItem) {
    if (this.fields == null) {
      this.fields = new ArrayList<>();
    }
    this.fields.add(fieldsItem);
    return this;
  }

  /**
   * Get fields
   * @return fields
   */
  @javax.annotation.Nullable
  public List<Object> getFields() {
    return fields;
  }

  public void setFields(List<Object> fields) {
    this.fields = fields;
  }


  public ObjsUserProfile firstName(String firstName) {
    this.firstName = firstName;
    return this;
  }

  /**
   * Get firstName
   * @return firstName
   */
  @javax.annotation.Nullable
  public String getFirstName() {
    return firstName;
  }

  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }


  public ObjsUserProfile guestExpirationTs(Integer guestExpirationTs) {
    this.guestExpirationTs = guestExpirationTs;
    return this;
  }

  /**
   * Get guestExpirationTs
   * @return guestExpirationTs
   */
  @javax.annotation.Nullable
  public Integer getGuestExpirationTs() {
    return guestExpirationTs;
  }

  public void setGuestExpirationTs(Integer guestExpirationTs) {
    this.guestExpirationTs = guestExpirationTs;
  }


  public ObjsUserProfile guestInvitedBy(String guestInvitedBy) {
    this.guestInvitedBy = guestInvitedBy;
    return this;
  }

  /**
   * Get guestInvitedBy
   * @return guestInvitedBy
   */
  @javax.annotation.Nullable
  public String getGuestInvitedBy() {
    return guestInvitedBy;
  }

  public void setGuestInvitedBy(String guestInvitedBy) {
    this.guestInvitedBy = guestInvitedBy;
  }


  public ObjsUserProfile image1024(URI image1024) {
    this.image1024 = image1024;
    return this;
  }

  /**
   * Get image1024
   * @return image1024
   */
  @javax.annotation.Nullable
  public URI getImage1024() {
    return image1024;
  }

  public void setImage1024(URI image1024) {
    this.image1024 = image1024;
  }


  public ObjsUserProfile image192(URI image192) {
    this.image192 = image192;
    return this;
  }

  /**
   * Get image192
   * @return image192
   */
  @javax.annotation.Nullable
  public URI getImage192() {
    return image192;
  }

  public void setImage192(URI image192) {
    this.image192 = image192;
  }


  public ObjsUserProfile image24(URI image24) {
    this.image24 = image24;
    return this;
  }

  /**
   * Get image24
   * @return image24
   */
  @javax.annotation.Nullable
  public URI getImage24() {
    return image24;
  }

  public void setImage24(URI image24) {
    this.image24 = image24;
  }


  public ObjsUserProfile image32(URI image32) {
    this.image32 = image32;
    return this;
  }

  /**
   * Get image32
   * @return image32
   */
  @javax.annotation.Nullable
  public URI getImage32() {
    return image32;
  }

  public void setImage32(URI image32) {
    this.image32 = image32;
  }


  public ObjsUserProfile image48(URI image48) {
    this.image48 = image48;
    return this;
  }

  /**
   * Get image48
   * @return image48
   */
  @javax.annotation.Nullable
  public URI getImage48() {
    return image48;
  }

  public void setImage48(URI image48) {
    this.image48 = image48;
  }


  public ObjsUserProfile image512(URI image512) {
    this.image512 = image512;
    return this;
  }

  /**
   * Get image512
   * @return image512
   */
  @javax.annotation.Nullable
  public URI getImage512() {
    return image512;
  }

  public void setImage512(URI image512) {
    this.image512 = image512;
  }


  public ObjsUserProfile image72(URI image72) {
    this.image72 = image72;
    return this;
  }

  /**
   * Get image72
   * @return image72
   */
  @javax.annotation.Nullable
  public URI getImage72() {
    return image72;
  }

  public void setImage72(URI image72) {
    this.image72 = image72;
  }


  public ObjsUserProfile imageOriginal(URI imageOriginal) {
    this.imageOriginal = imageOriginal;
    return this;
  }

  /**
   * Get imageOriginal
   * @return imageOriginal
   */
  @javax.annotation.Nullable
  public URI getImageOriginal() {
    return imageOriginal;
  }

  public void setImageOriginal(URI imageOriginal) {
    this.imageOriginal = imageOriginal;
  }


  public ObjsUserProfile isAppUser(Boolean isAppUser) {
    this.isAppUser = isAppUser;
    return this;
  }

  /**
   * Get isAppUser
   * @return isAppUser
   */
  @javax.annotation.Nullable
  public Boolean getIsAppUser() {
    return isAppUser;
  }

  public void setIsAppUser(Boolean isAppUser) {
    this.isAppUser = isAppUser;
  }


  public ObjsUserProfile isCustomImage(Boolean isCustomImage) {
    this.isCustomImage = isCustomImage;
    return this;
  }

  /**
   * Get isCustomImage
   * @return isCustomImage
   */
  @javax.annotation.Nullable
  public Boolean getIsCustomImage() {
    return isCustomImage;
  }

  public void setIsCustomImage(Boolean isCustomImage) {
    this.isCustomImage = isCustomImage;
  }


  public ObjsUserProfile isRestricted(Boolean isRestricted) {
    this.isRestricted = isRestricted;
    return this;
  }

  /**
   * Get isRestricted
   * @return isRestricted
   */
  @javax.annotation.Nullable
  public Boolean getIsRestricted() {
    return isRestricted;
  }

  public void setIsRestricted(Boolean isRestricted) {
    this.isRestricted = isRestricted;
  }


  public ObjsUserProfile isUltraRestricted(Boolean isUltraRestricted) {
    this.isUltraRestricted = isUltraRestricted;
    return this;
  }

  /**
   * Get isUltraRestricted
   * @return isUltraRestricted
   */
  @javax.annotation.Nullable
  public Boolean getIsUltraRestricted() {
    return isUltraRestricted;
  }

  public void setIsUltraRestricted(Boolean isUltraRestricted) {
    this.isUltraRestricted = isUltraRestricted;
  }


  public ObjsUserProfile lastAvatarImageHash(String lastAvatarImageHash) {
    this.lastAvatarImageHash = lastAvatarImageHash;
    return this;
  }

  /**
   * Get lastAvatarImageHash
   * @return lastAvatarImageHash
   */
  @javax.annotation.Nullable
  public String getLastAvatarImageHash() {
    return lastAvatarImageHash;
  }

  public void setLastAvatarImageHash(String lastAvatarImageHash) {
    this.lastAvatarImageHash = lastAvatarImageHash;
  }


  public ObjsUserProfile lastName(String lastName) {
    this.lastName = lastName;
    return this;
  }

  /**
   * Get lastName
   * @return lastName
   */
  @javax.annotation.Nullable
  public String getLastName() {
    return lastName;
  }

  public void setLastName(String lastName) {
    this.lastName = lastName;
  }


  public ObjsUserProfile membershipsCount(Integer membershipsCount) {
    this.membershipsCount = membershipsCount;
    return this;
  }

  /**
   * Get membershipsCount
   * @return membershipsCount
   */
  @javax.annotation.Nullable
  public Integer getMembershipsCount() {
    return membershipsCount;
  }

  public void setMembershipsCount(Integer membershipsCount) {
    this.membershipsCount = membershipsCount;
  }


  public ObjsUserProfile name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public ObjsUserProfile phone(String phone) {
    this.phone = phone;
    return this;
  }

  /**
   * Get phone
   * @return phone
   */
  @javax.annotation.Nonnull
  public String getPhone() {
    return phone;
  }

  public void setPhone(String phone) {
    this.phone = phone;
  }


  public ObjsUserProfile pronouns(String pronouns) {
    this.pronouns = pronouns;
    return this;
  }

  /**
   * Get pronouns
   * @return pronouns
   */
  @javax.annotation.Nullable
  public String getPronouns() {
    return pronouns;
  }

  public void setPronouns(String pronouns) {
    this.pronouns = pronouns;
  }


  public ObjsUserProfile realName(String realName) {
    this.realName = realName;
    return this;
  }

  /**
   * Get realName
   * @return realName
   */
  @javax.annotation.Nonnull
  public String getRealName() {
    return realName;
  }

  public void setRealName(String realName) {
    this.realName = realName;
  }


  public ObjsUserProfile realNameNormalized(String realNameNormalized) {
    this.realNameNormalized = realNameNormalized;
    return this;
  }

  /**
   * Get realNameNormalized
   * @return realNameNormalized
   */
  @javax.annotation.Nonnull
  public String getRealNameNormalized() {
    return realNameNormalized;
  }

  public void setRealNameNormalized(String realNameNormalized) {
    this.realNameNormalized = realNameNormalized;
  }


  public ObjsUserProfile skype(String skype) {
    this.skype = skype;
    return this;
  }

  /**
   * Get skype
   * @return skype
   */
  @javax.annotation.Nonnull
  public String getSkype() {
    return skype;
  }

  public void setSkype(String skype) {
    this.skype = skype;
  }


  public ObjsUserProfile statusDefaultEmoji(String statusDefaultEmoji) {
    this.statusDefaultEmoji = statusDefaultEmoji;
    return this;
  }

  /**
   * Get statusDefaultEmoji
   * @return statusDefaultEmoji
   */
  @javax.annotation.Nullable
  public String getStatusDefaultEmoji() {
    return statusDefaultEmoji;
  }

  public void setStatusDefaultEmoji(String statusDefaultEmoji) {
    this.statusDefaultEmoji = statusDefaultEmoji;
  }


  public ObjsUserProfile statusDefaultText(String statusDefaultText) {
    this.statusDefaultText = statusDefaultText;
    return this;
  }

  /**
   * Get statusDefaultText
   * @return statusDefaultText
   */
  @javax.annotation.Nullable
  public String getStatusDefaultText() {
    return statusDefaultText;
  }

  public void setStatusDefaultText(String statusDefaultText) {
    this.statusDefaultText = statusDefaultText;
  }


  public ObjsUserProfile statusDefaultTextCanonical(String statusDefaultTextCanonical) {
    this.statusDefaultTextCanonical = statusDefaultTextCanonical;
    return this;
  }

  /**
   * Get statusDefaultTextCanonical
   * @return statusDefaultTextCanonical
   */
  @javax.annotation.Nullable
  public String getStatusDefaultTextCanonical() {
    return statusDefaultTextCanonical;
  }

  public void setStatusDefaultTextCanonical(String statusDefaultTextCanonical) {
    this.statusDefaultTextCanonical = statusDefaultTextCanonical;
  }


  public ObjsUserProfile statusEmoji(String statusEmoji) {
    this.statusEmoji = statusEmoji;
    return this;
  }

  /**
   * Get statusEmoji
   * @return statusEmoji
   */
  @javax.annotation.Nonnull
  public String getStatusEmoji() {
    return statusEmoji;
  }

  public void setStatusEmoji(String statusEmoji) {
    this.statusEmoji = statusEmoji;
  }


  public ObjsUserProfile statusExpiration(Integer statusExpiration) {
    this.statusExpiration = statusExpiration;
    return this;
  }

  /**
   * Get statusExpiration
   * @return statusExpiration
   */
  @javax.annotation.Nullable
  public Integer getStatusExpiration() {
    return statusExpiration;
  }

  public void setStatusExpiration(Integer statusExpiration) {
    this.statusExpiration = statusExpiration;
  }


  public ObjsUserProfile statusText(String statusText) {
    this.statusText = statusText;
    return this;
  }

  /**
   * Get statusText
   * @return statusText
   */
  @javax.annotation.Nonnull
  public String getStatusText() {
    return statusText;
  }

  public void setStatusText(String statusText) {
    this.statusText = statusText;
  }


  public ObjsUserProfile statusTextCanonical(String statusTextCanonical) {
    this.statusTextCanonical = statusTextCanonical;
    return this;
  }

  /**
   * Get statusTextCanonical
   * @return statusTextCanonical
   */
  @javax.annotation.Nullable
  public String getStatusTextCanonical() {
    return statusTextCanonical;
  }

  public void setStatusTextCanonical(String statusTextCanonical) {
    this.statusTextCanonical = statusTextCanonical;
  }


  public ObjsUserProfile team(String team) {
    this.team = team;
    return this;
  }

  /**
   * Get team
   * @return team
   */
  @javax.annotation.Nullable
  public String getTeam() {
    return team;
  }

  public void setTeam(String team) {
    this.team = team;
  }


  public ObjsUserProfile title(String title) {
    this.title = title;
    return this;
  }

  /**
   * Get title
   * @return title
   */
  @javax.annotation.Nonnull
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }


  public ObjsUserProfile updated(Integer updated) {
    this.updated = updated;
    return this;
  }

  /**
   * Get updated
   * @return updated
   */
  @javax.annotation.Nullable
  public Integer getUpdated() {
    return updated;
  }

  public void setUpdated(Integer updated) {
    this.updated = updated;
  }


  public ObjsUserProfile userId(String userId) {
    this.userId = userId;
    return this;
  }

  /**
   * Get userId
   * @return userId
   */
  @javax.annotation.Nullable
  public String getUserId() {
    return userId;
  }

  public void setUserId(String userId) {
    this.userId = userId;
  }


  public ObjsUserProfile username(String username) {
    this.username = username;
    return this;
  }

  /**
   * Get username
   * @return username
   */
  @javax.annotation.Nullable
  public String getUsername() {
    return username;
  }

  public void setUsername(String username) {
    this.username = username;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ObjsUserProfile objsUserProfile = (ObjsUserProfile) o;
    return Objects.equals(this.alwaysActive, objsUserProfile.alwaysActive) &&
        Objects.equals(this.apiAppId, objsUserProfile.apiAppId) &&
        Objects.equals(this.avatarHash, objsUserProfile.avatarHash) &&
        Objects.equals(this.botId, objsUserProfile.botId) &&
        Objects.equals(this.displayName, objsUserProfile.displayName) &&
        Objects.equals(this.displayNameNormalized, objsUserProfile.displayNameNormalized) &&
        Objects.equals(this.email, objsUserProfile.email) &&
        Objects.equals(this.fields, objsUserProfile.fields) &&
        Objects.equals(this.firstName, objsUserProfile.firstName) &&
        Objects.equals(this.guestExpirationTs, objsUserProfile.guestExpirationTs) &&
        Objects.equals(this.guestInvitedBy, objsUserProfile.guestInvitedBy) &&
        Objects.equals(this.image1024, objsUserProfile.image1024) &&
        Objects.equals(this.image192, objsUserProfile.image192) &&
        Objects.equals(this.image24, objsUserProfile.image24) &&
        Objects.equals(this.image32, objsUserProfile.image32) &&
        Objects.equals(this.image48, objsUserProfile.image48) &&
        Objects.equals(this.image512, objsUserProfile.image512) &&
        Objects.equals(this.image72, objsUserProfile.image72) &&
        Objects.equals(this.imageOriginal, objsUserProfile.imageOriginal) &&
        Objects.equals(this.isAppUser, objsUserProfile.isAppUser) &&
        Objects.equals(this.isCustomImage, objsUserProfile.isCustomImage) &&
        Objects.equals(this.isRestricted, objsUserProfile.isRestricted) &&
        Objects.equals(this.isUltraRestricted, objsUserProfile.isUltraRestricted) &&
        Objects.equals(this.lastAvatarImageHash, objsUserProfile.lastAvatarImageHash) &&
        Objects.equals(this.lastName, objsUserProfile.lastName) &&
        Objects.equals(this.membershipsCount, objsUserProfile.membershipsCount) &&
        Objects.equals(this.name, objsUserProfile.name) &&
        Objects.equals(this.phone, objsUserProfile.phone) &&
        Objects.equals(this.pronouns, objsUserProfile.pronouns) &&
        Objects.equals(this.realName, objsUserProfile.realName) &&
        Objects.equals(this.realNameNormalized, objsUserProfile.realNameNormalized) &&
        Objects.equals(this.skype, objsUserProfile.skype) &&
        Objects.equals(this.statusDefaultEmoji, objsUserProfile.statusDefaultEmoji) &&
        Objects.equals(this.statusDefaultText, objsUserProfile.statusDefaultText) &&
        Objects.equals(this.statusDefaultTextCanonical, objsUserProfile.statusDefaultTextCanonical) &&
        Objects.equals(this.statusEmoji, objsUserProfile.statusEmoji) &&
        Objects.equals(this.statusExpiration, objsUserProfile.statusExpiration) &&
        Objects.equals(this.statusText, objsUserProfile.statusText) &&
        Objects.equals(this.statusTextCanonical, objsUserProfile.statusTextCanonical) &&
        Objects.equals(this.team, objsUserProfile.team) &&
        Objects.equals(this.title, objsUserProfile.title) &&
        Objects.equals(this.updated, objsUserProfile.updated) &&
        Objects.equals(this.userId, objsUserProfile.userId) &&
        Objects.equals(this.username, objsUserProfile.username);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(alwaysActive, apiAppId, avatarHash, botId, displayName, displayNameNormalized, email, fields, firstName, guestExpirationTs, guestInvitedBy, image1024, image192, image24, image32, image48, image512, image72, imageOriginal, isAppUser, isCustomImage, isRestricted, isUltraRestricted, lastAvatarImageHash, lastName, membershipsCount, name, phone, pronouns, realName, realNameNormalized, skype, statusDefaultEmoji, statusDefaultText, statusDefaultTextCanonical, statusEmoji, statusExpiration, statusText, statusTextCanonical, team, title, updated, userId, username);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ObjsUserProfile {\n");
    sb.append("    alwaysActive: ").append(toIndentedString(alwaysActive)).append("\n");
    sb.append("    apiAppId: ").append(toIndentedString(apiAppId)).append("\n");
    sb.append("    avatarHash: ").append(toIndentedString(avatarHash)).append("\n");
    sb.append("    botId: ").append(toIndentedString(botId)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    displayNameNormalized: ").append(toIndentedString(displayNameNormalized)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    fields: ").append(toIndentedString(fields)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    guestExpirationTs: ").append(toIndentedString(guestExpirationTs)).append("\n");
    sb.append("    guestInvitedBy: ").append(toIndentedString(guestInvitedBy)).append("\n");
    sb.append("    image1024: ").append(toIndentedString(image1024)).append("\n");
    sb.append("    image192: ").append(toIndentedString(image192)).append("\n");
    sb.append("    image24: ").append(toIndentedString(image24)).append("\n");
    sb.append("    image32: ").append(toIndentedString(image32)).append("\n");
    sb.append("    image48: ").append(toIndentedString(image48)).append("\n");
    sb.append("    image512: ").append(toIndentedString(image512)).append("\n");
    sb.append("    image72: ").append(toIndentedString(image72)).append("\n");
    sb.append("    imageOriginal: ").append(toIndentedString(imageOriginal)).append("\n");
    sb.append("    isAppUser: ").append(toIndentedString(isAppUser)).append("\n");
    sb.append("    isCustomImage: ").append(toIndentedString(isCustomImage)).append("\n");
    sb.append("    isRestricted: ").append(toIndentedString(isRestricted)).append("\n");
    sb.append("    isUltraRestricted: ").append(toIndentedString(isUltraRestricted)).append("\n");
    sb.append("    lastAvatarImageHash: ").append(toIndentedString(lastAvatarImageHash)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    membershipsCount: ").append(toIndentedString(membershipsCount)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
    sb.append("    pronouns: ").append(toIndentedString(pronouns)).append("\n");
    sb.append("    realName: ").append(toIndentedString(realName)).append("\n");
    sb.append("    realNameNormalized: ").append(toIndentedString(realNameNormalized)).append("\n");
    sb.append("    skype: ").append(toIndentedString(skype)).append("\n");
    sb.append("    statusDefaultEmoji: ").append(toIndentedString(statusDefaultEmoji)).append("\n");
    sb.append("    statusDefaultText: ").append(toIndentedString(statusDefaultText)).append("\n");
    sb.append("    statusDefaultTextCanonical: ").append(toIndentedString(statusDefaultTextCanonical)).append("\n");
    sb.append("    statusEmoji: ").append(toIndentedString(statusEmoji)).append("\n");
    sb.append("    statusExpiration: ").append(toIndentedString(statusExpiration)).append("\n");
    sb.append("    statusText: ").append(toIndentedString(statusText)).append("\n");
    sb.append("    statusTextCanonical: ").append(toIndentedString(statusTextCanonical)).append("\n");
    sb.append("    team: ").append(toIndentedString(team)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    updated: ").append(toIndentedString(updated)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("always_active");
    openapiFields.add("api_app_id");
    openapiFields.add("avatar_hash");
    openapiFields.add("bot_id");
    openapiFields.add("display_name");
    openapiFields.add("display_name_normalized");
    openapiFields.add("email");
    openapiFields.add("fields");
    openapiFields.add("first_name");
    openapiFields.add("guest_expiration_ts");
    openapiFields.add("guest_invited_by");
    openapiFields.add("image_1024");
    openapiFields.add("image_192");
    openapiFields.add("image_24");
    openapiFields.add("image_32");
    openapiFields.add("image_48");
    openapiFields.add("image_512");
    openapiFields.add("image_72");
    openapiFields.add("image_original");
    openapiFields.add("is_app_user");
    openapiFields.add("is_custom_image");
    openapiFields.add("is_restricted");
    openapiFields.add("is_ultra_restricted");
    openapiFields.add("last_avatar_image_hash");
    openapiFields.add("last_name");
    openapiFields.add("memberships_count");
    openapiFields.add("name");
    openapiFields.add("phone");
    openapiFields.add("pronouns");
    openapiFields.add("real_name");
    openapiFields.add("real_name_normalized");
    openapiFields.add("skype");
    openapiFields.add("status_default_emoji");
    openapiFields.add("status_default_text");
    openapiFields.add("status_default_text_canonical");
    openapiFields.add("status_emoji");
    openapiFields.add("status_expiration");
    openapiFields.add("status_text");
    openapiFields.add("status_text_canonical");
    openapiFields.add("team");
    openapiFields.add("title");
    openapiFields.add("updated");
    openapiFields.add("user_id");
    openapiFields.add("username");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("avatar_hash");
    openapiRequiredFields.add("display_name");
    openapiRequiredFields.add("display_name_normalized");
    openapiRequiredFields.add("fields");
    openapiRequiredFields.add("phone");
    openapiRequiredFields.add("real_name");
    openapiRequiredFields.add("real_name_normalized");
    openapiRequiredFields.add("skype");
    openapiRequiredFields.add("status_emoji");
    openapiRequiredFields.add("status_text");
    openapiRequiredFields.add("title");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ObjsUserProfile
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ObjsUserProfile.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ObjsUserProfile is not found in the empty JSON string", ObjsUserProfile.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ObjsUserProfile.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ObjsUserProfile` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : ObjsUserProfile.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("api_app_id") != null && !jsonObj.get("api_app_id").isJsonNull()) && !jsonObj.get("api_app_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `api_app_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("api_app_id").toString()));
      }
      if (!jsonObj.get("avatar_hash").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `avatar_hash` to be a primitive type in the JSON string but got `%s`", jsonObj.get("avatar_hash").toString()));
      }
      if ((jsonObj.get("bot_id") != null && !jsonObj.get("bot_id").isJsonNull()) && !jsonObj.get("bot_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bot_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bot_id").toString()));
      }
      if (!jsonObj.get("display_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `display_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("display_name").toString()));
      }
      if (!jsonObj.get("display_name_normalized").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `display_name_normalized` to be a primitive type in the JSON string but got `%s`", jsonObj.get("display_name_normalized").toString()));
      }
      if ((jsonObj.get("email") != null && !jsonObj.get("email").isJsonNull()) && !jsonObj.get("email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("email").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("fields") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("fields").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `fields` to be an array in the JSON string but got `%s`", jsonObj.get("fields").toString()));
      }
      if ((jsonObj.get("first_name") != null && !jsonObj.get("first_name").isJsonNull()) && !jsonObj.get("first_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `first_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("first_name").toString()));
      }
      if ((jsonObj.get("guest_invited_by") != null && !jsonObj.get("guest_invited_by").isJsonNull()) && !jsonObj.get("guest_invited_by").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `guest_invited_by` to be a primitive type in the JSON string but got `%s`", jsonObj.get("guest_invited_by").toString()));
      }
      if ((jsonObj.get("image_1024") != null && !jsonObj.get("image_1024").isJsonNull()) && !jsonObj.get("image_1024").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `image_1024` to be a primitive type in the JSON string but got `%s`", jsonObj.get("image_1024").toString()));
      }
      if ((jsonObj.get("image_192") != null && !jsonObj.get("image_192").isJsonNull()) && !jsonObj.get("image_192").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `image_192` to be a primitive type in the JSON string but got `%s`", jsonObj.get("image_192").toString()));
      }
      if ((jsonObj.get("image_24") != null && !jsonObj.get("image_24").isJsonNull()) && !jsonObj.get("image_24").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `image_24` to be a primitive type in the JSON string but got `%s`", jsonObj.get("image_24").toString()));
      }
      if ((jsonObj.get("image_32") != null && !jsonObj.get("image_32").isJsonNull()) && !jsonObj.get("image_32").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `image_32` to be a primitive type in the JSON string but got `%s`", jsonObj.get("image_32").toString()));
      }
      if ((jsonObj.get("image_48") != null && !jsonObj.get("image_48").isJsonNull()) && !jsonObj.get("image_48").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `image_48` to be a primitive type in the JSON string but got `%s`", jsonObj.get("image_48").toString()));
      }
      if ((jsonObj.get("image_512") != null && !jsonObj.get("image_512").isJsonNull()) && !jsonObj.get("image_512").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `image_512` to be a primitive type in the JSON string but got `%s`", jsonObj.get("image_512").toString()));
      }
      if ((jsonObj.get("image_72") != null && !jsonObj.get("image_72").isJsonNull()) && !jsonObj.get("image_72").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `image_72` to be a primitive type in the JSON string but got `%s`", jsonObj.get("image_72").toString()));
      }
      if ((jsonObj.get("image_original") != null && !jsonObj.get("image_original").isJsonNull()) && !jsonObj.get("image_original").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `image_original` to be a primitive type in the JSON string but got `%s`", jsonObj.get("image_original").toString()));
      }
      if ((jsonObj.get("last_avatar_image_hash") != null && !jsonObj.get("last_avatar_image_hash").isJsonNull()) && !jsonObj.get("last_avatar_image_hash").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `last_avatar_image_hash` to be a primitive type in the JSON string but got `%s`", jsonObj.get("last_avatar_image_hash").toString()));
      }
      if ((jsonObj.get("last_name") != null && !jsonObj.get("last_name").isJsonNull()) && !jsonObj.get("last_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `last_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("last_name").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if (!jsonObj.get("phone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `phone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("phone").toString()));
      }
      if ((jsonObj.get("pronouns") != null && !jsonObj.get("pronouns").isJsonNull()) && !jsonObj.get("pronouns").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pronouns` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pronouns").toString()));
      }
      if (!jsonObj.get("real_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `real_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("real_name").toString()));
      }
      if (!jsonObj.get("real_name_normalized").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `real_name_normalized` to be a primitive type in the JSON string but got `%s`", jsonObj.get("real_name_normalized").toString()));
      }
      if (!jsonObj.get("skype").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `skype` to be a primitive type in the JSON string but got `%s`", jsonObj.get("skype").toString()));
      }
      if ((jsonObj.get("status_default_emoji") != null && !jsonObj.get("status_default_emoji").isJsonNull()) && !jsonObj.get("status_default_emoji").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status_default_emoji` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status_default_emoji").toString()));
      }
      if ((jsonObj.get("status_default_text") != null && !jsonObj.get("status_default_text").isJsonNull()) && !jsonObj.get("status_default_text").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status_default_text` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status_default_text").toString()));
      }
      if ((jsonObj.get("status_default_text_canonical") != null && !jsonObj.get("status_default_text_canonical").isJsonNull()) && !jsonObj.get("status_default_text_canonical").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status_default_text_canonical` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status_default_text_canonical").toString()));
      }
      if (!jsonObj.get("status_emoji").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status_emoji` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status_emoji").toString()));
      }
      if (!jsonObj.get("status_text").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status_text` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status_text").toString()));
      }
      if ((jsonObj.get("status_text_canonical") != null && !jsonObj.get("status_text_canonical").isJsonNull()) && !jsonObj.get("status_text_canonical").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status_text_canonical` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status_text_canonical").toString()));
      }
      if ((jsonObj.get("team") != null && !jsonObj.get("team").isJsonNull()) && !jsonObj.get("team").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `team` to be a primitive type in the JSON string but got `%s`", jsonObj.get("team").toString()));
      }
      if (!jsonObj.get("title").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("title").toString()));
      }
      if ((jsonObj.get("user_id") != null && !jsonObj.get("user_id").isJsonNull()) && !jsonObj.get("user_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `user_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("user_id").toString()));
      }
      if ((jsonObj.get("username") != null && !jsonObj.get("username").isJsonNull()) && !jsonObj.get("username").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `username` to be a primitive type in the JSON string but got `%s`", jsonObj.get("username").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ObjsUserProfile.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ObjsUserProfile' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ObjsUserProfile> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ObjsUserProfile.class));

       return (TypeAdapter<T>) new TypeAdapter<ObjsUserProfile>() {
           @Override
           public void write(JsonWriter out, ObjsUserProfile value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ObjsUserProfile read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ObjsUserProfile given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ObjsUserProfile
   * @throws IOException if the JSON string is invalid with respect to ObjsUserProfile
   */
  public static ObjsUserProfile fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ObjsUserProfile.class);
  }

  /**
   * Convert an instance of ObjsUserProfile to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

