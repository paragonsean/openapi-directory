/*
 * Slack Web API
 * One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Set;
import org.openapitools.client.model.ConversationIMChannelObjectFromConversationsMethodsSharesInner;
import org.openapitools.client.model.ConversationObjectParentConversationInner;
import org.openapitools.client.model.ObjsChannelLatestInner;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for ConversationIMChannelObjectFromConversationsMethods
 */
public class ConversationIMChannelObjectFromConversationsMethodsTest {
    private final ConversationIMChannelObjectFromConversationsMethods model = new ConversationIMChannelObjectFromConversationsMethods();

    /**
     * Model tests for ConversationIMChannelObjectFromConversationsMethods
     */
    @Test
    public void testConversationIMChannelObjectFromConversationsMethods() {
        // TODO: test ConversationIMChannelObjectFromConversationsMethods
    }

    /**
     * Test the property 'created'
     */
    @Test
    public void createdTest() {
        // TODO: test created
    }

    /**
     * Test the property 'hasPins'
     */
    @Test
    public void hasPinsTest() {
        // TODO: test hasPins
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'isArchived'
     */
    @Test
    public void isArchivedTest() {
        // TODO: test isArchived
    }

    /**
     * Test the property 'isExtShared'
     */
    @Test
    public void isExtSharedTest() {
        // TODO: test isExtShared
    }

    /**
     * Test the property 'isFrozen'
     */
    @Test
    public void isFrozenTest() {
        // TODO: test isFrozen
    }

    /**
     * Test the property 'isIm'
     */
    @Test
    public void isImTest() {
        // TODO: test isIm
    }

    /**
     * Test the property 'isOpen'
     */
    @Test
    public void isOpenTest() {
        // TODO: test isOpen
    }

    /**
     * Test the property 'isOrgShared'
     */
    @Test
    public void isOrgSharedTest() {
        // TODO: test isOrgShared
    }

    /**
     * Test the property 'isShared'
     */
    @Test
    public void isSharedTest() {
        // TODO: test isShared
    }

    /**
     * Test the property 'isStarred'
     */
    @Test
    public void isStarredTest() {
        // TODO: test isStarred
    }

    /**
     * Test the property 'isUserDeleted'
     */
    @Test
    public void isUserDeletedTest() {
        // TODO: test isUserDeleted
    }

    /**
     * Test the property 'lastRead'
     */
    @Test
    public void lastReadTest() {
        // TODO: test lastRead
    }

    /**
     * Test the property 'latest'
     */
    @Test
    public void latestTest() {
        // TODO: test latest
    }

    /**
     * Test the property 'parentConversation'
     */
    @Test
    public void parentConversationTest() {
        // TODO: test parentConversation
    }

    /**
     * Test the property 'pinCount'
     */
    @Test
    public void pinCountTest() {
        // TODO: test pinCount
    }

    /**
     * Test the property 'priority'
     */
    @Test
    public void priorityTest() {
        // TODO: test priority
    }

    /**
     * Test the property 'shares'
     */
    @Test
    public void sharesTest() {
        // TODO: test shares
    }

    /**
     * Test the property 'unreadCount'
     */
    @Test
    public void unreadCountTest() {
        // TODO: test unreadCount
    }

    /**
     * Test the property 'unreadCountDisplay'
     */
    @Test
    public void unreadCountDisplayTest() {
        // TODO: test unreadCountDisplay
    }

    /**
     * Test the property 'user'
     */
    @Test
    public void userTest() {
        // TODO: test user
    }

    /**
     * Test the property 'version'
     */
    @Test
    public void versionTest() {
        // TODO: test version
    }

}
