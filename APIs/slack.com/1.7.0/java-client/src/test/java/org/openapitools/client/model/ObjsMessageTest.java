/*
 * Slack Web API
 * One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.net.URI;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Set;
import org.openapitools.client.model.BlocksInner;
import org.openapitools.client.model.ObjsBotProfile;
import org.openapitools.client.model.ObjsComment;
import org.openapitools.client.model.ObjsFile;
import org.openapitools.client.model.ObjsMessageAttachmentsInner;
import org.openapitools.client.model.ObjsMessageBotIdInner;
import org.openapitools.client.model.ObjsMessageIcons;
import org.openapitools.client.model.ObjsReaction;
import org.openapitools.client.model.ObjsUserProfileShort;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for ObjsMessage
 */
public class ObjsMessageTest {
    private final ObjsMessage model = new ObjsMessage();

    /**
     * Model tests for ObjsMessage
     */
    @Test
    public void testObjsMessage() {
        // TODO: test ObjsMessage
    }

    /**
     * Test the property 'attachments'
     */
    @Test
    public void attachmentsTest() {
        // TODO: test attachments
    }

    /**
     * Test the property 'blocks'
     */
    @Test
    public void blocksTest() {
        // TODO: test blocks
    }

    /**
     * Test the property 'botId'
     */
    @Test
    public void botIdTest() {
        // TODO: test botId
    }

    /**
     * Test the property 'botProfile'
     */
    @Test
    public void botProfileTest() {
        // TODO: test botProfile
    }

    /**
     * Test the property 'clientMsgId'
     */
    @Test
    public void clientMsgIdTest() {
        // TODO: test clientMsgId
    }

    /**
     * Test the property 'comment'
     */
    @Test
    public void commentTest() {
        // TODO: test comment
    }

    /**
     * Test the property 'displayAsBot'
     */
    @Test
    public void displayAsBotTest() {
        // TODO: test displayAsBot
    }

    /**
     * Test the property '_file'
     */
    @Test
    public void _fileTest() {
        // TODO: test _file
    }

    /**
     * Test the property 'files'
     */
    @Test
    public void filesTest() {
        // TODO: test files
    }

    /**
     * Test the property 'icons'
     */
    @Test
    public void iconsTest() {
        // TODO: test icons
    }

    /**
     * Test the property 'inviter'
     */
    @Test
    public void inviterTest() {
        // TODO: test inviter
    }

    /**
     * Test the property 'isDelayedMessage'
     */
    @Test
    public void isDelayedMessageTest() {
        // TODO: test isDelayedMessage
    }

    /**
     * Test the property 'isIntro'
     */
    @Test
    public void isIntroTest() {
        // TODO: test isIntro
    }

    /**
     * Test the property 'isStarred'
     */
    @Test
    public void isStarredTest() {
        // TODO: test isStarred
    }

    /**
     * Test the property 'lastRead'
     */
    @Test
    public void lastReadTest() {
        // TODO: test lastRead
    }

    /**
     * Test the property 'latestReply'
     */
    @Test
    public void latestReplyTest() {
        // TODO: test latestReply
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'oldName'
     */
    @Test
    public void oldNameTest() {
        // TODO: test oldName
    }

    /**
     * Test the property 'parentUserId'
     */
    @Test
    public void parentUserIdTest() {
        // TODO: test parentUserId
    }

    /**
     * Test the property 'permalink'
     */
    @Test
    public void permalinkTest() {
        // TODO: test permalink
    }

    /**
     * Test the property 'pinnedTo'
     */
    @Test
    public void pinnedToTest() {
        // TODO: test pinnedTo
    }

    /**
     * Test the property 'purpose'
     */
    @Test
    public void purposeTest() {
        // TODO: test purpose
    }

    /**
     * Test the property 'reactions'
     */
    @Test
    public void reactionsTest() {
        // TODO: test reactions
    }

    /**
     * Test the property 'replyCount'
     */
    @Test
    public void replyCountTest() {
        // TODO: test replyCount
    }

    /**
     * Test the property 'replyUsers'
     */
    @Test
    public void replyUsersTest() {
        // TODO: test replyUsers
    }

    /**
     * Test the property 'replyUsersCount'
     */
    @Test
    public void replyUsersCountTest() {
        // TODO: test replyUsersCount
    }

    /**
     * Test the property 'sourceTeam'
     */
    @Test
    public void sourceTeamTest() {
        // TODO: test sourceTeam
    }

    /**
     * Test the property 'subscribed'
     */
    @Test
    public void subscribedTest() {
        // TODO: test subscribed
    }

    /**
     * Test the property 'subtype'
     */
    @Test
    public void subtypeTest() {
        // TODO: test subtype
    }

    /**
     * Test the property 'team'
     */
    @Test
    public void teamTest() {
        // TODO: test team
    }

    /**
     * Test the property 'text'
     */
    @Test
    public void textTest() {
        // TODO: test text
    }

    /**
     * Test the property 'threadTs'
     */
    @Test
    public void threadTsTest() {
        // TODO: test threadTs
    }

    /**
     * Test the property 'topic'
     */
    @Test
    public void topicTest() {
        // TODO: test topic
    }

    /**
     * Test the property 'ts'
     */
    @Test
    public void tsTest() {
        // TODO: test ts
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'unreadCount'
     */
    @Test
    public void unreadCountTest() {
        // TODO: test unreadCount
    }

    /**
     * Test the property 'upload'
     */
    @Test
    public void uploadTest() {
        // TODO: test upload
    }

    /**
     * Test the property 'user'
     */
    @Test
    public void userTest() {
        // TODO: test user
    }

    /**
     * Test the property 'userProfile'
     */
    @Test
    public void userProfileTest() {
        // TODO: test userProfile
    }

    /**
     * Test the property 'userTeam'
     */
    @Test
    public void userTeamTest() {
        // TODO: test userTeam
    }

    /**
     * Test the property 'username'
     */
    @Test
    public void usernameTest() {
        // TODO: test username
    }

}
