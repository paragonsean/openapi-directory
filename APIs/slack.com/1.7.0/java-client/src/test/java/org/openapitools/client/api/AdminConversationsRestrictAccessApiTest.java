/*
 * Slack Web API
 * One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.DefaultErrorTemplate;
import org.openapitools.client.model.DefaultSuccessTemplate;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AdminConversationsRestrictAccessApi
 */
@Disabled
public class AdminConversationsRestrictAccessApiTest {

    private final AdminConversationsRestrictAccessApi api = new AdminConversationsRestrictAccessApi();

    /**
     * Add an allowlist of IDP groups for accessing a channel
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void adminConversationsRestrictAccessAddGroupTest() throws ApiException {
        String channelId = null;
        String groupId = null;
        String token = null;
        String teamId = null;
        DefaultSuccessTemplate response = api.adminConversationsRestrictAccessAddGroup(channelId, groupId, token, teamId);
        // TODO: test validations
    }

    /**
     * List all IDP Groups linked to a channel
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void adminConversationsRestrictAccessListGroupsTest() throws ApiException {
        String token = null;
        String channelId = null;
        String teamId = null;
        DefaultSuccessTemplate response = api.adminConversationsRestrictAccessListGroups(token, channelId, teamId);
        // TODO: test validations
    }

    /**
     * Remove a linked IDP group linked from a private channel
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void adminConversationsRestrictAccessRemoveGroupTest() throws ApiException {
        String channelId = null;
        String groupId = null;
        String teamId = null;
        String token = null;
        DefaultSuccessTemplate response = api.adminConversationsRestrictAccessRemoveGroup(channelId, groupId, teamId, token);
        // TODO: test validations
    }

}
