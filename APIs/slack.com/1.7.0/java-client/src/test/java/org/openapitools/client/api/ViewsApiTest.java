/*
 * Slack Web API
 * One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.DefaultErrorTemplate;
import org.openapitools.client.model.DefaultSuccessTemplate;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ViewsApi
 */
@Disabled
public class ViewsApiTest {

    private final ViewsApi api = new ViewsApi();

    /**
     * Open a view for a user.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void viewsOpenTest() throws ApiException {
        String token = null;
        String triggerId = null;
        String view = null;
        DefaultSuccessTemplate response = api.viewsOpen(token, triggerId, view);
        // TODO: test validations
    }

    /**
     * Publish a static view for a User.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void viewsPublishTest() throws ApiException {
        String token = null;
        String userId = null;
        String view = null;
        String hash = null;
        DefaultSuccessTemplate response = api.viewsPublish(token, userId, view, hash);
        // TODO: test validations
    }

    /**
     * Push a view onto the stack of a root view.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void viewsPushTest() throws ApiException {
        String token = null;
        String triggerId = null;
        String view = null;
        DefaultSuccessTemplate response = api.viewsPush(token, triggerId, view);
        // TODO: test validations
    }

    /**
     * Update an existing view.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void viewsUpdateTest() throws ApiException {
        String token = null;
        String viewId = null;
        String externalId = null;
        String view = null;
        String hash = null;
        DefaultSuccessTemplate response = api.viewsUpdate(token, viewId, externalId, view, hash);
        // TODO: test validations
    }

}
