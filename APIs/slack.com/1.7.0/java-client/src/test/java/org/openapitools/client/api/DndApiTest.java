/*
 * Slack Web API
 * One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.DefaultErrorTemplate;
import org.openapitools.client.model.DefaultSuccessTemplate;
import org.openapitools.client.model.DndEndDndErrorSchema;
import org.openapitools.client.model.DndEndDndSchema;
import org.openapitools.client.model.DndEndSnoozeErrorSchema;
import org.openapitools.client.model.DndEndSnoozeSchema;
import org.openapitools.client.model.DndInfoErrorSchema;
import org.openapitools.client.model.DndInfoSchema;
import org.openapitools.client.model.DndSetSnoozeErrorSchema;
import org.openapitools.client.model.DndSetSnoozeSchema;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DndApi
 */
@Disabled
public class DndApiTest {

    private final DndApi api = new DndApi();

    /**
     * Ends the current user&#39;s Do Not Disturb session immediately.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dndEndDndTest() throws ApiException {
        String token = null;
        DndEndDndSchema response = api.dndEndDnd(token);
        // TODO: test validations
    }

    /**
     * Ends the current user&#39;s snooze mode immediately.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dndEndSnoozeTest() throws ApiException {
        String token = null;
        DndEndSnoozeSchema response = api.dndEndSnooze(token);
        // TODO: test validations
    }

    /**
     * Retrieves a user&#39;s current Do Not Disturb status.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dndInfoTest() throws ApiException {
        String token = null;
        String user = null;
        DndInfoSchema response = api.dndInfo(token, user);
        // TODO: test validations
    }

    /**
     * Turns on Do Not Disturb mode for the current user, or changes its duration.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dndSetSnoozeTest() throws ApiException {
        String numMinutes = null;
        String token = null;
        DndSetSnoozeSchema response = api.dndSetSnooze(numMinutes, token);
        // TODO: test validations
    }

    /**
     * Retrieves the Do Not Disturb status for up to 50 users on a team.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dndTeamInfoTest() throws ApiException {
        String token = null;
        String users = null;
        DefaultSuccessTemplate response = api.dndTeamInfo(token, users);
        // TODO: test validations
    }

}
