/*
 * Slack Web API
 * One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Set;
import org.openapitools.client.model.ObjsEnterpriseUser;
import org.openapitools.client.model.ObjsTeamDiscoverableInner;
import org.openapitools.client.model.ObjsUserInnerAnyOf;
import org.openapitools.client.model.ObjsUserInnerAnyOf1;
import org.openapitools.client.model.ObjsUserInnerAnyOfTeamProfile;
import org.openapitools.client.model.ObjsUserProfile;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for ObjsUserInner
 */
public class ObjsUserInnerTest {
    private final ObjsUserInner model = new ObjsUserInner();

    /**
     * Model tests for ObjsUserInner
     */
    @Test
    public void testObjsUserInner() {
        // TODO: test ObjsUserInner
    }

    /**
     * Test the property 'color'
     */
    @Test
    public void colorTest() {
        // TODO: test color
    }

    /**
     * Test the property 'deleted'
     */
    @Test
    public void deletedTest() {
        // TODO: test deleted
    }

    /**
     * Test the property 'enterpriseUser'
     */
    @Test
    public void enterpriseUserTest() {
        // TODO: test enterpriseUser
    }

    /**
     * Test the property 'has2fa'
     */
    @Test
    public void has2faTest() {
        // TODO: test has2fa
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'isAdmin'
     */
    @Test
    public void isAdminTest() {
        // TODO: test isAdmin
    }

    /**
     * Test the property 'isAppUser'
     */
    @Test
    public void isAppUserTest() {
        // TODO: test isAppUser
    }

    /**
     * Test the property 'isBot'
     */
    @Test
    public void isBotTest() {
        // TODO: test isBot
    }

    /**
     * Test the property 'isExternal'
     */
    @Test
    public void isExternalTest() {
        // TODO: test isExternal
    }

    /**
     * Test the property 'isForgotten'
     */
    @Test
    public void isForgottenTest() {
        // TODO: test isForgotten
    }

    /**
     * Test the property 'isInvitedUser'
     */
    @Test
    public void isInvitedUserTest() {
        // TODO: test isInvitedUser
    }

    /**
     * Test the property 'isOwner'
     */
    @Test
    public void isOwnerTest() {
        // TODO: test isOwner
    }

    /**
     * Test the property 'isPrimaryOwner'
     */
    @Test
    public void isPrimaryOwnerTest() {
        // TODO: test isPrimaryOwner
    }

    /**
     * Test the property 'isRestricted'
     */
    @Test
    public void isRestrictedTest() {
        // TODO: test isRestricted
    }

    /**
     * Test the property 'isStranger'
     */
    @Test
    public void isStrangerTest() {
        // TODO: test isStranger
    }

    /**
     * Test the property 'isUltraRestricted'
     */
    @Test
    public void isUltraRestrictedTest() {
        // TODO: test isUltraRestricted
    }

    /**
     * Test the property 'locale'
     */
    @Test
    public void localeTest() {
        // TODO: test locale
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'presence'
     */
    @Test
    public void presenceTest() {
        // TODO: test presence
    }

    /**
     * Test the property 'profile'
     */
    @Test
    public void profileTest() {
        // TODO: test profile
    }

    /**
     * Test the property 'realName'
     */
    @Test
    public void realNameTest() {
        // TODO: test realName
    }

    /**
     * Test the property 'team'
     */
    @Test
    public void teamTest() {
        // TODO: test team
    }

    /**
     * Test the property 'teamId'
     */
    @Test
    public void teamIdTest() {
        // TODO: test teamId
    }

    /**
     * Test the property 'teamProfile'
     */
    @Test
    public void teamProfileTest() {
        // TODO: test teamProfile
    }

    /**
     * Test the property 'twoFactorType'
     */
    @Test
    public void twoFactorTypeTest() {
        // TODO: test twoFactorType
    }

    /**
     * Test the property 'tz'
     */
    @Test
    public void tzTest() {
        // TODO: test tz
    }

    /**
     * Test the property 'tzLabel'
     */
    @Test
    public void tzLabelTest() {
        // TODO: test tzLabel
    }

    /**
     * Test the property 'tzOffset'
     */
    @Test
    public void tzOffsetTest() {
        // TODO: test tzOffset
    }

    /**
     * Test the property 'updated'
     */
    @Test
    public void updatedTest() {
        // TODO: test updated
    }

    /**
     * Test the property 'teams'
     */
    @Test
    public void teamsTest() {
        // TODO: test teams
    }

}
