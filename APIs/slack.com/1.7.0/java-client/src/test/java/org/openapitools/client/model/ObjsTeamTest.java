/*
 * Slack Web API
 * One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.net.URI;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ObjsExternalOrgMigrations;
import org.openapitools.client.model.ObjsIcon;
import org.openapitools.client.model.ObjsPrimaryOwner;
import org.openapitools.client.model.ObjsTeamDiscoverableInner;
import org.openapitools.client.model.ObjsTeamSsoProvider;
import org.openapitools.jackson.nullable.JsonNullable;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for ObjsTeam
 */
public class ObjsTeamTest {
    private final ObjsTeam model = new ObjsTeam();

    /**
     * Model tests for ObjsTeam
     */
    @Test
    public void testObjsTeam() {
        // TODO: test ObjsTeam
    }

    /**
     * Test the property 'archived'
     */
    @Test
    public void archivedTest() {
        // TODO: test archived
    }

    /**
     * Test the property 'avatarBaseUrl'
     */
    @Test
    public void avatarBaseUrlTest() {
        // TODO: test avatarBaseUrl
    }

    /**
     * Test the property 'created'
     */
    @Test
    public void createdTest() {
        // TODO: test created
    }

    /**
     * Test the property 'dateCreate'
     */
    @Test
    public void dateCreateTest() {
        // TODO: test dateCreate
    }

    /**
     * Test the property 'deleted'
     */
    @Test
    public void deletedTest() {
        // TODO: test deleted
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'discoverable'
     */
    @Test
    public void discoverableTest() {
        // TODO: test discoverable
    }

    /**
     * Test the property 'domain'
     */
    @Test
    public void domainTest() {
        // TODO: test domain
    }

    /**
     * Test the property 'emailDomain'
     */
    @Test
    public void emailDomainTest() {
        // TODO: test emailDomain
    }

    /**
     * Test the property 'enterpriseId'
     */
    @Test
    public void enterpriseIdTest() {
        // TODO: test enterpriseId
    }

    /**
     * Test the property 'enterpriseName'
     */
    @Test
    public void enterpriseNameTest() {
        // TODO: test enterpriseName
    }

    /**
     * Test the property 'externalOrgMigrations'
     */
    @Test
    public void externalOrgMigrationsTest() {
        // TODO: test externalOrgMigrations
    }

    /**
     * Test the property 'hasComplianceExport'
     */
    @Test
    public void hasComplianceExportTest() {
        // TODO: test hasComplianceExport
    }

    /**
     * Test the property 'icon'
     */
    @Test
    public void iconTest() {
        // TODO: test icon
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'isAssigned'
     */
    @Test
    public void isAssignedTest() {
        // TODO: test isAssigned
    }

    /**
     * Test the property 'isEnterprise'
     */
    @Test
    public void isEnterpriseTest() {
        // TODO: test isEnterprise
    }

    /**
     * Test the property 'isOverStorageLimit'
     */
    @Test
    public void isOverStorageLimitTest() {
        // TODO: test isOverStorageLimit
    }

    /**
     * Test the property 'limitTs'
     */
    @Test
    public void limitTsTest() {
        // TODO: test limitTs
    }

    /**
     * Test the property 'locale'
     */
    @Test
    public void localeTest() {
        // TODO: test locale
    }

    /**
     * Test the property 'messagesCount'
     */
    @Test
    public void messagesCountTest() {
        // TODO: test messagesCount
    }

    /**
     * Test the property 'msgEditWindowMins'
     */
    @Test
    public void msgEditWindowMinsTest() {
        // TODO: test msgEditWindowMins
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'overIntegrationsLimit'
     */
    @Test
    public void overIntegrationsLimitTest() {
        // TODO: test overIntegrationsLimit
    }

    /**
     * Test the property 'overStorageLimit'
     */
    @Test
    public void overStorageLimitTest() {
        // TODO: test overStorageLimit
    }

    /**
     * Test the property 'payProdCur'
     */
    @Test
    public void payProdCurTest() {
        // TODO: test payProdCur
    }

    /**
     * Test the property 'plan'
     */
    @Test
    public void planTest() {
        // TODO: test plan
    }

    /**
     * Test the property 'primaryOwner'
     */
    @Test
    public void primaryOwnerTest() {
        // TODO: test primaryOwner
    }

    /**
     * Test the property 'ssoProvider'
     */
    @Test
    public void ssoProviderTest() {
        // TODO: test ssoProvider
    }

}
