/*
 * Slack Web API
 * One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.UsersProfileGetErrorSchema;
import org.openapitools.client.model.UsersProfileGetSchema;
import org.openapitools.client.model.UsersProfileSetErrorSchema;
import org.openapitools.client.model.UsersProfileSetSchema;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for UsersProfileApi
 */
@Disabled
public class UsersProfileApiTest {

    private final UsersProfileApi api = new UsersProfileApi();

    /**
     * Retrieves a user&#39;s profile information.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void usersProfileGetTest() throws ApiException {
        String token = null;
        Boolean includeLabels = null;
        String user = null;
        UsersProfileGetSchema response = api.usersProfileGet(token, includeLabels, user);
        // TODO: test validations
    }

    /**
     * Set the profile information for a user.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void usersProfileSetTest() throws ApiException {
        String token = null;
        String name = null;
        String profile = null;
        String user = null;
        String value = null;
        UsersProfileSetSchema response = api.usersProfileSet(token, name, profile, user, value);
        // TODO: test validations
    }

}
