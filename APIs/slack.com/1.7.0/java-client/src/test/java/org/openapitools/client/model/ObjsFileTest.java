/*
 * Slack Web API
 * One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.net.URI;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Set;
import org.openapitools.client.model.ObjsFileShares;
import org.openapitools.client.model.ObjsReaction;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for ObjsFile
 */
public class ObjsFileTest {
    private final ObjsFile model = new ObjsFile();

    /**
     * Model tests for ObjsFile
     */
    @Test
    public void testObjsFile() {
        // TODO: test ObjsFile
    }

    /**
     * Test the property 'channels'
     */
    @Test
    public void channelsTest() {
        // TODO: test channels
    }

    /**
     * Test the property 'commentsCount'
     */
    @Test
    public void commentsCountTest() {
        // TODO: test commentsCount
    }

    /**
     * Test the property 'created'
     */
    @Test
    public void createdTest() {
        // TODO: test created
    }

    /**
     * Test the property 'dateDelete'
     */
    @Test
    public void dateDeleteTest() {
        // TODO: test dateDelete
    }

    /**
     * Test the property 'displayAsBot'
     */
    @Test
    public void displayAsBotTest() {
        // TODO: test displayAsBot
    }

    /**
     * Test the property 'editable'
     */
    @Test
    public void editableTest() {
        // TODO: test editable
    }

    /**
     * Test the property 'editor'
     */
    @Test
    public void editorTest() {
        // TODO: test editor
    }

    /**
     * Test the property 'externalId'
     */
    @Test
    public void externalIdTest() {
        // TODO: test externalId
    }

    /**
     * Test the property 'externalType'
     */
    @Test
    public void externalTypeTest() {
        // TODO: test externalType
    }

    /**
     * Test the property 'externalUrl'
     */
    @Test
    public void externalUrlTest() {
        // TODO: test externalUrl
    }

    /**
     * Test the property 'filetype'
     */
    @Test
    public void filetypeTest() {
        // TODO: test filetype
    }

    /**
     * Test the property 'groups'
     */
    @Test
    public void groupsTest() {
        // TODO: test groups
    }

    /**
     * Test the property 'hasRichPreview'
     */
    @Test
    public void hasRichPreviewTest() {
        // TODO: test hasRichPreview
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'imageExifRotation'
     */
    @Test
    public void imageExifRotationTest() {
        // TODO: test imageExifRotation
    }

    /**
     * Test the property 'ims'
     */
    @Test
    public void imsTest() {
        // TODO: test ims
    }

    /**
     * Test the property 'isExternal'
     */
    @Test
    public void isExternalTest() {
        // TODO: test isExternal
    }

    /**
     * Test the property 'isPublic'
     */
    @Test
    public void isPublicTest() {
        // TODO: test isPublic
    }

    /**
     * Test the property 'isStarred'
     */
    @Test
    public void isStarredTest() {
        // TODO: test isStarred
    }

    /**
     * Test the property 'isTombstoned'
     */
    @Test
    public void isTombstonedTest() {
        // TODO: test isTombstoned
    }

    /**
     * Test the property 'lastEditor'
     */
    @Test
    public void lastEditorTest() {
        // TODO: test lastEditor
    }

    /**
     * Test the property 'mimetype'
     */
    @Test
    public void mimetypeTest() {
        // TODO: test mimetype
    }

    /**
     * Test the property 'mode'
     */
    @Test
    public void modeTest() {
        // TODO: test mode
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'nonOwnerEditable'
     */
    @Test
    public void nonOwnerEditableTest() {
        // TODO: test nonOwnerEditable
    }

    /**
     * Test the property 'numStars'
     */
    @Test
    public void numStarsTest() {
        // TODO: test numStars
    }

    /**
     * Test the property 'originalH'
     */
    @Test
    public void originalHTest() {
        // TODO: test originalH
    }

    /**
     * Test the property 'originalW'
     */
    @Test
    public void originalWTest() {
        // TODO: test originalW
    }

    /**
     * Test the property 'permalink'
     */
    @Test
    public void permalinkTest() {
        // TODO: test permalink
    }

    /**
     * Test the property 'permalinkPublic'
     */
    @Test
    public void permalinkPublicTest() {
        // TODO: test permalinkPublic
    }

    /**
     * Test the property 'pinnedInfo'
     */
    @Test
    public void pinnedInfoTest() {
        // TODO: test pinnedInfo
    }

    /**
     * Test the property 'pinnedTo'
     */
    @Test
    public void pinnedToTest() {
        // TODO: test pinnedTo
    }

    /**
     * Test the property 'prettyType'
     */
    @Test
    public void prettyTypeTest() {
        // TODO: test prettyType
    }

    /**
     * Test the property 'preview'
     */
    @Test
    public void previewTest() {
        // TODO: test preview
    }

    /**
     * Test the property 'publicUrlShared'
     */
    @Test
    public void publicUrlSharedTest() {
        // TODO: test publicUrlShared
    }

    /**
     * Test the property 'reactions'
     */
    @Test
    public void reactionsTest() {
        // TODO: test reactions
    }

    /**
     * Test the property 'shares'
     */
    @Test
    public void sharesTest() {
        // TODO: test shares
    }

    /**
     * Test the property 'size'
     */
    @Test
    public void sizeTest() {
        // TODO: test size
    }

    /**
     * Test the property 'sourceTeam'
     */
    @Test
    public void sourceTeamTest() {
        // TODO: test sourceTeam
    }

    /**
     * Test the property 'state'
     */
    @Test
    public void stateTest() {
        // TODO: test state
    }

    /**
     * Test the property 'thumb1024'
     */
    @Test
    public void thumb1024Test() {
        // TODO: test thumb1024
    }

    /**
     * Test the property 'thumb1024H'
     */
    @Test
    public void thumb1024HTest() {
        // TODO: test thumb1024H
    }

    /**
     * Test the property 'thumb1024W'
     */
    @Test
    public void thumb1024WTest() {
        // TODO: test thumb1024W
    }

    /**
     * Test the property 'thumb160'
     */
    @Test
    public void thumb160Test() {
        // TODO: test thumb160
    }

    /**
     * Test the property 'thumb360'
     */
    @Test
    public void thumb360Test() {
        // TODO: test thumb360
    }

    /**
     * Test the property 'thumb360H'
     */
    @Test
    public void thumb360HTest() {
        // TODO: test thumb360H
    }

    /**
     * Test the property 'thumb360W'
     */
    @Test
    public void thumb360WTest() {
        // TODO: test thumb360W
    }

    /**
     * Test the property 'thumb480'
     */
    @Test
    public void thumb480Test() {
        // TODO: test thumb480
    }

    /**
     * Test the property 'thumb480H'
     */
    @Test
    public void thumb480HTest() {
        // TODO: test thumb480H
    }

    /**
     * Test the property 'thumb480W'
     */
    @Test
    public void thumb480WTest() {
        // TODO: test thumb480W
    }

    /**
     * Test the property 'thumb64'
     */
    @Test
    public void thumb64Test() {
        // TODO: test thumb64
    }

    /**
     * Test the property 'thumb720'
     */
    @Test
    public void thumb720Test() {
        // TODO: test thumb720
    }

    /**
     * Test the property 'thumb720H'
     */
    @Test
    public void thumb720HTest() {
        // TODO: test thumb720H
    }

    /**
     * Test the property 'thumb720W'
     */
    @Test
    public void thumb720WTest() {
        // TODO: test thumb720W
    }

    /**
     * Test the property 'thumb80'
     */
    @Test
    public void thumb80Test() {
        // TODO: test thumb80
    }

    /**
     * Test the property 'thumb800'
     */
    @Test
    public void thumb800Test() {
        // TODO: test thumb800
    }

    /**
     * Test the property 'thumb800H'
     */
    @Test
    public void thumb800HTest() {
        // TODO: test thumb800H
    }

    /**
     * Test the property 'thumb800W'
     */
    @Test
    public void thumb800WTest() {
        // TODO: test thumb800W
    }

    /**
     * Test the property 'thumb960'
     */
    @Test
    public void thumb960Test() {
        // TODO: test thumb960
    }

    /**
     * Test the property 'thumb960H'
     */
    @Test
    public void thumb960HTest() {
        // TODO: test thumb960H
    }

    /**
     * Test the property 'thumb960W'
     */
    @Test
    public void thumb960WTest() {
        // TODO: test thumb960W
    }

    /**
     * Test the property 'thumbTiny'
     */
    @Test
    public void thumbTinyTest() {
        // TODO: test thumbTiny
    }

    /**
     * Test the property 'timestamp'
     */
    @Test
    public void timestampTest() {
        // TODO: test timestamp
    }

    /**
     * Test the property 'title'
     */
    @Test
    public void titleTest() {
        // TODO: test title
    }

    /**
     * Test the property 'updated'
     */
    @Test
    public void updatedTest() {
        // TODO: test updated
    }

    /**
     * Test the property 'urlPrivate'
     */
    @Test
    public void urlPrivateTest() {
        // TODO: test urlPrivate
    }

    /**
     * Test the property 'urlPrivateDownload'
     */
    @Test
    public void urlPrivateDownloadTest() {
        // TODO: test urlPrivateDownload
    }

    /**
     * Test the property 'user'
     */
    @Test
    public void userTest() {
        // TODO: test user
    }

    /**
     * Test the property 'userTeam'
     */
    @Test
    public void userTeamTest() {
        // TODO: test userTeam
    }

    /**
     * Test the property 'username'
     */
    @Test
    public void usernameTest() {
        // TODO: test username
    }

}
