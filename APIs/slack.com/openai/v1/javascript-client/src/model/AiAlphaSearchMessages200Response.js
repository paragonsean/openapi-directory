/**
 * Slack AI Plugin
 * A plugin that allows users to interact with Slack using ChatGPT
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Result from './Result';

/**
 * The AiAlphaSearchMessages200Response model module.
 * @module model/AiAlphaSearchMessages200Response
 * @version v1
 */
class AiAlphaSearchMessages200Response {
    /**
     * Constructs a new <code>AiAlphaSearchMessages200Response</code>.
     * @alias module:model/AiAlphaSearchMessages200Response
     * @param ok {Boolean} Boolean indicating whether or not the request was successful
     */
    constructor(ok) { 
        
        AiAlphaSearchMessages200Response.initialize(this, ok);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, ok) { 
        obj['ok'] = ok;
    }

    /**
     * Constructs a <code>AiAlphaSearchMessages200Response</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AiAlphaSearchMessages200Response} obj Optional instance to populate.
     * @return {module:model/AiAlphaSearchMessages200Response} The populated <code>AiAlphaSearchMessages200Response</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AiAlphaSearchMessages200Response();

            if (data.hasOwnProperty('ok')) {
                obj['ok'] = ApiClient.convertToType(data['ok'], 'Boolean');
            }
            if (data.hasOwnProperty('results')) {
                obj['results'] = ApiClient.convertToType(data['results'], [Result]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AiAlphaSearchMessages200Response</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AiAlphaSearchMessages200Response</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AiAlphaSearchMessages200Response.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['results']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['results'])) {
                throw new Error("Expected the field `results` to be an array in the JSON data but got " + data['results']);
            }
            // validate the optional field `results` (array)
            for (const item of data['results']) {
                Result.validateJSON(item);
            };
        }

        return true;
    }


}

AiAlphaSearchMessages200Response.RequiredProperties = ["ok"];

/**
 * Boolean indicating whether or not the request was successful
 * @member {Boolean} ok
 */
AiAlphaSearchMessages200Response.prototype['ok'] = undefined;

/**
 * @member {Array.<module:model/Result>} results
 */
AiAlphaSearchMessages200Response.prototype['results'] = undefined;






export default AiAlphaSearchMessages200Response;

