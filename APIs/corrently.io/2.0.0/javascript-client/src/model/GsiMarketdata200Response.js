/**
 * Corrently.io
 * *Corrently - from italian corrente, which is energy* # Introduction The Corrently ecosystem gets maintained by [STROMDAO GmbH](https://www.stromdao.de/) to support green energy services for prosumers, grid operators, regulators, integrators or any other party with an emerging need of consensus driven management. As the [energy product Corrently](https://www.corrently.de/) got first launched in Germany parts of this documentation provide simple translations for better understanding. [Released SKDs for Download](https://github.com/energychain/corrently-api/releases) 
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: dev@stromdao.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import MarketData from './MarketData';

/**
 * The GsiMarketdata200Response model module.
 * @module model/GsiMarketdata200Response
 * @version 2.0.0
 */
class GsiMarketdata200Response {
    /**
     * Constructs a new <code>GsiMarketdata200Response</code>.
     * @alias module:model/GsiMarketdata200Response
     */
    constructor() { 
        
        GsiMarketdata200Response.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GsiMarketdata200Response</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GsiMarketdata200Response} obj Optional instance to populate.
     * @return {module:model/GsiMarketdata200Response} The populated <code>GsiMarketdata200Response</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GsiMarketdata200Response();

            if (data.hasOwnProperty('data')) {
                obj['data'] = ApiClient.convertToType(data['data'], [MarketData]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GsiMarketdata200Response</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GsiMarketdata200Response</code>.
     */
    static validateJSON(data) {
        if (data['data']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['data'])) {
                throw new Error("Expected the field `data` to be an array in the JSON data but got " + data['data']);
            }
            // validate the optional field `data` (array)
            for (const item of data['data']) {
                MarketData.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Energyprice for the upcomming hours
 * @member {Array.<module:model/MarketData>} data
 */
GsiMarketdata200Response.prototype['data'] = undefined;






export default GsiMarketdata200Response;

