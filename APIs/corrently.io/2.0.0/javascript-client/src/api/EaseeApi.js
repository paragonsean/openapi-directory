/**
 * Corrently.io
 * *Corrently - from italian corrente, which is energy* # Introduction The Corrently ecosystem gets maintained by [STROMDAO GmbH](https://www.stromdao.de/) to support green energy services for prosumers, grid operators, regulators, integrators or any other party with an emerging need of consensus driven management. As the [energy product Corrently](https://www.corrently.de/) got first launched in Germany parts of this documentation provide simple translations for better understanding. [Released SKDs for Download](https://github.com/energychain/corrently-api/releases) 
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: dev@stromdao.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import EaseeCharger from '../model/EaseeCharger';

/**
* Easee service.
* @module api/EaseeApi
* @version 2.0.0
*/
export default class EaseeApi {

    /**
    * Constructs a new EaseeApi. 
    * @alias module:api/EaseeApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the easeeSessions operation.
     * @callback module:api/EaseeApi~easeeSessionsCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/EaseeCharger>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns lastSession info for all easee wallboxes (chargers) given user has access to.
     * Refer to easee.cloud API for details. 
     * @param {Object} opts Optional parameters
     * @param {String} [username] Username as used on easy.cloud
     * @param {String} [password] Password as used on easy.cloud
     * @param {module:api/EaseeApi~easeeSessionsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/EaseeCharger>}
     */
    easeeSessions(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'username': opts['username'],
        'password': opts['password']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [EaseeCharger];
      return this.apiClient.callApi(
        '/alternative/easee/lastSessions', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
