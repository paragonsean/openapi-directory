/*
 * Corrently.io
 * *Corrently - from italian corrente, which is energy* # Introduction The Corrently ecosystem gets maintained by [STROMDAO GmbH](https://www.stromdao.de/) to support green energy services for prosumers, grid operators, regulators, integrators or any other party with an emerging need of consensus driven management. As the [energy product Corrently](https://www.corrently.de/) got first launched in Germany parts of this documentation provide simple translations for better understanding. [Released SKDs for Download](https://github.com/energychain/corrently-api/releases) 
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: dev@stromdao.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Ommeters
 */
public class OmmetersTest {
    private final Ommeters model = new Ommeters();

    /**
     * Model tests for Ommeters
     */
    @Test
    public void testOmmeters() {
        // TODO: test Ommeters
    }

    /**
     * Test the property 'currentScalingFactor'
     */
    @Test
    public void currentScalingFactorTest() {
        // TODO: test currentScalingFactor
    }

    /**
     * Test the property 'loadProfileType'
     */
    @Test
    public void loadProfileTypeTest() {
        // TODO: test loadProfileType
    }

    /**
     * Test the property 'location'
     */
    @Test
    public void locationTest() {
        // TODO: test location
    }

    /**
     * Test the property 'manufacturerId'
     */
    @Test
    public void manufacturerIdTest() {
        // TODO: test manufacturerId
    }

    /**
     * Test the property 'measurementType'
     */
    @Test
    public void measurementTypeTest() {
        // TODO: test measurementType
    }

    /**
     * Test the property 'meta'
     */
    @Test
    public void metaTest() {
        // TODO: test meta
    }

    /**
     * Test the property 'meterId'
     */
    @Test
    public void meterIdTest() {
        // TODO: test meterId
    }

    /**
     * Test the property 'scalingFactor'
     */
    @Test
    public void scalingFactorTest() {
        // TODO: test scalingFactor
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'voltageScalingFactor'
     */
    @Test
    public void voltageScalingFactorTest() {
        // TODO: test voltageScalingFactor
    }

}
