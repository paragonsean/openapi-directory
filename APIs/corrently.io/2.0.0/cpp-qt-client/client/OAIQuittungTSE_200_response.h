/**
 * Corrently.io
 * *Corrently - from italian corrente, which is energy* # Introduction The Corrently ecosystem gets maintained by [STROMDAO GmbH](https://www.stromdao.de/) to support green energy services for prosumers, grid operators, regulators, integrators or any other party with an emerging need of consensus driven management. As the [energy product Corrently](https://www.corrently.de/) got first launched in Germany parts of this documentation provide simple translations for better understanding. [Released SKDs for Download](https://github.com/energychain/corrently-api/releases) 
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: dev@stromdao.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIQuittungTSE_200_response.h
 *
 * 
 */

#ifndef OAIQuittungTSE_200_response_H
#define OAIQuittungTSE_200_response_H

#include <QJsonObject>

#include <QJsonValue>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIQuittungTSE_200_response : public OAIObject {
public:
    OAIQuittungTSE_200_response();
    OAIQuittungTSE_200_response(QString json);
    ~OAIQuittungTSE_200_response() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QJsonValue getData() const;
    void setData(const QJsonValue &data);
    bool is_data_Set() const;
    bool is_data_Valid() const;

    QString getPublickey() const;
    void setPublickey(const QString &publickey);
    bool is_publickey_Set() const;
    bool is_publickey_Valid() const;

    QString getRaw() const;
    void setRaw(const QString &raw);
    bool is_raw_Set() const;
    bool is_raw_Valid() const;

    QString getSignature() const;
    void setSignature(const QString &signature);
    bool is_signature_Set() const;
    bool is_signature_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QJsonValue m_data;
    bool m_data_isSet;
    bool m_data_isValid;

    QString m_publickey;
    bool m_publickey_isSet;
    bool m_publickey_isValid;

    QString m_raw;
    bool m_raw_isSet;
    bool m_raw_isValid;

    QString m_signature;
    bool m_signature_isSet;
    bool m_signature_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIQuittungTSE_200_response)

#endif // OAIQuittungTSE_200_response_H
