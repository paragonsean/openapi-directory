/**
 * Corrently.io
 * *Corrently - from italian corrente, which is energy* # Introduction The Corrently ecosystem gets maintained by [STROMDAO GmbH](https://www.stromdao.de/) to support green energy services for prosumers, grid operators, regulators, integrators or any other party with an emerging need of consensus driven management. As the [energy product Corrently](https://www.corrently.de/) got first launched in Germany parts of this documentation provide simple translations for better understanding. [Released SKDs for Download](https://github.com/energychain/corrently-api/releases) 
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: dev@stromdao.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIStromkontoRegister_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIStromkontoRegister_request::OAIStromkontoRegister_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIStromkontoRegister_request::OAIStromkontoRegister_request() {
    this->initializeModel();
}

OAIStromkontoRegister_request::~OAIStromkontoRegister_request() {}

void OAIStromkontoRegister_request::initializeModel() {

    m_email_isSet = false;
    m_email_isValid = false;

    m_first_name_isSet = false;
    m_first_name_isValid = false;

    m_last_name_isSet = false;
    m_last_name_isValid = false;

    m_zipcode_isSet = false;
    m_zipcode_isValid = false;
}

void OAIStromkontoRegister_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIStromkontoRegister_request::fromJsonObject(QJsonObject json) {

    m_email_isValid = ::OpenAPI::fromJsonValue(m_email, json[QString("email")]);
    m_email_isSet = !json[QString("email")].isNull() && m_email_isValid;

    m_first_name_isValid = ::OpenAPI::fromJsonValue(m_first_name, json[QString("first_name")]);
    m_first_name_isSet = !json[QString("first_name")].isNull() && m_first_name_isValid;

    m_last_name_isValid = ::OpenAPI::fromJsonValue(m_last_name, json[QString("last_name")]);
    m_last_name_isSet = !json[QString("last_name")].isNull() && m_last_name_isValid;

    m_zipcode_isValid = ::OpenAPI::fromJsonValue(m_zipcode, json[QString("zipcode")]);
    m_zipcode_isSet = !json[QString("zipcode")].isNull() && m_zipcode_isValid;
}

QString OAIStromkontoRegister_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIStromkontoRegister_request::asJsonObject() const {
    QJsonObject obj;
    if (m_email_isSet) {
        obj.insert(QString("email"), ::OpenAPI::toJsonValue(m_email));
    }
    if (m_first_name_isSet) {
        obj.insert(QString("first_name"), ::OpenAPI::toJsonValue(m_first_name));
    }
    if (m_last_name_isSet) {
        obj.insert(QString("last_name"), ::OpenAPI::toJsonValue(m_last_name));
    }
    if (m_zipcode_isSet) {
        obj.insert(QString("zipcode"), ::OpenAPI::toJsonValue(m_zipcode));
    }
    return obj;
}

QString OAIStromkontoRegister_request::getEmail() const {
    return m_email;
}
void OAIStromkontoRegister_request::setEmail(const QString &email) {
    m_email = email;
    m_email_isSet = true;
}

bool OAIStromkontoRegister_request::is_email_Set() const{
    return m_email_isSet;
}

bool OAIStromkontoRegister_request::is_email_Valid() const{
    return m_email_isValid;
}

QString OAIStromkontoRegister_request::getFirstName() const {
    return m_first_name;
}
void OAIStromkontoRegister_request::setFirstName(const QString &first_name) {
    m_first_name = first_name;
    m_first_name_isSet = true;
}

bool OAIStromkontoRegister_request::is_first_name_Set() const{
    return m_first_name_isSet;
}

bool OAIStromkontoRegister_request::is_first_name_Valid() const{
    return m_first_name_isValid;
}

QString OAIStromkontoRegister_request::getLastName() const {
    return m_last_name;
}
void OAIStromkontoRegister_request::setLastName(const QString &last_name) {
    m_last_name = last_name;
    m_last_name_isSet = true;
}

bool OAIStromkontoRegister_request::is_last_name_Set() const{
    return m_last_name_isSet;
}

bool OAIStromkontoRegister_request::is_last_name_Valid() const{
    return m_last_name_isValid;
}

QString OAIStromkontoRegister_request::getZipcode() const {
    return m_zipcode;
}
void OAIStromkontoRegister_request::setZipcode(const QString &zipcode) {
    m_zipcode = zipcode;
    m_zipcode_isSet = true;
}

bool OAIStromkontoRegister_request::is_zipcode_Set() const{
    return m_zipcode_isSet;
}

bool OAIStromkontoRegister_request::is_zipcode_Valid() const{
    return m_zipcode_isValid;
}

bool OAIStromkontoRegister_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_first_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_zipcode_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIStromkontoRegister_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
