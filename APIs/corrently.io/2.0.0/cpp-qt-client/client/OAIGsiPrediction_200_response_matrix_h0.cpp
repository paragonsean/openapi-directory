/**
 * Corrently.io
 * *Corrently - from italian corrente, which is energy* # Introduction The Corrently ecosystem gets maintained by [STROMDAO GmbH](https://www.stromdao.de/) to support green energy services for prosumers, grid operators, regulators, integrators or any other party with an emerging need of consensus driven management. As the [energy product Corrently](https://www.corrently.de/) got first launched in Germany parts of this documentation provide simple translations for better understanding. [Released SKDs for Download](https://github.com/energychain/corrently-api/releases) 
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: dev@stromdao.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGsiPrediction_200_response_matrix_h0.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGsiPrediction_200_response_matrix_h0::OAIGsiPrediction_200_response_matrix_h0(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGsiPrediction_200_response_matrix_h0::OAIGsiPrediction_200_response_matrix_h0() {
    this->initializeModel();
}

OAIGsiPrediction_200_response_matrix_h0::~OAIGsiPrediction_200_response_matrix_h0() {}

void OAIGsiPrediction_200_response_matrix_h0::initializeModel() {

    m_avg_1_isSet = false;
    m_avg_1_isValid = false;

    m_avg_2_isSet = false;
    m_avg_2_isValid = false;

    m_avg_3_isSet = false;
    m_avg_3_isValid = false;
}

void OAIGsiPrediction_200_response_matrix_h0::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGsiPrediction_200_response_matrix_h0::fromJsonObject(QJsonObject json) {

    m_avg_1_isValid = ::OpenAPI::fromJsonValue(m_avg_1, json[QString("avg_1")]);
    m_avg_1_isSet = !json[QString("avg_1")].isNull() && m_avg_1_isValid;

    m_avg_2_isValid = ::OpenAPI::fromJsonValue(m_avg_2, json[QString("avg_2")]);
    m_avg_2_isSet = !json[QString("avg_2")].isNull() && m_avg_2_isValid;

    m_avg_3_isValid = ::OpenAPI::fromJsonValue(m_avg_3, json[QString("avg_3")]);
    m_avg_3_isSet = !json[QString("avg_3")].isNull() && m_avg_3_isValid;
}

QString OAIGsiPrediction_200_response_matrix_h0::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGsiPrediction_200_response_matrix_h0::asJsonObject() const {
    QJsonObject obj;
    if (m_avg_1_isSet) {
        obj.insert(QString("avg_1"), ::OpenAPI::toJsonValue(m_avg_1));
    }
    if (m_avg_2_isSet) {
        obj.insert(QString("avg_2"), ::OpenAPI::toJsonValue(m_avg_2));
    }
    if (m_avg_3_isSet) {
        obj.insert(QString("avg_3"), ::OpenAPI::toJsonValue(m_avg_3));
    }
    return obj;
}

QString OAIGsiPrediction_200_response_matrix_h0::getAvg1() const {
    return m_avg_1;
}
void OAIGsiPrediction_200_response_matrix_h0::setAvg1(const QString &avg_1) {
    m_avg_1 = avg_1;
    m_avg_1_isSet = true;
}

bool OAIGsiPrediction_200_response_matrix_h0::is_avg_1_Set() const{
    return m_avg_1_isSet;
}

bool OAIGsiPrediction_200_response_matrix_h0::is_avg_1_Valid() const{
    return m_avg_1_isValid;
}

QString OAIGsiPrediction_200_response_matrix_h0::getAvg2() const {
    return m_avg_2;
}
void OAIGsiPrediction_200_response_matrix_h0::setAvg2(const QString &avg_2) {
    m_avg_2 = avg_2;
    m_avg_2_isSet = true;
}

bool OAIGsiPrediction_200_response_matrix_h0::is_avg_2_Set() const{
    return m_avg_2_isSet;
}

bool OAIGsiPrediction_200_response_matrix_h0::is_avg_2_Valid() const{
    return m_avg_2_isValid;
}

QString OAIGsiPrediction_200_response_matrix_h0::getAvg3() const {
    return m_avg_3;
}
void OAIGsiPrediction_200_response_matrix_h0::setAvg3(const QString &avg_3) {
    m_avg_3 = avg_3;
    m_avg_3_isSet = true;
}

bool OAIGsiPrediction_200_response_matrix_h0::is_avg_3_Set() const{
    return m_avg_3_isSet;
}

bool OAIGsiPrediction_200_response_matrix_h0::is_avg_3_Valid() const{
    return m_avg_3_isValid;
}

bool OAIGsiPrediction_200_response_matrix_h0::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_avg_1_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_avg_2_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_avg_3_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGsiPrediction_200_response_matrix_h0::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
