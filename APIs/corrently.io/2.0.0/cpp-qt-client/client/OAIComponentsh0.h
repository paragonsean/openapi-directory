/**
 * Corrently.io
 * *Corrently - from italian corrente, which is energy* # Introduction The Corrently ecosystem gets maintained by [STROMDAO GmbH](https://www.stromdao.de/) to support green energy services for prosumers, grid operators, regulators, integrators or any other party with an emerging need of consensus driven management. As the [energy product Corrently](https://www.corrently.de/) got first launched in Germany parts of this documentation provide simple translations for better understanding. [Released SKDs for Download](https://github.com/energychain/corrently-api/releases) 
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: dev@stromdao.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIComponentsh0.h
 *
 * 
 */

#ifndef OAIComponentsh0_H
#define OAIComponentsh0_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIComponentsh0 : public OAIObject {
public:
    OAIComponentsh0();
    OAIComponentsh0(QString json);
    ~OAIComponentsh0() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIComponentsh0> getComponents() const;
    void setComponents(const QList<OAIComponentsh0> &components);
    bool is_components_Set() const;
    bool is_components_Valid() const;

    QString getDescribtion() const;
    void setDescribtion(const QString &describtion);
    bool is_describtion_Set() const;
    bool is_describtion_Valid() const;

    QString getMutlityplier() const;
    void setMutlityplier(const QString &mutlityplier);
    bool is_mutlityplier_Set() const;
    bool is_mutlityplier_Valid() const;

    double getPer() const;
    void setPer(const double &per);
    bool is_per_Set() const;
    bool is_per_Valid() const;

    double getSum() const;
    void setSum(const double &sum);
    bool is_sum_Set() const;
    bool is_sum_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIComponentsh0> m_components;
    bool m_components_isSet;
    bool m_components_isValid;

    QString m_describtion;
    bool m_describtion_isSet;
    bool m_describtion_isValid;

    QString m_mutlityplier;
    bool m_mutlityplier_isSet;
    bool m_mutlityplier_isValid;

    double m_per;
    bool m_per_isSet;
    bool m_per_isValid;

    double m_sum;
    bool m_sum_isSet;
    bool m_sum_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIComponentsh0)

#endif // OAIComponentsh0_H
