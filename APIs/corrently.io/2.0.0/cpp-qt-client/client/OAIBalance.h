/**
 * Corrently.io
 * *Corrently - from italian corrente, which is energy* # Introduction The Corrently ecosystem gets maintained by [STROMDAO GmbH](https://www.stromdao.de/) to support green energy services for prosumers, grid operators, regulators, integrators or any other party with an emerging need of consensus driven management. As the [energy product Corrently](https://www.corrently.de/) got first launched in Germany parts of this documentation provide simple translations for better understanding. [Released SKDs for Download](https://github.com/energychain/corrently-api/releases) 
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: dev@stromdao.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBalance.h
 *
 * 
 */

#ifndef OAIBalance_H
#define OAIBalance_H

#include <QJsonObject>

#include "OAITransactions.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITransactions;

class OAIBalance : public OAIObject {
public:
    OAIBalance();
    OAIBalance(QString json);
    ~OAIBalance() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getBalance() const;
    void setBalance(const qint32 &balance);
    bool is_balance_Set() const;
    bool is_balance_Valid() const;

    qint32 getHaben() const;
    void setHaben(const qint32 &haben);
    bool is_haben_Set() const;
    bool is_haben_Valid() const;

    qint32 getSoll() const;
    void setSoll(const qint32 &soll);
    bool is_soll_Set() const;
    bool is_soll_Valid() const;

    QList<OAITransactions> getTxs() const;
    void setTxs(const QList<OAITransactions> &txs);
    bool is_txs_Set() const;
    bool is_txs_Valid() const;

    QString getVariation() const;
    void setVariation(const QString &variation);
    bool is_variation_Set() const;
    bool is_variation_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_balance;
    bool m_balance_isSet;
    bool m_balance_isValid;

    qint32 m_haben;
    bool m_haben_isSet;
    bool m_haben_isValid;

    qint32 m_soll;
    bool m_soll_isSet;
    bool m_soll_isValid;

    QList<OAITransactions> m_txs;
    bool m_txs_isSet;
    bool m_txs_isValid;

    QString m_variation;
    bool m_variation_isSet;
    bool m_variation_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBalance)

#endif // OAIBalance_H
