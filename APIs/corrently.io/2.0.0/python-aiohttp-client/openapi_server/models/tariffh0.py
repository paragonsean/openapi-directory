# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Tariffh0(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ap: int=None, gp: int=None):
        """Tariffh0 - a model defined in OpenAPI

        :param ap: The ap of this Tariffh0.
        :param gp: The gp of this Tariffh0.
        """
        self.openapi_types = {
            'ap': int,
            'gp': int
        }

        self.attribute_map = {
            'ap': 'ap',
            'gp': 'gp'
        }

        self._ap = ap
        self._gp = gp

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Tariffh0':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Tariffh0 of this Tariffh0.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ap(self):
        """Gets the ap of this Tariffh0.

        Energy price in cent per kwh. (Arbeitspreis) including all taxes and fees.

        :return: The ap of this Tariffh0.
        :rtype: int
        """
        return self._ap

    @ap.setter
    def ap(self, ap):
        """Sets the ap of this Tariffh0.

        Energy price in cent per kwh. (Arbeitspreis) including all taxes and fees.

        :param ap: The ap of this Tariffh0.
        :type ap: int
        """

        self._ap = ap

    @property
    def gp(self):
        """Gets the gp of this Tariffh0.

        Base price in euro per montah (Grundpreis) including all taxes and fees.

        :return: The gp of this Tariffh0.
        :rtype: int
        """
        return self._gp

    @gp.setter
    def gp(self, gp):
        """Sets the gp of this Tariffh0.

        Base price in euro per montah (Grundpreis) including all taxes and fees.

        :param gp: The gp of this Tariffh0.
        :type gp: int
        """

        self._gp = gp
