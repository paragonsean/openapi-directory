# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.forecast_item import ForecastItem
from openapi_server.models.gsi_prediction200_response_location import GsiPrediction200ResponseLocation
from openapi_server.models.gsi_prediction200_response_matrix import GsiPrediction200ResponseMatrix
from openapi_server import util


class GsiPrediction200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, forecast: List[ForecastItem]=None, location: GsiPrediction200ResponseLocation=None, matrix: GsiPrediction200ResponseMatrix=None):
        """GsiPrediction200Response - a model defined in OpenAPI

        :param forecast: The forecast of this GsiPrediction200Response.
        :param location: The location of this GsiPrediction200Response.
        :param matrix: The matrix of this GsiPrediction200Response.
        """
        self.openapi_types = {
            'forecast': List[ForecastItem],
            'location': GsiPrediction200ResponseLocation,
            'matrix': GsiPrediction200ResponseMatrix
        }

        self.attribute_map = {
            'forecast': 'forecast',
            'location': 'location',
            'matrix': 'matrix'
        }

        self._forecast = forecast
        self._location = location
        self._matrix = matrix

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GsiPrediction200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The gsiPrediction_200_response of this GsiPrediction200Response.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def forecast(self):
        """Gets the forecast of this GsiPrediction200Response.

        Prediction for the upcomming hours

        :return: The forecast of this GsiPrediction200Response.
        :rtype: List[ForecastItem]
        """
        return self._forecast

    @forecast.setter
    def forecast(self, forecast):
        """Sets the forecast of this GsiPrediction200Response.

        Prediction for the upcomming hours

        :param forecast: The forecast of this GsiPrediction200Response.
        :type forecast: List[ForecastItem]
        """

        self._forecast = forecast

    @property
    def location(self):
        """Gets the location of this GsiPrediction200Response.


        :return: The location of this GsiPrediction200Response.
        :rtype: GsiPrediction200ResponseLocation
        """
        return self._location

    @location.setter
    def location(self, location):
        """Sets the location of this GsiPrediction200Response.


        :param location: The location of this GsiPrediction200Response.
        :type location: GsiPrediction200ResponseLocation
        """

        self._location = location

    @property
    def matrix(self):
        """Gets the matrix of this GsiPrediction200Response.


        :return: The matrix of this GsiPrediction200Response.
        :rtype: GsiPrediction200ResponseMatrix
        """
        return self._matrix

    @matrix.setter
    def matrix(self, matrix):
        """Sets the matrix of this GsiPrediction200Response.


        :param matrix: The matrix of this GsiPrediction200Response.
        :type matrix: GsiPrediction200ResponseMatrix
        """

        self._matrix = matrix
