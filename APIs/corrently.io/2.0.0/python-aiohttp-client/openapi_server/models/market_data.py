# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class MarketData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, end_timestamp: int=None, marketprice: float=None, start_timestamp: int=None):
        """MarketData - a model defined in OpenAPI

        :param end_timestamp: The end_timestamp of this MarketData.
        :param marketprice: The marketprice of this MarketData.
        :param start_timestamp: The start_timestamp of this MarketData.
        """
        self.openapi_types = {
            'end_timestamp': int,
            'marketprice': float,
            'start_timestamp': int
        }

        self.attribute_map = {
            'end_timestamp': 'end_timestamp',
            'marketprice': 'marketprice',
            'start_timestamp': 'start_timestamp'
        }

        self._end_timestamp = end_timestamp
        self._marketprice = marketprice
        self._start_timestamp = start_timestamp

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MarketData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MarketData of this MarketData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def end_timestamp(self):
        """Gets the end_timestamp of this MarketData.

        Timestamp in Standard Milliseconds

        :return: The end_timestamp of this MarketData.
        :rtype: int
        """
        return self._end_timestamp

    @end_timestamp.setter
    def end_timestamp(self, end_timestamp):
        """Sets the end_timestamp of this MarketData.

        Timestamp in Standard Milliseconds

        :param end_timestamp: The end_timestamp of this MarketData.
        :type end_timestamp: int
        """

        self._end_timestamp = end_timestamp

    @property
    def marketprice(self):
        """Gets the marketprice of this MarketData.

        Actual Marketprice for regional green power in EUR per MWh

        :return: The marketprice of this MarketData.
        :rtype: float
        """
        return self._marketprice

    @marketprice.setter
    def marketprice(self, marketprice):
        """Sets the marketprice of this MarketData.

        Actual Marketprice for regional green power in EUR per MWh

        :param marketprice: The marketprice of this MarketData.
        :type marketprice: float
        """

        self._marketprice = marketprice

    @property
    def start_timestamp(self):
        """Gets the start_timestamp of this MarketData.

        Timestamp in Standard Milliseconds

        :return: The start_timestamp of this MarketData.
        :rtype: int
        """
        return self._start_timestamp

    @start_timestamp.setter
    def start_timestamp(self, start_timestamp):
        """Sets the start_timestamp of this MarketData.

        Timestamp in Standard Milliseconds

        :param start_timestamp: The start_timestamp of this MarketData.
        :type start_timestamp: int
        """

        self._start_timestamp = start_timestamp
