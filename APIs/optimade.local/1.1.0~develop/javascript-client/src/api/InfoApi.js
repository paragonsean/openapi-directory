/**
 * OPTIMADE API
 * The [Open Databases Integration for Materials Design (OPTIMADE) consortium](https://www.optimade.org/) aims to make materials databases interoperational by developing a common REST API.  This specification is generated using [`optimade-python-tools`](https://github.com/Materials-Consortia/optimade-python-tools/tree/v0.16.0) v0.16.0.
 *
 * The version of the OpenAPI document: 1.1.0~develop
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import EntryInfoResponse from '../model/EntryInfoResponse';
import ErrorResponse from '../model/ErrorResponse';
import InfoResponse from '../model/InfoResponse';

/**
* Info service.
* @module api/InfoApi
* @version 1.1.0~develop
*/
export default class InfoApi {

    /**
    * Constructs a new InfoApi. 
    * @alias module:api/InfoApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getEntryInfoInfoEntryGet operation.
     * @callback module:api/InfoApi~getEntryInfoInfoEntryGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/EntryInfoResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Entry Info
     * @param {String} entry 
     * @param {module:api/InfoApi~getEntryInfoInfoEntryGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/EntryInfoResponse}
     */
    getEntryInfoInfoEntryGet(entry, callback) {
      let postBody = null;
      // verify the required parameter 'entry' is set
      if (entry === undefined || entry === null) {
        throw new Error("Missing the required parameter 'entry' when calling getEntryInfoInfoEntryGet");
      }

      let pathParams = {
        'entry': entry
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = EntryInfoResponse;
      return this.apiClient.callApi(
        '/info/{entry}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getInfoInfoGet operation.
     * @callback module:api/InfoApi~getInfoInfoGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InfoResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Info
     * @param {module:api/InfoApi~getInfoInfoGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InfoResponse}
     */
    getInfoInfoGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InfoResponse;
      return this.apiClient.callApi(
        '/info', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
