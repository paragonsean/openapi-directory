/**
 * OPTIMADE API
 * The [Open Databases Integration for Materials Design (OPTIMADE) consortium](https://www.optimade.org/) aims to make materials databases interoperational by developing a common REST API.  This specification is generated using [`optimade-python-tools`](https://github.com/Materials-Consortia/optimade-python-tools/tree/v0.16.0) v0.16.0.
 *
 * The version of the OpenAPI document: 1.1.0~develop
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Self1 from './Self1';

/**
 * The ResourceLinks model module.
 * @module model/ResourceLinks
 * @version 1.1.0~develop
 */
class ResourceLinks {
    /**
     * Constructs a new <code>ResourceLinks</code>.
     * A Resource Links object
     * @alias module:model/ResourceLinks
     */
    constructor() { 
        
        ResourceLinks.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ResourceLinks</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ResourceLinks} obj Optional instance to populate.
     * @return {module:model/ResourceLinks} The populated <code>ResourceLinks</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ResourceLinks();

            if (data.hasOwnProperty('self')) {
                obj['self'] = Self1.constructFromObject(data['self']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ResourceLinks</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ResourceLinks</code>.
     */
    static validateJSON(data) {
        // validate the optional field `self`
        if (data['self']) { // data not null
          Self1.validateJSON(data['self']);
        }

        return true;
    }


}



/**
 * @member {module:model/Self1} self
 */
ResourceLinks.prototype['self'] = undefined;






export default ResourceLinks;

