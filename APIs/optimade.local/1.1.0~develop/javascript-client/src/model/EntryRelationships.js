/**
 * OPTIMADE API
 * The [Open Databases Integration for Materials Design (OPTIMADE) consortium](https://www.optimade.org/) aims to make materials databases interoperational by developing a common REST API.  This specification is generated using [`optimade-python-tools`](https://github.com/Materials-Consortia/optimade-python-tools/tree/v0.16.0) v0.16.0.
 *
 * The version of the OpenAPI document: 1.1.0~develop
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ReferenceRelationship from './ReferenceRelationship';
import StructureRelationship from './StructureRelationship';

/**
 * The EntryRelationships model module.
 * @module model/EntryRelationships
 * @version 1.1.0~develop
 */
class EntryRelationships {
    /**
     * Constructs a new <code>EntryRelationships</code>.
     * This model wraps the JSON API Relationships to include type-specific top level keys.
     * @alias module:model/EntryRelationships
     */
    constructor() { 
        
        EntryRelationships.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>EntryRelationships</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EntryRelationships} obj Optional instance to populate.
     * @return {module:model/EntryRelationships} The populated <code>EntryRelationships</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EntryRelationships();

            if (data.hasOwnProperty('references')) {
                obj['references'] = ApiClient.convertToType(data['references'], ReferenceRelationship);
            }
            if (data.hasOwnProperty('structures')) {
                obj['structures'] = ApiClient.convertToType(data['structures'], StructureRelationship);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EntryRelationships</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EntryRelationships</code>.
     */
    static validateJSON(data) {
        // validate the optional field `references`
        if (data['references']) { // data not null
          ReferenceRelationship.validateJSON(data['references']);
        }
        // validate the optional field `structures`
        if (data['structures']) { // data not null
          StructureRelationship.validateJSON(data['structures']);
        }

        return true;
    }


}



/**
 * Object containing links to relationships with entries of the `references` type.
 * @member {module:model/ReferenceRelationship} references
 */
EntryRelationships.prototype['references'] = undefined;

/**
 * Object containing links to relationships with entries of the `structures` type.
 * @member {module:model/StructureRelationship} structures
 */
EntryRelationships.prototype['structures'] = undefined;






export default EntryRelationships;

