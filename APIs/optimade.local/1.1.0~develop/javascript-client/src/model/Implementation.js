/**
 * OPTIMADE API
 * The [Open Databases Integration for Materials Design (OPTIMADE) consortium](https://www.optimade.org/) aims to make materials databases interoperational by developing a common REST API.  This specification is generated using [`optimade-python-tools`](https://github.com/Materials-Consortia/optimade-python-tools/tree/v0.16.0) v0.16.0.
 *
 * The version of the OpenAPI document: 1.1.0~develop
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Homepage from './Homepage';
import ImplementationMaintainer from './ImplementationMaintainer';
import IssueTracker from './IssueTracker';
import SourceUrl from './SourceUrl';

/**
 * The Implementation model module.
 * @module model/Implementation
 * @version 1.1.0~develop
 */
class Implementation {
    /**
     * Constructs a new <code>Implementation</code>.
     * Information on the server implementation
     * @alias module:model/Implementation
     */
    constructor() { 
        
        Implementation.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Implementation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Implementation} obj Optional instance to populate.
     * @return {module:model/Implementation} The populated <code>Implementation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Implementation();

            if (data.hasOwnProperty('homepage')) {
                obj['homepage'] = Homepage.constructFromObject(data['homepage']);
            }
            if (data.hasOwnProperty('issue_tracker')) {
                obj['issue_tracker'] = IssueTracker.constructFromObject(data['issue_tracker']);
            }
            if (data.hasOwnProperty('maintainer')) {
                obj['maintainer'] = ApiClient.convertToType(data['maintainer'], ImplementationMaintainer);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('source_url')) {
                obj['source_url'] = SourceUrl.constructFromObject(data['source_url']);
            }
            if (data.hasOwnProperty('version')) {
                obj['version'] = ApiClient.convertToType(data['version'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Implementation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Implementation</code>.
     */
    static validateJSON(data) {
        // validate the optional field `homepage`
        if (data['homepage']) { // data not null
          Homepage.validateJSON(data['homepage']);
        }
        // validate the optional field `issue_tracker`
        if (data['issue_tracker']) { // data not null
          IssueTracker.validateJSON(data['issue_tracker']);
        }
        // validate the optional field `maintainer`
        if (data['maintainer']) { // data not null
          ImplementationMaintainer.validateJSON(data['maintainer']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // validate the optional field `source_url`
        if (data['source_url']) { // data not null
          SourceUrl.validateJSON(data['source_url']);
        }
        // ensure the json data is a string
        if (data['version'] && !(typeof data['version'] === 'string' || data['version'] instanceof String)) {
            throw new Error("Expected the field `version` to be a primitive type in the JSON string but got " + data['version']);
        }

        return true;
    }


}



/**
 * @member {module:model/Homepage} homepage
 */
Implementation.prototype['homepage'] = undefined;

/**
 * @member {module:model/IssueTracker} issue_tracker
 */
Implementation.prototype['issue_tracker'] = undefined;

/**
 * A dictionary providing details about the maintainer of the implementation.
 * @member {module:model/ImplementationMaintainer} maintainer
 */
Implementation.prototype['maintainer'] = undefined;

/**
 * name of the implementation
 * @member {String} name
 */
Implementation.prototype['name'] = undefined;

/**
 * @member {module:model/SourceUrl} source_url
 */
Implementation.prototype['source_url'] = undefined;

/**
 * version string of the current implementation
 * @member {String} version
 */
Implementation.prototype['version'] = undefined;






export default Implementation;

