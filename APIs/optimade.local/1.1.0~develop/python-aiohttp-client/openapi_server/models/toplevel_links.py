# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.first import First
from openapi_server.models.last import Last
from openapi_server.models.next import Next
from openapi_server.models.prev import Prev
from openapi_server.models.related1 import Related1
from openapi_server.models.self2 import Self2
from openapi_server import util


class ToplevelLinks(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, first: First=None, last: Last=None, next: Next=None, prev: Prev=None, related: Related1=None, _self: Self2=None):
        """ToplevelLinks - a model defined in OpenAPI

        :param first: The first of this ToplevelLinks.
        :param last: The last of this ToplevelLinks.
        :param next: The next of this ToplevelLinks.
        :param prev: The prev of this ToplevelLinks.
        :param related: The related of this ToplevelLinks.
        :param _self: The _self of this ToplevelLinks.
        """
        self.openapi_types = {
            'first': First,
            'last': Last,
            'next': Next,
            'prev': Prev,
            'related': Related1,
            '_self': Self2
        }

        self.attribute_map = {
            'first': 'first',
            'last': 'last',
            'next': 'next',
            'prev': 'prev',
            'related': 'related',
            '_self': 'self'
        }

        self._first = first
        self._last = last
        self._next = next
        self._prev = prev
        self._related = related
        self.__self = _self

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ToplevelLinks':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ToplevelLinks of this ToplevelLinks.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def first(self):
        """Gets the first of this ToplevelLinks.


        :return: The first of this ToplevelLinks.
        :rtype: First
        """
        return self._first

    @first.setter
    def first(self, first):
        """Sets the first of this ToplevelLinks.


        :param first: The first of this ToplevelLinks.
        :type first: First
        """

        self._first = first

    @property
    def last(self):
        """Gets the last of this ToplevelLinks.


        :return: The last of this ToplevelLinks.
        :rtype: Last
        """
        return self._last

    @last.setter
    def last(self, last):
        """Sets the last of this ToplevelLinks.


        :param last: The last of this ToplevelLinks.
        :type last: Last
        """

        self._last = last

    @property
    def next(self):
        """Gets the next of this ToplevelLinks.


        :return: The next of this ToplevelLinks.
        :rtype: Next
        """
        return self._next

    @next.setter
    def next(self, next):
        """Sets the next of this ToplevelLinks.


        :param next: The next of this ToplevelLinks.
        :type next: Next
        """

        self._next = next

    @property
    def prev(self):
        """Gets the prev of this ToplevelLinks.


        :return: The prev of this ToplevelLinks.
        :rtype: Prev
        """
        return self._prev

    @prev.setter
    def prev(self, prev):
        """Sets the prev of this ToplevelLinks.


        :param prev: The prev of this ToplevelLinks.
        :type prev: Prev
        """

        self._prev = prev

    @property
    def related(self):
        """Gets the related of this ToplevelLinks.


        :return: The related of this ToplevelLinks.
        :rtype: Related1
        """
        return self._related

    @related.setter
    def related(self, related):
        """Sets the related of this ToplevelLinks.


        :param related: The related of this ToplevelLinks.
        :type related: Related1
        """

        self._related = related

    @property
    def _self(self):
        """Gets the _self of this ToplevelLinks.


        :return: The _self of this ToplevelLinks.
        :rtype: Self2
        """
        return self.__self

    @_self.setter
    def _self(self, _self):
        """Sets the _self of this ToplevelLinks.


        :param _self: The _self of this ToplevelLinks.
        :type _self: Self2
        """

        self.__self = _self
