# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ResponseMetaQuery(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, representation: str=None):
        """ResponseMetaQuery - a model defined in OpenAPI

        :param representation: The representation of this ResponseMetaQuery.
        """
        self.openapi_types = {
            'representation': str
        }

        self.attribute_map = {
            'representation': 'representation'
        }

        self._representation = representation

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ResponseMetaQuery':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ResponseMetaQuery of this ResponseMetaQuery.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def representation(self):
        """Gets the representation of this ResponseMetaQuery.

        A string with the part of the URL following the versioned or unversioned base URL that serves the API. Query parameters that have not been used in processing the request MAY be omitted. In particular, if no query parameters have been involved in processing the request, the query part of the URL MAY be excluded. Example: `/structures?filter=nelements=2`

        :return: The representation of this ResponseMetaQuery.
        :rtype: str
        """
        return self._representation

    @representation.setter
    def representation(self, representation):
        """Sets the representation of this ResponseMetaQuery.

        A string with the part of the URL following the versioned or unversioned base URL that serves the API. Query parameters that have not been used in processing the request MAY be omitted. In particular, if no query parameters have been involved in processing the request, the query part of the URL MAY be excluded. Example: `/structures?filter=nelements=2`

        :param representation: The representation of this ResponseMetaQuery.
        :type representation: str
        """
        if representation is None:
            raise ValueError("Invalid value for `representation`, must not be `None`")

        self._representation = representation
