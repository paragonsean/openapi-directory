/**
 * OPTIMADE API
 * The [Open Databases Integration for Materials Design (OPTIMADE) consortium](https://www.optimade.org/) aims to make materials databases interoperational by developing a common REST API.  This specification is generated using [`optimade-python-tools`](https://github.com/Materials-Consortia/optimade-python-tools/tree/v0.16.0) v0.16.0.
 *
 * The version of the OpenAPI document: 1.1.0~develop
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILinksResourceAttributes.h
 *
 * Links endpoint resource object attributes
 */

#ifndef OAILinksResourceAttributes_H
#define OAILinksResourceAttributes_H

#include <QJsonObject>

#include "OAIAggregate.h"
#include "OAIBase_Url.h"
#include "OAIHomepage_1.h"
#include "OAILinkType.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIBase_Url;
class OAIHomepage_1;

class OAILinksResourceAttributes : public OAIObject {
public:
    OAILinksResourceAttributes();
    OAILinksResourceAttributes(QString json);
    ~OAILinksResourceAttributes() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAggregate getAggregate() const;
    void setAggregate(const OAIAggregate &aggregate);
    bool is_aggregate_Set() const;
    bool is_aggregate_Valid() const;

    OAIBase_Url getBaseUrl() const;
    void setBaseUrl(const OAIBase_Url &base_url);
    bool is_base_url_Set() const;
    bool is_base_url_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    OAIHomepage_1 getHomepage() const;
    void setHomepage(const OAIHomepage_1 &homepage);
    bool is_homepage_Set() const;
    bool is_homepage_Valid() const;

    OAILinkType getLinkType() const;
    void setLinkType(const OAILinkType &link_type);
    bool is_link_type_Set() const;
    bool is_link_type_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getNoAggregateReason() const;
    void setNoAggregateReason(const QString &no_aggregate_reason);
    bool is_no_aggregate_reason_Set() const;
    bool is_no_aggregate_reason_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAggregate m_aggregate;
    bool m_aggregate_isSet;
    bool m_aggregate_isValid;

    OAIBase_Url m_base_url;
    bool m_base_url_isSet;
    bool m_base_url_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    OAIHomepage_1 m_homepage;
    bool m_homepage_isSet;
    bool m_homepage_isValid;

    OAILinkType m_link_type;
    bool m_link_type_isSet;
    bool m_link_type_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_no_aggregate_reason;
    bool m_no_aggregate_reason_isSet;
    bool m_no_aggregate_reason_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILinksResourceAttributes)

#endif // OAILinksResourceAttributes_H
