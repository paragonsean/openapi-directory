/**
 * OPTIMADE API
 * The [Open Databases Integration for Materials Design (OPTIMADE) consortium](https://www.optimade.org/) aims to make materials databases interoperational by developing a common REST API.  This specification is generated using [`optimade-python-tools`](https://github.com/Materials-Consortia/optimade-python-tools/tree/v0.16.0) v0.16.0.
 *
 * The version of the OpenAPI document: 1.1.0~develop
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIReferenceRelationship.h
 *
 * Similar to normal JSON API relationship, but with addition of OPTIONAL meta field for a resource
 */

#ifndef OAIReferenceRelationship_H
#define OAIReferenceRelationship_H

#include <QJsonObject>

#include "OAIData_2.h"
#include "OAIObject.h"
#include "OAIRelationshipLinks.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIData_2;
class OAIRelationshipLinks;

class OAIReferenceRelationship : public OAIObject {
public:
    OAIReferenceRelationship();
    OAIReferenceRelationship(QString json);
    ~OAIReferenceRelationship() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIData_2 getData() const;
    void setData(const OAIData_2 &data);
    bool is_data_Set() const;
    bool is_data_Valid() const;

    OAIRelationshipLinks getLinks() const;
    void setLinks(const OAIRelationshipLinks &links);
    bool is_links_Set() const;
    bool is_links_Valid() const;

    OAIObject getMeta() const;
    void setMeta(const OAIObject &meta);
    bool is_meta_Set() const;
    bool is_meta_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIData_2 m_data;
    bool m_data_isSet;
    bool m_data_isValid;

    OAIRelationshipLinks m_links;
    bool m_links_isSet;
    bool m_links_isValid;

    OAIObject m_meta;
    bool m_meta_isSet;
    bool m_meta_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIReferenceRelationship)

#endif // OAIReferenceRelationship_H
