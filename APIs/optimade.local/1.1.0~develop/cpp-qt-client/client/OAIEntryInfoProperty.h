/**
 * OPTIMADE API
 * The [Open Databases Integration for Materials Design (OPTIMADE) consortium](https://www.optimade.org/) aims to make materials databases interoperational by developing a common REST API.  This specification is generated using [`optimade-python-tools`](https://github.com/Materials-Consortia/optimade-python-tools/tree/v0.16.0) v0.16.0.
 *
 * The version of the OpenAPI document: 1.1.0~develop
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEntryInfoProperty.h
 *
 * 
 */

#ifndef OAIEntryInfoProperty_H
#define OAIEntryInfoProperty_H

#include <QJsonObject>

#include "OAIDataType.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIEntryInfoProperty : public OAIObject {
public:
    OAIEntryInfoProperty();
    OAIEntryInfoProperty(QString json);
    ~OAIEntryInfoProperty() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    bool isSortable() const;
    void setSortable(const bool &sortable);
    bool is_sortable_Set() const;
    bool is_sortable_Valid() const;

    OAIDataType getType() const;
    void setType(const OAIDataType &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getUnit() const;
    void setUnit(const QString &unit);
    bool is_unit_Set() const;
    bool is_unit_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    bool m_sortable;
    bool m_sortable_isSet;
    bool m_sortable_isValid;

    OAIDataType m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_unit;
    bool m_unit_isSet;
    bool m_unit_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEntryInfoProperty)

#endif // OAIEntryInfoProperty_H
