/**
 * OPTIMADE API
 * The [Open Databases Integration for Materials Design (OPTIMADE) consortium](https://www.optimade.org/) aims to make materials databases interoperational by developing a common REST API.  This specification is generated using [`optimade-python-tools`](https://github.com/Materials-Consortia/optimade-python-tools/tree/v0.16.0) v0.16.0.
 *
 * The version of the OpenAPI document: 1.1.0~develop
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIReferenceResource.h
 *
 * The &#x60;references&#x60; entries describe bibliographic references.  The following properties are used to provide the bibliographic details:  - **address**, **annote**, **booktitle**, **chapter**, **crossref**, **edition**, **howpublished**, **institution**, **journal**, **key**, **month**, **note**, **number**, **organization**, **pages**, **publisher**, **school**, **series**, **title**, **volume**, **year**: meanings of these properties match the [BibTeX specification](http://bibtexml.sourceforge.net/btxdoc.pdf), values are strings; - **bib_type**: type of the reference, corresponding to **type** property in the BibTeX specification, value is string; - **authors** and **editors**: lists of *person objects* which are dictionaries with the following keys:     - **name**: Full name of the person, REQUIRED.     - **firstname**, **lastname**: Parts of the person&#39;s name, OPTIONAL. - **doi** and **url**: values are strings. - **Requirements/Conventions**:     - **Support**: OPTIONAL support in implementations, i.e., any of the properties MAY be &#x60;null&#x60;.     - **Query**: Support for queries on any of these properties is OPTIONAL.         If supported, filters MAY support only a subset of comparison operators.     - Every references entry MUST contain at least one of the properties.
 */

#ifndef OAIReferenceResource_H
#define OAIReferenceResource_H

#include <QJsonObject>

#include "OAIEntryRelationships.h"
#include "OAIObject.h"
#include "OAIReferenceResourceAttributes.h"
#include "OAIResourceLinks.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIReferenceResourceAttributes;
class OAIResourceLinks;
class OAIEntryRelationships;

class OAIReferenceResource : public OAIObject {
public:
    OAIReferenceResource();
    OAIReferenceResource(QString json);
    ~OAIReferenceResource() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIReferenceResourceAttributes getAttributes() const;
    void setAttributes(const OAIReferenceResourceAttributes &attributes);
    bool is_attributes_Set() const;
    bool is_attributes_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    OAIResourceLinks getLinks() const;
    void setLinks(const OAIResourceLinks &links);
    bool is_links_Set() const;
    bool is_links_Valid() const;

    OAIObject getMeta() const;
    void setMeta(const OAIObject &meta);
    bool is_meta_Set() const;
    bool is_meta_Valid() const;

    OAIEntryRelationships getRelationships() const;
    void setRelationships(const OAIEntryRelationships &relationships);
    bool is_relationships_Set() const;
    bool is_relationships_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIReferenceResourceAttributes m_attributes;
    bool m_attributes_isSet;
    bool m_attributes_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    OAIResourceLinks m_links;
    bool m_links_isSet;
    bool m_links_isValid;

    OAIObject m_meta;
    bool m_meta_isSet;
    bool m_meta_isValid;

    OAIEntryRelationships m_relationships;
    bool m_relationships_isSet;
    bool m_relationships_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIReferenceResource)

#endif // OAIReferenceResource_H
