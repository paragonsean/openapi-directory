/**
 * OPTIMADE API
 * The [Open Databases Integration for Materials Design (OPTIMADE) consortium](https://www.optimade.org/) aims to make materials databases interoperational by developing a common REST API.  This specification is generated using [`optimade-python-tools`](https://github.com/Materials-Consortia/optimade-python-tools/tree/v0.16.0) v0.16.0.
 *
 * The version of the OpenAPI document: 1.1.0~develop
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBaseRelationshipMeta.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBaseRelationshipMeta::OAIBaseRelationshipMeta(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBaseRelationshipMeta::OAIBaseRelationshipMeta() {
    this->initializeModel();
}

OAIBaseRelationshipMeta::~OAIBaseRelationshipMeta() {}

void OAIBaseRelationshipMeta::initializeModel() {

    m_description_isSet = false;
    m_description_isValid = false;
}

void OAIBaseRelationshipMeta::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBaseRelationshipMeta::fromJsonObject(QJsonObject json) {

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;
}

QString OAIBaseRelationshipMeta::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBaseRelationshipMeta::asJsonObject() const {
    QJsonObject obj;
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    return obj;
}

QString OAIBaseRelationshipMeta::getDescription() const {
    return m_description;
}
void OAIBaseRelationshipMeta::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIBaseRelationshipMeta::is_description_Set() const{
    return m_description_isSet;
}

bool OAIBaseRelationshipMeta::is_description_Valid() const{
    return m_description_isValid;
}

bool OAIBaseRelationshipMeta::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBaseRelationshipMeta::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_description_isValid && true;
}

} // namespace OpenAPI
