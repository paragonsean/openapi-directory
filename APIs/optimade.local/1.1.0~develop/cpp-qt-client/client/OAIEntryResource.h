/**
 * OPTIMADE API
 * The [Open Databases Integration for Materials Design (OPTIMADE) consortium](https://www.optimade.org/) aims to make materials databases interoperational by developing a common REST API.  This specification is generated using [`optimade-python-tools`](https://github.com/Materials-Consortia/optimade-python-tools/tree/v0.16.0) v0.16.0.
 *
 * The version of the OpenAPI document: 1.1.0~develop
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEntryResource.h
 *
 * The base model for an entry resource.
 */

#ifndef OAIEntryResource_H
#define OAIEntryResource_H

#include <QJsonObject>

#include "OAIEntryRelationships.h"
#include "OAIEntryResourceAttributes.h"
#include "OAIObject.h"
#include "OAIResourceLinks.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIEntryResourceAttributes;
class OAIResourceLinks;
class OAIEntryRelationships;

class OAIEntryResource : public OAIObject {
public:
    OAIEntryResource();
    OAIEntryResource(QString json);
    ~OAIEntryResource() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIEntryResourceAttributes getAttributes() const;
    void setAttributes(const OAIEntryResourceAttributes &attributes);
    bool is_attributes_Set() const;
    bool is_attributes_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    OAIResourceLinks getLinks() const;
    void setLinks(const OAIResourceLinks &links);
    bool is_links_Set() const;
    bool is_links_Valid() const;

    OAIObject getMeta() const;
    void setMeta(const OAIObject &meta);
    bool is_meta_Set() const;
    bool is_meta_Valid() const;

    OAIEntryRelationships getRelationships() const;
    void setRelationships(const OAIEntryRelationships &relationships);
    bool is_relationships_Set() const;
    bool is_relationships_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIEntryResourceAttributes m_attributes;
    bool m_attributes_isSet;
    bool m_attributes_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    OAIResourceLinks m_links;
    bool m_links_isSet;
    bool m_links_isValid;

    OAIObject m_meta;
    bool m_meta_isSet;
    bool m_meta_isValid;

    OAIEntryRelationships m_relationships;
    bool m_relationships_isSet;
    bool m_relationships_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEntryResource)

#endif // OAIEntryResource_H
