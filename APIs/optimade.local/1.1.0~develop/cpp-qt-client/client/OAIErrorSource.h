/**
 * OPTIMADE API
 * The [Open Databases Integration for Materials Design (OPTIMADE) consortium](https://www.optimade.org/) aims to make materials databases interoperational by developing a common REST API.  This specification is generated using [`optimade-python-tools`](https://github.com/Materials-Consortia/optimade-python-tools/tree/v0.16.0) v0.16.0.
 *
 * The version of the OpenAPI document: 1.1.0~develop
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIErrorSource.h
 *
 * an object containing references to the source of the error
 */

#ifndef OAIErrorSource_H
#define OAIErrorSource_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIErrorSource : public OAIObject {
public:
    OAIErrorSource();
    OAIErrorSource(QString json);
    ~OAIErrorSource() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getParameter() const;
    void setParameter(const QString &parameter);
    bool is_parameter_Set() const;
    bool is_parameter_Valid() const;

    QString getPointer() const;
    void setPointer(const QString &pointer);
    bool is_pointer_Set() const;
    bool is_pointer_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_parameter;
    bool m_parameter_isSet;
    bool m_parameter_isValid;

    QString m_pointer;
    bool m_pointer_isSet;
    bool m_pointer_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIErrorSource)

#endif // OAIErrorSource_H
