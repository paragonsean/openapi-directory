/**
 * OPTIMADE API
 * The [Open Databases Integration for Materials Design (OPTIMADE) consortium](https://www.optimade.org/) aims to make materials databases interoperational by developing a common REST API.  This specification is generated using [`optimade-python-tools`](https://github.com/Materials-Consortia/optimade-python-tools/tree/v0.16.0) v0.16.0.
 *
 * The version of the OpenAPI document: 1.1.0~develop
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIResponseMeta.h
 *
 * A [JSON API meta member](https://jsonapi.org/format/1.0#document-meta) that contains JSON API meta objects of non-standard meta-information.  OPTIONAL additional information global to the query that is not specified in this document, MUST start with a database-provider-specific prefix.
 */

#ifndef OAIResponseMeta_H
#define OAIResponseMeta_H

#include <QJsonObject>

#include "OAIImplementation.h"
#include "OAIProvider.h"
#include "OAIResponseMetaQuery.h"
#include "OAISchema.h"
#include "OAIWarnings.h"
#include <QDateTime>
#include <QSet>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIImplementation;
class OAIProvider;
class OAIResponseMetaQuery;
class OAISchema;
class OAIWarnings;

class OAIResponseMeta : public OAIObject {
public:
    OAIResponseMeta();
    OAIResponseMeta(QString json);
    ~OAIResponseMeta() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getApiVersion() const;
    void setApiVersion(const QString &api_version);
    bool is_api_version_Set() const;
    bool is_api_version_Valid() const;

    qint32 getDataAvailable() const;
    void setDataAvailable(const qint32 &data_available);
    bool is_data_available_Set() const;
    bool is_data_available_Valid() const;

    qint32 getDataReturned() const;
    void setDataReturned(const qint32 &data_returned);
    bool is_data_returned_Set() const;
    bool is_data_returned_Valid() const;

    OAIImplementation getImplementation() const;
    void setImplementation(const OAIImplementation &implementation);
    bool is_implementation_Set() const;
    bool is_implementation_Valid() const;

    QString getLastId() const;
    void setLastId(const QString &last_id);
    bool is_last_id_Set() const;
    bool is_last_id_Valid() const;

    bool isMoreDataAvailable() const;
    void setMoreDataAvailable(const bool &more_data_available);
    bool is_more_data_available_Set() const;
    bool is_more_data_available_Valid() const;

    OAIProvider getProvider() const;
    void setProvider(const OAIProvider &provider);
    bool is_provider_Set() const;
    bool is_provider_Valid() const;

    OAIResponseMetaQuery getQuery() const;
    void setQuery(const OAIResponseMetaQuery &query);
    bool is_query_Set() const;
    bool is_query_Valid() const;

    QString getResponseMessage() const;
    void setResponseMessage(const QString &response_message);
    bool is_response_message_Set() const;
    bool is_response_message_Valid() const;

    OAISchema getSchema() const;
    void setSchema(const OAISchema &schema);
    bool is_schema_Set() const;
    bool is_schema_Valid() const;

    QDateTime getTimeStamp() const;
    void setTimeStamp(const QDateTime &time_stamp);
    bool is_time_stamp_Set() const;
    bool is_time_stamp_Valid() const;

    QSet<OAIWarnings> getWarnings() const;
    void setWarnings(const QSet<OAIWarnings> &warnings);
    bool is_warnings_Set() const;
    bool is_warnings_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_api_version;
    bool m_api_version_isSet;
    bool m_api_version_isValid;

    qint32 m_data_available;
    bool m_data_available_isSet;
    bool m_data_available_isValid;

    qint32 m_data_returned;
    bool m_data_returned_isSet;
    bool m_data_returned_isValid;

    OAIImplementation m_implementation;
    bool m_implementation_isSet;
    bool m_implementation_isValid;

    QString m_last_id;
    bool m_last_id_isSet;
    bool m_last_id_isValid;

    bool m_more_data_available;
    bool m_more_data_available_isSet;
    bool m_more_data_available_isValid;

    OAIProvider m_provider;
    bool m_provider_isSet;
    bool m_provider_isValid;

    OAIResponseMetaQuery m_query;
    bool m_query_isSet;
    bool m_query_isValid;

    QString m_response_message;
    bool m_response_message_isSet;
    bool m_response_message_isValid;

    OAISchema m_schema;
    bool m_schema_isSet;
    bool m_schema_isValid;

    QDateTime m_time_stamp;
    bool m_time_stamp_isSet;
    bool m_time_stamp_isValid;

    QSet<OAIWarnings> m_warnings;
    bool m_warnings_isSet;
    bool m_warnings_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIResponseMeta)

#endif // OAIResponseMeta_H
