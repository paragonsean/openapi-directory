/**
 * OPTIMADE API
 * The [Open Databases Integration for Materials Design (OPTIMADE) consortium](https://www.optimade.org/) aims to make materials databases interoperational by developing a common REST API.  This specification is generated using [`optimade-python-tools`](https://github.com/Materials-Consortia/optimade-python-tools/tree/v0.16.0) v0.16.0.
 *
 * The version of the OpenAPI document: 1.1.0~develop
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIReferenceResourceAttributes.h
 *
 * Model that stores the attributes of a reference.  Many properties match the meaning described in the [BibTeX specification](http://bibtexml.sourceforge.net/btxdoc.pdf).
 */

#ifndef OAIReferenceResourceAttributes_H
#define OAIReferenceResourceAttributes_H

#include <QJsonObject>

#include "OAIPerson.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPerson;

class OAIReferenceResourceAttributes : public OAIObject {
public:
    OAIReferenceResourceAttributes();
    OAIReferenceResourceAttributes(QString json);
    ~OAIReferenceResourceAttributes() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAddress() const;
    void setAddress(const QString &address);
    bool is_address_Set() const;
    bool is_address_Valid() const;

    QString getAnnote() const;
    void setAnnote(const QString &annote);
    bool is_annote_Set() const;
    bool is_annote_Valid() const;

    QList<OAIPerson> getAuthors() const;
    void setAuthors(const QList<OAIPerson> &authors);
    bool is_authors_Set() const;
    bool is_authors_Valid() const;

    QString getBibType() const;
    void setBibType(const QString &bib_type);
    bool is_bib_type_Set() const;
    bool is_bib_type_Valid() const;

    QString getBooktitle() const;
    void setBooktitle(const QString &booktitle);
    bool is_booktitle_Set() const;
    bool is_booktitle_Valid() const;

    QString getChapter() const;
    void setChapter(const QString &chapter);
    bool is_chapter_Set() const;
    bool is_chapter_Valid() const;

    QString getCrossref() const;
    void setCrossref(const QString &crossref);
    bool is_crossref_Set() const;
    bool is_crossref_Valid() const;

    QString getDoi() const;
    void setDoi(const QString &doi);
    bool is_doi_Set() const;
    bool is_doi_Valid() const;

    QString getEdition() const;
    void setEdition(const QString &edition);
    bool is_edition_Set() const;
    bool is_edition_Valid() const;

    QList<OAIPerson> getEditors() const;
    void setEditors(const QList<OAIPerson> &editors);
    bool is_editors_Set() const;
    bool is_editors_Valid() const;

    QString getHowpublished() const;
    void setHowpublished(const QString &howpublished);
    bool is_howpublished_Set() const;
    bool is_howpublished_Valid() const;

    QString getImmutableId() const;
    void setImmutableId(const QString &immutable_id);
    bool is_immutable_id_Set() const;
    bool is_immutable_id_Valid() const;

    QString getInstitution() const;
    void setInstitution(const QString &institution);
    bool is_institution_Set() const;
    bool is_institution_Valid() const;

    QString getJournal() const;
    void setJournal(const QString &journal);
    bool is_journal_Set() const;
    bool is_journal_Valid() const;

    QString getKey() const;
    void setKey(const QString &key);
    bool is_key_Set() const;
    bool is_key_Valid() const;

    QDateTime getLastModified() const;
    void setLastModified(const QDateTime &last_modified);
    bool is_last_modified_Set() const;
    bool is_last_modified_Valid() const;

    QString getMonth() const;
    void setMonth(const QString &month);
    bool is_month_Set() const;
    bool is_month_Valid() const;

    QString getNote() const;
    void setNote(const QString &note);
    bool is_note_Set() const;
    bool is_note_Valid() const;

    QString getNumber() const;
    void setNumber(const QString &number);
    bool is_number_Set() const;
    bool is_number_Valid() const;

    QString getOrganization() const;
    void setOrganization(const QString &organization);
    bool is_organization_Set() const;
    bool is_organization_Valid() const;

    QString getPages() const;
    void setPages(const QString &pages);
    bool is_pages_Set() const;
    bool is_pages_Valid() const;

    QString getPublisher() const;
    void setPublisher(const QString &publisher);
    bool is_publisher_Set() const;
    bool is_publisher_Valid() const;

    QString getSchool() const;
    void setSchool(const QString &school);
    bool is_school_Set() const;
    bool is_school_Valid() const;

    QString getSeries() const;
    void setSeries(const QString &series);
    bool is_series_Set() const;
    bool is_series_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    QString getVolume() const;
    void setVolume(const QString &volume);
    bool is_volume_Set() const;
    bool is_volume_Valid() const;

    QString getYear() const;
    void setYear(const QString &year);
    bool is_year_Set() const;
    bool is_year_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_address;
    bool m_address_isSet;
    bool m_address_isValid;

    QString m_annote;
    bool m_annote_isSet;
    bool m_annote_isValid;

    QList<OAIPerson> m_authors;
    bool m_authors_isSet;
    bool m_authors_isValid;

    QString m_bib_type;
    bool m_bib_type_isSet;
    bool m_bib_type_isValid;

    QString m_booktitle;
    bool m_booktitle_isSet;
    bool m_booktitle_isValid;

    QString m_chapter;
    bool m_chapter_isSet;
    bool m_chapter_isValid;

    QString m_crossref;
    bool m_crossref_isSet;
    bool m_crossref_isValid;

    QString m_doi;
    bool m_doi_isSet;
    bool m_doi_isValid;

    QString m_edition;
    bool m_edition_isSet;
    bool m_edition_isValid;

    QList<OAIPerson> m_editors;
    bool m_editors_isSet;
    bool m_editors_isValid;

    QString m_howpublished;
    bool m_howpublished_isSet;
    bool m_howpublished_isValid;

    QString m_immutable_id;
    bool m_immutable_id_isSet;
    bool m_immutable_id_isValid;

    QString m_institution;
    bool m_institution_isSet;
    bool m_institution_isValid;

    QString m_journal;
    bool m_journal_isSet;
    bool m_journal_isValid;

    QString m_key;
    bool m_key_isSet;
    bool m_key_isValid;

    QDateTime m_last_modified;
    bool m_last_modified_isSet;
    bool m_last_modified_isValid;

    QString m_month;
    bool m_month_isSet;
    bool m_month_isValid;

    QString m_note;
    bool m_note_isSet;
    bool m_note_isValid;

    QString m_number;
    bool m_number_isSet;
    bool m_number_isValid;

    QString m_organization;
    bool m_organization_isSet;
    bool m_organization_isValid;

    QString m_pages;
    bool m_pages_isSet;
    bool m_pages_isValid;

    QString m_publisher;
    bool m_publisher_isSet;
    bool m_publisher_isValid;

    QString m_school;
    bool m_school_isSet;
    bool m_school_isValid;

    QString m_series;
    bool m_series_isSet;
    bool m_series_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;

    QString m_volume;
    bool m_volume_isSet;
    bool m_volume_isValid;

    QString m_year;
    bool m_year_isSet;
    bool m_year_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIReferenceResourceAttributes)

#endif // OAIReferenceResourceAttributes_H
