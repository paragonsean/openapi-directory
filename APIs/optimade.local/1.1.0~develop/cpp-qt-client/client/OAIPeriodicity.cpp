/**
 * OPTIMADE API
 * The [Open Databases Integration for Materials Design (OPTIMADE) consortium](https://www.optimade.org/) aims to make materials databases interoperational by developing a common REST API.  This specification is generated using [`optimade-python-tools`](https://github.com/Materials-Consortia/optimade-python-tools/tree/v0.16.0) v0.16.0.
 *
 * The version of the OpenAPI document: 1.1.0~develop
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPeriodicity.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPeriodicity::OAIPeriodicity(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPeriodicity::OAIPeriodicity() {
    this->initializeModel();
}

OAIPeriodicity::~OAIPeriodicity() {}

void OAIPeriodicity::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIPeriodicity::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIPeriodicity::fromJson(QString jsonString) {
    
    if ( jsonString.compare(QString::number(0), Qt::CaseInsensitive) == 0) {
        m_value = eOAIPeriodicity::_0;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare(QString::number(1), Qt::CaseInsensitive) == 0) {
        m_value = eOAIPeriodicity::_1;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIPeriodicity::fromJsonValue(QJsonValue json) {
m_value = static_cast<eOAIPeriodicity>(json.toInt());
}

QString OAIPeriodicity::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIPeriodicity::_0:
            val = QString::number(0);
            break;
        case eOAIPeriodicity::_1:
            val = QString::number(1);
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIPeriodicity::asJsonValue() const {
    
    return QJsonValue(static_cast<int>(m_value));
}


OAIPeriodicity::eOAIPeriodicity OAIPeriodicity::getValue() const {
    return m_value;
}

void OAIPeriodicity::setValue(const OAIPeriodicity::eOAIPeriodicity& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIPeriodicity::isSet() const {
    
    return m_value_isSet;
}

bool OAIPeriodicity::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
