/**
 * OPTIMADE API
 * The [Open Databases Integration for Materials Design (OPTIMADE) consortium](https://www.optimade.org/) aims to make materials databases interoperational by developing a common REST API.  This specification is generated using [`optimade-python-tools`](https://github.com/Materials-Consortia/optimade-python-tools/tree/v0.16.0) v0.16.0.
 *
 * The version of the OpenAPI document: 1.1.0~develop
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAssembly.h
 *
 * A description of groups of sites that are statistically correlated.  - **Examples** (for each entry of the assemblies list):     - &#x60;{\&quot;sites_in_groups\&quot;: [[0], [1]], \&quot;group_probabilities: [0.3, 0.7]}&#x60;: the first site and the second site never occur at the same time in the unit cell.       Statistically, 30 % of the times the first site is present, while 70 % of the times the second site is present.     - &#x60;{\&quot;sites_in_groups\&quot;: [[1,2], [3]], \&quot;group_probabilities: [0.3, 0.7]}&#x60;: the second and third site are either present together or not present; they form the first group of atoms for this assembly.       The second group is formed by the fourth site. Sites of the first group (the second and the third) are never present at the same time as the fourth site.       30 % of times sites 1 and 2 are present (and site 3 is absent); 70 % of times site 3 is present (and sites 1 and 2 are absent).
 */

#ifndef OAIAssembly_H
#define OAIAssembly_H

#include <QJsonObject>

#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAssembly : public OAIObject {
public:
    OAIAssembly();
    OAIAssembly(QString json);
    ~OAIAssembly() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<double> getGroupProbabilities() const;
    void setGroupProbabilities(const QList<double> &group_probabilities);
    bool is_group_probabilities_Set() const;
    bool is_group_probabilities_Valid() const;

    QList<QList<qint32>> getSitesInGroups() const;
    void setSitesInGroups(const QList<QList<qint32>> &sites_in_groups);
    bool is_sites_in_groups_Set() const;
    bool is_sites_in_groups_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<double> m_group_probabilities;
    bool m_group_probabilities_isSet;
    bool m_group_probabilities_isValid;

    QList<QList<qint32>> m_sites_in_groups;
    bool m_sites_in_groups_isSet;
    bool m_sites_in_groups_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAssembly)

#endif // OAIAssembly_H
