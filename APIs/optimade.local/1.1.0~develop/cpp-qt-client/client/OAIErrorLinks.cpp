/**
 * OPTIMADE API
 * The [Open Databases Integration for Materials Design (OPTIMADE) consortium](https://www.optimade.org/) aims to make materials databases interoperational by developing a common REST API.  This specification is generated using [`optimade-python-tools`](https://github.com/Materials-Consortia/optimade-python-tools/tree/v0.16.0) v0.16.0.
 *
 * The version of the OpenAPI document: 1.1.0~develop
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIErrorLinks.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIErrorLinks::OAIErrorLinks(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIErrorLinks::OAIErrorLinks() {
    this->initializeModel();
}

OAIErrorLinks::~OAIErrorLinks() {}

void OAIErrorLinks::initializeModel() {

    m_about_isSet = false;
    m_about_isValid = false;
}

void OAIErrorLinks::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIErrorLinks::fromJsonObject(QJsonObject json) {

    m_about_isValid = ::OpenAPI::fromJsonValue(m_about, json[QString("about")]);
    m_about_isSet = !json[QString("about")].isNull() && m_about_isValid;
}

QString OAIErrorLinks::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIErrorLinks::asJsonObject() const {
    QJsonObject obj;
    if (m_about.isSet()) {
        obj.insert(QString("about"), ::OpenAPI::toJsonValue(m_about));
    }
    return obj;
}

OAIAbout OAIErrorLinks::getAbout() const {
    return m_about;
}
void OAIErrorLinks::setAbout(const OAIAbout &about) {
    m_about = about;
    m_about_isSet = true;
}

bool OAIErrorLinks::is_about_Set() const{
    return m_about_isSet;
}

bool OAIErrorLinks::is_about_Valid() const{
    return m_about_isValid;
}

bool OAIErrorLinks::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_about.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIErrorLinks::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
