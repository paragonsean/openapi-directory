/**
 * OPTIMADE API
 * The [Open Databases Integration for Materials Design (OPTIMADE) consortium](https://www.optimade.org/) aims to make materials databases interoperational by developing a common REST API.  This specification is generated using [`optimade-python-tools`](https://github.com/Materials-Consortia/optimade-python-tools/tree/v0.16.0) v0.16.0.
 *
 * The version of the OpenAPI document: 1.1.0~develop
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIStructureResourceAttributes.h
 *
 * This class contains the Field for the attributes used to represent a structure, e.g. unit cell, atoms, positions.
 */

#ifndef OAIStructureResourceAttributes_H
#define OAIStructureResourceAttributes_H

#include <QJsonObject>

#include "OAIAssembly.h"
#include "OAIPeriodicity.h"
#include "OAISpecies.h"
#include "OAIStructureFeatures.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAssembly;
class OAISpecies;

class OAIStructureResourceAttributes : public OAIObject {
public:
    OAIStructureResourceAttributes();
    OAIStructureResourceAttributes(QString json);
    ~OAIStructureResourceAttributes() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIAssembly> getAssemblies() const;
    void setAssemblies(const QList<OAIAssembly> &assemblies);
    bool is_assemblies_Set() const;
    bool is_assemblies_Valid() const;

    QList<QList<double>> getCartesianSitePositions() const;
    void setCartesianSitePositions(const QList<QList<double>> &cartesian_site_positions);
    bool is_cartesian_site_positions_Set() const;
    bool is_cartesian_site_positions_Valid() const;

    QString getChemicalFormulaAnonymous() const;
    void setChemicalFormulaAnonymous(const QString &chemical_formula_anonymous);
    bool is_chemical_formula_anonymous_Set() const;
    bool is_chemical_formula_anonymous_Valid() const;

    QString getChemicalFormulaDescriptive() const;
    void setChemicalFormulaDescriptive(const QString &chemical_formula_descriptive);
    bool is_chemical_formula_descriptive_Set() const;
    bool is_chemical_formula_descriptive_Valid() const;

    QString getChemicalFormulaHill() const;
    void setChemicalFormulaHill(const QString &chemical_formula_hill);
    bool is_chemical_formula_hill_Set() const;
    bool is_chemical_formula_hill_Valid() const;

    QString getChemicalFormulaReduced() const;
    void setChemicalFormulaReduced(const QString &chemical_formula_reduced);
    bool is_chemical_formula_reduced_Set() const;
    bool is_chemical_formula_reduced_Valid() const;

    QList<OAIPeriodicity> getDimensionTypes() const;
    void setDimensionTypes(const QList<OAIPeriodicity> &dimension_types);
    bool is_dimension_types_Set() const;
    bool is_dimension_types_Valid() const;

    QList<QString> getElements() const;
    void setElements(const QList<QString> &elements);
    bool is_elements_Set() const;
    bool is_elements_Valid() const;

    QList<double> getElementsRatios() const;
    void setElementsRatios(const QList<double> &elements_ratios);
    bool is_elements_ratios_Set() const;
    bool is_elements_ratios_Valid() const;

    QString getImmutableId() const;
    void setImmutableId(const QString &immutable_id);
    bool is_immutable_id_Set() const;
    bool is_immutable_id_Valid() const;

    QDateTime getLastModified() const;
    void setLastModified(const QDateTime &last_modified);
    bool is_last_modified_Set() const;
    bool is_last_modified_Valid() const;

    QList<QList<double>> getLatticeVectors() const;
    void setLatticeVectors(const QList<QList<double>> &lattice_vectors);
    bool is_lattice_vectors_Set() const;
    bool is_lattice_vectors_Valid() const;

    qint32 getNelements() const;
    void setNelements(const qint32 &nelements);
    bool is_nelements_Set() const;
    bool is_nelements_Valid() const;

    qint32 getNperiodicDimensions() const;
    void setNperiodicDimensions(const qint32 &nperiodic_dimensions);
    bool is_nperiodic_dimensions_Set() const;
    bool is_nperiodic_dimensions_Valid() const;

    qint32 getNsites() const;
    void setNsites(const qint32 &nsites);
    bool is_nsites_Set() const;
    bool is_nsites_Valid() const;

    QList<OAISpecies> getSpecies() const;
    void setSpecies(const QList<OAISpecies> &species);
    bool is_species_Set() const;
    bool is_species_Valid() const;

    QList<QString> getSpeciesAtSites() const;
    void setSpeciesAtSites(const QList<QString> &species_at_sites);
    bool is_species_at_sites_Set() const;
    bool is_species_at_sites_Valid() const;

    QList<OAIStructureFeatures> getStructureFeatures() const;
    void setStructureFeatures(const QList<OAIStructureFeatures> &structure_features);
    bool is_structure_features_Set() const;
    bool is_structure_features_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIAssembly> m_assemblies;
    bool m_assemblies_isSet;
    bool m_assemblies_isValid;

    QList<QList<double>> m_cartesian_site_positions;
    bool m_cartesian_site_positions_isSet;
    bool m_cartesian_site_positions_isValid;

    QString m_chemical_formula_anonymous;
    bool m_chemical_formula_anonymous_isSet;
    bool m_chemical_formula_anonymous_isValid;

    QString m_chemical_formula_descriptive;
    bool m_chemical_formula_descriptive_isSet;
    bool m_chemical_formula_descriptive_isValid;

    QString m_chemical_formula_hill;
    bool m_chemical_formula_hill_isSet;
    bool m_chemical_formula_hill_isValid;

    QString m_chemical_formula_reduced;
    bool m_chemical_formula_reduced_isSet;
    bool m_chemical_formula_reduced_isValid;

    QList<OAIPeriodicity> m_dimension_types;
    bool m_dimension_types_isSet;
    bool m_dimension_types_isValid;

    QList<QString> m_elements;
    bool m_elements_isSet;
    bool m_elements_isValid;

    QList<double> m_elements_ratios;
    bool m_elements_ratios_isSet;
    bool m_elements_ratios_isValid;

    QString m_immutable_id;
    bool m_immutable_id_isSet;
    bool m_immutable_id_isValid;

    QDateTime m_last_modified;
    bool m_last_modified_isSet;
    bool m_last_modified_isValid;

    QList<QList<double>> m_lattice_vectors;
    bool m_lattice_vectors_isSet;
    bool m_lattice_vectors_isValid;

    qint32 m_nelements;
    bool m_nelements_isSet;
    bool m_nelements_isValid;

    qint32 m_nperiodic_dimensions;
    bool m_nperiodic_dimensions_isSet;
    bool m_nperiodic_dimensions_isValid;

    qint32 m_nsites;
    bool m_nsites_isSet;
    bool m_nsites_isValid;

    QList<OAISpecies> m_species;
    bool m_species_isSet;
    bool m_species_isValid;

    QList<QString> m_species_at_sites;
    bool m_species_at_sites_isSet;
    bool m_species_at_sites_isValid;

    QList<OAIStructureFeatures> m_structure_features;
    bool m_structure_features_isSet;
    bool m_structure_features_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIStructureResourceAttributes)

#endif // OAIStructureResourceAttributes_H
