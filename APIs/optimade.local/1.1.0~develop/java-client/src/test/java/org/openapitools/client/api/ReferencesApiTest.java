/*
 * OPTIMADE API
 * The [Open Databases Integration for Materials Design (OPTIMADE) consortium](https://www.optimade.org/) aims to make materials databases interoperational by developing a common REST API.  This specification is generated using [`optimade-python-tools`](https://github.com/Materials-Consortia/optimade-python-tools/tree/v0.16.0) v0.16.0.
 *
 * The version of the OpenAPI document: 1.1.0~develop
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ErrorResponse;
import org.openapitools.client.model.ReferenceResponseMany;
import org.openapitools.client.model.ReferenceResponseOne;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ReferencesApi
 */
@Disabled
public class ReferencesApiTest {

    private final ReferencesApi api = new ReferencesApi();

    /**
     * Get References
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getReferencesReferencesGetTest() throws ApiException {
        String filter = null;
        String responseFormat = null;
        String emailAddress = null;
        String responseFields = null;
        String sort = null;
        Integer pageLimit = null;
        Integer pageOffset = null;
        Integer pageNumber = null;
        Integer pageCursor = null;
        Integer pageAbove = null;
        Integer pageBelow = null;
        String include = null;
        String apiHint = null;
        ReferenceResponseMany response = api.getReferencesReferencesGet(filter, responseFormat, emailAddress, responseFields, sort, pageLimit, pageOffset, pageNumber, pageCursor, pageAbove, pageBelow, include, apiHint);
        // TODO: test validations
    }

    /**
     * Get Single Reference
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSingleReferenceReferencesEntryIdGetTest() throws ApiException {
        String entryId = null;
        String responseFormat = null;
        String emailAddress = null;
        String responseFields = null;
        String include = null;
        String apiHint = null;
        ReferenceResponseOne response = api.getSingleReferenceReferencesEntryIdGet(entryId, responseFormat, emailAddress, responseFields, include, apiHint);
        // TODO: test validations
    }

}
