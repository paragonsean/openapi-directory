/**
 * EtMDB REST API v1
 * The Ethiopian Movie Database
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";

/**
* MovieCast service.
* @module api/MovieCastApi
* @version 1.0.0
*/
export default class MovieCastApi {

    /**
    * Constructs a new MovieCastApi. 
    * @alias module:api/MovieCastApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the movieCastSearchRead operation.
     * @callback module:api/MovieCastApi~movieCastSearchReadCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Return movie cast search result
     * Return movie cast search result  ### Response Class (Status 200)  * __{movie_title}__: Used as a key word to search movie cast * You can use both Amharic or English charset/font to search  For more details on how movie casts are listed [see here][ref]. [ref]: https://etmdb.com/en/movie-list/-updated_date
     * @param {String} movieTitle 
     * @param {module:api/MovieCastApi~movieCastSearchReadCallback} callback The callback function, accepting three arguments: error, data, response
     */
    movieCastSearchRead(movieTitle, callback) {
      let postBody = null;
      // verify the required parameter 'movieTitle' is set
      if (movieTitle === undefined || movieTitle === null) {
        throw new Error("Missing the required parameter 'movieTitle' when calling movieCastSearchRead");
      }

      let pathParams = {
        'movie_title': movieTitle
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/v1/movie-cast/search/{movie_title}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the movieCastSearchallRead operation.
     * @callback module:api/MovieCastApi~movieCastSearchallReadCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Return movie cast search result
     * Return movie cast search result  ### Response Class (Status 200) __{param}__ argument can be * artist first name * artist last name * artist username * movie title or * character name  For more details on how movie casts are listed [see here][ref]. [ref]: https://etmdb.com/en/movie-list/-updated_date
     * @param {String} param 
     * @param {module:api/MovieCastApi~movieCastSearchallReadCallback} callback The callback function, accepting three arguments: error, data, response
     */
    movieCastSearchallRead(param, callback) {
      let postBody = null;
      // verify the required parameter 'param' is set
      if (param === undefined || param === null) {
        throw new Error("Missing the required parameter 'param' when calling movieCastSearchallRead");
      }

      let pathParams = {
        'param': param
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/v1/movie-cast/searchall/{param}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
