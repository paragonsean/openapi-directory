/**
 * OpenAPI space
 * This is the API for OpenAPI space.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@apinf.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAPIMeta.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAPIMeta::OAIAPIMeta(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAPIMeta::OAIAPIMeta() {
    this->initializeModel();
}

OAIAPIMeta::~OAIAPIMeta() {}

void OAIAPIMeta::initializeModel() {

    m_created_isSet = false;
    m_created_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_modified_isSet = false;
    m_modified_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_owner_isSet = false;
    m_owner_isValid = false;

    m_swagger_isSet = false;
    m_swagger_isValid = false;

    m_url_isSet = false;
    m_url_isValid = false;

    m_versions_isSet = false;
    m_versions_isValid = false;
}

void OAIAPIMeta::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAPIMeta::fromJsonObject(QJsonObject json) {

    m_created_isValid = ::OpenAPI::fromJsonValue(m_created, json[QString("created")]);
    m_created_isSet = !json[QString("created")].isNull() && m_created_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_modified_isValid = ::OpenAPI::fromJsonValue(m_modified, json[QString("modified")]);
    m_modified_isSet = !json[QString("modified")].isNull() && m_modified_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_owner_isValid = ::OpenAPI::fromJsonValue(m_owner, json[QString("owner")]);
    m_owner_isSet = !json[QString("owner")].isNull() && m_owner_isValid;

    m_swagger_isValid = ::OpenAPI::fromJsonValue(m_swagger, json[QString("swagger")]);
    m_swagger_isSet = !json[QString("swagger")].isNull() && m_swagger_isValid;

    m_url_isValid = ::OpenAPI::fromJsonValue(m_url, json[QString("url")]);
    m_url_isSet = !json[QString("url")].isNull() && m_url_isValid;

    m_versions_isValid = ::OpenAPI::fromJsonValue(m_versions, json[QString("versions")]);
    m_versions_isSet = !json[QString("versions")].isNull() && m_versions_isValid;
}

QString OAIAPIMeta::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAPIMeta::asJsonObject() const {
    QJsonObject obj;
    if (m_created_isSet) {
        obj.insert(QString("created"), ::OpenAPI::toJsonValue(m_created));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_modified_isSet) {
        obj.insert(QString("modified"), ::OpenAPI::toJsonValue(m_modified));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_owner_isSet) {
        obj.insert(QString("owner"), ::OpenAPI::toJsonValue(m_owner));
    }
    if (m_swagger_isSet) {
        obj.insert(QString("swagger"), ::OpenAPI::toJsonValue(m_swagger));
    }
    if (m_url_isSet) {
        obj.insert(QString("url"), ::OpenAPI::toJsonValue(m_url));
    }
    if (m_versions.size() > 0) {
        obj.insert(QString("versions"), ::OpenAPI::toJsonValue(m_versions));
    }
    return obj;
}

QDateTime OAIAPIMeta::getCreated() const {
    return m_created;
}
void OAIAPIMeta::setCreated(const QDateTime &created) {
    m_created = created;
    m_created_isSet = true;
}

bool OAIAPIMeta::is_created_Set() const{
    return m_created_isSet;
}

bool OAIAPIMeta::is_created_Valid() const{
    return m_created_isValid;
}

QString OAIAPIMeta::getDescription() const {
    return m_description;
}
void OAIAPIMeta::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIAPIMeta::is_description_Set() const{
    return m_description_isSet;
}

bool OAIAPIMeta::is_description_Valid() const{
    return m_description_isValid;
}

QDateTime OAIAPIMeta::getModified() const {
    return m_modified;
}
void OAIAPIMeta::setModified(const QDateTime &modified) {
    m_modified = modified;
    m_modified_isSet = true;
}

bool OAIAPIMeta::is_modified_Set() const{
    return m_modified_isSet;
}

bool OAIAPIMeta::is_modified_Valid() const{
    return m_modified_isValid;
}

QString OAIAPIMeta::getName() const {
    return m_name;
}
void OAIAPIMeta::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIAPIMeta::is_name_Set() const{
    return m_name_isSet;
}

bool OAIAPIMeta::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIAPIMeta::getOwner() const {
    return m_owner;
}
void OAIAPIMeta::setOwner(const QString &owner) {
    m_owner = owner;
    m_owner_isSet = true;
}

bool OAIAPIMeta::is_owner_Set() const{
    return m_owner_isSet;
}

bool OAIAPIMeta::is_owner_Valid() const{
    return m_owner_isValid;
}

OAIObject OAIAPIMeta::getSwagger() const {
    return m_swagger;
}
void OAIAPIMeta::setSwagger(const OAIObject &swagger) {
    m_swagger = swagger;
    m_swagger_isSet = true;
}

bool OAIAPIMeta::is_swagger_Set() const{
    return m_swagger_isSet;
}

bool OAIAPIMeta::is_swagger_Valid() const{
    return m_swagger_isValid;
}

QString OAIAPIMeta::getUrl() const {
    return m_url;
}
void OAIAPIMeta::setUrl(const QString &url) {
    m_url = url;
    m_url_isSet = true;
}

bool OAIAPIMeta::is_url_Set() const{
    return m_url_isSet;
}

bool OAIAPIMeta::is_url_Valid() const{
    return m_url_isValid;
}

QList<OAIObject> OAIAPIMeta::getVersions() const {
    return m_versions;
}
void OAIAPIMeta::setVersions(const QList<OAIObject> &versions) {
    m_versions = versions;
    m_versions_isSet = true;
}

bool OAIAPIMeta::is_versions_Set() const{
    return m_versions_isSet;
}

bool OAIAPIMeta::is_versions_Valid() const{
    return m_versions_isValid;
}

bool OAIAPIMeta::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_created_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_modified_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_owner_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_swagger_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_versions.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAPIMeta::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
