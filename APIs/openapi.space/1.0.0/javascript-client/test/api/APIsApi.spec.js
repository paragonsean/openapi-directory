/**
 * OpenAPI space
 * This is the API for OpenAPI space.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@apinf.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.OpenApiSpace);
  }
}(this, function(expect, OpenApiSpace) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new OpenApiSpace.APIsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('APIsApi', function() {
    describe('deleteApi', function() {
      it('should call deleteApi successfully', function(done) {
        //uncomment below and update the code to test deleteApi
        //instance.deleteApi(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteApiVersion', function() {
      it('should call deleteApiVersion successfully', function(done) {
        //uncomment below and update the code to test deleteApiVersion
        //instance.deleteApiVersion(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getApiVersions', function() {
      it('should call getApiVersions successfully', function(done) {
        //uncomment below and update the code to test getApiVersions
        //instance.getApiVersions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getJsonDefinition', function() {
      it('should call getJsonDefinition successfully', function(done) {
        //uncomment below and update the code to test getJsonDefinition
        //instance.getJsonDefinition(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getOwnerApis', function() {
      it('should call getOwnerApis successfully', function(done) {
        //uncomment below and update the code to test getOwnerApis
        //instance.getOwnerApis(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getYamlDefinition', function() {
      it('should call getYamlDefinition successfully', function(done) {
        //uncomment below and update the code to test getYamlDefinition
        //instance.getYamlDefinition(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('publishApiVersion', function() {
      it('should call publishApiVersion successfully', function(done) {
        //uncomment below and update the code to test publishApiVersion
        //instance.publishApiVersion(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('saveDefinition', function() {
      it('should call saveDefinition successfully', function(done) {
        //uncomment below and update the code to test saveDefinition
        //instance.saveDefinition(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('searchApis', function() {
      it('should call searchApis successfully', function(done) {
        //uncomment below and update the code to test searchApis
        //instance.searchApis(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
