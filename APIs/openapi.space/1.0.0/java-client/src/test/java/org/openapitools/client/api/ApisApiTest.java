/*
 * OpenAPI space
 * This is the API for OpenAPI space.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@apinf.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.APIMeta;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ApisApi
 */
@Disabled
public class ApisApiTest {

    private final ApisApi api = new ApisApi();

    /**
     * Deletes the specified API
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteApiTest() throws ApiException {
        String owner = null;
        String api = null;
        List<APIMeta> response = api.deleteApi(owner, api);
        // TODO: test validations
    }

    /**
     * Deletes a particular version of the specified API
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteApiVersionTest() throws ApiException {
        String owner = null;
        String api = null;
        String version = null;
        APIMeta response = api.deleteApiVersion(owner, api, version);
        // TODO: test validations
    }

    /**
     * Retrieves an API meta listing for all API versions for this owner and API
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getApiVersionsTest() throws ApiException {
        String owner = null;
        String api = null;
        List<APIMeta> response = api.getApiVersions(owner, api);
        // TODO: test validations
    }

    /**
     * Retrieves the Swagger definition for the specified API and version in JSON format
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getJsonDefinitionTest() throws ApiException {
        String owner = null;
        String api = null;
        String version = null;
        Object response = api.getJsonDefinition(owner, api, version);
        // TODO: test validations
    }

    /**
     * Retrieves an API meta listing of all APIs defined for this owner
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getOwnerApisTest() throws ApiException {
        String owner = null;
        String sort = null;
        String order = null;
        List<APIMeta> response = api.getOwnerApis(owner, sort, order);
        // TODO: test validations
    }

    /**
     * Retrieves the Swagger definition for the specified API and version in YAML format
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getYamlDefinitionTest() throws ApiException {
        String owner = null;
        String api = null;
        String version = null;
        Object response = api.getYamlDefinition(owner, api, version);
        // TODO: test validations
    }

    /**
     * Publish a particular version of the specified API
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void publishApiVersionTest() throws ApiException {
        String owner = null;
        String api = null;
        String version = null;
        api.publishApiVersion(owner, api, version);
        // TODO: test validations
    }

    /**
     * Saves the provided Swagger definition
     *
     * Saves the provided Swagger definition; the owner must match the token owner. The version will be extracted from the Swagger definitions itself.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void saveDefinitionTest() throws ApiException {
        String owner = null;
        String api = null;
        Object definition = null;
        Boolean _private = null;
        Boolean force = null;
        APIMeta response = api.saveDefinition(owner, api, definition, _private, force);
        // TODO: test validations
    }

    /**
     * Retrieves a list of currently defined APIs in API meta list format.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void searchApisTest() throws ApiException {
        String query = null;
        Integer limit = null;
        Integer offset = null;
        String sort = null;
        String order = null;
        List<APIMeta> response = api.searchApis(query, limit, offset, sort, order);
        // TODO: test validations
    }

}
