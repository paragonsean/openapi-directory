/**
 * Vimeo
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreate_vod_alt1_request_rent_price.h
 *
 * 
 */

#ifndef OAICreate_vod_alt1_request_rent_price_H
#define OAICreate_vod_alt1_request_rent_price_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICreate_vod_alt1_request_rent_price : public OAIObject {
public:
    OAICreate_vod_alt1_request_rent_price();
    OAICreate_vod_alt1_request_rent_price(QString json);
    ~OAICreate_vod_alt1_request_rent_price() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getAud() const;
    void setAud(const double &aud);
    bool is_aud_Set() const;
    bool is_aud_Valid() const;

    double getCad() const;
    void setCad(const double &cad);
    bool is_cad_Set() const;
    bool is_cad_Valid() const;

    double getChf() const;
    void setChf(const double &chf);
    bool is_chf_Set() const;
    bool is_chf_Valid() const;

    double getDkk() const;
    void setDkk(const double &dkk);
    bool is_dkk_Set() const;
    bool is_dkk_Valid() const;

    double getEur() const;
    void setEur(const double &eur);
    bool is_eur_Set() const;
    bool is_eur_Valid() const;

    double getGbp() const;
    void setGbp(const double &gbp);
    bool is_gbp_Set() const;
    bool is_gbp_Valid() const;

    double getJpy() const;
    void setJpy(const double &jpy);
    bool is_jpy_Set() const;
    bool is_jpy_Valid() const;

    double getKrw() const;
    void setKrw(const double &krw);
    bool is_krw_Set() const;
    bool is_krw_Valid() const;

    double getNok() const;
    void setNok(const double &nok);
    bool is_nok_Set() const;
    bool is_nok_Valid() const;

    double getPln() const;
    void setPln(const double &pln);
    bool is_pln_Set() const;
    bool is_pln_Valid() const;

    double getSek() const;
    void setSek(const double &sek);
    bool is_sek_Set() const;
    bool is_sek_Valid() const;

    double getUsd() const;
    void setUsd(const double &usd);
    bool is_usd_Set() const;
    bool is_usd_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_aud;
    bool m_aud_isSet;
    bool m_aud_isValid;

    double m_cad;
    bool m_cad_isSet;
    bool m_cad_isValid;

    double m_chf;
    bool m_chf_isSet;
    bool m_chf_isValid;

    double m_dkk;
    bool m_dkk_isSet;
    bool m_dkk_isValid;

    double m_eur;
    bool m_eur_isSet;
    bool m_eur_isValid;

    double m_gbp;
    bool m_gbp_isSet;
    bool m_gbp_isValid;

    double m_jpy;
    bool m_jpy_isSet;
    bool m_jpy_isValid;

    double m_krw;
    bool m_krw_isSet;
    bool m_krw_isValid;

    double m_nok;
    bool m_nok_isSet;
    bool m_nok_isValid;

    double m_pln;
    bool m_pln_isSet;
    bool m_pln_isValid;

    double m_sek;
    bool m_sek_isSet;
    bool m_sek_isValid;

    double m_usd;
    bool m_usd_isSet;
    bool m_usd_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreate_vod_alt1_request_rent_price)

#endif // OAICreate_vod_alt1_request_rent_price_H
