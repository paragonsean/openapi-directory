/**
 * Vimeo
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIChannel.h
 *
 * 
 */

#ifndef OAIChannel_H
#define OAIChannel_H

#include <QJsonObject>

#include "OAICategory.h"
#include "OAIChannel_metadata.h"
#include "OAIChannel_privacy.h"
#include "OAIPicture.h"
#include "OAITag.h"
#include "OAIUser.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICategory;
class OAIPicture;
class OAIChannel_metadata;
class OAIChannel_privacy;
class OAITag;
class OAIUser;

class OAIChannel : public OAIObject {
public:
    OAIChannel();
    OAIChannel(QString json);
    ~OAIChannel() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAICategory> getCategories() const;
    void setCategories(const QList<OAICategory> &categories);
    bool is_categories_Set() const;
    bool is_categories_Valid() const;

    QString getCreatedTime() const;
    void setCreatedTime(const QString &created_time);
    bool is_created_time_Set() const;
    bool is_created_time_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    OAIPicture getHeader() const;
    void setHeader(const OAIPicture &header);
    bool is_header_Set() const;
    bool is_header_Valid() const;

    QString getLink() const;
    void setLink(const QString &link);
    bool is_link_Set() const;
    bool is_link_Valid() const;

    OAIChannel_metadata getMetadata() const;
    void setMetadata(const OAIChannel_metadata &metadata);
    bool is_metadata_Set() const;
    bool is_metadata_Valid() const;

    QString getModifiedTime() const;
    void setModifiedTime(const QString &modified_time);
    bool is_modified_time_Set() const;
    bool is_modified_time_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAIPicture getPictures() const;
    void setPictures(const OAIPicture &pictures);
    bool is_pictures_Set() const;
    bool is_pictures_Valid() const;

    OAIChannel_privacy getPrivacy() const;
    void setPrivacy(const OAIChannel_privacy &privacy);
    bool is_privacy_Set() const;
    bool is_privacy_Valid() const;

    QString getResourceKey() const;
    void setResourceKey(const QString &resource_key);
    bool is_resource_key_Set() const;
    bool is_resource_key_Valid() const;

    QList<OAITag> getTags() const;
    void setTags(const QList<OAITag> &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    QString getUri() const;
    void setUri(const QString &uri);
    bool is_uri_Set() const;
    bool is_uri_Valid() const;

    OAIUser getUser() const;
    void setUser(const OAIUser &user);
    bool is_user_Set() const;
    bool is_user_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAICategory> m_categories;
    bool m_categories_isSet;
    bool m_categories_isValid;

    QString m_created_time;
    bool m_created_time_isSet;
    bool m_created_time_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    OAIPicture m_header;
    bool m_header_isSet;
    bool m_header_isValid;

    QString m_link;
    bool m_link_isSet;
    bool m_link_isValid;

    OAIChannel_metadata m_metadata;
    bool m_metadata_isSet;
    bool m_metadata_isValid;

    QString m_modified_time;
    bool m_modified_time_isSet;
    bool m_modified_time_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAIPicture m_pictures;
    bool m_pictures_isSet;
    bool m_pictures_isValid;

    OAIChannel_privacy m_privacy;
    bool m_privacy_isSet;
    bool m_privacy_isValid;

    QString m_resource_key;
    bool m_resource_key_isSet;
    bool m_resource_key_isValid;

    QList<OAITag> m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    QString m_uri;
    bool m_uri_isSet;
    bool m_uri_isValid;

    OAIUser m_user;
    bool m_user_isSet;
    bool m_user_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIChannel)

#endif // OAIChannel_H
