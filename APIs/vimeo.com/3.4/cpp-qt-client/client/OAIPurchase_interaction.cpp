/**
 * Vimeo
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPurchase_interaction.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPurchase_interaction::OAIPurchase_interaction(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPurchase_interaction::OAIPurchase_interaction() {
    this->initializeModel();
}

OAIPurchase_interaction::~OAIPurchase_interaction() {}

void OAIPurchase_interaction::initializeModel() {

    m_buy_isSet = false;
    m_buy_isValid = false;

    m_rent_isSet = false;
    m_rent_isValid = false;

    m_subscribe_isSet = false;
    m_subscribe_isValid = false;
}

void OAIPurchase_interaction::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPurchase_interaction::fromJsonObject(QJsonObject json) {

    m_buy_isValid = ::OpenAPI::fromJsonValue(m_buy, json[QString("buy")]);
    m_buy_isSet = !json[QString("buy")].isNull() && m_buy_isValid;

    m_rent_isValid = ::OpenAPI::fromJsonValue(m_rent, json[QString("rent")]);
    m_rent_isSet = !json[QString("rent")].isNull() && m_rent_isValid;

    m_subscribe_isValid = ::OpenAPI::fromJsonValue(m_subscribe, json[QString("subscribe")]);
    m_subscribe_isSet = !json[QString("subscribe")].isNull() && m_subscribe_isValid;
}

QString OAIPurchase_interaction::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPurchase_interaction::asJsonObject() const {
    QJsonObject obj;
    if (m_buy.isSet()) {
        obj.insert(QString("buy"), ::OpenAPI::toJsonValue(m_buy));
    }
    if (m_rent_isSet) {
        obj.insert(QString("rent"), ::OpenAPI::toJsonValue(m_rent));
    }
    if (m_subscribe.isSet()) {
        obj.insert(QString("subscribe"), ::OpenAPI::toJsonValue(m_subscribe));
    }
    return obj;
}

OAIPurchase_interaction_buy OAIPurchase_interaction::getBuy() const {
    return m_buy;
}
void OAIPurchase_interaction::setBuy(const OAIPurchase_interaction_buy &buy) {
    m_buy = buy;
    m_buy_isSet = true;
}

bool OAIPurchase_interaction::is_buy_Set() const{
    return m_buy_isSet;
}

bool OAIPurchase_interaction::is_buy_Valid() const{
    return m_buy_isValid;
}

OAIObject OAIPurchase_interaction::getRent() const {
    return m_rent;
}
void OAIPurchase_interaction::setRent(const OAIObject &rent) {
    m_rent = rent;
    m_rent_isSet = true;
}

bool OAIPurchase_interaction::is_rent_Set() const{
    return m_rent_isSet;
}

bool OAIPurchase_interaction::is_rent_Valid() const{
    return m_rent_isValid;
}

OAIPurchase_interaction_subscribe OAIPurchase_interaction::getSubscribe() const {
    return m_subscribe;
}
void OAIPurchase_interaction::setSubscribe(const OAIPurchase_interaction_subscribe &subscribe) {
    m_subscribe = subscribe;
    m_subscribe_isSet = true;
}

bool OAIPurchase_interaction::is_subscribe_Set() const{
    return m_subscribe_isSet;
}

bool OAIPurchase_interaction::is_subscribe_Valid() const{
    return m_subscribe_isValid;
}

bool OAIPurchase_interaction::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_buy.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_rent_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_subscribe.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPurchase_interaction::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
