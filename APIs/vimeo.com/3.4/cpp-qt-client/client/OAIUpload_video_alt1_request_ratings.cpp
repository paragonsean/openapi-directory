/**
 * Vimeo
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpload_video_alt1_request_ratings.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpload_video_alt1_request_ratings::OAIUpload_video_alt1_request_ratings(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpload_video_alt1_request_ratings::OAIUpload_video_alt1_request_ratings() {
    this->initializeModel();
}

OAIUpload_video_alt1_request_ratings::~OAIUpload_video_alt1_request_ratings() {}

void OAIUpload_video_alt1_request_ratings::initializeModel() {

    m_mpaa_isSet = false;
    m_mpaa_isValid = false;

    m_tv_isSet = false;
    m_tv_isValid = false;
}

void OAIUpload_video_alt1_request_ratings::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpload_video_alt1_request_ratings::fromJsonObject(QJsonObject json) {

    m_mpaa_isValid = ::OpenAPI::fromJsonValue(m_mpaa, json[QString("mpaa")]);
    m_mpaa_isSet = !json[QString("mpaa")].isNull() && m_mpaa_isValid;

    m_tv_isValid = ::OpenAPI::fromJsonValue(m_tv, json[QString("tv")]);
    m_tv_isSet = !json[QString("tv")].isNull() && m_tv_isValid;
}

QString OAIUpload_video_alt1_request_ratings::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpload_video_alt1_request_ratings::asJsonObject() const {
    QJsonObject obj;
    if (m_mpaa.isSet()) {
        obj.insert(QString("mpaa"), ::OpenAPI::toJsonValue(m_mpaa));
    }
    if (m_tv.isSet()) {
        obj.insert(QString("tv"), ::OpenAPI::toJsonValue(m_tv));
    }
    return obj;
}

OAIUpload_video_alt1_request_ratings_mpaa OAIUpload_video_alt1_request_ratings::getMpaa() const {
    return m_mpaa;
}
void OAIUpload_video_alt1_request_ratings::setMpaa(const OAIUpload_video_alt1_request_ratings_mpaa &mpaa) {
    m_mpaa = mpaa;
    m_mpaa_isSet = true;
}

bool OAIUpload_video_alt1_request_ratings::is_mpaa_Set() const{
    return m_mpaa_isSet;
}

bool OAIUpload_video_alt1_request_ratings::is_mpaa_Valid() const{
    return m_mpaa_isValid;
}

OAIUpload_video_alt1_request_ratings_tv OAIUpload_video_alt1_request_ratings::getTv() const {
    return m_tv;
}
void OAIUpload_video_alt1_request_ratings::setTv(const OAIUpload_video_alt1_request_ratings_tv &tv) {
    m_tv = tv;
    m_tv_isSet = true;
}

bool OAIUpload_video_alt1_request_ratings::is_tv_Set() const{
    return m_tv_isSet;
}

bool OAIUpload_video_alt1_request_ratings::is_tv_Valid() const{
    return m_tv_isValid;
}

bool OAIUpload_video_alt1_request_ratings::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_mpaa.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_tv.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpload_video_alt1_request_ratings::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
