/**
 * Vimeo
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAlbum_metadata_interactions.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAlbum_metadata_interactions::OAIAlbum_metadata_interactions(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAlbum_metadata_interactions::OAIAlbum_metadata_interactions() {
    this->initializeModel();
}

OAIAlbum_metadata_interactions::~OAIAlbum_metadata_interactions() {}

void OAIAlbum_metadata_interactions::initializeModel() {

    m_add_custom_thumbnails_isSet = false;
    m_add_custom_thumbnails_isValid = false;

    m_add_logos_isSet = false;
    m_add_logos_isValid = false;

    m_add_videos_isSet = false;
    m_add_videos_isValid = false;
}

void OAIAlbum_metadata_interactions::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAlbum_metadata_interactions::fromJsonObject(QJsonObject json) {

    m_add_custom_thumbnails_isValid = ::OpenAPI::fromJsonValue(m_add_custom_thumbnails, json[QString("add_custom_thumbnails")]);
    m_add_custom_thumbnails_isSet = !json[QString("add_custom_thumbnails")].isNull() && m_add_custom_thumbnails_isValid;

    m_add_logos_isValid = ::OpenAPI::fromJsonValue(m_add_logos, json[QString("add_logos")]);
    m_add_logos_isSet = !json[QString("add_logos")].isNull() && m_add_logos_isValid;

    m_add_videos_isValid = ::OpenAPI::fromJsonValue(m_add_videos, json[QString("add_videos")]);
    m_add_videos_isSet = !json[QString("add_videos")].isNull() && m_add_videos_isValid;
}

QString OAIAlbum_metadata_interactions::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAlbum_metadata_interactions::asJsonObject() const {
    QJsonObject obj;
    if (m_add_custom_thumbnails.isSet()) {
        obj.insert(QString("add_custom_thumbnails"), ::OpenAPI::toJsonValue(m_add_custom_thumbnails));
    }
    if (m_add_logos.isSet()) {
        obj.insert(QString("add_logos"), ::OpenAPI::toJsonValue(m_add_logos));
    }
    if (m_add_videos.isSet()) {
        obj.insert(QString("add_videos"), ::OpenAPI::toJsonValue(m_add_videos));
    }
    return obj;
}

OAIAlbum_metadata_interactions_add_custom_thumbnails OAIAlbum_metadata_interactions::getAddCustomThumbnails() const {
    return m_add_custom_thumbnails;
}
void OAIAlbum_metadata_interactions::setAddCustomThumbnails(const OAIAlbum_metadata_interactions_add_custom_thumbnails &add_custom_thumbnails) {
    m_add_custom_thumbnails = add_custom_thumbnails;
    m_add_custom_thumbnails_isSet = true;
}

bool OAIAlbum_metadata_interactions::is_add_custom_thumbnails_Set() const{
    return m_add_custom_thumbnails_isSet;
}

bool OAIAlbum_metadata_interactions::is_add_custom_thumbnails_Valid() const{
    return m_add_custom_thumbnails_isValid;
}

OAIAlbum_metadata_interactions_add_logos OAIAlbum_metadata_interactions::getAddLogos() const {
    return m_add_logos;
}
void OAIAlbum_metadata_interactions::setAddLogos(const OAIAlbum_metadata_interactions_add_logos &add_logos) {
    m_add_logos = add_logos;
    m_add_logos_isSet = true;
}

bool OAIAlbum_metadata_interactions::is_add_logos_Set() const{
    return m_add_logos_isSet;
}

bool OAIAlbum_metadata_interactions::is_add_logos_Valid() const{
    return m_add_logos_isValid;
}

OAIAlbum_metadata_interactions_add_videos OAIAlbum_metadata_interactions::getAddVideos() const {
    return m_add_videos;
}
void OAIAlbum_metadata_interactions::setAddVideos(const OAIAlbum_metadata_interactions_add_videos &add_videos) {
    m_add_videos = add_videos;
    m_add_videos_isSet = true;
}

bool OAIAlbum_metadata_interactions::is_add_videos_Set() const{
    return m_add_videos_isSet;
}

bool OAIAlbum_metadata_interactions::is_add_videos_Valid() const{
    return m_add_videos_isValid;
}

bool OAIAlbum_metadata_interactions::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_add_custom_thumbnails.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_add_logos.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_add_videos.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAlbum_metadata_interactions::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_add_custom_thumbnails_isValid && m_add_logos_isValid && m_add_videos_isValid && true;
}

} // namespace OpenAPI
