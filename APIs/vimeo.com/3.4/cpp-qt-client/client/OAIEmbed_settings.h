/**
 * Vimeo
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEmbed_settings.h
 *
 * 
 */

#ifndef OAIEmbed_settings_H
#define OAIEmbed_settings_H

#include <QJsonObject>

#include "OAIEmbed_settings_buttons.h"
#include "OAIEmbed_settings_logos.h"
#include "OAIEmbed_settings_title.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIEmbed_settings_buttons;
class OAIEmbed_settings_logos;
class OAIEmbed_settings_title;

class OAIEmbed_settings : public OAIObject {
public:
    OAIEmbed_settings();
    OAIEmbed_settings(QString json);
    ~OAIEmbed_settings() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIEmbed_settings_buttons getButtons() const;
    void setButtons(const OAIEmbed_settings_buttons &buttons);
    bool is_buttons_Set() const;
    bool is_buttons_Valid() const;

    QString getColor() const;
    void setColor(const QString &color);
    bool is_color_Set() const;
    bool is_color_Valid() const;

    OAIEmbed_settings_logos getLogos() const;
    void setLogos(const OAIEmbed_settings_logos &logos);
    bool is_logos_Set() const;
    bool is_logos_Valid() const;

    bool isPlaybar() const;
    void setPlaybar(const bool &playbar);
    bool is_playbar_Set() const;
    bool is_playbar_Valid() const;

    bool isSpeed() const;
    void setSpeed(const bool &speed);
    bool is_speed_Set() const;
    bool is_speed_Valid() const;

    OAIEmbed_settings_title getTitle() const;
    void setTitle(const OAIEmbed_settings_title &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    QString getUri() const;
    void setUri(const QString &uri);
    bool is_uri_Set() const;
    bool is_uri_Valid() const;

    bool isVolume() const;
    void setVolume(const bool &volume);
    bool is_volume_Set() const;
    bool is_volume_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIEmbed_settings_buttons m_buttons;
    bool m_buttons_isSet;
    bool m_buttons_isValid;

    QString m_color;
    bool m_color_isSet;
    bool m_color_isValid;

    OAIEmbed_settings_logos m_logos;
    bool m_logos_isSet;
    bool m_logos_isValid;

    bool m_playbar;
    bool m_playbar_isSet;
    bool m_playbar_isValid;

    bool m_speed;
    bool m_speed_isSet;
    bool m_speed_isValid;

    OAIEmbed_settings_title m_title;
    bool m_title_isSet;
    bool m_title_isValid;

    QString m_uri;
    bool m_uri_isSet;
    bool m_uri_isValid;

    bool m_volume;
    bool m_volume_isSet;
    bool m_volume_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEmbed_settings)

#endif // OAIEmbed_settings_H
