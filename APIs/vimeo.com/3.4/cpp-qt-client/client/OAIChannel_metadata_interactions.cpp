/**
 * Vimeo
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIChannel_metadata_interactions.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIChannel_metadata_interactions::OAIChannel_metadata_interactions(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIChannel_metadata_interactions::OAIChannel_metadata_interactions() {
    this->initializeModel();
}

OAIChannel_metadata_interactions::~OAIChannel_metadata_interactions() {}

void OAIChannel_metadata_interactions::initializeModel() {

    m_add_moderators_isSet = false;
    m_add_moderators_isValid = false;

    m_add_to_isSet = false;
    m_add_to_isValid = false;

    m_follow_isSet = false;
    m_follow_isValid = false;

    m_moderate_videos_isSet = false;
    m_moderate_videos_isValid = false;
}

void OAIChannel_metadata_interactions::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIChannel_metadata_interactions::fromJsonObject(QJsonObject json) {

    m_add_moderators_isValid = ::OpenAPI::fromJsonValue(m_add_moderators, json[QString("add_moderators")]);
    m_add_moderators_isSet = !json[QString("add_moderators")].isNull() && m_add_moderators_isValid;

    m_add_to_isValid = ::OpenAPI::fromJsonValue(m_add_to, json[QString("add_to")]);
    m_add_to_isSet = !json[QString("add_to")].isNull() && m_add_to_isValid;

    m_follow_isValid = ::OpenAPI::fromJsonValue(m_follow, json[QString("follow")]);
    m_follow_isSet = !json[QString("follow")].isNull() && m_follow_isValid;

    m_moderate_videos_isValid = ::OpenAPI::fromJsonValue(m_moderate_videos, json[QString("moderate_videos")]);
    m_moderate_videos_isSet = !json[QString("moderate_videos")].isNull() && m_moderate_videos_isValid;
}

QString OAIChannel_metadata_interactions::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIChannel_metadata_interactions::asJsonObject() const {
    QJsonObject obj;
    if (m_add_moderators.isSet()) {
        obj.insert(QString("add_moderators"), ::OpenAPI::toJsonValue(m_add_moderators));
    }
    if (m_add_to.isSet()) {
        obj.insert(QString("add_to"), ::OpenAPI::toJsonValue(m_add_to));
    }
    if (m_follow.isSet()) {
        obj.insert(QString("follow"), ::OpenAPI::toJsonValue(m_follow));
    }
    if (m_moderate_videos.isSet()) {
        obj.insert(QString("moderate_videos"), ::OpenAPI::toJsonValue(m_moderate_videos));
    }
    return obj;
}

OAIChannel_metadata_interactions_add_moderators OAIChannel_metadata_interactions::getAddModerators() const {
    return m_add_moderators;
}
void OAIChannel_metadata_interactions::setAddModerators(const OAIChannel_metadata_interactions_add_moderators &add_moderators) {
    m_add_moderators = add_moderators;
    m_add_moderators_isSet = true;
}

bool OAIChannel_metadata_interactions::is_add_moderators_Set() const{
    return m_add_moderators_isSet;
}

bool OAIChannel_metadata_interactions::is_add_moderators_Valid() const{
    return m_add_moderators_isValid;
}

OAIChannel_metadata_interactions_add_to OAIChannel_metadata_interactions::getAddTo() const {
    return m_add_to;
}
void OAIChannel_metadata_interactions::setAddTo(const OAIChannel_metadata_interactions_add_to &add_to) {
    m_add_to = add_to;
    m_add_to_isSet = true;
}

bool OAIChannel_metadata_interactions::is_add_to_Set() const{
    return m_add_to_isSet;
}

bool OAIChannel_metadata_interactions::is_add_to_Valid() const{
    return m_add_to_isValid;
}

OAIChannel_metadata_interactions_follow OAIChannel_metadata_interactions::getFollow() const {
    return m_follow;
}
void OAIChannel_metadata_interactions::setFollow(const OAIChannel_metadata_interactions_follow &follow) {
    m_follow = follow;
    m_follow_isSet = true;
}

bool OAIChannel_metadata_interactions::is_follow_Set() const{
    return m_follow_isSet;
}

bool OAIChannel_metadata_interactions::is_follow_Valid() const{
    return m_follow_isValid;
}

OAIChannel_metadata_interactions_moderate_videos OAIChannel_metadata_interactions::getModerateVideos() const {
    return m_moderate_videos;
}
void OAIChannel_metadata_interactions::setModerateVideos(const OAIChannel_metadata_interactions_moderate_videos &moderate_videos) {
    m_moderate_videos = moderate_videos;
    m_moderate_videos_isSet = true;
}

bool OAIChannel_metadata_interactions::is_moderate_videos_Set() const{
    return m_moderate_videos_isSet;
}

bool OAIChannel_metadata_interactions::is_moderate_videos_Valid() const{
    return m_moderate_videos_isValid;
}

bool OAIChannel_metadata_interactions::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_add_moderators.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_add_to.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_follow.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_moderate_videos.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIChannel_metadata_interactions::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_add_moderators_isValid && m_add_to_isValid && m_follow_isValid && m_moderate_videos_isValid && true;
}

} // namespace OpenAPI
