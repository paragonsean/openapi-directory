/**
 * Vimeo
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPortfolio.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPortfolio::OAIPortfolio(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPortfolio::OAIPortfolio() {
    this->initializeModel();
}

OAIPortfolio::~OAIPortfolio() {}

void OAIPortfolio::initializeModel() {

    m_created_time_isSet = false;
    m_created_time_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_link_isSet = false;
    m_link_isValid = false;

    m_metadata_isSet = false;
    m_metadata_isValid = false;

    m_modified_time_isSet = false;
    m_modified_time_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_sort_isSet = false;
    m_sort_isValid = false;

    m_uri_isSet = false;
    m_uri_isValid = false;
}

void OAIPortfolio::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPortfolio::fromJsonObject(QJsonObject json) {

    m_created_time_isValid = ::OpenAPI::fromJsonValue(m_created_time, json[QString("created_time")]);
    m_created_time_isSet = !json[QString("created_time")].isNull() && m_created_time_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_link_isValid = ::OpenAPI::fromJsonValue(m_link, json[QString("link")]);
    m_link_isSet = !json[QString("link")].isNull() && m_link_isValid;

    m_metadata_isValid = ::OpenAPI::fromJsonValue(m_metadata, json[QString("metadata")]);
    m_metadata_isSet = !json[QString("metadata")].isNull() && m_metadata_isValid;

    m_modified_time_isValid = ::OpenAPI::fromJsonValue(m_modified_time, json[QString("modified_time")]);
    m_modified_time_isSet = !json[QString("modified_time")].isNull() && m_modified_time_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_sort_isValid = ::OpenAPI::fromJsonValue(m_sort, json[QString("sort")]);
    m_sort_isSet = !json[QString("sort")].isNull() && m_sort_isValid;

    m_uri_isValid = ::OpenAPI::fromJsonValue(m_uri, json[QString("uri")]);
    m_uri_isSet = !json[QString("uri")].isNull() && m_uri_isValid;
}

QString OAIPortfolio::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPortfolio::asJsonObject() const {
    QJsonObject obj;
    if (m_created_time_isSet) {
        obj.insert(QString("created_time"), ::OpenAPI::toJsonValue(m_created_time));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_link_isSet) {
        obj.insert(QString("link"), ::OpenAPI::toJsonValue(m_link));
    }
    if (m_metadata.isSet()) {
        obj.insert(QString("metadata"), ::OpenAPI::toJsonValue(m_metadata));
    }
    if (m_modified_time_isSet) {
        obj.insert(QString("modified_time"), ::OpenAPI::toJsonValue(m_modified_time));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_sort_isSet) {
        obj.insert(QString("sort"), ::OpenAPI::toJsonValue(m_sort));
    }
    if (m_uri_isSet) {
        obj.insert(QString("uri"), ::OpenAPI::toJsonValue(m_uri));
    }
    return obj;
}

QString OAIPortfolio::getCreatedTime() const {
    return m_created_time;
}
void OAIPortfolio::setCreatedTime(const QString &created_time) {
    m_created_time = created_time;
    m_created_time_isSet = true;
}

bool OAIPortfolio::is_created_time_Set() const{
    return m_created_time_isSet;
}

bool OAIPortfolio::is_created_time_Valid() const{
    return m_created_time_isValid;
}

QString OAIPortfolio::getDescription() const {
    return m_description;
}
void OAIPortfolio::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIPortfolio::is_description_Set() const{
    return m_description_isSet;
}

bool OAIPortfolio::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIPortfolio::getLink() const {
    return m_link;
}
void OAIPortfolio::setLink(const QString &link) {
    m_link = link;
    m_link_isSet = true;
}

bool OAIPortfolio::is_link_Set() const{
    return m_link_isSet;
}

bool OAIPortfolio::is_link_Valid() const{
    return m_link_isValid;
}

OAIPortfolio_metadata OAIPortfolio::getMetadata() const {
    return m_metadata;
}
void OAIPortfolio::setMetadata(const OAIPortfolio_metadata &metadata) {
    m_metadata = metadata;
    m_metadata_isSet = true;
}

bool OAIPortfolio::is_metadata_Set() const{
    return m_metadata_isSet;
}

bool OAIPortfolio::is_metadata_Valid() const{
    return m_metadata_isValid;
}

QString OAIPortfolio::getModifiedTime() const {
    return m_modified_time;
}
void OAIPortfolio::setModifiedTime(const QString &modified_time) {
    m_modified_time = modified_time;
    m_modified_time_isSet = true;
}

bool OAIPortfolio::is_modified_time_Set() const{
    return m_modified_time_isSet;
}

bool OAIPortfolio::is_modified_time_Valid() const{
    return m_modified_time_isValid;
}

QString OAIPortfolio::getName() const {
    return m_name;
}
void OAIPortfolio::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIPortfolio::is_name_Set() const{
    return m_name_isSet;
}

bool OAIPortfolio::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIPortfolio::getSort() const {
    return m_sort;
}
void OAIPortfolio::setSort(const QString &sort) {
    m_sort = sort;
    m_sort_isSet = true;
}

bool OAIPortfolio::is_sort_Set() const{
    return m_sort_isSet;
}

bool OAIPortfolio::is_sort_Valid() const{
    return m_sort_isValid;
}

QString OAIPortfolio::getUri() const {
    return m_uri;
}
void OAIPortfolio::setUri(const QString &uri) {
    m_uri = uri;
    m_uri_isSet = true;
}

bool OAIPortfolio::is_uri_Set() const{
    return m_uri_isSet;
}

bool OAIPortfolio::is_uri_Valid() const{
    return m_uri_isValid;
}

bool OAIPortfolio::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_created_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_link_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_metadata.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_modified_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sort_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_uri_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPortfolio::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_created_time_isValid && m_description_isValid && m_link_isValid && m_metadata_isValid && m_modified_time_isValid && m_name_isValid && m_sort_isValid && m_uri_isValid && true;
}

} // namespace OpenAPI
