/**
 * Vimeo
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEdit_video_request.h
 *
 * 
 */

#ifndef OAIEdit_video_request_H
#define OAIEdit_video_request_H

#include <QJsonObject>

#include "OAIEdit_video_request_privacy.h"
#include "OAIUpload_video_alt1_request_embed.h"
#include "OAIUpload_video_alt1_request_ratings.h"
#include "OAIUpload_video_alt1_request_review_page.h"
#include "OAIUpload_video_alt1_request_spatial.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUpload_video_alt1_request_embed;
class OAIEdit_video_request_privacy;
class OAIUpload_video_alt1_request_ratings;
class OAIUpload_video_alt1_request_review_page;
class OAIUpload_video_alt1_request_spatial;

class OAIEdit_video_request : public OAIObject {
public:
    OAIEdit_video_request();
    OAIEdit_video_request(QString json);
    ~OAIEdit_video_request() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getContentRating() const;
    void setContentRating(const QList<QString> &content_rating);
    bool is_content_rating_Set() const;
    bool is_content_rating_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    OAIUpload_video_alt1_request_embed getEmbed() const;
    void setEmbed(const OAIUpload_video_alt1_request_embed &embed);
    bool is_embed_Set() const;
    bool is_embed_Valid() const;

    QString getLicense() const;
    void setLicense(const QString &license);
    bool is_license_Set() const;
    bool is_license_Valid() const;

    QString getLocale() const;
    void setLocale(const QString &locale);
    bool is_locale_Set() const;
    bool is_locale_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getPassword() const;
    void setPassword(const QString &password);
    bool is_password_Set() const;
    bool is_password_Valid() const;

    OAIEdit_video_request_privacy getPrivacy() const;
    void setPrivacy(const OAIEdit_video_request_privacy &privacy);
    bool is_privacy_Set() const;
    bool is_privacy_Valid() const;

    OAIUpload_video_alt1_request_ratings getRatings() const;
    void setRatings(const OAIUpload_video_alt1_request_ratings &ratings);
    bool is_ratings_Set() const;
    bool is_ratings_Valid() const;

    OAIUpload_video_alt1_request_review_page getReviewPage() const;
    void setReviewPage(const OAIUpload_video_alt1_request_review_page &review_page);
    bool is_review_page_Set() const;
    bool is_review_page_Valid() const;

    OAIUpload_video_alt1_request_spatial getSpatial() const;
    void setSpatial(const OAIUpload_video_alt1_request_spatial &spatial);
    bool is_spatial_Set() const;
    bool is_spatial_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_content_rating;
    bool m_content_rating_isSet;
    bool m_content_rating_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    OAIUpload_video_alt1_request_embed m_embed;
    bool m_embed_isSet;
    bool m_embed_isValid;

    QString m_license;
    bool m_license_isSet;
    bool m_license_isValid;

    QString m_locale;
    bool m_locale_isSet;
    bool m_locale_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_password;
    bool m_password_isSet;
    bool m_password_isValid;

    OAIEdit_video_request_privacy m_privacy;
    bool m_privacy_isSet;
    bool m_privacy_isValid;

    OAIUpload_video_alt1_request_ratings m_ratings;
    bool m_ratings_isSet;
    bool m_ratings_isValid;

    OAIUpload_video_alt1_request_review_page m_review_page;
    bool m_review_page_isSet;
    bool m_review_page_isValid;

    OAIUpload_video_alt1_request_spatial m_spatial;
    bool m_spatial_isSet;
    bool m_spatial_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEdit_video_request)

#endif // OAIEdit_video_request_H
