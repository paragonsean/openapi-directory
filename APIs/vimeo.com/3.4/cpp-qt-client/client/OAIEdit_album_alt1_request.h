/**
 * Vimeo
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEdit_album_alt1_request.h
 *
 * 
 */

#ifndef OAIEdit_album_alt1_request_H
#define OAIEdit_album_alt1_request_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIEdit_album_alt1_request : public OAIObject {
public:
    OAIEdit_album_alt1_request();
    OAIEdit_album_alt1_request(QString json);
    ~OAIEdit_album_alt1_request() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBrandColor() const;
    void setBrandColor(const QString &brand_color);
    bool is_brand_color_Set() const;
    bool is_brand_color_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getDomain() const;
    void setDomain(const QString &domain);
    bool is_domain_Set() const;
    bool is_domain_Valid() const;

    bool isHideNav() const;
    void setHideNav(const bool &hide_nav);
    bool is_hide_nav_Set() const;
    bool is_hide_nav_Valid() const;

    QString getLayout() const;
    void setLayout(const QString &layout);
    bool is_layout_Set() const;
    bool is_layout_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getPassword() const;
    void setPassword(const QString &password);
    bool is_password_Set() const;
    bool is_password_Valid() const;

    QString getPrivacy() const;
    void setPrivacy(const QString &privacy);
    bool is_privacy_Set() const;
    bool is_privacy_Valid() const;

    bool isReviewMode() const;
    void setReviewMode(const bool &review_mode);
    bool is_review_mode_Set() const;
    bool is_review_mode_Valid() const;

    QString getSort() const;
    void setSort(const QString &sort);
    bool is_sort_Set() const;
    bool is_sort_Valid() const;

    QString getTheme() const;
    void setTheme(const QString &theme);
    bool is_theme_Set() const;
    bool is_theme_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    bool isUseCustomDomain() const;
    void setUseCustomDomain(const bool &use_custom_domain);
    bool is_use_custom_domain_Set() const;
    bool is_use_custom_domain_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_brand_color;
    bool m_brand_color_isSet;
    bool m_brand_color_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_domain;
    bool m_domain_isSet;
    bool m_domain_isValid;

    bool m_hide_nav;
    bool m_hide_nav_isSet;
    bool m_hide_nav_isValid;

    QString m_layout;
    bool m_layout_isSet;
    bool m_layout_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_password;
    bool m_password_isSet;
    bool m_password_isValid;

    QString m_privacy;
    bool m_privacy_isSet;
    bool m_privacy_isValid;

    bool m_review_mode;
    bool m_review_mode_isSet;
    bool m_review_mode_isValid;

    QString m_sort;
    bool m_sort_isSet;
    bool m_sort_isValid;

    QString m_theme;
    bool m_theme_isSet;
    bool m_theme_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;

    bool m_use_custom_domain;
    bool m_use_custom_domain_isSet;
    bool m_use_custom_domain_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEdit_album_alt1_request)

#endif // OAIEdit_album_alt1_request_H
