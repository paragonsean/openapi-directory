/**
 * Vimeo
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGroup_metadata_connections.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGroup_metadata_connections::OAIGroup_metadata_connections(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGroup_metadata_connections::OAIGroup_metadata_connections() {
    this->initializeModel();
}

OAIGroup_metadata_connections::~OAIGroup_metadata_connections() {}

void OAIGroup_metadata_connections::initializeModel() {

    m_users_isSet = false;
    m_users_isValid = false;

    m_videos_isSet = false;
    m_videos_isValid = false;
}

void OAIGroup_metadata_connections::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGroup_metadata_connections::fromJsonObject(QJsonObject json) {

    m_users_isValid = ::OpenAPI::fromJsonValue(m_users, json[QString("users")]);
    m_users_isSet = !json[QString("users")].isNull() && m_users_isValid;

    m_videos_isValid = ::OpenAPI::fromJsonValue(m_videos, json[QString("videos")]);
    m_videos_isSet = !json[QString("videos")].isNull() && m_videos_isValid;
}

QString OAIGroup_metadata_connections::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGroup_metadata_connections::asJsonObject() const {
    QJsonObject obj;
    if (m_users.isSet()) {
        obj.insert(QString("users"), ::OpenAPI::toJsonValue(m_users));
    }
    if (m_videos.isSet()) {
        obj.insert(QString("videos"), ::OpenAPI::toJsonValue(m_videos));
    }
    return obj;
}

OAIGroup_metadata_connections_users OAIGroup_metadata_connections::getUsers() const {
    return m_users;
}
void OAIGroup_metadata_connections::setUsers(const OAIGroup_metadata_connections_users &users) {
    m_users = users;
    m_users_isSet = true;
}

bool OAIGroup_metadata_connections::is_users_Set() const{
    return m_users_isSet;
}

bool OAIGroup_metadata_connections::is_users_Valid() const{
    return m_users_isValid;
}

OAIGroup_metadata_connections_videos OAIGroup_metadata_connections::getVideos() const {
    return m_videos;
}
void OAIGroup_metadata_connections::setVideos(const OAIGroup_metadata_connections_videos &videos) {
    m_videos = videos;
    m_videos_isSet = true;
}

bool OAIGroup_metadata_connections::is_videos_Set() const{
    return m_videos_isSet;
}

bool OAIGroup_metadata_connections::is_videos_Valid() const{
    return m_videos_isValid;
}

bool OAIGroup_metadata_connections::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_users.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_videos.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGroup_metadata_connections::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_users_isValid && m_videos_isValid && true;
}

} // namespace OpenAPI
