/**
 * Vimeo
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOn_demand_video_metadata_interactions.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOn_demand_video_metadata_interactions::OAIOn_demand_video_metadata_interactions(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOn_demand_video_metadata_interactions::OAIOn_demand_video_metadata_interactions() {
    this->initializeModel();
}

OAIOn_demand_video_metadata_interactions::~OAIOn_demand_video_metadata_interactions() {}

void OAIOn_demand_video_metadata_interactions::initializeModel() {

    m_likes_isSet = false;
    m_likes_isValid = false;

    m_watchlater_isSet = false;
    m_watchlater_isValid = false;
}

void OAIOn_demand_video_metadata_interactions::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOn_demand_video_metadata_interactions::fromJsonObject(QJsonObject json) {

    m_likes_isValid = ::OpenAPI::fromJsonValue(m_likes, json[QString("likes")]);
    m_likes_isSet = !json[QString("likes")].isNull() && m_likes_isValid;

    m_watchlater_isValid = ::OpenAPI::fromJsonValue(m_watchlater, json[QString("watchlater")]);
    m_watchlater_isSet = !json[QString("watchlater")].isNull() && m_watchlater_isValid;
}

QString OAIOn_demand_video_metadata_interactions::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOn_demand_video_metadata_interactions::asJsonObject() const {
    QJsonObject obj;
    if (m_likes.isSet()) {
        obj.insert(QString("likes"), ::OpenAPI::toJsonValue(m_likes));
    }
    if (m_watchlater.isSet()) {
        obj.insert(QString("watchlater"), ::OpenAPI::toJsonValue(m_watchlater));
    }
    return obj;
}

OAIOn_demand_video_metadata_interactions_likes OAIOn_demand_video_metadata_interactions::getLikes() const {
    return m_likes;
}
void OAIOn_demand_video_metadata_interactions::setLikes(const OAIOn_demand_video_metadata_interactions_likes &likes) {
    m_likes = likes;
    m_likes_isSet = true;
}

bool OAIOn_demand_video_metadata_interactions::is_likes_Set() const{
    return m_likes_isSet;
}

bool OAIOn_demand_video_metadata_interactions::is_likes_Valid() const{
    return m_likes_isValid;
}

OAIOn_demand_video_metadata_interactions_watchlater OAIOn_demand_video_metadata_interactions::getWatchlater() const {
    return m_watchlater;
}
void OAIOn_demand_video_metadata_interactions::setWatchlater(const OAIOn_demand_video_metadata_interactions_watchlater &watchlater) {
    m_watchlater = watchlater;
    m_watchlater_isSet = true;
}

bool OAIOn_demand_video_metadata_interactions::is_watchlater_Set() const{
    return m_watchlater_isSet;
}

bool OAIOn_demand_video_metadata_interactions::is_watchlater_Valid() const{
    return m_watchlater_isValid;
}

bool OAIOn_demand_video_metadata_interactions::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_likes.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_watchlater.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOn_demand_video_metadata_interactions::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_likes_isValid && m_watchlater_isValid && true;
}

} // namespace OpenAPI
