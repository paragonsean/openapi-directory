/**
 * Vimeo
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOn_demand_page_episodes.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOn_demand_page_episodes::OAIOn_demand_page_episodes(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOn_demand_page_episodes::OAIOn_demand_page_episodes() {
    this->initializeModel();
}

OAIOn_demand_page_episodes::~OAIOn_demand_page_episodes() {}

void OAIOn_demand_page_episodes::initializeModel() {

    m_buy_isSet = false;
    m_buy_isValid = false;

    m_rent_isSet = false;
    m_rent_isValid = false;
}

void OAIOn_demand_page_episodes::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOn_demand_page_episodes::fromJsonObject(QJsonObject json) {

    m_buy_isValid = ::OpenAPI::fromJsonValue(m_buy, json[QString("buy")]);
    m_buy_isSet = !json[QString("buy")].isNull() && m_buy_isValid;

    m_rent_isValid = ::OpenAPI::fromJsonValue(m_rent, json[QString("rent")]);
    m_rent_isSet = !json[QString("rent")].isNull() && m_rent_isValid;
}

QString OAIOn_demand_page_episodes::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOn_demand_page_episodes::asJsonObject() const {
    QJsonObject obj;
    if (m_buy.isSet()) {
        obj.insert(QString("buy"), ::OpenAPI::toJsonValue(m_buy));
    }
    if (m_rent.isSet()) {
        obj.insert(QString("rent"), ::OpenAPI::toJsonValue(m_rent));
    }
    return obj;
}

OAIOn_demand_page_episodes_buy OAIOn_demand_page_episodes::getBuy() const {
    return m_buy;
}
void OAIOn_demand_page_episodes::setBuy(const OAIOn_demand_page_episodes_buy &buy) {
    m_buy = buy;
    m_buy_isSet = true;
}

bool OAIOn_demand_page_episodes::is_buy_Set() const{
    return m_buy_isSet;
}

bool OAIOn_demand_page_episodes::is_buy_Valid() const{
    return m_buy_isValid;
}

OAIOn_demand_page_episodes_rent OAIOn_demand_page_episodes::getRent() const {
    return m_rent;
}
void OAIOn_demand_page_episodes::setRent(const OAIOn_demand_page_episodes_rent &rent) {
    m_rent = rent;
    m_rent_isSet = true;
}

bool OAIOn_demand_page_episodes::is_rent_Set() const{
    return m_rent_isSet;
}

bool OAIOn_demand_page_episodes::is_rent_Valid() const{
    return m_rent_isValid;
}

bool OAIOn_demand_page_episodes::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_buy.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_rent.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOn_demand_page_episodes::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_buy_isValid && m_rent_isValid && true;
}

} // namespace OpenAPI
