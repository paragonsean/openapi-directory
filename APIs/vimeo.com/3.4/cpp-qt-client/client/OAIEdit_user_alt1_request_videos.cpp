/**
 * Vimeo
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEdit_user_alt1_request_videos.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEdit_user_alt1_request_videos::OAIEdit_user_alt1_request_videos(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEdit_user_alt1_request_videos::OAIEdit_user_alt1_request_videos() {
    this->initializeModel();
}

OAIEdit_user_alt1_request_videos::~OAIEdit_user_alt1_request_videos() {}

void OAIEdit_user_alt1_request_videos::initializeModel() {

    m_privacy_isSet = false;
    m_privacy_isValid = false;
}

void OAIEdit_user_alt1_request_videos::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEdit_user_alt1_request_videos::fromJsonObject(QJsonObject json) {

    m_privacy_isValid = ::OpenAPI::fromJsonValue(m_privacy, json[QString("privacy")]);
    m_privacy_isSet = !json[QString("privacy")].isNull() && m_privacy_isValid;
}

QString OAIEdit_user_alt1_request_videos::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEdit_user_alt1_request_videos::asJsonObject() const {
    QJsonObject obj;
    if (m_privacy.isSet()) {
        obj.insert(QString("privacy"), ::OpenAPI::toJsonValue(m_privacy));
    }
    return obj;
}

OAIEdit_user_alt1_request_videos_privacy OAIEdit_user_alt1_request_videos::getPrivacy() const {
    return m_privacy;
}
void OAIEdit_user_alt1_request_videos::setPrivacy(const OAIEdit_user_alt1_request_videos_privacy &privacy) {
    m_privacy = privacy;
    m_privacy_isSet = true;
}

bool OAIEdit_user_alt1_request_videos::is_privacy_Set() const{
    return m_privacy_isSet;
}

bool OAIEdit_user_alt1_request_videos::is_privacy_Valid() const{
    return m_privacy_isValid;
}

bool OAIEdit_user_alt1_request_videos::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_privacy.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEdit_user_alt1_request_videos::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
