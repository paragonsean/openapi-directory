/**
 * Vimeo
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISet_video_as_album_thumbnail_alt1_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISet_video_as_album_thumbnail_alt1_request::OAISet_video_as_album_thumbnail_alt1_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISet_video_as_album_thumbnail_alt1_request::OAISet_video_as_album_thumbnail_alt1_request() {
    this->initializeModel();
}

OAISet_video_as_album_thumbnail_alt1_request::~OAISet_video_as_album_thumbnail_alt1_request() {}

void OAISet_video_as_album_thumbnail_alt1_request::initializeModel() {

    m_time_code_isSet = false;
    m_time_code_isValid = false;
}

void OAISet_video_as_album_thumbnail_alt1_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISet_video_as_album_thumbnail_alt1_request::fromJsonObject(QJsonObject json) {

    m_time_code_isValid = ::OpenAPI::fromJsonValue(m_time_code, json[QString("time_code")]);
    m_time_code_isSet = !json[QString("time_code")].isNull() && m_time_code_isValid;
}

QString OAISet_video_as_album_thumbnail_alt1_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISet_video_as_album_thumbnail_alt1_request::asJsonObject() const {
    QJsonObject obj;
    if (m_time_code_isSet) {
        obj.insert(QString("time_code"), ::OpenAPI::toJsonValue(m_time_code));
    }
    return obj;
}

double OAISet_video_as_album_thumbnail_alt1_request::getTimeCode() const {
    return m_time_code;
}
void OAISet_video_as_album_thumbnail_alt1_request::setTimeCode(const double &time_code) {
    m_time_code = time_code;
    m_time_code_isSet = true;
}

bool OAISet_video_as_album_thumbnail_alt1_request::is_time_code_Set() const{
    return m_time_code_isSet;
}

bool OAISet_video_as_album_thumbnail_alt1_request::is_time_code_Valid() const{
    return m_time_code_isValid;
}

bool OAISet_video_as_album_thumbnail_alt1_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_time_code_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISet_video_as_album_thumbnail_alt1_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
