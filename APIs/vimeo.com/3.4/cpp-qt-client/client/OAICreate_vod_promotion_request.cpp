/**
 * Vimeo
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreate_vod_promotion_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreate_vod_promotion_request::OAICreate_vod_promotion_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreate_vod_promotion_request::OAICreate_vod_promotion_request() {
    this->initializeModel();
}

OAICreate_vod_promotion_request::~OAICreate_vod_promotion_request() {}

void OAICreate_vod_promotion_request::initializeModel() {

    m_access_type_isSet = false;
    m_access_type_isValid = false;

    m_code_isSet = false;
    m_code_isValid = false;

    m_discount_type_isSet = false;
    m_discount_type_isValid = false;

    m_download_isSet = false;
    m_download_isValid = false;

    m_end_time_isSet = false;
    m_end_time_isValid = false;

    m_label_isSet = false;
    m_label_isValid = false;

    m_percent_off_isSet = false;
    m_percent_off_isValid = false;

    m_product_type_isSet = false;
    m_product_type_isValid = false;

    m_start_time_isSet = false;
    m_start_time_isValid = false;

    m_stream_period_isSet = false;
    m_stream_period_isValid = false;

    m_total_isSet = false;
    m_total_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAICreate_vod_promotion_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreate_vod_promotion_request::fromJsonObject(QJsonObject json) {

    m_access_type_isValid = ::OpenAPI::fromJsonValue(m_access_type, json[QString("access_type")]);
    m_access_type_isSet = !json[QString("access_type")].isNull() && m_access_type_isValid;

    m_code_isValid = ::OpenAPI::fromJsonValue(m_code, json[QString("code")]);
    m_code_isSet = !json[QString("code")].isNull() && m_code_isValid;

    m_discount_type_isValid = ::OpenAPI::fromJsonValue(m_discount_type, json[QString("discount_type")]);
    m_discount_type_isSet = !json[QString("discount_type")].isNull() && m_discount_type_isValid;

    m_download_isValid = ::OpenAPI::fromJsonValue(m_download, json[QString("download")]);
    m_download_isSet = !json[QString("download")].isNull() && m_download_isValid;

    m_end_time_isValid = ::OpenAPI::fromJsonValue(m_end_time, json[QString("end_time")]);
    m_end_time_isSet = !json[QString("end_time")].isNull() && m_end_time_isValid;

    m_label_isValid = ::OpenAPI::fromJsonValue(m_label, json[QString("label")]);
    m_label_isSet = !json[QString("label")].isNull() && m_label_isValid;

    m_percent_off_isValid = ::OpenAPI::fromJsonValue(m_percent_off, json[QString("percent_off")]);
    m_percent_off_isSet = !json[QString("percent_off")].isNull() && m_percent_off_isValid;

    m_product_type_isValid = ::OpenAPI::fromJsonValue(m_product_type, json[QString("product_type")]);
    m_product_type_isSet = !json[QString("product_type")].isNull() && m_product_type_isValid;

    m_start_time_isValid = ::OpenAPI::fromJsonValue(m_start_time, json[QString("start_time")]);
    m_start_time_isSet = !json[QString("start_time")].isNull() && m_start_time_isValid;

    m_stream_period_isValid = ::OpenAPI::fromJsonValue(m_stream_period, json[QString("stream_period")]);
    m_stream_period_isSet = !json[QString("stream_period")].isNull() && m_stream_period_isValid;

    m_total_isValid = ::OpenAPI::fromJsonValue(m_total, json[QString("total")]);
    m_total_isSet = !json[QString("total")].isNull() && m_total_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;
}

QString OAICreate_vod_promotion_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreate_vod_promotion_request::asJsonObject() const {
    QJsonObject obj;
    if (m_access_type_isSet) {
        obj.insert(QString("access_type"), ::OpenAPI::toJsonValue(m_access_type));
    }
    if (m_code_isSet) {
        obj.insert(QString("code"), ::OpenAPI::toJsonValue(m_code));
    }
    if (m_discount_type_isSet) {
        obj.insert(QString("discount_type"), ::OpenAPI::toJsonValue(m_discount_type));
    }
    if (m_download_isSet) {
        obj.insert(QString("download"), ::OpenAPI::toJsonValue(m_download));
    }
    if (m_end_time_isSet) {
        obj.insert(QString("end_time"), ::OpenAPI::toJsonValue(m_end_time));
    }
    if (m_label_isSet) {
        obj.insert(QString("label"), ::OpenAPI::toJsonValue(m_label));
    }
    if (m_percent_off_isSet) {
        obj.insert(QString("percent_off"), ::OpenAPI::toJsonValue(m_percent_off));
    }
    if (m_product_type_isSet) {
        obj.insert(QString("product_type"), ::OpenAPI::toJsonValue(m_product_type));
    }
    if (m_start_time_isSet) {
        obj.insert(QString("start_time"), ::OpenAPI::toJsonValue(m_start_time));
    }
    if (m_stream_period_isSet) {
        obj.insert(QString("stream_period"), ::OpenAPI::toJsonValue(m_stream_period));
    }
    if (m_total_isSet) {
        obj.insert(QString("total"), ::OpenAPI::toJsonValue(m_total));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

QString OAICreate_vod_promotion_request::getAccessType() const {
    return m_access_type;
}
void OAICreate_vod_promotion_request::setAccessType(const QString &access_type) {
    m_access_type = access_type;
    m_access_type_isSet = true;
}

bool OAICreate_vod_promotion_request::is_access_type_Set() const{
    return m_access_type_isSet;
}

bool OAICreate_vod_promotion_request::is_access_type_Valid() const{
    return m_access_type_isValid;
}

QString OAICreate_vod_promotion_request::getCode() const {
    return m_code;
}
void OAICreate_vod_promotion_request::setCode(const QString &code) {
    m_code = code;
    m_code_isSet = true;
}

bool OAICreate_vod_promotion_request::is_code_Set() const{
    return m_code_isSet;
}

bool OAICreate_vod_promotion_request::is_code_Valid() const{
    return m_code_isValid;
}

QString OAICreate_vod_promotion_request::getDiscountType() const {
    return m_discount_type;
}
void OAICreate_vod_promotion_request::setDiscountType(const QString &discount_type) {
    m_discount_type = discount_type;
    m_discount_type_isSet = true;
}

bool OAICreate_vod_promotion_request::is_discount_type_Set() const{
    return m_discount_type_isSet;
}

bool OAICreate_vod_promotion_request::is_discount_type_Valid() const{
    return m_discount_type_isValid;
}

bool OAICreate_vod_promotion_request::isDownload() const {
    return m_download;
}
void OAICreate_vod_promotion_request::setDownload(const bool &download) {
    m_download = download;
    m_download_isSet = true;
}

bool OAICreate_vod_promotion_request::is_download_Set() const{
    return m_download_isSet;
}

bool OAICreate_vod_promotion_request::is_download_Valid() const{
    return m_download_isValid;
}

QString OAICreate_vod_promotion_request::getEndTime() const {
    return m_end_time;
}
void OAICreate_vod_promotion_request::setEndTime(const QString &end_time) {
    m_end_time = end_time;
    m_end_time_isSet = true;
}

bool OAICreate_vod_promotion_request::is_end_time_Set() const{
    return m_end_time_isSet;
}

bool OAICreate_vod_promotion_request::is_end_time_Valid() const{
    return m_end_time_isValid;
}

QString OAICreate_vod_promotion_request::getLabel() const {
    return m_label;
}
void OAICreate_vod_promotion_request::setLabel(const QString &label) {
    m_label = label;
    m_label_isSet = true;
}

bool OAICreate_vod_promotion_request::is_label_Set() const{
    return m_label_isSet;
}

bool OAICreate_vod_promotion_request::is_label_Valid() const{
    return m_label_isValid;
}

double OAICreate_vod_promotion_request::getPercentOff() const {
    return m_percent_off;
}
void OAICreate_vod_promotion_request::setPercentOff(const double &percent_off) {
    m_percent_off = percent_off;
    m_percent_off_isSet = true;
}

bool OAICreate_vod_promotion_request::is_percent_off_Set() const{
    return m_percent_off_isSet;
}

bool OAICreate_vod_promotion_request::is_percent_off_Valid() const{
    return m_percent_off_isValid;
}

QString OAICreate_vod_promotion_request::getProductType() const {
    return m_product_type;
}
void OAICreate_vod_promotion_request::setProductType(const QString &product_type) {
    m_product_type = product_type;
    m_product_type_isSet = true;
}

bool OAICreate_vod_promotion_request::is_product_type_Set() const{
    return m_product_type_isSet;
}

bool OAICreate_vod_promotion_request::is_product_type_Valid() const{
    return m_product_type_isValid;
}

QString OAICreate_vod_promotion_request::getStartTime() const {
    return m_start_time;
}
void OAICreate_vod_promotion_request::setStartTime(const QString &start_time) {
    m_start_time = start_time;
    m_start_time_isSet = true;
}

bool OAICreate_vod_promotion_request::is_start_time_Set() const{
    return m_start_time_isSet;
}

bool OAICreate_vod_promotion_request::is_start_time_Valid() const{
    return m_start_time_isValid;
}

QString OAICreate_vod_promotion_request::getStreamPeriod() const {
    return m_stream_period;
}
void OAICreate_vod_promotion_request::setStreamPeriod(const QString &stream_period) {
    m_stream_period = stream_period;
    m_stream_period_isSet = true;
}

bool OAICreate_vod_promotion_request::is_stream_period_Set() const{
    return m_stream_period_isSet;
}

bool OAICreate_vod_promotion_request::is_stream_period_Valid() const{
    return m_stream_period_isValid;
}

double OAICreate_vod_promotion_request::getTotal() const {
    return m_total;
}
void OAICreate_vod_promotion_request::setTotal(const double &total) {
    m_total = total;
    m_total_isSet = true;
}

bool OAICreate_vod_promotion_request::is_total_Set() const{
    return m_total_isSet;
}

bool OAICreate_vod_promotion_request::is_total_Valid() const{
    return m_total_isValid;
}

QString OAICreate_vod_promotion_request::getType() const {
    return m_type;
}
void OAICreate_vod_promotion_request::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAICreate_vod_promotion_request::is_type_Set() const{
    return m_type_isSet;
}

bool OAICreate_vod_promotion_request::is_type_Valid() const{
    return m_type_isValid;
}

bool OAICreate_vod_promotion_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_access_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_discount_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_download_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_end_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_label_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_percent_off_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_product_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_stream_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreate_vod_promotion_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_download_isValid && m_stream_period_isValid && m_total_isValid && m_type_isValid && true;
}

} // namespace OpenAPI
