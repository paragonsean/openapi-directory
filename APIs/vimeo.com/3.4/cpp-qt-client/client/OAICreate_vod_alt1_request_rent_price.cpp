/**
 * Vimeo
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreate_vod_alt1_request_rent_price.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreate_vod_alt1_request_rent_price::OAICreate_vod_alt1_request_rent_price(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreate_vod_alt1_request_rent_price::OAICreate_vod_alt1_request_rent_price() {
    this->initializeModel();
}

OAICreate_vod_alt1_request_rent_price::~OAICreate_vod_alt1_request_rent_price() {}

void OAICreate_vod_alt1_request_rent_price::initializeModel() {

    m_aud_isSet = false;
    m_aud_isValid = false;

    m_cad_isSet = false;
    m_cad_isValid = false;

    m_chf_isSet = false;
    m_chf_isValid = false;

    m_dkk_isSet = false;
    m_dkk_isValid = false;

    m_eur_isSet = false;
    m_eur_isValid = false;

    m_gbp_isSet = false;
    m_gbp_isValid = false;

    m_jpy_isSet = false;
    m_jpy_isValid = false;

    m_krw_isSet = false;
    m_krw_isValid = false;

    m_nok_isSet = false;
    m_nok_isValid = false;

    m_pln_isSet = false;
    m_pln_isValid = false;

    m_sek_isSet = false;
    m_sek_isValid = false;

    m_usd_isSet = false;
    m_usd_isValid = false;
}

void OAICreate_vod_alt1_request_rent_price::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreate_vod_alt1_request_rent_price::fromJsonObject(QJsonObject json) {

    m_aud_isValid = ::OpenAPI::fromJsonValue(m_aud, json[QString("AUD")]);
    m_aud_isSet = !json[QString("AUD")].isNull() && m_aud_isValid;

    m_cad_isValid = ::OpenAPI::fromJsonValue(m_cad, json[QString("CAD")]);
    m_cad_isSet = !json[QString("CAD")].isNull() && m_cad_isValid;

    m_chf_isValid = ::OpenAPI::fromJsonValue(m_chf, json[QString("CHF")]);
    m_chf_isSet = !json[QString("CHF")].isNull() && m_chf_isValid;

    m_dkk_isValid = ::OpenAPI::fromJsonValue(m_dkk, json[QString("DKK")]);
    m_dkk_isSet = !json[QString("DKK")].isNull() && m_dkk_isValid;

    m_eur_isValid = ::OpenAPI::fromJsonValue(m_eur, json[QString("EUR")]);
    m_eur_isSet = !json[QString("EUR")].isNull() && m_eur_isValid;

    m_gbp_isValid = ::OpenAPI::fromJsonValue(m_gbp, json[QString("GBP")]);
    m_gbp_isSet = !json[QString("GBP")].isNull() && m_gbp_isValid;

    m_jpy_isValid = ::OpenAPI::fromJsonValue(m_jpy, json[QString("JPY")]);
    m_jpy_isSet = !json[QString("JPY")].isNull() && m_jpy_isValid;

    m_krw_isValid = ::OpenAPI::fromJsonValue(m_krw, json[QString("KRW")]);
    m_krw_isSet = !json[QString("KRW")].isNull() && m_krw_isValid;

    m_nok_isValid = ::OpenAPI::fromJsonValue(m_nok, json[QString("NOK")]);
    m_nok_isSet = !json[QString("NOK")].isNull() && m_nok_isValid;

    m_pln_isValid = ::OpenAPI::fromJsonValue(m_pln, json[QString("PLN")]);
    m_pln_isSet = !json[QString("PLN")].isNull() && m_pln_isValid;

    m_sek_isValid = ::OpenAPI::fromJsonValue(m_sek, json[QString("SEK")]);
    m_sek_isSet = !json[QString("SEK")].isNull() && m_sek_isValid;

    m_usd_isValid = ::OpenAPI::fromJsonValue(m_usd, json[QString("USD")]);
    m_usd_isSet = !json[QString("USD")].isNull() && m_usd_isValid;
}

QString OAICreate_vod_alt1_request_rent_price::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreate_vod_alt1_request_rent_price::asJsonObject() const {
    QJsonObject obj;
    if (m_aud_isSet) {
        obj.insert(QString("AUD"), ::OpenAPI::toJsonValue(m_aud));
    }
    if (m_cad_isSet) {
        obj.insert(QString("CAD"), ::OpenAPI::toJsonValue(m_cad));
    }
    if (m_chf_isSet) {
        obj.insert(QString("CHF"), ::OpenAPI::toJsonValue(m_chf));
    }
    if (m_dkk_isSet) {
        obj.insert(QString("DKK"), ::OpenAPI::toJsonValue(m_dkk));
    }
    if (m_eur_isSet) {
        obj.insert(QString("EUR"), ::OpenAPI::toJsonValue(m_eur));
    }
    if (m_gbp_isSet) {
        obj.insert(QString("GBP"), ::OpenAPI::toJsonValue(m_gbp));
    }
    if (m_jpy_isSet) {
        obj.insert(QString("JPY"), ::OpenAPI::toJsonValue(m_jpy));
    }
    if (m_krw_isSet) {
        obj.insert(QString("KRW"), ::OpenAPI::toJsonValue(m_krw));
    }
    if (m_nok_isSet) {
        obj.insert(QString("NOK"), ::OpenAPI::toJsonValue(m_nok));
    }
    if (m_pln_isSet) {
        obj.insert(QString("PLN"), ::OpenAPI::toJsonValue(m_pln));
    }
    if (m_sek_isSet) {
        obj.insert(QString("SEK"), ::OpenAPI::toJsonValue(m_sek));
    }
    if (m_usd_isSet) {
        obj.insert(QString("USD"), ::OpenAPI::toJsonValue(m_usd));
    }
    return obj;
}

double OAICreate_vod_alt1_request_rent_price::getAud() const {
    return m_aud;
}
void OAICreate_vod_alt1_request_rent_price::setAud(const double &aud) {
    m_aud = aud;
    m_aud_isSet = true;
}

bool OAICreate_vod_alt1_request_rent_price::is_aud_Set() const{
    return m_aud_isSet;
}

bool OAICreate_vod_alt1_request_rent_price::is_aud_Valid() const{
    return m_aud_isValid;
}

double OAICreate_vod_alt1_request_rent_price::getCad() const {
    return m_cad;
}
void OAICreate_vod_alt1_request_rent_price::setCad(const double &cad) {
    m_cad = cad;
    m_cad_isSet = true;
}

bool OAICreate_vod_alt1_request_rent_price::is_cad_Set() const{
    return m_cad_isSet;
}

bool OAICreate_vod_alt1_request_rent_price::is_cad_Valid() const{
    return m_cad_isValid;
}

double OAICreate_vod_alt1_request_rent_price::getChf() const {
    return m_chf;
}
void OAICreate_vod_alt1_request_rent_price::setChf(const double &chf) {
    m_chf = chf;
    m_chf_isSet = true;
}

bool OAICreate_vod_alt1_request_rent_price::is_chf_Set() const{
    return m_chf_isSet;
}

bool OAICreate_vod_alt1_request_rent_price::is_chf_Valid() const{
    return m_chf_isValid;
}

double OAICreate_vod_alt1_request_rent_price::getDkk() const {
    return m_dkk;
}
void OAICreate_vod_alt1_request_rent_price::setDkk(const double &dkk) {
    m_dkk = dkk;
    m_dkk_isSet = true;
}

bool OAICreate_vod_alt1_request_rent_price::is_dkk_Set() const{
    return m_dkk_isSet;
}

bool OAICreate_vod_alt1_request_rent_price::is_dkk_Valid() const{
    return m_dkk_isValid;
}

double OAICreate_vod_alt1_request_rent_price::getEur() const {
    return m_eur;
}
void OAICreate_vod_alt1_request_rent_price::setEur(const double &eur) {
    m_eur = eur;
    m_eur_isSet = true;
}

bool OAICreate_vod_alt1_request_rent_price::is_eur_Set() const{
    return m_eur_isSet;
}

bool OAICreate_vod_alt1_request_rent_price::is_eur_Valid() const{
    return m_eur_isValid;
}

double OAICreate_vod_alt1_request_rent_price::getGbp() const {
    return m_gbp;
}
void OAICreate_vod_alt1_request_rent_price::setGbp(const double &gbp) {
    m_gbp = gbp;
    m_gbp_isSet = true;
}

bool OAICreate_vod_alt1_request_rent_price::is_gbp_Set() const{
    return m_gbp_isSet;
}

bool OAICreate_vod_alt1_request_rent_price::is_gbp_Valid() const{
    return m_gbp_isValid;
}

double OAICreate_vod_alt1_request_rent_price::getJpy() const {
    return m_jpy;
}
void OAICreate_vod_alt1_request_rent_price::setJpy(const double &jpy) {
    m_jpy = jpy;
    m_jpy_isSet = true;
}

bool OAICreate_vod_alt1_request_rent_price::is_jpy_Set() const{
    return m_jpy_isSet;
}

bool OAICreate_vod_alt1_request_rent_price::is_jpy_Valid() const{
    return m_jpy_isValid;
}

double OAICreate_vod_alt1_request_rent_price::getKrw() const {
    return m_krw;
}
void OAICreate_vod_alt1_request_rent_price::setKrw(const double &krw) {
    m_krw = krw;
    m_krw_isSet = true;
}

bool OAICreate_vod_alt1_request_rent_price::is_krw_Set() const{
    return m_krw_isSet;
}

bool OAICreate_vod_alt1_request_rent_price::is_krw_Valid() const{
    return m_krw_isValid;
}

double OAICreate_vod_alt1_request_rent_price::getNok() const {
    return m_nok;
}
void OAICreate_vod_alt1_request_rent_price::setNok(const double &nok) {
    m_nok = nok;
    m_nok_isSet = true;
}

bool OAICreate_vod_alt1_request_rent_price::is_nok_Set() const{
    return m_nok_isSet;
}

bool OAICreate_vod_alt1_request_rent_price::is_nok_Valid() const{
    return m_nok_isValid;
}

double OAICreate_vod_alt1_request_rent_price::getPln() const {
    return m_pln;
}
void OAICreate_vod_alt1_request_rent_price::setPln(const double &pln) {
    m_pln = pln;
    m_pln_isSet = true;
}

bool OAICreate_vod_alt1_request_rent_price::is_pln_Set() const{
    return m_pln_isSet;
}

bool OAICreate_vod_alt1_request_rent_price::is_pln_Valid() const{
    return m_pln_isValid;
}

double OAICreate_vod_alt1_request_rent_price::getSek() const {
    return m_sek;
}
void OAICreate_vod_alt1_request_rent_price::setSek(const double &sek) {
    m_sek = sek;
    m_sek_isSet = true;
}

bool OAICreate_vod_alt1_request_rent_price::is_sek_Set() const{
    return m_sek_isSet;
}

bool OAICreate_vod_alt1_request_rent_price::is_sek_Valid() const{
    return m_sek_isValid;
}

double OAICreate_vod_alt1_request_rent_price::getUsd() const {
    return m_usd;
}
void OAICreate_vod_alt1_request_rent_price::setUsd(const double &usd) {
    m_usd = usd;
    m_usd_isSet = true;
}

bool OAICreate_vod_alt1_request_rent_price::is_usd_Set() const{
    return m_usd_isSet;
}

bool OAICreate_vod_alt1_request_rent_price::is_usd_Valid() const{
    return m_usd_isValid;
}

bool OAICreate_vod_alt1_request_rent_price::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_aud_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_cad_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_chf_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_dkk_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_eur_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gbp_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_jpy_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_krw_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_nok_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pln_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sek_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_usd_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreate_vod_alt1_request_rent_price::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
