/**
 * Vimeo
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOn_demand_promotion_code.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOn_demand_promotion_code::OAIOn_demand_promotion_code(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOn_demand_promotion_code::OAIOn_demand_promotion_code() {
    this->initializeModel();
}

OAIOn_demand_promotion_code::~OAIOn_demand_promotion_code() {}

void OAIOn_demand_promotion_code::initializeModel() {

    m_code_isSet = false;
    m_code_isValid = false;

    m_link_isSet = false;
    m_link_isValid = false;

    m_max_uses_isSet = false;
    m_max_uses_isValid = false;

    m_uses_isSet = false;
    m_uses_isValid = false;
}

void OAIOn_demand_promotion_code::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOn_demand_promotion_code::fromJsonObject(QJsonObject json) {

    m_code_isValid = ::OpenAPI::fromJsonValue(m_code, json[QString("code")]);
    m_code_isSet = !json[QString("code")].isNull() && m_code_isValid;

    m_link_isValid = ::OpenAPI::fromJsonValue(m_link, json[QString("link")]);
    m_link_isSet = !json[QString("link")].isNull() && m_link_isValid;

    m_max_uses_isValid = ::OpenAPI::fromJsonValue(m_max_uses, json[QString("max_uses")]);
    m_max_uses_isSet = !json[QString("max_uses")].isNull() && m_max_uses_isValid;

    m_uses_isValid = ::OpenAPI::fromJsonValue(m_uses, json[QString("uses")]);
    m_uses_isSet = !json[QString("uses")].isNull() && m_uses_isValid;
}

QString OAIOn_demand_promotion_code::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOn_demand_promotion_code::asJsonObject() const {
    QJsonObject obj;
    if (m_code_isSet) {
        obj.insert(QString("code"), ::OpenAPI::toJsonValue(m_code));
    }
    if (m_link_isSet) {
        obj.insert(QString("link"), ::OpenAPI::toJsonValue(m_link));
    }
    if (m_max_uses_isSet) {
        obj.insert(QString("max_uses"), ::OpenAPI::toJsonValue(m_max_uses));
    }
    if (m_uses_isSet) {
        obj.insert(QString("uses"), ::OpenAPI::toJsonValue(m_uses));
    }
    return obj;
}

QString OAIOn_demand_promotion_code::getCode() const {
    return m_code;
}
void OAIOn_demand_promotion_code::setCode(const QString &code) {
    m_code = code;
    m_code_isSet = true;
}

bool OAIOn_demand_promotion_code::is_code_Set() const{
    return m_code_isSet;
}

bool OAIOn_demand_promotion_code::is_code_Valid() const{
    return m_code_isValid;
}

QString OAIOn_demand_promotion_code::getLink() const {
    return m_link;
}
void OAIOn_demand_promotion_code::setLink(const QString &link) {
    m_link = link;
    m_link_isSet = true;
}

bool OAIOn_demand_promotion_code::is_link_Set() const{
    return m_link_isSet;
}

bool OAIOn_demand_promotion_code::is_link_Valid() const{
    return m_link_isValid;
}

double OAIOn_demand_promotion_code::getMaxUses() const {
    return m_max_uses;
}
void OAIOn_demand_promotion_code::setMaxUses(const double &max_uses) {
    m_max_uses = max_uses;
    m_max_uses_isSet = true;
}

bool OAIOn_demand_promotion_code::is_max_uses_Set() const{
    return m_max_uses_isSet;
}

bool OAIOn_demand_promotion_code::is_max_uses_Valid() const{
    return m_max_uses_isValid;
}

double OAIOn_demand_promotion_code::getUses() const {
    return m_uses;
}
void OAIOn_demand_promotion_code::setUses(const double &uses) {
    m_uses = uses;
    m_uses_isSet = true;
}

bool OAIOn_demand_promotion_code::is_uses_Set() const{
    return m_uses_isSet;
}

bool OAIOn_demand_promotion_code::is_uses_Valid() const{
    return m_uses_isValid;
}

bool OAIOn_demand_promotion_code::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_link_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_max_uses_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_uses_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOn_demand_promotion_code::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_code_isValid && m_link_isValid && m_max_uses_isValid && m_uses_isValid && true;
}

} // namespace OpenAPI
