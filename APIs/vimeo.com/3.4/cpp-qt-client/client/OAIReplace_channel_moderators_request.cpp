/**
 * Vimeo
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIReplace_channel_moderators_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIReplace_channel_moderators_request::OAIReplace_channel_moderators_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIReplace_channel_moderators_request::OAIReplace_channel_moderators_request() {
    this->initializeModel();
}

OAIReplace_channel_moderators_request::~OAIReplace_channel_moderators_request() {}

void OAIReplace_channel_moderators_request::initializeModel() {

    m_user_uri_isSet = false;
    m_user_uri_isValid = false;
}

void OAIReplace_channel_moderators_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIReplace_channel_moderators_request::fromJsonObject(QJsonObject json) {

    m_user_uri_isValid = ::OpenAPI::fromJsonValue(m_user_uri, json[QString("user_uri")]);
    m_user_uri_isSet = !json[QString("user_uri")].isNull() && m_user_uri_isValid;
}

QString OAIReplace_channel_moderators_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIReplace_channel_moderators_request::asJsonObject() const {
    QJsonObject obj;
    if (m_user_uri_isSet) {
        obj.insert(QString("user_uri"), ::OpenAPI::toJsonValue(m_user_uri));
    }
    return obj;
}

QString OAIReplace_channel_moderators_request::getUserUri() const {
    return m_user_uri;
}
void OAIReplace_channel_moderators_request::setUserUri(const QString &user_uri) {
    m_user_uri = user_uri;
    m_user_uri_isSet = true;
}

bool OAIReplace_channel_moderators_request::is_user_uri_Set() const{
    return m_user_uri_isSet;
}

bool OAIReplace_channel_moderators_request::is_user_uri_Valid() const{
    return m_user_uri_isValid;
}

bool OAIReplace_channel_moderators_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_user_uri_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIReplace_channel_moderators_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_user_uri_isValid && true;
}

} // namespace OpenAPI
