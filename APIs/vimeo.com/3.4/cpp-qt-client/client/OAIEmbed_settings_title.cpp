/**
 * Vimeo
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEmbed_settings_title.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEmbed_settings_title::OAIEmbed_settings_title(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEmbed_settings_title::OAIEmbed_settings_title() {
    this->initializeModel();
}

OAIEmbed_settings_title::~OAIEmbed_settings_title() {}

void OAIEmbed_settings_title::initializeModel() {

    m_name_isSet = false;
    m_name_isValid = false;

    m_owner_isSet = false;
    m_owner_isValid = false;

    m_portrait_isSet = false;
    m_portrait_isValid = false;
}

void OAIEmbed_settings_title::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEmbed_settings_title::fromJsonObject(QJsonObject json) {

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_owner_isValid = ::OpenAPI::fromJsonValue(m_owner, json[QString("owner")]);
    m_owner_isSet = !json[QString("owner")].isNull() && m_owner_isValid;

    m_portrait_isValid = ::OpenAPI::fromJsonValue(m_portrait, json[QString("portrait")]);
    m_portrait_isSet = !json[QString("portrait")].isNull() && m_portrait_isValid;
}

QString OAIEmbed_settings_title::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEmbed_settings_title::asJsonObject() const {
    QJsonObject obj;
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_owner_isSet) {
        obj.insert(QString("owner"), ::OpenAPI::toJsonValue(m_owner));
    }
    if (m_portrait_isSet) {
        obj.insert(QString("portrait"), ::OpenAPI::toJsonValue(m_portrait));
    }
    return obj;
}

QString OAIEmbed_settings_title::getName() const {
    return m_name;
}
void OAIEmbed_settings_title::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIEmbed_settings_title::is_name_Set() const{
    return m_name_isSet;
}

bool OAIEmbed_settings_title::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIEmbed_settings_title::getOwner() const {
    return m_owner;
}
void OAIEmbed_settings_title::setOwner(const QString &owner) {
    m_owner = owner;
    m_owner_isSet = true;
}

bool OAIEmbed_settings_title::is_owner_Set() const{
    return m_owner_isSet;
}

bool OAIEmbed_settings_title::is_owner_Valid() const{
    return m_owner_isValid;
}

QString OAIEmbed_settings_title::getPortrait() const {
    return m_portrait;
}
void OAIEmbed_settings_title::setPortrait(const QString &portrait) {
    m_portrait = portrait;
    m_portrait_isSet = true;
}

bool OAIEmbed_settings_title::is_portrait_Set() const{
    return m_portrait_isSet;
}

bool OAIEmbed_settings_title::is_portrait_Valid() const{
    return m_portrait_isValid;
}

bool OAIEmbed_settings_title::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_owner_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_portrait_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEmbed_settings_title::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_name_isValid && m_owner_isValid && m_portrait_isValid && true;
}

} // namespace OpenAPI
