/**
 * Vimeo
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Vimeo);
  }
}(this, function(expect, Vimeo) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Vimeo.WatchLaterQueueEssentialsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('WatchLaterQueueEssentialsApi', function() {
    describe('addVideoToWatchLater', function() {
      it('should call addVideoToWatchLater successfully', function(done) {
        //uncomment below and update the code to test addVideoToWatchLater
        //instance.addVideoToWatchLater(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('addVideoToWatchLaterAlt1', function() {
      it('should call addVideoToWatchLaterAlt1 successfully', function(done) {
        //uncomment below and update the code to test addVideoToWatchLaterAlt1
        //instance.addVideoToWatchLaterAlt1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('checkWatchLaterQueue', function() {
      it('should call checkWatchLaterQueue successfully', function(done) {
        //uncomment below and update the code to test checkWatchLaterQueue
        //instance.checkWatchLaterQueue(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('checkWatchLaterQueueAlt1', function() {
      it('should call checkWatchLaterQueueAlt1 successfully', function(done) {
        //uncomment below and update the code to test checkWatchLaterQueueAlt1
        //instance.checkWatchLaterQueueAlt1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteVideoFromWatchLater', function() {
      it('should call deleteVideoFromWatchLater successfully', function(done) {
        //uncomment below and update the code to test deleteVideoFromWatchLater
        //instance.deleteVideoFromWatchLater(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteVideoFromWatchLaterAlt1', function() {
      it('should call deleteVideoFromWatchLaterAlt1 successfully', function(done) {
        //uncomment below and update the code to test deleteVideoFromWatchLaterAlt1
        //instance.deleteVideoFromWatchLaterAlt1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getWatchLaterQueue', function() {
      it('should call getWatchLaterQueue successfully', function(done) {
        //uncomment below and update the code to test getWatchLaterQueue
        //instance.getWatchLaterQueue(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getWatchLaterQueueAlt1', function() {
      it('should call getWatchLaterQueueAlt1 successfully', function(done) {
        //uncomment below and update the code to test getWatchLaterQueueAlt1
        //instance.getWatchLaterQueueAlt1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
