/**
 * Vimeo
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Vimeo);
  }
}(this, function(expect, Vimeo) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Vimeo.AlbumsAlbumVideosApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('AlbumsAlbumVideosApi', function() {
    describe('addVideoToAlbum', function() {
      it('should call addVideoToAlbum successfully', function(done) {
        //uncomment below and update the code to test addVideoToAlbum
        //instance.addVideoToAlbum(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('addVideoToAlbumAlt1', function() {
      it('should call addVideoToAlbumAlt1 successfully', function(done) {
        //uncomment below and update the code to test addVideoToAlbumAlt1
        //instance.addVideoToAlbumAlt1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAlbumVideo', function() {
      it('should call getAlbumVideo successfully', function(done) {
        //uncomment below and update the code to test getAlbumVideo
        //instance.getAlbumVideo(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAlbumVideoAlt1', function() {
      it('should call getAlbumVideoAlt1 successfully', function(done) {
        //uncomment below and update the code to test getAlbumVideoAlt1
        //instance.getAlbumVideoAlt1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAlbumVideos', function() {
      it('should call getAlbumVideos successfully', function(done) {
        //uncomment below and update the code to test getAlbumVideos
        //instance.getAlbumVideos(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAlbumVideosAlt1', function() {
      it('should call getAlbumVideosAlt1 successfully', function(done) {
        //uncomment below and update the code to test getAlbumVideosAlt1
        //instance.getAlbumVideosAlt1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('removeVideoFromAlbum', function() {
      it('should call removeVideoFromAlbum successfully', function(done) {
        //uncomment below and update the code to test removeVideoFromAlbum
        //instance.removeVideoFromAlbum(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('removeVideoFromAlbumAlt1', function() {
      it('should call removeVideoFromAlbumAlt1 successfully', function(done) {
        //uncomment below and update the code to test removeVideoFromAlbumAlt1
        //instance.removeVideoFromAlbumAlt1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceVideosInAlbum', function() {
      it('should call replaceVideosInAlbum successfully', function(done) {
        //uncomment below and update the code to test replaceVideosInAlbum
        //instance.replaceVideosInAlbum(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceVideosInAlbumAlt1', function() {
      it('should call replaceVideosInAlbumAlt1 successfully', function(done) {
        //uncomment below and update the code to test replaceVideosInAlbumAlt1
        //instance.replaceVideosInAlbumAlt1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('setVideoAsAlbumThumbnail', function() {
      it('should call setVideoAsAlbumThumbnail successfully', function(done) {
        //uncomment below and update the code to test setVideoAsAlbumThumbnail
        //instance.setVideoAsAlbumThumbnail(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('setVideoAsAlbumThumbnailAlt1', function() {
      it('should call setVideoAsAlbumThumbnailAlt1 successfully', function(done) {
        //uncomment below and update the code to test setVideoAsAlbumThumbnailAlt1
        //instance.setVideoAsAlbumThumbnailAlt1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
