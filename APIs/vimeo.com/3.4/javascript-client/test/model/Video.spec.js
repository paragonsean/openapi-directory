/**
 * Vimeo
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Vimeo);
  }
}(this, function(expect, Vimeo) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Vimeo.Video();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Video', function() {
    it('should create an instance of Video', function() {
      // uncomment below and update the code to test Video
      //var instance = new Vimeo.Video();
      //expect(instance).to.be.a(Vimeo.Video);
    });

    it('should have the property categories (base name: "categories")', function() {
      // uncomment below and update the code to test the property categories
      //var instance = new Vimeo.Video();
      //expect(instance).to.be();
    });

    it('should have the property contentRating (base name: "content_rating")', function() {
      // uncomment below and update the code to test the property contentRating
      //var instance = new Vimeo.Video();
      //expect(instance).to.be();
    });

    it('should have the property context (base name: "context")', function() {
      // uncomment below and update the code to test the property context
      //var instance = new Vimeo.Video();
      //expect(instance).to.be();
    });

    it('should have the property createdTime (base name: "created_time")', function() {
      // uncomment below and update the code to test the property createdTime
      //var instance = new Vimeo.Video();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new Vimeo.Video();
      //expect(instance).to.be();
    });

    it('should have the property duration (base name: "duration")', function() {
      // uncomment below and update the code to test the property duration
      //var instance = new Vimeo.Video();
      //expect(instance).to.be();
    });

    it('should have the property embed (base name: "embed")', function() {
      // uncomment below and update the code to test the property embed
      //var instance = new Vimeo.Video();
      //expect(instance).to.be();
    });

    it('should have the property height (base name: "height")', function() {
      // uncomment below and update the code to test the property height
      //var instance = new Vimeo.Video();
      //expect(instance).to.be();
    });

    it('should have the property language (base name: "language")', function() {
      // uncomment below and update the code to test the property language
      //var instance = new Vimeo.Video();
      //expect(instance).to.be();
    });

    it('should have the property lastUserActionEventDate (base name: "last_user_action_event_date")', function() {
      // uncomment below and update the code to test the property lastUserActionEventDate
      //var instance = new Vimeo.Video();
      //expect(instance).to.be();
    });

    it('should have the property license (base name: "license")', function() {
      // uncomment below and update the code to test the property license
      //var instance = new Vimeo.Video();
      //expect(instance).to.be();
    });

    it('should have the property link (base name: "link")', function() {
      // uncomment below and update the code to test the property link
      //var instance = new Vimeo.Video();
      //expect(instance).to.be();
    });

    it('should have the property metadata (base name: "metadata")', function() {
      // uncomment below and update the code to test the property metadata
      //var instance = new Vimeo.Video();
      //expect(instance).to.be();
    });

    it('should have the property modifiedTime (base name: "modified_time")', function() {
      // uncomment below and update the code to test the property modifiedTime
      //var instance = new Vimeo.Video();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new Vimeo.Video();
      //expect(instance).to.be();
    });

    it('should have the property parentFolder (base name: "parent_folder")', function() {
      // uncomment below and update the code to test the property parentFolder
      //var instance = new Vimeo.Video();
      //expect(instance).to.be();
    });

    it('should have the property password (base name: "password")', function() {
      // uncomment below and update the code to test the property password
      //var instance = new Vimeo.Video();
      //expect(instance).to.be();
    });

    it('should have the property pictures (base name: "pictures")', function() {
      // uncomment below and update the code to test the property pictures
      //var instance = new Vimeo.Video();
      //expect(instance).to.be();
    });

    it('should have the property privacy (base name: "privacy")', function() {
      // uncomment below and update the code to test the property privacy
      //var instance = new Vimeo.Video();
      //expect(instance).to.be();
    });

    it('should have the property releaseTime (base name: "release_time")', function() {
      // uncomment below and update the code to test the property releaseTime
      //var instance = new Vimeo.Video();
      //expect(instance).to.be();
    });

    it('should have the property resourceKey (base name: "resource_key")', function() {
      // uncomment below and update the code to test the property resourceKey
      //var instance = new Vimeo.Video();
      //expect(instance).to.be();
    });

    it('should have the property spatial (base name: "spatial")', function() {
      // uncomment below and update the code to test the property spatial
      //var instance = new Vimeo.Video();
      //expect(instance).to.be();
    });

    it('should have the property stats (base name: "stats")', function() {
      // uncomment below and update the code to test the property stats
      //var instance = new Vimeo.Video();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new Vimeo.Video();
      //expect(instance).to.be();
    });

    it('should have the property tags (base name: "tags")', function() {
      // uncomment below and update the code to test the property tags
      //var instance = new Vimeo.Video();
      //expect(instance).to.be();
    });

    it('should have the property transcode (base name: "transcode")', function() {
      // uncomment below and update the code to test the property transcode
      //var instance = new Vimeo.Video();
      //expect(instance).to.be();
    });

    it('should have the property upload (base name: "upload")', function() {
      // uncomment below and update the code to test the property upload
      //var instance = new Vimeo.Video();
      //expect(instance).to.be();
    });

    it('should have the property uri (base name: "uri")', function() {
      // uncomment below and update the code to test the property uri
      //var instance = new Vimeo.Video();
      //expect(instance).to.be();
    });

    it('should have the property user (base name: "user")', function() {
      // uncomment below and update the code to test the property user
      //var instance = new Vimeo.Video();
      //expect(instance).to.be();
    });

    it('should have the property width (base name: "width")', function() {
      // uncomment below and update the code to test the property width
      //var instance = new Vimeo.Video();
      //expect(instance).to.be();
    });

  });

}));
