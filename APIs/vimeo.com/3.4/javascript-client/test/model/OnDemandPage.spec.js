/**
 * Vimeo
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Vimeo);
  }
}(this, function(expect, Vimeo) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Vimeo.OnDemandPage();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('OnDemandPage', function() {
    it('should create an instance of OnDemandPage', function() {
      // uncomment below and update the code to test OnDemandPage
      //var instance = new Vimeo.OnDemandPage();
      //expect(instance).to.be.a(Vimeo.OnDemandPage);
    });

    it('should have the property background (base name: "background")', function() {
      // uncomment below and update the code to test the property background
      //var instance = new Vimeo.OnDemandPage();
      //expect(instance).to.be();
    });

    it('should have the property colors (base name: "colors")', function() {
      // uncomment below and update the code to test the property colors
      //var instance = new Vimeo.OnDemandPage();
      //expect(instance).to.be();
    });

    it('should have the property contentRating (base name: "content_rating")', function() {
      // uncomment below and update the code to test the property contentRating
      //var instance = new Vimeo.OnDemandPage();
      //expect(instance).to.be();
    });

    it('should have the property createdTime (base name: "created_time")', function() {
      // uncomment below and update the code to test the property createdTime
      //var instance = new Vimeo.OnDemandPage();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new Vimeo.OnDemandPage();
      //expect(instance).to.be();
    });

    it('should have the property domainLink (base name: "domain_link")', function() {
      // uncomment below and update the code to test the property domainLink
      //var instance = new Vimeo.OnDemandPage();
      //expect(instance).to.be();
    });

    it('should have the property episodes (base name: "episodes")', function() {
      // uncomment below and update the code to test the property episodes
      //var instance = new Vimeo.OnDemandPage();
      //expect(instance).to.be();
    });

    it('should have the property film (base name: "film")', function() {
      // uncomment below and update the code to test the property film
      //var instance = new Vimeo.OnDemandPage();
      //expect(instance).to.be();
    });

    it('should have the property genres (base name: "genres")', function() {
      // uncomment below and update the code to test the property genres
      //var instance = new Vimeo.OnDemandPage();
      //expect(instance).to.be();
    });

    it('should have the property link (base name: "link")', function() {
      // uncomment below and update the code to test the property link
      //var instance = new Vimeo.OnDemandPage();
      //expect(instance).to.be();
    });

    it('should have the property metadata (base name: "metadata")', function() {
      // uncomment below and update the code to test the property metadata
      //var instance = new Vimeo.OnDemandPage();
      //expect(instance).to.be();
    });

    it('should have the property modifiedTime (base name: "modified_time")', function() {
      // uncomment below and update the code to test the property modifiedTime
      //var instance = new Vimeo.OnDemandPage();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new Vimeo.OnDemandPage();
      //expect(instance).to.be();
    });

    it('should have the property pictures (base name: "pictures")', function() {
      // uncomment below and update the code to test the property pictures
      //var instance = new Vimeo.OnDemandPage();
      //expect(instance).to.be();
    });

    it('should have the property preorder (base name: "preorder")', function() {
      // uncomment below and update the code to test the property preorder
      //var instance = new Vimeo.OnDemandPage();
      //expect(instance).to.be();
    });

    it('should have the property published (base name: "published")', function() {
      // uncomment below and update the code to test the property published
      //var instance = new Vimeo.OnDemandPage();
      //expect(instance).to.be();
    });

    it('should have the property rating (base name: "rating")', function() {
      // uncomment below and update the code to test the property rating
      //var instance = new Vimeo.OnDemandPage();
      //expect(instance).to.be();
    });

    it('should have the property resourceKey (base name: "resource_key")', function() {
      // uncomment below and update the code to test the property resourceKey
      //var instance = new Vimeo.OnDemandPage();
      //expect(instance).to.be();
    });

    it('should have the property sku (base name: "sku")', function() {
      // uncomment below and update the code to test the property sku
      //var instance = new Vimeo.OnDemandPage();
      //expect(instance).to.be();
    });

    it('should have the property subscription (base name: "subscription")', function() {
      // uncomment below and update the code to test the property subscription
      //var instance = new Vimeo.OnDemandPage();
      //expect(instance).to.be();
    });

    it('should have the property theme (base name: "theme")', function() {
      // uncomment below and update the code to test the property theme
      //var instance = new Vimeo.OnDemandPage();
      //expect(instance).to.be();
    });

    it('should have the property thumbnail (base name: "thumbnail")', function() {
      // uncomment below and update the code to test the property thumbnail
      //var instance = new Vimeo.OnDemandPage();
      //expect(instance).to.be();
    });

    it('should have the property trailer (base name: "trailer")', function() {
      // uncomment below and update the code to test the property trailer
      //var instance = new Vimeo.OnDemandPage();
      //expect(instance).to.be();
    });

    it('should have the property type (base name: "type")', function() {
      // uncomment below and update the code to test the property type
      //var instance = new Vimeo.OnDemandPage();
      //expect(instance).to.be();
    });

    it('should have the property uri (base name: "uri")', function() {
      // uncomment below and update the code to test the property uri
      //var instance = new Vimeo.OnDemandPage();
      //expect(instance).to.be();
    });

    it('should have the property user (base name: "user")', function() {
      // uncomment below and update the code to test the property user
      //var instance = new Vimeo.OnDemandPage();
      //expect(instance).to.be();
    });

  });

}));
