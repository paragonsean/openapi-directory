/**
 * Vimeo
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CreateVideoVersionRequest from '../model/CreateVideoVersionRequest';
import Error from '../model/Error';
import VideoVersions from '../model/VideoVersions';

/**
* VideosVersions service.
* @module api/VideosVersionsApi
* @version 3.4
*/
export default class VideosVersionsApi {

    /**
    * Constructs a new VideosVersionsApi. 
    * @alias module:api/VideosVersionsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createVideoVersion operation.
     * @callback module:api/VideosVersionsApi~createVideoVersionCallback
     * @param {String} error Error message, if any.
     * @param {module:model/VideoVersions} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Add a version to a video
     * @param {Number} videoId The ID of the video.
     * @param {module:model/CreateVideoVersionRequest} createVideoVersionRequest 
     * @param {module:api/VideosVersionsApi~createVideoVersionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/VideoVersions}
     */
    createVideoVersion(videoId, createVideoVersionRequest, callback) {
      let postBody = createVideoVersionRequest;
      // verify the required parameter 'videoId' is set
      if (videoId === undefined || videoId === null) {
        throw new Error("Missing the required parameter 'videoId' when calling createVideoVersion");
      }
      // verify the required parameter 'createVideoVersionRequest' is set
      if (createVideoVersionRequest === undefined || createVideoVersionRequest === null) {
        throw new Error("Missing the required parameter 'createVideoVersionRequest' when calling createVideoVersion");
      }

      let pathParams = {
        'video_id': videoId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2', 'oauth2'];
      let contentTypes = ['application/vnd.vimeo.video.version+json'];
      let accepts = ['application/vnd.vimeo.video.version+json'];
      let returnType = VideoVersions;
      return this.apiClient.callApi(
        '/videos/{video_id}/versions', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
