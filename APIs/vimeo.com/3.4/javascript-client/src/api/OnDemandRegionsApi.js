/**
 * Vimeo
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import DeleteVodRegionsRequest from '../model/DeleteVodRegionsRequest';
import LegacyError from '../model/LegacyError';
import OnDemandRegion from '../model/OnDemandRegion';
import SetVodRegionsRequest from '../model/SetVodRegionsRequest';

/**
* OnDemandRegions service.
* @module api/OnDemandRegionsApi
* @version 3.4
*/
export default class OnDemandRegionsApi {

    /**
    * Constructs a new OnDemandRegionsApi. 
    * @alias module:api/OnDemandRegionsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the addVodRegion operation.
     * @callback module:api/OnDemandRegionsApi~addVodRegionCallback
     * @param {String} error Error message, if any.
     * @param {module:model/OnDemandRegion} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Add a specific region to an On Demand page
     * @param {String} country The country code.
     * @param {Number} ondemandId The ID of the On Demand.
     * @param {module:api/OnDemandRegionsApi~addVodRegionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/OnDemandRegion}
     */
    addVodRegion(country, ondemandId, callback) {
      let postBody = null;
      // verify the required parameter 'country' is set
      if (country === undefined || country === null) {
        throw new Error("Missing the required parameter 'country' when calling addVodRegion");
      }
      // verify the required parameter 'ondemandId' is set
      if (ondemandId === undefined || ondemandId === null) {
        throw new Error("Missing the required parameter 'ondemandId' when calling addVodRegion");
      }

      let pathParams = {
        'country': country,
        'ondemand_id': ondemandId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2', 'oauth2'];
      let contentTypes = [];
      let accepts = ['application/vnd.vimeo.ondemand.region+json'];
      let returnType = OnDemandRegion;
      return this.apiClient.callApi(
        '/ondemand/pages/{ondemand_id}/regions/{country}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteVodRegion operation.
     * @callback module:api/OnDemandRegionsApi~deleteVodRegionCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Remove a specific region from an On Demand page
     * @param {String} country The country code.
     * @param {Number} ondemandId The ID of the On Demand.
     * @param {module:api/OnDemandRegionsApi~deleteVodRegionCallback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteVodRegion(country, ondemandId, callback) {
      let postBody = null;
      // verify the required parameter 'country' is set
      if (country === undefined || country === null) {
        throw new Error("Missing the required parameter 'country' when calling deleteVodRegion");
      }
      // verify the required parameter 'ondemandId' is set
      if (ondemandId === undefined || ondemandId === null) {
        throw new Error("Missing the required parameter 'ondemandId' when calling deleteVodRegion");
      }

      let pathParams = {
        'country': country,
        'ondemand_id': ondemandId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2', 'oauth2'];
      let contentTypes = [];
      let accepts = ['application/vnd.vimeo.ondemand.region+json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/ondemand/pages/{ondemand_id}/regions/{country}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteVodRegions operation.
     * @callback module:api/OnDemandRegionsApi~deleteVodRegionsCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/OnDemandRegion>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Remove a list of regions from an On Demand page
     * @param {Number} ondemandId The ID of the On Demand.
     * @param {Object} opts Optional parameters
     * @param {module:model/DeleteVodRegionsRequest} [deleteVodRegionsRequest] 
     * @param {module:api/OnDemandRegionsApi~deleteVodRegionsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/OnDemandRegion>}
     */
    deleteVodRegions(ondemandId, opts, callback) {
      opts = opts || {};
      let postBody = opts['deleteVodRegionsRequest'];
      // verify the required parameter 'ondemandId' is set
      if (ondemandId === undefined || ondemandId === null) {
        throw new Error("Missing the required parameter 'ondemandId' when calling deleteVodRegions");
      }

      let pathParams = {
        'ondemand_id': ondemandId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2', 'oauth2'];
      let contentTypes = ['application/vnd.vimeo.ondemand.region+json'];
      let accepts = ['application/vnd.vimeo.ondemand.region+json'];
      let returnType = [OnDemandRegion];
      return this.apiClient.callApi(
        '/ondemand/pages/{ondemand_id}/regions', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getRegion operation.
     * @callback module:api/OnDemandRegionsApi~getRegionCallback
     * @param {String} error Error message, if any.
     * @param {module:model/OnDemandRegion} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a specific On Demand region
     * @param {String} country The country code.
     * @param {module:api/OnDemandRegionsApi~getRegionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/OnDemandRegion}
     */
    getRegion(country, callback) {
      let postBody = null;
      // verify the required parameter 'country' is set
      if (country === undefined || country === null) {
        throw new Error("Missing the required parameter 'country' when calling getRegion");
      }

      let pathParams = {
        'country': country
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2', 'oauth2'];
      let contentTypes = [];
      let accepts = ['application/vnd.vimeo.ondemand.region+json'];
      let returnType = OnDemandRegion;
      return this.apiClient.callApi(
        '/ondemand/regions/{country}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getRegions operation.
     * @callback module:api/OnDemandRegionsApi~getRegionsCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/OnDemandRegion>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get all the On Demand regions
     * @param {module:api/OnDemandRegionsApi~getRegionsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/OnDemandRegion>}
     */
    getRegions(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2', 'oauth2'];
      let contentTypes = [];
      let accepts = ['application/vnd.vimeo.ondemand.region+json'];
      let returnType = [OnDemandRegion];
      return this.apiClient.callApi(
        '/ondemand/regions', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getVodRegion operation.
     * @callback module:api/OnDemandRegionsApi~getVodRegionCallback
     * @param {String} error Error message, if any.
     * @param {module:model/OnDemandRegion} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a specific region of an On Demand page
     * Checks whether an On Demand page belongs to a region.
     * @param {String} country The country code.
     * @param {Number} ondemandId The ID of the On Demand.
     * @param {module:api/OnDemandRegionsApi~getVodRegionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/OnDemandRegion}
     */
    getVodRegion(country, ondemandId, callback) {
      let postBody = null;
      // verify the required parameter 'country' is set
      if (country === undefined || country === null) {
        throw new Error("Missing the required parameter 'country' when calling getVodRegion");
      }
      // verify the required parameter 'ondemandId' is set
      if (ondemandId === undefined || ondemandId === null) {
        throw new Error("Missing the required parameter 'ondemandId' when calling getVodRegion");
      }

      let pathParams = {
        'country': country,
        'ondemand_id': ondemandId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2', 'oauth2'];
      let contentTypes = [];
      let accepts = ['application/vnd.vimeo.ondemand.region+json'];
      let returnType = OnDemandRegion;
      return this.apiClient.callApi(
        '/ondemand/pages/{ondemand_id}/regions/{country}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getVodRegions operation.
     * @callback module:api/OnDemandRegionsApi~getVodRegionsCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/OnDemandRegion>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get all the regions of an On Demand page
     * @param {Number} ondemandId The ID of the On Demand.
     * @param {module:api/OnDemandRegionsApi~getVodRegionsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/OnDemandRegion>}
     */
    getVodRegions(ondemandId, callback) {
      let postBody = null;
      // verify the required parameter 'ondemandId' is set
      if (ondemandId === undefined || ondemandId === null) {
        throw new Error("Missing the required parameter 'ondemandId' when calling getVodRegions");
      }

      let pathParams = {
        'ondemand_id': ondemandId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2', 'oauth2'];
      let contentTypes = [];
      let accepts = ['application/vnd.vimeo.ondemand.region+json'];
      let returnType = [OnDemandRegion];
      return this.apiClient.callApi(
        '/ondemand/pages/{ondemand_id}/regions', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the setVodRegions operation.
     * @callback module:api/OnDemandRegionsApi~setVodRegionsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/OnDemandRegion} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Add a list of regions to an On Demand page
     * @param {Number} ondemandId The ID of the On Demand.
     * @param {module:model/SetVodRegionsRequest} setVodRegionsRequest 
     * @param {module:api/OnDemandRegionsApi~setVodRegionsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/OnDemandRegion}
     */
    setVodRegions(ondemandId, setVodRegionsRequest, callback) {
      let postBody = setVodRegionsRequest;
      // verify the required parameter 'ondemandId' is set
      if (ondemandId === undefined || ondemandId === null) {
        throw new Error("Missing the required parameter 'ondemandId' when calling setVodRegions");
      }
      // verify the required parameter 'setVodRegionsRequest' is set
      if (setVodRegionsRequest === undefined || setVodRegionsRequest === null) {
        throw new Error("Missing the required parameter 'setVodRegionsRequest' when calling setVodRegions");
      }

      let pathParams = {
        'ondemand_id': ondemandId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2', 'oauth2'];
      let contentTypes = ['application/vnd.vimeo.ondemand.region+json'];
      let accepts = ['application/vnd.vimeo.ondemand.region+json'];
      let returnType = OnDemandRegion;
      return this.apiClient.callApi(
        '/ondemand/pages/{ondemand_id}/regions', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
