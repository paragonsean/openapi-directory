/**
 * Vimeo
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AddChannelCategoriesRequest from '../model/AddChannelCategoriesRequest';
import Category from '../model/Category';
import Error from '../model/Error';
import LegacyError from '../model/LegacyError';

/**
* ChannelsCategories service.
* @module api/ChannelsCategoriesApi
* @version 3.4
*/
export default class ChannelsCategoriesApi {

    /**
    * Constructs a new ChannelsCategoriesApi. 
    * @alias module:api/ChannelsCategoriesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the addChannelCategories operation.
     * @callback module:api/ChannelsCategoriesApi~addChannelCategoriesCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Add a list of categories to a channel
     * This method adds multiple categories to the specified channel.
     * @param {Number} channelId The ID of the channel.
     * @param {module:model/AddChannelCategoriesRequest} addChannelCategoriesRequest 
     * @param {module:api/ChannelsCategoriesApi~addChannelCategoriesCallback} callback The callback function, accepting three arguments: error, data, response
     */
    addChannelCategories(channelId, addChannelCategoriesRequest, callback) {
      let postBody = addChannelCategoriesRequest;
      // verify the required parameter 'channelId' is set
      if (channelId === undefined || channelId === null) {
        throw new Error("Missing the required parameter 'channelId' when calling addChannelCategories");
      }
      // verify the required parameter 'addChannelCategoriesRequest' is set
      if (addChannelCategoriesRequest === undefined || addChannelCategoriesRequest === null) {
        throw new Error("Missing the required parameter 'addChannelCategoriesRequest' when calling addChannelCategories");
      }

      let pathParams = {
        'channel_id': channelId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2', 'oauth2'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/channels/{channel_id}/categories', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the categorizeChannel operation.
     * @callback module:api/ChannelsCategoriesApi~categorizeChannelCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Categorize a channel
     * This method adds a channel to a category.
     * @param {String} category The name of the category.
     * @param {Number} channelId The ID of the channel.
     * @param {module:api/ChannelsCategoriesApi~categorizeChannelCallback} callback The callback function, accepting three arguments: error, data, response
     */
    categorizeChannel(category, channelId, callback) {
      let postBody = null;
      // verify the required parameter 'category' is set
      if (category === undefined || category === null) {
        throw new Error("Missing the required parameter 'category' when calling categorizeChannel");
      }
      // verify the required parameter 'channelId' is set
      if (channelId === undefined || channelId === null) {
        throw new Error("Missing the required parameter 'channelId' when calling categorizeChannel");
      }

      let pathParams = {
        'category': category,
        'channel_id': channelId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2', 'oauth2'];
      let contentTypes = [];
      let accepts = ['application/vnd.vimeo.category+json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/channels/{channel_id}/categories/{category}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteChannelCategory operation.
     * @callback module:api/ChannelsCategoriesApi~deleteChannelCategoryCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Remove a category from a channel
     * This method removes a single category from the specified channel.
     * @param {String} category The name of the category.
     * @param {Number} channelId The ID of the channel.
     * @param {module:api/ChannelsCategoriesApi~deleteChannelCategoryCallback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteChannelCategory(category, channelId, callback) {
      let postBody = null;
      // verify the required parameter 'category' is set
      if (category === undefined || category === null) {
        throw new Error("Missing the required parameter 'category' when calling deleteChannelCategory");
      }
      // verify the required parameter 'channelId' is set
      if (channelId === undefined || channelId === null) {
        throw new Error("Missing the required parameter 'channelId' when calling deleteChannelCategory");
      }

      let pathParams = {
        'category': category,
        'channel_id': channelId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2', 'oauth2'];
      let contentTypes = [];
      let accepts = ['application/vnd.vimeo.category+json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/channels/{channel_id}/categories/{category}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getChannelCategories operation.
     * @callback module:api/ChannelsCategoriesApi~getChannelCategoriesCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/Category>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get all the categories in a channel
     * This method gets all the categories in the specified channel.
     * @param {Number} channelId The ID of the channel.
     * @param {module:api/ChannelsCategoriesApi~getChannelCategoriesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/Category>}
     */
    getChannelCategories(channelId, callback) {
      let postBody = null;
      // verify the required parameter 'channelId' is set
      if (channelId === undefined || channelId === null) {
        throw new Error("Missing the required parameter 'channelId' when calling getChannelCategories");
      }

      let pathParams = {
        'channel_id': channelId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2', 'oauth2'];
      let contentTypes = [];
      let accepts = ['application/vnd.vimeo.category+json'];
      let returnType = [Category];
      return this.apiClient.callApi(
        '/channels/{channel_id}/categories', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
