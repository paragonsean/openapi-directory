/**
 * Vimeo
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import EditVodBackgroundRequest from '../model/EditVodBackgroundRequest';
import LegacyError from '../model/LegacyError';
import Picture from '../model/Picture';

/**
* OnDemandBackgrounds service.
* @module api/OnDemandBackgroundsApi
* @version 3.4
*/
export default class OnDemandBackgroundsApi {

    /**
    * Constructs a new OnDemandBackgroundsApi. 
    * @alias module:api/OnDemandBackgroundsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createVodBackground operation.
     * @callback module:api/OnDemandBackgroundsApi~createVodBackgroundCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Picture} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Add a background to an On Demand page
     * @param {Number} ondemandId The ID of the On Demand.
     * @param {module:api/OnDemandBackgroundsApi~createVodBackgroundCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Picture}
     */
    createVodBackground(ondemandId, callback) {
      let postBody = null;
      // verify the required parameter 'ondemandId' is set
      if (ondemandId === undefined || ondemandId === null) {
        throw new Error("Missing the required parameter 'ondemandId' when calling createVodBackground");
      }

      let pathParams = {
        'ondemand_id': ondemandId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2', 'oauth2'];
      let contentTypes = [];
      let accepts = ['application/vnd.vimeo.picture+json'];
      let returnType = Picture;
      return this.apiClient.callApi(
        '/ondemand/pages/{ondemand_id}/backgrounds', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteVodBackground operation.
     * @callback module:api/OnDemandBackgroundsApi~deleteVodBackgroundCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Picture} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Remove a background from an On Demand page
     * @param {Number} backgroundId The ID of the background.
     * @param {Number} ondemandId The ID of the On Demand.
     * @param {module:api/OnDemandBackgroundsApi~deleteVodBackgroundCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Picture}
     */
    deleteVodBackground(backgroundId, ondemandId, callback) {
      let postBody = null;
      // verify the required parameter 'backgroundId' is set
      if (backgroundId === undefined || backgroundId === null) {
        throw new Error("Missing the required parameter 'backgroundId' when calling deleteVodBackground");
      }
      // verify the required parameter 'ondemandId' is set
      if (ondemandId === undefined || ondemandId === null) {
        throw new Error("Missing the required parameter 'ondemandId' when calling deleteVodBackground");
      }

      let pathParams = {
        'background_id': backgroundId,
        'ondemand_id': ondemandId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2', 'oauth2'];
      let contentTypes = [];
      let accepts = ['application/vnd.vimeo.picture+json'];
      let returnType = Picture;
      return this.apiClient.callApi(
        '/ondemand/pages/{ondemand_id}/backgrounds/{background_id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the editVodBackground operation.
     * @callback module:api/OnDemandBackgroundsApi~editVodBackgroundCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Picture} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Edit a background of an On Demand page
     * @param {Number} backgroundId The ID of the background.
     * @param {Number} ondemandId The ID of the On Demand.
     * @param {Object} opts Optional parameters
     * @param {module:model/EditVodBackgroundRequest} [editVodBackgroundRequest] 
     * @param {module:api/OnDemandBackgroundsApi~editVodBackgroundCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Picture}
     */
    editVodBackground(backgroundId, ondemandId, opts, callback) {
      opts = opts || {};
      let postBody = opts['editVodBackgroundRequest'];
      // verify the required parameter 'backgroundId' is set
      if (backgroundId === undefined || backgroundId === null) {
        throw new Error("Missing the required parameter 'backgroundId' when calling editVodBackground");
      }
      // verify the required parameter 'ondemandId' is set
      if (ondemandId === undefined || ondemandId === null) {
        throw new Error("Missing the required parameter 'ondemandId' when calling editVodBackground");
      }

      let pathParams = {
        'background_id': backgroundId,
        'ondemand_id': ondemandId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2', 'oauth2'];
      let contentTypes = ['application/vnd.vimeo.picture+json'];
      let accepts = ['application/vnd.vimeo.picture+json'];
      let returnType = Picture;
      return this.apiClient.callApi(
        '/ondemand/pages/{ondemand_id}/backgrounds/{background_id}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getVodBackground operation.
     * @callback module:api/OnDemandBackgroundsApi~getVodBackgroundCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Picture} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a specific background of an On Demand page
     * @param {Number} backgroundId The ID of the background.
     * @param {Number} ondemandId The ID of the On Demand.
     * @param {module:api/OnDemandBackgroundsApi~getVodBackgroundCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Picture}
     */
    getVodBackground(backgroundId, ondemandId, callback) {
      let postBody = null;
      // verify the required parameter 'backgroundId' is set
      if (backgroundId === undefined || backgroundId === null) {
        throw new Error("Missing the required parameter 'backgroundId' when calling getVodBackground");
      }
      // verify the required parameter 'ondemandId' is set
      if (ondemandId === undefined || ondemandId === null) {
        throw new Error("Missing the required parameter 'ondemandId' when calling getVodBackground");
      }

      let pathParams = {
        'background_id': backgroundId,
        'ondemand_id': ondemandId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2', 'oauth2'];
      let contentTypes = [];
      let accepts = ['application/vnd.vimeo.picture+json'];
      let returnType = Picture;
      return this.apiClient.callApi(
        '/ondemand/pages/{ondemand_id}/backgrounds/{background_id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getVodBackgrounds operation.
     * @callback module:api/OnDemandBackgroundsApi~getVodBackgroundsCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/Picture>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get all the backgrounds of an On Demand page
     * @param {Number} ondemandId The ID of the On Demand.
     * @param {Object} opts Optional parameters
     * @param {Number} [page] The page number of the results to show.
     * @param {Number} [perPage] The number of items to show on each page of results, up to a maximum of 100.
     * @param {module:api/OnDemandBackgroundsApi~getVodBackgroundsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/Picture>}
     */
    getVodBackgrounds(ondemandId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'ondemandId' is set
      if (ondemandId === undefined || ondemandId === null) {
        throw new Error("Missing the required parameter 'ondemandId' when calling getVodBackgrounds");
      }

      let pathParams = {
        'ondemand_id': ondemandId
      };
      let queryParams = {
        'page': opts['page'],
        'per_page': opts['perPage']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2', 'oauth2'];
      let contentTypes = [];
      let accepts = ['application/vnd.vimeo.picture+json'];
      let returnType = [Picture];
      return this.apiClient.callApi(
        '/ondemand/pages/{ondemand_id}/backgrounds', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
