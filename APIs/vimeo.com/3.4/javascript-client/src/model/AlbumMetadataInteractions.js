/**
 * Vimeo
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AlbumMetadataInteractionsAddCustomThumbnails from './AlbumMetadataInteractionsAddCustomThumbnails';
import AlbumMetadataInteractionsAddLogos from './AlbumMetadataInteractionsAddLogos';
import AlbumMetadataInteractionsAddVideos from './AlbumMetadataInteractionsAddVideos';

/**
 * The AlbumMetadataInteractions model module.
 * @module model/AlbumMetadataInteractions
 * @version 3.4
 */
class AlbumMetadataInteractions {
    /**
     * Constructs a new <code>AlbumMetadataInteractions</code>.
     * A list of resource URIs related to the album.
     * @alias module:model/AlbumMetadataInteractions
     * @param addCustomThumbnails {module:model/AlbumMetadataInteractionsAddCustomThumbnails} 
     * @param addLogos {module:model/AlbumMetadataInteractionsAddLogos} 
     * @param addVideos {module:model/AlbumMetadataInteractionsAddVideos} 
     */
    constructor(addCustomThumbnails, addLogos, addVideos) { 
        
        AlbumMetadataInteractions.initialize(this, addCustomThumbnails, addLogos, addVideos);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, addCustomThumbnails, addLogos, addVideos) { 
        obj['add_custom_thumbnails'] = addCustomThumbnails;
        obj['add_logos'] = addLogos;
        obj['add_videos'] = addVideos;
    }

    /**
     * Constructs a <code>AlbumMetadataInteractions</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AlbumMetadataInteractions} obj Optional instance to populate.
     * @return {module:model/AlbumMetadataInteractions} The populated <code>AlbumMetadataInteractions</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AlbumMetadataInteractions();

            if (data.hasOwnProperty('add_custom_thumbnails')) {
                obj['add_custom_thumbnails'] = AlbumMetadataInteractionsAddCustomThumbnails.constructFromObject(data['add_custom_thumbnails']);
            }
            if (data.hasOwnProperty('add_logos')) {
                obj['add_logos'] = AlbumMetadataInteractionsAddLogos.constructFromObject(data['add_logos']);
            }
            if (data.hasOwnProperty('add_videos')) {
                obj['add_videos'] = AlbumMetadataInteractionsAddVideos.constructFromObject(data['add_videos']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AlbumMetadataInteractions</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AlbumMetadataInteractions</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AlbumMetadataInteractions.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `add_custom_thumbnails`
        if (data['add_custom_thumbnails']) { // data not null
          AlbumMetadataInteractionsAddCustomThumbnails.validateJSON(data['add_custom_thumbnails']);
        }
        // validate the optional field `add_logos`
        if (data['add_logos']) { // data not null
          AlbumMetadataInteractionsAddLogos.validateJSON(data['add_logos']);
        }
        // validate the optional field `add_videos`
        if (data['add_videos']) { // data not null
          AlbumMetadataInteractionsAddVideos.validateJSON(data['add_videos']);
        }

        return true;
    }


}

AlbumMetadataInteractions.RequiredProperties = ["add_custom_thumbnails", "add_logos", "add_videos"];

/**
 * @member {module:model/AlbumMetadataInteractionsAddCustomThumbnails} add_custom_thumbnails
 */
AlbumMetadataInteractions.prototype['add_custom_thumbnails'] = undefined;

/**
 * @member {module:model/AlbumMetadataInteractionsAddLogos} add_logos
 */
AlbumMetadataInteractions.prototype['add_logos'] = undefined;

/**
 * @member {module:model/AlbumMetadataInteractionsAddVideos} add_videos
 */
AlbumMetadataInteractions.prototype['add_videos'] = undefined;






export default AlbumMetadataInteractions;

