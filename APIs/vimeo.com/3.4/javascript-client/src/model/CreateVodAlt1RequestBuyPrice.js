/**
 * Vimeo
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CreateVodAlt1RequestBuyPrice model module.
 * @module model/CreateVodAlt1RequestBuyPrice
 * @version 3.4
 */
class CreateVodAlt1RequestBuyPrice {
    /**
     * Constructs a new <code>CreateVodAlt1RequestBuyPrice</code>.
     * @alias module:model/CreateVodAlt1RequestBuyPrice
     */
    constructor() { 
        
        CreateVodAlt1RequestBuyPrice.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CreateVodAlt1RequestBuyPrice</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateVodAlt1RequestBuyPrice} obj Optional instance to populate.
     * @return {module:model/CreateVodAlt1RequestBuyPrice} The populated <code>CreateVodAlt1RequestBuyPrice</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateVodAlt1RequestBuyPrice();

            if (data.hasOwnProperty('AUD')) {
                obj['AUD'] = ApiClient.convertToType(data['AUD'], 'Number');
            }
            if (data.hasOwnProperty('CAD')) {
                obj['CAD'] = ApiClient.convertToType(data['CAD'], 'Number');
            }
            if (data.hasOwnProperty('CHF')) {
                obj['CHF'] = ApiClient.convertToType(data['CHF'], 'Number');
            }
            if (data.hasOwnProperty('DKK')) {
                obj['DKK'] = ApiClient.convertToType(data['DKK'], 'Number');
            }
            if (data.hasOwnProperty('EUR')) {
                obj['EUR'] = ApiClient.convertToType(data['EUR'], 'Number');
            }
            if (data.hasOwnProperty('GBP')) {
                obj['GBP'] = ApiClient.convertToType(data['GBP'], 'Number');
            }
            if (data.hasOwnProperty('JPY')) {
                obj['JPY'] = ApiClient.convertToType(data['JPY'], 'Number');
            }
            if (data.hasOwnProperty('KRW')) {
                obj['KRW'] = ApiClient.convertToType(data['KRW'], 'Number');
            }
            if (data.hasOwnProperty('NOK')) {
                obj['NOK'] = ApiClient.convertToType(data['NOK'], 'Number');
            }
            if (data.hasOwnProperty('PLN')) {
                obj['PLN'] = ApiClient.convertToType(data['PLN'], 'Number');
            }
            if (data.hasOwnProperty('SEK')) {
                obj['SEK'] = ApiClient.convertToType(data['SEK'], 'Number');
            }
            if (data.hasOwnProperty('USD')) {
                obj['USD'] = ApiClient.convertToType(data['USD'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateVodAlt1RequestBuyPrice</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateVodAlt1RequestBuyPrice</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * The purchase price of this video in AUD.
 * @member {Number} AUD
 */
CreateVodAlt1RequestBuyPrice.prototype['AUD'] = undefined;

/**
 * The purchase price of this video in CAD.
 * @member {Number} CAD
 */
CreateVodAlt1RequestBuyPrice.prototype['CAD'] = undefined;

/**
 * The purchase price of this video in CHF.
 * @member {Number} CHF
 */
CreateVodAlt1RequestBuyPrice.prototype['CHF'] = undefined;

/**
 * The purchase price of this video in DKK.
 * @member {Number} DKK
 */
CreateVodAlt1RequestBuyPrice.prototype['DKK'] = undefined;

/**
 * The purchase price of this video in EUR.
 * @member {Number} EUR
 */
CreateVodAlt1RequestBuyPrice.prototype['EUR'] = undefined;

/**
 * The purchase price of this video in GBP.
 * @member {Number} GBP
 */
CreateVodAlt1RequestBuyPrice.prototype['GBP'] = undefined;

/**
 * The purchase price of this video in JPY.
 * @member {Number} JPY
 */
CreateVodAlt1RequestBuyPrice.prototype['JPY'] = undefined;

/**
 * The purchase price of this video in KRW.
 * @member {Number} KRW
 */
CreateVodAlt1RequestBuyPrice.prototype['KRW'] = undefined;

/**
 * The purchase price of this video in NOK.
 * @member {Number} NOK
 */
CreateVodAlt1RequestBuyPrice.prototype['NOK'] = undefined;

/**
 * The purchase price of this video in PLN.
 * @member {Number} PLN
 */
CreateVodAlt1RequestBuyPrice.prototype['PLN'] = undefined;

/**
 * The purchase price of this video in SEK.
 * @member {Number} SEK
 */
CreateVodAlt1RequestBuyPrice.prototype['SEK'] = undefined;

/**
 * The purchase price of this video in USD when `type` is `film`, or the purchase price of the entire collection in USD when `type` is `series`.
 * @member {Number} USD
 */
CreateVodAlt1RequestBuyPrice.prototype['USD'] = undefined;






export default CreateVodAlt1RequestBuyPrice;

