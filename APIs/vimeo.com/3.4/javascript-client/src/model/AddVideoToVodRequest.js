/**
 * Vimeo
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AddVideoToVodRequestBuy from './AddVideoToVodRequestBuy';
import AddVideoToVodRequestRent from './AddVideoToVodRequestRent';

/**
 * The AddVideoToVodRequest model module.
 * @module model/AddVideoToVodRequest
 * @version 3.4
 */
class AddVideoToVodRequest {
    /**
     * Constructs a new <code>AddVideoToVodRequest</code>.
     * @alias module:model/AddVideoToVodRequest
     * @param type {module:model/AddVideoToVodRequest.TypeEnum} The type of video that you are adding to the On Demand page.
     */
    constructor(type) { 
        
        AddVideoToVodRequest.initialize(this, type);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, type) { 
        obj['type'] = type;
    }

    /**
     * Constructs a <code>AddVideoToVodRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AddVideoToVodRequest} obj Optional instance to populate.
     * @return {module:model/AddVideoToVodRequest} The populated <code>AddVideoToVodRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AddVideoToVodRequest();

            if (data.hasOwnProperty('buy')) {
                obj['buy'] = AddVideoToVodRequestBuy.constructFromObject(data['buy']);
            }
            if (data.hasOwnProperty('position')) {
                obj['position'] = ApiClient.convertToType(data['position'], 'Number');
            }
            if (data.hasOwnProperty('release_year')) {
                obj['release_year'] = ApiClient.convertToType(data['release_year'], 'Number');
            }
            if (data.hasOwnProperty('rent')) {
                obj['rent'] = AddVideoToVodRequestRent.constructFromObject(data['rent']);
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AddVideoToVodRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AddVideoToVodRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AddVideoToVodRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `buy`
        if (data['buy']) { // data not null
          AddVideoToVodRequestBuy.validateJSON(data['buy']);
        }
        // validate the optional field `rent`
        if (data['rent']) { // data not null
          AddVideoToVodRequestRent.validateJSON(data['rent']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}

AddVideoToVodRequest.RequiredProperties = ["type"];

/**
 * @member {module:model/AddVideoToVodRequestBuy} buy
 */
AddVideoToVodRequest.prototype['buy'] = undefined;

/**
 * The position of this video in the On Demand collection.
 * @member {Number} position
 */
AddVideoToVodRequest.prototype['position'] = undefined;

/**
 * The video release year.
 * @member {Number} release_year
 */
AddVideoToVodRequest.prototype['release_year'] = undefined;

/**
 * @member {module:model/AddVideoToVodRequestRent} rent
 */
AddVideoToVodRequest.prototype['rent'] = undefined;

/**
 * The type of video that you are adding to the On Demand page.
 * @member {module:model/AddVideoToVodRequest.TypeEnum} type
 */
AddVideoToVodRequest.prototype['type'] = undefined;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
AddVideoToVodRequest['TypeEnum'] = {

    /**
     * value: "extra"
     * @const
     */
    "extra": "extra",

    /**
     * value: "main"
     * @const
     */
    "main": "main",

    /**
     * value: "trailer"
     * @const
     */
    "trailer": "trailer"
};



export default AddVideoToVodRequest;

