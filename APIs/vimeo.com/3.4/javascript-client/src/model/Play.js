/**
 * Vimeo
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PlayProgressiveInner from './PlayProgressiveInner';

/**
 * The Play model module.
 * @module model/Play
 * @version 3.4
 */
class Play {
    /**
     * Constructs a new <code>Play</code>.
     * @alias module:model/Play
     * @param status {module:model/Play.StatusEnum} The play status of the video:  Option descriptions:  * `playable` - The video is playable.  * `purchase_required` - The video must be purchased.  * `restricted` - Playback for the video is restricted.  * `unavailable` - The video is unavailable. 
     */
    constructor(status) { 
        
        Play.initialize(this, status);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, status) { 
        obj['status'] = status;
    }

    /**
     * Constructs a <code>Play</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Play} obj Optional instance to populate.
     * @return {module:model/Play} The populated <code>Play</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Play();

            if (data.hasOwnProperty('progressive')) {
                obj['progressive'] = ApiClient.convertToType(data['progressive'], [PlayProgressiveInner]);
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Play</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Play</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Play.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['progressive']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['progressive'])) {
                throw new Error("Expected the field `progressive` to be an array in the JSON data but got " + data['progressive']);
            }
            // validate the optional field `progressive` (array)
            for (const item of data['progressive']) {
                PlayProgressiveInner.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }

        return true;
    }


}

Play.RequiredProperties = ["status"];

/**
 * Progressive files.
 * @member {Array.<module:model/PlayProgressiveInner>} progressive
 */
Play.prototype['progressive'] = undefined;

/**
 * The play status of the video:  Option descriptions:  * `playable` - The video is playable.  * `purchase_required` - The video must be purchased.  * `restricted` - Playback for the video is restricted.  * `unavailable` - The video is unavailable. 
 * @member {module:model/Play.StatusEnum} status
 */
Play.prototype['status'] = undefined;





/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
Play['StatusEnum'] = {

    /**
     * value: "playable"
     * @const
     */
    "playable": "playable",

    /**
     * value: "purchase_required"
     * @const
     */
    "purchase_required": "purchase_required",

    /**
     * value: "restricted"
     * @const
     */
    "restricted": "restricted",

    /**
     * value: "unavailable"
     * @const
     */
    "unavailable": "unavailable"
};



export default Play;

