/**
 * Vimeo
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PurchaseInteractionSubscribe model module.
 * @module model/PurchaseInteractionSubscribe
 * @version 3.4
 */
class PurchaseInteractionSubscribe {
    /**
     * Constructs a new <code>PurchaseInteractionSubscribe</code>.
     * Information on subscribing to this video.
     * @alias module:model/PurchaseInteractionSubscribe
     */
    constructor() { 
        
        PurchaseInteractionSubscribe.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PurchaseInteractionSubscribe</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PurchaseInteractionSubscribe} obj Optional instance to populate.
     * @return {module:model/PurchaseInteractionSubscribe} The populated <code>PurchaseInteractionSubscribe</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PurchaseInteractionSubscribe();

            if (data.hasOwnProperty('drm')) {
                obj['drm'] = ApiClient.convertToType(data['drm'], 'Boolean');
            }
            if (data.hasOwnProperty('expires_time')) {
                obj['expires_time'] = ApiClient.convertToType(data['expires_time'], 'String');
            }
            if (data.hasOwnProperty('link')) {
                obj['link'] = ApiClient.convertToType(data['link'], 'String');
            }
            if (data.hasOwnProperty('purchase_time')) {
                obj['purchase_time'] = ApiClient.convertToType(data['purchase_time'], 'String');
            }
            if (data.hasOwnProperty('stream')) {
                obj['stream'] = ApiClient.convertToType(data['stream'], 'String');
            }
            if (data.hasOwnProperty('uri')) {
                obj['uri'] = ApiClient.convertToType(data['uri'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PurchaseInteractionSubscribe</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PurchaseInteractionSubscribe</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['expires_time'] && !(typeof data['expires_time'] === 'string' || data['expires_time'] instanceof String)) {
            throw new Error("Expected the field `expires_time` to be a primitive type in the JSON string but got " + data['expires_time']);
        }
        // ensure the json data is a string
        if (data['link'] && !(typeof data['link'] === 'string' || data['link'] instanceof String)) {
            throw new Error("Expected the field `link` to be a primitive type in the JSON string but got " + data['link']);
        }
        // ensure the json data is a string
        if (data['purchase_time'] && !(typeof data['purchase_time'] === 'string' || data['purchase_time'] instanceof String)) {
            throw new Error("Expected the field `purchase_time` to be a primitive type in the JSON string but got " + data['purchase_time']);
        }
        // ensure the json data is a string
        if (data['stream'] && !(typeof data['stream'] === 'string' || data['stream'] instanceof String)) {
            throw new Error("Expected the field `stream` to be a primitive type in the JSON string but got " + data['stream']);
        }
        // ensure the json data is a string
        if (data['uri'] && !(typeof data['uri'] === 'string' || data['uri'] instanceof String)) {
            throw new Error("Expected the field `uri` to be a primitive type in the JSON string but got " + data['uri']);
        }

        return true;
    }


}



/**
 * Whether the On Demand subscription has DRM.
 * @member {Boolean} drm
 */
PurchaseInteractionSubscribe.prototype['drm'] = undefined;

/**
 * The time in ISO 8601 format when the On Demand video will expire.
 * @member {String} expires_time
 */
PurchaseInteractionSubscribe.prototype['expires_time'] = undefined;

/**
 * The URL to purchase this On Demand subscription on Vimeo.
 * @member {String} link
 */
PurchaseInteractionSubscribe.prototype['link'] = undefined;

/**
 * The time in ISO 8601 format when the On Demand was purchased.
 * @member {String} purchase_time
 */
PurchaseInteractionSubscribe.prototype['purchase_time'] = undefined;

/**
 * The user's streaming access to this On Demand subscription:  Option descriptions:  * `available` - The On Demand subscription is available for streaming.  * `purchased` - The On Demand subscription has been purchased.  * `restricted` - Streaming for the On Demand subscription is restricted.  * `unavailable` - The On Demand subscription is unavailable. 
 * @member {module:model/PurchaseInteractionSubscribe.StreamEnum} stream
 */
PurchaseInteractionSubscribe.prototype['stream'] = undefined;

/**
 * The On Demand subscription's product URI.
 * @member {String} uri
 */
PurchaseInteractionSubscribe.prototype['uri'] = undefined;





/**
 * Allowed values for the <code>stream</code> property.
 * @enum {String}
 * @readonly
 */
PurchaseInteractionSubscribe['StreamEnum'] = {

    /**
     * value: "available"
     * @const
     */
    "available": "available",

    /**
     * value: "purchased"
     * @const
     */
    "purchased": "purchased",

    /**
     * value: "restricted"
     * @const
     */
    "restricted": "restricted",

    /**
     * value: "unavailable"
     * @const
     */
    "unavailable": "unavailable"
};



export default PurchaseInteractionSubscribe;

