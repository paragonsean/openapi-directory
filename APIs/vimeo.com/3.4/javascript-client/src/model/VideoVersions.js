/**
 * Vimeo
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ApiApp from './ApiApp';
import Play from './Play';
import User from './User';
import VideoVersionsMetadata from './VideoVersionsMetadata';
import VideoVersionsUpload from './VideoVersionsUpload';

/**
 * The VideoVersions model module.
 * @module model/VideoVersions
 * @version 3.4
 */
class VideoVersions {
    /**
     * Constructs a new <code>VideoVersions</code>.
     * @alias module:model/VideoVersions
     * @param active {Boolean} Whether this video version is the currently active one.
     * @param app {module:model/ApiApp} The API app associated with the video version.
     * @param createdTime {String} The time in ISO 8601 for when the video version was created.
     * @param duration {Number} The duration of the video version in seconds.
     * @param filename {String} The file name of the video version.
     * @param filesize {Number} The size in byes of the video version file.
     * @param metadata {module:model/VideoVersionsMetadata} 
     * @param modifiedTime {String} The time in ISO 8601 format when the video version was last modified.
     * @param play {module:model/Play} The Play representation.
     * @param upload {module:model/VideoVersionsUpload} 
     * @param uploadDate {String} The time in ISO 8601 format when the video version was uploaded.
     * @param uri {String} The version's canonical relative URI.
     * @param user {module:model/User} The owner of the video version.
     */
    constructor(active, app, createdTime, duration, filename, filesize, metadata, modifiedTime, play, upload, uploadDate, uri, user) { 
        
        VideoVersions.initialize(this, active, app, createdTime, duration, filename, filesize, metadata, modifiedTime, play, upload, uploadDate, uri, user);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, active, app, createdTime, duration, filename, filesize, metadata, modifiedTime, play, upload, uploadDate, uri, user) { 
        obj['active'] = active;
        obj['app'] = app;
        obj['created_time'] = createdTime;
        obj['duration'] = duration;
        obj['filename'] = filename;
        obj['filesize'] = filesize;
        obj['metadata'] = metadata;
        obj['modified_time'] = modifiedTime;
        obj['play'] = play;
        obj['upload'] = upload;
        obj['upload_date'] = uploadDate;
        obj['uri'] = uri;
        obj['user'] = user;
    }

    /**
     * Constructs a <code>VideoVersions</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VideoVersions} obj Optional instance to populate.
     * @return {module:model/VideoVersions} The populated <code>VideoVersions</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VideoVersions();

            if (data.hasOwnProperty('active')) {
                obj['active'] = ApiClient.convertToType(data['active'], 'Boolean');
            }
            if (data.hasOwnProperty('app')) {
                obj['app'] = ApiClient.convertToType(data['app'], ApiApp);
            }
            if (data.hasOwnProperty('created_time')) {
                obj['created_time'] = ApiClient.convertToType(data['created_time'], 'String');
            }
            if (data.hasOwnProperty('duration')) {
                obj['duration'] = ApiClient.convertToType(data['duration'], 'Number');
            }
            if (data.hasOwnProperty('filename')) {
                obj['filename'] = ApiClient.convertToType(data['filename'], 'String');
            }
            if (data.hasOwnProperty('filesize')) {
                obj['filesize'] = ApiClient.convertToType(data['filesize'], 'Number');
            }
            if (data.hasOwnProperty('metadata')) {
                obj['metadata'] = VideoVersionsMetadata.constructFromObject(data['metadata']);
            }
            if (data.hasOwnProperty('modified_time')) {
                obj['modified_time'] = ApiClient.convertToType(data['modified_time'], 'String');
            }
            if (data.hasOwnProperty('play')) {
                obj['play'] = ApiClient.convertToType(data['play'], Play);
            }
            if (data.hasOwnProperty('upload')) {
                obj['upload'] = VideoVersionsUpload.constructFromObject(data['upload']);
            }
            if (data.hasOwnProperty('upload_date')) {
                obj['upload_date'] = ApiClient.convertToType(data['upload_date'], 'String');
            }
            if (data.hasOwnProperty('uri')) {
                obj['uri'] = ApiClient.convertToType(data['uri'], 'String');
            }
            if (data.hasOwnProperty('user')) {
                obj['user'] = ApiClient.convertToType(data['user'], User);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>VideoVersions</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>VideoVersions</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of VideoVersions.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `app`
        if (data['app']) { // data not null
          ApiApp.validateJSON(data['app']);
        }
        // ensure the json data is a string
        if (data['created_time'] && !(typeof data['created_time'] === 'string' || data['created_time'] instanceof String)) {
            throw new Error("Expected the field `created_time` to be a primitive type in the JSON string but got " + data['created_time']);
        }
        // ensure the json data is a string
        if (data['filename'] && !(typeof data['filename'] === 'string' || data['filename'] instanceof String)) {
            throw new Error("Expected the field `filename` to be a primitive type in the JSON string but got " + data['filename']);
        }
        // validate the optional field `metadata`
        if (data['metadata']) { // data not null
          VideoVersionsMetadata.validateJSON(data['metadata']);
        }
        // ensure the json data is a string
        if (data['modified_time'] && !(typeof data['modified_time'] === 'string' || data['modified_time'] instanceof String)) {
            throw new Error("Expected the field `modified_time` to be a primitive type in the JSON string but got " + data['modified_time']);
        }
        // validate the optional field `play`
        if (data['play']) { // data not null
          Play.validateJSON(data['play']);
        }
        // validate the optional field `upload`
        if (data['upload']) { // data not null
          VideoVersionsUpload.validateJSON(data['upload']);
        }
        // ensure the json data is a string
        if (data['upload_date'] && !(typeof data['upload_date'] === 'string' || data['upload_date'] instanceof String)) {
            throw new Error("Expected the field `upload_date` to be a primitive type in the JSON string but got " + data['upload_date']);
        }
        // ensure the json data is a string
        if (data['uri'] && !(typeof data['uri'] === 'string' || data['uri'] instanceof String)) {
            throw new Error("Expected the field `uri` to be a primitive type in the JSON string but got " + data['uri']);
        }
        // validate the optional field `user`
        if (data['user']) { // data not null
          User.validateJSON(data['user']);
        }

        return true;
    }


}

VideoVersions.RequiredProperties = ["active", "app", "created_time", "duration", "filename", "filesize", "metadata", "modified_time", "play", "upload", "upload_date", "uri", "user"];

/**
 * Whether this video version is the currently active one.
 * @member {Boolean} active
 */
VideoVersions.prototype['active'] = undefined;

/**
 * The API app associated with the video version.
 * @member {module:model/ApiApp} app
 */
VideoVersions.prototype['app'] = undefined;

/**
 * The time in ISO 8601 for when the video version was created.
 * @member {String} created_time
 */
VideoVersions.prototype['created_time'] = undefined;

/**
 * The duration of the video version in seconds.
 * @member {Number} duration
 */
VideoVersions.prototype['duration'] = undefined;

/**
 * The file name of the video version.
 * @member {String} filename
 */
VideoVersions.prototype['filename'] = undefined;

/**
 * The size in byes of the video version file.
 * @member {Number} filesize
 */
VideoVersions.prototype['filesize'] = undefined;

/**
 * @member {module:model/VideoVersionsMetadata} metadata
 */
VideoVersions.prototype['metadata'] = undefined;

/**
 * The time in ISO 8601 format when the video version was last modified.
 * @member {String} modified_time
 */
VideoVersions.prototype['modified_time'] = undefined;

/**
 * The Play representation.
 * @member {module:model/Play} play
 */
VideoVersions.prototype['play'] = undefined;

/**
 * @member {module:model/VideoVersionsUpload} upload
 */
VideoVersions.prototype['upload'] = undefined;

/**
 * The time in ISO 8601 format when the video version was uploaded.
 * @member {String} upload_date
 */
VideoVersions.prototype['upload_date'] = undefined;

/**
 * The version's canonical relative URI.
 * @member {String} uri
 */
VideoVersions.prototype['uri'] = undefined;

/**
 * The owner of the video version.
 * @member {module:model/User} user
 */
VideoVersions.prototype['user'] = undefined;






export default VideoVersions;

