/**
 * Vimeo
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import OnDemandPromotionMetadata from './OnDemandPromotionMetadata';

/**
 * The OnDemandPromotion model module.
 * @module model/OnDemandPromotion
 * @version 3.4
 */
class OnDemandPromotion {
    /**
     * Constructs a new <code>OnDemandPromotion</code>.
     * @alias module:model/OnDemandPromotion
     * @param accessType {module:model/OnDemandPromotion.AccessTypeEnum} The type of access that this promotion grants:  Option descriptions:  * `default` - Grants discounts on existing product offerings.  * `vip` - Grants free access either to VOD content before it is released or to access types that aren't part of the existing product offerings. 
     * @param discountType {module:model/OnDemandPromotion.DiscountTypeEnum} The type of discount for which this promotion can be used.  Option descriptions:  * `dollars` - The discount is a certain fixed amount.  * `free` - The discount is the full purchase price. VIP access promotions always use this discount type.  * `percent` - The discount is a certain percentage of the full price. 
     * @param download {Boolean} Whether this promotion grants download access to On Demand content.
     * @param label {String} The prefix string for batch codes, or the null value for single codes.
     * @param metadata {module:model/OnDemandPromotionMetadata} 
     * @param percentOff {Number} The percentage amount that is deducted from the product price.
     * @param productType {module:model/OnDemandPromotion.ProductTypeEnum} The type of product to which this promotion can be applied. Only `buy` and `rent` are available for the VIP access type:  Option descriptions:  * `any` - The promotion can be applied to any product.  * `buy` - The promotion can be applied to a buyable single video.  * `buy_episode` - The promotion can be applied to a buyable single episode.  * `rent` - The promotion can be applied to a rentable single video.  * `rent_episode` - The promotion can be applied to a rentable single episode.  * `subscribe` - The promotion can be applied to a subscription. 
     * @param streamPeriod {module:model/OnDemandPromotion.StreamPeriodEnum} The amount of time that the user has access to the VOD content after redeeming a promo code.  Option descriptions:  * `1_week` - Access lasts for one week.  * `1_year` - Access lasts for one year.  * `24_hour` - Access lasts for 24 hours.  * `30_days` - Access lasts for 30 days.  * `3_month` - Access lasts for 3 months.  * `48_hour` - Access lasts for 48 hours.  * `6_month` - Access lasts for 6 months.  * `72_hour` - Access lasts for 72 hours. 
     * @param total {Number} The total amount of times that this promotion can be used.
     * @param type {module:model/OnDemandPromotion.TypeEnum} The way in which this promotion can generate promo codes:  Option descriptions:  * `batch` - Provides many unique promo codes that can only be used once each.  * `batch_prefix` - Similar to `batch`, except that all codes have a similar prefix string. This mode is deprecated, yet it may still appear for some users.  * `single` - Provides a single promo code with many uses. 
     * @param uri {String} The promotion's canonical relative URI.
     */
    constructor(accessType, discountType, download, label, metadata, percentOff, productType, streamPeriod, total, type, uri) { 
        
        OnDemandPromotion.initialize(this, accessType, discountType, download, label, metadata, percentOff, productType, streamPeriod, total, type, uri);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, accessType, discountType, download, label, metadata, percentOff, productType, streamPeriod, total, type, uri) { 
        obj['access_type'] = accessType;
        obj['discount_type'] = discountType;
        obj['download'] = download;
        obj['label'] = label;
        obj['metadata'] = metadata;
        obj['percent_off'] = percentOff;
        obj['product_type'] = productType;
        obj['stream_period'] = streamPeriod;
        obj['total'] = total;
        obj['type'] = type;
        obj['uri'] = uri;
    }

    /**
     * Constructs a <code>OnDemandPromotion</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OnDemandPromotion} obj Optional instance to populate.
     * @return {module:model/OnDemandPromotion} The populated <code>OnDemandPromotion</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OnDemandPromotion();

            if (data.hasOwnProperty('access_type')) {
                obj['access_type'] = ApiClient.convertToType(data['access_type'], 'String');
            }
            if (data.hasOwnProperty('discount_type')) {
                obj['discount_type'] = ApiClient.convertToType(data['discount_type'], 'String');
            }
            if (data.hasOwnProperty('download')) {
                obj['download'] = ApiClient.convertToType(data['download'], 'Boolean');
            }
            if (data.hasOwnProperty('label')) {
                obj['label'] = ApiClient.convertToType(data['label'], 'String');
            }
            if (data.hasOwnProperty('metadata')) {
                obj['metadata'] = OnDemandPromotionMetadata.constructFromObject(data['metadata']);
            }
            if (data.hasOwnProperty('percent_off')) {
                obj['percent_off'] = ApiClient.convertToType(data['percent_off'], 'Number');
            }
            if (data.hasOwnProperty('product_type')) {
                obj['product_type'] = ApiClient.convertToType(data['product_type'], 'String');
            }
            if (data.hasOwnProperty('stream_period')) {
                obj['stream_period'] = ApiClient.convertToType(data['stream_period'], 'String');
            }
            if (data.hasOwnProperty('total')) {
                obj['total'] = ApiClient.convertToType(data['total'], 'Number');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('uri')) {
                obj['uri'] = ApiClient.convertToType(data['uri'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OnDemandPromotion</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OnDemandPromotion</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of OnDemandPromotion.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['access_type'] && !(typeof data['access_type'] === 'string' || data['access_type'] instanceof String)) {
            throw new Error("Expected the field `access_type` to be a primitive type in the JSON string but got " + data['access_type']);
        }
        // ensure the json data is a string
        if (data['discount_type'] && !(typeof data['discount_type'] === 'string' || data['discount_type'] instanceof String)) {
            throw new Error("Expected the field `discount_type` to be a primitive type in the JSON string but got " + data['discount_type']);
        }
        // ensure the json data is a string
        if (data['label'] && !(typeof data['label'] === 'string' || data['label'] instanceof String)) {
            throw new Error("Expected the field `label` to be a primitive type in the JSON string but got " + data['label']);
        }
        // validate the optional field `metadata`
        if (data['metadata']) { // data not null
          OnDemandPromotionMetadata.validateJSON(data['metadata']);
        }
        // ensure the json data is a string
        if (data['product_type'] && !(typeof data['product_type'] === 'string' || data['product_type'] instanceof String)) {
            throw new Error("Expected the field `product_type` to be a primitive type in the JSON string but got " + data['product_type']);
        }
        // ensure the json data is a string
        if (data['stream_period'] && !(typeof data['stream_period'] === 'string' || data['stream_period'] instanceof String)) {
            throw new Error("Expected the field `stream_period` to be a primitive type in the JSON string but got " + data['stream_period']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }
        // ensure the json data is a string
        if (data['uri'] && !(typeof data['uri'] === 'string' || data['uri'] instanceof String)) {
            throw new Error("Expected the field `uri` to be a primitive type in the JSON string but got " + data['uri']);
        }

        return true;
    }


}

OnDemandPromotion.RequiredProperties = ["access_type", "discount_type", "download", "label", "metadata", "percent_off", "product_type", "stream_period", "total", "type", "uri"];

/**
 * The type of access that this promotion grants:  Option descriptions:  * `default` - Grants discounts on existing product offerings.  * `vip` - Grants free access either to VOD content before it is released or to access types that aren't part of the existing product offerings. 
 * @member {module:model/OnDemandPromotion.AccessTypeEnum} access_type
 */
OnDemandPromotion.prototype['access_type'] = undefined;

/**
 * The type of discount for which this promotion can be used.  Option descriptions:  * `dollars` - The discount is a certain fixed amount.  * `free` - The discount is the full purchase price. VIP access promotions always use this discount type.  * `percent` - The discount is a certain percentage of the full price. 
 * @member {module:model/OnDemandPromotion.DiscountTypeEnum} discount_type
 */
OnDemandPromotion.prototype['discount_type'] = undefined;

/**
 * Whether this promotion grants download access to On Demand content.
 * @member {Boolean} download
 */
OnDemandPromotion.prototype['download'] = undefined;

/**
 * The prefix string for batch codes, or the null value for single codes.
 * @member {String} label
 */
OnDemandPromotion.prototype['label'] = undefined;

/**
 * @member {module:model/OnDemandPromotionMetadata} metadata
 */
OnDemandPromotion.prototype['metadata'] = undefined;

/**
 * The percentage amount that is deducted from the product price.
 * @member {Number} percent_off
 */
OnDemandPromotion.prototype['percent_off'] = undefined;

/**
 * The type of product to which this promotion can be applied. Only `buy` and `rent` are available for the VIP access type:  Option descriptions:  * `any` - The promotion can be applied to any product.  * `buy` - The promotion can be applied to a buyable single video.  * `buy_episode` - The promotion can be applied to a buyable single episode.  * `rent` - The promotion can be applied to a rentable single video.  * `rent_episode` - The promotion can be applied to a rentable single episode.  * `subscribe` - The promotion can be applied to a subscription. 
 * @member {module:model/OnDemandPromotion.ProductTypeEnum} product_type
 */
OnDemandPromotion.prototype['product_type'] = undefined;

/**
 * The amount of time that the user has access to the VOD content after redeeming a promo code.  Option descriptions:  * `1_week` - Access lasts for one week.  * `1_year` - Access lasts for one year.  * `24_hour` - Access lasts for 24 hours.  * `30_days` - Access lasts for 30 days.  * `3_month` - Access lasts for 3 months.  * `48_hour` - Access lasts for 48 hours.  * `6_month` - Access lasts for 6 months.  * `72_hour` - Access lasts for 72 hours. 
 * @member {module:model/OnDemandPromotion.StreamPeriodEnum} stream_period
 */
OnDemandPromotion.prototype['stream_period'] = undefined;

/**
 * The total amount of times that this promotion can be used.
 * @member {Number} total
 */
OnDemandPromotion.prototype['total'] = undefined;

/**
 * The way in which this promotion can generate promo codes:  Option descriptions:  * `batch` - Provides many unique promo codes that can only be used once each.  * `batch_prefix` - Similar to `batch`, except that all codes have a similar prefix string. This mode is deprecated, yet it may still appear for some users.  * `single` - Provides a single promo code with many uses. 
 * @member {module:model/OnDemandPromotion.TypeEnum} type
 */
OnDemandPromotion.prototype['type'] = undefined;

/**
 * The promotion's canonical relative URI.
 * @member {String} uri
 */
OnDemandPromotion.prototype['uri'] = undefined;





/**
 * Allowed values for the <code>access_type</code> property.
 * @enum {String}
 * @readonly
 */
OnDemandPromotion['AccessTypeEnum'] = {

    /**
     * value: "default"
     * @const
     */
    "default": "default",

    /**
     * value: "vip"
     * @const
     */
    "vip": "vip"
};


/**
 * Allowed values for the <code>discount_type</code> property.
 * @enum {String}
 * @readonly
 */
OnDemandPromotion['DiscountTypeEnum'] = {

    /**
     * value: "dollars"
     * @const
     */
    "dollars": "dollars",

    /**
     * value: "free"
     * @const
     */
    "free": "free",

    /**
     * value: "percent"
     * @const
     */
    "percent": "percent"
};


/**
 * Allowed values for the <code>product_type</code> property.
 * @enum {String}
 * @readonly
 */
OnDemandPromotion['ProductTypeEnum'] = {

    /**
     * value: "any"
     * @const
     */
    "any": "any",

    /**
     * value: "buy"
     * @const
     */
    "buy": "buy",

    /**
     * value: "buy_episode"
     * @const
     */
    "buy_episode": "buy_episode",

    /**
     * value: "rent"
     * @const
     */
    "rent": "rent",

    /**
     * value: "rent_episode"
     * @const
     */
    "rent_episode": "rent_episode",

    /**
     * value: "subscribe"
     * @const
     */
    "subscribe": "subscribe"
};


/**
 * Allowed values for the <code>stream_period</code> property.
 * @enum {String}
 * @readonly
 */
OnDemandPromotion['StreamPeriodEnum'] = {

    /**
     * value: "1_week"
     * @const
     */
    "1_week": "1_week",

    /**
     * value: "1_year"
     * @const
     */
    "1_year": "1_year",

    /**
     * value: "24_hour"
     * @const
     */
    "24_hour": "24_hour",

    /**
     * value: "30_days"
     * @const
     */
    "30_days": "30_days",

    /**
     * value: "3_month"
     * @const
     */
    "3_month": "3_month",

    /**
     * value: "48_hour"
     * @const
     */
    "48_hour": "48_hour",

    /**
     * value: "6_month"
     * @const
     */
    "6_month": "6_month",

    /**
     * value: "72_hour"
     * @const
     */
    "72_hour": "72_hour"
};


/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
OnDemandPromotion['TypeEnum'] = {

    /**
     * value: "batch"
     * @const
     */
    "batch": "batch",

    /**
     * value: "batch_prefix"
     * @const
     */
    "batch_prefix": "batch_prefix",

    /**
     * value: "single"
     * @const
     */
    "single": "single"
};



export default OnDemandPromotion;

