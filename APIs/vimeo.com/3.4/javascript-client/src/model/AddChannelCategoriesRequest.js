/**
 * Vimeo
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AddChannelCategoriesRequest model module.
 * @module model/AddChannelCategoriesRequest
 * @version 3.4
 */
class AddChannelCategoriesRequest {
    /**
     * Constructs a new <code>AddChannelCategoriesRequest</code>.
     * @alias module:model/AddChannelCategoriesRequest
     * @param channels {Array.<String>} The array of category URIs to add.
     */
    constructor(channels) { 
        
        AddChannelCategoriesRequest.initialize(this, channels);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, channels) { 
        obj['channels'] = channels;
    }

    /**
     * Constructs a <code>AddChannelCategoriesRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AddChannelCategoriesRequest} obj Optional instance to populate.
     * @return {module:model/AddChannelCategoriesRequest} The populated <code>AddChannelCategoriesRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AddChannelCategoriesRequest();

            if (data.hasOwnProperty('channels')) {
                obj['channels'] = ApiClient.convertToType(data['channels'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AddChannelCategoriesRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AddChannelCategoriesRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AddChannelCategoriesRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is an array
        if (!Array.isArray(data['channels'])) {
            throw new Error("Expected the field `channels` to be an array in the JSON data but got " + data['channels']);
        }

        return true;
    }


}

AddChannelCategoriesRequest.RequiredProperties = ["channels"];

/**
 * The array of category URIs to add.
 * @member {Array.<String>} channels
 */
AddChannelCategoriesRequest.prototype['channels'] = undefined;






export default AddChannelCategoriesRequest;

