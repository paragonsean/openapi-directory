/**
 * Vimeo
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ReplaceVideosInAlbumAlt1Request model module.
 * @module model/ReplaceVideosInAlbumAlt1Request
 * @version 3.4
 */
class ReplaceVideosInAlbumAlt1Request {
    /**
     * Constructs a new <code>ReplaceVideosInAlbumAlt1Request</code>.
     * @alias module:model/ReplaceVideosInAlbumAlt1Request
     * @param videos {String} A comma-separated list of video URIs.
     */
    constructor(videos) { 
        
        ReplaceVideosInAlbumAlt1Request.initialize(this, videos);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, videos) { 
        obj['videos'] = videos;
    }

    /**
     * Constructs a <code>ReplaceVideosInAlbumAlt1Request</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ReplaceVideosInAlbumAlt1Request} obj Optional instance to populate.
     * @return {module:model/ReplaceVideosInAlbumAlt1Request} The populated <code>ReplaceVideosInAlbumAlt1Request</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ReplaceVideosInAlbumAlt1Request();

            if (data.hasOwnProperty('videos')) {
                obj['videos'] = ApiClient.convertToType(data['videos'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ReplaceVideosInAlbumAlt1Request</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ReplaceVideosInAlbumAlt1Request</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ReplaceVideosInAlbumAlt1Request.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['videos'] && !(typeof data['videos'] === 'string' || data['videos'] instanceof String)) {
            throw new Error("Expected the field `videos` to be a primitive type in the JSON string but got " + data['videos']);
        }

        return true;
    }


}

ReplaceVideosInAlbumAlt1Request.RequiredProperties = ["videos"];

/**
 * A comma-separated list of video URIs.
 * @member {String} videos
 */
ReplaceVideosInAlbumAlt1Request.prototype['videos'] = undefined;






export default ReplaceVideosInAlbumAlt1Request;

