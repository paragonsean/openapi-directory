/**
 * Vimeo
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Activity31Metadata from './Activity31Metadata';
import Category from './Category';
import Channel from './Channel';
import Group from './Group';
import Tag from './Tag';
import User from './User';
import Video from './Video';

/**
 * The Activity31 model module.
 * @module model/Activity31
 * @version 3.4
 */
class Activity31 {
    /**
     * Constructs a new <code>Activity31</code>.
     * @alias module:model/Activity31
     * @param clip {module:model/Video} Video associated with ths activity.
     * @param metadata {module:model/Activity31Metadata} 
     * @param time {String} Time that the event occurred.
     * @param type {module:model/Activity31.TypeEnum} Activity type
     */
    constructor(clip, metadata, time, type) { 
        
        Activity31.initialize(this, clip, metadata, time, type);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, clip, metadata, time, type) { 
        obj['clip'] = clip;
        obj['metadata'] = metadata;
        obj['time'] = time;
        obj['type'] = type;
    }

    /**
     * Constructs a <code>Activity31</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Activity31} obj Optional instance to populate.
     * @return {module:model/Activity31} The populated <code>Activity31</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Activity31();

            if (data.hasOwnProperty('category')) {
                obj['category'] = ApiClient.convertToType(data['category'], Category);
            }
            if (data.hasOwnProperty('channel')) {
                obj['channel'] = ApiClient.convertToType(data['channel'], Channel);
            }
            if (data.hasOwnProperty('clip')) {
                obj['clip'] = ApiClient.convertToType(data['clip'], Video);
            }
            if (data.hasOwnProperty('group')) {
                obj['group'] = ApiClient.convertToType(data['group'], Group);
            }
            if (data.hasOwnProperty('metadata')) {
                obj['metadata'] = Activity31Metadata.constructFromObject(data['metadata']);
            }
            if (data.hasOwnProperty('tag')) {
                obj['tag'] = ApiClient.convertToType(data['tag'], Tag);
            }
            if (data.hasOwnProperty('time')) {
                obj['time'] = ApiClient.convertToType(data['time'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('user')) {
                obj['user'] = ApiClient.convertToType(data['user'], User);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Activity31</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Activity31</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Activity31.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `category`
        if (data['category']) { // data not null
          Category.validateJSON(data['category']);
        }
        // validate the optional field `channel`
        if (data['channel']) { // data not null
          Channel.validateJSON(data['channel']);
        }
        // validate the optional field `clip`
        if (data['clip']) { // data not null
          Video.validateJSON(data['clip']);
        }
        // validate the optional field `group`
        if (data['group']) { // data not null
          Group.validateJSON(data['group']);
        }
        // validate the optional field `metadata`
        if (data['metadata']) { // data not null
          Activity31Metadata.validateJSON(data['metadata']);
        }
        // validate the optional field `tag`
        if (data['tag']) { // data not null
          Tag.validateJSON(data['tag']);
        }
        // ensure the json data is a string
        if (data['time'] && !(typeof data['time'] === 'string' || data['time'] instanceof String)) {
            throw new Error("Expected the field `time` to be a primitive type in the JSON string but got " + data['time']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }
        // validate the optional field `user`
        if (data['user']) { // data not null
          User.validateJSON(data['user']);
        }

        return true;
    }


}

Activity31.RequiredProperties = ["clip", "metadata", "time", "type"];

/**
 * The category that this event occurred for. This will be preset for only \"category\" activity types.
 * @member {module:model/Category} category
 */
Activity31.prototype['category'] = undefined;

/**
 * The channel that this event occurred for. This will be present for only \"channel\" activity types.
 * @member {module:model/Channel} channel
 */
Activity31.prototype['channel'] = undefined;

/**
 * Video associated with ths activity.
 * @member {module:model/Video} clip
 */
Activity31.prototype['clip'] = undefined;

/**
 * The group that this event occurred for. This will be present for only \"group\" activity types.
 * @member {module:model/Group} group
 */
Activity31.prototype['group'] = undefined;

/**
 * @member {module:model/Activity31Metadata} metadata
 */
Activity31.prototype['metadata'] = undefined;

/**
 * The tag that this event occurred for. This will be present for only \"tag\" activity types.
 * @member {module:model/Tag} tag
 */
Activity31.prototype['tag'] = undefined;

/**
 * Time that the event occurred.
 * @member {String} time
 */
Activity31.prototype['time'] = undefined;

/**
 * Activity type
 * @member {module:model/Activity31.TypeEnum} type
 */
Activity31.prototype['type'] = undefined;

/**
 * The user that this event occurred for. This will be present for \"like\", \"appearance\", and \"share\" activity types.
 * @member {module:model/User} user
 */
Activity31.prototype['user'] = undefined;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
Activity31['TypeEnum'] = {

    /**
     * value: "appearance"
     * @const
     */
    "appearance": "appearance",

    /**
     * value: "category"
     * @const
     */
    "category": "category",

    /**
     * value: "channel"
     * @const
     */
    "channel": "channel",

    /**
     * value: "facebook_feed"
     * @const
     */
    "facebook_feed": "facebook_feed",

    /**
     * value: "group"
     * @const
     */
    "group": "group",

    /**
     * value: "like"
     * @const
     */
    "like": "like",

    /**
     * value: "ondemand"
     * @const
     */
    "ondemand": "ondemand",

    /**
     * value: "share"
     * @const
     */
    "share": "share",

    /**
     * value: "tag"
     * @const
     */
    "tag": "tag",

    /**
     * value: "twitter_timeline"
     * @const
     */
    "twitter_timeline": "twitter_timeline",

    /**
     * value: "upload"
     * @const
     */
    "upload": "upload"
};



export default Activity31;

