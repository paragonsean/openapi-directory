/**
 * Vimeo
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The EditChannelRequest model module.
 * @module model/EditChannelRequest
 * @version 3.4
 */
class EditChannelRequest {
    /**
     * Constructs a new <code>EditChannelRequest</code>.
     * @alias module:model/EditChannelRequest
     */
    constructor() { 
        
        EditChannelRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>EditChannelRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EditChannelRequest} obj Optional instance to populate.
     * @return {module:model/EditChannelRequest} The populated <code>EditChannelRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EditChannelRequest();

            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('link')) {
                obj['link'] = ApiClient.convertToType(data['link'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('privacy')) {
                obj['privacy'] = ApiClient.convertToType(data['privacy'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EditChannelRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EditChannelRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['link'] && !(typeof data['link'] === 'string' || data['link'] instanceof String)) {
            throw new Error("Expected the field `link` to be a primitive type in the JSON string but got " + data['link']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['privacy'] && !(typeof data['privacy'] === 'string' || data['privacy'] instanceof String)) {
            throw new Error("Expected the field `privacy` to be a primitive type in the JSON string but got " + data['privacy']);
        }

        return true;
    }


}



/**
 * The description of the channel.
 * @member {String} description
 */
EditChannelRequest.prototype['description'] = undefined;

/**
 * The link to access the channel. You can use a custom name in the URL in place of a numeric channel ID, as in `/channels/{url_custom}`. Submitting `\"\"` for this field removes the link alias.
 * @member {String} link
 */
EditChannelRequest.prototype['link'] = undefined;

/**
 * The name of the channel.
 * @member {String} name
 */
EditChannelRequest.prototype['name'] = undefined;

/**
 * The privacy level of the channel.
 * @member {module:model/EditChannelRequest.PrivacyEnum} privacy
 */
EditChannelRequest.prototype['privacy'] = undefined;





/**
 * Allowed values for the <code>privacy</code> property.
 * @enum {String}
 * @readonly
 */
EditChannelRequest['PrivacyEnum'] = {

    /**
     * value: "anybody"
     * @const
     */
    "anybody": "anybody",

    /**
     * value: "moderators"
     * @const
     */
    "moderators": "moderators",

    /**
     * value: "users"
     * @const
     */
    "users": "users"
};



export default EditChannelRequest;

