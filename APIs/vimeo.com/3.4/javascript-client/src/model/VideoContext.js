/**
 * Vimeo
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The VideoContext model module.
 * @module model/VideoContext
 * @version 3.4
 */
class VideoContext {
    /**
     * Constructs a new <code>VideoContext</code>.
     * The context of the video&#39;s subscription, if this video is part of a subscription.
     * @alias module:model/VideoContext
     * @param action {module:model/VideoContext.ActionEnum} The contextual action:  Option descriptions:  * `Added to` - An Added To action.  * `Appearance by` - An Appearance By action.  * `Liked by` - A Liked By action.  * `Uploaded by` - An Unloaded By action. 
     * @param resource {Object} The contextual resource: a user, group, or channel representation, or an object of a tag.
     * @param resourceType {String} The contextual resource type.
     */
    constructor(action, resource, resourceType) { 
        
        VideoContext.initialize(this, action, resource, resourceType);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, action, resource, resourceType) { 
        obj['action'] = action;
        obj['resource'] = resource;
        obj['resource_type'] = resourceType;
    }

    /**
     * Constructs a <code>VideoContext</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VideoContext} obj Optional instance to populate.
     * @return {module:model/VideoContext} The populated <code>VideoContext</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VideoContext();

            if (data.hasOwnProperty('action')) {
                obj['action'] = ApiClient.convertToType(data['action'], 'String');
            }
            if (data.hasOwnProperty('resource')) {
                obj['resource'] = ApiClient.convertToType(data['resource'], Object);
            }
            if (data.hasOwnProperty('resource_type')) {
                obj['resource_type'] = ApiClient.convertToType(data['resource_type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>VideoContext</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>VideoContext</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of VideoContext.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['action'] && !(typeof data['action'] === 'string' || data['action'] instanceof String)) {
            throw new Error("Expected the field `action` to be a primitive type in the JSON string but got " + data['action']);
        }
        // ensure the json data is a string
        if (data['resource_type'] && !(typeof data['resource_type'] === 'string' || data['resource_type'] instanceof String)) {
            throw new Error("Expected the field `resource_type` to be a primitive type in the JSON string but got " + data['resource_type']);
        }

        return true;
    }


}

VideoContext.RequiredProperties = ["action", "resource", "resource_type"];

/**
 * The contextual action:  Option descriptions:  * `Added to` - An Added To action.  * `Appearance by` - An Appearance By action.  * `Liked by` - A Liked By action.  * `Uploaded by` - An Unloaded By action. 
 * @member {module:model/VideoContext.ActionEnum} action
 */
VideoContext.prototype['action'] = undefined;

/**
 * The contextual resource: a user, group, or channel representation, or an object of a tag.
 * @member {Object} resource
 */
VideoContext.prototype['resource'] = undefined;

/**
 * The contextual resource type.
 * @member {String} resource_type
 */
VideoContext.prototype['resource_type'] = undefined;





/**
 * Allowed values for the <code>action</code> property.
 * @enum {String}
 * @readonly
 */
VideoContext['ActionEnum'] = {

    /**
     * value: "Added to"
     * @const
     */
    "Added to": "Added to",

    /**
     * value: "Appearance by"
     * @const
     */
    "Appearance by": "Appearance by",

    /**
     * value: "Liked by"
     * @const
     */
    "Liked by": "Liked by",

    /**
     * value: "Uploaded by"
     * @const
     */
    "Uploaded by": "Uploaded by"
};



export default VideoContext;

