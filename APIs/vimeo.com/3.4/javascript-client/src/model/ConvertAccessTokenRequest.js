/**
 * Vimeo
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ConvertAccessTokenRequest model module.
 * @module model/ConvertAccessTokenRequest
 * @version 3.4
 */
class ConvertAccessTokenRequest {
    /**
     * Constructs a new <code>ConvertAccessTokenRequest</code>.
     * @alias module:model/ConvertAccessTokenRequest
     * @param grantType {module:model/ConvertAccessTokenRequest.GrantTypeEnum} The grant type. Must be set to `vimeo_oauth1`.
     * @param token {String} The OAuth 1 token.
     * @param tokenSecret {String} The OAuth 1 token secret.
     */
    constructor(grantType, token, tokenSecret) { 
        
        ConvertAccessTokenRequest.initialize(this, grantType, token, tokenSecret);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, grantType, token, tokenSecret) { 
        obj['grant_type'] = grantType;
        obj['token'] = token;
        obj['token_secret'] = tokenSecret;
    }

    /**
     * Constructs a <code>ConvertAccessTokenRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ConvertAccessTokenRequest} obj Optional instance to populate.
     * @return {module:model/ConvertAccessTokenRequest} The populated <code>ConvertAccessTokenRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ConvertAccessTokenRequest();

            if (data.hasOwnProperty('grant_type')) {
                obj['grant_type'] = ApiClient.convertToType(data['grant_type'], 'String');
            }
            if (data.hasOwnProperty('token')) {
                obj['token'] = ApiClient.convertToType(data['token'], 'String');
            }
            if (data.hasOwnProperty('token_secret')) {
                obj['token_secret'] = ApiClient.convertToType(data['token_secret'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ConvertAccessTokenRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ConvertAccessTokenRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ConvertAccessTokenRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['grant_type'] && !(typeof data['grant_type'] === 'string' || data['grant_type'] instanceof String)) {
            throw new Error("Expected the field `grant_type` to be a primitive type in the JSON string but got " + data['grant_type']);
        }
        // ensure the json data is a string
        if (data['token'] && !(typeof data['token'] === 'string' || data['token'] instanceof String)) {
            throw new Error("Expected the field `token` to be a primitive type in the JSON string but got " + data['token']);
        }
        // ensure the json data is a string
        if (data['token_secret'] && !(typeof data['token_secret'] === 'string' || data['token_secret'] instanceof String)) {
            throw new Error("Expected the field `token_secret` to be a primitive type in the JSON string but got " + data['token_secret']);
        }

        return true;
    }


}

ConvertAccessTokenRequest.RequiredProperties = ["grant_type", "token", "token_secret"];

/**
 * The grant type. Must be set to `vimeo_oauth1`.
 * @member {module:model/ConvertAccessTokenRequest.GrantTypeEnum} grant_type
 */
ConvertAccessTokenRequest.prototype['grant_type'] = undefined;

/**
 * The OAuth 1 token.
 * @member {String} token
 */
ConvertAccessTokenRequest.prototype['token'] = undefined;

/**
 * The OAuth 1 token secret.
 * @member {String} token_secret
 */
ConvertAccessTokenRequest.prototype['token_secret'] = undefined;





/**
 * Allowed values for the <code>grant_type</code> property.
 * @enum {String}
 * @readonly
 */
ConvertAccessTokenRequest['GrantTypeEnum'] = {

    /**
     * value: "vimeo_oauth1"
     * @const
     */
    "vimeo_oauth1": "vimeo_oauth1"
};



export default ConvertAccessTokenRequest;

