/**
 * Vimeo
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import OnDemandPageMetadataConnectionsMetadataConnectionsComments from './OnDemandPageMetadataConnectionsMetadataConnectionsComments';
import OnDemandPageMetadataConnectionsMetadataConnectionsGenres from './OnDemandPageMetadataConnectionsMetadataConnectionsGenres';
import OnDemandPageMetadataConnectionsMetadataConnectionsLikes from './OnDemandPageMetadataConnectionsMetadataConnectionsLikes';
import OnDemandPageMetadataConnectionsMetadataConnectionsPictures from './OnDemandPageMetadataConnectionsMetadataConnectionsPictures';
import OnDemandPageMetadataConnectionsMetadataConnectionsSeasons from './OnDemandPageMetadataConnectionsMetadataConnectionsSeasons';
import OnDemandPageMetadataConnectionsMetadataConnectionsVideos from './OnDemandPageMetadataConnectionsMetadataConnectionsVideos';

/**
 * The OnDemandPageMetadataConnectionsMetadataConnections model module.
 * @module model/OnDemandPageMetadataConnectionsMetadataConnections
 * @version 3.4
 */
class OnDemandPageMetadataConnectionsMetadataConnections {
    /**
     * Constructs a new <code>OnDemandPageMetadataConnectionsMetadataConnections</code>.
     * @alias module:model/OnDemandPageMetadataConnectionsMetadataConnections
     * @param comments {module:model/OnDemandPageMetadataConnectionsMetadataConnectionsComments} 
     * @param genres {module:model/OnDemandPageMetadataConnectionsMetadataConnectionsGenres} 
     * @param likes {module:model/OnDemandPageMetadataConnectionsMetadataConnectionsLikes} 
     * @param pictures {module:model/OnDemandPageMetadataConnectionsMetadataConnectionsPictures} 
     * @param seasons {module:model/OnDemandPageMetadataConnectionsMetadataConnectionsSeasons} 
     * @param videos {module:model/OnDemandPageMetadataConnectionsMetadataConnectionsVideos} 
     */
    constructor(comments, genres, likes, pictures, seasons, videos) { 
        
        OnDemandPageMetadataConnectionsMetadataConnections.initialize(this, comments, genres, likes, pictures, seasons, videos);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, comments, genres, likes, pictures, seasons, videos) { 
        obj['comments'] = comments;
        obj['genres'] = genres;
        obj['likes'] = likes;
        obj['pictures'] = pictures;
        obj['seasons'] = seasons;
        obj['videos'] = videos;
    }

    /**
     * Constructs a <code>OnDemandPageMetadataConnectionsMetadataConnections</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OnDemandPageMetadataConnectionsMetadataConnections} obj Optional instance to populate.
     * @return {module:model/OnDemandPageMetadataConnectionsMetadataConnections} The populated <code>OnDemandPageMetadataConnectionsMetadataConnections</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OnDemandPageMetadataConnectionsMetadataConnections();

            if (data.hasOwnProperty('comments')) {
                obj['comments'] = OnDemandPageMetadataConnectionsMetadataConnectionsComments.constructFromObject(data['comments']);
            }
            if (data.hasOwnProperty('genres')) {
                obj['genres'] = OnDemandPageMetadataConnectionsMetadataConnectionsGenres.constructFromObject(data['genres']);
            }
            if (data.hasOwnProperty('likes')) {
                obj['likes'] = OnDemandPageMetadataConnectionsMetadataConnectionsLikes.constructFromObject(data['likes']);
            }
            if (data.hasOwnProperty('pictures')) {
                obj['pictures'] = OnDemandPageMetadataConnectionsMetadataConnectionsPictures.constructFromObject(data['pictures']);
            }
            if (data.hasOwnProperty('seasons')) {
                obj['seasons'] = OnDemandPageMetadataConnectionsMetadataConnectionsSeasons.constructFromObject(data['seasons']);
            }
            if (data.hasOwnProperty('videos')) {
                obj['videos'] = OnDemandPageMetadataConnectionsMetadataConnectionsVideos.constructFromObject(data['videos']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OnDemandPageMetadataConnectionsMetadataConnections</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OnDemandPageMetadataConnectionsMetadataConnections</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of OnDemandPageMetadataConnectionsMetadataConnections.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `comments`
        if (data['comments']) { // data not null
          OnDemandPageMetadataConnectionsMetadataConnectionsComments.validateJSON(data['comments']);
        }
        // validate the optional field `genres`
        if (data['genres']) { // data not null
          OnDemandPageMetadataConnectionsMetadataConnectionsGenres.validateJSON(data['genres']);
        }
        // validate the optional field `likes`
        if (data['likes']) { // data not null
          OnDemandPageMetadataConnectionsMetadataConnectionsLikes.validateJSON(data['likes']);
        }
        // validate the optional field `pictures`
        if (data['pictures']) { // data not null
          OnDemandPageMetadataConnectionsMetadataConnectionsPictures.validateJSON(data['pictures']);
        }
        // validate the optional field `seasons`
        if (data['seasons']) { // data not null
          OnDemandPageMetadataConnectionsMetadataConnectionsSeasons.validateJSON(data['seasons']);
        }
        // validate the optional field `videos`
        if (data['videos']) { // data not null
          OnDemandPageMetadataConnectionsMetadataConnectionsVideos.validateJSON(data['videos']);
        }

        return true;
    }


}

OnDemandPageMetadataConnectionsMetadataConnections.RequiredProperties = ["comments", "genres", "likes", "pictures", "seasons", "videos"];

/**
 * @member {module:model/OnDemandPageMetadataConnectionsMetadataConnectionsComments} comments
 */
OnDemandPageMetadataConnectionsMetadataConnections.prototype['comments'] = undefined;

/**
 * @member {module:model/OnDemandPageMetadataConnectionsMetadataConnectionsGenres} genres
 */
OnDemandPageMetadataConnectionsMetadataConnections.prototype['genres'] = undefined;

/**
 * @member {module:model/OnDemandPageMetadataConnectionsMetadataConnectionsLikes} likes
 */
OnDemandPageMetadataConnectionsMetadataConnections.prototype['likes'] = undefined;

/**
 * @member {module:model/OnDemandPageMetadataConnectionsMetadataConnectionsPictures} pictures
 */
OnDemandPageMetadataConnectionsMetadataConnections.prototype['pictures'] = undefined;

/**
 * @member {module:model/OnDemandPageMetadataConnectionsMetadataConnectionsSeasons} seasons
 */
OnDemandPageMetadataConnectionsMetadataConnections.prototype['seasons'] = undefined;

/**
 * @member {module:model/OnDemandPageMetadataConnectionsMetadataConnectionsVideos} videos
 */
OnDemandPageMetadataConnectionsMetadataConnections.prototype['videos'] = undefined;






export default OnDemandPageMetadataConnectionsMetadataConnections;

