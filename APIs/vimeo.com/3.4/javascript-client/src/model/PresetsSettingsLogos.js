/**
 * Vimeo
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PresetsSettingsLogos model module.
 * @module model/PresetsSettingsLogos
 * @version 3.4
 */
class PresetsSettingsLogos {
    /**
     * Constructs a new <code>PresetsSettingsLogos</code>.
     * @alias module:model/PresetsSettingsLogos
     * @param custom {Boolean} Whether the preset includes custom logo settings.
     * @param stickyCustom {Boolean} Whether the present includes sticky custom logo settings.
     * @param vimeo {Boolean} Whether the preset includes Vimeo logo settings.
     */
    constructor(custom, stickyCustom, vimeo) { 
        
        PresetsSettingsLogos.initialize(this, custom, stickyCustom, vimeo);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, custom, stickyCustom, vimeo) { 
        obj['custom'] = custom;
        obj['sticky_custom'] = stickyCustom;
        obj['vimeo'] = vimeo;
    }

    /**
     * Constructs a <code>PresetsSettingsLogos</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PresetsSettingsLogos} obj Optional instance to populate.
     * @return {module:model/PresetsSettingsLogos} The populated <code>PresetsSettingsLogos</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PresetsSettingsLogos();

            if (data.hasOwnProperty('custom')) {
                obj['custom'] = ApiClient.convertToType(data['custom'], 'Boolean');
            }
            if (data.hasOwnProperty('sticky_custom')) {
                obj['sticky_custom'] = ApiClient.convertToType(data['sticky_custom'], 'Boolean');
            }
            if (data.hasOwnProperty('vimeo')) {
                obj['vimeo'] = ApiClient.convertToType(data['vimeo'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PresetsSettingsLogos</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PresetsSettingsLogos</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PresetsSettingsLogos.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }

        return true;
    }


}

PresetsSettingsLogos.RequiredProperties = ["custom", "sticky_custom", "vimeo"];

/**
 * Whether the preset includes custom logo settings.
 * @member {Boolean} custom
 */
PresetsSettingsLogos.prototype['custom'] = undefined;

/**
 * Whether the present includes sticky custom logo settings.
 * @member {Boolean} sticky_custom
 */
PresetsSettingsLogos.prototype['sticky_custom'] = undefined;

/**
 * Whether the preset includes Vimeo logo settings.
 * @member {Boolean} vimeo
 */
PresetsSettingsLogos.prototype['vimeo'] = undefined;






export default PresetsSettingsLogos;

