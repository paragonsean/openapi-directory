/**
 * Vimeo
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The VideoMetadataInteractionsBuy model module.
 * @module model/VideoMetadataInteractionsBuy
 * @version 3.4
 */
class VideoMetadataInteractionsBuy {
    /**
     * Constructs a new <code>VideoMetadataInteractionsBuy</code>.
     * The Buy interaction for a On Demand video.
     * @alias module:model/VideoMetadataInteractionsBuy
     * @param currency {String} The currency code for the current user's region.
     * @param displayPrice {String} Formatted price to display to buy an On Demand video.
     * @param download {module:model/VideoMetadataInteractionsBuy.DownloadEnum} The user's download access to this On Demand video:  Option descriptions:  * `available` - The video is available for download.  * `purchased` - The user has purchased the video.  * `restricted` - The user isn't permitted to download the video.  * `unavailable` - The video isn't available for download. 
     * @param drm {Boolean} Whether the video has DRM.
     * @param link {String} The URL to buy the On Demand video on Vimeo.
     * @param price {Number} The numeric value of the price for buying the On Demand video.
     * @param purchaseTime {String} The time in ISO 8601 format when the On Demand video was purchased.
     * @param stream {module:model/VideoMetadataInteractionsBuy.StreamEnum} The user's streaming access to this On Demand video:  Option descriptions:  * `available` - The video is available for streaming.  * `purchased` - The user has purchased the video.  * `restricted` - The user isn't permitted to stream the video.  * `unavailable` - The video isn't available for streaming 
     * @param uri {String} The product URI to purchase the On Demand video.
     */
    constructor(currency, displayPrice, download, drm, link, price, purchaseTime, stream, uri) { 
        
        VideoMetadataInteractionsBuy.initialize(this, currency, displayPrice, download, drm, link, price, purchaseTime, stream, uri);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, currency, displayPrice, download, drm, link, price, purchaseTime, stream, uri) { 
        obj['currency'] = currency;
        obj['display_price'] = displayPrice;
        obj['download'] = download;
        obj['drm'] = drm;
        obj['link'] = link;
        obj['price'] = price;
        obj['purchase_time'] = purchaseTime;
        obj['stream'] = stream;
        obj['uri'] = uri;
    }

    /**
     * Constructs a <code>VideoMetadataInteractionsBuy</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VideoMetadataInteractionsBuy} obj Optional instance to populate.
     * @return {module:model/VideoMetadataInteractionsBuy} The populated <code>VideoMetadataInteractionsBuy</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VideoMetadataInteractionsBuy();

            if (data.hasOwnProperty('currency')) {
                obj['currency'] = ApiClient.convertToType(data['currency'], 'String');
            }
            if (data.hasOwnProperty('display_price')) {
                obj['display_price'] = ApiClient.convertToType(data['display_price'], 'String');
            }
            if (data.hasOwnProperty('download')) {
                obj['download'] = ApiClient.convertToType(data['download'], 'String');
            }
            if (data.hasOwnProperty('drm')) {
                obj['drm'] = ApiClient.convertToType(data['drm'], 'Boolean');
            }
            if (data.hasOwnProperty('link')) {
                obj['link'] = ApiClient.convertToType(data['link'], 'String');
            }
            if (data.hasOwnProperty('price')) {
                obj['price'] = ApiClient.convertToType(data['price'], 'Number');
            }
            if (data.hasOwnProperty('purchase_time')) {
                obj['purchase_time'] = ApiClient.convertToType(data['purchase_time'], 'String');
            }
            if (data.hasOwnProperty('stream')) {
                obj['stream'] = ApiClient.convertToType(data['stream'], 'String');
            }
            if (data.hasOwnProperty('uri')) {
                obj['uri'] = ApiClient.convertToType(data['uri'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>VideoMetadataInteractionsBuy</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>VideoMetadataInteractionsBuy</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of VideoMetadataInteractionsBuy.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['currency'] && !(typeof data['currency'] === 'string' || data['currency'] instanceof String)) {
            throw new Error("Expected the field `currency` to be a primitive type in the JSON string but got " + data['currency']);
        }
        // ensure the json data is a string
        if (data['display_price'] && !(typeof data['display_price'] === 'string' || data['display_price'] instanceof String)) {
            throw new Error("Expected the field `display_price` to be a primitive type in the JSON string but got " + data['display_price']);
        }
        // ensure the json data is a string
        if (data['download'] && !(typeof data['download'] === 'string' || data['download'] instanceof String)) {
            throw new Error("Expected the field `download` to be a primitive type in the JSON string but got " + data['download']);
        }
        // ensure the json data is a string
        if (data['link'] && !(typeof data['link'] === 'string' || data['link'] instanceof String)) {
            throw new Error("Expected the field `link` to be a primitive type in the JSON string but got " + data['link']);
        }
        // ensure the json data is a string
        if (data['purchase_time'] && !(typeof data['purchase_time'] === 'string' || data['purchase_time'] instanceof String)) {
            throw new Error("Expected the field `purchase_time` to be a primitive type in the JSON string but got " + data['purchase_time']);
        }
        // ensure the json data is a string
        if (data['stream'] && !(typeof data['stream'] === 'string' || data['stream'] instanceof String)) {
            throw new Error("Expected the field `stream` to be a primitive type in the JSON string but got " + data['stream']);
        }
        // ensure the json data is a string
        if (data['uri'] && !(typeof data['uri'] === 'string' || data['uri'] instanceof String)) {
            throw new Error("Expected the field `uri` to be a primitive type in the JSON string but got " + data['uri']);
        }

        return true;
    }


}

VideoMetadataInteractionsBuy.RequiredProperties = ["currency", "display_price", "download", "drm", "link", "price", "purchase_time", "stream", "uri"];

/**
 * The currency code for the current user's region.
 * @member {String} currency
 */
VideoMetadataInteractionsBuy.prototype['currency'] = undefined;

/**
 * Formatted price to display to buy an On Demand video.
 * @member {String} display_price
 */
VideoMetadataInteractionsBuy.prototype['display_price'] = undefined;

/**
 * The user's download access to this On Demand video:  Option descriptions:  * `available` - The video is available for download.  * `purchased` - The user has purchased the video.  * `restricted` - The user isn't permitted to download the video.  * `unavailable` - The video isn't available for download. 
 * @member {module:model/VideoMetadataInteractionsBuy.DownloadEnum} download
 */
VideoMetadataInteractionsBuy.prototype['download'] = undefined;

/**
 * Whether the video has DRM.
 * @member {Boolean} drm
 */
VideoMetadataInteractionsBuy.prototype['drm'] = undefined;

/**
 * The URL to buy the On Demand video on Vimeo.
 * @member {String} link
 */
VideoMetadataInteractionsBuy.prototype['link'] = undefined;

/**
 * The numeric value of the price for buying the On Demand video.
 * @member {Number} price
 */
VideoMetadataInteractionsBuy.prototype['price'] = undefined;

/**
 * The time in ISO 8601 format when the On Demand video was purchased.
 * @member {String} purchase_time
 */
VideoMetadataInteractionsBuy.prototype['purchase_time'] = undefined;

/**
 * The user's streaming access to this On Demand video:  Option descriptions:  * `available` - The video is available for streaming.  * `purchased` - The user has purchased the video.  * `restricted` - The user isn't permitted to stream the video.  * `unavailable` - The video isn't available for streaming 
 * @member {module:model/VideoMetadataInteractionsBuy.StreamEnum} stream
 */
VideoMetadataInteractionsBuy.prototype['stream'] = undefined;

/**
 * The product URI to purchase the On Demand video.
 * @member {String} uri
 */
VideoMetadataInteractionsBuy.prototype['uri'] = undefined;





/**
 * Allowed values for the <code>download</code> property.
 * @enum {String}
 * @readonly
 */
VideoMetadataInteractionsBuy['DownloadEnum'] = {

    /**
     * value: "available"
     * @const
     */
    "available": "available",

    /**
     * value: "purchased"
     * @const
     */
    "purchased": "purchased",

    /**
     * value: "restricted"
     * @const
     */
    "restricted": "restricted",

    /**
     * value: "unavailable"
     * @const
     */
    "unavailable": "unavailable"
};


/**
 * Allowed values for the <code>stream</code> property.
 * @enum {String}
 * @readonly
 */
VideoMetadataInteractionsBuy['StreamEnum'] = {

    /**
     * value: "available"
     * @const
     */
    "available": "available",

    /**
     * value: "purchased"
     * @const
     */
    "purchased": "purchased",

    /**
     * value: "restricted"
     * @const
     */
    "restricted": "restricted",

    /**
     * value: "unavailable"
     * @const
     */
    "unavailable": "unavailable"
};



export default VideoMetadataInteractionsBuy;

