/**
 * Vimeo
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ChannelMetadataInteractionsAddModerators from './ChannelMetadataInteractionsAddModerators';
import ChannelMetadataInteractionsAddTo from './ChannelMetadataInteractionsAddTo';
import ChannelMetadataInteractionsFollow from './ChannelMetadataInteractionsFollow';
import ChannelMetadataInteractionsModerateVideos from './ChannelMetadataInteractionsModerateVideos';

/**
 * The ChannelMetadataInteractions model module.
 * @module model/ChannelMetadataInteractions
 * @version 3.4
 */
class ChannelMetadataInteractions {
    /**
     * Constructs a new <code>ChannelMetadataInteractions</code>.
     * A list of resource URIs related to the channel.
     * @alias module:model/ChannelMetadataInteractions
     * @param addModerators {module:model/ChannelMetadataInteractionsAddModerators} 
     * @param addTo {module:model/ChannelMetadataInteractionsAddTo} 
     * @param follow {module:model/ChannelMetadataInteractionsFollow} 
     * @param moderateVideos {module:model/ChannelMetadataInteractionsModerateVideos} 
     */
    constructor(addModerators, addTo, follow, moderateVideos) { 
        
        ChannelMetadataInteractions.initialize(this, addModerators, addTo, follow, moderateVideos);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, addModerators, addTo, follow, moderateVideos) { 
        obj['add_moderators'] = addModerators;
        obj['add_to'] = addTo;
        obj['follow'] = follow;
        obj['moderate_videos'] = moderateVideos;
    }

    /**
     * Constructs a <code>ChannelMetadataInteractions</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ChannelMetadataInteractions} obj Optional instance to populate.
     * @return {module:model/ChannelMetadataInteractions} The populated <code>ChannelMetadataInteractions</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ChannelMetadataInteractions();

            if (data.hasOwnProperty('add_moderators')) {
                obj['add_moderators'] = ChannelMetadataInteractionsAddModerators.constructFromObject(data['add_moderators']);
            }
            if (data.hasOwnProperty('add_to')) {
                obj['add_to'] = ChannelMetadataInteractionsAddTo.constructFromObject(data['add_to']);
            }
            if (data.hasOwnProperty('follow')) {
                obj['follow'] = ChannelMetadataInteractionsFollow.constructFromObject(data['follow']);
            }
            if (data.hasOwnProperty('moderate_videos')) {
                obj['moderate_videos'] = ChannelMetadataInteractionsModerateVideos.constructFromObject(data['moderate_videos']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ChannelMetadataInteractions</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ChannelMetadataInteractions</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ChannelMetadataInteractions.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `add_moderators`
        if (data['add_moderators']) { // data not null
          ChannelMetadataInteractionsAddModerators.validateJSON(data['add_moderators']);
        }
        // validate the optional field `add_to`
        if (data['add_to']) { // data not null
          ChannelMetadataInteractionsAddTo.validateJSON(data['add_to']);
        }
        // validate the optional field `follow`
        if (data['follow']) { // data not null
          ChannelMetadataInteractionsFollow.validateJSON(data['follow']);
        }
        // validate the optional field `moderate_videos`
        if (data['moderate_videos']) { // data not null
          ChannelMetadataInteractionsModerateVideos.validateJSON(data['moderate_videos']);
        }

        return true;
    }


}

ChannelMetadataInteractions.RequiredProperties = ["add_moderators", "add_to", "follow", "moderate_videos"];

/**
 * @member {module:model/ChannelMetadataInteractionsAddModerators} add_moderators
 */
ChannelMetadataInteractions.prototype['add_moderators'] = undefined;

/**
 * @member {module:model/ChannelMetadataInteractionsAddTo} add_to
 */
ChannelMetadataInteractions.prototype['add_to'] = undefined;

/**
 * @member {module:model/ChannelMetadataInteractionsFollow} follow
 */
ChannelMetadataInteractions.prototype['follow'] = undefined;

/**
 * @member {module:model/ChannelMetadataInteractionsModerateVideos} moderate_videos
 */
ChannelMetadataInteractions.prototype['moderate_videos'] = undefined;






export default ChannelMetadataInteractions;

