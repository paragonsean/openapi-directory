/**
 * Vimeo
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The UploadVideoAlt1RequestEmbedTitle model module.
 * @module model/UploadVideoAlt1RequestEmbedTitle
 * @version 3.4
 */
class UploadVideoAlt1RequestEmbedTitle {
    /**
     * Constructs a new <code>UploadVideoAlt1RequestEmbedTitle</code>.
     * @alias module:model/UploadVideoAlt1RequestEmbedTitle
     */
    constructor() { 
        
        UploadVideoAlt1RequestEmbedTitle.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UploadVideoAlt1RequestEmbedTitle</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UploadVideoAlt1RequestEmbedTitle} obj Optional instance to populate.
     * @return {module:model/UploadVideoAlt1RequestEmbedTitle} The populated <code>UploadVideoAlt1RequestEmbedTitle</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UploadVideoAlt1RequestEmbedTitle();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('owner')) {
                obj['owner'] = ApiClient.convertToType(data['owner'], 'String');
            }
            if (data.hasOwnProperty('portrait')) {
                obj['portrait'] = ApiClient.convertToType(data['portrait'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UploadVideoAlt1RequestEmbedTitle</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UploadVideoAlt1RequestEmbedTitle</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['owner'] && !(typeof data['owner'] === 'string' || data['owner'] instanceof String)) {
            throw new Error("Expected the field `owner` to be a primitive type in the JSON string but got " + data['owner']);
        }
        // ensure the json data is a string
        if (data['portrait'] && !(typeof data['portrait'] === 'string' || data['portrait'] instanceof String)) {
            throw new Error("Expected the field `portrait` to be a primitive type in the JSON string but got " + data['portrait']);
        }

        return true;
    }


}



/**
 * Show or hide the video title, or enable the user to determine whether the video title appears.
 * @member {module:model/UploadVideoAlt1RequestEmbedTitle.NameEnum} name
 */
UploadVideoAlt1RequestEmbedTitle.prototype['name'] = undefined;

/**
 * Show or hide the owner information, or enable the user to determine whether the owner information appears.
 * @member {module:model/UploadVideoAlt1RequestEmbedTitle.OwnerEnum} owner
 */
UploadVideoAlt1RequestEmbedTitle.prototype['owner'] = undefined;

/**
 * Show or hide the owner portrait, or enable the user to determine whether the owner portrait appears.
 * @member {module:model/UploadVideoAlt1RequestEmbedTitle.PortraitEnum} portrait
 */
UploadVideoAlt1RequestEmbedTitle.prototype['portrait'] = undefined;





/**
 * Allowed values for the <code>name</code> property.
 * @enum {String}
 * @readonly
 */
UploadVideoAlt1RequestEmbedTitle['NameEnum'] = {

    /**
     * value: "hide"
     * @const
     */
    "hide": "hide",

    /**
     * value: "show"
     * @const
     */
    "show": "show",

    /**
     * value: "user"
     * @const
     */
    "user": "user"
};


/**
 * Allowed values for the <code>owner</code> property.
 * @enum {String}
 * @readonly
 */
UploadVideoAlt1RequestEmbedTitle['OwnerEnum'] = {

    /**
     * value: "hide"
     * @const
     */
    "hide": "hide",

    /**
     * value: "show"
     * @const
     */
    "show": "show",

    /**
     * value: "user"
     * @const
     */
    "user": "user"
};


/**
 * Allowed values for the <code>portrait</code> property.
 * @enum {String}
 * @readonly
 */
UploadVideoAlt1RequestEmbedTitle['PortraitEnum'] = {

    /**
     * value: "hide"
     * @const
     */
    "hide": "hide",

    /**
     * value: "show"
     * @const
     */
    "show": "show",

    /**
     * value: "user"
     * @const
     */
    "user": "user"
};



export default UploadVideoAlt1RequestEmbedTitle;

