/**
 * Vimeo
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import VideoMetadataConnections from './VideoMetadataConnections';
import VideoMetadataInteractions from './VideoMetadataInteractions';

/**
 * The VideoMetadata model module.
 * @module model/VideoMetadata
 * @version 3.4
 */
class VideoMetadata {
    /**
     * Constructs a new <code>VideoMetadata</code>.
     * The video&#39;s metadata.
     * @alias module:model/VideoMetadata
     * @param connections {module:model/VideoMetadataConnections} 
     * @param interactions {module:model/VideoMetadataInteractions} 
     */
    constructor(connections, interactions) { 
        
        VideoMetadata.initialize(this, connections, interactions);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, connections, interactions) { 
        obj['connections'] = connections;
        obj['interactions'] = interactions;
    }

    /**
     * Constructs a <code>VideoMetadata</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VideoMetadata} obj Optional instance to populate.
     * @return {module:model/VideoMetadata} The populated <code>VideoMetadata</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VideoMetadata();

            if (data.hasOwnProperty('connections')) {
                obj['connections'] = VideoMetadataConnections.constructFromObject(data['connections']);
            }
            if (data.hasOwnProperty('interactions')) {
                obj['interactions'] = VideoMetadataInteractions.constructFromObject(data['interactions']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>VideoMetadata</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>VideoMetadata</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of VideoMetadata.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `connections`
        if (data['connections']) { // data not null
          VideoMetadataConnections.validateJSON(data['connections']);
        }
        // validate the optional field `interactions`
        if (data['interactions']) { // data not null
          VideoMetadataInteractions.validateJSON(data['interactions']);
        }

        return true;
    }


}

VideoMetadata.RequiredProperties = ["connections", "interactions"];

/**
 * @member {module:model/VideoMetadataConnections} connections
 */
VideoMetadata.prototype['connections'] = undefined;

/**
 * @member {module:model/VideoMetadataInteractions} interactions
 */
VideoMetadata.prototype['interactions'] = undefined;






export default VideoMetadata;

