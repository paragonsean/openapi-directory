/**
 * Vimeo
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateVodAlt1RequestBuy from './CreateVodAlt1RequestBuy';
import CreateVodAlt1RequestEpisodes from './CreateVodAlt1RequestEpisodes';
import CreateVodAlt1RequestRent from './CreateVodAlt1RequestRent';
import CreateVodAlt1RequestSubscription from './CreateVodAlt1RequestSubscription';

/**
 * The CreateVodAlt1Request model module.
 * @module model/CreateVodAlt1Request
 * @version 3.4
 */
class CreateVodAlt1Request {
    /**
     * Constructs a new <code>CreateVodAlt1Request</code>.
     * @alias module:model/CreateVodAlt1Request
     * @param contentRating {module:model/CreateVodAlt1Request.ContentRatingEnum} One or more ratings, either as a comma-separated list or as a JSON array depending on the request format.
     * @param description {String} The description of the On Demand page.
     * @param name {String} The name of the On Demand page.
     * @param type {module:model/CreateVodAlt1Request.TypeEnum} The type of On Demand page.
     */
    constructor(contentRating, description, name, type) { 
        
        CreateVodAlt1Request.initialize(this, contentRating, description, name, type);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, contentRating, description, name, type) { 
        obj['content_rating'] = contentRating;
        obj['description'] = description;
        obj['name'] = name;
        obj['type'] = type;
    }

    /**
     * Constructs a <code>CreateVodAlt1Request</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateVodAlt1Request} obj Optional instance to populate.
     * @return {module:model/CreateVodAlt1Request} The populated <code>CreateVodAlt1Request</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateVodAlt1Request();

            if (data.hasOwnProperty('accepted_currencies')) {
                obj['accepted_currencies'] = ApiClient.convertToType(data['accepted_currencies'], 'String');
            }
            if (data.hasOwnProperty('buy')) {
                obj['buy'] = CreateVodAlt1RequestBuy.constructFromObject(data['buy']);
            }
            if (data.hasOwnProperty('content_rating')) {
                obj['content_rating'] = ApiClient.convertToType(data['content_rating'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('domain_link')) {
                obj['domain_link'] = ApiClient.convertToType(data['domain_link'], 'String');
            }
            if (data.hasOwnProperty('episodes')) {
                obj['episodes'] = CreateVodAlt1RequestEpisodes.constructFromObject(data['episodes']);
            }
            if (data.hasOwnProperty('link')) {
                obj['link'] = ApiClient.convertToType(data['link'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('rent')) {
                obj['rent'] = CreateVodAlt1RequestRent.constructFromObject(data['rent']);
            }
            if (data.hasOwnProperty('subscription')) {
                obj['subscription'] = CreateVodAlt1RequestSubscription.constructFromObject(data['subscription']);
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateVodAlt1Request</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateVodAlt1Request</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateVodAlt1Request.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['accepted_currencies'] && !(typeof data['accepted_currencies'] === 'string' || data['accepted_currencies'] instanceof String)) {
            throw new Error("Expected the field `accepted_currencies` to be a primitive type in the JSON string but got " + data['accepted_currencies']);
        }
        // validate the optional field `buy`
        if (data['buy']) { // data not null
          CreateVodAlt1RequestBuy.validateJSON(data['buy']);
        }
        // ensure the json data is a string
        if (data['content_rating'] && !(typeof data['content_rating'] === 'string' || data['content_rating'] instanceof String)) {
            throw new Error("Expected the field `content_rating` to be a primitive type in the JSON string but got " + data['content_rating']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['domain_link'] && !(typeof data['domain_link'] === 'string' || data['domain_link'] instanceof String)) {
            throw new Error("Expected the field `domain_link` to be a primitive type in the JSON string but got " + data['domain_link']);
        }
        // validate the optional field `episodes`
        if (data['episodes']) { // data not null
          CreateVodAlt1RequestEpisodes.validateJSON(data['episodes']);
        }
        // ensure the json data is a string
        if (data['link'] && !(typeof data['link'] === 'string' || data['link'] instanceof String)) {
            throw new Error("Expected the field `link` to be a primitive type in the JSON string but got " + data['link']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // validate the optional field `rent`
        if (data['rent']) { // data not null
          CreateVodAlt1RequestRent.validateJSON(data['rent']);
        }
        // validate the optional field `subscription`
        if (data['subscription']) { // data not null
          CreateVodAlt1RequestSubscription.validateJSON(data['subscription']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}

CreateVodAlt1Request.RequiredProperties = ["content_rating", "description", "name", "type"];

/**
 * An array of accepted currencies.  Option descriptions:  * `AUD` - Australian Dollar  * `CAD` - Canadian Dollar  * `CHF` - Swiss Franc  * `DKK` - Danish Krone  * `EUR` - Euro  * `GBP` - British Pound  * `JPY` - Japanese Yen  * `KRW` - South Korean Won  * `NOK` - Norwegian Krone  * `PLN` - Polish Zloty  * `SEK` - Swedish Krona  * `USD` - US Dollar 
 * @member {module:model/CreateVodAlt1Request.AcceptedCurrenciesEnum} accepted_currencies
 */
CreateVodAlt1Request.prototype['accepted_currencies'] = undefined;

/**
 * @member {module:model/CreateVodAlt1RequestBuy} buy
 */
CreateVodAlt1Request.prototype['buy'] = undefined;

/**
 * One or more ratings, either as a comma-separated list or as a JSON array depending on the request format.
 * @member {module:model/CreateVodAlt1Request.ContentRatingEnum} content_rating
 */
CreateVodAlt1Request.prototype['content_rating'] = undefined;

/**
 * The description of the On Demand page.
 * @member {String} description
 */
CreateVodAlt1Request.prototype['description'] = undefined;

/**
 * The custom domain of the On Demand page.
 * @member {String} domain_link
 */
CreateVodAlt1Request.prototype['domain_link'] = undefined;

/**
 * @member {module:model/CreateVodAlt1RequestEpisodes} episodes
 */
CreateVodAlt1Request.prototype['episodes'] = undefined;

/**
 * The custom string to use in this On Demand page's Vimeo URL.
 * @member {String} link
 */
CreateVodAlt1Request.prototype['link'] = undefined;

/**
 * The name of the On Demand page.
 * @member {String} name
 */
CreateVodAlt1Request.prototype['name'] = undefined;

/**
 * @member {module:model/CreateVodAlt1RequestRent} rent
 */
CreateVodAlt1Request.prototype['rent'] = undefined;

/**
 * @member {module:model/CreateVodAlt1RequestSubscription} subscription
 */
CreateVodAlt1Request.prototype['subscription'] = undefined;

/**
 * The type of On Demand page.
 * @member {module:model/CreateVodAlt1Request.TypeEnum} type
 */
CreateVodAlt1Request.prototype['type'] = undefined;





/**
 * Allowed values for the <code>accepted_currencies</code> property.
 * @enum {String}
 * @readonly
 */
CreateVodAlt1Request['AcceptedCurrenciesEnum'] = {

    /**
     * value: "AUD"
     * @const
     */
    "AUD": "AUD",

    /**
     * value: "CAD"
     * @const
     */
    "CAD": "CAD",

    /**
     * value: "CHF"
     * @const
     */
    "CHF": "CHF",

    /**
     * value: "DKK"
     * @const
     */
    "DKK": "DKK",

    /**
     * value: "EUR"
     * @const
     */
    "EUR": "EUR",

    /**
     * value: "GBP"
     * @const
     */
    "GBP": "GBP",

    /**
     * value: "JPY"
     * @const
     */
    "JPY": "JPY",

    /**
     * value: "KRW"
     * @const
     */
    "KRW": "KRW",

    /**
     * value: "NOK"
     * @const
     */
    "NOK": "NOK",

    /**
     * value: "PLN"
     * @const
     */
    "PLN": "PLN",

    /**
     * value: "SEK"
     * @const
     */
    "SEK": "SEK",

    /**
     * value: "USD"
     * @const
     */
    "USD": "USD"
};


/**
 * Allowed values for the <code>content_rating</code> property.
 * @enum {String}
 * @readonly
 */
CreateVodAlt1Request['ContentRatingEnum'] = {

    /**
     * value: "drugs"
     * @const
     */
    "drugs": "drugs",

    /**
     * value: "language"
     * @const
     */
    "language": "language",

    /**
     * value: "nudity"
     * @const
     */
    "nudity": "nudity",

    /**
     * value: "safe"
     * @const
     */
    "safe": "safe",

    /**
     * value: "unrated"
     * @const
     */
    "unrated": "unrated",

    /**
     * value: "violence"
     * @const
     */
    "violence": "violence"
};


/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
CreateVodAlt1Request['TypeEnum'] = {

    /**
     * value: "film"
     * @const
     */
    "film": "film",

    /**
     * value: "series"
     * @const
     */
    "series": "series"
};



export default CreateVodAlt1Request;

