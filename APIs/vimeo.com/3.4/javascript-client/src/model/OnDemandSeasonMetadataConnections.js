/**
 * Vimeo
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import OnDemandSeasonMetadataConnectionsVideos from './OnDemandSeasonMetadataConnectionsVideos';

/**
 * The OnDemandSeasonMetadataConnections model module.
 * @module model/OnDemandSeasonMetadataConnections
 * @version 3.4
 */
class OnDemandSeasonMetadataConnections {
    /**
     * Constructs a new <code>OnDemandSeasonMetadataConnections</code>.
     * @alias module:model/OnDemandSeasonMetadataConnections
     * @param videos {module:model/OnDemandSeasonMetadataConnectionsVideos} 
     */
    constructor(videos) { 
        
        OnDemandSeasonMetadataConnections.initialize(this, videos);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, videos) { 
        obj['videos'] = videos;
    }

    /**
     * Constructs a <code>OnDemandSeasonMetadataConnections</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OnDemandSeasonMetadataConnections} obj Optional instance to populate.
     * @return {module:model/OnDemandSeasonMetadataConnections} The populated <code>OnDemandSeasonMetadataConnections</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OnDemandSeasonMetadataConnections();

            if (data.hasOwnProperty('videos')) {
                obj['videos'] = OnDemandSeasonMetadataConnectionsVideos.constructFromObject(data['videos']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OnDemandSeasonMetadataConnections</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OnDemandSeasonMetadataConnections</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of OnDemandSeasonMetadataConnections.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `videos`
        if (data['videos']) { // data not null
          OnDemandSeasonMetadataConnectionsVideos.validateJSON(data['videos']);
        }

        return true;
    }


}

OnDemandSeasonMetadataConnections.RequiredProperties = ["videos"];

/**
 * @member {module:model/OnDemandSeasonMetadataConnectionsVideos} videos
 */
OnDemandSeasonMetadataConnections.prototype['videos'] = undefined;






export default OnDemandSeasonMetadataConnections;

