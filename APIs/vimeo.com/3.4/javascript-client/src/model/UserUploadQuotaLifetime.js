/**
 * Vimeo
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The UserUploadQuotaLifetime model module.
 * @module model/UserUploadQuotaLifetime
 * @version 3.4
 */
class UserUploadQuotaLifetime {
    /**
     * Constructs a new <code>UserUploadQuotaLifetime</code>.
     * Information about the user&#39;s lifetime upload usage.
     * @alias module:model/UserUploadQuotaLifetime
     * @param free {Number} The number of bytes remaining in your lifetime maximum.
     * @param max {Number} The total number of bytes that you can upload across the lifetime of your account.
     * @param used {Number} The number of bytes that you've already uploaded against your lifetime limit.
     */
    constructor(free, max, used) { 
        
        UserUploadQuotaLifetime.initialize(this, free, max, used);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, free, max, used) { 
        obj['free'] = free;
        obj['max'] = max;
        obj['used'] = used;
    }

    /**
     * Constructs a <code>UserUploadQuotaLifetime</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UserUploadQuotaLifetime} obj Optional instance to populate.
     * @return {module:model/UserUploadQuotaLifetime} The populated <code>UserUploadQuotaLifetime</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UserUploadQuotaLifetime();

            if (data.hasOwnProperty('free')) {
                obj['free'] = ApiClient.convertToType(data['free'], 'Number');
            }
            if (data.hasOwnProperty('max')) {
                obj['max'] = ApiClient.convertToType(data['max'], 'Number');
            }
            if (data.hasOwnProperty('used')) {
                obj['used'] = ApiClient.convertToType(data['used'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UserUploadQuotaLifetime</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UserUploadQuotaLifetime</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of UserUploadQuotaLifetime.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }

        return true;
    }


}

UserUploadQuotaLifetime.RequiredProperties = ["free", "max", "used"];

/**
 * The number of bytes remaining in your lifetime maximum.
 * @member {Number} free
 */
UserUploadQuotaLifetime.prototype['free'] = undefined;

/**
 * The total number of bytes that you can upload across the lifetime of your account.
 * @member {Number} max
 */
UserUploadQuotaLifetime.prototype['max'] = undefined;

/**
 * The number of bytes that you've already uploaded against your lifetime limit.
 * @member {Number} used
 */
UserUploadQuotaLifetime.prototype['used'] = undefined;






export default UserUploadQuotaLifetime;

