# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AddVideoToVodRequestBuyPrice(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, aud: float=None, cad: float=None, chf: float=None, dkk: float=None, eur: float=None, gbp: float=None, jpy: float=None, krw: float=None, nok: float=None, pln: float=None, sek: float=None, usd: float=None):
        """AddVideoToVodRequestBuyPrice - a model defined in OpenAPI

        :param aud: The aud of this AddVideoToVodRequestBuyPrice.
        :param cad: The cad of this AddVideoToVodRequestBuyPrice.
        :param chf: The chf of this AddVideoToVodRequestBuyPrice.
        :param dkk: The dkk of this AddVideoToVodRequestBuyPrice.
        :param eur: The eur of this AddVideoToVodRequestBuyPrice.
        :param gbp: The gbp of this AddVideoToVodRequestBuyPrice.
        :param jpy: The jpy of this AddVideoToVodRequestBuyPrice.
        :param krw: The krw of this AddVideoToVodRequestBuyPrice.
        :param nok: The nok of this AddVideoToVodRequestBuyPrice.
        :param pln: The pln of this AddVideoToVodRequestBuyPrice.
        :param sek: The sek of this AddVideoToVodRequestBuyPrice.
        :param usd: The usd of this AddVideoToVodRequestBuyPrice.
        """
        self.openapi_types = {
            'aud': float,
            'cad': float,
            'chf': float,
            'dkk': float,
            'eur': float,
            'gbp': float,
            'jpy': float,
            'krw': float,
            'nok': float,
            'pln': float,
            'sek': float,
            'usd': float
        }

        self.attribute_map = {
            'aud': 'AUD',
            'cad': 'CAD',
            'chf': 'CHF',
            'dkk': 'DKK',
            'eur': 'EUR',
            'gbp': 'GBP',
            'jpy': 'JPY',
            'krw': 'KRW',
            'nok': 'NOK',
            'pln': 'PLN',
            'sek': 'SEK',
            'usd': 'USD'
        }

        self._aud = aud
        self._cad = cad
        self._chf = chf
        self._dkk = dkk
        self._eur = eur
        self._gbp = gbp
        self._jpy = jpy
        self._krw = krw
        self._nok = nok
        self._pln = pln
        self._sek = sek
        self._usd = usd

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AddVideoToVodRequestBuyPrice':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The add_video_to_vod_request_buy_price of this AddVideoToVodRequestBuyPrice.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def aud(self):
        """Gets the aud of this AddVideoToVodRequestBuyPrice.

        The purchase price of this video in AUD.

        :return: The aud of this AddVideoToVodRequestBuyPrice.
        :rtype: float
        """
        return self._aud

    @aud.setter
    def aud(self, aud):
        """Sets the aud of this AddVideoToVodRequestBuyPrice.

        The purchase price of this video in AUD.

        :param aud: The aud of this AddVideoToVodRequestBuyPrice.
        :type aud: float
        """

        self._aud = aud

    @property
    def cad(self):
        """Gets the cad of this AddVideoToVodRequestBuyPrice.

        The purchase price of this video in CAD.

        :return: The cad of this AddVideoToVodRequestBuyPrice.
        :rtype: float
        """
        return self._cad

    @cad.setter
    def cad(self, cad):
        """Sets the cad of this AddVideoToVodRequestBuyPrice.

        The purchase price of this video in CAD.

        :param cad: The cad of this AddVideoToVodRequestBuyPrice.
        :type cad: float
        """

        self._cad = cad

    @property
    def chf(self):
        """Gets the chf of this AddVideoToVodRequestBuyPrice.

        The purchase price of this video in CHF.

        :return: The chf of this AddVideoToVodRequestBuyPrice.
        :rtype: float
        """
        return self._chf

    @chf.setter
    def chf(self, chf):
        """Sets the chf of this AddVideoToVodRequestBuyPrice.

        The purchase price of this video in CHF.

        :param chf: The chf of this AddVideoToVodRequestBuyPrice.
        :type chf: float
        """

        self._chf = chf

    @property
    def dkk(self):
        """Gets the dkk of this AddVideoToVodRequestBuyPrice.

        The purchase price of this video in DKK.

        :return: The dkk of this AddVideoToVodRequestBuyPrice.
        :rtype: float
        """
        return self._dkk

    @dkk.setter
    def dkk(self, dkk):
        """Sets the dkk of this AddVideoToVodRequestBuyPrice.

        The purchase price of this video in DKK.

        :param dkk: The dkk of this AddVideoToVodRequestBuyPrice.
        :type dkk: float
        """

        self._dkk = dkk

    @property
    def eur(self):
        """Gets the eur of this AddVideoToVodRequestBuyPrice.

        The purchase price of this video in EUR.

        :return: The eur of this AddVideoToVodRequestBuyPrice.
        :rtype: float
        """
        return self._eur

    @eur.setter
    def eur(self, eur):
        """Sets the eur of this AddVideoToVodRequestBuyPrice.

        The purchase price of this video in EUR.

        :param eur: The eur of this AddVideoToVodRequestBuyPrice.
        :type eur: float
        """

        self._eur = eur

    @property
    def gbp(self):
        """Gets the gbp of this AddVideoToVodRequestBuyPrice.

        The purchase price of this video in GBP.

        :return: The gbp of this AddVideoToVodRequestBuyPrice.
        :rtype: float
        """
        return self._gbp

    @gbp.setter
    def gbp(self, gbp):
        """Sets the gbp of this AddVideoToVodRequestBuyPrice.

        The purchase price of this video in GBP.

        :param gbp: The gbp of this AddVideoToVodRequestBuyPrice.
        :type gbp: float
        """

        self._gbp = gbp

    @property
    def jpy(self):
        """Gets the jpy of this AddVideoToVodRequestBuyPrice.

        The purchase price of this video in JPY.

        :return: The jpy of this AddVideoToVodRequestBuyPrice.
        :rtype: float
        """
        return self._jpy

    @jpy.setter
    def jpy(self, jpy):
        """Sets the jpy of this AddVideoToVodRequestBuyPrice.

        The purchase price of this video in JPY.

        :param jpy: The jpy of this AddVideoToVodRequestBuyPrice.
        :type jpy: float
        """

        self._jpy = jpy

    @property
    def krw(self):
        """Gets the krw of this AddVideoToVodRequestBuyPrice.

        The purchase price of this video in KRW.

        :return: The krw of this AddVideoToVodRequestBuyPrice.
        :rtype: float
        """
        return self._krw

    @krw.setter
    def krw(self, krw):
        """Sets the krw of this AddVideoToVodRequestBuyPrice.

        The purchase price of this video in KRW.

        :param krw: The krw of this AddVideoToVodRequestBuyPrice.
        :type krw: float
        """

        self._krw = krw

    @property
    def nok(self):
        """Gets the nok of this AddVideoToVodRequestBuyPrice.

        The purchase price of this video in NOK.

        :return: The nok of this AddVideoToVodRequestBuyPrice.
        :rtype: float
        """
        return self._nok

    @nok.setter
    def nok(self, nok):
        """Sets the nok of this AddVideoToVodRequestBuyPrice.

        The purchase price of this video in NOK.

        :param nok: The nok of this AddVideoToVodRequestBuyPrice.
        :type nok: float
        """

        self._nok = nok

    @property
    def pln(self):
        """Gets the pln of this AddVideoToVodRequestBuyPrice.

        The purchase price of this video in PLN.

        :return: The pln of this AddVideoToVodRequestBuyPrice.
        :rtype: float
        """
        return self._pln

    @pln.setter
    def pln(self, pln):
        """Sets the pln of this AddVideoToVodRequestBuyPrice.

        The purchase price of this video in PLN.

        :param pln: The pln of this AddVideoToVodRequestBuyPrice.
        :type pln: float
        """

        self._pln = pln

    @property
    def sek(self):
        """Gets the sek of this AddVideoToVodRequestBuyPrice.

        The purchase price of this video in SEK.

        :return: The sek of this AddVideoToVodRequestBuyPrice.
        :rtype: float
        """
        return self._sek

    @sek.setter
    def sek(self, sek):
        """Sets the sek of this AddVideoToVodRequestBuyPrice.

        The purchase price of this video in SEK.

        :param sek: The sek of this AddVideoToVodRequestBuyPrice.
        :type sek: float
        """

        self._sek = sek

    @property
    def usd(self):
        """Gets the usd of this AddVideoToVodRequestBuyPrice.

        The purchase price of this video in USD. *Required if `buy.active` is true.

        :return: The usd of this AddVideoToVodRequestBuyPrice.
        :rtype: float
        """
        return self._usd

    @usd.setter
    def usd(self, usd):
        """Sets the usd of this AddVideoToVodRequestBuyPrice.

        The purchase price of this video in USD. *Required if `buy.active` is true.

        :param usd: The usd of this AddVideoToVodRequestBuyPrice.
        :type usd: float
        """

        self._usd = usd
