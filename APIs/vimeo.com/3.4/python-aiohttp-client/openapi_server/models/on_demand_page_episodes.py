# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.on_demand_page_episodes_buy import OnDemandPageEpisodesBuy
from openapi_server.models.on_demand_page_episodes_rent import OnDemandPageEpisodesRent
from openapi_server import util


class OnDemandPageEpisodes(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, buy: OnDemandPageEpisodesBuy=None, rent: OnDemandPageEpisodesRent=None):
        """OnDemandPageEpisodes - a model defined in OpenAPI

        :param buy: The buy of this OnDemandPageEpisodes.
        :param rent: The rent of this OnDemandPageEpisodes.
        """
        self.openapi_types = {
            'buy': OnDemandPageEpisodesBuy,
            'rent': OnDemandPageEpisodesRent
        }

        self.attribute_map = {
            'buy': 'buy',
            'rent': 'rent'
        }

        self._buy = buy
        self._rent = rent

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OnDemandPageEpisodes':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The on_demand_page_episodes of this OnDemandPageEpisodes.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def buy(self):
        """Gets the buy of this OnDemandPageEpisodes.


        :return: The buy of this OnDemandPageEpisodes.
        :rtype: OnDemandPageEpisodesBuy
        """
        return self._buy

    @buy.setter
    def buy(self, buy):
        """Sets the buy of this OnDemandPageEpisodes.


        :param buy: The buy of this OnDemandPageEpisodes.
        :type buy: OnDemandPageEpisodesBuy
        """
        if buy is None:
            raise ValueError("Invalid value for `buy`, must not be `None`")

        self._buy = buy

    @property
    def rent(self):
        """Gets the rent of this OnDemandPageEpisodes.


        :return: The rent of this OnDemandPageEpisodes.
        :rtype: OnDemandPageEpisodesRent
        """
        return self._rent

    @rent.setter
    def rent(self, rent):
        """Sets the rent of this OnDemandPageEpisodes.


        :param rent: The rent of this OnDemandPageEpisodes.
        :type rent: OnDemandPageEpisodesRent
        """
        if rent is None:
            raise ValueError("Invalid value for `rent`, must not be `None`")

        self._rent = rent
