# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class VideoSpatialDirectorTimelineInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, pitch: float=None, roll: float=None, time_code: float=None, yaw: float=None):
        """VideoSpatialDirectorTimelineInner - a model defined in OpenAPI

        :param pitch: The pitch of this VideoSpatialDirectorTimelineInner.
        :param roll: The roll of this VideoSpatialDirectorTimelineInner.
        :param time_code: The time_code of this VideoSpatialDirectorTimelineInner.
        :param yaw: The yaw of this VideoSpatialDirectorTimelineInner.
        """
        self.openapi_types = {
            'pitch': float,
            'roll': float,
            'time_code': float,
            'yaw': float
        }

        self.attribute_map = {
            'pitch': 'pitch',
            'roll': 'roll',
            'time_code': 'time_code',
            'yaw': 'yaw'
        }

        self._pitch = pitch
        self._roll = roll
        self._time_code = time_code
        self._yaw = yaw

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VideoSpatialDirectorTimelineInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The video_spatial_director_timeline_inner of this VideoSpatialDirectorTimelineInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def pitch(self):
        """Gets the pitch of this VideoSpatialDirectorTimelineInner.

        The director timeline pitch, from -90 (minimum) to 90 (maximum).

        :return: The pitch of this VideoSpatialDirectorTimelineInner.
        :rtype: float
        """
        return self._pitch

    @pitch.setter
    def pitch(self, pitch):
        """Sets the pitch of this VideoSpatialDirectorTimelineInner.

        The director timeline pitch, from -90 (minimum) to 90 (maximum).

        :param pitch: The pitch of this VideoSpatialDirectorTimelineInner.
        :type pitch: float
        """

        self._pitch = pitch

    @property
    def roll(self):
        """Gets the roll of this VideoSpatialDirectorTimelineInner.

        The director timeline roll.

        :return: The roll of this VideoSpatialDirectorTimelineInner.
        :rtype: float
        """
        return self._roll

    @roll.setter
    def roll(self, roll):
        """Sets the roll of this VideoSpatialDirectorTimelineInner.

        The director timeline roll.

        :param roll: The roll of this VideoSpatialDirectorTimelineInner.
        :type roll: float
        """

        self._roll = roll

    @property
    def time_code(self):
        """Gets the time_code of this VideoSpatialDirectorTimelineInner.

        The director timeline time code.

        :return: The time_code of this VideoSpatialDirectorTimelineInner.
        :rtype: float
        """
        return self._time_code

    @time_code.setter
    def time_code(self, time_code):
        """Sets the time_code of this VideoSpatialDirectorTimelineInner.

        The director timeline time code.

        :param time_code: The time_code of this VideoSpatialDirectorTimelineInner.
        :type time_code: float
        """

        self._time_code = time_code

    @property
    def yaw(self):
        """Gets the yaw of this VideoSpatialDirectorTimelineInner.

        The director timeline yaw, from 0 (minimum) to 360 (maximum).

        :return: The yaw of this VideoSpatialDirectorTimelineInner.
        :rtype: float
        """
        return self._yaw

    @yaw.setter
    def yaw(self, yaw):
        """Sets the yaw of this VideoSpatialDirectorTimelineInner.

        The director timeline yaw, from 0 (minimum) to 360 (maximum).

        :param yaw: The yaw of this VideoSpatialDirectorTimelineInner.
        :type yaw: float
        """

        self._yaw = yaw
