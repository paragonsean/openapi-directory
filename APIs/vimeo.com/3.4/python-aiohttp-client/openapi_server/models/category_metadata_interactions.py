# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.category_metadata_interactions_follow import CategoryMetadataInteractionsFollow
from openapi_server import util


class CategoryMetadataInteractions(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, follow: CategoryMetadataInteractionsFollow=None):
        """CategoryMetadataInteractions - a model defined in OpenAPI

        :param follow: The follow of this CategoryMetadataInteractions.
        """
        self.openapi_types = {
            'follow': CategoryMetadataInteractionsFollow
        }

        self.attribute_map = {
            'follow': 'follow'
        }

        self._follow = follow

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CategoryMetadataInteractions':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The category_metadata_interactions of this CategoryMetadataInteractions.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def follow(self):
        """Gets the follow of this CategoryMetadataInteractions.


        :return: The follow of this CategoryMetadataInteractions.
        :rtype: CategoryMetadataInteractionsFollow
        """
        return self._follow

    @follow.setter
    def follow(self, follow):
        """Sets the follow of this CategoryMetadataInteractions.


        :param follow: The follow of this CategoryMetadataInteractions.
        :type follow: CategoryMetadataInteractionsFollow
        """
        if follow is None:
            raise ValueError("Invalid value for `follow`, must not be `None`")

        self._follow = follow
