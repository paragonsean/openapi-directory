# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Endpoint(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, methods: List[str]=None, path: str=None):
        """Endpoint - a model defined in OpenAPI

        :param methods: The methods of this Endpoint.
        :param path: The path of this Endpoint.
        """
        self.openapi_types = {
            'methods': List[str],
            'path': str
        }

        self.attribute_map = {
            'methods': 'methods',
            'path': 'path'
        }

        self._methods = methods
        self._path = path

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Endpoint':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The endpoint of this Endpoint.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def methods(self):
        """Gets the methods of this Endpoint.

        All HTTP methods permitted on this endpoint.

        :return: The methods of this Endpoint.
        :rtype: List[str]
        """
        return self._methods

    @methods.setter
    def methods(self, methods):
        """Sets the methods of this Endpoint.

        All HTTP methods permitted on this endpoint.

        :param methods: The methods of this Endpoint.
        :type methods: List[str]
        """
        if methods is None:
            raise ValueError("Invalid value for `methods`, must not be `None`")

        self._methods = methods

    @property
    def path(self):
        """Gets the path of this Endpoint.

        The path section of the URL, which, when appended to the API host `https:///api.vimeo.com`, builds a full API endpoint.

        :return: The path of this Endpoint.
        :rtype: str
        """
        return self._path

    @path.setter
    def path(self, path):
        """Sets the path of this Endpoint.

        The path section of the URL, which, when appended to the API host `https:///api.vimeo.com`, builds a full API endpoint.

        :param path: The path of this Endpoint.
        :type path: str
        """
        if path is None:
            raise ValueError("Invalid value for `path`, must not be `None`")

        self._path = path
