# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AddVideosToChannelRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, video_uri: str=None):
        """AddVideosToChannelRequest - a model defined in OpenAPI

        :param video_uri: The video_uri of this AddVideosToChannelRequest.
        """
        self.openapi_types = {
            'video_uri': str
        }

        self.attribute_map = {
            'video_uri': 'video_uri'
        }

        self._video_uri = video_uri

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AddVideosToChannelRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The add_videos_to_channel_request of this AddVideosToChannelRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def video_uri(self):
        """Gets the video_uri of this AddVideosToChannelRequest.

        The URI of a video to add.

        :return: The video_uri of this AddVideosToChannelRequest.
        :rtype: str
        """
        return self._video_uri

    @video_uri.setter
    def video_uri(self, video_uri):
        """Sets the video_uri of this AddVideosToChannelRequest.

        The URI of a video to add.

        :param video_uri: The video_uri of this AddVideosToChannelRequest.
        :type video_uri: str
        """
        if video_uri is None:
            raise ValueError("Invalid value for `video_uri`, must not be `None`")

        self._video_uri = video_uri
