# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SetVideoAsAlbumThumbnailAlt1Request(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, time_code: float=None):
        """SetVideoAsAlbumThumbnailAlt1Request - a model defined in OpenAPI

        :param time_code: The time_code of this SetVideoAsAlbumThumbnailAlt1Request.
        """
        self.openapi_types = {
            'time_code': float
        }

        self.attribute_map = {
            'time_code': 'time_code'
        }

        self._time_code = time_code

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SetVideoAsAlbumThumbnailAlt1Request':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The set_video_as_album_thumbnail_alt1_request of this SetVideoAsAlbumThumbnailAlt1Request.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def time_code(self):
        """Gets the time_code of this SetVideoAsAlbumThumbnailAlt1Request.

        The video frame time in seconds to use as the album thumbnail.

        :return: The time_code of this SetVideoAsAlbumThumbnailAlt1Request.
        :rtype: float
        """
        return self._time_code

    @time_code.setter
    def time_code(self, time_code):
        """Sets the time_code of this SetVideoAsAlbumThumbnailAlt1Request.

        The video frame time in seconds to use as the album thumbnail.

        :param time_code: The time_code of this SetVideoAsAlbumThumbnailAlt1Request.
        :type time_code: float
        """

        self._time_code = time_code
