# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.on_demand_video_interactions_page import OnDemandVideoInteractionsPage
from openapi_server import util


class OnDemandVideoInteractions(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, page: OnDemandVideoInteractionsPage=None):
        """OnDemandVideoInteractions - a model defined in OpenAPI

        :param page: The page of this OnDemandVideoInteractions.
        """
        self.openapi_types = {
            'page': OnDemandVideoInteractionsPage
        }

        self.attribute_map = {
            'page': 'page'
        }

        self._page = page

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OnDemandVideoInteractions':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The on_demand_video_interactions of this OnDemandVideoInteractions.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def page(self):
        """Gets the page of this OnDemandVideoInteractions.


        :return: The page of this OnDemandVideoInteractions.
        :rtype: OnDemandVideoInteractionsPage
        """
        return self._page

    @page.setter
    def page(self, page):
        """Sets the page of this OnDemandVideoInteractions.


        :param page: The page of this OnDemandVideoInteractions.
        :type page: OnDemandVideoInteractionsPage
        """
        if page is None:
            raise ValueError("Invalid value for `page`, must not be `None`")

        self._page = page
