# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.on_demand_video_metadata_connections_season import OnDemandVideoMetadataConnectionsSeason
from openapi_server import util


class OnDemandVideoMetadataConnections(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, season: OnDemandVideoMetadataConnectionsSeason=None):
        """OnDemandVideoMetadataConnections - a model defined in OpenAPI

        :param season: The season of this OnDemandVideoMetadataConnections.
        """
        self.openapi_types = {
            'season': OnDemandVideoMetadataConnectionsSeason
        }

        self.attribute_map = {
            'season': 'season'
        }

        self._season = season

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OnDemandVideoMetadataConnections':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The on_demand_video_metadata_connections of this OnDemandVideoMetadataConnections.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def season(self):
        """Gets the season of this OnDemandVideoMetadataConnections.


        :return: The season of this OnDemandVideoMetadataConnections.
        :rtype: OnDemandVideoMetadataConnectionsSeason
        """
        return self._season

    @season.setter
    def season(self, season):
        """Sets the season of this OnDemandVideoMetadataConnections.


        :param season: The season of this OnDemandVideoMetadataConnections.
        :type season: OnDemandVideoMetadataConnectionsSeason
        """
        if season is None:
            raise ValueError("Invalid value for `season`, must not be `None`")

        self._season = season
