# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UploadVideoAlt1RequestEmbedLogosCustom(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, active: bool=None, link: str=None, sticky: bool=None):
        """UploadVideoAlt1RequestEmbedLogosCustom - a model defined in OpenAPI

        :param active: The active of this UploadVideoAlt1RequestEmbedLogosCustom.
        :param link: The link of this UploadVideoAlt1RequestEmbedLogosCustom.
        :param sticky: The sticky of this UploadVideoAlt1RequestEmbedLogosCustom.
        """
        self.openapi_types = {
            'active': bool,
            'link': str,
            'sticky': bool
        }

        self.attribute_map = {
            'active': 'active',
            'link': 'link',
            'sticky': 'sticky'
        }

        self._active = active
        self._link = link
        self._sticky = sticky

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UploadVideoAlt1RequestEmbedLogosCustom':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The upload_video_alt1_request_embed_logos_custom of this UploadVideoAlt1RequestEmbedLogosCustom.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def active(self):
        """Gets the active of this UploadVideoAlt1RequestEmbedLogosCustom.

        Show or hide your custom logo.

        :return: The active of this UploadVideoAlt1RequestEmbedLogosCustom.
        :rtype: bool
        """
        return self._active

    @active.setter
    def active(self, active):
        """Sets the active of this UploadVideoAlt1RequestEmbedLogosCustom.

        Show or hide your custom logo.

        :param active: The active of this UploadVideoAlt1RequestEmbedLogosCustom.
        :type active: bool
        """

        self._active = active

    @property
    def link(self):
        """Gets the link of this UploadVideoAlt1RequestEmbedLogosCustom.

        The URL that loads when the user clicks your custom logo.

        :return: The link of this UploadVideoAlt1RequestEmbedLogosCustom.
        :rtype: str
        """
        return self._link

    @link.setter
    def link(self, link):
        """Sets the link of this UploadVideoAlt1RequestEmbedLogosCustom.

        The URL that loads when the user clicks your custom logo.

        :param link: The link of this UploadVideoAlt1RequestEmbedLogosCustom.
        :type link: str
        """

        self._link = link

    @property
    def sticky(self):
        """Gets the sticky of this UploadVideoAlt1RequestEmbedLogosCustom.

        Whether always to show the custom logo or to hide it after time with the rest of the UI.

        :return: The sticky of this UploadVideoAlt1RequestEmbedLogosCustom.
        :rtype: bool
        """
        return self._sticky

    @sticky.setter
    def sticky(self, sticky):
        """Sets the sticky of this UploadVideoAlt1RequestEmbedLogosCustom.

        Whether always to show the custom logo or to hide it after time with the rest of the UI.

        :param sticky: The sticky of this UploadVideoAlt1RequestEmbedLogosCustom.
        :type sticky: bool
        """

        self._sticky = sticky
