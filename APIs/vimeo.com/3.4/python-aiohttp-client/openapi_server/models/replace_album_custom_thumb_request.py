# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ReplaceAlbumCustomThumbRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, active: bool=None):
        """ReplaceAlbumCustomThumbRequest - a model defined in OpenAPI

        :param active: The active of this ReplaceAlbumCustomThumbRequest.
        """
        self.openapi_types = {
            'active': bool
        }

        self.attribute_map = {
            'active': 'active'
        }

        self._active = active

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ReplaceAlbumCustomThumbRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The replace_album_custom_thumb_request of this ReplaceAlbumCustomThumbRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def active(self):
        """Gets the active of this ReplaceAlbumCustomThumbRequest.

        Whether to make this the active album thumbnail.

        :return: The active of this ReplaceAlbumCustomThumbRequest.
        :rtype: bool
        """
        return self._active

    @active.setter
    def active(self, active):
        """Sets the active of this ReplaceAlbumCustomThumbRequest.

        Whether to make this the active album thumbnail.

        :param active: The active of this ReplaceAlbumCustomThumbRequest.
        :type active: bool
        """

        self._active = active
