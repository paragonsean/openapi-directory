# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.on_demand_video_metadata_interactions_likes import OnDemandVideoMetadataInteractionsLikes
from openapi_server.models.on_demand_video_metadata_interactions_watchlater import OnDemandVideoMetadataInteractionsWatchlater
from openapi_server import util


class OnDemandVideoMetadataInteractions(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, likes: OnDemandVideoMetadataInteractionsLikes=None, watchlater: OnDemandVideoMetadataInteractionsWatchlater=None):
        """OnDemandVideoMetadataInteractions - a model defined in OpenAPI

        :param likes: The likes of this OnDemandVideoMetadataInteractions.
        :param watchlater: The watchlater of this OnDemandVideoMetadataInteractions.
        """
        self.openapi_types = {
            'likes': OnDemandVideoMetadataInteractionsLikes,
            'watchlater': OnDemandVideoMetadataInteractionsWatchlater
        }

        self.attribute_map = {
            'likes': 'likes',
            'watchlater': 'watchlater'
        }

        self._likes = likes
        self._watchlater = watchlater

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OnDemandVideoMetadataInteractions':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The on_demand_video_metadata_interactions of this OnDemandVideoMetadataInteractions.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def likes(self):
        """Gets the likes of this OnDemandVideoMetadataInteractions.


        :return: The likes of this OnDemandVideoMetadataInteractions.
        :rtype: OnDemandVideoMetadataInteractionsLikes
        """
        return self._likes

    @likes.setter
    def likes(self, likes):
        """Sets the likes of this OnDemandVideoMetadataInteractions.


        :param likes: The likes of this OnDemandVideoMetadataInteractions.
        :type likes: OnDemandVideoMetadataInteractionsLikes
        """
        if likes is None:
            raise ValueError("Invalid value for `likes`, must not be `None`")

        self._likes = likes

    @property
    def watchlater(self):
        """Gets the watchlater of this OnDemandVideoMetadataInteractions.


        :return: The watchlater of this OnDemandVideoMetadataInteractions.
        :rtype: OnDemandVideoMetadataInteractionsWatchlater
        """
        return self._watchlater

    @watchlater.setter
    def watchlater(self, watchlater):
        """Sets the watchlater of this OnDemandVideoMetadataInteractions.


        :param watchlater: The watchlater of this OnDemandVideoMetadataInteractions.
        :type watchlater: OnDemandVideoMetadataInteractionsWatchlater
        """
        if watchlater is None:
            raise ValueError("Invalid value for `watchlater`, must not be `None`")

        self._watchlater = watchlater
