# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class VideoStats(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, plays: float=None):
        """VideoStats - a model defined in OpenAPI

        :param plays: The plays of this VideoStats.
        """
        self.openapi_types = {
            'plays': float
        }

        self.attribute_map = {
            'plays': 'plays'
        }

        self._plays = plays

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VideoStats':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The video_stats of this VideoStats.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def plays(self):
        """Gets the plays of this VideoStats.

        The current total number of times that the video has been played.

        :return: The plays of this VideoStats.
        :rtype: float
        """
        return self._plays

    @plays.setter
    def plays(self, plays):
        """Sets the plays of this VideoStats.

        The current total number of times that the video has been played.

        :param plays: The plays of this VideoStats.
        :type plays: float
        """
        if plays is None:
            raise ValueError("Invalid value for `plays`, must not be `None`")

        self._plays = plays
