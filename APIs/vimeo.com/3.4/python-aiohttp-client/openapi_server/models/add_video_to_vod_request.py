# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.add_video_to_vod_request_buy import AddVideoToVodRequestBuy
from openapi_server.models.add_video_to_vod_request_rent import AddVideoToVodRequestRent
from openapi_server import util


class AddVideoToVodRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, buy: AddVideoToVodRequestBuy=None, position: float=None, release_year: float=None, rent: AddVideoToVodRequestRent=None, type: str=None):
        """AddVideoToVodRequest - a model defined in OpenAPI

        :param buy: The buy of this AddVideoToVodRequest.
        :param position: The position of this AddVideoToVodRequest.
        :param release_year: The release_year of this AddVideoToVodRequest.
        :param rent: The rent of this AddVideoToVodRequest.
        :param type: The type of this AddVideoToVodRequest.
        """
        self.openapi_types = {
            'buy': AddVideoToVodRequestBuy,
            'position': float,
            'release_year': float,
            'rent': AddVideoToVodRequestRent,
            'type': str
        }

        self.attribute_map = {
            'buy': 'buy',
            'position': 'position',
            'release_year': 'release_year',
            'rent': 'rent',
            'type': 'type'
        }

        self._buy = buy
        self._position = position
        self._release_year = release_year
        self._rent = rent
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AddVideoToVodRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The add_video_to_vod_request of this AddVideoToVodRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def buy(self):
        """Gets the buy of this AddVideoToVodRequest.


        :return: The buy of this AddVideoToVodRequest.
        :rtype: AddVideoToVodRequestBuy
        """
        return self._buy

    @buy.setter
    def buy(self, buy):
        """Sets the buy of this AddVideoToVodRequest.


        :param buy: The buy of this AddVideoToVodRequest.
        :type buy: AddVideoToVodRequestBuy
        """

        self._buy = buy

    @property
    def position(self):
        """Gets the position of this AddVideoToVodRequest.

        The position of this video in the On Demand collection.

        :return: The position of this AddVideoToVodRequest.
        :rtype: float
        """
        return self._position

    @position.setter
    def position(self, position):
        """Sets the position of this AddVideoToVodRequest.

        The position of this video in the On Demand collection.

        :param position: The position of this AddVideoToVodRequest.
        :type position: float
        """

        self._position = position

    @property
    def release_year(self):
        """Gets the release_year of this AddVideoToVodRequest.

        The video release year.

        :return: The release_year of this AddVideoToVodRequest.
        :rtype: float
        """
        return self._release_year

    @release_year.setter
    def release_year(self, release_year):
        """Sets the release_year of this AddVideoToVodRequest.

        The video release year.

        :param release_year: The release_year of this AddVideoToVodRequest.
        :type release_year: float
        """

        self._release_year = release_year

    @property
    def rent(self):
        """Gets the rent of this AddVideoToVodRequest.


        :return: The rent of this AddVideoToVodRequest.
        :rtype: AddVideoToVodRequestRent
        """
        return self._rent

    @rent.setter
    def rent(self, rent):
        """Sets the rent of this AddVideoToVodRequest.


        :param rent: The rent of this AddVideoToVodRequest.
        :type rent: AddVideoToVodRequestRent
        """

        self._rent = rent

    @property
    def type(self):
        """Gets the type of this AddVideoToVodRequest.

        The type of video that you are adding to the On Demand page.

        :return: The type of this AddVideoToVodRequest.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this AddVideoToVodRequest.

        The type of video that you are adding to the On Demand page.

        :param type: The type of this AddVideoToVodRequest.
        :type type: str
        """
        allowed_values = ["extra", "main", "trailer"]  # noqa: E501
        if type not in allowed_values:
            raise ValueError(
                "Invalid value for `type` ({0}), must be one of {1}"
                .format(type, allowed_values)
            )

        self._type = type
