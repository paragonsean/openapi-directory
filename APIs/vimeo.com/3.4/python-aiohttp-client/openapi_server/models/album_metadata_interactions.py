# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.album_metadata_interactions_add_custom_thumbnails import AlbumMetadataInteractionsAddCustomThumbnails
from openapi_server.models.album_metadata_interactions_add_logos import AlbumMetadataInteractionsAddLogos
from openapi_server.models.album_metadata_interactions_add_videos import AlbumMetadataInteractionsAddVideos
from openapi_server import util


class AlbumMetadataInteractions(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, add_custom_thumbnails: AlbumMetadataInteractionsAddCustomThumbnails=None, add_logos: AlbumMetadataInteractionsAddLogos=None, add_videos: AlbumMetadataInteractionsAddVideos=None):
        """AlbumMetadataInteractions - a model defined in OpenAPI

        :param add_custom_thumbnails: The add_custom_thumbnails of this AlbumMetadataInteractions.
        :param add_logos: The add_logos of this AlbumMetadataInteractions.
        :param add_videos: The add_videos of this AlbumMetadataInteractions.
        """
        self.openapi_types = {
            'add_custom_thumbnails': AlbumMetadataInteractionsAddCustomThumbnails,
            'add_logos': AlbumMetadataInteractionsAddLogos,
            'add_videos': AlbumMetadataInteractionsAddVideos
        }

        self.attribute_map = {
            'add_custom_thumbnails': 'add_custom_thumbnails',
            'add_logos': 'add_logos',
            'add_videos': 'add_videos'
        }

        self._add_custom_thumbnails = add_custom_thumbnails
        self._add_logos = add_logos
        self._add_videos = add_videos

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AlbumMetadataInteractions':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The album_metadata_interactions of this AlbumMetadataInteractions.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def add_custom_thumbnails(self):
        """Gets the add_custom_thumbnails of this AlbumMetadataInteractions.


        :return: The add_custom_thumbnails of this AlbumMetadataInteractions.
        :rtype: AlbumMetadataInteractionsAddCustomThumbnails
        """
        return self._add_custom_thumbnails

    @add_custom_thumbnails.setter
    def add_custom_thumbnails(self, add_custom_thumbnails):
        """Sets the add_custom_thumbnails of this AlbumMetadataInteractions.


        :param add_custom_thumbnails: The add_custom_thumbnails of this AlbumMetadataInteractions.
        :type add_custom_thumbnails: AlbumMetadataInteractionsAddCustomThumbnails
        """
        if add_custom_thumbnails is None:
            raise ValueError("Invalid value for `add_custom_thumbnails`, must not be `None`")

        self._add_custom_thumbnails = add_custom_thumbnails

    @property
    def add_logos(self):
        """Gets the add_logos of this AlbumMetadataInteractions.


        :return: The add_logos of this AlbumMetadataInteractions.
        :rtype: AlbumMetadataInteractionsAddLogos
        """
        return self._add_logos

    @add_logos.setter
    def add_logos(self, add_logos):
        """Sets the add_logos of this AlbumMetadataInteractions.


        :param add_logos: The add_logos of this AlbumMetadataInteractions.
        :type add_logos: AlbumMetadataInteractionsAddLogos
        """
        if add_logos is None:
            raise ValueError("Invalid value for `add_logos`, must not be `None`")

        self._add_logos = add_logos

    @property
    def add_videos(self):
        """Gets the add_videos of this AlbumMetadataInteractions.


        :return: The add_videos of this AlbumMetadataInteractions.
        :rtype: AlbumMetadataInteractionsAddVideos
        """
        return self._add_videos

    @add_videos.setter
    def add_videos(self, add_videos):
        """Sets the add_videos of this AlbumMetadataInteractions.


        :param add_videos: The add_videos of this AlbumMetadataInteractions.
        :type add_videos: AlbumMetadataInteractionsAddVideos
        """
        if add_videos is None:
            raise ValueError("Invalid value for `add_videos`, must not be `None`")

        self._add_videos = add_videos
