# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_vod_alt1_request_episodes_buy_price import CreateVodAlt1RequestEpisodesBuyPrice
from openapi_server import util


class CreateVodAlt1RequestEpisodesBuy(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, active: bool=None, download: bool=None, price: CreateVodAlt1RequestEpisodesBuyPrice=None):
        """CreateVodAlt1RequestEpisodesBuy - a model defined in OpenAPI

        :param active: The active of this CreateVodAlt1RequestEpisodesBuy.
        :param download: The download of this CreateVodAlt1RequestEpisodesBuy.
        :param price: The price of this CreateVodAlt1RequestEpisodesBuy.
        """
        self.openapi_types = {
            'active': bool,
            'download': bool,
            'price': CreateVodAlt1RequestEpisodesBuyPrice
        }

        self.attribute_map = {
            'active': 'active',
            'download': 'download',
            'price': 'price'
        }

        self._active = active
        self._download = download
        self._price = price

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateVodAlt1RequestEpisodesBuy':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The create_vod_alt1_request_episodes_buy of this CreateVodAlt1RequestEpisodesBuy.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def active(self):
        """Gets the active of this CreateVodAlt1RequestEpisodesBuy.

        Whether episodes can be bought.

        :return: The active of this CreateVodAlt1RequestEpisodesBuy.
        :rtype: bool
        """
        return self._active

    @active.setter
    def active(self, active):
        """Sets the active of this CreateVodAlt1RequestEpisodesBuy.

        Whether episodes can be bought.

        :param active: The active of this CreateVodAlt1RequestEpisodesBuy.
        :type active: bool
        """

        self._active = active

    @property
    def download(self):
        """Gets the download of this CreateVodAlt1RequestEpisodesBuy.

        Whether people who buy the episode can download it. To use this field, `type` must be `series`.

        :return: The download of this CreateVodAlt1RequestEpisodesBuy.
        :rtype: bool
        """
        return self._download

    @download.setter
    def download(self, download):
        """Sets the download of this CreateVodAlt1RequestEpisodesBuy.

        Whether people who buy the episode can download it. To use this field, `type` must be `series`.

        :param download: The download of this CreateVodAlt1RequestEpisodesBuy.
        :type download: bool
        """

        self._download = download

    @property
    def price(self):
        """Gets the price of this CreateVodAlt1RequestEpisodesBuy.


        :return: The price of this CreateVodAlt1RequestEpisodesBuy.
        :rtype: CreateVodAlt1RequestEpisodesBuyPrice
        """
        return self._price

    @price.setter
    def price(self, price):
        """Sets the price of this CreateVodAlt1RequestEpisodesBuy.


        :param price: The price of this CreateVodAlt1RequestEpisodesBuy.
        :type price: CreateVodAlt1RequestEpisodesBuyPrice
        """

        self._price = price
