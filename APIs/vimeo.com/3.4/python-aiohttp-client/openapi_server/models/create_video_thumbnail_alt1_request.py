# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CreateVideoThumbnailAlt1Request(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, active: bool=None, time: float=None):
        """CreateVideoThumbnailAlt1Request - a model defined in OpenAPI

        :param active: The active of this CreateVideoThumbnailAlt1Request.
        :param time: The time of this CreateVideoThumbnailAlt1Request.
        """
        self.openapi_types = {
            'active': bool,
            'time': float
        }

        self.attribute_map = {
            'active': 'active',
            'time': 'time'
        }

        self._active = active
        self._time = time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateVideoThumbnailAlt1Request':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The create_video_thumbnail_alt1_request of this CreateVideoThumbnailAlt1Request.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def active(self):
        """Gets the active of this CreateVideoThumbnailAlt1Request.

        Whether the image created by the `time` field should be the default thumbnail for the video.

        :return: The active of this CreateVideoThumbnailAlt1Request.
        :rtype: bool
        """
        return self._active

    @active.setter
    def active(self, active):
        """Sets the active of this CreateVideoThumbnailAlt1Request.

        Whether the image created by the `time` field should be the default thumbnail for the video.

        :param active: The active of this CreateVideoThumbnailAlt1Request.
        :type active: bool
        """

        self._active = active

    @property
    def time(self):
        """Gets the time of this CreateVideoThumbnailAlt1Request.

        Creates an image of the video from the given time offset.

        :return: The time of this CreateVideoThumbnailAlt1Request.
        :rtype: float
        """
        return self._time

    @time.setter
    def time(self, time):
        """Sets the time of this CreateVideoThumbnailAlt1Request.

        Creates an image of the video from the given time offset.

        :param time: The time of this CreateVideoThumbnailAlt1Request.
        :type time: float
        """

        self._time = time
