/*
 * Vimeo
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AddVideoCreditAlt1Request;
import java.math.BigDecimal;
import org.openapitools.client.model.Credit;
import org.openapitools.client.model.EditVideoCreditRequest;
import org.openapitools.client.model.LegacyError;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for VideosCreditsApi
 */
@Disabled
public class VideosCreditsApiTest {

    private final VideosCreditsApi api = new VideosCreditsApi();

    /**
     * Credit a user in a video
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addVideoCreditTest() throws ApiException {
        BigDecimal videoId = null;
        AddVideoCreditAlt1Request addVideoCreditAlt1Request = null;
        Credit response = api.addVideoCredit(videoId, addVideoCreditAlt1Request);
        // TODO: test validations
    }

    /**
     * Credit a user in a video
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addVideoCreditAlt1Test() throws ApiException {
        BigDecimal channelId = null;
        BigDecimal videoId = null;
        AddVideoCreditAlt1Request addVideoCreditAlt1Request = null;
        Credit response = api.addVideoCreditAlt1(channelId, videoId, addVideoCreditAlt1Request);
        // TODO: test validations
    }

    /**
     * Delete a credit for a user in a video
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteVideoCreditTest() throws ApiException {
        BigDecimal creditId = null;
        BigDecimal videoId = null;
        api.deleteVideoCredit(creditId, videoId);
        // TODO: test validations
    }

    /**
     * Edit a credit for a user in a video
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void editVideoCreditTest() throws ApiException {
        BigDecimal creditId = null;
        BigDecimal videoId = null;
        EditVideoCreditRequest editVideoCreditRequest = null;
        Credit response = api.editVideoCredit(creditId, videoId, editVideoCreditRequest);
        // TODO: test validations
    }

    /**
     * Get a specific credited user in a video
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getVideoCreditTest() throws ApiException {
        BigDecimal creditId = null;
        BigDecimal videoId = null;
        Credit response = api.getVideoCredit(creditId, videoId);
        // TODO: test validations
    }

    /**
     * Get all the credited users in a video
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getVideoCreditsTest() throws ApiException {
        BigDecimal videoId = null;
        String direction = null;
        BigDecimal page = null;
        BigDecimal perPage = null;
        String query = null;
        String sort = null;
        List<Credit> response = api.getVideoCredits(videoId, direction, page, perPage, query, sort);
        // TODO: test validations
    }

    /**
     * Get all the credited users in a video
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getVideoCreditsAlt1Test() throws ApiException {
        BigDecimal channelId = null;
        BigDecimal videoId = null;
        String direction = null;
        BigDecimal page = null;
        BigDecimal perPage = null;
        String query = null;
        String sort = null;
        List<Credit> response = api.getVideoCreditsAlt1(channelId, videoId, direction, page, perPage, query, sort);
        // TODO: test validations
    }

}
