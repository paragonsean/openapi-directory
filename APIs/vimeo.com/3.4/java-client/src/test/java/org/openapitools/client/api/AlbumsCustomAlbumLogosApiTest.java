/*
 * Vimeo
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import java.math.BigDecimal;
import org.openapitools.client.model.LegacyError;
import org.openapitools.client.model.Picture;
import org.openapitools.client.model.ReplaceAlbumLogoRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AlbumsCustomAlbumLogosApi
 */
@Disabled
public class AlbumsCustomAlbumLogosApiTest {

    private final AlbumsCustomAlbumLogosApi api = new AlbumsCustomAlbumLogosApi();

    /**
     * Add a custom album logo
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createAlbumLogoTest() throws ApiException {
        BigDecimal albumId = null;
        BigDecimal userId = null;
        Picture response = api.createAlbumLogo(albumId, userId);
        // TODO: test validations
    }

    /**
     * Remove a custom album logo
     *
     * This method removes a custom logo from the specified album.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteAlbumLogoTest() throws ApiException {
        BigDecimal albumId = null;
        BigDecimal logoId = null;
        BigDecimal userId = null;
        api.deleteAlbumLogo(albumId, logoId, userId);
        // TODO: test validations
    }

    /**
     * Get a specific custom album logo
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAlbumLogoTest() throws ApiException {
        BigDecimal albumId = null;
        BigDecimal logoId = null;
        BigDecimal userId = null;
        Picture response = api.getAlbumLogo(albumId, logoId, userId);
        // TODO: test validations
    }

    /**
     * Get all the custom logos of an album
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAlbumLogosTest() throws ApiException {
        BigDecimal albumId = null;
        BigDecimal userId = null;
        BigDecimal page = null;
        BigDecimal perPage = null;
        List<Picture> response = api.getAlbumLogos(albumId, userId, page, perPage);
        // TODO: test validations
    }

    /**
     * Replace a custom album logo
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void replaceAlbumLogoTest() throws ApiException {
        BigDecimal albumId = null;
        BigDecimal logoId = null;
        BigDecimal userId = null;
        ReplaceAlbumLogoRequest replaceAlbumLogoRequest = null;
        Picture response = api.replaceAlbumLogo(albumId, logoId, userId, replaceAlbumLogoRequest);
        // TODO: test validations
    }

}
