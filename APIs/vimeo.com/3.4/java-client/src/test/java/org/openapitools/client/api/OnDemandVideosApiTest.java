/*
 * Vimeo
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AddVideoToVodRequest;
import java.math.BigDecimal;
import org.openapitools.client.model.LegacyError;
import org.openapitools.client.model.OnDemandVideo;
import org.openapitools.client.model.Video;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for OnDemandVideosApi
 */
@Disabled
public class OnDemandVideosApiTest {

    private final OnDemandVideosApi api = new OnDemandVideosApi();

    /**
     * Add a video to an On Demand page
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addVideoToVodTest() throws ApiException {
        BigDecimal ondemandId = null;
        BigDecimal videoId = null;
        AddVideoToVodRequest addVideoToVodRequest = null;
        OnDemandVideo response = api.addVideoToVod(ondemandId, videoId, addVideoToVodRequest);
        // TODO: test validations
    }

    /**
     * Remove a video from an On Demand page
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteVideoFromVodTest() throws ApiException {
        BigDecimal ondemandId = null;
        BigDecimal videoId = null;
        api.deleteVideoFromVod(ondemandId, videoId);
        // TODO: test validations
    }

    /**
     * Get a specific video on an On Demand page
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getVodVideoTest() throws ApiException {
        BigDecimal ondemandId = null;
        BigDecimal videoId = null;
        Video response = api.getVodVideo(ondemandId, videoId);
        // TODO: test validations
    }

    /**
     * Get all the videos on an On Demand page
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getVodVideosTest() throws ApiException {
        BigDecimal ondemandId = null;
        String direction = null;
        String filter = null;
        BigDecimal page = null;
        BigDecimal perPage = null;
        String sort = null;
        List<Video> response = api.getVodVideos(ondemandId, direction, filter, page, perPage, sort);
        // TODO: test validations
    }

}
