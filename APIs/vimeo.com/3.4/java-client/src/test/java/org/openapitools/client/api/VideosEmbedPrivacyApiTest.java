/*
 * Vimeo
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import java.math.BigDecimal;
import org.openapitools.client.model.Domain;
import org.openapitools.client.model.LegacyError;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for VideosEmbedPrivacyApi
 */
@Disabled
public class VideosEmbedPrivacyApiTest {

    private final VideosEmbedPrivacyApi api = new VideosEmbedPrivacyApi();

    /**
     * Permit a video to be embedded on a domain
     *
     * If domain privacy is enabled for this video, this method permits the video to be embedded on the specified domain.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addVideoPrivacyDomainTest() throws ApiException {
        String domain = null;
        BigDecimal videoId = null;
        api.addVideoPrivacyDomain(domain, videoId);
        // TODO: test validations
    }

    /**
     * Restrict a video from being embedded on a domain
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteVideoPrivacyDomainTest() throws ApiException {
        String domain = null;
        BigDecimal videoId = null;
        api.deleteVideoPrivacyDomain(domain, videoId);
        // TODO: test validations
    }

    /**
     * Get all the domains on which a video can be embedded
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getVideoPrivacyDomainsTest() throws ApiException {
        BigDecimal videoId = null;
        BigDecimal page = null;
        BigDecimal perPage = null;
        List<Domain> response = api.getVideoPrivacyDomains(videoId, page, perPage);
        // TODO: test validations
    }

}
