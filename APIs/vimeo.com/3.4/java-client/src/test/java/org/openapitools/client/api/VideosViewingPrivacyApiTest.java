/*
 * Vimeo
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import java.math.BigDecimal;
import org.openapitools.client.model.LegacyError;
import org.openapitools.client.model.User;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for VideosViewingPrivacyApi
 */
@Disabled
public class VideosViewingPrivacyApiTest {

    private final VideosViewingPrivacyApi api = new VideosViewingPrivacyApi();

    /**
     * Permit a specific user to view a private video
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addVideoPrivacyUserTest() throws ApiException {
        BigDecimal userId = null;
        BigDecimal videoId = null;
        User response = api.addVideoPrivacyUser(userId, videoId);
        // TODO: test validations
    }

    /**
     * Permit a list of users to view a private video
     *
     * The body of this request should follow our [batch request format](https://developer.vimeo.com/api/common-formats#batch-requests). Each object must contain a single &#x60;URI&#x60; field, and the value of this field must be the URI of the user who can view this video.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addVideoPrivacyUsersTest() throws ApiException {
        BigDecimal videoId = null;
        List<User> response = api.addVideoPrivacyUsers(videoId);
        // TODO: test validations
    }

    /**
     * Permit a list of users to view a private video
     *
     * The body of this request should follow our [batch request format](https://developer.vimeo.com/api/common-formats#batch-requests). Each object must contain a single &#x60;URI&#x60; field, and the value of this field must be the URI of the user who can view this video.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addVideoPrivacyUsersAlt1Test() throws ApiException {
        BigDecimal channelId = null;
        BigDecimal videoId = null;
        List<User> response = api.addVideoPrivacyUsersAlt1(channelId, videoId);
        // TODO: test validations
    }

    /**
     * Restrict a user from viewing a private video
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteVideoPrivacyUserTest() throws ApiException {
        BigDecimal userId = null;
        BigDecimal videoId = null;
        api.deleteVideoPrivacyUser(userId, videoId);
        // TODO: test validations
    }

    /**
     * Get all the users who can view a user&#39;s private videos by default
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getVideoPrivacyUsersTest() throws ApiException {
        BigDecimal videoId = null;
        BigDecimal page = null;
        BigDecimal perPage = null;
        List<User> response = api.getVideoPrivacyUsers(videoId, page, perPage);
        // TODO: test validations
    }

    /**
     * Get all the users who can view a user&#39;s private videos by default
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getVideoPrivacyUsersAlt1Test() throws ApiException {
        BigDecimal channelId = null;
        BigDecimal videoId = null;
        BigDecimal page = null;
        BigDecimal perPage = null;
        List<User> response = api.getVideoPrivacyUsersAlt1(channelId, videoId, page, perPage);
        // TODO: test validations
    }

}
