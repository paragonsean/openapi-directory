/*
 * Vimeo
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AddVideosToChannelRequest;
import java.math.BigDecimal;
import org.openapitools.client.model.Channel;
import org.openapitools.client.model.LegacyError;
import org.openapitools.client.model.RemoveVideosFromChannelRequest;
import org.openapitools.client.model.Video;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ChannelsVideosApi
 */
@Disabled
public class ChannelsVideosApiTest {

    private final ChannelsVideosApi api = new ChannelsVideosApi();

    /**
     * Add a specific video to a channel
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addVideoToChannelTest() throws ApiException {
        BigDecimal channelId = null;
        BigDecimal videoId = null;
        api.addVideoToChannel(channelId, videoId);
        // TODO: test validations
    }

    /**
     * Add a list of videos to a channel
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addVideosToChannelTest() throws ApiException {
        BigDecimal channelId = null;
        AddVideosToChannelRequest addVideosToChannelRequest = null;
        api.addVideosToChannel(channelId, addVideosToChannelRequest);
        // TODO: test validations
    }

    /**
     * Remove a specific video from a channel
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteVideoFromChannelTest() throws ApiException {
        BigDecimal channelId = null;
        BigDecimal videoId = null;
        api.deleteVideoFromChannel(channelId, videoId);
        // TODO: test validations
    }

    /**
     * Get all the channels to which a user can add or remove a specific video
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAvailableVideoChannelsTest() throws ApiException {
        BigDecimal videoId = null;
        List<Channel> response = api.getAvailableVideoChannels(videoId);
        // TODO: test validations
    }

    /**
     * Get a specific video in a channel
     *
     * This method returns a specific video in a channel. You can use it to determine whether the video is in the channel.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getChannelVideoTest() throws ApiException {
        BigDecimal channelId = null;
        BigDecimal videoId = null;
        Video response = api.getChannelVideo(channelId, videoId);
        // TODO: test validations
    }

    /**
     * Get all the videos in a channel
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getChannelVideosTest() throws ApiException {
        BigDecimal channelId = null;
        String containingUri = null;
        String direction = null;
        String filter = null;
        Boolean filterEmbeddable = null;
        BigDecimal page = null;
        BigDecimal perPage = null;
        String query = null;
        String sort = null;
        List<Video> response = api.getChannelVideos(channelId, containingUri, direction, filter, filterEmbeddable, page, perPage, query, sort);
        // TODO: test validations
    }

    /**
     * Remove a list of videos from a channel
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void removeVideosFromChannelTest() throws ApiException {
        BigDecimal channelId = null;
        RemoveVideosFromChannelRequest removeVideosFromChannelRequest = null;
        Video response = api.removeVideosFromChannel(channelId, removeVideosFromChannelRequest);
        // TODO: test validations
    }

}
