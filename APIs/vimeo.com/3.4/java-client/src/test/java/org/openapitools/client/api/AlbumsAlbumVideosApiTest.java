/*
 * Vimeo
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Album;
import java.math.BigDecimal;
import org.openapitools.client.model.Error;
import org.openapitools.client.model.LegacyError;
import org.openapitools.client.model.ReplaceVideosInAlbumAlt1Request;
import org.openapitools.client.model.SetVideoAsAlbumThumbnailAlt1Request;
import org.openapitools.client.model.Video;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AlbumsAlbumVideosApi
 */
@Disabled
public class AlbumsAlbumVideosApiTest {

    private final AlbumsAlbumVideosApi api = new AlbumsAlbumVideosApi();

    /**
     * Add a specific video to an album
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addVideoToAlbumTest() throws ApiException {
        BigDecimal albumId = null;
        BigDecimal userId = null;
        BigDecimal videoId = null;
        api.addVideoToAlbum(albumId, userId, videoId);
        // TODO: test validations
    }

    /**
     * Add a specific video to an album
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addVideoToAlbumAlt1Test() throws ApiException {
        BigDecimal albumId = null;
        BigDecimal videoId = null;
        api.addVideoToAlbumAlt1(albumId, videoId);
        // TODO: test validations
    }

    /**
     * Get a specific video in an album
     *
     * This method gets a single video from an album. You can use this method to determine whether the album contains the specified video.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAlbumVideoTest() throws ApiException {
        BigDecimal albumId = null;
        BigDecimal userId = null;
        BigDecimal videoId = null;
        String password = null;
        Video response = api.getAlbumVideo(albumId, userId, videoId, password);
        // TODO: test validations
    }

    /**
     * Get a specific video in an album
     *
     * This method gets a single video from an album. You can use this method to determine whether the album contains the specified video.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAlbumVideoAlt1Test() throws ApiException {
        BigDecimal albumId = null;
        BigDecimal videoId = null;
        String password = null;
        Video response = api.getAlbumVideoAlt1(albumId, videoId, password);
        // TODO: test validations
    }

    /**
     * Get all the videos in an album
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAlbumVideosTest() throws ApiException {
        BigDecimal albumId = null;
        BigDecimal userId = null;
        String containingUri = null;
        String direction = null;
        String filter = null;
        Boolean filterEmbeddable = null;
        BigDecimal page = null;
        String password = null;
        BigDecimal perPage = null;
        String query = null;
        String sort = null;
        Boolean weakSearch = null;
        List<Video> response = api.getAlbumVideos(albumId, userId, containingUri, direction, filter, filterEmbeddable, page, password, perPage, query, sort, weakSearch);
        // TODO: test validations
    }

    /**
     * Get all the videos in an album
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAlbumVideosAlt1Test() throws ApiException {
        BigDecimal albumId = null;
        String containingUri = null;
        String direction = null;
        String filter = null;
        Boolean filterEmbeddable = null;
        BigDecimal page = null;
        String password = null;
        BigDecimal perPage = null;
        String query = null;
        String sort = null;
        Boolean weakSearch = null;
        List<Video> response = api.getAlbumVideosAlt1(albumId, containingUri, direction, filter, filterEmbeddable, page, password, perPage, query, sort, weakSearch);
        // TODO: test validations
    }

    /**
     * Remove a video from an album
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void removeVideoFromAlbumTest() throws ApiException {
        BigDecimal albumId = null;
        BigDecimal userId = null;
        BigDecimal videoId = null;
        api.removeVideoFromAlbum(albumId, userId, videoId);
        // TODO: test validations
    }

    /**
     * Remove a video from an album
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void removeVideoFromAlbumAlt1Test() throws ApiException {
        BigDecimal albumId = null;
        BigDecimal videoId = null;
        api.removeVideoFromAlbumAlt1(albumId, videoId);
        // TODO: test validations
    }

    /**
     * Replace all the videos in an album
     *
     * This method replaces all the existing videos in an album with one or more videos.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void replaceVideosInAlbumTest() throws ApiException {
        BigDecimal albumId = null;
        BigDecimal userId = null;
        ReplaceVideosInAlbumAlt1Request replaceVideosInAlbumAlt1Request = null;
        api.replaceVideosInAlbum(albumId, userId, replaceVideosInAlbumAlt1Request);
        // TODO: test validations
    }

    /**
     * Replace all the videos in an album
     *
     * This method replaces all the existing videos in an album with one or more videos.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void replaceVideosInAlbumAlt1Test() throws ApiException {
        BigDecimal albumId = null;
        ReplaceVideosInAlbumAlt1Request replaceVideosInAlbumAlt1Request = null;
        api.replaceVideosInAlbumAlt1(albumId, replaceVideosInAlbumAlt1Request);
        // TODO: test validations
    }

    /**
     * Set a video as the album thumbnail
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void setVideoAsAlbumThumbnailTest() throws ApiException {
        BigDecimal albumId = null;
        BigDecimal userId = null;
        BigDecimal videoId = null;
        SetVideoAsAlbumThumbnailAlt1Request setVideoAsAlbumThumbnailAlt1Request = null;
        Album response = api.setVideoAsAlbumThumbnail(albumId, userId, videoId, setVideoAsAlbumThumbnailAlt1Request);
        // TODO: test validations
    }

    /**
     * Set a video as the album thumbnail
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void setVideoAsAlbumThumbnailAlt1Test() throws ApiException {
        BigDecimal albumId = null;
        BigDecimal videoId = null;
        SetVideoAsAlbumThumbnailAlt1Request setVideoAsAlbumThumbnailAlt1Request = null;
        Album response = api.setVideoAsAlbumThumbnailAlt1(albumId, videoId, setVideoAsAlbumThumbnailAlt1Request);
        // TODO: test validations
    }

}
