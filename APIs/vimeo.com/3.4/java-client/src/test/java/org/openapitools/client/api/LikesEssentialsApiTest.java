/*
 * Vimeo
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import java.math.BigDecimal;
import org.openapitools.client.model.LegacyError;
import org.openapitools.client.model.User;
import org.openapitools.client.model.Video;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for LikesEssentialsApi
 */
@Disabled
public class LikesEssentialsApiTest {

    private final LikesEssentialsApi api = new LikesEssentialsApi();

    /**
     * Check if a user has liked a video
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void checkIfUserLikedVideoTest() throws ApiException {
        BigDecimal userId = null;
        BigDecimal videoId = null;
        api.checkIfUserLikedVideo(userId, videoId);
        // TODO: test validations
    }

    /**
     * Check if a user has liked a video
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void checkIfUserLikedVideoAlt1Test() throws ApiException {
        BigDecimal videoId = null;
        api.checkIfUserLikedVideoAlt1(videoId);
        // TODO: test validations
    }

    /**
     * Get all the videos that a user has liked
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getLikesTest() throws ApiException {
        BigDecimal userId = null;
        String filter = null;
        Boolean filterEmbeddable = null;
        BigDecimal page = null;
        BigDecimal perPage = null;
        String query = null;
        String sort = null;
        List<Video> response = api.getLikes(userId, filter, filterEmbeddable, page, perPage, query, sort);
        // TODO: test validations
    }

    /**
     * Get all the videos that a user has liked
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getLikesAlt1Test() throws ApiException {
        String filter = null;
        Boolean filterEmbeddable = null;
        BigDecimal page = null;
        BigDecimal perPage = null;
        String query = null;
        String sort = null;
        List<Video> response = api.getLikesAlt1(filter, filterEmbeddable, page, perPage, query, sort);
        // TODO: test validations
    }

    /**
     * Get all the users who have liked a video
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getVideoLikesTest() throws ApiException {
        BigDecimal videoId = null;
        String direction = null;
        BigDecimal page = null;
        BigDecimal perPage = null;
        String sort = null;
        List<User> response = api.getVideoLikes(videoId, direction, page, perPage, sort);
        // TODO: test validations
    }

    /**
     * Get all the users who have liked a video
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getVideoLikesAlt1Test() throws ApiException {
        BigDecimal channelId = null;
        BigDecimal videoId = null;
        String direction = null;
        BigDecimal page = null;
        BigDecimal perPage = null;
        String sort = null;
        List<User> response = api.getVideoLikesAlt1(channelId, videoId, direction, page, perPage, sort);
        // TODO: test validations
    }

    /**
     * Get all the users who have liked a video on an On Demand page
     *
     * This method gets all the users who have liked a particular video on an On Demand page.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getVodLikesTest() throws ApiException {
        BigDecimal ondemandId = null;
        String direction = null;
        String filter = null;
        BigDecimal page = null;
        BigDecimal perPage = null;
        String sort = null;
        List<User> response = api.getVodLikes(ondemandId, direction, filter, page, perPage, sort);
        // TODO: test validations
    }

    /**
     * Cause a user to like a video
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void likeVideoTest() throws ApiException {
        BigDecimal userId = null;
        BigDecimal videoId = null;
        api.likeVideo(userId, videoId);
        // TODO: test validations
    }

    /**
     * Cause a user to like a video
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void likeVideoAlt1Test() throws ApiException {
        BigDecimal videoId = null;
        api.likeVideoAlt1(videoId);
        // TODO: test validations
    }

    /**
     * Cause a user to unlike a video
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void unlikeVideoTest() throws ApiException {
        BigDecimal userId = null;
        BigDecimal videoId = null;
        api.unlikeVideo(userId, videoId);
        // TODO: test validations
    }

    /**
     * Cause a user to unlike a video
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void unlikeVideoAlt1Test() throws ApiException {
        BigDecimal videoId = null;
        api.unlikeVideoAlt1(videoId);
        // TODO: test validations
    }

}
