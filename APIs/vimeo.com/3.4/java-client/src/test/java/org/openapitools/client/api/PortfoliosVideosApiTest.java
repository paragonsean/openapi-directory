/*
 * Vimeo
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import java.math.BigDecimal;
import org.openapitools.client.model.LegacyError;
import org.openapitools.client.model.Video;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PortfoliosVideosApi
 */
@Disabled
public class PortfoliosVideosApiTest {

    private final PortfoliosVideosApi api = new PortfoliosVideosApi();

    /**
     * Add a video to a portfolio
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addVideoToPortfolioTest() throws ApiException {
        BigDecimal portfolioId = null;
        BigDecimal userId = null;
        BigDecimal videoId = null;
        api.addVideoToPortfolio(portfolioId, userId, videoId);
        // TODO: test validations
    }

    /**
     * Add a video to a portfolio
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addVideoToPortfolioAlt1Test() throws ApiException {
        BigDecimal portfolioId = null;
        BigDecimal videoId = null;
        api.addVideoToPortfolioAlt1(portfolioId, videoId);
        // TODO: test validations
    }

    /**
     * Remove a video from a portfolio
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteVideoFromPortfolioTest() throws ApiException {
        BigDecimal portfolioId = null;
        BigDecimal userId = null;
        BigDecimal videoId = null;
        api.deleteVideoFromPortfolio(portfolioId, userId, videoId);
        // TODO: test validations
    }

    /**
     * Remove a video from a portfolio
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteVideoFromPortfolioAlt1Test() throws ApiException {
        BigDecimal portfolioId = null;
        BigDecimal videoId = null;
        api.deleteVideoFromPortfolioAlt1(portfolioId, videoId);
        // TODO: test validations
    }

    /**
     * Get a specific video in a portfolio
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getPortfolioVideoTest() throws ApiException {
        BigDecimal portfolioId = null;
        BigDecimal userId = null;
        BigDecimal videoId = null;
        Video response = api.getPortfolioVideo(portfolioId, userId, videoId);
        // TODO: test validations
    }

    /**
     * Get a specific video in a portfolio
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getPortfolioVideoAlt1Test() throws ApiException {
        BigDecimal portfolioId = null;
        BigDecimal videoId = null;
        Video response = api.getPortfolioVideoAlt1(portfolioId, videoId);
        // TODO: test validations
    }

    /**
     * Get all the videos in a portfolio
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getPortfolioVideosTest() throws ApiException {
        BigDecimal portfolioId = null;
        BigDecimal userId = null;
        String containingUri = null;
        String filter = null;
        Boolean filterEmbeddable = null;
        BigDecimal page = null;
        BigDecimal perPage = null;
        String sort = null;
        List<Video> response = api.getPortfolioVideos(portfolioId, userId, containingUri, filter, filterEmbeddable, page, perPage, sort);
        // TODO: test validations
    }

    /**
     * Get all the videos in a portfolio
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getPortfolioVideosAlt1Test() throws ApiException {
        BigDecimal portfolioId = null;
        String containingUri = null;
        String filter = null;
        Boolean filterEmbeddable = null;
        BigDecimal page = null;
        BigDecimal perPage = null;
        String sort = null;
        List<Video> response = api.getPortfolioVideosAlt1(portfolioId, containingUri, filter, filterEmbeddable, page, perPage, sort);
        // TODO: test validations
    }

}
