/*
 * Vimeo
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.UserMetadataInteractionsAddPrivacyUser;
import org.openapitools.client.model.UserMetadataInteractionsBlock;
import org.openapitools.client.model.UserMetadataInteractionsFollow;
import org.openapitools.client.model.UserMetadataInteractionsReport;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * UserMetadataInteractions
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:57:19.485904-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class UserMetadataInteractions {
  public static final String SERIALIZED_NAME_ADD_PRIVACY_USER = "add_privacy_user";
  @SerializedName(SERIALIZED_NAME_ADD_PRIVACY_USER)
  private UserMetadataInteractionsAddPrivacyUser addPrivacyUser;

  public static final String SERIALIZED_NAME_BLOCK = "block";
  @SerializedName(SERIALIZED_NAME_BLOCK)
  private UserMetadataInteractionsBlock block;

  public static final String SERIALIZED_NAME_FOLLOW = "follow";
  @SerializedName(SERIALIZED_NAME_FOLLOW)
  private UserMetadataInteractionsFollow follow;

  public static final String SERIALIZED_NAME_REPORT = "report";
  @SerializedName(SERIALIZED_NAME_REPORT)
  private UserMetadataInteractionsReport report;

  public UserMetadataInteractions() {
  }

  public UserMetadataInteractions addPrivacyUser(UserMetadataInteractionsAddPrivacyUser addPrivacyUser) {
    this.addPrivacyUser = addPrivacyUser;
    return this;
  }

  /**
   * Get addPrivacyUser
   * @return addPrivacyUser
   */
  @javax.annotation.Nullable
  public UserMetadataInteractionsAddPrivacyUser getAddPrivacyUser() {
    return addPrivacyUser;
  }

  public void setAddPrivacyUser(UserMetadataInteractionsAddPrivacyUser addPrivacyUser) {
    this.addPrivacyUser = addPrivacyUser;
  }


  public UserMetadataInteractions block(UserMetadataInteractionsBlock block) {
    this.block = block;
    return this;
  }

  /**
   * Get block
   * @return block
   */
  @javax.annotation.Nonnull
  public UserMetadataInteractionsBlock getBlock() {
    return block;
  }

  public void setBlock(UserMetadataInteractionsBlock block) {
    this.block = block;
  }


  public UserMetadataInteractions follow(UserMetadataInteractionsFollow follow) {
    this.follow = follow;
    return this;
  }

  /**
   * Get follow
   * @return follow
   */
  @javax.annotation.Nonnull
  public UserMetadataInteractionsFollow getFollow() {
    return follow;
  }

  public void setFollow(UserMetadataInteractionsFollow follow) {
    this.follow = follow;
  }


  public UserMetadataInteractions report(UserMetadataInteractionsReport report) {
    this.report = report;
    return this;
  }

  /**
   * Get report
   * @return report
   */
  @javax.annotation.Nonnull
  public UserMetadataInteractionsReport getReport() {
    return report;
  }

  public void setReport(UserMetadataInteractionsReport report) {
    this.report = report;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserMetadataInteractions userMetadataInteractions = (UserMetadataInteractions) o;
    return Objects.equals(this.addPrivacyUser, userMetadataInteractions.addPrivacyUser) &&
        Objects.equals(this.block, userMetadataInteractions.block) &&
        Objects.equals(this.follow, userMetadataInteractions.follow) &&
        Objects.equals(this.report, userMetadataInteractions.report);
  }

  @Override
  public int hashCode() {
    return Objects.hash(addPrivacyUser, block, follow, report);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserMetadataInteractions {\n");
    sb.append("    addPrivacyUser: ").append(toIndentedString(addPrivacyUser)).append("\n");
    sb.append("    block: ").append(toIndentedString(block)).append("\n");
    sb.append("    follow: ").append(toIndentedString(follow)).append("\n");
    sb.append("    report: ").append(toIndentedString(report)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("add_privacy_user");
    openapiFields.add("block");
    openapiFields.add("follow");
    openapiFields.add("report");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("block");
    openapiRequiredFields.add("follow");
    openapiRequiredFields.add("report");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to UserMetadataInteractions
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!UserMetadataInteractions.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in UserMetadataInteractions is not found in the empty JSON string", UserMetadataInteractions.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!UserMetadataInteractions.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `UserMetadataInteractions` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : UserMetadataInteractions.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `add_privacy_user`
      if (jsonObj.get("add_privacy_user") != null && !jsonObj.get("add_privacy_user").isJsonNull()) {
        UserMetadataInteractionsAddPrivacyUser.validateJsonElement(jsonObj.get("add_privacy_user"));
      }
      // validate the required field `block`
      UserMetadataInteractionsBlock.validateJsonElement(jsonObj.get("block"));
      // validate the required field `follow`
      UserMetadataInteractionsFollow.validateJsonElement(jsonObj.get("follow"));
      // validate the required field `report`
      UserMetadataInteractionsReport.validateJsonElement(jsonObj.get("report"));
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!UserMetadataInteractions.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'UserMetadataInteractions' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<UserMetadataInteractions> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(UserMetadataInteractions.class));

       return (TypeAdapter<T>) new TypeAdapter<UserMetadataInteractions>() {
           @Override
           public void write(JsonWriter out, UserMetadataInteractions value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public UserMetadataInteractions read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of UserMetadataInteractions given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of UserMetadataInteractions
   * @throws IOException if the JSON string is invalid with respect to UserMetadataInteractions
   */
  public static UserMetadataInteractions fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UserMetadataInteractions.class);
  }

  /**
   * Convert an instance of UserMetadataInteractions to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

