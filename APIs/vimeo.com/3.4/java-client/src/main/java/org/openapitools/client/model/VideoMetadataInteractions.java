/*
 * Vimeo
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.VideoMetadataInteractionsBuy;
import org.openapitools.client.model.VideoMetadataInteractionsChannel;
import org.openapitools.client.model.VideoMetadataInteractionsLike;
import org.openapitools.client.model.VideoMetadataInteractionsRent;
import org.openapitools.client.model.VideoMetadataInteractionsReport;
import org.openapitools.client.model.VideoMetadataInteractionsSubscribe;
import org.openapitools.client.model.VideoMetadataInteractionsWatched;
import org.openapitools.client.model.VideoMetadataInteractionsWatchlater;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A list of resource URIs related to the video.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:57:19.485904-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class VideoMetadataInteractions {
  public static final String SERIALIZED_NAME_BUY = "buy";
  @SerializedName(SERIALIZED_NAME_BUY)
  private VideoMetadataInteractionsBuy buy;

  public static final String SERIALIZED_NAME_CHANNEL = "channel";
  @SerializedName(SERIALIZED_NAME_CHANNEL)
  private VideoMetadataInteractionsChannel channel;

  public static final String SERIALIZED_NAME_LIKE = "like";
  @SerializedName(SERIALIZED_NAME_LIKE)
  private VideoMetadataInteractionsLike like;

  public static final String SERIALIZED_NAME_RENT = "rent";
  @SerializedName(SERIALIZED_NAME_RENT)
  private VideoMetadataInteractionsRent rent;

  public static final String SERIALIZED_NAME_REPORT = "report";
  @SerializedName(SERIALIZED_NAME_REPORT)
  private VideoMetadataInteractionsReport report;

  public static final String SERIALIZED_NAME_SUBSCRIBE = "subscribe";
  @SerializedName(SERIALIZED_NAME_SUBSCRIBE)
  private VideoMetadataInteractionsSubscribe subscribe;

  public static final String SERIALIZED_NAME_WATCHED = "watched";
  @SerializedName(SERIALIZED_NAME_WATCHED)
  private VideoMetadataInteractionsWatched watched;

  public static final String SERIALIZED_NAME_WATCHLATER = "watchlater";
  @SerializedName(SERIALIZED_NAME_WATCHLATER)
  private VideoMetadataInteractionsWatchlater watchlater;

  public VideoMetadataInteractions() {
  }

  public VideoMetadataInteractions buy(VideoMetadataInteractionsBuy buy) {
    this.buy = buy;
    return this;
  }

  /**
   * Get buy
   * @return buy
   */
  @javax.annotation.Nullable
  public VideoMetadataInteractionsBuy getBuy() {
    return buy;
  }

  public void setBuy(VideoMetadataInteractionsBuy buy) {
    this.buy = buy;
  }


  public VideoMetadataInteractions channel(VideoMetadataInteractionsChannel channel) {
    this.channel = channel;
    return this;
  }

  /**
   * Get channel
   * @return channel
   */
  @javax.annotation.Nullable
  public VideoMetadataInteractionsChannel getChannel() {
    return channel;
  }

  public void setChannel(VideoMetadataInteractionsChannel channel) {
    this.channel = channel;
  }


  public VideoMetadataInteractions like(VideoMetadataInteractionsLike like) {
    this.like = like;
    return this;
  }

  /**
   * Get like
   * @return like
   */
  @javax.annotation.Nonnull
  public VideoMetadataInteractionsLike getLike() {
    return like;
  }

  public void setLike(VideoMetadataInteractionsLike like) {
    this.like = like;
  }


  public VideoMetadataInteractions rent(VideoMetadataInteractionsRent rent) {
    this.rent = rent;
    return this;
  }

  /**
   * Get rent
   * @return rent
   */
  @javax.annotation.Nullable
  public VideoMetadataInteractionsRent getRent() {
    return rent;
  }

  public void setRent(VideoMetadataInteractionsRent rent) {
    this.rent = rent;
  }


  public VideoMetadataInteractions report(VideoMetadataInteractionsReport report) {
    this.report = report;
    return this;
  }

  /**
   * Get report
   * @return report
   */
  @javax.annotation.Nonnull
  public VideoMetadataInteractionsReport getReport() {
    return report;
  }

  public void setReport(VideoMetadataInteractionsReport report) {
    this.report = report;
  }


  public VideoMetadataInteractions subscribe(VideoMetadataInteractionsSubscribe subscribe) {
    this.subscribe = subscribe;
    return this;
  }

  /**
   * Get subscribe
   * @return subscribe
   */
  @javax.annotation.Nullable
  public VideoMetadataInteractionsSubscribe getSubscribe() {
    return subscribe;
  }

  public void setSubscribe(VideoMetadataInteractionsSubscribe subscribe) {
    this.subscribe = subscribe;
  }


  public VideoMetadataInteractions watched(VideoMetadataInteractionsWatched watched) {
    this.watched = watched;
    return this;
  }

  /**
   * Get watched
   * @return watched
   */
  @javax.annotation.Nonnull
  public VideoMetadataInteractionsWatched getWatched() {
    return watched;
  }

  public void setWatched(VideoMetadataInteractionsWatched watched) {
    this.watched = watched;
  }


  public VideoMetadataInteractions watchlater(VideoMetadataInteractionsWatchlater watchlater) {
    this.watchlater = watchlater;
    return this;
  }

  /**
   * Get watchlater
   * @return watchlater
   */
  @javax.annotation.Nonnull
  public VideoMetadataInteractionsWatchlater getWatchlater() {
    return watchlater;
  }

  public void setWatchlater(VideoMetadataInteractionsWatchlater watchlater) {
    this.watchlater = watchlater;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VideoMetadataInteractions videoMetadataInteractions = (VideoMetadataInteractions) o;
    return Objects.equals(this.buy, videoMetadataInteractions.buy) &&
        Objects.equals(this.channel, videoMetadataInteractions.channel) &&
        Objects.equals(this.like, videoMetadataInteractions.like) &&
        Objects.equals(this.rent, videoMetadataInteractions.rent) &&
        Objects.equals(this.report, videoMetadataInteractions.report) &&
        Objects.equals(this.subscribe, videoMetadataInteractions.subscribe) &&
        Objects.equals(this.watched, videoMetadataInteractions.watched) &&
        Objects.equals(this.watchlater, videoMetadataInteractions.watchlater);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(buy, channel, like, rent, report, subscribe, watched, watchlater);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VideoMetadataInteractions {\n");
    sb.append("    buy: ").append(toIndentedString(buy)).append("\n");
    sb.append("    channel: ").append(toIndentedString(channel)).append("\n");
    sb.append("    like: ").append(toIndentedString(like)).append("\n");
    sb.append("    rent: ").append(toIndentedString(rent)).append("\n");
    sb.append("    report: ").append(toIndentedString(report)).append("\n");
    sb.append("    subscribe: ").append(toIndentedString(subscribe)).append("\n");
    sb.append("    watched: ").append(toIndentedString(watched)).append("\n");
    sb.append("    watchlater: ").append(toIndentedString(watchlater)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("buy");
    openapiFields.add("channel");
    openapiFields.add("like");
    openapiFields.add("rent");
    openapiFields.add("report");
    openapiFields.add("subscribe");
    openapiFields.add("watched");
    openapiFields.add("watchlater");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("buy");
    openapiRequiredFields.add("channel");
    openapiRequiredFields.add("like");
    openapiRequiredFields.add("rent");
    openapiRequiredFields.add("report");
    openapiRequiredFields.add("watched");
    openapiRequiredFields.add("watchlater");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to VideoMetadataInteractions
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!VideoMetadataInteractions.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in VideoMetadataInteractions is not found in the empty JSON string", VideoMetadataInteractions.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!VideoMetadataInteractions.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `VideoMetadataInteractions` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : VideoMetadataInteractions.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `buy`
      VideoMetadataInteractionsBuy.validateJsonElement(jsonObj.get("buy"));
      // validate the required field `channel`
      VideoMetadataInteractionsChannel.validateJsonElement(jsonObj.get("channel"));
      // validate the required field `like`
      VideoMetadataInteractionsLike.validateJsonElement(jsonObj.get("like"));
      // validate the required field `rent`
      VideoMetadataInteractionsRent.validateJsonElement(jsonObj.get("rent"));
      // validate the required field `report`
      VideoMetadataInteractionsReport.validateJsonElement(jsonObj.get("report"));
      // validate the optional field `subscribe`
      if (jsonObj.get("subscribe") != null && !jsonObj.get("subscribe").isJsonNull()) {
        VideoMetadataInteractionsSubscribe.validateJsonElement(jsonObj.get("subscribe"));
      }
      // validate the required field `watched`
      VideoMetadataInteractionsWatched.validateJsonElement(jsonObj.get("watched"));
      // validate the required field `watchlater`
      VideoMetadataInteractionsWatchlater.validateJsonElement(jsonObj.get("watchlater"));
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!VideoMetadataInteractions.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'VideoMetadataInteractions' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<VideoMetadataInteractions> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(VideoMetadataInteractions.class));

       return (TypeAdapter<T>) new TypeAdapter<VideoMetadataInteractions>() {
           @Override
           public void write(JsonWriter out, VideoMetadataInteractions value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public VideoMetadataInteractions read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of VideoMetadataInteractions given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of VideoMetadataInteractions
   * @throws IOException if the JSON string is invalid with respect to VideoMetadataInteractions
   */
  public static VideoMetadataInteractions fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, VideoMetadataInteractions.class);
  }

  /**
   * Convert an instance of VideoMetadataInteractions to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

