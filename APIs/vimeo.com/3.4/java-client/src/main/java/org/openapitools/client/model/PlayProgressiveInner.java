/*
 * Vimeo
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * PlayProgressiveInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:57:19.485904-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class PlayProgressiveInner {
  public static final String SERIALIZED_NAME_CREATED_TIME = "created_time";
  @SerializedName(SERIALIZED_NAME_CREATED_TIME)
  private String createdTime;

  public static final String SERIALIZED_NAME_FPS = "fps";
  @SerializedName(SERIALIZED_NAME_FPS)
  private BigDecimal fps;

  public static final String SERIALIZED_NAME_HEIGHT = "height";
  @SerializedName(SERIALIZED_NAME_HEIGHT)
  private BigDecimal height;

  public static final String SERIALIZED_NAME_LINK = "link";
  @SerializedName(SERIALIZED_NAME_LINK)
  private String link;

  public static final String SERIALIZED_NAME_LINK_EXPIRATION_TIME = "link_expiration_time";
  @SerializedName(SERIALIZED_NAME_LINK_EXPIRATION_TIME)
  private String linkExpirationTime;

  public static final String SERIALIZED_NAME_LOG = "log";
  @SerializedName(SERIALIZED_NAME_LOG)
  private Object log;

  public static final String SERIALIZED_NAME_MD5 = "md5";
  @SerializedName(SERIALIZED_NAME_MD5)
  private String md5;

  public static final String SERIALIZED_NAME_SIZE = "size";
  @SerializedName(SERIALIZED_NAME_SIZE)
  private BigDecimal size;

  /**
   * The type of the video file:  Option descriptions:  * &#x60;source&#x60; - The video is a source file.  * &#x60;video/mp4&#x60; - The video is in MP4 format.  * &#x60;video/webm&#x60; - The video is in WebM format.  * &#x60;vp6/x-video&#x60; - The video is in VP6 format. 
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    SOURCE("source"),
    
    VIDEO_MP4("video/mp4"),
    
    VIDEO_WEBM("video/webm"),
    
    VP6_X_VIDEO("vp6/x-video");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return TypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      TypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private TypeEnum type;

  public static final String SERIALIZED_NAME_WIDTH = "width";
  @SerializedName(SERIALIZED_NAME_WIDTH)
  private BigDecimal width;

  public PlayProgressiveInner() {
  }

  public PlayProgressiveInner createdTime(String createdTime) {
    this.createdTime = createdTime;
    return this;
  }

  /**
   * The time in ISO 8601 format when this video file was created.
   * @return createdTime
   */
  @javax.annotation.Nonnull
  public String getCreatedTime() {
    return createdTime;
  }

  public void setCreatedTime(String createdTime) {
    this.createdTime = createdTime;
  }


  public PlayProgressiveInner fps(BigDecimal fps) {
    this.fps = fps;
    return this;
  }

  /**
   * The FPS of the video file.
   * @return fps
   */
  @javax.annotation.Nonnull
  public BigDecimal getFps() {
    return fps;
  }

  public void setFps(BigDecimal fps) {
    this.fps = fps;
  }


  public PlayProgressiveInner height(BigDecimal height) {
    this.height = height;
    return this;
  }

  /**
   * The height in pixels of the video.
   * @return height
   */
  @javax.annotation.Nullable
  public BigDecimal getHeight() {
    return height;
  }

  public void setHeight(BigDecimal height) {
    this.height = height;
  }


  public PlayProgressiveInner link(String link) {
    this.link = link;
    return this;
  }

  /**
   * The direct link to this video file.
   * @return link
   */
  @javax.annotation.Nonnull
  public String getLink() {
    return link;
  }

  public void setLink(String link) {
    this.link = link;
  }


  public PlayProgressiveInner linkExpirationTime(String linkExpirationTime) {
    this.linkExpirationTime = linkExpirationTime;
    return this;
  }

  /**
   * The time in ISO 8601 format when the link to this video file expires.
   * @return linkExpirationTime
   */
  @javax.annotation.Nonnull
  public String getLinkExpirationTime() {
    return linkExpirationTime;
  }

  public void setLinkExpirationTime(String linkExpirationTime) {
    this.linkExpirationTime = linkExpirationTime;
  }


  public PlayProgressiveInner log(Object log) {
    this.log = log;
    return this;
  }

  /**
   * The URLs for logging events.
   * @return log
   */
  @javax.annotation.Nullable
  public Object getLog() {
    return log;
  }

  public void setLog(Object log) {
    this.log = log;
  }


  public PlayProgressiveInner md5(String md5) {
    this.md5 = md5;
    return this;
  }

  /**
   * The MD5 hash of the video file.
   * @return md5
   */
  @javax.annotation.Nonnull
  public String getMd5() {
    return md5;
  }

  public void setMd5(String md5) {
    this.md5 = md5;
  }


  public PlayProgressiveInner size(BigDecimal size) {
    this.size = size;
    return this;
  }

  /**
   * The file size in bytes of this video.
   * @return size
   */
  @javax.annotation.Nullable
  public BigDecimal getSize() {
    return size;
  }

  public void setSize(BigDecimal size) {
    this.size = size;
  }


  public PlayProgressiveInner type(TypeEnum type) {
    this.type = type;
    return this;
  }

  /**
   * The type of the video file:  Option descriptions:  * &#x60;source&#x60; - The video is a source file.  * &#x60;video/mp4&#x60; - The video is in MP4 format.  * &#x60;video/webm&#x60; - The video is in WebM format.  * &#x60;vp6/x-video&#x60; - The video is in VP6 format. 
   * @return type
   */
  @javax.annotation.Nullable
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }


  public PlayProgressiveInner width(BigDecimal width) {
    this.width = width;
    return this;
  }

  /**
   * The width in pixels of the video.
   * @return width
   */
  @javax.annotation.Nullable
  public BigDecimal getWidth() {
    return width;
  }

  public void setWidth(BigDecimal width) {
    this.width = width;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PlayProgressiveInner playProgressiveInner = (PlayProgressiveInner) o;
    return Objects.equals(this.createdTime, playProgressiveInner.createdTime) &&
        Objects.equals(this.fps, playProgressiveInner.fps) &&
        Objects.equals(this.height, playProgressiveInner.height) &&
        Objects.equals(this.link, playProgressiveInner.link) &&
        Objects.equals(this.linkExpirationTime, playProgressiveInner.linkExpirationTime) &&
        Objects.equals(this.log, playProgressiveInner.log) &&
        Objects.equals(this.md5, playProgressiveInner.md5) &&
        Objects.equals(this.size, playProgressiveInner.size) &&
        Objects.equals(this.type, playProgressiveInner.type) &&
        Objects.equals(this.width, playProgressiveInner.width);
  }

  @Override
  public int hashCode() {
    return Objects.hash(createdTime, fps, height, link, linkExpirationTime, log, md5, size, type, width);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PlayProgressiveInner {\n");
    sb.append("    createdTime: ").append(toIndentedString(createdTime)).append("\n");
    sb.append("    fps: ").append(toIndentedString(fps)).append("\n");
    sb.append("    height: ").append(toIndentedString(height)).append("\n");
    sb.append("    link: ").append(toIndentedString(link)).append("\n");
    sb.append("    linkExpirationTime: ").append(toIndentedString(linkExpirationTime)).append("\n");
    sb.append("    log: ").append(toIndentedString(log)).append("\n");
    sb.append("    md5: ").append(toIndentedString(md5)).append("\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    width: ").append(toIndentedString(width)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("created_time");
    openapiFields.add("fps");
    openapiFields.add("height");
    openapiFields.add("link");
    openapiFields.add("link_expiration_time");
    openapiFields.add("log");
    openapiFields.add("md5");
    openapiFields.add("size");
    openapiFields.add("type");
    openapiFields.add("width");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("created_time");
    openapiRequiredFields.add("fps");
    openapiRequiredFields.add("height");
    openapiRequiredFields.add("link");
    openapiRequiredFields.add("link_expiration_time");
    openapiRequiredFields.add("md5");
    openapiRequiredFields.add("size");
    openapiRequiredFields.add("type");
    openapiRequiredFields.add("width");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to PlayProgressiveInner
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!PlayProgressiveInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PlayProgressiveInner is not found in the empty JSON string", PlayProgressiveInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!PlayProgressiveInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `PlayProgressiveInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : PlayProgressiveInner.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("created_time").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `created_time` to be a primitive type in the JSON string but got `%s`", jsonObj.get("created_time").toString()));
      }
      if (!jsonObj.get("link").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `link` to be a primitive type in the JSON string but got `%s`", jsonObj.get("link").toString()));
      }
      if (!jsonObj.get("link_expiration_time").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `link_expiration_time` to be a primitive type in the JSON string but got `%s`", jsonObj.get("link_expiration_time").toString()));
      }
      if (!jsonObj.get("md5").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `md5` to be a primitive type in the JSON string but got `%s`", jsonObj.get("md5").toString()));
      }
      if ((jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) && !jsonObj.get("type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("type").toString()));
      }
      // validate the required field `type`
      TypeEnum.validateJsonElement(jsonObj.get("type"));
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PlayProgressiveInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PlayProgressiveInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PlayProgressiveInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PlayProgressiveInner.class));

       return (TypeAdapter<T>) new TypeAdapter<PlayProgressiveInner>() {
           @Override
           public void write(JsonWriter out, PlayProgressiveInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public PlayProgressiveInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of PlayProgressiveInner given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of PlayProgressiveInner
   * @throws IOException if the JSON string is invalid with respect to PlayProgressiveInner
   */
  public static PlayProgressiveInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PlayProgressiveInner.class);
  }

  /**
   * Convert an instance of PlayProgressiveInner to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

