/*
 * Vimeo
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * AddVideoToVodRequestRentPrice
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:57:19.485904-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AddVideoToVodRequestRentPrice {
  public static final String SERIALIZED_NAME_A_U_D = "AUD";
  @SerializedName(SERIALIZED_NAME_A_U_D)
  private BigDecimal AUD;

  public static final String SERIALIZED_NAME_C_A_D = "CAD";
  @SerializedName(SERIALIZED_NAME_C_A_D)
  private BigDecimal CAD;

  public static final String SERIALIZED_NAME_C_H_F = "CHF";
  @SerializedName(SERIALIZED_NAME_C_H_F)
  private BigDecimal CHF;

  public static final String SERIALIZED_NAME_D_K_K = "DKK";
  @SerializedName(SERIALIZED_NAME_D_K_K)
  private BigDecimal DKK;

  public static final String SERIALIZED_NAME_E_U_R = "EUR";
  @SerializedName(SERIALIZED_NAME_E_U_R)
  private BigDecimal EUR;

  public static final String SERIALIZED_NAME_G_B_P = "GBP";
  @SerializedName(SERIALIZED_NAME_G_B_P)
  private BigDecimal GBP;

  public static final String SERIALIZED_NAME_J_P_Y = "JPY";
  @SerializedName(SERIALIZED_NAME_J_P_Y)
  private BigDecimal JPY;

  public static final String SERIALIZED_NAME_K_R_W = "KRW";
  @SerializedName(SERIALIZED_NAME_K_R_W)
  private BigDecimal KRW;

  public static final String SERIALIZED_NAME_N_O_K = "NOK";
  @SerializedName(SERIALIZED_NAME_N_O_K)
  private BigDecimal NOK;

  public static final String SERIALIZED_NAME_P_L_N = "PLN";
  @SerializedName(SERIALIZED_NAME_P_L_N)
  private BigDecimal PLN;

  public static final String SERIALIZED_NAME_S_E_K = "SEK";
  @SerializedName(SERIALIZED_NAME_S_E_K)
  private BigDecimal SEK;

  public static final String SERIALIZED_NAME_U_S_D = "USD";
  @SerializedName(SERIALIZED_NAME_U_S_D)
  private BigDecimal USD;

  public AddVideoToVodRequestRentPrice() {
  }

  public AddVideoToVodRequestRentPrice AUD(BigDecimal AUD) {
    this.AUD = AUD;
    return this;
  }

  /**
   * The rental price of this video in AUD.
   * @return AUD
   */
  @javax.annotation.Nullable
  public BigDecimal getAUD() {
    return AUD;
  }

  public void setAUD(BigDecimal AUD) {
    this.AUD = AUD;
  }


  public AddVideoToVodRequestRentPrice CAD(BigDecimal CAD) {
    this.CAD = CAD;
    return this;
  }

  /**
   * The rental price of this video in CAD.
   * @return CAD
   */
  @javax.annotation.Nullable
  public BigDecimal getCAD() {
    return CAD;
  }

  public void setCAD(BigDecimal CAD) {
    this.CAD = CAD;
  }


  public AddVideoToVodRequestRentPrice CHF(BigDecimal CHF) {
    this.CHF = CHF;
    return this;
  }

  /**
   * The rental price of this video in CHF.
   * @return CHF
   */
  @javax.annotation.Nullable
  public BigDecimal getCHF() {
    return CHF;
  }

  public void setCHF(BigDecimal CHF) {
    this.CHF = CHF;
  }


  public AddVideoToVodRequestRentPrice DKK(BigDecimal DKK) {
    this.DKK = DKK;
    return this;
  }

  /**
   * The rental price of this video in DKK.
   * @return DKK
   */
  @javax.annotation.Nullable
  public BigDecimal getDKK() {
    return DKK;
  }

  public void setDKK(BigDecimal DKK) {
    this.DKK = DKK;
  }


  public AddVideoToVodRequestRentPrice EUR(BigDecimal EUR) {
    this.EUR = EUR;
    return this;
  }

  /**
   * The rental price of this video in EUR.
   * @return EUR
   */
  @javax.annotation.Nullable
  public BigDecimal getEUR() {
    return EUR;
  }

  public void setEUR(BigDecimal EUR) {
    this.EUR = EUR;
  }


  public AddVideoToVodRequestRentPrice GBP(BigDecimal GBP) {
    this.GBP = GBP;
    return this;
  }

  /**
   * The rental price of this video in GBP.
   * @return GBP
   */
  @javax.annotation.Nullable
  public BigDecimal getGBP() {
    return GBP;
  }

  public void setGBP(BigDecimal GBP) {
    this.GBP = GBP;
  }


  public AddVideoToVodRequestRentPrice JPY(BigDecimal JPY) {
    this.JPY = JPY;
    return this;
  }

  /**
   * The rental price of this video in JPY.
   * @return JPY
   */
  @javax.annotation.Nullable
  public BigDecimal getJPY() {
    return JPY;
  }

  public void setJPY(BigDecimal JPY) {
    this.JPY = JPY;
  }


  public AddVideoToVodRequestRentPrice KRW(BigDecimal KRW) {
    this.KRW = KRW;
    return this;
  }

  /**
   * The rental price of this video in KRW.
   * @return KRW
   */
  @javax.annotation.Nullable
  public BigDecimal getKRW() {
    return KRW;
  }

  public void setKRW(BigDecimal KRW) {
    this.KRW = KRW;
  }


  public AddVideoToVodRequestRentPrice NOK(BigDecimal NOK) {
    this.NOK = NOK;
    return this;
  }

  /**
   * The rental price of this video in NOK.
   * @return NOK
   */
  @javax.annotation.Nullable
  public BigDecimal getNOK() {
    return NOK;
  }

  public void setNOK(BigDecimal NOK) {
    this.NOK = NOK;
  }


  public AddVideoToVodRequestRentPrice PLN(BigDecimal PLN) {
    this.PLN = PLN;
    return this;
  }

  /**
   * The rental price of this video in PLN.
   * @return PLN
   */
  @javax.annotation.Nullable
  public BigDecimal getPLN() {
    return PLN;
  }

  public void setPLN(BigDecimal PLN) {
    this.PLN = PLN;
  }


  public AddVideoToVodRequestRentPrice SEK(BigDecimal SEK) {
    this.SEK = SEK;
    return this;
  }

  /**
   * The rental price of this video in SEK.
   * @return SEK
   */
  @javax.annotation.Nullable
  public BigDecimal getSEK() {
    return SEK;
  }

  public void setSEK(BigDecimal SEK) {
    this.SEK = SEK;
  }


  public AddVideoToVodRequestRentPrice USD(BigDecimal USD) {
    this.USD = USD;
    return this;
  }

  /**
   * The rental price of this video in USD. *Required if &#x60;rent.active&#x60; is true.
   * @return USD
   */
  @javax.annotation.Nullable
  public BigDecimal getUSD() {
    return USD;
  }

  public void setUSD(BigDecimal USD) {
    this.USD = USD;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AddVideoToVodRequestRentPrice addVideoToVodRequestRentPrice = (AddVideoToVodRequestRentPrice) o;
    return Objects.equals(this.AUD, addVideoToVodRequestRentPrice.AUD) &&
        Objects.equals(this.CAD, addVideoToVodRequestRentPrice.CAD) &&
        Objects.equals(this.CHF, addVideoToVodRequestRentPrice.CHF) &&
        Objects.equals(this.DKK, addVideoToVodRequestRentPrice.DKK) &&
        Objects.equals(this.EUR, addVideoToVodRequestRentPrice.EUR) &&
        Objects.equals(this.GBP, addVideoToVodRequestRentPrice.GBP) &&
        Objects.equals(this.JPY, addVideoToVodRequestRentPrice.JPY) &&
        Objects.equals(this.KRW, addVideoToVodRequestRentPrice.KRW) &&
        Objects.equals(this.NOK, addVideoToVodRequestRentPrice.NOK) &&
        Objects.equals(this.PLN, addVideoToVodRequestRentPrice.PLN) &&
        Objects.equals(this.SEK, addVideoToVodRequestRentPrice.SEK) &&
        Objects.equals(this.USD, addVideoToVodRequestRentPrice.USD);
  }

  @Override
  public int hashCode() {
    return Objects.hash(AUD, CAD, CHF, DKK, EUR, GBP, JPY, KRW, NOK, PLN, SEK, USD);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AddVideoToVodRequestRentPrice {\n");
    sb.append("    AUD: ").append(toIndentedString(AUD)).append("\n");
    sb.append("    CAD: ").append(toIndentedString(CAD)).append("\n");
    sb.append("    CHF: ").append(toIndentedString(CHF)).append("\n");
    sb.append("    DKK: ").append(toIndentedString(DKK)).append("\n");
    sb.append("    EUR: ").append(toIndentedString(EUR)).append("\n");
    sb.append("    GBP: ").append(toIndentedString(GBP)).append("\n");
    sb.append("    JPY: ").append(toIndentedString(JPY)).append("\n");
    sb.append("    KRW: ").append(toIndentedString(KRW)).append("\n");
    sb.append("    NOK: ").append(toIndentedString(NOK)).append("\n");
    sb.append("    PLN: ").append(toIndentedString(PLN)).append("\n");
    sb.append("    SEK: ").append(toIndentedString(SEK)).append("\n");
    sb.append("    USD: ").append(toIndentedString(USD)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("AUD");
    openapiFields.add("CAD");
    openapiFields.add("CHF");
    openapiFields.add("DKK");
    openapiFields.add("EUR");
    openapiFields.add("GBP");
    openapiFields.add("JPY");
    openapiFields.add("KRW");
    openapiFields.add("NOK");
    openapiFields.add("PLN");
    openapiFields.add("SEK");
    openapiFields.add("USD");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AddVideoToVodRequestRentPrice
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AddVideoToVodRequestRentPrice.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AddVideoToVodRequestRentPrice is not found in the empty JSON string", AddVideoToVodRequestRentPrice.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AddVideoToVodRequestRentPrice.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AddVideoToVodRequestRentPrice` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AddVideoToVodRequestRentPrice.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AddVideoToVodRequestRentPrice' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AddVideoToVodRequestRentPrice> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AddVideoToVodRequestRentPrice.class));

       return (TypeAdapter<T>) new TypeAdapter<AddVideoToVodRequestRentPrice>() {
           @Override
           public void write(JsonWriter out, AddVideoToVodRequestRentPrice value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AddVideoToVodRequestRentPrice read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AddVideoToVodRequestRentPrice given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AddVideoToVodRequestRentPrice
   * @throws IOException if the JSON string is invalid with respect to AddVideoToVodRequestRentPrice
   */
  public static AddVideoToVodRequestRentPrice fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AddVideoToVodRequestRentPrice.class);
  }

  /**
   * Convert an instance of AddVideoToVodRequestRentPrice to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

