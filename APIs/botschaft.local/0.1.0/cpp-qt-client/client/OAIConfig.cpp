/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIConfig::OAIConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIConfig::OAIConfig() {
    this->initializeModel();
}

OAIConfig::~OAIConfig() {}

void OAIConfig::initializeModel() {

    m_providers_isSet = false;
    m_providers_isValid = false;

    m_topics_isSet = false;
    m_topics_isValid = false;
}

void OAIConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIConfig::fromJsonObject(QJsonObject json) {

    m_providers_isValid = ::OpenAPI::fromJsonValue(m_providers, json[QString("providers")]);
    m_providers_isSet = !json[QString("providers")].isNull() && m_providers_isValid;

    m_topics_isValid = ::OpenAPI::fromJsonValue(m_topics, json[QString("topics")]);
    m_topics_isSet = !json[QString("topics")].isNull() && m_topics_isValid;
}

QString OAIConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_providers_isSet) {
        obj.insert(QString("providers"), ::OpenAPI::toJsonValue(m_providers));
    }
    if (m_topics.size() > 0) {
        obj.insert(QString("topics"), ::OpenAPI::toJsonValue(m_topics));
    }
    return obj;
}

OAIObject OAIConfig::getProviders() const {
    return m_providers;
}
void OAIConfig::setProviders(const OAIObject &providers) {
    m_providers = providers;
    m_providers_isSet = true;
}

bool OAIConfig::is_providers_Set() const{
    return m_providers_isSet;
}

bool OAIConfig::is_providers_Valid() const{
    return m_providers_isValid;
}

QList<QJsonValue> OAIConfig::getTopics() const {
    return m_topics;
}
void OAIConfig::setTopics(const QList<QJsonValue> &topics) {
    m_topics = topics;
    m_topics_isSet = true;
}

bool OAIConfig::is_topics_Set() const{
    return m_topics_isSet;
}

bool OAIConfig::is_topics_Valid() const{
    return m_topics_isValid;
}

bool OAIConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_providers_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_topics.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_providers_isValid && m_topics_isValid && true;
}

} // namespace OpenAPI
