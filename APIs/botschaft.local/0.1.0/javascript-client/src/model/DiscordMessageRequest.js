/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DiscordMessageRequest model module.
 * @module model/DiscordMessageRequest
 * @version 0.1.0
 */
class DiscordMessageRequest {
    /**
     * Constructs a new <code>DiscordMessageRequest</code>.
     * @alias module:model/DiscordMessageRequest
     * @param channel {String} 
     */
    constructor(channel) { 
        
        DiscordMessageRequest.initialize(this, channel);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, channel) { 
        obj['channel'] = channel;
    }

    /**
     * Constructs a <code>DiscordMessageRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DiscordMessageRequest} obj Optional instance to populate.
     * @return {module:model/DiscordMessageRequest} The populated <code>DiscordMessageRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DiscordMessageRequest();

            if (data.hasOwnProperty('base64_message')) {
                obj['base64_message'] = ApiClient.convertToType(data['base64_message'], 'String');
            }
            if (data.hasOwnProperty('channel')) {
                obj['channel'] = ApiClient.convertToType(data['channel'], 'String');
            }
            if (data.hasOwnProperty('message')) {
                obj['message'] = ApiClient.convertToType(data['message'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DiscordMessageRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DiscordMessageRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of DiscordMessageRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['base64_message'] && !(typeof data['base64_message'] === 'string' || data['base64_message'] instanceof String)) {
            throw new Error("Expected the field `base64_message` to be a primitive type in the JSON string but got " + data['base64_message']);
        }
        // ensure the json data is a string
        if (data['channel'] && !(typeof data['channel'] === 'string' || data['channel'] instanceof String)) {
            throw new Error("Expected the field `channel` to be a primitive type in the JSON string but got " + data['channel']);
        }
        // ensure the json data is a string
        if (data['message'] && !(typeof data['message'] === 'string' || data['message'] instanceof String)) {
            throw new Error("Expected the field `message` to be a primitive type in the JSON string but got " + data['message']);
        }

        return true;
    }


}

DiscordMessageRequest.RequiredProperties = ["channel"];

/**
 * @member {String} base64_message
 */
DiscordMessageRequest.prototype['base64_message'] = undefined;

/**
 * @member {String} channel
 */
DiscordMessageRequest.prototype['channel'] = undefined;

/**
 * @member {String} message
 */
DiscordMessageRequest.prototype['message'] = undefined;






export default DiscordMessageRequest;

