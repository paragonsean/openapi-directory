/**
 * Open Skills API
 * A complete and standard data store for canonical and emerging skills, knowledge, abilities, tools, technolgies, and how they relate to jobs.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The NormalizedJob model module.
 * @module model/NormalizedJob
 * @version 1.0
 */
class NormalizedJob {
    /**
     * Constructs a new <code>NormalizedJob</code>.
     * @alias module:model/NormalizedJob
     */
    constructor() { 
        
        NormalizedJob.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>NormalizedJob</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/NormalizedJob} obj Optional instance to populate.
     * @return {module:model/NormalizedJob} The populated <code>NormalizedJob</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new NormalizedJob();

            if (data.hasOwnProperty('parent_uuid')) {
                obj['parent_uuid'] = ApiClient.convertToType(data['parent_uuid'], 'String');
            }
            if (data.hasOwnProperty('relevance_score')) {
                obj['relevance_score'] = ApiClient.convertToType(data['relevance_score'], 'String');
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('uuid')) {
                obj['uuid'] = ApiClient.convertToType(data['uuid'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>NormalizedJob</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>NormalizedJob</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['parent_uuid'] && !(typeof data['parent_uuid'] === 'string' || data['parent_uuid'] instanceof String)) {
            throw new Error("Expected the field `parent_uuid` to be a primitive type in the JSON string but got " + data['parent_uuid']);
        }
        // ensure the json data is a string
        if (data['relevance_score'] && !(typeof data['relevance_score'] === 'string' || data['relevance_score'] instanceof String)) {
            throw new Error("Expected the field `relevance_score` to be a primitive type in the JSON string but got " + data['relevance_score']);
        }
        // ensure the json data is a string
        if (data['title'] && !(typeof data['title'] === 'string' || data['title'] instanceof String)) {
            throw new Error("Expected the field `title` to be a primitive type in the JSON string but got " + data['title']);
        }
        // ensure the json data is a string
        if (data['uuid'] && !(typeof data['uuid'] === 'string' || data['uuid'] instanceof String)) {
            throw new Error("Expected the field `uuid` to be a primitive type in the JSON string but got " + data['uuid']);
        }

        return true;
    }


}



/**
 * Universal Unique Identifier for the canonical job title
 * @member {String} parent_uuid
 */
NormalizedJob.prototype['parent_uuid'] = undefined;

/**
 * Relevance score for job title.
 * @member {String} relevance_score
 */
NormalizedJob.prototype['relevance_score'] = undefined;

/**
 * Job title for the synonymous job title
 * @member {String} title
 */
NormalizedJob.prototype['title'] = undefined;

/**
 * Universally Unique Identifier for the synonymous job title
 * @member {String} uuid
 */
NormalizedJob.prototype['uuid'] = undefined;






export default NormalizedJob;

