/**
 * Open Skills API
 * A complete and standard data store for canonical and emerging skills, knowledge, abilities, tools, technolgies, and how they relate to jobs.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIJobSkills.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIJobSkills::OAIJobSkills(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIJobSkills::OAIJobSkills() {
    this->initializeModel();
}

OAIJobSkills::~OAIJobSkills() {}

void OAIJobSkills::initializeModel() {

    m_job_title_isSet = false;
    m_job_title_isValid = false;

    m_job_uuid_isSet = false;
    m_job_uuid_isValid = false;

    m_normalized_job_title_isSet = false;
    m_normalized_job_title_isValid = false;

    m_skills_isSet = false;
    m_skills_isValid = false;
}

void OAIJobSkills::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIJobSkills::fromJsonObject(QJsonObject json) {

    m_job_title_isValid = ::OpenAPI::fromJsonValue(m_job_title, json[QString("job_title")]);
    m_job_title_isSet = !json[QString("job_title")].isNull() && m_job_title_isValid;

    m_job_uuid_isValid = ::OpenAPI::fromJsonValue(m_job_uuid, json[QString("job_uuid")]);
    m_job_uuid_isSet = !json[QString("job_uuid")].isNull() && m_job_uuid_isValid;

    m_normalized_job_title_isValid = ::OpenAPI::fromJsonValue(m_normalized_job_title, json[QString("normalized_job_title")]);
    m_normalized_job_title_isSet = !json[QString("normalized_job_title")].isNull() && m_normalized_job_title_isValid;

    m_skills_isValid = ::OpenAPI::fromJsonValue(m_skills, json[QString("skills")]);
    m_skills_isSet = !json[QString("skills")].isNull() && m_skills_isValid;
}

QString OAIJobSkills::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIJobSkills::asJsonObject() const {
    QJsonObject obj;
    if (m_job_title_isSet) {
        obj.insert(QString("job_title"), ::OpenAPI::toJsonValue(m_job_title));
    }
    if (m_job_uuid_isSet) {
        obj.insert(QString("job_uuid"), ::OpenAPI::toJsonValue(m_job_uuid));
    }
    if (m_normalized_job_title_isSet) {
        obj.insert(QString("normalized_job_title"), ::OpenAPI::toJsonValue(m_normalized_job_title));
    }
    if (m_skills.size() > 0) {
        obj.insert(QString("skills"), ::OpenAPI::toJsonValue(m_skills));
    }
    return obj;
}

QString OAIJobSkills::getJobTitle() const {
    return m_job_title;
}
void OAIJobSkills::setJobTitle(const QString &job_title) {
    m_job_title = job_title;
    m_job_title_isSet = true;
}

bool OAIJobSkills::is_job_title_Set() const{
    return m_job_title_isSet;
}

bool OAIJobSkills::is_job_title_Valid() const{
    return m_job_title_isValid;
}

QString OAIJobSkills::getJobUuid() const {
    return m_job_uuid;
}
void OAIJobSkills::setJobUuid(const QString &job_uuid) {
    m_job_uuid = job_uuid;
    m_job_uuid_isSet = true;
}

bool OAIJobSkills::is_job_uuid_Set() const{
    return m_job_uuid_isSet;
}

bool OAIJobSkills::is_job_uuid_Valid() const{
    return m_job_uuid_isValid;
}

QString OAIJobSkills::getNormalizedJobTitle() const {
    return m_normalized_job_title;
}
void OAIJobSkills::setNormalizedJobTitle(const QString &normalized_job_title) {
    m_normalized_job_title = normalized_job_title;
    m_normalized_job_title_isSet = true;
}

bool OAIJobSkills::is_normalized_job_title_Set() const{
    return m_normalized_job_title_isSet;
}

bool OAIJobSkills::is_normalized_job_title_Valid() const{
    return m_normalized_job_title_isValid;
}

QList<OAISkillJob> OAIJobSkills::getSkills() const {
    return m_skills;
}
void OAIJobSkills::setSkills(const QList<OAISkillJob> &skills) {
    m_skills = skills;
    m_skills_isSet = true;
}

bool OAIJobSkills::is_skills_Set() const{
    return m_skills_isSet;
}

bool OAIJobSkills::is_skills_Valid() const{
    return m_skills_isValid;
}

bool OAIJobSkills::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_job_title_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_job_uuid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_normalized_job_title_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_skills.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIJobSkills::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
