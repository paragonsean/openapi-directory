# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class JobSkill(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, importance: float=None, job_title: str=None, job_uuid: str=None, level: float=None, normalized_job_title: str=None):
        """JobSkill - a model defined in OpenAPI

        :param importance: The importance of this JobSkill.
        :param job_title: The job_title of this JobSkill.
        :param job_uuid: The job_uuid of this JobSkill.
        :param level: The level of this JobSkill.
        :param normalized_job_title: The normalized_job_title of this JobSkill.
        """
        self.openapi_types = {
            'importance': float,
            'job_title': str,
            'job_uuid': str,
            'level': float,
            'normalized_job_title': str
        }

        self.attribute_map = {
            'importance': 'importance',
            'job_title': 'job_title',
            'job_uuid': 'job_uuid',
            'level': 'level',
            'normalized_job_title': 'normalized_job_title'
        }

        self._importance = importance
        self._job_title = job_title
        self._job_uuid = job_uuid
        self._level = level
        self._normalized_job_title = normalized_job_title

    @classmethod
    def from_dict(cls, dikt: dict) -> 'JobSkill':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The JobSkill of this JobSkill.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def importance(self):
        """Gets the importance of this JobSkill.

        O*NET importance score indicating how important skill is to job.

        :return: The importance of this JobSkill.
        :rtype: float
        """
        return self._importance

    @importance.setter
    def importance(self, importance):
        """Sets the importance of this JobSkill.

        O*NET importance score indicating how important skill is to job.

        :param importance: The importance of this JobSkill.
        :type importance: float
        """

        self._importance = importance

    @property
    def job_title(self):
        """Gets the job_title of this JobSkill.

        Job title

        :return: The job_title of this JobSkill.
        :rtype: str
        """
        return self._job_title

    @job_title.setter
    def job_title(self, job_title):
        """Sets the job_title of this JobSkill.

        Job title

        :param job_title: The job_title of this JobSkill.
        :type job_title: str
        """

        self._job_title = job_title

    @property
    def job_uuid(self):
        """Gets the job_uuid of this JobSkill.

        Universally Unique Identifier for the job

        :return: The job_uuid of this JobSkill.
        :rtype: str
        """
        return self._job_uuid

    @job_uuid.setter
    def job_uuid(self, job_uuid):
        """Sets the job_uuid of this JobSkill.

        Universally Unique Identifier for the job

        :param job_uuid: The job_uuid of this JobSkill.
        :type job_uuid: str
        """

        self._job_uuid = job_uuid

    @property
    def level(self):
        """Gets the level of this JobSkill.

        O*NET level score indicating the skill level required for the job.

        :return: The level of this JobSkill.
        :rtype: float
        """
        return self._level

    @level.setter
    def level(self, level):
        """Sets the level of this JobSkill.

        O*NET level score indicating the skill level required for the job.

        :param level: The level of this JobSkill.
        :type level: float
        """

        self._level = level

    @property
    def normalized_job_title(self):
        """Gets the normalized_job_title of this JobSkill.

        Normalized job title

        :return: The normalized_job_title of this JobSkill.
        :rtype: str
        """
        return self._normalized_job_title

    @normalized_job_title.setter
    def normalized_job_title(self, normalized_job_title):
        """Sets the normalized_job_title of this JobSkill.

        Normalized job title

        :param normalized_job_title: The normalized_job_title of this JobSkill.
        :type normalized_job_title: str
        """

        self._normalized_job_title = normalized_job_title
