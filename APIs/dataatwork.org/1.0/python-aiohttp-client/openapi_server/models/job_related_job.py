# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class JobRelatedJob(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, parent_uuid: str=None, title: str=None, uuid: str=None):
        """JobRelatedJob - a model defined in OpenAPI

        :param parent_uuid: The parent_uuid of this JobRelatedJob.
        :param title: The title of this JobRelatedJob.
        :param uuid: The uuid of this JobRelatedJob.
        """
        self.openapi_types = {
            'parent_uuid': str,
            'title': str,
            'uuid': str
        }

        self.attribute_map = {
            'parent_uuid': 'parent_uuid',
            'title': 'title',
            'uuid': 'uuid'
        }

        self._parent_uuid = parent_uuid
        self._title = title
        self._uuid = uuid

    @classmethod
    def from_dict(cls, dikt: dict) -> 'JobRelatedJob':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The JobRelatedJob of this JobRelatedJob.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def parent_uuid(self):
        """Gets the parent_uuid of this JobRelatedJob.

        Universally Unique Identifier for the job's canonical job title

        :return: The parent_uuid of this JobRelatedJob.
        :rtype: str
        """
        return self._parent_uuid

    @parent_uuid.setter
    def parent_uuid(self, parent_uuid):
        """Sets the parent_uuid of this JobRelatedJob.

        Universally Unique Identifier for the job's canonical job title

        :param parent_uuid: The parent_uuid of this JobRelatedJob.
        :type parent_uuid: str
        """

        self._parent_uuid = parent_uuid

    @property
    def title(self):
        """Gets the title of this JobRelatedJob.

        Job title

        :return: The title of this JobRelatedJob.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this JobRelatedJob.

        Job title

        :param title: The title of this JobRelatedJob.
        :type title: str
        """

        self._title = title

    @property
    def uuid(self):
        """Gets the uuid of this JobRelatedJob.

        Universally Unique Identifier for the job

        :return: The uuid of this JobRelatedJob.
        :rtype: str
        """
        return self._uuid

    @uuid.setter
    def uuid(self, uuid):
        """Sets the uuid of this JobRelatedJob.

        Universally Unique Identifier for the job

        :param uuid: The uuid of this JobRelatedJob.
        :type uuid: str
        """

        self._uuid = uuid
