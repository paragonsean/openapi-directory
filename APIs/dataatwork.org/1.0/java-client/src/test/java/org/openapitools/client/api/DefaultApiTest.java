/*
 * Open Skills API
 * A complete and standard data store for canonical and emerging skills, knowledge, abilities, tools, technolgies, and how they relate to jobs.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Error;
import org.openapitools.client.model.Job;
import org.openapitools.client.model.JobRelatedJobs;
import org.openapitools.client.model.JobSkills;
import org.openapitools.client.model.NormalizedJob;
import org.openapitools.client.model.NormalizedSkill;
import org.openapitools.client.model.Skill;
import org.openapitools.client.model.SkillJobs;
import org.openapitools.client.model.SkillRelatedSkills;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DefaultApi
 */
@Disabled
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    /**
     * Job Title Autocomplete
     *
     * Retrieves the names, descriptions, and UUIDs of all job titles matching a given search criteria.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void jobsAutocompleteGetTest() throws ApiException {
        String beginsWith = null;
        String contains = null;
        String endsWith = null;
        List<Job> response = api.jobsAutocompleteGet(beginsWith, contains, endsWith);
        // TODO: test validations
    }

    /**
     * Job Titles and Descriptions
     *
     * Retrieves the names, descriptions, and UUIDs of all job titles.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void jobsGetTest() throws ApiException {
        Integer offset = null;
        Integer limit = null;
        List<Job> response = api.jobsGet(offset, limit);
        // TODO: test validations
    }

    /**
     * Job Title and Description
     *
     * Retrieves the name, description, and UUID of a job by specifying its O*NET SOC Code or UUID.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void jobsIdGetTest() throws ApiException {
        String id = null;
        String fips = null;
        Job response = api.jobsIdGet(id, fips);
        // TODO: test validations
    }

    /**
     * Jobs Associated with a Job
     *
     * Retrieves a collection of jobs associated with a specified job.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void jobsIdRelatedJobsGetTest() throws ApiException {
        String id = null;
        JobRelatedJobs response = api.jobsIdRelatedJobsGet(id);
        // TODO: test validations
    }

    /**
     * Skills Associated with a Job
     *
     * Retrieves a collection of skills associated with a specified job.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void jobsIdRelatedSkillsGetTest() throws ApiException {
        String id = null;
        JobSkills response = api.jobsIdRelatedSkillsGet(id);
        // TODO: test validations
    }

    /**
     * Job Title Normalization
     *
     * Retrieves the canonical job title for a synonymous job title
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void jobsNormalizeGetTest() throws ApiException {
        String jobTitle = null;
        Integer limit = null;
        List<NormalizedJob> response = api.jobsNormalizeGet(jobTitle, limit);
        // TODO: test validations
    }

    /**
     * Unusual Job Titles
     *
     * Retrieves a list of unusual job titles and the UUIDs of their canonical jobs.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void jobsUnusualTitlesGetTest() throws ApiException {
        List<NormalizedJob> response = api.jobsUnusualTitlesGet();
        // TODO: test validations
    }

    /**
     * Skill Name Autocomplete
     *
     * Retrieves the names, descriptions, and UUIDs of all skills matching a given search criteria.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void skillsAutocompleteGetTest() throws ApiException {
        String beginsWith = null;
        String contains = null;
        String endsWith = null;
        SkillJobs response = api.skillsAutocompleteGet(beginsWith, contains, endsWith);
        // TODO: test validations
    }

    /**
     * Skill Names and Descriptions
     *
     * Retrieve the names, descriptions, and UUIDs of all skills.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void skillsGetTest() throws ApiException {
        Integer offset = null;
        Integer limit = null;
        List<Skill> response = api.skillsGet(offset, limit);
        // TODO: test validations
    }

    /**
     * Skill Name and Description
     *
     * Retrieves the name, description, and UUID of a job by specifying its UUID.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void skillsIdGetTest() throws ApiException {
        String id = null;
        Skill response = api.skillsIdGet(id);
        // TODO: test validations
    }

    /**
     * Jobs Associated with a Skill
     *
     * Retrieves a collection of jobs associated with a specified skill.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void skillsIdRelatedJobsGetTest() throws ApiException {
        String id = null;
        SkillJobs response = api.skillsIdRelatedJobsGet(id);
        // TODO: test validations
    }

    /**
     * Skills Associated with a Skill
     *
     * Retrieves a collection of skills associated with a specified skill.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void skillsIdRelatedSkillsGetTest() throws ApiException {
        String id = null;
        SkillRelatedSkills response = api.skillsIdRelatedSkillsGet(id);
        // TODO: test validations
    }

    /**
     * Skill Name Normalization
     *
     * Retrieves the canonical skill name for a synonymous skill name
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void skillsNormalizeGetTest() throws ApiException {
        String skillName = null;
        List<NormalizedSkill> response = api.skillsNormalizeGet(skillName);
        // TODO: test validations
    }

}
