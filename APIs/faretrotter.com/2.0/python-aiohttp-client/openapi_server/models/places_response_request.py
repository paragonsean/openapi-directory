# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.places_response_request_fields import PlacesResponseRequestFields
from openapi_server import util


class PlacesResponseRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, distance_miles: float=None, endpoint: str=None, environment: str=None, fields: PlacesResponseRequestFields=None, version: str=None):
        """PlacesResponseRequest - a model defined in OpenAPI

        :param distance_miles: The distance_miles of this PlacesResponseRequest.
        :param endpoint: The endpoint of this PlacesResponseRequest.
        :param environment: The environment of this PlacesResponseRequest.
        :param fields: The fields of this PlacesResponseRequest.
        :param version: The version of this PlacesResponseRequest.
        """
        self.openapi_types = {
            'distance_miles': float,
            'endpoint': str,
            'environment': str,
            'fields': PlacesResponseRequestFields,
            'version': str
        }

        self.attribute_map = {
            'distance_miles': 'distance_miles',
            'endpoint': 'endpoint',
            'environment': 'environment',
            'fields': 'fields',
            'version': 'version'
        }

        self._distance_miles = distance_miles
        self._endpoint = endpoint
        self._environment = environment
        self._fields = fields
        self._version = version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PlacesResponseRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PlacesResponse_request of this PlacesResponseRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def distance_miles(self):
        """Gets the distance_miles of this PlacesResponseRequest.


        :return: The distance_miles of this PlacesResponseRequest.
        :rtype: float
        """
        return self._distance_miles

    @distance_miles.setter
    def distance_miles(self, distance_miles):
        """Sets the distance_miles of this PlacesResponseRequest.


        :param distance_miles: The distance_miles of this PlacesResponseRequest.
        :type distance_miles: float
        """
        if distance_miles is None:
            raise ValueError("Invalid value for `distance_miles`, must not be `None`")

        self._distance_miles = distance_miles

    @property
    def endpoint(self):
        """Gets the endpoint of this PlacesResponseRequest.


        :return: The endpoint of this PlacesResponseRequest.
        :rtype: str
        """
        return self._endpoint

    @endpoint.setter
    def endpoint(self, endpoint):
        """Sets the endpoint of this PlacesResponseRequest.


        :param endpoint: The endpoint of this PlacesResponseRequest.
        :type endpoint: str
        """
        if endpoint is None:
            raise ValueError("Invalid value for `endpoint`, must not be `None`")

        self._endpoint = endpoint

    @property
    def environment(self):
        """Gets the environment of this PlacesResponseRequest.


        :return: The environment of this PlacesResponseRequest.
        :rtype: str
        """
        return self._environment

    @environment.setter
    def environment(self, environment):
        """Sets the environment of this PlacesResponseRequest.


        :param environment: The environment of this PlacesResponseRequest.
        :type environment: str
        """
        if environment is None:
            raise ValueError("Invalid value for `environment`, must not be `None`")

        self._environment = environment

    @property
    def fields(self):
        """Gets the fields of this PlacesResponseRequest.


        :return: The fields of this PlacesResponseRequest.
        :rtype: PlacesResponseRequestFields
        """
        return self._fields

    @fields.setter
    def fields(self, fields):
        """Sets the fields of this PlacesResponseRequest.


        :param fields: The fields of this PlacesResponseRequest.
        :type fields: PlacesResponseRequestFields
        """
        if fields is None:
            raise ValueError("Invalid value for `fields`, must not be `None`")

        self._fields = fields

    @property
    def version(self):
        """Gets the version of this PlacesResponseRequest.


        :return: The version of this PlacesResponseRequest.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this PlacesResponseRequest.


        :param version: The version of this PlacesResponseRequest.
        :type version: str
        """
        if version is None:
            raise ValueError("Invalid value for `version`, must not be `None`")

        self._version = version
