/**
 * Faretrotter Travel API
 * Multimodal travel API to return modes of transportation between cities and points of interest.
 *
 * The version of the OpenAPI document: 2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPlacesResponse_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPlacesResponse_request::OAIPlacesResponse_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPlacesResponse_request::OAIPlacesResponse_request() {
    this->initializeModel();
}

OAIPlacesResponse_request::~OAIPlacesResponse_request() {}

void OAIPlacesResponse_request::initializeModel() {

    m_distance_miles_isSet = false;
    m_distance_miles_isValid = false;

    m_endpoint_isSet = false;
    m_endpoint_isValid = false;

    m_environment_isSet = false;
    m_environment_isValid = false;

    m_fields_isSet = false;
    m_fields_isValid = false;

    m_version_isSet = false;
    m_version_isValid = false;
}

void OAIPlacesResponse_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPlacesResponse_request::fromJsonObject(QJsonObject json) {

    m_distance_miles_isValid = ::OpenAPI::fromJsonValue(m_distance_miles, json[QString("distance_miles")]);
    m_distance_miles_isSet = !json[QString("distance_miles")].isNull() && m_distance_miles_isValid;

    m_endpoint_isValid = ::OpenAPI::fromJsonValue(m_endpoint, json[QString("endpoint")]);
    m_endpoint_isSet = !json[QString("endpoint")].isNull() && m_endpoint_isValid;

    m_environment_isValid = ::OpenAPI::fromJsonValue(m_environment, json[QString("environment")]);
    m_environment_isSet = !json[QString("environment")].isNull() && m_environment_isValid;

    m_fields_isValid = ::OpenAPI::fromJsonValue(m_fields, json[QString("fields")]);
    m_fields_isSet = !json[QString("fields")].isNull() && m_fields_isValid;

    m_version_isValid = ::OpenAPI::fromJsonValue(m_version, json[QString("version")]);
    m_version_isSet = !json[QString("version")].isNull() && m_version_isValid;
}

QString OAIPlacesResponse_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPlacesResponse_request::asJsonObject() const {
    QJsonObject obj;
    if (m_distance_miles_isSet) {
        obj.insert(QString("distance_miles"), ::OpenAPI::toJsonValue(m_distance_miles));
    }
    if (m_endpoint_isSet) {
        obj.insert(QString("endpoint"), ::OpenAPI::toJsonValue(m_endpoint));
    }
    if (m_environment_isSet) {
        obj.insert(QString("environment"), ::OpenAPI::toJsonValue(m_environment));
    }
    if (m_fields.isSet()) {
        obj.insert(QString("fields"), ::OpenAPI::toJsonValue(m_fields));
    }
    if (m_version_isSet) {
        obj.insert(QString("version"), ::OpenAPI::toJsonValue(m_version));
    }
    return obj;
}

double OAIPlacesResponse_request::getDistanceMiles() const {
    return m_distance_miles;
}
void OAIPlacesResponse_request::setDistanceMiles(const double &distance_miles) {
    m_distance_miles = distance_miles;
    m_distance_miles_isSet = true;
}

bool OAIPlacesResponse_request::is_distance_miles_Set() const{
    return m_distance_miles_isSet;
}

bool OAIPlacesResponse_request::is_distance_miles_Valid() const{
    return m_distance_miles_isValid;
}

QString OAIPlacesResponse_request::getEndpoint() const {
    return m_endpoint;
}
void OAIPlacesResponse_request::setEndpoint(const QString &endpoint) {
    m_endpoint = endpoint;
    m_endpoint_isSet = true;
}

bool OAIPlacesResponse_request::is_endpoint_Set() const{
    return m_endpoint_isSet;
}

bool OAIPlacesResponse_request::is_endpoint_Valid() const{
    return m_endpoint_isValid;
}

QString OAIPlacesResponse_request::getEnvironment() const {
    return m_environment;
}
void OAIPlacesResponse_request::setEnvironment(const QString &environment) {
    m_environment = environment;
    m_environment_isSet = true;
}

bool OAIPlacesResponse_request::is_environment_Set() const{
    return m_environment_isSet;
}

bool OAIPlacesResponse_request::is_environment_Valid() const{
    return m_environment_isValid;
}

OAIPlacesResponse_request_fields OAIPlacesResponse_request::getFields() const {
    return m_fields;
}
void OAIPlacesResponse_request::setFields(const OAIPlacesResponse_request_fields &fields) {
    m_fields = fields;
    m_fields_isSet = true;
}

bool OAIPlacesResponse_request::is_fields_Set() const{
    return m_fields_isSet;
}

bool OAIPlacesResponse_request::is_fields_Valid() const{
    return m_fields_isValid;
}

QString OAIPlacesResponse_request::getVersion() const {
    return m_version;
}
void OAIPlacesResponse_request::setVersion(const QString &version) {
    m_version = version;
    m_version_isSet = true;
}

bool OAIPlacesResponse_request::is_version_Set() const{
    return m_version_isSet;
}

bool OAIPlacesResponse_request::is_version_Valid() const{
    return m_version_isValid;
}

bool OAIPlacesResponse_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_distance_miles_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_endpoint_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_environment_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fields.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_version_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPlacesResponse_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_distance_miles_isValid && m_endpoint_isValid && m_environment_isValid && m_fields_isValid && m_version_isValid && true;
}

} // namespace OpenAPI
