/**
 * Faretrotter Travel API
 * Multimodal travel API to return modes of transportation between cities and points of interest.
 *
 * The version of the OpenAPI document: 2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRoutesResponse_data.h
 *
 * 
 */

#ifndef OAIRoutesResponse_data_H
#define OAIRoutesResponse_data_H

#include <QJsonObject>

#include "OAIPlaceResponse.h"
#include "OAIRoutesResponse_data_operators_inner.h"
#include "OAIRoutesResponse_data_routes_inner.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIRoutesResponse_data_operators_inner;
class OAIPlaceResponse;
class OAIRoutesResponse_data_routes_inner;

class OAIRoutesResponse_data : public OAIObject {
public:
    OAIRoutesResponse_data();
    OAIRoutesResponse_data(QString json);
    ~OAIRoutesResponse_data() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIRoutesResponse_data_operators_inner> getOperators() const;
    void setOperators(const QList<OAIRoutesResponse_data_operators_inner> &operators);
    bool is_operators_Set() const;
    bool is_operators_Valid() const;

    QList<OAIPlaceResponse> getPlaces() const;
    void setPlaces(const QList<OAIPlaceResponse> &places);
    bool is_places_Set() const;
    bool is_places_Valid() const;

    QList<OAIRoutesResponse_data_routes_inner> getRoutes() const;
    void setRoutes(const QList<OAIRoutesResponse_data_routes_inner> &routes);
    bool is_routes_Set() const;
    bool is_routes_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIRoutesResponse_data_operators_inner> m_operators;
    bool m_operators_isSet;
    bool m_operators_isValid;

    QList<OAIPlaceResponse> m_places;
    bool m_places_isSet;
    bool m_places_isValid;

    QList<OAIRoutesResponse_data_routes_inner> m_routes;
    bool m_routes_isSet;
    bool m_routes_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRoutesResponse_data)

#endif // OAIRoutesResponse_data_H
