/**
 * Faretrotter Travel API
 * Multimodal travel API to return modes of transportation between cities and points of interest.
 *
 * The version of the OpenAPI document: 2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRoutesResponse_data_routes_inner.h
 *
 * 
 */

#ifndef OAIRoutesResponse_data_routes_inner_H
#define OAIRoutesResponse_data_routes_inner_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIRoutesResponse_data_routes_inner : public OAIObject {
public:
    OAIRoutesResponse_data_routes_inner();
    OAIRoutesResponse_data_routes_inner(QString json);
    ~OAIRoutesResponse_data_routes_inner() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getCo2() const;
    void setCo2(const double &co2);
    bool is_co2_Set() const;
    bool is_co2_Valid() const;

    QString getDestinationId() const;
    void setDestinationId(const QString &destination_id);
    bool is_destination_id_Set() const;
    bool is_destination_id_Valid() const;

    double getDuration() const;
    void setDuration(const double &duration);
    bool is_duration_Set() const;
    bool is_duration_Valid() const;

    double getFare() const;
    void setFare(const double &fare);
    bool is_fare_Set() const;
    bool is_fare_Valid() const;

    QString getMode() const;
    void setMode(const QString &mode);
    bool is_mode_Set() const;
    bool is_mode_Valid() const;

    QString getOriginId() const;
    void setOriginId(const QString &origin_id);
    bool is_origin_id_Set() const;
    bool is_origin_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_co2;
    bool m_co2_isSet;
    bool m_co2_isValid;

    QString m_destination_id;
    bool m_destination_id_isSet;
    bool m_destination_id_isValid;

    double m_duration;
    bool m_duration_isSet;
    bool m_duration_isValid;

    double m_fare;
    bool m_fare_isSet;
    bool m_fare_isValid;

    QString m_mode;
    bool m_mode_isSet;
    bool m_mode_isValid;

    QString m_origin_id;
    bool m_origin_id_isSet;
    bool m_origin_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRoutesResponse_data_routes_inner)

#endif // OAIRoutesResponse_data_routes_inner_H
