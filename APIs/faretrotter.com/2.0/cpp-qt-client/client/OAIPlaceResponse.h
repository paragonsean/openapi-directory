/**
 * Faretrotter Travel API
 * Multimodal travel API to return modes of transportation between cities and points of interest.
 *
 * The version of the OpenAPI document: 2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPlaceResponse.h
 *
 * 
 */

#ifndef OAIPlaceResponse_H
#define OAIPlaceResponse_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPlaceResponse : public OAIObject {
public:
    OAIPlaceResponse();
    OAIPlaceResponse(QString json);
    ~OAIPlaceResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCity() const;
    void setCity(const QString &city);
    bool is_city_Set() const;
    bool is_city_Valid() const;

    QString getCountry() const;
    void setCountry(const QString &country);
    bool is_country_Set() const;
    bool is_country_Valid() const;

    QString getGeonameId() const;
    void setGeonameId(const QString &geoname_id);
    bool is_geoname_id_Set() const;
    bool is_geoname_id_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    double getLat() const;
    void setLat(const double &lat);
    bool is_lat_Set() const;
    bool is_lat_Valid() const;

    double getLng() const;
    void setLng(const double &lng);
    bool is_lng_Set() const;
    bool is_lng_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getNameLong() const;
    void setNameLong(const QString &name_long);
    bool is_name_long_Set() const;
    bool is_name_long_Valid() const;

    QString getRegion() const;
    void setRegion(const QString &region);
    bool is_region_Set() const;
    bool is_region_Valid() const;

    QString getSlug() const;
    void setSlug(const QString &slug);
    bool is_slug_Set() const;
    bool is_slug_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_city;
    bool m_city_isSet;
    bool m_city_isValid;

    QString m_country;
    bool m_country_isSet;
    bool m_country_isValid;

    QString m_geoname_id;
    bool m_geoname_id_isSet;
    bool m_geoname_id_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    double m_lat;
    bool m_lat_isSet;
    bool m_lat_isValid;

    double m_lng;
    bool m_lng_isSet;
    bool m_lng_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_name_long;
    bool m_name_long_isSet;
    bool m_name_long_isValid;

    QString m_region;
    bool m_region_isSet;
    bool m_region_isValid;

    QString m_slug;
    bool m_slug_isSet;
    bool m_slug_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPlaceResponse)

#endif // OAIPlaceResponse_H
