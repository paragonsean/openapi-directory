/**
 * Faretrotter Travel API
 * Multimodal travel API to return modes of transportation between cities and points of interest.
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PlaceResponse from './PlaceResponse';
import PlacesResponseRequest from './PlacesResponseRequest';
import PlacesResponseStatus from './PlacesResponseStatus';

/**
 * The PlacesResponse model module.
 * @module model/PlacesResponse
 * @version 2.0
 */
class PlacesResponse {
    /**
     * Constructs a new <code>PlacesResponse</code>.
     * @alias module:model/PlacesResponse
     * @param places {Array.<module:model/PlaceResponse>} 
     * @param request {module:model/PlacesResponseRequest} 
     * @param status {module:model/PlacesResponseStatus} 
     */
    constructor(places, request, status) { 
        
        PlacesResponse.initialize(this, places, request, status);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, places, request, status) { 
        obj['places'] = places;
        obj['request'] = request;
        obj['status'] = status;
    }

    /**
     * Constructs a <code>PlacesResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PlacesResponse} obj Optional instance to populate.
     * @return {module:model/PlacesResponse} The populated <code>PlacesResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PlacesResponse();

            if (data.hasOwnProperty('places')) {
                obj['places'] = ApiClient.convertToType(data['places'], [PlaceResponse]);
            }
            if (data.hasOwnProperty('request')) {
                obj['request'] = PlacesResponseRequest.constructFromObject(data['request']);
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = PlacesResponseStatus.constructFromObject(data['status']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PlacesResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PlacesResponse</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PlacesResponse.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['places']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['places'])) {
                throw new Error("Expected the field `places` to be an array in the JSON data but got " + data['places']);
            }
            // validate the optional field `places` (array)
            for (const item of data['places']) {
                PlaceResponse.validateJSON(item);
            };
        }
        // validate the optional field `request`
        if (data['request']) { // data not null
          PlacesResponseRequest.validateJSON(data['request']);
        }
        // validate the optional field `status`
        if (data['status']) { // data not null
          PlacesResponseStatus.validateJSON(data['status']);
        }

        return true;
    }


}

PlacesResponse.RequiredProperties = ["places", "request", "status"];

/**
 * @member {Array.<module:model/PlaceResponse>} places
 */
PlacesResponse.prototype['places'] = undefined;

/**
 * @member {module:model/PlacesResponseRequest} request
 */
PlacesResponse.prototype['request'] = undefined;

/**
 * @member {module:model/PlacesResponseStatus} status
 */
PlacesResponse.prototype['status'] = undefined;






export default PlacesResponse;

