/**
 * Faretrotter Travel API
 * Multimodal travel API to return modes of transportation between cities and points of interest.
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The RoutesResponseDataRoutesInner model module.
 * @module model/RoutesResponseDataRoutesInner
 * @version 2.0
 */
class RoutesResponseDataRoutesInner {
    /**
     * Constructs a new <code>RoutesResponseDataRoutesInner</code>.
     * @alias module:model/RoutesResponseDataRoutesInner
     * @param co2 {Number} 
     * @param destinationId {String} 
     * @param duration {Number} 
     * @param fare {Number} 
     * @param mode {String} 
     * @param originId {String} 
     */
    constructor(co2, destinationId, duration, fare, mode, originId) { 
        
        RoutesResponseDataRoutesInner.initialize(this, co2, destinationId, duration, fare, mode, originId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, co2, destinationId, duration, fare, mode, originId) { 
        obj['co2'] = co2;
        obj['destination_id'] = destinationId;
        obj['duration'] = duration;
        obj['fare'] = fare;
        obj['mode'] = mode;
        obj['origin_id'] = originId;
    }

    /**
     * Constructs a <code>RoutesResponseDataRoutesInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RoutesResponseDataRoutesInner} obj Optional instance to populate.
     * @return {module:model/RoutesResponseDataRoutesInner} The populated <code>RoutesResponseDataRoutesInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RoutesResponseDataRoutesInner();

            if (data.hasOwnProperty('co2')) {
                obj['co2'] = ApiClient.convertToType(data['co2'], 'Number');
            }
            if (data.hasOwnProperty('destination_id')) {
                obj['destination_id'] = ApiClient.convertToType(data['destination_id'], 'String');
            }
            if (data.hasOwnProperty('duration')) {
                obj['duration'] = ApiClient.convertToType(data['duration'], 'Number');
            }
            if (data.hasOwnProperty('fare')) {
                obj['fare'] = ApiClient.convertToType(data['fare'], 'Number');
            }
            if (data.hasOwnProperty('mode')) {
                obj['mode'] = ApiClient.convertToType(data['mode'], 'String');
            }
            if (data.hasOwnProperty('origin_id')) {
                obj['origin_id'] = ApiClient.convertToType(data['origin_id'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RoutesResponseDataRoutesInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RoutesResponseDataRoutesInner</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of RoutesResponseDataRoutesInner.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['destination_id'] && !(typeof data['destination_id'] === 'string' || data['destination_id'] instanceof String)) {
            throw new Error("Expected the field `destination_id` to be a primitive type in the JSON string but got " + data['destination_id']);
        }
        // ensure the json data is a string
        if (data['mode'] && !(typeof data['mode'] === 'string' || data['mode'] instanceof String)) {
            throw new Error("Expected the field `mode` to be a primitive type in the JSON string but got " + data['mode']);
        }
        // ensure the json data is a string
        if (data['origin_id'] && !(typeof data['origin_id'] === 'string' || data['origin_id'] instanceof String)) {
            throw new Error("Expected the field `origin_id` to be a primitive type in the JSON string but got " + data['origin_id']);
        }

        return true;
    }


}

RoutesResponseDataRoutesInner.RequiredProperties = ["co2", "destination_id", "duration", "fare", "mode", "origin_id"];

/**
 * @member {Number} co2
 */
RoutesResponseDataRoutesInner.prototype['co2'] = undefined;

/**
 * @member {String} destination_id
 */
RoutesResponseDataRoutesInner.prototype['destination_id'] = undefined;

/**
 * @member {Number} duration
 */
RoutesResponseDataRoutesInner.prototype['duration'] = undefined;

/**
 * @member {Number} fare
 */
RoutesResponseDataRoutesInner.prototype['fare'] = undefined;

/**
 * @member {String} mode
 */
RoutesResponseDataRoutesInner.prototype['mode'] = undefined;

/**
 * @member {String} origin_id
 */
RoutesResponseDataRoutesInner.prototype['origin_id'] = undefined;






export default RoutesResponseDataRoutesInner;

