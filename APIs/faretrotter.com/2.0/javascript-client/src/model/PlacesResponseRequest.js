/**
 * Faretrotter Travel API
 * Multimodal travel API to return modes of transportation between cities and points of interest.
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PlacesResponseRequestFields from './PlacesResponseRequestFields';

/**
 * The PlacesResponseRequest model module.
 * @module model/PlacesResponseRequest
 * @version 2.0
 */
class PlacesResponseRequest {
    /**
     * Constructs a new <code>PlacesResponseRequest</code>.
     * @alias module:model/PlacesResponseRequest
     * @param distanceMiles {Number} 
     * @param endpoint {String} 
     * @param environment {String} 
     * @param fields {module:model/PlacesResponseRequestFields} 
     * @param version {String} 
     */
    constructor(distanceMiles, endpoint, environment, fields, version) { 
        
        PlacesResponseRequest.initialize(this, distanceMiles, endpoint, environment, fields, version);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, distanceMiles, endpoint, environment, fields, version) { 
        obj['distance_miles'] = distanceMiles;
        obj['endpoint'] = endpoint;
        obj['environment'] = environment;
        obj['fields'] = fields;
        obj['version'] = version;
    }

    /**
     * Constructs a <code>PlacesResponseRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PlacesResponseRequest} obj Optional instance to populate.
     * @return {module:model/PlacesResponseRequest} The populated <code>PlacesResponseRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PlacesResponseRequest();

            if (data.hasOwnProperty('distance_miles')) {
                obj['distance_miles'] = ApiClient.convertToType(data['distance_miles'], 'Number');
            }
            if (data.hasOwnProperty('endpoint')) {
                obj['endpoint'] = ApiClient.convertToType(data['endpoint'], 'String');
            }
            if (data.hasOwnProperty('environment')) {
                obj['environment'] = ApiClient.convertToType(data['environment'], 'String');
            }
            if (data.hasOwnProperty('fields')) {
                obj['fields'] = PlacesResponseRequestFields.constructFromObject(data['fields']);
            }
            if (data.hasOwnProperty('version')) {
                obj['version'] = ApiClient.convertToType(data['version'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PlacesResponseRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PlacesResponseRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PlacesResponseRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['endpoint'] && !(typeof data['endpoint'] === 'string' || data['endpoint'] instanceof String)) {
            throw new Error("Expected the field `endpoint` to be a primitive type in the JSON string but got " + data['endpoint']);
        }
        // ensure the json data is a string
        if (data['environment'] && !(typeof data['environment'] === 'string' || data['environment'] instanceof String)) {
            throw new Error("Expected the field `environment` to be a primitive type in the JSON string but got " + data['environment']);
        }
        // validate the optional field `fields`
        if (data['fields']) { // data not null
          PlacesResponseRequestFields.validateJSON(data['fields']);
        }
        // ensure the json data is a string
        if (data['version'] && !(typeof data['version'] === 'string' || data['version'] instanceof String)) {
            throw new Error("Expected the field `version` to be a primitive type in the JSON string but got " + data['version']);
        }

        return true;
    }


}

PlacesResponseRequest.RequiredProperties = ["distance_miles", "endpoint", "environment", "fields", "version"];

/**
 * @member {Number} distance_miles
 */
PlacesResponseRequest.prototype['distance_miles'] = undefined;

/**
 * @member {String} endpoint
 */
PlacesResponseRequest.prototype['endpoint'] = undefined;

/**
 * @member {String} environment
 */
PlacesResponseRequest.prototype['environment'] = undefined;

/**
 * @member {module:model/PlacesResponseRequestFields} fields
 */
PlacesResponseRequest.prototype['fields'] = undefined;

/**
 * @member {String} version
 */
PlacesResponseRequest.prototype['version'] = undefined;






export default PlacesResponseRequest;

