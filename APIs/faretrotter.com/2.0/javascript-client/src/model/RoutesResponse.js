/**
 * Faretrotter Travel API
 * Multimodal travel API to return modes of transportation between cities and points of interest.
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PlacesResponseRequest from './PlacesResponseRequest';
import PlacesResponseStatus from './PlacesResponseStatus';
import RoutesResponseData from './RoutesResponseData';
import RoutesResponseResponse from './RoutesResponseResponse';

/**
 * The RoutesResponse model module.
 * @module model/RoutesResponse
 * @version 2.0
 */
class RoutesResponse {
    /**
     * Constructs a new <code>RoutesResponse</code>.
     * @alias module:model/RoutesResponse
     * @param data {module:model/RoutesResponseData} 
     * @param request {module:model/PlacesResponseRequest} 
     * @param response {module:model/RoutesResponseResponse} 
     * @param status {module:model/PlacesResponseStatus} 
     */
    constructor(data, request, response, status) { 
        
        RoutesResponse.initialize(this, data, request, response, status);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, data, request, response, status) { 
        obj['data'] = data;
        obj['request'] = request;
        obj['response'] = response;
        obj['status'] = status;
    }

    /**
     * Constructs a <code>RoutesResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RoutesResponse} obj Optional instance to populate.
     * @return {module:model/RoutesResponse} The populated <code>RoutesResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RoutesResponse();

            if (data.hasOwnProperty('data')) {
                obj['data'] = RoutesResponseData.constructFromObject(data['data']);
            }
            if (data.hasOwnProperty('request')) {
                obj['request'] = PlacesResponseRequest.constructFromObject(data['request']);
            }
            if (data.hasOwnProperty('response')) {
                obj['response'] = RoutesResponseResponse.constructFromObject(data['response']);
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = PlacesResponseStatus.constructFromObject(data['status']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RoutesResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RoutesResponse</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of RoutesResponse.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `data`
        if (data['data']) { // data not null
          RoutesResponseData.validateJSON(data['data']);
        }
        // validate the optional field `request`
        if (data['request']) { // data not null
          PlacesResponseRequest.validateJSON(data['request']);
        }
        // validate the optional field `response`
        if (data['response']) { // data not null
          RoutesResponseResponse.validateJSON(data['response']);
        }
        // validate the optional field `status`
        if (data['status']) { // data not null
          PlacesResponseStatus.validateJSON(data['status']);
        }

        return true;
    }


}

RoutesResponse.RequiredProperties = ["data", "request", "response", "status"];

/**
 * @member {module:model/RoutesResponseData} data
 */
RoutesResponse.prototype['data'] = undefined;

/**
 * @member {module:model/PlacesResponseRequest} request
 */
RoutesResponse.prototype['request'] = undefined;

/**
 * @member {module:model/RoutesResponseResponse} response
 */
RoutesResponse.prototype['response'] = undefined;

/**
 * @member {module:model/PlacesResponseStatus} status
 */
RoutesResponse.prototype['status'] = undefined;






export default RoutesResponse;

