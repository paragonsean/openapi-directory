/*
 * NBA Stats API
 * The destination for current and historic NBA statistics.
 *
 * The version of the OpenAPI document: version
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DefaultApi
 */
@Disabled
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void allstarballotpredictorGetTest() throws ApiException {
        String westPlayer1 = null;
        String westPlayer2 = null;
        String westPlayer3 = null;
        String westPlayer4 = null;
        String westPlayer5 = null;
        String eastPlayer1 = null;
        String eastPlayer2 = null;
        String eastPlayer3 = null;
        String eastPlayer4 = null;
        String eastPlayer5 = null;
        String pointCap = null;
        api.allstarballotpredictorGet(westPlayer1, westPlayer2, westPlayer3, westPlayer4, westPlayer5, eastPlayer1, eastPlayer2, eastPlayer3, eastPlayer4, eastPlayer5, pointCap);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void boxscoreGetTest() throws ApiException {
        String gameID = null;
        String startPeriod = null;
        String endPeriod = null;
        String startRange = null;
        String endRange = null;
        String rangeType = null;
        api.boxscoreGet(gameID, startPeriod, endPeriod, startRange, endRange, rangeType);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void boxscoreadvancedGetTest() throws ApiException {
        String gameID = null;
        String startPeriod = null;
        String endPeriod = null;
        String startRange = null;
        String endRange = null;
        String rangeType = null;
        api.boxscoreadvancedGet(gameID, startPeriod, endPeriod, startRange, endRange, rangeType);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void boxscoreadvancedv2GetTest() throws ApiException {
        String gameID = null;
        String startPeriod = null;
        String endPeriod = null;
        String startRange = null;
        String endRange = null;
        String rangeType = null;
        api.boxscoreadvancedv2Get(gameID, startPeriod, endPeriod, startRange, endRange, rangeType);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void boxscorefourfactorsGetTest() throws ApiException {
        String gameID = null;
        String startPeriod = null;
        String endPeriod = null;
        String startRange = null;
        String endRange = null;
        String rangeType = null;
        api.boxscorefourfactorsGet(gameID, startPeriod, endPeriod, startRange, endRange, rangeType);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void boxscorefourfactorsv2GetTest() throws ApiException {
        String gameID = null;
        String startPeriod = null;
        String endPeriod = null;
        String startRange = null;
        String endRange = null;
        String rangeType = null;
        api.boxscorefourfactorsv2Get(gameID, startPeriod, endPeriod, startRange, endRange, rangeType);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void boxscoremiscGetTest() throws ApiException {
        String gameID = null;
        String startPeriod = null;
        String endPeriod = null;
        String startRange = null;
        String endRange = null;
        String rangeType = null;
        api.boxscoremiscGet(gameID, startPeriod, endPeriod, startRange, endRange, rangeType);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void boxscoremiscv2GetTest() throws ApiException {
        String gameID = null;
        String startPeriod = null;
        String endPeriod = null;
        String startRange = null;
        String endRange = null;
        String rangeType = null;
        api.boxscoremiscv2Get(gameID, startPeriod, endPeriod, startRange, endRange, rangeType);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void boxscoreplayertrackv2GetTest() throws ApiException {
        String gameID = null;
        api.boxscoreplayertrackv2Get(gameID);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void boxscorescoringGetTest() throws ApiException {
        String gameID = null;
        String startPeriod = null;
        String endPeriod = null;
        String startRange = null;
        String endRange = null;
        String rangeType = null;
        api.boxscorescoringGet(gameID, startPeriod, endPeriod, startRange, endRange, rangeType);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void boxscorescoringv2GetTest() throws ApiException {
        String gameID = null;
        String startPeriod = null;
        String endPeriod = null;
        String startRange = null;
        String endRange = null;
        String rangeType = null;
        api.boxscorescoringv2Get(gameID, startPeriod, endPeriod, startRange, endRange, rangeType);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void boxscoresummaryv2GetTest() throws ApiException {
        String gameID = null;
        api.boxscoresummaryv2Get(gameID);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void boxscoretraditionalv2GetTest() throws ApiException {
        String gameID = null;
        String startPeriod = null;
        String endPeriod = null;
        String startRange = null;
        String endRange = null;
        String rangeType = null;
        api.boxscoretraditionalv2Get(gameID, startPeriod, endPeriod, startRange, endRange, rangeType);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void boxscoreusageGetTest() throws ApiException {
        String gameID = null;
        String startPeriod = null;
        String endPeriod = null;
        String startRange = null;
        String endRange = null;
        String rangeType = null;
        api.boxscoreusageGet(gameID, startPeriod, endPeriod, startRange, endRange, rangeType);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void boxscoreusagev2GetTest() throws ApiException {
        String gameID = null;
        String startPeriod = null;
        String endPeriod = null;
        String startRange = null;
        String endRange = null;
        String rangeType = null;
        api.boxscoreusagev2Get(gameID, startPeriod, endPeriod, startRange, endRange, rangeType);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void commonTeamYearsGetTest() throws ApiException {
        String leagueID = null;
        api.commonTeamYearsGet(leagueID);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void commonallplayersGetTest() throws ApiException {
        String leagueID = null;
        String season = null;
        String isOnlyCurrentSeason = null;
        api.commonallplayersGet(leagueID, season, isOnlyCurrentSeason);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void commonplayerinfoGetTest() throws ApiException {
        String playerID = null;
        api.commonplayerinfoGet(playerID);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void commonplayoffseriesGetTest() throws ApiException {
        String leagueID = null;
        String season = null;
        api.commonplayoffseriesGet(leagueID, season);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void commonteamrosterGetTest() throws ApiException {
        String season = null;
        String teamID = null;
        api.commonteamrosterGet(season, teamID);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void draftcombinedrillresultsGetTest() throws ApiException {
        String leagueID = null;
        String seasonYear = null;
        api.draftcombinedrillresultsGet(leagueID, seasonYear);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void draftcombinenonstationaryshootingGetTest() throws ApiException {
        String leagueID = null;
        String seasonYear = null;
        api.draftcombinenonstationaryshootingGet(leagueID, seasonYear);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void draftcombineplayeranthroGetTest() throws ApiException {
        String leagueID = null;
        String seasonYear = null;
        api.draftcombineplayeranthroGet(leagueID, seasonYear);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void draftcombinespotshootingGetTest() throws ApiException {
        String leagueID = null;
        String seasonYear = null;
        api.draftcombinespotshootingGet(leagueID, seasonYear);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void draftcombinestatsGetTest() throws ApiException {
        String leagueID = null;
        String seasonYear = null;
        api.draftcombinestatsGet(leagueID, seasonYear);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void drafthistoryGetTest() throws ApiException {
        String leagueID = null;
        api.drafthistoryGet(leagueID);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void franchisehistoryGetTest() throws ApiException {
        String leagueID = null;
        api.franchisehistoryGet(leagueID);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void homepageleadersGetTest() throws ApiException {
        String statCategory = null;
        String leagueID = null;
        String season = null;
        String seasonType = null;
        String playerOrTeam = null;
        String playerScope = null;
        String gameScope = null;
        String game = null;
        String player = null;
        api.homepageleadersGet(statCategory, leagueID, season, seasonType, playerOrTeam, playerScope, gameScope, game, player);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void homepagev2GetTest() throws ApiException {
        String statType = null;
        String leagueID = null;
        String season = null;
        String seasonType = null;
        String playerOrTeam = null;
        String playerScope = null;
        String gameScope = null;
        String game = null;
        String player = null;
        api.homepagev2Get(statType, leagueID, season, seasonType, playerOrTeam, playerScope, gameScope, game, player);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void leaderstilesGetTest() throws ApiException {
        String stat = null;
        String leagueID = null;
        String season = null;
        String seasonType = null;
        String playerOrTeam = null;
        String playerScope = null;
        String gameScope = null;
        String game = null;
        String player = null;
        api.leaderstilesGet(stat, leagueID, season, seasonType, playerOrTeam, playerScope, gameScope, game, player);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void leaguedashlineupsGetTest() throws ApiException {
        String groupQuantity = null;
        String seasonType = null;
        String measureType = null;
        String perMode = null;
        String plusMinus = null;
        String paceAdjust = null;
        String rank = null;
        String season = null;
        String outcome = null;
        String location = null;
        String month = null;
        String seasonSegment = null;
        String dateFrom = null;
        String dateTo = null;
        String opponentTeamID = null;
        String vsConference = null;
        String vsDivision = null;
        String gameSegment = null;
        String period = null;
        String lastNGames = null;
        api.leaguedashlineupsGet(groupQuantity, seasonType, measureType, perMode, plusMinus, paceAdjust, rank, season, outcome, location, month, seasonSegment, dateFrom, dateTo, opponentTeamID, vsConference, vsDivision, gameSegment, period, lastNGames);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void leaguedashplayerbiostatsGetTest() throws ApiException {
        String perMode = null;
        String leagueID = null;
        String season = null;
        String seasonType = null;
        api.leaguedashplayerbiostatsGet(perMode, leagueID, season, seasonType);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void leaguedashplayerclutchGetTest() throws ApiException {
        String clutchTime = null;
        String aheadBehind = null;
        String pointDiff = null;
        String gameScope = null;
        String playerExperience = null;
        String playerPosition = null;
        String starterBench = null;
        String measureType = null;
        String perMode = null;
        String plusMinus = null;
        String paceAdjust = null;
        String rank = null;
        String season = null;
        String seasonType = null;
        String outcome = null;
        String location = null;
        String month = null;
        String seasonSegment = null;
        String dateFrom = null;
        String dateTo = null;
        String opponentTeamID = null;
        String vsConference = null;
        String vsDivision = null;
        String gameSegment = null;
        String period = null;
        String lastNGames = null;
        api.leaguedashplayerclutchGet(clutchTime, aheadBehind, pointDiff, gameScope, playerExperience, playerPosition, starterBench, measureType, perMode, plusMinus, paceAdjust, rank, season, seasonType, outcome, location, month, seasonSegment, dateFrom, dateTo, opponentTeamID, vsConference, vsDivision, gameSegment, period, lastNGames);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void leaguedashplayerptshotGetTest() throws ApiException {
        String leagueID = null;
        String perMode = null;
        String season = null;
        String seasonType = null;
        api.leaguedashplayerptshotGet(leagueID, perMode, season, seasonType);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void leaguedashplayershotlocationsGetTest() throws ApiException {
        String measureType = null;
        String perMode = null;
        String plusMinus = null;
        String paceAdjust = null;
        String rank = null;
        String season = null;
        String seasonType = null;
        String outcome = null;
        String location = null;
        String month = null;
        String seasonSegment = null;
        String dateFrom = null;
        String dateTo = null;
        String opponentTeamID = null;
        String vsConference = null;
        String vsDivision = null;
        String gameSegment = null;
        String period = null;
        String lastNGames = null;
        String distanceRange = null;
        String gameScope = null;
        String playerExperience = null;
        String playerPosition = null;
        String starterBench = null;
        api.leaguedashplayershotlocationsGet(measureType, perMode, plusMinus, paceAdjust, rank, season, seasonType, outcome, location, month, seasonSegment, dateFrom, dateTo, opponentTeamID, vsConference, vsDivision, gameSegment, period, lastNGames, distanceRange, gameScope, playerExperience, playerPosition, starterBench);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void leaguedashplayerstatsGetTest() throws ApiException {
        String gameScope = null;
        String playerExperience = null;
        String playerPosition = null;
        String starterBench = null;
        String measureType = null;
        String perMode = null;
        String plusMinus = null;
        String paceAdjust = null;
        String rank = null;
        String season = null;
        String seasonType = null;
        String outcome = null;
        String location = null;
        String month = null;
        String seasonSegment = null;
        String dateFrom = null;
        String dateTo = null;
        String opponentTeamID = null;
        String vsConference = null;
        String vsDivision = null;
        String gameSegment = null;
        String period = null;
        String lastNGames = null;
        api.leaguedashplayerstatsGet(gameScope, playerExperience, playerPosition, starterBench, measureType, perMode, plusMinus, paceAdjust, rank, season, seasonType, outcome, location, month, seasonSegment, dateFrom, dateTo, opponentTeamID, vsConference, vsDivision, gameSegment, period, lastNGames);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void leaguedashptdefendGetTest() throws ApiException {
        String leagueID = null;
        String perMode = null;
        String season = null;
        String seasonType = null;
        String defenseCategory = null;
        api.leaguedashptdefendGet(leagueID, perMode, season, seasonType, defenseCategory);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void leaguedashptteamdefendGetTest() throws ApiException {
        String leagueID = null;
        String perMode = null;
        String season = null;
        String seasonType = null;
        String defenseCategory = null;
        api.leaguedashptteamdefendGet(leagueID, perMode, season, seasonType, defenseCategory);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void leaguedashteamclutchGetTest() throws ApiException {
        String clutchTime = null;
        String aheadBehind = null;
        String pointDiff = null;
        String gameScope = null;
        String playerExperience = null;
        String playerPosition = null;
        String starterBench = null;
        String measureType = null;
        String perMode = null;
        String plusMinus = null;
        String paceAdjust = null;
        String rank = null;
        String season = null;
        String seasonType = null;
        String outcome = null;
        String location = null;
        String month = null;
        String seasonSegment = null;
        String dateFrom = null;
        String dateTo = null;
        String opponentTeamID = null;
        String vsConference = null;
        String vsDivision = null;
        String gameSegment = null;
        String period = null;
        String lastNGames = null;
        api.leaguedashteamclutchGet(clutchTime, aheadBehind, pointDiff, gameScope, playerExperience, playerPosition, starterBench, measureType, perMode, plusMinus, paceAdjust, rank, season, seasonType, outcome, location, month, seasonSegment, dateFrom, dateTo, opponentTeamID, vsConference, vsDivision, gameSegment, period, lastNGames);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void leaguedashteamptshotGetTest() throws ApiException {
        String leagueID = null;
        String perMode = null;
        String season = null;
        String seasonType = null;
        api.leaguedashteamptshotGet(leagueID, perMode, season, seasonType);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void leaguedashteamshotlocationsGetTest() throws ApiException {
        String measureType = null;
        String perMode = null;
        String plusMinus = null;
        String paceAdjust = null;
        String rank = null;
        String season = null;
        String seasonType = null;
        String outcome = null;
        String location = null;
        String month = null;
        String seasonSegment = null;
        String dateFrom = null;
        String dateTo = null;
        String opponentTeamID = null;
        String vsConference = null;
        String vsDivision = null;
        String gameSegment = null;
        String period = null;
        String lastNGames = null;
        String distanceRange = null;
        String gameScope = null;
        String playerExperience = null;
        String playerPosition = null;
        String starterBench = null;
        api.leaguedashteamshotlocationsGet(measureType, perMode, plusMinus, paceAdjust, rank, season, seasonType, outcome, location, month, seasonSegment, dateFrom, dateTo, opponentTeamID, vsConference, vsDivision, gameSegment, period, lastNGames, distanceRange, gameScope, playerExperience, playerPosition, starterBench);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void leaguedashteamstatsGetTest() throws ApiException {
        String measureType = null;
        String perMode = null;
        String plusMinus = null;
        String paceAdjust = null;
        String rank = null;
        String season = null;
        String seasonType = null;
        String outcome = null;
        String location = null;
        String month = null;
        String seasonSegment = null;
        String dateFrom = null;
        String dateTo = null;
        String opponentTeamID = null;
        String vsConference = null;
        String vsDivision = null;
        String gameSegment = null;
        String period = null;
        String lastNGames = null;
        api.leaguedashteamstatsGet(measureType, perMode, plusMinus, paceAdjust, rank, season, seasonType, outcome, location, month, seasonSegment, dateFrom, dateTo, opponentTeamID, vsConference, vsDivision, gameSegment, period, lastNGames);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void leagueleadersGetTest() throws ApiException {
        String leagueID = null;
        String perMode = null;
        String season = null;
        String seasonType = null;
        String scope = null;
        String statCategory = null;
        api.leagueleadersGet(leagueID, perMode, season, seasonType, scope, statCategory);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void playbyplayGetTest() throws ApiException {
        String gameID = null;
        String startPeriod = null;
        String endPeriod = null;
        api.playbyplayGet(gameID, startPeriod, endPeriod);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void playbyplayv2GetTest() throws ApiException {
        String gameID = null;
        String startPeriod = null;
        String endPeriod = null;
        api.playbyplayv2Get(gameID, startPeriod, endPeriod);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void playercareerstatsGetTest() throws ApiException {
        String perMode = null;
        String playerID = null;
        api.playercareerstatsGet(perMode, playerID);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void playercompareGetTest() throws ApiException {
        String playerIDList = null;
        String vsPlayerIDList = null;
        String seasonType = null;
        String measureType = null;
        String perMode = null;
        String plusMinus = null;
        String paceAdjust = null;
        String rank = null;
        String season = null;
        String outcome = null;
        String location = null;
        String month = null;
        String seasonSegment = null;
        String dateFrom = null;
        String dateTo = null;
        String opponentTeamID = null;
        String vsConference = null;
        String vsDivision = null;
        String gameSegment = null;
        String period = null;
        String lastNGames = null;
        api.playercompareGet(playerIDList, vsPlayerIDList, seasonType, measureType, perMode, plusMinus, paceAdjust, rank, season, outcome, location, month, seasonSegment, dateFrom, dateTo, opponentTeamID, vsConference, vsDivision, gameSegment, period, lastNGames);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void playerdashboardbyclutchGetTest() throws ApiException {
        String measureType = null;
        String perMode = null;
        String plusMinus = null;
        String paceAdjust = null;
        String rank = null;
        String season = null;
        String seasonType = null;
        String playerID = null;
        String outcome = null;
        String location = null;
        String month = null;
        String seasonSegment = null;
        String dateFrom = null;
        String dateTo = null;
        String opponentTeamID = null;
        String vsConference = null;
        String vsDivision = null;
        String gameSegment = null;
        String period = null;
        String lastNGames = null;
        api.playerdashboardbyclutchGet(measureType, perMode, plusMinus, paceAdjust, rank, season, seasonType, playerID, outcome, location, month, seasonSegment, dateFrom, dateTo, opponentTeamID, vsConference, vsDivision, gameSegment, period, lastNGames);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void playerdashboardbygamesplitsGetTest() throws ApiException {
        String measureType = null;
        String perMode = null;
        String plusMinus = null;
        String paceAdjust = null;
        String rank = null;
        String season = null;
        String seasonType = null;
        String playerID = null;
        String outcome = null;
        String location = null;
        String month = null;
        String seasonSegment = null;
        String dateFrom = null;
        String dateTo = null;
        String opponentTeamID = null;
        String vsConference = null;
        String vsDivision = null;
        String gameSegment = null;
        String period = null;
        String lastNGames = null;
        api.playerdashboardbygamesplitsGet(measureType, perMode, plusMinus, paceAdjust, rank, season, seasonType, playerID, outcome, location, month, seasonSegment, dateFrom, dateTo, opponentTeamID, vsConference, vsDivision, gameSegment, period, lastNGames);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void playerdashboardbygeneralsplitsGetTest() throws ApiException {
        String measureType = null;
        String perMode = null;
        String plusMinus = null;
        String paceAdjust = null;
        String rank = null;
        String season = null;
        String seasonType = null;
        String playerID = null;
        String outcome = null;
        String location = null;
        String month = null;
        String seasonSegment = null;
        String dateFrom = null;
        String dateTo = null;
        String opponentTeamID = null;
        String vsConference = null;
        String vsDivision = null;
        String gameSegment = null;
        String period = null;
        String lastNGames = null;
        api.playerdashboardbygeneralsplitsGet(measureType, perMode, plusMinus, paceAdjust, rank, season, seasonType, playerID, outcome, location, month, seasonSegment, dateFrom, dateTo, opponentTeamID, vsConference, vsDivision, gameSegment, period, lastNGames);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void playerdashboardbylastngamesGetTest() throws ApiException {
        String measureType = null;
        String perMode = null;
        String plusMinus = null;
        String paceAdjust = null;
        String rank = null;
        String season = null;
        String seasonType = null;
        String playerID = null;
        String outcome = null;
        String location = null;
        String month = null;
        String seasonSegment = null;
        String dateFrom = null;
        String dateTo = null;
        String opponentTeamID = null;
        String vsConference = null;
        String vsDivision = null;
        String gameSegment = null;
        String period = null;
        String lastNGames = null;
        api.playerdashboardbylastngamesGet(measureType, perMode, plusMinus, paceAdjust, rank, season, seasonType, playerID, outcome, location, month, seasonSegment, dateFrom, dateTo, opponentTeamID, vsConference, vsDivision, gameSegment, period, lastNGames);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void playerdashboardbyopponentGetTest() throws ApiException {
        String measureType = null;
        String perMode = null;
        String plusMinus = null;
        String paceAdjust = null;
        String rank = null;
        String season = null;
        String seasonType = null;
        String playerID = null;
        String outcome = null;
        String location = null;
        String month = null;
        String seasonSegment = null;
        String dateFrom = null;
        String dateTo = null;
        String opponentTeamID = null;
        String vsConference = null;
        String vsDivision = null;
        String gameSegment = null;
        String period = null;
        String lastNGames = null;
        api.playerdashboardbyopponentGet(measureType, perMode, plusMinus, paceAdjust, rank, season, seasonType, playerID, outcome, location, month, seasonSegment, dateFrom, dateTo, opponentTeamID, vsConference, vsDivision, gameSegment, period, lastNGames);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void playerdashboardbyshootingsplitsGetTest() throws ApiException {
        String measureType = null;
        String perMode = null;
        String plusMinus = null;
        String paceAdjust = null;
        String rank = null;
        String season = null;
        String seasonType = null;
        String playerID = null;
        String outcome = null;
        String location = null;
        String month = null;
        String seasonSegment = null;
        String dateFrom = null;
        String dateTo = null;
        String opponentTeamID = null;
        String vsConference = null;
        String vsDivision = null;
        String gameSegment = null;
        String period = null;
        String lastNGames = null;
        api.playerdashboardbyshootingsplitsGet(measureType, perMode, plusMinus, paceAdjust, rank, season, seasonType, playerID, outcome, location, month, seasonSegment, dateFrom, dateTo, opponentTeamID, vsConference, vsDivision, gameSegment, period, lastNGames);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void playerdashboardbyteamperformanceGetTest() throws ApiException {
        String measureType = null;
        String perMode = null;
        String plusMinus = null;
        String paceAdjust = null;
        String rank = null;
        String season = null;
        String seasonType = null;
        String playerID = null;
        String outcome = null;
        String location = null;
        String month = null;
        String seasonSegment = null;
        String dateFrom = null;
        String dateTo = null;
        String opponentTeamID = null;
        String vsConference = null;
        String vsDivision = null;
        String gameSegment = null;
        String period = null;
        String lastNGames = null;
        api.playerdashboardbyteamperformanceGet(measureType, perMode, plusMinus, paceAdjust, rank, season, seasonType, playerID, outcome, location, month, seasonSegment, dateFrom, dateTo, opponentTeamID, vsConference, vsDivision, gameSegment, period, lastNGames);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void playerdashboardbyyearoveryearGetTest() throws ApiException {
        String measureType = null;
        String perMode = null;
        String plusMinus = null;
        String paceAdjust = null;
        String rank = null;
        String season = null;
        String seasonType = null;
        String playerID = null;
        String outcome = null;
        String location = null;
        String month = null;
        String seasonSegment = null;
        String dateFrom = null;
        String dateTo = null;
        String opponentTeamID = null;
        String vsConference = null;
        String vsDivision = null;
        String gameSegment = null;
        String period = null;
        String lastNGames = null;
        api.playerdashboardbyyearoveryearGet(measureType, perMode, plusMinus, paceAdjust, rank, season, seasonType, playerID, outcome, location, month, seasonSegment, dateFrom, dateTo, opponentTeamID, vsConference, vsDivision, gameSegment, period, lastNGames);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void playerdashptpassGetTest() throws ApiException {
        String perMode = null;
        String season = null;
        String seasonType = null;
        String playerID = null;
        String teamID = null;
        String outcome = null;
        String location = null;
        String month = null;
        String seasonSegment = null;
        String dateFrom = null;
        String dateTo = null;
        String opponentTeamID = null;
        String vsConference = null;
        String vsDivision = null;
        String lastNGames = null;
        api.playerdashptpassGet(perMode, season, seasonType, playerID, teamID, outcome, location, month, seasonSegment, dateFrom, dateTo, opponentTeamID, vsConference, vsDivision, lastNGames);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void playerdashptrebGetTest() throws ApiException {
        String perMode = null;
        String season = null;
        String seasonType = null;
        String playerID = null;
        String teamID = null;
        String outcome = null;
        String location = null;
        String month = null;
        String seasonSegment = null;
        String dateFrom = null;
        String dateTo = null;
        String opponentTeamID = null;
        String vsConference = null;
        String vsDivision = null;
        String gameSegment = null;
        String period = null;
        String lastNGames = null;
        api.playerdashptrebGet(perMode, season, seasonType, playerID, teamID, outcome, location, month, seasonSegment, dateFrom, dateTo, opponentTeamID, vsConference, vsDivision, gameSegment, period, lastNGames);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void playerdashptreboundlogsGetTest() throws ApiException {
        String season = null;
        String seasonType = null;
        String playerID = null;
        String teamID = null;
        String outcome = null;
        String location = null;
        String month = null;
        String seasonSegment = null;
        String dateFrom = null;
        String dateTo = null;
        String opponentTeamID = null;
        String vsConference = null;
        String vsDivision = null;
        String gameSegment = null;
        String period = null;
        String lastNGames = null;
        api.playerdashptreboundlogsGet(season, seasonType, playerID, teamID, outcome, location, month, seasonSegment, dateFrom, dateTo, opponentTeamID, vsConference, vsDivision, gameSegment, period, lastNGames);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void playerdashptshotdefendGetTest() throws ApiException {
        String perMode = null;
        String season = null;
        String seasonType = null;
        String playerID = null;
        String teamID = null;
        String outcome = null;
        String location = null;
        String month = null;
        String seasonSegment = null;
        String dateFrom = null;
        String dateTo = null;
        String opponentTeamID = null;
        String vsConference = null;
        String vsDivision = null;
        String gameSegment = null;
        String period = null;
        String lastNGames = null;
        api.playerdashptshotdefendGet(perMode, season, seasonType, playerID, teamID, outcome, location, month, seasonSegment, dateFrom, dateTo, opponentTeamID, vsConference, vsDivision, gameSegment, period, lastNGames);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void playerdashptshotlogGetTest() throws ApiException {
        String leagueID = null;
        String season = null;
        String seasonType = null;
        String playerID = null;
        String teamID = null;
        api.playerdashptshotlogGet(leagueID, season, seasonType, playerID, teamID);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void playerdashptshotsGetTest() throws ApiException {
        String perMode = null;
        String season = null;
        String seasonType = null;
        String playerID = null;
        String teamID = null;
        String outcome = null;
        String location = null;
        String month = null;
        String seasonSegment = null;
        String dateFrom = null;
        String dateTo = null;
        String opponentTeamID = null;
        String vsConference = null;
        String vsDivision = null;
        String gameSegment = null;
        String period = null;
        String lastNGames = null;
        api.playerdashptshotsGet(perMode, season, seasonType, playerID, teamID, outcome, location, month, seasonSegment, dateFrom, dateTo, opponentTeamID, vsConference, vsDivision, gameSegment, period, lastNGames);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void playergamelogGetTest() throws ApiException {
        String playerID = null;
        String season = null;
        String seasonType = null;
        api.playergamelogGet(playerID, season, seasonType);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void playerprofileGetTest() throws ApiException {
        String leagueID = null;
        String playerID = null;
        String season = null;
        String seasonType = null;
        String graphStartSeason = null;
        String graphEndSeason = null;
        String graphStat = null;
        api.playerprofileGet(leagueID, playerID, season, seasonType, graphStartSeason, graphEndSeason, graphStat);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void playerprofilev2GetTest() throws ApiException {
        String perMode = null;
        String playerID = null;
        api.playerprofilev2Get(perMode, playerID);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void playersvsplayersGetTest() throws ApiException {
        String playerTeamID = null;
        String playerID1 = null;
        String playerID2 = null;
        String playerID3 = null;
        String playerID4 = null;
        String playerID5 = null;
        String vsTeamID = null;
        String vsPlayerID1 = null;
        String vsPlayerID2 = null;
        String vsPlayerID3 = null;
        String vsPlayerID4 = null;
        String vsPlayerID5 = null;
        String seasonType = null;
        String measureType = null;
        String perMode = null;
        String plusMinus = null;
        String paceAdjust = null;
        String rank = null;
        String season = null;
        String outcome = null;
        String location = null;
        String month = null;
        String seasonSegment = null;
        String dateFrom = null;
        String dateTo = null;
        String opponentTeamID = null;
        String vsConference = null;
        String vsDivision = null;
        String gameSegment = null;
        String period = null;
        String lastNGames = null;
        api.playersvsplayersGet(playerTeamID, playerID1, playerID2, playerID3, playerID4, playerID5, vsTeamID, vsPlayerID1, vsPlayerID2, vsPlayerID3, vsPlayerID4, vsPlayerID5, seasonType, measureType, perMode, plusMinus, paceAdjust, rank, season, outcome, location, month, seasonSegment, dateFrom, dateTo, opponentTeamID, vsConference, vsDivision, gameSegment, period, lastNGames);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void playervsplayerGetTest() throws ApiException {
        String playerID = null;
        String vsPlayerID = null;
        String seasonType = null;
        String measureType = null;
        String perMode = null;
        String plusMinus = null;
        String paceAdjust = null;
        String rank = null;
        String season = null;
        String outcome = null;
        String location = null;
        String month = null;
        String seasonSegment = null;
        String dateFrom = null;
        String dateTo = null;
        String opponentTeamID = null;
        String vsConference = null;
        String vsDivision = null;
        String gameSegment = null;
        String period = null;
        String lastNGames = null;
        api.playervsplayerGet(playerID, vsPlayerID, seasonType, measureType, perMode, plusMinus, paceAdjust, rank, season, outcome, location, month, seasonSegment, dateFrom, dateTo, opponentTeamID, vsConference, vsDivision, gameSegment, period, lastNGames);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void playoffpictureGetTest() throws ApiException {
        String leagueID = null;
        String seasonID = null;
        api.playoffpictureGet(leagueID, seasonID);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void scoreboardGetTest() throws ApiException {
        String gameDate = null;
        String leagueID = null;
        String dayOffset = null;
        api.scoreboardGet(gameDate, leagueID, dayOffset);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void scoreboardV2GetTest() throws ApiException {
        String gameDate = null;
        String leagueID = null;
        String dayOffset = null;
        api.scoreboardV2Get(gameDate, leagueID, dayOffset);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void shotchartdetailGetTest() throws ApiException {
        String seasonType = null;
        String teamID = null;
        String playerID = null;
        String gameID = null;
        String outcome = null;
        String location = null;
        String month = null;
        String seasonSegment = null;
        String dateFrom = null;
        String dateTo = null;
        String opponentTeamID = null;
        String vsConference = null;
        String vsDivision = null;
        String position = null;
        String rookieYear = null;
        String gameSegment = null;
        String period = null;
        String lastNGames = null;
        String contextMeasure = null;
        api.shotchartdetailGet(seasonType, teamID, playerID, gameID, outcome, location, month, seasonSegment, dateFrom, dateTo, opponentTeamID, vsConference, vsDivision, position, rookieYear, gameSegment, period, lastNGames, contextMeasure);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void shotchartlineupdetailGetTest() throws ApiException {
        String leagueID = null;
        String season = null;
        String seasonType = null;
        String teamID = null;
        String outcome = null;
        String location = null;
        String month = null;
        String seasonSegment = null;
        String dateFrom = null;
        String dateTo = null;
        String opponentTeamID = null;
        String vsConference = null;
        String vsDivision = null;
        String gameSegment = null;
        String period = null;
        String lastNGames = null;
        String gameID = null;
        String GROUP_ID = null;
        String contextMeasure = null;
        String contextFilter = null;
        api.shotchartlineupdetailGet(leagueID, season, seasonType, teamID, outcome, location, month, seasonSegment, dateFrom, dateTo, opponentTeamID, vsConference, vsDivision, gameSegment, period, lastNGames, gameID, GROUP_ID, contextMeasure, contextFilter);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void teamdashboardbyclutchGetTest() throws ApiException {
        String teamID = null;
        String measureType = null;
        String perMode = null;
        String plusMinus = null;
        String paceAdjust = null;
        String rank = null;
        String season = null;
        String seasonType = null;
        String outcome = null;
        String location = null;
        String month = null;
        String seasonSegment = null;
        String dateFrom = null;
        String dateTo = null;
        String opponentTeamID = null;
        String vsConference = null;
        String vsDivision = null;
        String gameSegment = null;
        String period = null;
        String lastNGames = null;
        api.teamdashboardbyclutchGet(teamID, measureType, perMode, plusMinus, paceAdjust, rank, season, seasonType, outcome, location, month, seasonSegment, dateFrom, dateTo, opponentTeamID, vsConference, vsDivision, gameSegment, period, lastNGames);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void teamdashboardbygamesplitsGetTest() throws ApiException {
        String teamID = null;
        String measureType = null;
        String perMode = null;
        String plusMinus = null;
        String paceAdjust = null;
        String rank = null;
        String season = null;
        String seasonType = null;
        String outcome = null;
        String location = null;
        String month = null;
        String seasonSegment = null;
        String dateFrom = null;
        String dateTo = null;
        String opponentTeamID = null;
        String vsConference = null;
        String vsDivision = null;
        String gameSegment = null;
        String period = null;
        String lastNGames = null;
        api.teamdashboardbygamesplitsGet(teamID, measureType, perMode, plusMinus, paceAdjust, rank, season, seasonType, outcome, location, month, seasonSegment, dateFrom, dateTo, opponentTeamID, vsConference, vsDivision, gameSegment, period, lastNGames);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void teamdashboardbygeneralsplitsGetTest() throws ApiException {
        String seasonType = null;
        String teamID = null;
        String measureType = null;
        String perMode = null;
        String plusMinus = null;
        String paceAdjust = null;
        String rank = null;
        String season = null;
        String outcome = null;
        String location = null;
        String month = null;
        String seasonSegment = null;
        String dateFrom = null;
        String dateTo = null;
        String opponentTeamID = null;
        String vsConference = null;
        String vsDivision = null;
        String gameSegment = null;
        String period = null;
        String lastNGames = null;
        api.teamdashboardbygeneralsplitsGet(seasonType, teamID, measureType, perMode, plusMinus, paceAdjust, rank, season, outcome, location, month, seasonSegment, dateFrom, dateTo, opponentTeamID, vsConference, vsDivision, gameSegment, period, lastNGames);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void teamdashboardbylastngamesGetTest() throws ApiException {
        String teamID = null;
        String measureType = null;
        String perMode = null;
        String plusMinus = null;
        String paceAdjust = null;
        String rank = null;
        String season = null;
        String seasonType = null;
        String outcome = null;
        String location = null;
        String month = null;
        String seasonSegment = null;
        String dateFrom = null;
        String dateTo = null;
        String opponentTeamID = null;
        String vsConference = null;
        String vsDivision = null;
        String gameSegment = null;
        String period = null;
        String lastNGames = null;
        api.teamdashboardbylastngamesGet(teamID, measureType, perMode, plusMinus, paceAdjust, rank, season, seasonType, outcome, location, month, seasonSegment, dateFrom, dateTo, opponentTeamID, vsConference, vsDivision, gameSegment, period, lastNGames);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void teamdashboardbyopponentGetTest() throws ApiException {
        String teamID = null;
        String measureType = null;
        String perMode = null;
        String plusMinus = null;
        String paceAdjust = null;
        String rank = null;
        String season = null;
        String seasonType = null;
        String outcome = null;
        String location = null;
        String month = null;
        String seasonSegment = null;
        String dateFrom = null;
        String dateTo = null;
        String opponentTeamID = null;
        String vsConference = null;
        String vsDivision = null;
        String gameSegment = null;
        String period = null;
        String lastNGames = null;
        api.teamdashboardbyopponentGet(teamID, measureType, perMode, plusMinus, paceAdjust, rank, season, seasonType, outcome, location, month, seasonSegment, dateFrom, dateTo, opponentTeamID, vsConference, vsDivision, gameSegment, period, lastNGames);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void teamdashboardbyshootingsplitsGetTest() throws ApiException {
        String teamID = null;
        String measureType = null;
        String perMode = null;
        String plusMinus = null;
        String paceAdjust = null;
        String rank = null;
        String season = null;
        String seasonType = null;
        String outcome = null;
        String location = null;
        String month = null;
        String seasonSegment = null;
        String dateFrom = null;
        String dateTo = null;
        String opponentTeamID = null;
        String vsConference = null;
        String vsDivision = null;
        String gameSegment = null;
        String period = null;
        String lastNGames = null;
        api.teamdashboardbyshootingsplitsGet(teamID, measureType, perMode, plusMinus, paceAdjust, rank, season, seasonType, outcome, location, month, seasonSegment, dateFrom, dateTo, opponentTeamID, vsConference, vsDivision, gameSegment, period, lastNGames);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void teamdashboardbyteamperformanceGetTest() throws ApiException {
        String teamID = null;
        String measureType = null;
        String perMode = null;
        String plusMinus = null;
        String paceAdjust = null;
        String rank = null;
        String season = null;
        String seasonType = null;
        String outcome = null;
        String location = null;
        String month = null;
        String seasonSegment = null;
        String dateFrom = null;
        String dateTo = null;
        String opponentTeamID = null;
        String vsConference = null;
        String vsDivision = null;
        String gameSegment = null;
        String period = null;
        String lastNGames = null;
        api.teamdashboardbyteamperformanceGet(teamID, measureType, perMode, plusMinus, paceAdjust, rank, season, seasonType, outcome, location, month, seasonSegment, dateFrom, dateTo, opponentTeamID, vsConference, vsDivision, gameSegment, period, lastNGames);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void teamdashboardbyyearoveryearGetTest() throws ApiException {
        String teamID = null;
        String measureType = null;
        String perMode = null;
        String plusMinus = null;
        String paceAdjust = null;
        String rank = null;
        String season = null;
        String seasonType = null;
        String outcome = null;
        String location = null;
        String month = null;
        String seasonSegment = null;
        String dateFrom = null;
        String dateTo = null;
        String opponentTeamID = null;
        String vsConference = null;
        String vsDivision = null;
        String gameSegment = null;
        String period = null;
        String lastNGames = null;
        api.teamdashboardbyyearoveryearGet(teamID, measureType, perMode, plusMinus, paceAdjust, rank, season, seasonType, outcome, location, month, seasonSegment, dateFrom, dateTo, opponentTeamID, vsConference, vsDivision, gameSegment, period, lastNGames);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void teamdashlineupsGetTest() throws ApiException {
        String groupQuantity = null;
        String gameID = null;
        String seasonType = null;
        String teamID = null;
        String measureType = null;
        String perMode = null;
        String plusMinus = null;
        String paceAdjust = null;
        String rank = null;
        String season = null;
        String outcome = null;
        String location = null;
        String month = null;
        String seasonSegment = null;
        String dateFrom = null;
        String dateTo = null;
        String opponentTeamID = null;
        String vsConference = null;
        String vsDivision = null;
        String gameSegment = null;
        String period = null;
        String lastNGames = null;
        api.teamdashlineupsGet(groupQuantity, gameID, seasonType, teamID, measureType, perMode, plusMinus, paceAdjust, rank, season, outcome, location, month, seasonSegment, dateFrom, dateTo, opponentTeamID, vsConference, vsDivision, gameSegment, period, lastNGames);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void teamdashptpassGetTest() throws ApiException {
        String perMode = null;
        String season = null;
        String seasonType = null;
        String teamID = null;
        String outcome = null;
        String location = null;
        String month = null;
        String seasonSegment = null;
        String dateFrom = null;
        String dateTo = null;
        String opponentTeamID = null;
        String vsConference = null;
        String vsDivision = null;
        String lastNGames = null;
        api.teamdashptpassGet(perMode, season, seasonType, teamID, outcome, location, month, seasonSegment, dateFrom, dateTo, opponentTeamID, vsConference, vsDivision, lastNGames);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void teamdashptrebGetTest() throws ApiException {
        String perMode = null;
        String season = null;
        String seasonType = null;
        String teamID = null;
        String outcome = null;
        String location = null;
        String month = null;
        String seasonSegment = null;
        String dateFrom = null;
        String dateTo = null;
        String opponentTeamID = null;
        String vsConference = null;
        String vsDivision = null;
        String gameSegment = null;
        String period = null;
        String lastNGames = null;
        api.teamdashptrebGet(perMode, season, seasonType, teamID, outcome, location, month, seasonSegment, dateFrom, dateTo, opponentTeamID, vsConference, vsDivision, gameSegment, period, lastNGames);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void teamdashptshotsGetTest() throws ApiException {
        String perMode = null;
        String season = null;
        String seasonType = null;
        String teamID = null;
        String outcome = null;
        String location = null;
        String month = null;
        String seasonSegment = null;
        String dateFrom = null;
        String dateTo = null;
        String opponentTeamID = null;
        String vsConference = null;
        String vsDivision = null;
        String gameSegment = null;
        String period = null;
        String lastNGames = null;
        api.teamdashptshotsGet(perMode, season, seasonType, teamID, outcome, location, month, seasonSegment, dateFrom, dateTo, opponentTeamID, vsConference, vsDivision, gameSegment, period, lastNGames);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void teamgamelogGetTest() throws ApiException {
        String teamID = null;
        String season = null;
        String seasonType = null;
        api.teamgamelogGet(teamID, season, seasonType);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void teaminfocommonGetTest() throws ApiException {
        String season = null;
        String teamID = null;
        String leagueID = null;
        String seasonType = null;
        api.teaminfocommonGet(season, teamID, leagueID, seasonType);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void teamplayerdashboardGetTest() throws ApiException {
        String seasonType = null;
        String teamID = null;
        String measureType = null;
        String perMode = null;
        String plusMinus = null;
        String paceAdjust = null;
        String rank = null;
        String season = null;
        String outcome = null;
        String location = null;
        String month = null;
        String seasonSegment = null;
        String dateFrom = null;
        String dateTo = null;
        String opponentTeamID = null;
        String vsConference = null;
        String vsDivision = null;
        String gameSegment = null;
        String period = null;
        String lastNGames = null;
        api.teamplayerdashboardGet(seasonType, teamID, measureType, perMode, plusMinus, paceAdjust, rank, season, outcome, location, month, seasonSegment, dateFrom, dateTo, opponentTeamID, vsConference, vsDivision, gameSegment, period, lastNGames);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void teamplayeronoffdetailsGetTest() throws ApiException {
        String teamID = null;
        String measureType = null;
        String perMode = null;
        String plusMinus = null;
        String paceAdjust = null;
        String rank = null;
        String season = null;
        String seasonType = null;
        String outcome = null;
        String location = null;
        String month = null;
        String seasonSegment = null;
        String dateFrom = null;
        String dateTo = null;
        String opponentTeamID = null;
        String vsConference = null;
        String vsDivision = null;
        String gameSegment = null;
        String period = null;
        String lastNGames = null;
        api.teamplayeronoffdetailsGet(teamID, measureType, perMode, plusMinus, paceAdjust, rank, season, seasonType, outcome, location, month, seasonSegment, dateFrom, dateTo, opponentTeamID, vsConference, vsDivision, gameSegment, period, lastNGames);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void teamplayeronoffsummaryGetTest() throws ApiException {
        String teamID = null;
        String measureType = null;
        String perMode = null;
        String plusMinus = null;
        String paceAdjust = null;
        String rank = null;
        String season = null;
        String seasonType = null;
        String outcome = null;
        String location = null;
        String month = null;
        String seasonSegment = null;
        String dateFrom = null;
        String dateTo = null;
        String opponentTeamID = null;
        String vsConference = null;
        String vsDivision = null;
        String gameSegment = null;
        String period = null;
        String lastNGames = null;
        api.teamplayeronoffsummaryGet(teamID, measureType, perMode, plusMinus, paceAdjust, rank, season, seasonType, outcome, location, month, seasonSegment, dateFrom, dateTo, opponentTeamID, vsConference, vsDivision, gameSegment, period, lastNGames);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void teamvsplayerGetTest() throws ApiException {
        String teamID = null;
        String vsPlayerID = null;
        String seasonType = null;
        String measureType = null;
        String perMode = null;
        String plusMinus = null;
        String paceAdjust = null;
        String rank = null;
        String season = null;
        String outcome = null;
        String location = null;
        String month = null;
        String seasonSegment = null;
        String dateFrom = null;
        String dateTo = null;
        String opponentTeamID = null;
        String vsConference = null;
        String vsDivision = null;
        String gameSegment = null;
        String period = null;
        String lastNGames = null;
        api.teamvsplayerGet(teamID, vsPlayerID, seasonType, measureType, perMode, plusMinus, paceAdjust, rank, season, outcome, location, month, seasonSegment, dateFrom, dateTo, opponentTeamID, vsConference, vsDivision, gameSegment, period, lastNGames);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void teamyearbyyearstatsGetTest() throws ApiException {
        String leagueID = null;
        String seasonType = null;
        String perMode = null;
        String teamID = null;
        api.teamyearbyyearstatsGet(leagueID, seasonType, perMode, teamID);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void videoStatusGetTest() throws ApiException {
        String leagueID = null;
        String gameDate = null;
        api.videoStatusGet(leagueID, gameDate);
        // TODO: test validations
    }

}
