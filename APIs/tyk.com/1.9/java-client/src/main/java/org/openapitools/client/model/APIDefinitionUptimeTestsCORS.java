/*
 * Gateway REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.9
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * APIDefinitionUptimeTestsCORS
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:42:33.218202-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class APIDefinitionUptimeTestsCORS {
  public static final String SERIALIZED_NAME_ALLOW_CREDENTIALS = "allow_credentials";
  @SerializedName(SERIALIZED_NAME_ALLOW_CREDENTIALS)
  private Boolean allowCredentials;

  public static final String SERIALIZED_NAME_ALLOWED_HEADERS = "allowed_headers";
  @SerializedName(SERIALIZED_NAME_ALLOWED_HEADERS)
  private List<String> allowedHeaders = new ArrayList<>();

  public static final String SERIALIZED_NAME_ALLOWED_METHODS = "allowed_methods";
  @SerializedName(SERIALIZED_NAME_ALLOWED_METHODS)
  private List<String> allowedMethods = new ArrayList<>();

  public static final String SERIALIZED_NAME_ALLOWED_ORIGINS = "allowed_origins";
  @SerializedName(SERIALIZED_NAME_ALLOWED_ORIGINS)
  private List<String> allowedOrigins = new ArrayList<>();

  public static final String SERIALIZED_NAME_DEBUG = "debug";
  @SerializedName(SERIALIZED_NAME_DEBUG)
  private Boolean debug;

  public static final String SERIALIZED_NAME_ENABLE = "enable";
  @SerializedName(SERIALIZED_NAME_ENABLE)
  private Boolean enable;

  public static final String SERIALIZED_NAME_EXPOSED_HEADERS = "exposed_headers";
  @SerializedName(SERIALIZED_NAME_EXPOSED_HEADERS)
  private List<String> exposedHeaders = new ArrayList<>();

  public static final String SERIALIZED_NAME_MAX_AGE = "max_age";
  @SerializedName(SERIALIZED_NAME_MAX_AGE)
  private BigDecimal maxAge;

  public static final String SERIALIZED_NAME_OPTIONS_PASSTHROUGH = "options_passthrough";
  @SerializedName(SERIALIZED_NAME_OPTIONS_PASSTHROUGH)
  private Boolean optionsPassthrough;

  public APIDefinitionUptimeTestsCORS() {
  }

  public APIDefinitionUptimeTestsCORS allowCredentials(Boolean allowCredentials) {
    this.allowCredentials = allowCredentials;
    return this;
  }

  /**
   * Get allowCredentials
   * @return allowCredentials
   */
  @javax.annotation.Nullable
  public Boolean getAllowCredentials() {
    return allowCredentials;
  }

  public void setAllowCredentials(Boolean allowCredentials) {
    this.allowCredentials = allowCredentials;
  }


  public APIDefinitionUptimeTestsCORS allowedHeaders(List<String> allowedHeaders) {
    this.allowedHeaders = allowedHeaders;
    return this;
  }

  public APIDefinitionUptimeTestsCORS addAllowedHeadersItem(String allowedHeadersItem) {
    if (this.allowedHeaders == null) {
      this.allowedHeaders = new ArrayList<>();
    }
    this.allowedHeaders.add(allowedHeadersItem);
    return this;
  }

  /**
   * Get allowedHeaders
   * @return allowedHeaders
   */
  @javax.annotation.Nullable
  public List<String> getAllowedHeaders() {
    return allowedHeaders;
  }

  public void setAllowedHeaders(List<String> allowedHeaders) {
    this.allowedHeaders = allowedHeaders;
  }


  public APIDefinitionUptimeTestsCORS allowedMethods(List<String> allowedMethods) {
    this.allowedMethods = allowedMethods;
    return this;
  }

  public APIDefinitionUptimeTestsCORS addAllowedMethodsItem(String allowedMethodsItem) {
    if (this.allowedMethods == null) {
      this.allowedMethods = new ArrayList<>();
    }
    this.allowedMethods.add(allowedMethodsItem);
    return this;
  }

  /**
   * Get allowedMethods
   * @return allowedMethods
   */
  @javax.annotation.Nullable
  public List<String> getAllowedMethods() {
    return allowedMethods;
  }

  public void setAllowedMethods(List<String> allowedMethods) {
    this.allowedMethods = allowedMethods;
  }


  public APIDefinitionUptimeTestsCORS allowedOrigins(List<String> allowedOrigins) {
    this.allowedOrigins = allowedOrigins;
    return this;
  }

  public APIDefinitionUptimeTestsCORS addAllowedOriginsItem(String allowedOriginsItem) {
    if (this.allowedOrigins == null) {
      this.allowedOrigins = new ArrayList<>();
    }
    this.allowedOrigins.add(allowedOriginsItem);
    return this;
  }

  /**
   * Get allowedOrigins
   * @return allowedOrigins
   */
  @javax.annotation.Nullable
  public List<String> getAllowedOrigins() {
    return allowedOrigins;
  }

  public void setAllowedOrigins(List<String> allowedOrigins) {
    this.allowedOrigins = allowedOrigins;
  }


  public APIDefinitionUptimeTestsCORS debug(Boolean debug) {
    this.debug = debug;
    return this;
  }

  /**
   * Get debug
   * @return debug
   */
  @javax.annotation.Nullable
  public Boolean getDebug() {
    return debug;
  }

  public void setDebug(Boolean debug) {
    this.debug = debug;
  }


  public APIDefinitionUptimeTestsCORS enable(Boolean enable) {
    this.enable = enable;
    return this;
  }

  /**
   * Get enable
   * @return enable
   */
  @javax.annotation.Nullable
  public Boolean getEnable() {
    return enable;
  }

  public void setEnable(Boolean enable) {
    this.enable = enable;
  }


  public APIDefinitionUptimeTestsCORS exposedHeaders(List<String> exposedHeaders) {
    this.exposedHeaders = exposedHeaders;
    return this;
  }

  public APIDefinitionUptimeTestsCORS addExposedHeadersItem(String exposedHeadersItem) {
    if (this.exposedHeaders == null) {
      this.exposedHeaders = new ArrayList<>();
    }
    this.exposedHeaders.add(exposedHeadersItem);
    return this;
  }

  /**
   * Get exposedHeaders
   * @return exposedHeaders
   */
  @javax.annotation.Nullable
  public List<String> getExposedHeaders() {
    return exposedHeaders;
  }

  public void setExposedHeaders(List<String> exposedHeaders) {
    this.exposedHeaders = exposedHeaders;
  }


  public APIDefinitionUptimeTestsCORS maxAge(BigDecimal maxAge) {
    this.maxAge = maxAge;
    return this;
  }

  /**
   * Get maxAge
   * @return maxAge
   */
  @javax.annotation.Nullable
  public BigDecimal getMaxAge() {
    return maxAge;
  }

  public void setMaxAge(BigDecimal maxAge) {
    this.maxAge = maxAge;
  }


  public APIDefinitionUptimeTestsCORS optionsPassthrough(Boolean optionsPassthrough) {
    this.optionsPassthrough = optionsPassthrough;
    return this;
  }

  /**
   * Get optionsPassthrough
   * @return optionsPassthrough
   */
  @javax.annotation.Nullable
  public Boolean getOptionsPassthrough() {
    return optionsPassthrough;
  }

  public void setOptionsPassthrough(Boolean optionsPassthrough) {
    this.optionsPassthrough = optionsPassthrough;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    APIDefinitionUptimeTestsCORS apIDefinitionUptimeTestsCORS = (APIDefinitionUptimeTestsCORS) o;
    return Objects.equals(this.allowCredentials, apIDefinitionUptimeTestsCORS.allowCredentials) &&
        Objects.equals(this.allowedHeaders, apIDefinitionUptimeTestsCORS.allowedHeaders) &&
        Objects.equals(this.allowedMethods, apIDefinitionUptimeTestsCORS.allowedMethods) &&
        Objects.equals(this.allowedOrigins, apIDefinitionUptimeTestsCORS.allowedOrigins) &&
        Objects.equals(this.debug, apIDefinitionUptimeTestsCORS.debug) &&
        Objects.equals(this.enable, apIDefinitionUptimeTestsCORS.enable) &&
        Objects.equals(this.exposedHeaders, apIDefinitionUptimeTestsCORS.exposedHeaders) &&
        Objects.equals(this.maxAge, apIDefinitionUptimeTestsCORS.maxAge) &&
        Objects.equals(this.optionsPassthrough, apIDefinitionUptimeTestsCORS.optionsPassthrough);
  }

  @Override
  public int hashCode() {
    return Objects.hash(allowCredentials, allowedHeaders, allowedMethods, allowedOrigins, debug, enable, exposedHeaders, maxAge, optionsPassthrough);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class APIDefinitionUptimeTestsCORS {\n");
    sb.append("    allowCredentials: ").append(toIndentedString(allowCredentials)).append("\n");
    sb.append("    allowedHeaders: ").append(toIndentedString(allowedHeaders)).append("\n");
    sb.append("    allowedMethods: ").append(toIndentedString(allowedMethods)).append("\n");
    sb.append("    allowedOrigins: ").append(toIndentedString(allowedOrigins)).append("\n");
    sb.append("    debug: ").append(toIndentedString(debug)).append("\n");
    sb.append("    enable: ").append(toIndentedString(enable)).append("\n");
    sb.append("    exposedHeaders: ").append(toIndentedString(exposedHeaders)).append("\n");
    sb.append("    maxAge: ").append(toIndentedString(maxAge)).append("\n");
    sb.append("    optionsPassthrough: ").append(toIndentedString(optionsPassthrough)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("allow_credentials");
    openapiFields.add("allowed_headers");
    openapiFields.add("allowed_methods");
    openapiFields.add("allowed_origins");
    openapiFields.add("debug");
    openapiFields.add("enable");
    openapiFields.add("exposed_headers");
    openapiFields.add("max_age");
    openapiFields.add("options_passthrough");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to APIDefinitionUptimeTestsCORS
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!APIDefinitionUptimeTestsCORS.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in APIDefinitionUptimeTestsCORS is not found in the empty JSON string", APIDefinitionUptimeTestsCORS.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!APIDefinitionUptimeTestsCORS.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `APIDefinitionUptimeTestsCORS` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // ensure the optional json data is an array if present
      if (jsonObj.get("allowed_headers") != null && !jsonObj.get("allowed_headers").isJsonNull() && !jsonObj.get("allowed_headers").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `allowed_headers` to be an array in the JSON string but got `%s`", jsonObj.get("allowed_headers").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("allowed_methods") != null && !jsonObj.get("allowed_methods").isJsonNull() && !jsonObj.get("allowed_methods").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `allowed_methods` to be an array in the JSON string but got `%s`", jsonObj.get("allowed_methods").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("allowed_origins") != null && !jsonObj.get("allowed_origins").isJsonNull() && !jsonObj.get("allowed_origins").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `allowed_origins` to be an array in the JSON string but got `%s`", jsonObj.get("allowed_origins").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("exposed_headers") != null && !jsonObj.get("exposed_headers").isJsonNull() && !jsonObj.get("exposed_headers").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `exposed_headers` to be an array in the JSON string but got `%s`", jsonObj.get("exposed_headers").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!APIDefinitionUptimeTestsCORS.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'APIDefinitionUptimeTestsCORS' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<APIDefinitionUptimeTestsCORS> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(APIDefinitionUptimeTestsCORS.class));

       return (TypeAdapter<T>) new TypeAdapter<APIDefinitionUptimeTestsCORS>() {
           @Override
           public void write(JsonWriter out, APIDefinitionUptimeTestsCORS value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public APIDefinitionUptimeTestsCORS read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of APIDefinitionUptimeTestsCORS given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of APIDefinitionUptimeTestsCORS
   * @throws IOException if the JSON string is invalid with respect to APIDefinitionUptimeTestsCORS
   */
  public static APIDefinitionUptimeTestsCORS fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, APIDefinitionUptimeTestsCORS.class);
  }

  /**
   * Convert an instance of APIDefinitionUptimeTestsCORS to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

