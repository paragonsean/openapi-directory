/*
 * Gateway REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.9
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ServiceDiscoverConfiguration;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * APIDefinitionUptimeTestsProxy
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:42:33.218202-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class APIDefinitionUptimeTestsProxy {
  public static final String SERIALIZED_NAME_CHECK_HOST_AGAINST_UPTIME_TESTS = "check_host_against_uptime_tests";
  @SerializedName(SERIALIZED_NAME_CHECK_HOST_AGAINST_UPTIME_TESTS)
  private Boolean checkHostAgainstUptimeTests;

  public static final String SERIALIZED_NAME_ENABLE_LOAD_BALANCING = "enable_load_balancing";
  @SerializedName(SERIALIZED_NAME_ENABLE_LOAD_BALANCING)
  private Boolean enableLoadBalancing;

  public static final String SERIALIZED_NAME_LISTEN_PATH = "listen_path";
  @SerializedName(SERIALIZED_NAME_LISTEN_PATH)
  private String listenPath;

  public static final String SERIALIZED_NAME_PRESERVE_HOST_HEADER = "preserve_host_header";
  @SerializedName(SERIALIZED_NAME_PRESERVE_HOST_HEADER)
  private Boolean preserveHostHeader;

  public static final String SERIALIZED_NAME_SERVICE_DISCOVERY = "service_discovery";
  @SerializedName(SERIALIZED_NAME_SERVICE_DISCOVERY)
  private ServiceDiscoverConfiguration serviceDiscovery;

  public static final String SERIALIZED_NAME_STRIP_LISTEN_PATH = "strip_listen_path";
  @SerializedName(SERIALIZED_NAME_STRIP_LISTEN_PATH)
  private Boolean stripListenPath;

  public static final String SERIALIZED_NAME_TARGET_LIST = "target_list";
  @SerializedName(SERIALIZED_NAME_TARGET_LIST)
  private List<String> targetList = new ArrayList<>();

  public static final String SERIALIZED_NAME_TARGET_URL = "target_url";
  @SerializedName(SERIALIZED_NAME_TARGET_URL)
  private String targetUrl;

  public APIDefinitionUptimeTestsProxy() {
  }

  public APIDefinitionUptimeTestsProxy checkHostAgainstUptimeTests(Boolean checkHostAgainstUptimeTests) {
    this.checkHostAgainstUptimeTests = checkHostAgainstUptimeTests;
    return this;
  }

  /**
   * Get checkHostAgainstUptimeTests
   * @return checkHostAgainstUptimeTests
   */
  @javax.annotation.Nullable
  public Boolean getCheckHostAgainstUptimeTests() {
    return checkHostAgainstUptimeTests;
  }

  public void setCheckHostAgainstUptimeTests(Boolean checkHostAgainstUptimeTests) {
    this.checkHostAgainstUptimeTests = checkHostAgainstUptimeTests;
  }


  public APIDefinitionUptimeTestsProxy enableLoadBalancing(Boolean enableLoadBalancing) {
    this.enableLoadBalancing = enableLoadBalancing;
    return this;
  }

  /**
   * Get enableLoadBalancing
   * @return enableLoadBalancing
   */
  @javax.annotation.Nullable
  public Boolean getEnableLoadBalancing() {
    return enableLoadBalancing;
  }

  public void setEnableLoadBalancing(Boolean enableLoadBalancing) {
    this.enableLoadBalancing = enableLoadBalancing;
  }


  public APIDefinitionUptimeTestsProxy listenPath(String listenPath) {
    this.listenPath = listenPath;
    return this;
  }

  /**
   * Get listenPath
   * @return listenPath
   */
  @javax.annotation.Nullable
  public String getListenPath() {
    return listenPath;
  }

  public void setListenPath(String listenPath) {
    this.listenPath = listenPath;
  }


  public APIDefinitionUptimeTestsProxy preserveHostHeader(Boolean preserveHostHeader) {
    this.preserveHostHeader = preserveHostHeader;
    return this;
  }

  /**
   * Get preserveHostHeader
   * @return preserveHostHeader
   */
  @javax.annotation.Nullable
  public Boolean getPreserveHostHeader() {
    return preserveHostHeader;
  }

  public void setPreserveHostHeader(Boolean preserveHostHeader) {
    this.preserveHostHeader = preserveHostHeader;
  }


  public APIDefinitionUptimeTestsProxy serviceDiscovery(ServiceDiscoverConfiguration serviceDiscovery) {
    this.serviceDiscovery = serviceDiscovery;
    return this;
  }

  /**
   * Get serviceDiscovery
   * @return serviceDiscovery
   */
  @javax.annotation.Nullable
  public ServiceDiscoverConfiguration getServiceDiscovery() {
    return serviceDiscovery;
  }

  public void setServiceDiscovery(ServiceDiscoverConfiguration serviceDiscovery) {
    this.serviceDiscovery = serviceDiscovery;
  }


  public APIDefinitionUptimeTestsProxy stripListenPath(Boolean stripListenPath) {
    this.stripListenPath = stripListenPath;
    return this;
  }

  /**
   * Get stripListenPath
   * @return stripListenPath
   */
  @javax.annotation.Nullable
  public Boolean getStripListenPath() {
    return stripListenPath;
  }

  public void setStripListenPath(Boolean stripListenPath) {
    this.stripListenPath = stripListenPath;
  }


  public APIDefinitionUptimeTestsProxy targetList(List<String> targetList) {
    this.targetList = targetList;
    return this;
  }

  public APIDefinitionUptimeTestsProxy addTargetListItem(String targetListItem) {
    if (this.targetList == null) {
      this.targetList = new ArrayList<>();
    }
    this.targetList.add(targetListItem);
    return this;
  }

  /**
   * Get targetList
   * @return targetList
   */
  @javax.annotation.Nullable
  public List<String> getTargetList() {
    return targetList;
  }

  public void setTargetList(List<String> targetList) {
    this.targetList = targetList;
  }


  public APIDefinitionUptimeTestsProxy targetUrl(String targetUrl) {
    this.targetUrl = targetUrl;
    return this;
  }

  /**
   * Get targetUrl
   * @return targetUrl
   */
  @javax.annotation.Nullable
  public String getTargetUrl() {
    return targetUrl;
  }

  public void setTargetUrl(String targetUrl) {
    this.targetUrl = targetUrl;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    APIDefinitionUptimeTestsProxy apIDefinitionUptimeTestsProxy = (APIDefinitionUptimeTestsProxy) o;
    return Objects.equals(this.checkHostAgainstUptimeTests, apIDefinitionUptimeTestsProxy.checkHostAgainstUptimeTests) &&
        Objects.equals(this.enableLoadBalancing, apIDefinitionUptimeTestsProxy.enableLoadBalancing) &&
        Objects.equals(this.listenPath, apIDefinitionUptimeTestsProxy.listenPath) &&
        Objects.equals(this.preserveHostHeader, apIDefinitionUptimeTestsProxy.preserveHostHeader) &&
        Objects.equals(this.serviceDiscovery, apIDefinitionUptimeTestsProxy.serviceDiscovery) &&
        Objects.equals(this.stripListenPath, apIDefinitionUptimeTestsProxy.stripListenPath) &&
        Objects.equals(this.targetList, apIDefinitionUptimeTestsProxy.targetList) &&
        Objects.equals(this.targetUrl, apIDefinitionUptimeTestsProxy.targetUrl);
  }

  @Override
  public int hashCode() {
    return Objects.hash(checkHostAgainstUptimeTests, enableLoadBalancing, listenPath, preserveHostHeader, serviceDiscovery, stripListenPath, targetList, targetUrl);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class APIDefinitionUptimeTestsProxy {\n");
    sb.append("    checkHostAgainstUptimeTests: ").append(toIndentedString(checkHostAgainstUptimeTests)).append("\n");
    sb.append("    enableLoadBalancing: ").append(toIndentedString(enableLoadBalancing)).append("\n");
    sb.append("    listenPath: ").append(toIndentedString(listenPath)).append("\n");
    sb.append("    preserveHostHeader: ").append(toIndentedString(preserveHostHeader)).append("\n");
    sb.append("    serviceDiscovery: ").append(toIndentedString(serviceDiscovery)).append("\n");
    sb.append("    stripListenPath: ").append(toIndentedString(stripListenPath)).append("\n");
    sb.append("    targetList: ").append(toIndentedString(targetList)).append("\n");
    sb.append("    targetUrl: ").append(toIndentedString(targetUrl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("check_host_against_uptime_tests");
    openapiFields.add("enable_load_balancing");
    openapiFields.add("listen_path");
    openapiFields.add("preserve_host_header");
    openapiFields.add("service_discovery");
    openapiFields.add("strip_listen_path");
    openapiFields.add("target_list");
    openapiFields.add("target_url");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to APIDefinitionUptimeTestsProxy
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!APIDefinitionUptimeTestsProxy.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in APIDefinitionUptimeTestsProxy is not found in the empty JSON string", APIDefinitionUptimeTestsProxy.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!APIDefinitionUptimeTestsProxy.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `APIDefinitionUptimeTestsProxy` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("listen_path") != null && !jsonObj.get("listen_path").isJsonNull()) && !jsonObj.get("listen_path").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `listen_path` to be a primitive type in the JSON string but got `%s`", jsonObj.get("listen_path").toString()));
      }
      // validate the optional field `service_discovery`
      if (jsonObj.get("service_discovery") != null && !jsonObj.get("service_discovery").isJsonNull()) {
        ServiceDiscoverConfiguration.validateJsonElement(jsonObj.get("service_discovery"));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("target_list") != null && !jsonObj.get("target_list").isJsonNull() && !jsonObj.get("target_list").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `target_list` to be an array in the JSON string but got `%s`", jsonObj.get("target_list").toString()));
      }
      if ((jsonObj.get("target_url") != null && !jsonObj.get("target_url").isJsonNull()) && !jsonObj.get("target_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `target_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("target_url").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!APIDefinitionUptimeTestsProxy.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'APIDefinitionUptimeTestsProxy' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<APIDefinitionUptimeTestsProxy> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(APIDefinitionUptimeTestsProxy.class));

       return (TypeAdapter<T>) new TypeAdapter<APIDefinitionUptimeTestsProxy>() {
           @Override
           public void write(JsonWriter out, APIDefinitionUptimeTestsProxy value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public APIDefinitionUptimeTestsProxy read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of APIDefinitionUptimeTestsProxy given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of APIDefinitionUptimeTestsProxy
   * @throws IOException if the JSON string is invalid with respect to APIDefinitionUptimeTestsProxy
   */
  public static APIDefinitionUptimeTestsProxy fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, APIDefinitionUptimeTestsProxy.class);
  }

  /**
   * Convert an instance of APIDefinitionUptimeTestsProxy to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

