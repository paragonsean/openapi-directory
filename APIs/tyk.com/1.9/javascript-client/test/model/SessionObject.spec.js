/**
 * Gateway REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.9
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.GatewayRestApi);
  }
}(this, function(expect, GatewayRestApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new GatewayRestApi.SessionObject();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('SessionObject', function() {
    it('should create an instance of SessionObject', function() {
      // uncomment below and update the code to test SessionObject
      //var instance = new GatewayRestApi.SessionObject();
      //expect(instance).to.be.a(GatewayRestApi.SessionObject);
    });

    it('should have the property accessRights (base name: "access_rights")', function() {
      // uncomment below and update the code to test the property accessRights
      //var instance = new GatewayRestApi.SessionObject();
      //expect(instance).to.be();
    });

    it('should have the property allowance (base name: "allowance")', function() {
      // uncomment below and update the code to test the property allowance
      //var instance = new GatewayRestApi.SessionObject();
      //expect(instance).to.be();
    });

    it('should have the property applyPolicyId (base name: "apply_policy_id")', function() {
      // uncomment below and update the code to test the property applyPolicyId
      //var instance = new GatewayRestApi.SessionObject();
      //expect(instance).to.be();
    });

    it('should have the property basicAuthData (base name: "basic_auth_data")', function() {
      // uncomment below and update the code to test the property basicAuthData
      //var instance = new GatewayRestApi.SessionObject();
      //expect(instance).to.be();
    });

    it('should have the property expires (base name: "expires")', function() {
      // uncomment below and update the code to test the property expires
      //var instance = new GatewayRestApi.SessionObject();
      //expect(instance).to.be();
    });

    it('should have the property hmacEnabled (base name: "hmac_enabled")', function() {
      // uncomment below and update the code to test the property hmacEnabled
      //var instance = new GatewayRestApi.SessionObject();
      //expect(instance).to.be();
    });

    it('should have the property hmacString (base name: "hmac_string")', function() {
      // uncomment below and update the code to test the property hmacString
      //var instance = new GatewayRestApi.SessionObject();
      //expect(instance).to.be();
    });

    it('should have the property isInactive (base name: "is_inactive")', function() {
      // uncomment below and update the code to test the property isInactive
      //var instance = new GatewayRestApi.SessionObject();
      //expect(instance).to.be();
    });

    it('should have the property jwtData (base name: "jwt_data")', function() {
      // uncomment below and update the code to test the property jwtData
      //var instance = new GatewayRestApi.SessionObject();
      //expect(instance).to.be();
    });

    it('should have the property metaData (base name: "meta_data")', function() {
      // uncomment below and update the code to test the property metaData
      //var instance = new GatewayRestApi.SessionObject();
      //expect(instance).to.be();
    });

    it('should have the property monitor (base name: "monitor")', function() {
      // uncomment below and update the code to test the property monitor
      //var instance = new GatewayRestApi.SessionObject();
      //expect(instance).to.be();
    });

    it('should have the property oauthClientId (base name: "oauth_client_id")', function() {
      // uncomment below and update the code to test the property oauthClientId
      //var instance = new GatewayRestApi.SessionObject();
      //expect(instance).to.be();
    });

    it('should have the property orgId (base name: "org_id")', function() {
      // uncomment below and update the code to test the property orgId
      //var instance = new GatewayRestApi.SessionObject();
      //expect(instance).to.be();
    });

    it('should have the property per (base name: "per")', function() {
      // uncomment below and update the code to test the property per
      //var instance = new GatewayRestApi.SessionObject();
      //expect(instance).to.be();
    });

    it('should have the property quotaMax (base name: "quota_max")', function() {
      // uncomment below and update the code to test the property quotaMax
      //var instance = new GatewayRestApi.SessionObject();
      //expect(instance).to.be();
    });

    it('should have the property quotaRemaining (base name: "quota_remaining")', function() {
      // uncomment below and update the code to test the property quotaRemaining
      //var instance = new GatewayRestApi.SessionObject();
      //expect(instance).to.be();
    });

    it('should have the property quotaRenewalRate (base name: "quota_renewal_rate")', function() {
      // uncomment below and update the code to test the property quotaRenewalRate
      //var instance = new GatewayRestApi.SessionObject();
      //expect(instance).to.be();
    });

    it('should have the property quotaRenews (base name: "quota_renews")', function() {
      // uncomment below and update the code to test the property quotaRenews
      //var instance = new GatewayRestApi.SessionObject();
      //expect(instance).to.be();
    });

    it('should have the property rate (base name: "rate")', function() {
      // uncomment below and update the code to test the property rate
      //var instance = new GatewayRestApi.SessionObject();
      //expect(instance).to.be();
    });

    it('should have the property tags (base name: "tags")', function() {
      // uncomment below and update the code to test the property tags
      //var instance = new GatewayRestApi.SessionObject();
      //expect(instance).to.be();
    });

  });

}));
