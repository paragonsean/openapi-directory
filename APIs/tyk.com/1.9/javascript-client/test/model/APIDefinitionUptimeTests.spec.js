/**
 * Gateway REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.9
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.GatewayRestApi);
  }
}(this, function(expect, GatewayRestApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new GatewayRestApi.APIDefinitionUptimeTests();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('APIDefinitionUptimeTests', function() {
    it('should create an instance of APIDefinitionUptimeTests', function() {
      // uncomment below and update the code to test APIDefinitionUptimeTests
      //var instance = new GatewayRestApi.APIDefinitionUptimeTests();
      //expect(instance).to.be.a(GatewayRestApi.APIDefinitionUptimeTests);
    });

    it('should have the property CORS (base name: "CORS")', function() {
      // uncomment below and update the code to test the property CORS
      //var instance = new GatewayRestApi.APIDefinitionUptimeTests();
      //expect(instance).to.be();
    });

    it('should have the property active (base name: "active")', function() {
      // uncomment below and update the code to test the property active
      //var instance = new GatewayRestApi.APIDefinitionUptimeTests();
      //expect(instance).to.be();
    });

    it('should have the property allowedIps (base name: "allowed_ips")', function() {
      // uncomment below and update the code to test the property allowedIps
      //var instance = new GatewayRestApi.APIDefinitionUptimeTests();
      //expect(instance).to.be();
    });

    it('should have the property cacheOptions (base name: "cache_options")', function() {
      // uncomment below and update the code to test the property cacheOptions
      //var instance = new GatewayRestApi.APIDefinitionUptimeTests();
      //expect(instance).to.be();
    });

    it('should have the property checkList (base name: "check_list")', function() {
      // uncomment below and update the code to test the property checkList
      //var instance = new GatewayRestApi.APIDefinitionUptimeTests();
      //expect(instance).to.be();
    });

    it('should have the property config (base name: "config")', function() {
      // uncomment below and update the code to test the property config
      //var instance = new GatewayRestApi.APIDefinitionUptimeTests();
      //expect(instance).to.be();
    });

    it('should have the property customMiddleware (base name: "custom_middleware")', function() {
      // uncomment below and update the code to test the property customMiddleware
      //var instance = new GatewayRestApi.APIDefinitionUptimeTests();
      //expect(instance).to.be();
    });

    it('should have the property doNotTrack (base name: "do_not_track")', function() {
      // uncomment below and update the code to test the property doNotTrack
      //var instance = new GatewayRestApi.APIDefinitionUptimeTests();
      //expect(instance).to.be();
    });

    it('should have the property domain (base name: "domain")', function() {
      // uncomment below and update the code to test the property domain
      //var instance = new GatewayRestApi.APIDefinitionUptimeTests();
      //expect(instance).to.be();
    });

    it('should have the property dontSetQuotaOnCreate (base name: "dont_set_quota_on_create")', function() {
      // uncomment below and update the code to test the property dontSetQuotaOnCreate
      //var instance = new GatewayRestApi.APIDefinitionUptimeTests();
      //expect(instance).to.be();
    });

    it('should have the property enableBatchRequestSupport (base name: "enable_batch_request_support")', function() {
      // uncomment below and update the code to test the property enableBatchRequestSupport
      //var instance = new GatewayRestApi.APIDefinitionUptimeTests();
      //expect(instance).to.be();
    });

    it('should have the property enableIpWhitelisting (base name: "enable_ip_whitelisting")', function() {
      // uncomment below and update the code to test the property enableIpWhitelisting
      //var instance = new GatewayRestApi.APIDefinitionUptimeTests();
      //expect(instance).to.be();
    });

    it('should have the property eventHandlers (base name: "event_handlers")', function() {
      // uncomment below and update the code to test the property eventHandlers
      //var instance = new GatewayRestApi.APIDefinitionUptimeTests();
      //expect(instance).to.be();
    });

    it('should have the property expireAnalyticsAfter (base name: "expire_analytics_after")', function() {
      // uncomment below and update the code to test the property expireAnalyticsAfter
      //var instance = new GatewayRestApi.APIDefinitionUptimeTests();
      //expect(instance).to.be();
    });

    it('should have the property proxy (base name: "proxy")', function() {
      // uncomment below and update the code to test the property proxy
      //var instance = new GatewayRestApi.APIDefinitionUptimeTests();
      //expect(instance).to.be();
    });

    it('should have the property responseProcessors (base name: "response_processors")', function() {
      // uncomment below and update the code to test the property responseProcessors
      //var instance = new GatewayRestApi.APIDefinitionUptimeTests();
      //expect(instance).to.be();
    });

    it('should have the property sessionLifetime (base name: "session_lifetime")', function() {
      // uncomment below and update the code to test the property sessionLifetime
      //var instance = new GatewayRestApi.APIDefinitionUptimeTests();
      //expect(instance).to.be();
    });

    it('should have the property tags (base name: "tags")', function() {
      // uncomment below and update the code to test the property tags
      //var instance = new GatewayRestApi.APIDefinitionUptimeTests();
      //expect(instance).to.be();
    });

  });

}));
