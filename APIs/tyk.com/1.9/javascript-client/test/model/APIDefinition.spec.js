/**
 * Gateway REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.9
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.GatewayRestApi);
  }
}(this, function(expect, GatewayRestApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new GatewayRestApi.APIDefinition();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('APIDefinition', function() {
    it('should create an instance of APIDefinition', function() {
      // uncomment below and update the code to test APIDefinition
      //var instance = new GatewayRestApi.APIDefinition();
      //expect(instance).to.be.a(GatewayRestApi.APIDefinition);
    });

    it('should have the property apiId (base name: "api_id")', function() {
      // uncomment below and update the code to test the property apiId
      //var instance = new GatewayRestApi.APIDefinition();
      //expect(instance).to.be();
    });

    it('should have the property auth (base name: "auth")', function() {
      // uncomment below and update the code to test the property auth
      //var instance = new GatewayRestApi.APIDefinition();
      //expect(instance).to.be();
    });

    it('should have the property definition (base name: "definition")', function() {
      // uncomment below and update the code to test the property definition
      //var instance = new GatewayRestApi.APIDefinition();
      //expect(instance).to.be();
    });

    it('should have the property enableJwt (base name: "enable_jwt")', function() {
      // uncomment below and update the code to test the property enableJwt
      //var instance = new GatewayRestApi.APIDefinition();
      //expect(instance).to.be();
    });

    it('should have the property enableSignatureChecking (base name: "enable_signature_checking")', function() {
      // uncomment below and update the code to test the property enableSignatureChecking
      //var instance = new GatewayRestApi.APIDefinition();
      //expect(instance).to.be();
    });

    it('should have the property hmacAllowedClockSkew (base name: "hmac_allowed_clock_skew")', function() {
      // uncomment below and update the code to test the property hmacAllowedClockSkew
      //var instance = new GatewayRestApi.APIDefinition();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new GatewayRestApi.APIDefinition();
      //expect(instance).to.be();
    });

    it('should have the property jwtIdentityBaseField (base name: "jwt_identity_base_field")', function() {
      // uncomment below and update the code to test the property jwtIdentityBaseField
      //var instance = new GatewayRestApi.APIDefinition();
      //expect(instance).to.be();
    });

    it('should have the property jwtPolicyFieldName (base name: "jwt_policy_field_name")', function() {
      // uncomment below and update the code to test the property jwtPolicyFieldName
      //var instance = new GatewayRestApi.APIDefinition();
      //expect(instance).to.be();
    });

    it('should have the property jwtSigningMethod (base name: "jwt_signing_method")', function() {
      // uncomment below and update the code to test the property jwtSigningMethod
      //var instance = new GatewayRestApi.APIDefinition();
      //expect(instance).to.be();
    });

    it('should have the property jwtSource (base name: "jwt_source")', function() {
      // uncomment below and update the code to test the property jwtSource
      //var instance = new GatewayRestApi.APIDefinition();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new GatewayRestApi.APIDefinition();
      //expect(instance).to.be();
    });

    it('should have the property notifications (base name: "notifications")', function() {
      // uncomment below and update the code to test the property notifications
      //var instance = new GatewayRestApi.APIDefinition();
      //expect(instance).to.be();
    });

    it('should have the property oauthMeta (base name: "oauth_meta")', function() {
      // uncomment below and update the code to test the property oauthMeta
      //var instance = new GatewayRestApi.APIDefinition();
      //expect(instance).to.be();
    });

    it('should have the property orgId (base name: "org_id")', function() {
      // uncomment below and update the code to test the property orgId
      //var instance = new GatewayRestApi.APIDefinition();
      //expect(instance).to.be();
    });

    it('should have the property slug (base name: "slug")', function() {
      // uncomment below and update the code to test the property slug
      //var instance = new GatewayRestApi.APIDefinition();
      //expect(instance).to.be();
    });

    it('should have the property uptimeTests (base name: "uptime_tests")', function() {
      // uncomment below and update the code to test the property uptimeTests
      //var instance = new GatewayRestApi.APIDefinition();
      //expect(instance).to.be();
    });

    it('should have the property useBasicAuth (base name: "use_basic_auth")', function() {
      // uncomment below and update the code to test the property useBasicAuth
      //var instance = new GatewayRestApi.APIDefinition();
      //expect(instance).to.be();
    });

    it('should have the property useKeyless (base name: "use_keyless")', function() {
      // uncomment below and update the code to test the property useKeyless
      //var instance = new GatewayRestApi.APIDefinition();
      //expect(instance).to.be();
    });

    it('should have the property useOauth2 (base name: "use_oauth2")', function() {
      // uncomment below and update the code to test the property useOauth2
      //var instance = new GatewayRestApi.APIDefinition();
      //expect(instance).to.be();
    });

    it('should have the property versionData (base name: "version_data")', function() {
      // uncomment below and update the code to test the property versionData
      //var instance = new GatewayRestApi.APIDefinition();
      //expect(instance).to.be();
    });

  });

}));
