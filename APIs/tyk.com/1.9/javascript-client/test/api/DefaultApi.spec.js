/**
 * Gateway REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.9
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.GatewayRestApi);
  }
}(this, function(expect, GatewayRestApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new GatewayRestApi.DefaultApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DefaultApi', function() {
    describe('tykApisApiIDDelete', function() {
      it('should call tykApisApiIDDelete successfully', function(done) {
        //uncomment below and update the code to test tykApisApiIDDelete
        //instance.tykApisApiIDDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tykApisApiIDGet', function() {
      it('should call tykApisApiIDGet successfully', function(done) {
        //uncomment below and update the code to test tykApisApiIDGet
        //instance.tykApisApiIDGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tykApisApiIDPut', function() {
      it('should call tykApisApiIDPut successfully', function(done) {
        //uncomment below and update the code to test tykApisApiIDPut
        //instance.tykApisApiIDPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tykApisGet', function() {
      it('should call tykApisGet successfully', function(done) {
        //uncomment below and update the code to test tykApisGet
        //instance.tykApisGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tykApisPost', function() {
      it('should call tykApisPost successfully', function(done) {
        //uncomment below and update the code to test tykApisPost
        //instance.tykApisPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tykHealthGet', function() {
      it('should call tykHealthGet successfully', function(done) {
        //uncomment below and update the code to test tykHealthGet
        //instance.tykHealthGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tykKeysCreatePost', function() {
      it('should call tykKeysCreatePost successfully', function(done) {
        //uncomment below and update the code to test tykKeysCreatePost
        //instance.tykKeysCreatePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tykKeysGet', function() {
      it('should call tykKeysGet successfully', function(done) {
        //uncomment below and update the code to test tykKeysGet
        //instance.tykKeysGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tykKeysKeyIdDelete', function() {
      it('should call tykKeysKeyIdDelete successfully', function(done) {
        //uncomment below and update the code to test tykKeysKeyIdDelete
        //instance.tykKeysKeyIdDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tykKeysKeyIdPost', function() {
      it('should call tykKeysKeyIdPost successfully', function(done) {
        //uncomment below and update the code to test tykKeysKeyIdPost
        //instance.tykKeysKeyIdPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tykKeysKeyIdPut', function() {
      it('should call tykKeysKeyIdPut successfully', function(done) {
        //uncomment below and update the code to test tykKeysKeyIdPut
        //instance.tykKeysKeyIdPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tykOauthAuthorizeClientPost', function() {
      it('should call tykOauthAuthorizeClientPost successfully', function(done) {
        //uncomment below and update the code to test tykOauthAuthorizeClientPost
        //instance.tykOauthAuthorizeClientPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tykOauthClientsApiIdClientIdDelete', function() {
      it('should call tykOauthClientsApiIdClientIdDelete successfully', function(done) {
        //uncomment below and update the code to test tykOauthClientsApiIdClientIdDelete
        //instance.tykOauthClientsApiIdClientIdDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tykOauthClientsApiIdGet', function() {
      it('should call tykOauthClientsApiIdGet successfully', function(done) {
        //uncomment below and update the code to test tykOauthClientsApiIdGet
        //instance.tykOauthClientsApiIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tykOauthClientsCreatePost', function() {
      it('should call tykOauthClientsCreatePost successfully', function(done) {
        //uncomment below and update the code to test tykOauthClientsCreatePost
        //instance.tykOauthClientsCreatePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tykOauthRefreshKeyIdDelete', function() {
      it('should call tykOauthRefreshKeyIdDelete successfully', function(done) {
        //uncomment below and update the code to test tykOauthRefreshKeyIdDelete
        //instance.tykOauthRefreshKeyIdDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tykReloadGet', function() {
      it('should call tykReloadGet successfully', function(done) {
        //uncomment below and update the code to test tykReloadGet
        //instance.tykReloadGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tykReloadGroupGet', function() {
      it('should call tykReloadGroupGet successfully', function(done) {
        //uncomment below and update the code to test tykReloadGroupGet
        //instance.tykReloadGroupGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
