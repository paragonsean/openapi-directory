/**
 * Gateway REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.9
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import APIDefinitionAuth from './APIDefinitionAuth';
import APIDefinitionDefinition from './APIDefinitionDefinition';
import APIDefinitionNotifications from './APIDefinitionNotifications';
import APIDefinitionOauthMeta from './APIDefinitionOauthMeta';
import APIDefinitionUptimeTests from './APIDefinitionUptimeTests';
import APIDefinitionVersionData from './APIDefinitionVersionData';

/**
 * The APIDefinition model module.
 * @module model/APIDefinition
 * @version 1.9
 */
class APIDefinition {
    /**
     * Constructs a new <code>APIDefinition</code>.
     * @alias module:model/APIDefinition
     */
    constructor() { 
        
        APIDefinition.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>APIDefinition</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/APIDefinition} obj Optional instance to populate.
     * @return {module:model/APIDefinition} The populated <code>APIDefinition</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new APIDefinition();

            if (data.hasOwnProperty('api_id')) {
                obj['api_id'] = ApiClient.convertToType(data['api_id'], 'String');
            }
            if (data.hasOwnProperty('auth')) {
                obj['auth'] = APIDefinitionAuth.constructFromObject(data['auth']);
            }
            if (data.hasOwnProperty('definition')) {
                obj['definition'] = APIDefinitionDefinition.constructFromObject(data['definition']);
            }
            if (data.hasOwnProperty('enable_jwt')) {
                obj['enable_jwt'] = ApiClient.convertToType(data['enable_jwt'], 'Boolean');
            }
            if (data.hasOwnProperty('enable_signature_checking')) {
                obj['enable_signature_checking'] = ApiClient.convertToType(data['enable_signature_checking'], 'Boolean');
            }
            if (data.hasOwnProperty('hmac_allowed_clock_skew')) {
                obj['hmac_allowed_clock_skew'] = ApiClient.convertToType(data['hmac_allowed_clock_skew'], 'Number');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('jwt_identity_base_field')) {
                obj['jwt_identity_base_field'] = ApiClient.convertToType(data['jwt_identity_base_field'], 'String');
            }
            if (data.hasOwnProperty('jwt_policy_field_name')) {
                obj['jwt_policy_field_name'] = ApiClient.convertToType(data['jwt_policy_field_name'], 'String');
            }
            if (data.hasOwnProperty('jwt_signing_method')) {
                obj['jwt_signing_method'] = ApiClient.convertToType(data['jwt_signing_method'], 'String');
            }
            if (data.hasOwnProperty('jwt_source')) {
                obj['jwt_source'] = ApiClient.convertToType(data['jwt_source'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('notifications')) {
                obj['notifications'] = APIDefinitionNotifications.constructFromObject(data['notifications']);
            }
            if (data.hasOwnProperty('oauth_meta')) {
                obj['oauth_meta'] = APIDefinitionOauthMeta.constructFromObject(data['oauth_meta']);
            }
            if (data.hasOwnProperty('org_id')) {
                obj['org_id'] = ApiClient.convertToType(data['org_id'], 'String');
            }
            if (data.hasOwnProperty('slug')) {
                obj['slug'] = ApiClient.convertToType(data['slug'], 'String');
            }
            if (data.hasOwnProperty('uptime_tests')) {
                obj['uptime_tests'] = APIDefinitionUptimeTests.constructFromObject(data['uptime_tests']);
            }
            if (data.hasOwnProperty('use_basic_auth')) {
                obj['use_basic_auth'] = ApiClient.convertToType(data['use_basic_auth'], 'Boolean');
            }
            if (data.hasOwnProperty('use_keyless')) {
                obj['use_keyless'] = ApiClient.convertToType(data['use_keyless'], 'Boolean');
            }
            if (data.hasOwnProperty('use_oauth2')) {
                obj['use_oauth2'] = ApiClient.convertToType(data['use_oauth2'], 'Boolean');
            }
            if (data.hasOwnProperty('version_data')) {
                obj['version_data'] = APIDefinitionVersionData.constructFromObject(data['version_data']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>APIDefinition</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>APIDefinition</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['api_id'] && !(typeof data['api_id'] === 'string' || data['api_id'] instanceof String)) {
            throw new Error("Expected the field `api_id` to be a primitive type in the JSON string but got " + data['api_id']);
        }
        // validate the optional field `auth`
        if (data['auth']) { // data not null
          APIDefinitionAuth.validateJSON(data['auth']);
        }
        // validate the optional field `definition`
        if (data['definition']) { // data not null
          APIDefinitionDefinition.validateJSON(data['definition']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['jwt_identity_base_field'] && !(typeof data['jwt_identity_base_field'] === 'string' || data['jwt_identity_base_field'] instanceof String)) {
            throw new Error("Expected the field `jwt_identity_base_field` to be a primitive type in the JSON string but got " + data['jwt_identity_base_field']);
        }
        // ensure the json data is a string
        if (data['jwt_policy_field_name'] && !(typeof data['jwt_policy_field_name'] === 'string' || data['jwt_policy_field_name'] instanceof String)) {
            throw new Error("Expected the field `jwt_policy_field_name` to be a primitive type in the JSON string but got " + data['jwt_policy_field_name']);
        }
        // ensure the json data is a string
        if (data['jwt_signing_method'] && !(typeof data['jwt_signing_method'] === 'string' || data['jwt_signing_method'] instanceof String)) {
            throw new Error("Expected the field `jwt_signing_method` to be a primitive type in the JSON string but got " + data['jwt_signing_method']);
        }
        // ensure the json data is a string
        if (data['jwt_source'] && !(typeof data['jwt_source'] === 'string' || data['jwt_source'] instanceof String)) {
            throw new Error("Expected the field `jwt_source` to be a primitive type in the JSON string but got " + data['jwt_source']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // validate the optional field `notifications`
        if (data['notifications']) { // data not null
          APIDefinitionNotifications.validateJSON(data['notifications']);
        }
        // validate the optional field `oauth_meta`
        if (data['oauth_meta']) { // data not null
          APIDefinitionOauthMeta.validateJSON(data['oauth_meta']);
        }
        // ensure the json data is a string
        if (data['org_id'] && !(typeof data['org_id'] === 'string' || data['org_id'] instanceof String)) {
            throw new Error("Expected the field `org_id` to be a primitive type in the JSON string but got " + data['org_id']);
        }
        // ensure the json data is a string
        if (data['slug'] && !(typeof data['slug'] === 'string' || data['slug'] instanceof String)) {
            throw new Error("Expected the field `slug` to be a primitive type in the JSON string but got " + data['slug']);
        }
        // validate the optional field `uptime_tests`
        if (data['uptime_tests']) { // data not null
          APIDefinitionUptimeTests.validateJSON(data['uptime_tests']);
        }
        // validate the optional field `version_data`
        if (data['version_data']) { // data not null
          APIDefinitionVersionData.validateJSON(data['version_data']);
        }

        return true;
    }


}



/**
 * @member {String} api_id
 */
APIDefinition.prototype['api_id'] = undefined;

/**
 * @member {module:model/APIDefinitionAuth} auth
 */
APIDefinition.prototype['auth'] = undefined;

/**
 * @member {module:model/APIDefinitionDefinition} definition
 */
APIDefinition.prototype['definition'] = undefined;

/**
 * @member {Boolean} enable_jwt
 */
APIDefinition.prototype['enable_jwt'] = undefined;

/**
 * @member {Boolean} enable_signature_checking
 */
APIDefinition.prototype['enable_signature_checking'] = undefined;

/**
 * @member {Number} hmac_allowed_clock_skew
 */
APIDefinition.prototype['hmac_allowed_clock_skew'] = undefined;

/**
 * @member {String} id
 */
APIDefinition.prototype['id'] = undefined;

/**
 * @member {String} jwt_identity_base_field
 */
APIDefinition.prototype['jwt_identity_base_field'] = undefined;

/**
 * @member {String} jwt_policy_field_name
 */
APIDefinition.prototype['jwt_policy_field_name'] = undefined;

/**
 * @member {String} jwt_signing_method
 */
APIDefinition.prototype['jwt_signing_method'] = undefined;

/**
 * @member {String} jwt_source
 */
APIDefinition.prototype['jwt_source'] = undefined;

/**
 * @member {String} name
 */
APIDefinition.prototype['name'] = undefined;

/**
 * @member {module:model/APIDefinitionNotifications} notifications
 */
APIDefinition.prototype['notifications'] = undefined;

/**
 * @member {module:model/APIDefinitionOauthMeta} oauth_meta
 */
APIDefinition.prototype['oauth_meta'] = undefined;

/**
 * @member {String} org_id
 */
APIDefinition.prototype['org_id'] = undefined;

/**
 * @member {String} slug
 */
APIDefinition.prototype['slug'] = undefined;

/**
 * @member {module:model/APIDefinitionUptimeTests} uptime_tests
 */
APIDefinition.prototype['uptime_tests'] = undefined;

/**
 * @member {Boolean} use_basic_auth
 */
APIDefinition.prototype['use_basic_auth'] = undefined;

/**
 * @member {Boolean} use_keyless
 */
APIDefinition.prototype['use_keyless'] = undefined;

/**
 * @member {Boolean} use_oauth2
 */
APIDefinition.prototype['use_oauth2'] = undefined;

/**
 * @member {module:model/APIDefinitionVersionData} version_data
 */
APIDefinition.prototype['version_data'] = undefined;






export default APIDefinition;

