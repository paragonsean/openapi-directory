/**
 * Gateway REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.9
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import VersionDefinitionExtendedPaths from './VersionDefinitionExtendedPaths';

/**
 * The VersionDefinition model module.
 * @module model/VersionDefinition
 * @version 1.9
 */
class VersionDefinition {
    /**
     * Constructs a new <code>VersionDefinition</code>.
     * @alias module:model/VersionDefinition
     */
    constructor() { 
        
        VersionDefinition.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>VersionDefinition</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VersionDefinition} obj Optional instance to populate.
     * @return {module:model/VersionDefinition} The populated <code>VersionDefinition</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VersionDefinition();

            if (data.hasOwnProperty('expires')) {
                obj['expires'] = ApiClient.convertToType(data['expires'], 'String');
            }
            if (data.hasOwnProperty('extended_paths')) {
                obj['extended_paths'] = VersionDefinitionExtendedPaths.constructFromObject(data['extended_paths']);
            }
            if (data.hasOwnProperty('global_headers')) {
                obj['global_headers'] = ApiClient.convertToType(data['global_headers'], Object);
            }
            if (data.hasOwnProperty('global_headers_remove')) {
                obj['global_headers_remove'] = ApiClient.convertToType(data['global_headers_remove'], ['String']);
            }
            if (data.hasOwnProperty('global_size_limit')) {
                obj['global_size_limit'] = ApiClient.convertToType(data['global_size_limit'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('override_target')) {
                obj['override_target'] = ApiClient.convertToType(data['override_target'], 'String');
            }
            if (data.hasOwnProperty('use_extended_paths')) {
                obj['use_extended_paths'] = ApiClient.convertToType(data['use_extended_paths'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>VersionDefinition</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>VersionDefinition</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['expires'] && !(typeof data['expires'] === 'string' || data['expires'] instanceof String)) {
            throw new Error("Expected the field `expires` to be a primitive type in the JSON string but got " + data['expires']);
        }
        // validate the optional field `extended_paths`
        if (data['extended_paths']) { // data not null
          VersionDefinitionExtendedPaths.validateJSON(data['extended_paths']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['global_headers_remove'])) {
            throw new Error("Expected the field `global_headers_remove` to be an array in the JSON data but got " + data['global_headers_remove']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['override_target'] && !(typeof data['override_target'] === 'string' || data['override_target'] instanceof String)) {
            throw new Error("Expected the field `override_target` to be a primitive type in the JSON string but got " + data['override_target']);
        }

        return true;
    }


}



/**
 * @member {String} expires
 */
VersionDefinition.prototype['expires'] = undefined;

/**
 * @member {module:model/VersionDefinitionExtendedPaths} extended_paths
 */
VersionDefinition.prototype['extended_paths'] = undefined;

/**
 * @member {Object} global_headers
 */
VersionDefinition.prototype['global_headers'] = undefined;

/**
 * @member {Array.<String>} global_headers_remove
 */
VersionDefinition.prototype['global_headers_remove'] = undefined;

/**
 * @member {Number} global_size_limit
 */
VersionDefinition.prototype['global_size_limit'] = undefined;

/**
 * @member {String} name
 */
VersionDefinition.prototype['name'] = undefined;

/**
 * @member {String} override_target
 */
VersionDefinition.prototype['override_target'] = undefined;

/**
 * @member {Boolean} use_extended_paths
 */
VersionDefinition.prototype['use_extended_paths'] = undefined;






export default VersionDefinition;

