/**
 * Gateway REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.9
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The APIDefinitionOauthMeta model module.
 * @module model/APIDefinitionOauthMeta
 * @version 1.9
 */
class APIDefinitionOauthMeta {
    /**
     * Constructs a new <code>APIDefinitionOauthMeta</code>.
     * @alias module:model/APIDefinitionOauthMeta
     */
    constructor() { 
        
        APIDefinitionOauthMeta.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>APIDefinitionOauthMeta</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/APIDefinitionOauthMeta} obj Optional instance to populate.
     * @return {module:model/APIDefinitionOauthMeta} The populated <code>APIDefinitionOauthMeta</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new APIDefinitionOauthMeta();

            if (data.hasOwnProperty('allowed_access_types')) {
                obj['allowed_access_types'] = ApiClient.convertToType(data['allowed_access_types'], ['String']);
            }
            if (data.hasOwnProperty('allowed_authorize_types')) {
                obj['allowed_authorize_types'] = ApiClient.convertToType(data['allowed_authorize_types'], ['String']);
            }
            if (data.hasOwnProperty('auth_login_redirect')) {
                obj['auth_login_redirect'] = ApiClient.convertToType(data['auth_login_redirect'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>APIDefinitionOauthMeta</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>APIDefinitionOauthMeta</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['allowed_access_types'])) {
            throw new Error("Expected the field `allowed_access_types` to be an array in the JSON data but got " + data['allowed_access_types']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['allowed_authorize_types'])) {
            throw new Error("Expected the field `allowed_authorize_types` to be an array in the JSON data but got " + data['allowed_authorize_types']);
        }
        // ensure the json data is a string
        if (data['auth_login_redirect'] && !(typeof data['auth_login_redirect'] === 'string' || data['auth_login_redirect'] instanceof String)) {
            throw new Error("Expected the field `auth_login_redirect` to be a primitive type in the JSON string but got " + data['auth_login_redirect']);
        }

        return true;
    }


}



/**
 * @member {Array.<String>} allowed_access_types
 */
APIDefinitionOauthMeta.prototype['allowed_access_types'] = undefined;

/**
 * @member {Array.<String>} allowed_authorize_types
 */
APIDefinitionOauthMeta.prototype['allowed_authorize_types'] = undefined;

/**
 * @member {String} auth_login_redirect
 */
APIDefinitionOauthMeta.prototype['auth_login_redirect'] = undefined;






export default APIDefinitionOauthMeta;

