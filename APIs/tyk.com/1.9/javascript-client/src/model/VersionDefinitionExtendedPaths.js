/**
 * Gateway REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.9
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EndPointMeta from './EndPointMeta';
import HeaderInjectionMeta from './HeaderInjectionMeta';
import TemplateMeta from './TemplateMeta';
import VersionDefinitionExtendedPathsCircuitBreakersInner from './VersionDefinitionExtendedPathsCircuitBreakersInner';
import VersionDefinitionExtendedPathsHardTimeoutsInner from './VersionDefinitionExtendedPathsHardTimeoutsInner';
import VersionDefinitionExtendedPathsSizeLimitsInner from './VersionDefinitionExtendedPathsSizeLimitsInner';
import VersionDefinitionExtendedPathsUrlRewritesInner from './VersionDefinitionExtendedPathsUrlRewritesInner';
import VersionDefinitionExtendedPathsVirtualInner from './VersionDefinitionExtendedPathsVirtualInner';

/**
 * The VersionDefinitionExtendedPaths model module.
 * @module model/VersionDefinitionExtendedPaths
 * @version 1.9
 */
class VersionDefinitionExtendedPaths {
    /**
     * Constructs a new <code>VersionDefinitionExtendedPaths</code>.
     * @alias module:model/VersionDefinitionExtendedPaths
     */
    constructor() { 
        
        VersionDefinitionExtendedPaths.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>VersionDefinitionExtendedPaths</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VersionDefinitionExtendedPaths} obj Optional instance to populate.
     * @return {module:model/VersionDefinitionExtendedPaths} The populated <code>VersionDefinitionExtendedPaths</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VersionDefinitionExtendedPaths();

            if (data.hasOwnProperty('black_list')) {
                obj['black_list'] = ApiClient.convertToType(data['black_list'], [EndPointMeta]);
            }
            if (data.hasOwnProperty('cache')) {
                obj['cache'] = ApiClient.convertToType(data['cache'], ['String']);
            }
            if (data.hasOwnProperty('circuit_breakers')) {
                obj['circuit_breakers'] = ApiClient.convertToType(data['circuit_breakers'], [VersionDefinitionExtendedPathsCircuitBreakersInner]);
            }
            if (data.hasOwnProperty('hard_timeouts')) {
                obj['hard_timeouts'] = ApiClient.convertToType(data['hard_timeouts'], [VersionDefinitionExtendedPathsHardTimeoutsInner]);
            }
            if (data.hasOwnProperty('ignored')) {
                obj['ignored'] = ApiClient.convertToType(data['ignored'], [EndPointMeta]);
            }
            if (data.hasOwnProperty('size_limits')) {
                obj['size_limits'] = ApiClient.convertToType(data['size_limits'], [VersionDefinitionExtendedPathsSizeLimitsInner]);
            }
            if (data.hasOwnProperty('transform')) {
                obj['transform'] = ApiClient.convertToType(data['transform'], [TemplateMeta]);
            }
            if (data.hasOwnProperty('transform_headers')) {
                obj['transform_headers'] = ApiClient.convertToType(data['transform_headers'], [HeaderInjectionMeta]);
            }
            if (data.hasOwnProperty('transform_response')) {
                obj['transform_response'] = ApiClient.convertToType(data['transform_response'], [TemplateMeta]);
            }
            if (data.hasOwnProperty('transform_response_headers')) {
                obj['transform_response_headers'] = ApiClient.convertToType(data['transform_response_headers'], [HeaderInjectionMeta]);
            }
            if (data.hasOwnProperty('url_rewrites')) {
                obj['url_rewrites'] = ApiClient.convertToType(data['url_rewrites'], [VersionDefinitionExtendedPathsUrlRewritesInner]);
            }
            if (data.hasOwnProperty('virtual')) {
                obj['virtual'] = ApiClient.convertToType(data['virtual'], [VersionDefinitionExtendedPathsVirtualInner]);
            }
            if (data.hasOwnProperty('white_list')) {
                obj['white_list'] = ApiClient.convertToType(data['white_list'], [EndPointMeta]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>VersionDefinitionExtendedPaths</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>VersionDefinitionExtendedPaths</code>.
     */
    static validateJSON(data) {
        if (data['black_list']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['black_list'])) {
                throw new Error("Expected the field `black_list` to be an array in the JSON data but got " + data['black_list']);
            }
            // validate the optional field `black_list` (array)
            for (const item of data['black_list']) {
                EndPointMeta.validateJSON(item);
            };
        }
        // ensure the json data is an array
        if (!Array.isArray(data['cache'])) {
            throw new Error("Expected the field `cache` to be an array in the JSON data but got " + data['cache']);
        }
        if (data['circuit_breakers']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['circuit_breakers'])) {
                throw new Error("Expected the field `circuit_breakers` to be an array in the JSON data but got " + data['circuit_breakers']);
            }
            // validate the optional field `circuit_breakers` (array)
            for (const item of data['circuit_breakers']) {
                VersionDefinitionExtendedPathsCircuitBreakersInner.validateJSON(item);
            };
        }
        if (data['hard_timeouts']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['hard_timeouts'])) {
                throw new Error("Expected the field `hard_timeouts` to be an array in the JSON data but got " + data['hard_timeouts']);
            }
            // validate the optional field `hard_timeouts` (array)
            for (const item of data['hard_timeouts']) {
                VersionDefinitionExtendedPathsHardTimeoutsInner.validateJSON(item);
            };
        }
        if (data['ignored']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['ignored'])) {
                throw new Error("Expected the field `ignored` to be an array in the JSON data but got " + data['ignored']);
            }
            // validate the optional field `ignored` (array)
            for (const item of data['ignored']) {
                EndPointMeta.validateJSON(item);
            };
        }
        if (data['size_limits']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['size_limits'])) {
                throw new Error("Expected the field `size_limits` to be an array in the JSON data but got " + data['size_limits']);
            }
            // validate the optional field `size_limits` (array)
            for (const item of data['size_limits']) {
                VersionDefinitionExtendedPathsSizeLimitsInner.validateJSON(item);
            };
        }
        if (data['transform']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['transform'])) {
                throw new Error("Expected the field `transform` to be an array in the JSON data but got " + data['transform']);
            }
            // validate the optional field `transform` (array)
            for (const item of data['transform']) {
                TemplateMeta.validateJSON(item);
            };
        }
        if (data['transform_headers']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['transform_headers'])) {
                throw new Error("Expected the field `transform_headers` to be an array in the JSON data but got " + data['transform_headers']);
            }
            // validate the optional field `transform_headers` (array)
            for (const item of data['transform_headers']) {
                HeaderInjectionMeta.validateJSON(item);
            };
        }
        if (data['transform_response']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['transform_response'])) {
                throw new Error("Expected the field `transform_response` to be an array in the JSON data but got " + data['transform_response']);
            }
            // validate the optional field `transform_response` (array)
            for (const item of data['transform_response']) {
                TemplateMeta.validateJSON(item);
            };
        }
        if (data['transform_response_headers']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['transform_response_headers'])) {
                throw new Error("Expected the field `transform_response_headers` to be an array in the JSON data but got " + data['transform_response_headers']);
            }
            // validate the optional field `transform_response_headers` (array)
            for (const item of data['transform_response_headers']) {
                HeaderInjectionMeta.validateJSON(item);
            };
        }
        if (data['url_rewrites']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['url_rewrites'])) {
                throw new Error("Expected the field `url_rewrites` to be an array in the JSON data but got " + data['url_rewrites']);
            }
            // validate the optional field `url_rewrites` (array)
            for (const item of data['url_rewrites']) {
                VersionDefinitionExtendedPathsUrlRewritesInner.validateJSON(item);
            };
        }
        if (data['virtual']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['virtual'])) {
                throw new Error("Expected the field `virtual` to be an array in the JSON data but got " + data['virtual']);
            }
            // validate the optional field `virtual` (array)
            for (const item of data['virtual']) {
                VersionDefinitionExtendedPathsVirtualInner.validateJSON(item);
            };
        }
        if (data['white_list']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['white_list'])) {
                throw new Error("Expected the field `white_list` to be an array in the JSON data but got " + data['white_list']);
            }
            // validate the optional field `white_list` (array)
            for (const item of data['white_list']) {
                EndPointMeta.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {Array.<module:model/EndPointMeta>} black_list
 */
VersionDefinitionExtendedPaths.prototype['black_list'] = undefined;

/**
 * @member {Array.<String>} cache
 */
VersionDefinitionExtendedPaths.prototype['cache'] = undefined;

/**
 * @member {Array.<module:model/VersionDefinitionExtendedPathsCircuitBreakersInner>} circuit_breakers
 */
VersionDefinitionExtendedPaths.prototype['circuit_breakers'] = undefined;

/**
 * @member {Array.<module:model/VersionDefinitionExtendedPathsHardTimeoutsInner>} hard_timeouts
 */
VersionDefinitionExtendedPaths.prototype['hard_timeouts'] = undefined;

/**
 * @member {Array.<module:model/EndPointMeta>} ignored
 */
VersionDefinitionExtendedPaths.prototype['ignored'] = undefined;

/**
 * @member {Array.<module:model/VersionDefinitionExtendedPathsSizeLimitsInner>} size_limits
 */
VersionDefinitionExtendedPaths.prototype['size_limits'] = undefined;

/**
 * @member {Array.<module:model/TemplateMeta>} transform
 */
VersionDefinitionExtendedPaths.prototype['transform'] = undefined;

/**
 * @member {Array.<module:model/HeaderInjectionMeta>} transform_headers
 */
VersionDefinitionExtendedPaths.prototype['transform_headers'] = undefined;

/**
 * @member {Array.<module:model/TemplateMeta>} transform_response
 */
VersionDefinitionExtendedPaths.prototype['transform_response'] = undefined;

/**
 * @member {Array.<module:model/HeaderInjectionMeta>} transform_response_headers
 */
VersionDefinitionExtendedPaths.prototype['transform_response_headers'] = undefined;

/**
 * @member {Array.<module:model/VersionDefinitionExtendedPathsUrlRewritesInner>} url_rewrites
 */
VersionDefinitionExtendedPaths.prototype['url_rewrites'] = undefined;

/**
 * @member {Array.<module:model/VersionDefinitionExtendedPathsVirtualInner>} virtual
 */
VersionDefinitionExtendedPaths.prototype['virtual'] = undefined;

/**
 * @member {Array.<module:model/EndPointMeta>} white_list
 */
VersionDefinitionExtendedPaths.prototype['white_list'] = undefined;






export default VersionDefinitionExtendedPaths;

