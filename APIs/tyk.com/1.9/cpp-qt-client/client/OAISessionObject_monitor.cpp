/**
 * Gateway REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.9
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISessionObject_monitor.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISessionObject_monitor::OAISessionObject_monitor(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISessionObject_monitor::OAISessionObject_monitor() {
    this->initializeModel();
}

OAISessionObject_monitor::~OAISessionObject_monitor() {}

void OAISessionObject_monitor::initializeModel() {

    m_trigger_limits_isSet = false;
    m_trigger_limits_isValid = false;
}

void OAISessionObject_monitor::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISessionObject_monitor::fromJsonObject(QJsonObject json) {

    m_trigger_limits_isValid = ::OpenAPI::fromJsonValue(m_trigger_limits, json[QString("trigger_limits")]);
    m_trigger_limits_isSet = !json[QString("trigger_limits")].isNull() && m_trigger_limits_isValid;
}

QString OAISessionObject_monitor::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISessionObject_monitor::asJsonObject() const {
    QJsonObject obj;
    if (m_trigger_limits.size() > 0) {
        obj.insert(QString("trigger_limits"), ::OpenAPI::toJsonValue(m_trigger_limits));
    }
    return obj;
}

QList<QString> OAISessionObject_monitor::getTriggerLimits() const {
    return m_trigger_limits;
}
void OAISessionObject_monitor::setTriggerLimits(const QList<QString> &trigger_limits) {
    m_trigger_limits = trigger_limits;
    m_trigger_limits_isSet = true;
}

bool OAISessionObject_monitor::is_trigger_limits_Set() const{
    return m_trigger_limits_isSet;
}

bool OAISessionObject_monitor::is_trigger_limits_Valid() const{
    return m_trigger_limits_isValid;
}

bool OAISessionObject_monitor::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_trigger_limits.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISessionObject_monitor::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
