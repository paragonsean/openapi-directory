/**
 * Gateway REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.9
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIVersionDefinition.h
 *
 * 
 */

#ifndef OAIVersionDefinition_H
#define OAIVersionDefinition_H

#include <QJsonObject>

#include "OAIObject.h"
#include "OAIVersionDefinition_extended_paths.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIVersionDefinition_extended_paths;

class OAIVersionDefinition : public OAIObject {
public:
    OAIVersionDefinition();
    OAIVersionDefinition(QString json);
    ~OAIVersionDefinition() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getExpires() const;
    void setExpires(const QString &expires);
    bool is_expires_Set() const;
    bool is_expires_Valid() const;

    OAIVersionDefinition_extended_paths getExtendedPaths() const;
    void setExtendedPaths(const OAIVersionDefinition_extended_paths &extended_paths);
    bool is_extended_paths_Set() const;
    bool is_extended_paths_Valid() const;

    OAIObject getGlobalHeaders() const;
    void setGlobalHeaders(const OAIObject &global_headers);
    bool is_global_headers_Set() const;
    bool is_global_headers_Valid() const;

    QList<QString> getGlobalHeadersRemove() const;
    void setGlobalHeadersRemove(const QList<QString> &global_headers_remove);
    bool is_global_headers_remove_Set() const;
    bool is_global_headers_remove_Valid() const;

    double getGlobalSizeLimit() const;
    void setGlobalSizeLimit(const double &global_size_limit);
    bool is_global_size_limit_Set() const;
    bool is_global_size_limit_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getOverrideTarget() const;
    void setOverrideTarget(const QString &override_target);
    bool is_override_target_Set() const;
    bool is_override_target_Valid() const;

    bool isUseExtendedPaths() const;
    void setUseExtendedPaths(const bool &use_extended_paths);
    bool is_use_extended_paths_Set() const;
    bool is_use_extended_paths_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_expires;
    bool m_expires_isSet;
    bool m_expires_isValid;

    OAIVersionDefinition_extended_paths m_extended_paths;
    bool m_extended_paths_isSet;
    bool m_extended_paths_isValid;

    OAIObject m_global_headers;
    bool m_global_headers_isSet;
    bool m_global_headers_isValid;

    QList<QString> m_global_headers_remove;
    bool m_global_headers_remove_isSet;
    bool m_global_headers_remove_isValid;

    double m_global_size_limit;
    bool m_global_size_limit_isSet;
    bool m_global_size_limit_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_override_target;
    bool m_override_target_isSet;
    bool m_override_target_isValid;

    bool m_use_extended_paths;
    bool m_use_extended_paths_isSet;
    bool m_use_extended_paths_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIVersionDefinition)

#endif // OAIVersionDefinition_H
