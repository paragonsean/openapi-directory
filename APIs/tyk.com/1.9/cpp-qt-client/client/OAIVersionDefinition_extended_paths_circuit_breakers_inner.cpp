/**
 * Gateway REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.9
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIVersionDefinition_extended_paths_circuit_breakers_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIVersionDefinition_extended_paths_circuit_breakers_inner::OAIVersionDefinition_extended_paths_circuit_breakers_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIVersionDefinition_extended_paths_circuit_breakers_inner::OAIVersionDefinition_extended_paths_circuit_breakers_inner() {
    this->initializeModel();
}

OAIVersionDefinition_extended_paths_circuit_breakers_inner::~OAIVersionDefinition_extended_paths_circuit_breakers_inner() {}

void OAIVersionDefinition_extended_paths_circuit_breakers_inner::initializeModel() {

    m_method_isSet = false;
    m_method_isValid = false;

    m_path_isSet = false;
    m_path_isValid = false;

    m_return_to_service_after_isSet = false;
    m_return_to_service_after_isValid = false;

    m_samples_isSet = false;
    m_samples_isValid = false;

    m_threshold_percent_isSet = false;
    m_threshold_percent_isValid = false;
}

void OAIVersionDefinition_extended_paths_circuit_breakers_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIVersionDefinition_extended_paths_circuit_breakers_inner::fromJsonObject(QJsonObject json) {

    m_method_isValid = ::OpenAPI::fromJsonValue(m_method, json[QString("method")]);
    m_method_isSet = !json[QString("method")].isNull() && m_method_isValid;

    m_path_isValid = ::OpenAPI::fromJsonValue(m_path, json[QString("path")]);
    m_path_isSet = !json[QString("path")].isNull() && m_path_isValid;

    m_return_to_service_after_isValid = ::OpenAPI::fromJsonValue(m_return_to_service_after, json[QString("return_to_service_after")]);
    m_return_to_service_after_isSet = !json[QString("return_to_service_after")].isNull() && m_return_to_service_after_isValid;

    m_samples_isValid = ::OpenAPI::fromJsonValue(m_samples, json[QString("samples")]);
    m_samples_isSet = !json[QString("samples")].isNull() && m_samples_isValid;

    m_threshold_percent_isValid = ::OpenAPI::fromJsonValue(m_threshold_percent, json[QString("threshold_percent")]);
    m_threshold_percent_isSet = !json[QString("threshold_percent")].isNull() && m_threshold_percent_isValid;
}

QString OAIVersionDefinition_extended_paths_circuit_breakers_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIVersionDefinition_extended_paths_circuit_breakers_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_method_isSet) {
        obj.insert(QString("method"), ::OpenAPI::toJsonValue(m_method));
    }
    if (m_path_isSet) {
        obj.insert(QString("path"), ::OpenAPI::toJsonValue(m_path));
    }
    if (m_return_to_service_after_isSet) {
        obj.insert(QString("return_to_service_after"), ::OpenAPI::toJsonValue(m_return_to_service_after));
    }
    if (m_samples_isSet) {
        obj.insert(QString("samples"), ::OpenAPI::toJsonValue(m_samples));
    }
    if (m_threshold_percent_isSet) {
        obj.insert(QString("threshold_percent"), ::OpenAPI::toJsonValue(m_threshold_percent));
    }
    return obj;
}

QString OAIVersionDefinition_extended_paths_circuit_breakers_inner::getMethod() const {
    return m_method;
}
void OAIVersionDefinition_extended_paths_circuit_breakers_inner::setMethod(const QString &method) {
    m_method = method;
    m_method_isSet = true;
}

bool OAIVersionDefinition_extended_paths_circuit_breakers_inner::is_method_Set() const{
    return m_method_isSet;
}

bool OAIVersionDefinition_extended_paths_circuit_breakers_inner::is_method_Valid() const{
    return m_method_isValid;
}

QString OAIVersionDefinition_extended_paths_circuit_breakers_inner::getPath() const {
    return m_path;
}
void OAIVersionDefinition_extended_paths_circuit_breakers_inner::setPath(const QString &path) {
    m_path = path;
    m_path_isSet = true;
}

bool OAIVersionDefinition_extended_paths_circuit_breakers_inner::is_path_Set() const{
    return m_path_isSet;
}

bool OAIVersionDefinition_extended_paths_circuit_breakers_inner::is_path_Valid() const{
    return m_path_isValid;
}

double OAIVersionDefinition_extended_paths_circuit_breakers_inner::getReturnToServiceAfter() const {
    return m_return_to_service_after;
}
void OAIVersionDefinition_extended_paths_circuit_breakers_inner::setReturnToServiceAfter(const double &return_to_service_after) {
    m_return_to_service_after = return_to_service_after;
    m_return_to_service_after_isSet = true;
}

bool OAIVersionDefinition_extended_paths_circuit_breakers_inner::is_return_to_service_after_Set() const{
    return m_return_to_service_after_isSet;
}

bool OAIVersionDefinition_extended_paths_circuit_breakers_inner::is_return_to_service_after_Valid() const{
    return m_return_to_service_after_isValid;
}

double OAIVersionDefinition_extended_paths_circuit_breakers_inner::getSamples() const {
    return m_samples;
}
void OAIVersionDefinition_extended_paths_circuit_breakers_inner::setSamples(const double &samples) {
    m_samples = samples;
    m_samples_isSet = true;
}

bool OAIVersionDefinition_extended_paths_circuit_breakers_inner::is_samples_Set() const{
    return m_samples_isSet;
}

bool OAIVersionDefinition_extended_paths_circuit_breakers_inner::is_samples_Valid() const{
    return m_samples_isValid;
}

double OAIVersionDefinition_extended_paths_circuit_breakers_inner::getThresholdPercent() const {
    return m_threshold_percent;
}
void OAIVersionDefinition_extended_paths_circuit_breakers_inner::setThresholdPercent(const double &threshold_percent) {
    m_threshold_percent = threshold_percent;
    m_threshold_percent_isSet = true;
}

bool OAIVersionDefinition_extended_paths_circuit_breakers_inner::is_threshold_percent_Set() const{
    return m_threshold_percent_isSet;
}

bool OAIVersionDefinition_extended_paths_circuit_breakers_inner::is_threshold_percent_Valid() const{
    return m_threshold_percent_isValid;
}

bool OAIVersionDefinition_extended_paths_circuit_breakers_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_method_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_path_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_return_to_service_after_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_samples_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_threshold_percent_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIVersionDefinition_extended_paths_circuit_breakers_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
