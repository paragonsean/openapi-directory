/**
 * Gateway REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.9
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITemplateMeta_template_data.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITemplateMeta_template_data::OAITemplateMeta_template_data(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITemplateMeta_template_data::OAITemplateMeta_template_data() {
    this->initializeModel();
}

OAITemplateMeta_template_data::~OAITemplateMeta_template_data() {}

void OAITemplateMeta_template_data::initializeModel() {

    m_enable_session_isSet = false;
    m_enable_session_isValid = false;

    m_input_type_isSet = false;
    m_input_type_isValid = false;

    m_template_mode_isSet = false;
    m_template_mode_isValid = false;
}

void OAITemplateMeta_template_data::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITemplateMeta_template_data::fromJsonObject(QJsonObject json) {

    m_enable_session_isValid = ::OpenAPI::fromJsonValue(m_enable_session, json[QString("enable_session")]);
    m_enable_session_isSet = !json[QString("enable_session")].isNull() && m_enable_session_isValid;

    m_input_type_isValid = ::OpenAPI::fromJsonValue(m_input_type, json[QString("input_type")]);
    m_input_type_isSet = !json[QString("input_type")].isNull() && m_input_type_isValid;

    m_template_mode_isValid = ::OpenAPI::fromJsonValue(m_template_mode, json[QString("template_mode")]);
    m_template_mode_isSet = !json[QString("template_mode")].isNull() && m_template_mode_isValid;
}

QString OAITemplateMeta_template_data::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITemplateMeta_template_data::asJsonObject() const {
    QJsonObject obj;
    if (m_enable_session_isSet) {
        obj.insert(QString("enable_session"), ::OpenAPI::toJsonValue(m_enable_session));
    }
    if (m_input_type_isSet) {
        obj.insert(QString("input_type"), ::OpenAPI::toJsonValue(m_input_type));
    }
    if (m_template_mode_isSet) {
        obj.insert(QString("template_mode"), ::OpenAPI::toJsonValue(m_template_mode));
    }
    return obj;
}

bool OAITemplateMeta_template_data::isEnableSession() const {
    return m_enable_session;
}
void OAITemplateMeta_template_data::setEnableSession(const bool &enable_session) {
    m_enable_session = enable_session;
    m_enable_session_isSet = true;
}

bool OAITemplateMeta_template_data::is_enable_session_Set() const{
    return m_enable_session_isSet;
}

bool OAITemplateMeta_template_data::is_enable_session_Valid() const{
    return m_enable_session_isValid;
}

QString OAITemplateMeta_template_data::getInputType() const {
    return m_input_type;
}
void OAITemplateMeta_template_data::setInputType(const QString &input_type) {
    m_input_type = input_type;
    m_input_type_isSet = true;
}

bool OAITemplateMeta_template_data::is_input_type_Set() const{
    return m_input_type_isSet;
}

bool OAITemplateMeta_template_data::is_input_type_Valid() const{
    return m_input_type_isValid;
}

QString OAITemplateMeta_template_data::getTemplateMode() const {
    return m_template_mode;
}
void OAITemplateMeta_template_data::setTemplateMode(const QString &template_mode) {
    m_template_mode = template_mode;
    m_template_mode_isSet = true;
}

bool OAITemplateMeta_template_data::is_template_mode_Set() const{
    return m_template_mode_isSet;
}

bool OAITemplateMeta_template_data::is_template_mode_Valid() const{
    return m_template_mode_isValid;
}

bool OAITemplateMeta_template_data::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_enable_session_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_input_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_template_mode_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITemplateMeta_template_data::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
