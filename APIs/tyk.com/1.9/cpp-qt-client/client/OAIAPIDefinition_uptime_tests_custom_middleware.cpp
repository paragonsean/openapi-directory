/**
 * Gateway REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.9
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAPIDefinition_uptime_tests_custom_middleware.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAPIDefinition_uptime_tests_custom_middleware::OAIAPIDefinition_uptime_tests_custom_middleware(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAPIDefinition_uptime_tests_custom_middleware::OAIAPIDefinition_uptime_tests_custom_middleware() {
    this->initializeModel();
}

OAIAPIDefinition_uptime_tests_custom_middleware::~OAIAPIDefinition_uptime_tests_custom_middleware() {}

void OAIAPIDefinition_uptime_tests_custom_middleware::initializeModel() {

    m_post_isSet = false;
    m_post_isValid = false;

    m_pre_isSet = false;
    m_pre_isValid = false;

    m_response_isSet = false;
    m_response_isValid = false;
}

void OAIAPIDefinition_uptime_tests_custom_middleware::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAPIDefinition_uptime_tests_custom_middleware::fromJsonObject(QJsonObject json) {

    m_post_isValid = ::OpenAPI::fromJsonValue(m_post, json[QString("post")]);
    m_post_isSet = !json[QString("post")].isNull() && m_post_isValid;

    m_pre_isValid = ::OpenAPI::fromJsonValue(m_pre, json[QString("pre")]);
    m_pre_isSet = !json[QString("pre")].isNull() && m_pre_isValid;

    m_response_isValid = ::OpenAPI::fromJsonValue(m_response, json[QString("response")]);
    m_response_isSet = !json[QString("response")].isNull() && m_response_isValid;
}

QString OAIAPIDefinition_uptime_tests_custom_middleware::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAPIDefinition_uptime_tests_custom_middleware::asJsonObject() const {
    QJsonObject obj;
    if (m_post.size() > 0) {
        obj.insert(QString("post"), ::OpenAPI::toJsonValue(m_post));
    }
    if (m_pre.size() > 0) {
        obj.insert(QString("pre"), ::OpenAPI::toJsonValue(m_pre));
    }
    if (m_response.size() > 0) {
        obj.insert(QString("response"), ::OpenAPI::toJsonValue(m_response));
    }
    return obj;
}

QList<OAIMiddlewareDefinition> OAIAPIDefinition_uptime_tests_custom_middleware::getPost() const {
    return m_post;
}
void OAIAPIDefinition_uptime_tests_custom_middleware::setPost(const QList<OAIMiddlewareDefinition> &post) {
    m_post = post;
    m_post_isSet = true;
}

bool OAIAPIDefinition_uptime_tests_custom_middleware::is_post_Set() const{
    return m_post_isSet;
}

bool OAIAPIDefinition_uptime_tests_custom_middleware::is_post_Valid() const{
    return m_post_isValid;
}

QList<OAIMiddlewareDefinition> OAIAPIDefinition_uptime_tests_custom_middleware::getPre() const {
    return m_pre;
}
void OAIAPIDefinition_uptime_tests_custom_middleware::setPre(const QList<OAIMiddlewareDefinition> &pre) {
    m_pre = pre;
    m_pre_isSet = true;
}

bool OAIAPIDefinition_uptime_tests_custom_middleware::is_pre_Set() const{
    return m_pre_isSet;
}

bool OAIAPIDefinition_uptime_tests_custom_middleware::is_pre_Valid() const{
    return m_pre_isValid;
}

QList<OAIMiddlewareDefinition> OAIAPIDefinition_uptime_tests_custom_middleware::getResponse() const {
    return m_response;
}
void OAIAPIDefinition_uptime_tests_custom_middleware::setResponse(const QList<OAIMiddlewareDefinition> &response) {
    m_response = response;
    m_response_isSet = true;
}

bool OAIAPIDefinition_uptime_tests_custom_middleware::is_response_Set() const{
    return m_response_isSet;
}

bool OAIAPIDefinition_uptime_tests_custom_middleware::is_response_Valid() const{
    return m_response_isValid;
}

bool OAIAPIDefinition_uptime_tests_custom_middleware::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_post.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_pre.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_response.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAPIDefinition_uptime_tests_custom_middleware::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
