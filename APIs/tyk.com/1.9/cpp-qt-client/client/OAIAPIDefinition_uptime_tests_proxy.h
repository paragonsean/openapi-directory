/**
 * Gateway REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.9
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAPIDefinition_uptime_tests_proxy.h
 *
 * 
 */

#ifndef OAIAPIDefinition_uptime_tests_proxy_H
#define OAIAPIDefinition_uptime_tests_proxy_H

#include <QJsonObject>

#include "OAIServiceDiscoverConfiguration.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIServiceDiscoverConfiguration;

class OAIAPIDefinition_uptime_tests_proxy : public OAIObject {
public:
    OAIAPIDefinition_uptime_tests_proxy();
    OAIAPIDefinition_uptime_tests_proxy(QString json);
    ~OAIAPIDefinition_uptime_tests_proxy() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isCheckHostAgainstUptimeTests() const;
    void setCheckHostAgainstUptimeTests(const bool &check_host_against_uptime_tests);
    bool is_check_host_against_uptime_tests_Set() const;
    bool is_check_host_against_uptime_tests_Valid() const;

    bool isEnableLoadBalancing() const;
    void setEnableLoadBalancing(const bool &enable_load_balancing);
    bool is_enable_load_balancing_Set() const;
    bool is_enable_load_balancing_Valid() const;

    QString getListenPath() const;
    void setListenPath(const QString &listen_path);
    bool is_listen_path_Set() const;
    bool is_listen_path_Valid() const;

    bool isPreserveHostHeader() const;
    void setPreserveHostHeader(const bool &preserve_host_header);
    bool is_preserve_host_header_Set() const;
    bool is_preserve_host_header_Valid() const;

    OAIServiceDiscoverConfiguration getServiceDiscovery() const;
    void setServiceDiscovery(const OAIServiceDiscoverConfiguration &service_discovery);
    bool is_service_discovery_Set() const;
    bool is_service_discovery_Valid() const;

    bool isStripListenPath() const;
    void setStripListenPath(const bool &strip_listen_path);
    bool is_strip_listen_path_Set() const;
    bool is_strip_listen_path_Valid() const;

    QList<QString> getTargetList() const;
    void setTargetList(const QList<QString> &target_list);
    bool is_target_list_Set() const;
    bool is_target_list_Valid() const;

    QString getTargetUrl() const;
    void setTargetUrl(const QString &target_url);
    bool is_target_url_Set() const;
    bool is_target_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_check_host_against_uptime_tests;
    bool m_check_host_against_uptime_tests_isSet;
    bool m_check_host_against_uptime_tests_isValid;

    bool m_enable_load_balancing;
    bool m_enable_load_balancing_isSet;
    bool m_enable_load_balancing_isValid;

    QString m_listen_path;
    bool m_listen_path_isSet;
    bool m_listen_path_isValid;

    bool m_preserve_host_header;
    bool m_preserve_host_header_isSet;
    bool m_preserve_host_header_isValid;

    OAIServiceDiscoverConfiguration m_service_discovery;
    bool m_service_discovery_isSet;
    bool m_service_discovery_isValid;

    bool m_strip_listen_path;
    bool m_strip_listen_path_isSet;
    bool m_strip_listen_path_isValid;

    QList<QString> m_target_list;
    bool m_target_list_isSet;
    bool m_target_list_isValid;

    QString m_target_url;
    bool m_target_url_isSet;
    bool m_target_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAPIDefinition_uptime_tests_proxy)

#endif // OAIAPIDefinition_uptime_tests_proxy_H
