/**
 * Gateway REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.9
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIVersionDefinition_extended_paths.h
 *
 * 
 */

#ifndef OAIVersionDefinition_extended_paths_H
#define OAIVersionDefinition_extended_paths_H

#include <QJsonObject>

#include "OAIEndPointMeta.h"
#include "OAIHeaderInjectionMeta.h"
#include "OAITemplateMeta.h"
#include "OAIVersionDefinition_extended_paths_circuit_breakers_inner.h"
#include "OAIVersionDefinition_extended_paths_hard_timeouts_inner.h"
#include "OAIVersionDefinition_extended_paths_size_limits_inner.h"
#include "OAIVersionDefinition_extended_paths_url_rewrites_inner.h"
#include "OAIVersionDefinition_extended_paths_virtual_inner.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIEndPointMeta;
class OAIVersionDefinition_extended_paths_circuit_breakers_inner;
class OAIVersionDefinition_extended_paths_hard_timeouts_inner;
class OAIVersionDefinition_extended_paths_size_limits_inner;
class OAITemplateMeta;
class OAIHeaderInjectionMeta;
class OAIVersionDefinition_extended_paths_url_rewrites_inner;
class OAIVersionDefinition_extended_paths_virtual_inner;

class OAIVersionDefinition_extended_paths : public OAIObject {
public:
    OAIVersionDefinition_extended_paths();
    OAIVersionDefinition_extended_paths(QString json);
    ~OAIVersionDefinition_extended_paths() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIEndPointMeta> getBlackList() const;
    void setBlackList(const QList<OAIEndPointMeta> &black_list);
    bool is_black_list_Set() const;
    bool is_black_list_Valid() const;

    QList<QString> getCache() const;
    void setCache(const QList<QString> &cache);
    bool is_cache_Set() const;
    bool is_cache_Valid() const;

    QList<OAIVersionDefinition_extended_paths_circuit_breakers_inner> getCircuitBreakers() const;
    void setCircuitBreakers(const QList<OAIVersionDefinition_extended_paths_circuit_breakers_inner> &circuit_breakers);
    bool is_circuit_breakers_Set() const;
    bool is_circuit_breakers_Valid() const;

    QList<OAIVersionDefinition_extended_paths_hard_timeouts_inner> getHardTimeouts() const;
    void setHardTimeouts(const QList<OAIVersionDefinition_extended_paths_hard_timeouts_inner> &hard_timeouts);
    bool is_hard_timeouts_Set() const;
    bool is_hard_timeouts_Valid() const;

    QList<OAIEndPointMeta> getIgnored() const;
    void setIgnored(const QList<OAIEndPointMeta> &ignored);
    bool is_ignored_Set() const;
    bool is_ignored_Valid() const;

    QList<OAIVersionDefinition_extended_paths_size_limits_inner> getSizeLimits() const;
    void setSizeLimits(const QList<OAIVersionDefinition_extended_paths_size_limits_inner> &size_limits);
    bool is_size_limits_Set() const;
    bool is_size_limits_Valid() const;

    QList<OAITemplateMeta> getTransform() const;
    void setTransform(const QList<OAITemplateMeta> &transform);
    bool is_transform_Set() const;
    bool is_transform_Valid() const;

    QList<OAIHeaderInjectionMeta> getTransformHeaders() const;
    void setTransformHeaders(const QList<OAIHeaderInjectionMeta> &transform_headers);
    bool is_transform_headers_Set() const;
    bool is_transform_headers_Valid() const;

    QList<OAITemplateMeta> getTransformResponse() const;
    void setTransformResponse(const QList<OAITemplateMeta> &transform_response);
    bool is_transform_response_Set() const;
    bool is_transform_response_Valid() const;

    QList<OAIHeaderInjectionMeta> getTransformResponseHeaders() const;
    void setTransformResponseHeaders(const QList<OAIHeaderInjectionMeta> &transform_response_headers);
    bool is_transform_response_headers_Set() const;
    bool is_transform_response_headers_Valid() const;

    QList<OAIVersionDefinition_extended_paths_url_rewrites_inner> getUrlRewrites() const;
    void setUrlRewrites(const QList<OAIVersionDefinition_extended_paths_url_rewrites_inner> &url_rewrites);
    bool is_url_rewrites_Set() const;
    bool is_url_rewrites_Valid() const;

    QList<OAIVersionDefinition_extended_paths_virtual_inner> getRVirtual() const;
    void setRVirtual(const QList<OAIVersionDefinition_extended_paths_virtual_inner> &r_virtual);
    bool is_r_virtual_Set() const;
    bool is_r_virtual_Valid() const;

    QList<OAIEndPointMeta> getWhiteList() const;
    void setWhiteList(const QList<OAIEndPointMeta> &white_list);
    bool is_white_list_Set() const;
    bool is_white_list_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIEndPointMeta> m_black_list;
    bool m_black_list_isSet;
    bool m_black_list_isValid;

    QList<QString> m_cache;
    bool m_cache_isSet;
    bool m_cache_isValid;

    QList<OAIVersionDefinition_extended_paths_circuit_breakers_inner> m_circuit_breakers;
    bool m_circuit_breakers_isSet;
    bool m_circuit_breakers_isValid;

    QList<OAIVersionDefinition_extended_paths_hard_timeouts_inner> m_hard_timeouts;
    bool m_hard_timeouts_isSet;
    bool m_hard_timeouts_isValid;

    QList<OAIEndPointMeta> m_ignored;
    bool m_ignored_isSet;
    bool m_ignored_isValid;

    QList<OAIVersionDefinition_extended_paths_size_limits_inner> m_size_limits;
    bool m_size_limits_isSet;
    bool m_size_limits_isValid;

    QList<OAITemplateMeta> m_transform;
    bool m_transform_isSet;
    bool m_transform_isValid;

    QList<OAIHeaderInjectionMeta> m_transform_headers;
    bool m_transform_headers_isSet;
    bool m_transform_headers_isValid;

    QList<OAITemplateMeta> m_transform_response;
    bool m_transform_response_isSet;
    bool m_transform_response_isValid;

    QList<OAIHeaderInjectionMeta> m_transform_response_headers;
    bool m_transform_response_headers_isSet;
    bool m_transform_response_headers_isValid;

    QList<OAIVersionDefinition_extended_paths_url_rewrites_inner> m_url_rewrites;
    bool m_url_rewrites_isSet;
    bool m_url_rewrites_isValid;

    QList<OAIVersionDefinition_extended_paths_virtual_inner> m_r_virtual;
    bool m_r_virtual_isSet;
    bool m_r_virtual_isValid;

    QList<OAIEndPointMeta> m_white_list;
    bool m_white_list_isSet;
    bool m_white_list_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIVersionDefinition_extended_paths)

#endif // OAIVersionDefinition_extended_paths_H
