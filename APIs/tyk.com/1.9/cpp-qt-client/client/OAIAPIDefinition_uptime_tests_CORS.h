/**
 * Gateway REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.9
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAPIDefinition_uptime_tests_CORS.h
 *
 * 
 */

#ifndef OAIAPIDefinition_uptime_tests_CORS_H
#define OAIAPIDefinition_uptime_tests_CORS_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAPIDefinition_uptime_tests_CORS : public OAIObject {
public:
    OAIAPIDefinition_uptime_tests_CORS();
    OAIAPIDefinition_uptime_tests_CORS(QString json);
    ~OAIAPIDefinition_uptime_tests_CORS() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isAllowCredentials() const;
    void setAllowCredentials(const bool &allow_credentials);
    bool is_allow_credentials_Set() const;
    bool is_allow_credentials_Valid() const;

    QList<QString> getAllowedHeaders() const;
    void setAllowedHeaders(const QList<QString> &allowed_headers);
    bool is_allowed_headers_Set() const;
    bool is_allowed_headers_Valid() const;

    QList<QString> getAllowedMethods() const;
    void setAllowedMethods(const QList<QString> &allowed_methods);
    bool is_allowed_methods_Set() const;
    bool is_allowed_methods_Valid() const;

    QList<QString> getAllowedOrigins() const;
    void setAllowedOrigins(const QList<QString> &allowed_origins);
    bool is_allowed_origins_Set() const;
    bool is_allowed_origins_Valid() const;

    bool isDebug() const;
    void setDebug(const bool &debug);
    bool is_debug_Set() const;
    bool is_debug_Valid() const;

    bool isEnable() const;
    void setEnable(const bool &enable);
    bool is_enable_Set() const;
    bool is_enable_Valid() const;

    QList<QString> getExposedHeaders() const;
    void setExposedHeaders(const QList<QString> &exposed_headers);
    bool is_exposed_headers_Set() const;
    bool is_exposed_headers_Valid() const;

    double getMaxAge() const;
    void setMaxAge(const double &max_age);
    bool is_max_age_Set() const;
    bool is_max_age_Valid() const;

    bool isOptionsPassthrough() const;
    void setOptionsPassthrough(const bool &options_passthrough);
    bool is_options_passthrough_Set() const;
    bool is_options_passthrough_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_allow_credentials;
    bool m_allow_credentials_isSet;
    bool m_allow_credentials_isValid;

    QList<QString> m_allowed_headers;
    bool m_allowed_headers_isSet;
    bool m_allowed_headers_isValid;

    QList<QString> m_allowed_methods;
    bool m_allowed_methods_isSet;
    bool m_allowed_methods_isValid;

    QList<QString> m_allowed_origins;
    bool m_allowed_origins_isSet;
    bool m_allowed_origins_isValid;

    bool m_debug;
    bool m_debug_isSet;
    bool m_debug_isValid;

    bool m_enable;
    bool m_enable_isSet;
    bool m_enable_isValid;

    QList<QString> m_exposed_headers;
    bool m_exposed_headers_isSet;
    bool m_exposed_headers_isValid;

    double m_max_age;
    bool m_max_age_isSet;
    bool m_max_age_isValid;

    bool m_options_passthrough;
    bool m_options_passthrough_isSet;
    bool m_options_passthrough_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAPIDefinition_uptime_tests_CORS)

#endif // OAIAPIDefinition_uptime_tests_CORS_H
