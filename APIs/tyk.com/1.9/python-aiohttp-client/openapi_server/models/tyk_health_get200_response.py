# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TykHealthGet200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, average_requests_per_second: float=None, average_upstream_latency: float=None, key_failures_per_second: float=None, quota_violations_per_second: float=None, throttle_requests_per_second: float=None):
        """TykHealthGet200Response - a model defined in OpenAPI

        :param average_requests_per_second: The average_requests_per_second of this TykHealthGet200Response.
        :param average_upstream_latency: The average_upstream_latency of this TykHealthGet200Response.
        :param key_failures_per_second: The key_failures_per_second of this TykHealthGet200Response.
        :param quota_violations_per_second: The quota_violations_per_second of this TykHealthGet200Response.
        :param throttle_requests_per_second: The throttle_requests_per_second of this TykHealthGet200Response.
        """
        self.openapi_types = {
            'average_requests_per_second': float,
            'average_upstream_latency': float,
            'key_failures_per_second': float,
            'quota_violations_per_second': float,
            'throttle_requests_per_second': float
        }

        self.attribute_map = {
            'average_requests_per_second': 'average_requests_per_second',
            'average_upstream_latency': 'average_upstream_latency',
            'key_failures_per_second': 'key_failures_per_second',
            'quota_violations_per_second': 'quota_violations_per_second',
            'throttle_requests_per_second': 'throttle_requests_per_second'
        }

        self._average_requests_per_second = average_requests_per_second
        self._average_upstream_latency = average_upstream_latency
        self._key_failures_per_second = key_failures_per_second
        self._quota_violations_per_second = quota_violations_per_second
        self._throttle_requests_per_second = throttle_requests_per_second

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TykHealthGet200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The _tyk_health__get_200_response of this TykHealthGet200Response.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def average_requests_per_second(self):
        """Gets the average_requests_per_second of this TykHealthGet200Response.


        :return: The average_requests_per_second of this TykHealthGet200Response.
        :rtype: float
        """
        return self._average_requests_per_second

    @average_requests_per_second.setter
    def average_requests_per_second(self, average_requests_per_second):
        """Sets the average_requests_per_second of this TykHealthGet200Response.


        :param average_requests_per_second: The average_requests_per_second of this TykHealthGet200Response.
        :type average_requests_per_second: float
        """

        self._average_requests_per_second = average_requests_per_second

    @property
    def average_upstream_latency(self):
        """Gets the average_upstream_latency of this TykHealthGet200Response.


        :return: The average_upstream_latency of this TykHealthGet200Response.
        :rtype: float
        """
        return self._average_upstream_latency

    @average_upstream_latency.setter
    def average_upstream_latency(self, average_upstream_latency):
        """Sets the average_upstream_latency of this TykHealthGet200Response.


        :param average_upstream_latency: The average_upstream_latency of this TykHealthGet200Response.
        :type average_upstream_latency: float
        """

        self._average_upstream_latency = average_upstream_latency

    @property
    def key_failures_per_second(self):
        """Gets the key_failures_per_second of this TykHealthGet200Response.


        :return: The key_failures_per_second of this TykHealthGet200Response.
        :rtype: float
        """
        return self._key_failures_per_second

    @key_failures_per_second.setter
    def key_failures_per_second(self, key_failures_per_second):
        """Sets the key_failures_per_second of this TykHealthGet200Response.


        :param key_failures_per_second: The key_failures_per_second of this TykHealthGet200Response.
        :type key_failures_per_second: float
        """

        self._key_failures_per_second = key_failures_per_second

    @property
    def quota_violations_per_second(self):
        """Gets the quota_violations_per_second of this TykHealthGet200Response.


        :return: The quota_violations_per_second of this TykHealthGet200Response.
        :rtype: float
        """
        return self._quota_violations_per_second

    @quota_violations_per_second.setter
    def quota_violations_per_second(self, quota_violations_per_second):
        """Sets the quota_violations_per_second of this TykHealthGet200Response.


        :param quota_violations_per_second: The quota_violations_per_second of this TykHealthGet200Response.
        :type quota_violations_per_second: float
        """

        self._quota_violations_per_second = quota_violations_per_second

    @property
    def throttle_requests_per_second(self):
        """Gets the throttle_requests_per_second of this TykHealthGet200Response.


        :return: The throttle_requests_per_second of this TykHealthGet200Response.
        :rtype: float
        """
        return self._throttle_requests_per_second

    @throttle_requests_per_second.setter
    def throttle_requests_per_second(self, throttle_requests_per_second):
        """Sets the throttle_requests_per_second of this TykHealthGet200Response.


        :param throttle_requests_per_second: The throttle_requests_per_second of this TykHealthGet200Response.
        :type throttle_requests_per_second: float
        """

        self._throttle_requests_per_second = throttle_requests_per_second
