# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.version_definition import VersionDefinition
from openapi_server import util


class APIDefinitionVersionData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, not_versioned: bool=None, versions: Dict[str, VersionDefinition]=None):
        """APIDefinitionVersionData - a model defined in OpenAPI

        :param not_versioned: The not_versioned of this APIDefinitionVersionData.
        :param versions: The versions of this APIDefinitionVersionData.
        """
        self.openapi_types = {
            'not_versioned': bool,
            'versions': Dict[str, VersionDefinition]
        }

        self.attribute_map = {
            'not_versioned': 'not_versioned',
            'versions': 'versions'
        }

        self._not_versioned = not_versioned
        self._versions = versions

    @classmethod
    def from_dict(cls, dikt: dict) -> 'APIDefinitionVersionData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The APIDefinition_version_data of this APIDefinitionVersionData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def not_versioned(self):
        """Gets the not_versioned of this APIDefinitionVersionData.


        :return: The not_versioned of this APIDefinitionVersionData.
        :rtype: bool
        """
        return self._not_versioned

    @not_versioned.setter
    def not_versioned(self, not_versioned):
        """Sets the not_versioned of this APIDefinitionVersionData.


        :param not_versioned: The not_versioned of this APIDefinitionVersionData.
        :type not_versioned: bool
        """

        self._not_versioned = not_versioned

    @property
    def versions(self):
        """Gets the versions of this APIDefinitionVersionData.


        :return: The versions of this APIDefinitionVersionData.
        :rtype: Dict[str, VersionDefinition]
        """
        return self._versions

    @versions.setter
    def versions(self, versions):
        """Sets the versions of this APIDefinitionVersionData.


        :param versions: The versions of this APIDefinitionVersionData.
        :type versions: Dict[str, VersionDefinition]
        """

        self._versions = versions
