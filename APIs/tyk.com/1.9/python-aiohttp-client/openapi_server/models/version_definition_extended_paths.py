# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.end_point_meta import EndPointMeta
from openapi_server.models.header_injection_meta import HeaderInjectionMeta
from openapi_server.models.template_meta import TemplateMeta
from openapi_server.models.version_definition_extended_paths_circuit_breakers_inner import VersionDefinitionExtendedPathsCircuitBreakersInner
from openapi_server.models.version_definition_extended_paths_hard_timeouts_inner import VersionDefinitionExtendedPathsHardTimeoutsInner
from openapi_server.models.version_definition_extended_paths_size_limits_inner import VersionDefinitionExtendedPathsSizeLimitsInner
from openapi_server.models.version_definition_extended_paths_url_rewrites_inner import VersionDefinitionExtendedPathsUrlRewritesInner
from openapi_server.models.version_definition_extended_paths_virtual_inner import VersionDefinitionExtendedPathsVirtualInner
from openapi_server import util


class VersionDefinitionExtendedPaths(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, black_list: List[EndPointMeta]=None, cache: List[str]=None, circuit_breakers: List[VersionDefinitionExtendedPathsCircuitBreakersInner]=None, hard_timeouts: List[VersionDefinitionExtendedPathsHardTimeoutsInner]=None, ignored: List[EndPointMeta]=None, size_limits: List[VersionDefinitionExtendedPathsSizeLimitsInner]=None, transform: List[TemplateMeta]=None, transform_headers: List[HeaderInjectionMeta]=None, transform_response: List[TemplateMeta]=None, transform_response_headers: List[HeaderInjectionMeta]=None, url_rewrites: List[VersionDefinitionExtendedPathsUrlRewritesInner]=None, virtual: List[VersionDefinitionExtendedPathsVirtualInner]=None, white_list: List[EndPointMeta]=None):
        """VersionDefinitionExtendedPaths - a model defined in OpenAPI

        :param black_list: The black_list of this VersionDefinitionExtendedPaths.
        :param cache: The cache of this VersionDefinitionExtendedPaths.
        :param circuit_breakers: The circuit_breakers of this VersionDefinitionExtendedPaths.
        :param hard_timeouts: The hard_timeouts of this VersionDefinitionExtendedPaths.
        :param ignored: The ignored of this VersionDefinitionExtendedPaths.
        :param size_limits: The size_limits of this VersionDefinitionExtendedPaths.
        :param transform: The transform of this VersionDefinitionExtendedPaths.
        :param transform_headers: The transform_headers of this VersionDefinitionExtendedPaths.
        :param transform_response: The transform_response of this VersionDefinitionExtendedPaths.
        :param transform_response_headers: The transform_response_headers of this VersionDefinitionExtendedPaths.
        :param url_rewrites: The url_rewrites of this VersionDefinitionExtendedPaths.
        :param virtual: The virtual of this VersionDefinitionExtendedPaths.
        :param white_list: The white_list of this VersionDefinitionExtendedPaths.
        """
        self.openapi_types = {
            'black_list': List[EndPointMeta],
            'cache': List[str],
            'circuit_breakers': List[VersionDefinitionExtendedPathsCircuitBreakersInner],
            'hard_timeouts': List[VersionDefinitionExtendedPathsHardTimeoutsInner],
            'ignored': List[EndPointMeta],
            'size_limits': List[VersionDefinitionExtendedPathsSizeLimitsInner],
            'transform': List[TemplateMeta],
            'transform_headers': List[HeaderInjectionMeta],
            'transform_response': List[TemplateMeta],
            'transform_response_headers': List[HeaderInjectionMeta],
            'url_rewrites': List[VersionDefinitionExtendedPathsUrlRewritesInner],
            'virtual': List[VersionDefinitionExtendedPathsVirtualInner],
            'white_list': List[EndPointMeta]
        }

        self.attribute_map = {
            'black_list': 'black_list',
            'cache': 'cache',
            'circuit_breakers': 'circuit_breakers',
            'hard_timeouts': 'hard_timeouts',
            'ignored': 'ignored',
            'size_limits': 'size_limits',
            'transform': 'transform',
            'transform_headers': 'transform_headers',
            'transform_response': 'transform_response',
            'transform_response_headers': 'transform_response_headers',
            'url_rewrites': 'url_rewrites',
            'virtual': 'virtual',
            'white_list': 'white_list'
        }

        self._black_list = black_list
        self._cache = cache
        self._circuit_breakers = circuit_breakers
        self._hard_timeouts = hard_timeouts
        self._ignored = ignored
        self._size_limits = size_limits
        self._transform = transform
        self._transform_headers = transform_headers
        self._transform_response = transform_response
        self._transform_response_headers = transform_response_headers
        self._url_rewrites = url_rewrites
        self._virtual = virtual
        self._white_list = white_list

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VersionDefinitionExtendedPaths':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VersionDefinition_extended_paths of this VersionDefinitionExtendedPaths.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def black_list(self):
        """Gets the black_list of this VersionDefinitionExtendedPaths.


        :return: The black_list of this VersionDefinitionExtendedPaths.
        :rtype: List[EndPointMeta]
        """
        return self._black_list

    @black_list.setter
    def black_list(self, black_list):
        """Sets the black_list of this VersionDefinitionExtendedPaths.


        :param black_list: The black_list of this VersionDefinitionExtendedPaths.
        :type black_list: List[EndPointMeta]
        """

        self._black_list = black_list

    @property
    def cache(self):
        """Gets the cache of this VersionDefinitionExtendedPaths.


        :return: The cache of this VersionDefinitionExtendedPaths.
        :rtype: List[str]
        """
        return self._cache

    @cache.setter
    def cache(self, cache):
        """Sets the cache of this VersionDefinitionExtendedPaths.


        :param cache: The cache of this VersionDefinitionExtendedPaths.
        :type cache: List[str]
        """

        self._cache = cache

    @property
    def circuit_breakers(self):
        """Gets the circuit_breakers of this VersionDefinitionExtendedPaths.


        :return: The circuit_breakers of this VersionDefinitionExtendedPaths.
        :rtype: List[VersionDefinitionExtendedPathsCircuitBreakersInner]
        """
        return self._circuit_breakers

    @circuit_breakers.setter
    def circuit_breakers(self, circuit_breakers):
        """Sets the circuit_breakers of this VersionDefinitionExtendedPaths.


        :param circuit_breakers: The circuit_breakers of this VersionDefinitionExtendedPaths.
        :type circuit_breakers: List[VersionDefinitionExtendedPathsCircuitBreakersInner]
        """

        self._circuit_breakers = circuit_breakers

    @property
    def hard_timeouts(self):
        """Gets the hard_timeouts of this VersionDefinitionExtendedPaths.


        :return: The hard_timeouts of this VersionDefinitionExtendedPaths.
        :rtype: List[VersionDefinitionExtendedPathsHardTimeoutsInner]
        """
        return self._hard_timeouts

    @hard_timeouts.setter
    def hard_timeouts(self, hard_timeouts):
        """Sets the hard_timeouts of this VersionDefinitionExtendedPaths.


        :param hard_timeouts: The hard_timeouts of this VersionDefinitionExtendedPaths.
        :type hard_timeouts: List[VersionDefinitionExtendedPathsHardTimeoutsInner]
        """

        self._hard_timeouts = hard_timeouts

    @property
    def ignored(self):
        """Gets the ignored of this VersionDefinitionExtendedPaths.


        :return: The ignored of this VersionDefinitionExtendedPaths.
        :rtype: List[EndPointMeta]
        """
        return self._ignored

    @ignored.setter
    def ignored(self, ignored):
        """Sets the ignored of this VersionDefinitionExtendedPaths.


        :param ignored: The ignored of this VersionDefinitionExtendedPaths.
        :type ignored: List[EndPointMeta]
        """

        self._ignored = ignored

    @property
    def size_limits(self):
        """Gets the size_limits of this VersionDefinitionExtendedPaths.


        :return: The size_limits of this VersionDefinitionExtendedPaths.
        :rtype: List[VersionDefinitionExtendedPathsSizeLimitsInner]
        """
        return self._size_limits

    @size_limits.setter
    def size_limits(self, size_limits):
        """Sets the size_limits of this VersionDefinitionExtendedPaths.


        :param size_limits: The size_limits of this VersionDefinitionExtendedPaths.
        :type size_limits: List[VersionDefinitionExtendedPathsSizeLimitsInner]
        """

        self._size_limits = size_limits

    @property
    def transform(self):
        """Gets the transform of this VersionDefinitionExtendedPaths.


        :return: The transform of this VersionDefinitionExtendedPaths.
        :rtype: List[TemplateMeta]
        """
        return self._transform

    @transform.setter
    def transform(self, transform):
        """Sets the transform of this VersionDefinitionExtendedPaths.


        :param transform: The transform of this VersionDefinitionExtendedPaths.
        :type transform: List[TemplateMeta]
        """

        self._transform = transform

    @property
    def transform_headers(self):
        """Gets the transform_headers of this VersionDefinitionExtendedPaths.


        :return: The transform_headers of this VersionDefinitionExtendedPaths.
        :rtype: List[HeaderInjectionMeta]
        """
        return self._transform_headers

    @transform_headers.setter
    def transform_headers(self, transform_headers):
        """Sets the transform_headers of this VersionDefinitionExtendedPaths.


        :param transform_headers: The transform_headers of this VersionDefinitionExtendedPaths.
        :type transform_headers: List[HeaderInjectionMeta]
        """

        self._transform_headers = transform_headers

    @property
    def transform_response(self):
        """Gets the transform_response of this VersionDefinitionExtendedPaths.


        :return: The transform_response of this VersionDefinitionExtendedPaths.
        :rtype: List[TemplateMeta]
        """
        return self._transform_response

    @transform_response.setter
    def transform_response(self, transform_response):
        """Sets the transform_response of this VersionDefinitionExtendedPaths.


        :param transform_response: The transform_response of this VersionDefinitionExtendedPaths.
        :type transform_response: List[TemplateMeta]
        """

        self._transform_response = transform_response

    @property
    def transform_response_headers(self):
        """Gets the transform_response_headers of this VersionDefinitionExtendedPaths.


        :return: The transform_response_headers of this VersionDefinitionExtendedPaths.
        :rtype: List[HeaderInjectionMeta]
        """
        return self._transform_response_headers

    @transform_response_headers.setter
    def transform_response_headers(self, transform_response_headers):
        """Sets the transform_response_headers of this VersionDefinitionExtendedPaths.


        :param transform_response_headers: The transform_response_headers of this VersionDefinitionExtendedPaths.
        :type transform_response_headers: List[HeaderInjectionMeta]
        """

        self._transform_response_headers = transform_response_headers

    @property
    def url_rewrites(self):
        """Gets the url_rewrites of this VersionDefinitionExtendedPaths.


        :return: The url_rewrites of this VersionDefinitionExtendedPaths.
        :rtype: List[VersionDefinitionExtendedPathsUrlRewritesInner]
        """
        return self._url_rewrites

    @url_rewrites.setter
    def url_rewrites(self, url_rewrites):
        """Sets the url_rewrites of this VersionDefinitionExtendedPaths.


        :param url_rewrites: The url_rewrites of this VersionDefinitionExtendedPaths.
        :type url_rewrites: List[VersionDefinitionExtendedPathsUrlRewritesInner]
        """

        self._url_rewrites = url_rewrites

    @property
    def virtual(self):
        """Gets the virtual of this VersionDefinitionExtendedPaths.


        :return: The virtual of this VersionDefinitionExtendedPaths.
        :rtype: List[VersionDefinitionExtendedPathsVirtualInner]
        """
        return self._virtual

    @virtual.setter
    def virtual(self, virtual):
        """Sets the virtual of this VersionDefinitionExtendedPaths.


        :param virtual: The virtual of this VersionDefinitionExtendedPaths.
        :type virtual: List[VersionDefinitionExtendedPathsVirtualInner]
        """

        self._virtual = virtual

    @property
    def white_list(self):
        """Gets the white_list of this VersionDefinitionExtendedPaths.


        :return: The white_list of this VersionDefinitionExtendedPaths.
        :rtype: List[EndPointMeta]
        """
        return self._white_list

    @white_list.setter
    def white_list(self, white_list):
        """Sets the white_list of this VersionDefinitionExtendedPaths.


        :param white_list: The white_list of this VersionDefinitionExtendedPaths.
        :type white_list: List[EndPointMeta]
        """

        self._white_list = white_list
