# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class APIDefinitionOauthMeta(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, allowed_access_types: List[str]=None, allowed_authorize_types: List[str]=None, auth_login_redirect: str=None):
        """APIDefinitionOauthMeta - a model defined in OpenAPI

        :param allowed_access_types: The allowed_access_types of this APIDefinitionOauthMeta.
        :param allowed_authorize_types: The allowed_authorize_types of this APIDefinitionOauthMeta.
        :param auth_login_redirect: The auth_login_redirect of this APIDefinitionOauthMeta.
        """
        self.openapi_types = {
            'allowed_access_types': List[str],
            'allowed_authorize_types': List[str],
            'auth_login_redirect': str
        }

        self.attribute_map = {
            'allowed_access_types': 'allowed_access_types',
            'allowed_authorize_types': 'allowed_authorize_types',
            'auth_login_redirect': 'auth_login_redirect'
        }

        self._allowed_access_types = allowed_access_types
        self._allowed_authorize_types = allowed_authorize_types
        self._auth_login_redirect = auth_login_redirect

    @classmethod
    def from_dict(cls, dikt: dict) -> 'APIDefinitionOauthMeta':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The APIDefinition_oauth_meta of this APIDefinitionOauthMeta.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def allowed_access_types(self):
        """Gets the allowed_access_types of this APIDefinitionOauthMeta.


        :return: The allowed_access_types of this APIDefinitionOauthMeta.
        :rtype: List[str]
        """
        return self._allowed_access_types

    @allowed_access_types.setter
    def allowed_access_types(self, allowed_access_types):
        """Sets the allowed_access_types of this APIDefinitionOauthMeta.


        :param allowed_access_types: The allowed_access_types of this APIDefinitionOauthMeta.
        :type allowed_access_types: List[str]
        """

        self._allowed_access_types = allowed_access_types

    @property
    def allowed_authorize_types(self):
        """Gets the allowed_authorize_types of this APIDefinitionOauthMeta.


        :return: The allowed_authorize_types of this APIDefinitionOauthMeta.
        :rtype: List[str]
        """
        return self._allowed_authorize_types

    @allowed_authorize_types.setter
    def allowed_authorize_types(self, allowed_authorize_types):
        """Sets the allowed_authorize_types of this APIDefinitionOauthMeta.


        :param allowed_authorize_types: The allowed_authorize_types of this APIDefinitionOauthMeta.
        :type allowed_authorize_types: List[str]
        """

        self._allowed_authorize_types = allowed_authorize_types

    @property
    def auth_login_redirect(self):
        """Gets the auth_login_redirect of this APIDefinitionOauthMeta.


        :return: The auth_login_redirect of this APIDefinitionOauthMeta.
        :rtype: str
        """
        return self._auth_login_redirect

    @auth_login_redirect.setter
    def auth_login_redirect(self, auth_login_redirect):
        """Sets the auth_login_redirect of this APIDefinitionOauthMeta.


        :param auth_login_redirect: The auth_login_redirect of this APIDefinitionOauthMeta.
        :type auth_login_redirect: str
        """

        self._auth_login_redirect = auth_login_redirect
