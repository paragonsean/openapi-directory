# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AccessRights(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, api_id: str=None, api_name: str=None, versions: List[str]=None):
        """AccessRights - a model defined in OpenAPI

        :param api_id: The api_id of this AccessRights.
        :param api_name: The api_name of this AccessRights.
        :param versions: The versions of this AccessRights.
        """
        self.openapi_types = {
            'api_id': str,
            'api_name': str,
            'versions': List[str]
        }

        self.attribute_map = {
            'api_id': 'api_id',
            'api_name': 'api_name',
            'versions': 'versions'
        }

        self._api_id = api_id
        self._api_name = api_name
        self._versions = versions

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AccessRights':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AccessRights of this AccessRights.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def api_id(self):
        """Gets the api_id of this AccessRights.


        :return: The api_id of this AccessRights.
        :rtype: str
        """
        return self._api_id

    @api_id.setter
    def api_id(self, api_id):
        """Sets the api_id of this AccessRights.


        :param api_id: The api_id of this AccessRights.
        :type api_id: str
        """

        self._api_id = api_id

    @property
    def api_name(self):
        """Gets the api_name of this AccessRights.


        :return: The api_name of this AccessRights.
        :rtype: str
        """
        return self._api_name

    @api_name.setter
    def api_name(self, api_name):
        """Sets the api_name of this AccessRights.


        :param api_name: The api_name of this AccessRights.
        :type api_name: str
        """

        self._api_name = api_name

    @property
    def versions(self):
        """Gets the versions of this AccessRights.


        :return: The versions of this AccessRights.
        :rtype: List[str]
        """
        return self._versions

    @versions.setter
    def versions(self, versions):
        """Sets the versions of this AccessRights.


        :param versions: The versions of this AccessRights.
        :type versions: List[str]
        """

        self._versions = versions
