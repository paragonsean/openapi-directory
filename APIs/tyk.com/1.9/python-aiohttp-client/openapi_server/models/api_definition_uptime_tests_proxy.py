# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.service_discover_configuration import ServiceDiscoverConfiguration
from openapi_server import util


class APIDefinitionUptimeTestsProxy(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, check_host_against_uptime_tests: bool=None, enable_load_balancing: bool=None, listen_path: str=None, preserve_host_header: bool=None, service_discovery: ServiceDiscoverConfiguration=None, strip_listen_path: bool=None, target_list: List[str]=None, target_url: str=None):
        """APIDefinitionUptimeTestsProxy - a model defined in OpenAPI

        :param check_host_against_uptime_tests: The check_host_against_uptime_tests of this APIDefinitionUptimeTestsProxy.
        :param enable_load_balancing: The enable_load_balancing of this APIDefinitionUptimeTestsProxy.
        :param listen_path: The listen_path of this APIDefinitionUptimeTestsProxy.
        :param preserve_host_header: The preserve_host_header of this APIDefinitionUptimeTestsProxy.
        :param service_discovery: The service_discovery of this APIDefinitionUptimeTestsProxy.
        :param strip_listen_path: The strip_listen_path of this APIDefinitionUptimeTestsProxy.
        :param target_list: The target_list of this APIDefinitionUptimeTestsProxy.
        :param target_url: The target_url of this APIDefinitionUptimeTestsProxy.
        """
        self.openapi_types = {
            'check_host_against_uptime_tests': bool,
            'enable_load_balancing': bool,
            'listen_path': str,
            'preserve_host_header': bool,
            'service_discovery': ServiceDiscoverConfiguration,
            'strip_listen_path': bool,
            'target_list': List[str],
            'target_url': str
        }

        self.attribute_map = {
            'check_host_against_uptime_tests': 'check_host_against_uptime_tests',
            'enable_load_balancing': 'enable_load_balancing',
            'listen_path': 'listen_path',
            'preserve_host_header': 'preserve_host_header',
            'service_discovery': 'service_discovery',
            'strip_listen_path': 'strip_listen_path',
            'target_list': 'target_list',
            'target_url': 'target_url'
        }

        self._check_host_against_uptime_tests = check_host_against_uptime_tests
        self._enable_load_balancing = enable_load_balancing
        self._listen_path = listen_path
        self._preserve_host_header = preserve_host_header
        self._service_discovery = service_discovery
        self._strip_listen_path = strip_listen_path
        self._target_list = target_list
        self._target_url = target_url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'APIDefinitionUptimeTestsProxy':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The APIDefinition_uptime_tests_proxy of this APIDefinitionUptimeTestsProxy.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def check_host_against_uptime_tests(self):
        """Gets the check_host_against_uptime_tests of this APIDefinitionUptimeTestsProxy.


        :return: The check_host_against_uptime_tests of this APIDefinitionUptimeTestsProxy.
        :rtype: bool
        """
        return self._check_host_against_uptime_tests

    @check_host_against_uptime_tests.setter
    def check_host_against_uptime_tests(self, check_host_against_uptime_tests):
        """Sets the check_host_against_uptime_tests of this APIDefinitionUptimeTestsProxy.


        :param check_host_against_uptime_tests: The check_host_against_uptime_tests of this APIDefinitionUptimeTestsProxy.
        :type check_host_against_uptime_tests: bool
        """

        self._check_host_against_uptime_tests = check_host_against_uptime_tests

    @property
    def enable_load_balancing(self):
        """Gets the enable_load_balancing of this APIDefinitionUptimeTestsProxy.


        :return: The enable_load_balancing of this APIDefinitionUptimeTestsProxy.
        :rtype: bool
        """
        return self._enable_load_balancing

    @enable_load_balancing.setter
    def enable_load_balancing(self, enable_load_balancing):
        """Sets the enable_load_balancing of this APIDefinitionUptimeTestsProxy.


        :param enable_load_balancing: The enable_load_balancing of this APIDefinitionUptimeTestsProxy.
        :type enable_load_balancing: bool
        """

        self._enable_load_balancing = enable_load_balancing

    @property
    def listen_path(self):
        """Gets the listen_path of this APIDefinitionUptimeTestsProxy.


        :return: The listen_path of this APIDefinitionUptimeTestsProxy.
        :rtype: str
        """
        return self._listen_path

    @listen_path.setter
    def listen_path(self, listen_path):
        """Sets the listen_path of this APIDefinitionUptimeTestsProxy.


        :param listen_path: The listen_path of this APIDefinitionUptimeTestsProxy.
        :type listen_path: str
        """

        self._listen_path = listen_path

    @property
    def preserve_host_header(self):
        """Gets the preserve_host_header of this APIDefinitionUptimeTestsProxy.


        :return: The preserve_host_header of this APIDefinitionUptimeTestsProxy.
        :rtype: bool
        """
        return self._preserve_host_header

    @preserve_host_header.setter
    def preserve_host_header(self, preserve_host_header):
        """Sets the preserve_host_header of this APIDefinitionUptimeTestsProxy.


        :param preserve_host_header: The preserve_host_header of this APIDefinitionUptimeTestsProxy.
        :type preserve_host_header: bool
        """

        self._preserve_host_header = preserve_host_header

    @property
    def service_discovery(self):
        """Gets the service_discovery of this APIDefinitionUptimeTestsProxy.


        :return: The service_discovery of this APIDefinitionUptimeTestsProxy.
        :rtype: ServiceDiscoverConfiguration
        """
        return self._service_discovery

    @service_discovery.setter
    def service_discovery(self, service_discovery):
        """Sets the service_discovery of this APIDefinitionUptimeTestsProxy.


        :param service_discovery: The service_discovery of this APIDefinitionUptimeTestsProxy.
        :type service_discovery: ServiceDiscoverConfiguration
        """

        self._service_discovery = service_discovery

    @property
    def strip_listen_path(self):
        """Gets the strip_listen_path of this APIDefinitionUptimeTestsProxy.


        :return: The strip_listen_path of this APIDefinitionUptimeTestsProxy.
        :rtype: bool
        """
        return self._strip_listen_path

    @strip_listen_path.setter
    def strip_listen_path(self, strip_listen_path):
        """Sets the strip_listen_path of this APIDefinitionUptimeTestsProxy.


        :param strip_listen_path: The strip_listen_path of this APIDefinitionUptimeTestsProxy.
        :type strip_listen_path: bool
        """

        self._strip_listen_path = strip_listen_path

    @property
    def target_list(self):
        """Gets the target_list of this APIDefinitionUptimeTestsProxy.


        :return: The target_list of this APIDefinitionUptimeTestsProxy.
        :rtype: List[str]
        """
        return self._target_list

    @target_list.setter
    def target_list(self, target_list):
        """Sets the target_list of this APIDefinitionUptimeTestsProxy.


        :param target_list: The target_list of this APIDefinitionUptimeTestsProxy.
        :type target_list: List[str]
        """

        self._target_list = target_list

    @property
    def target_url(self):
        """Gets the target_url of this APIDefinitionUptimeTestsProxy.


        :return: The target_url of this APIDefinitionUptimeTestsProxy.
        :rtype: str
        """
        return self._target_url

    @target_url.setter
    def target_url(self, target_url):
        """Sets the target_url of this APIDefinitionUptimeTestsProxy.


        :param target_url: The target_url of this APIDefinitionUptimeTestsProxy.
        :type target_url: str
        """

        self._target_url = target_url
