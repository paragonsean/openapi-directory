# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ServiceDiscoverConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cache_timeout: float=None, data_path: str=None, endpoint_returns_list: bool=None, parent_data_path: str=None, port_data_path: str=None, query_endpoint: str=None, use_discovery_service: str=None, use_nested_query: bool=None, use_target_list: bool=None):
        """ServiceDiscoverConfiguration - a model defined in OpenAPI

        :param cache_timeout: The cache_timeout of this ServiceDiscoverConfiguration.
        :param data_path: The data_path of this ServiceDiscoverConfiguration.
        :param endpoint_returns_list: The endpoint_returns_list of this ServiceDiscoverConfiguration.
        :param parent_data_path: The parent_data_path of this ServiceDiscoverConfiguration.
        :param port_data_path: The port_data_path of this ServiceDiscoverConfiguration.
        :param query_endpoint: The query_endpoint of this ServiceDiscoverConfiguration.
        :param use_discovery_service: The use_discovery_service of this ServiceDiscoverConfiguration.
        :param use_nested_query: The use_nested_query of this ServiceDiscoverConfiguration.
        :param use_target_list: The use_target_list of this ServiceDiscoverConfiguration.
        """
        self.openapi_types = {
            'cache_timeout': float,
            'data_path': str,
            'endpoint_returns_list': bool,
            'parent_data_path': str,
            'port_data_path': str,
            'query_endpoint': str,
            'use_discovery_service': str,
            'use_nested_query': bool,
            'use_target_list': bool
        }

        self.attribute_map = {
            'cache_timeout': 'cache_timeout',
            'data_path': 'data_path',
            'endpoint_returns_list': 'endpoint_returns_list',
            'parent_data_path': 'parent_data_path',
            'port_data_path': 'port_data_path',
            'query_endpoint': 'query_endpoint',
            'use_discovery_service': 'use_discovery_service',
            'use_nested_query': 'use_nested_query',
            'use_target_list': 'use_target_list'
        }

        self._cache_timeout = cache_timeout
        self._data_path = data_path
        self._endpoint_returns_list = endpoint_returns_list
        self._parent_data_path = parent_data_path
        self._port_data_path = port_data_path
        self._query_endpoint = query_endpoint
        self._use_discovery_service = use_discovery_service
        self._use_nested_query = use_nested_query
        self._use_target_list = use_target_list

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ServiceDiscoverConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ServiceDiscoverConfiguration of this ServiceDiscoverConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cache_timeout(self):
        """Gets the cache_timeout of this ServiceDiscoverConfiguration.


        :return: The cache_timeout of this ServiceDiscoverConfiguration.
        :rtype: float
        """
        return self._cache_timeout

    @cache_timeout.setter
    def cache_timeout(self, cache_timeout):
        """Sets the cache_timeout of this ServiceDiscoverConfiguration.


        :param cache_timeout: The cache_timeout of this ServiceDiscoverConfiguration.
        :type cache_timeout: float
        """

        self._cache_timeout = cache_timeout

    @property
    def data_path(self):
        """Gets the data_path of this ServiceDiscoverConfiguration.


        :return: The data_path of this ServiceDiscoverConfiguration.
        :rtype: str
        """
        return self._data_path

    @data_path.setter
    def data_path(self, data_path):
        """Sets the data_path of this ServiceDiscoverConfiguration.


        :param data_path: The data_path of this ServiceDiscoverConfiguration.
        :type data_path: str
        """

        self._data_path = data_path

    @property
    def endpoint_returns_list(self):
        """Gets the endpoint_returns_list of this ServiceDiscoverConfiguration.


        :return: The endpoint_returns_list of this ServiceDiscoverConfiguration.
        :rtype: bool
        """
        return self._endpoint_returns_list

    @endpoint_returns_list.setter
    def endpoint_returns_list(self, endpoint_returns_list):
        """Sets the endpoint_returns_list of this ServiceDiscoverConfiguration.


        :param endpoint_returns_list: The endpoint_returns_list of this ServiceDiscoverConfiguration.
        :type endpoint_returns_list: bool
        """

        self._endpoint_returns_list = endpoint_returns_list

    @property
    def parent_data_path(self):
        """Gets the parent_data_path of this ServiceDiscoverConfiguration.


        :return: The parent_data_path of this ServiceDiscoverConfiguration.
        :rtype: str
        """
        return self._parent_data_path

    @parent_data_path.setter
    def parent_data_path(self, parent_data_path):
        """Sets the parent_data_path of this ServiceDiscoverConfiguration.


        :param parent_data_path: The parent_data_path of this ServiceDiscoverConfiguration.
        :type parent_data_path: str
        """

        self._parent_data_path = parent_data_path

    @property
    def port_data_path(self):
        """Gets the port_data_path of this ServiceDiscoverConfiguration.


        :return: The port_data_path of this ServiceDiscoverConfiguration.
        :rtype: str
        """
        return self._port_data_path

    @port_data_path.setter
    def port_data_path(self, port_data_path):
        """Sets the port_data_path of this ServiceDiscoverConfiguration.


        :param port_data_path: The port_data_path of this ServiceDiscoverConfiguration.
        :type port_data_path: str
        """

        self._port_data_path = port_data_path

    @property
    def query_endpoint(self):
        """Gets the query_endpoint of this ServiceDiscoverConfiguration.


        :return: The query_endpoint of this ServiceDiscoverConfiguration.
        :rtype: str
        """
        return self._query_endpoint

    @query_endpoint.setter
    def query_endpoint(self, query_endpoint):
        """Sets the query_endpoint of this ServiceDiscoverConfiguration.


        :param query_endpoint: The query_endpoint of this ServiceDiscoverConfiguration.
        :type query_endpoint: str
        """

        self._query_endpoint = query_endpoint

    @property
    def use_discovery_service(self):
        """Gets the use_discovery_service of this ServiceDiscoverConfiguration.


        :return: The use_discovery_service of this ServiceDiscoverConfiguration.
        :rtype: str
        """
        return self._use_discovery_service

    @use_discovery_service.setter
    def use_discovery_service(self, use_discovery_service):
        """Sets the use_discovery_service of this ServiceDiscoverConfiguration.


        :param use_discovery_service: The use_discovery_service of this ServiceDiscoverConfiguration.
        :type use_discovery_service: str
        """

        self._use_discovery_service = use_discovery_service

    @property
    def use_nested_query(self):
        """Gets the use_nested_query of this ServiceDiscoverConfiguration.


        :return: The use_nested_query of this ServiceDiscoverConfiguration.
        :rtype: bool
        """
        return self._use_nested_query

    @use_nested_query.setter
    def use_nested_query(self, use_nested_query):
        """Sets the use_nested_query of this ServiceDiscoverConfiguration.


        :param use_nested_query: The use_nested_query of this ServiceDiscoverConfiguration.
        :type use_nested_query: bool
        """

        self._use_nested_query = use_nested_query

    @property
    def use_target_list(self):
        """Gets the use_target_list of this ServiceDiscoverConfiguration.


        :return: The use_target_list of this ServiceDiscoverConfiguration.
        :rtype: bool
        """
        return self._use_target_list

    @use_target_list.setter
    def use_target_list(self, use_target_list):
        """Sets the use_target_list of this ServiceDiscoverConfiguration.


        :param use_target_list: The use_target_list of this ServiceDiscoverConfiguration.
        :type use_target_list: bool
        """

        self._use_target_list = use_target_list
