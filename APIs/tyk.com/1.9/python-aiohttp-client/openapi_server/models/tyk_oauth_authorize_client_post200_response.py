# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TykOauthAuthorizeClientPost200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, access_token: str=None, code: str=None, expires_in: float=None, redirect_to: str=None, token_type: str=None):
        """TykOauthAuthorizeClientPost200Response - a model defined in OpenAPI

        :param access_token: The access_token of this TykOauthAuthorizeClientPost200Response.
        :param code: The code of this TykOauthAuthorizeClientPost200Response.
        :param expires_in: The expires_in of this TykOauthAuthorizeClientPost200Response.
        :param redirect_to: The redirect_to of this TykOauthAuthorizeClientPost200Response.
        :param token_type: The token_type of this TykOauthAuthorizeClientPost200Response.
        """
        self.openapi_types = {
            'access_token': str,
            'code': str,
            'expires_in': float,
            'redirect_to': str,
            'token_type': str
        }

        self.attribute_map = {
            'access_token': 'access_token',
            'code': 'code',
            'expires_in': 'expires_in',
            'redirect_to': 'redirect_to',
            'token_type': 'token_type'
        }

        self._access_token = access_token
        self._code = code
        self._expires_in = expires_in
        self._redirect_to = redirect_to
        self._token_type = token_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TykOauthAuthorizeClientPost200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The _tyk_oauth_authorize_client__post_200_response of this TykOauthAuthorizeClientPost200Response.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def access_token(self):
        """Gets the access_token of this TykOauthAuthorizeClientPost200Response.


        :return: The access_token of this TykOauthAuthorizeClientPost200Response.
        :rtype: str
        """
        return self._access_token

    @access_token.setter
    def access_token(self, access_token):
        """Sets the access_token of this TykOauthAuthorizeClientPost200Response.


        :param access_token: The access_token of this TykOauthAuthorizeClientPost200Response.
        :type access_token: str
        """

        self._access_token = access_token

    @property
    def code(self):
        """Gets the code of this TykOauthAuthorizeClientPost200Response.


        :return: The code of this TykOauthAuthorizeClientPost200Response.
        :rtype: str
        """
        return self._code

    @code.setter
    def code(self, code):
        """Sets the code of this TykOauthAuthorizeClientPost200Response.


        :param code: The code of this TykOauthAuthorizeClientPost200Response.
        :type code: str
        """

        self._code = code

    @property
    def expires_in(self):
        """Gets the expires_in of this TykOauthAuthorizeClientPost200Response.


        :return: The expires_in of this TykOauthAuthorizeClientPost200Response.
        :rtype: float
        """
        return self._expires_in

    @expires_in.setter
    def expires_in(self, expires_in):
        """Sets the expires_in of this TykOauthAuthorizeClientPost200Response.


        :param expires_in: The expires_in of this TykOauthAuthorizeClientPost200Response.
        :type expires_in: float
        """

        self._expires_in = expires_in

    @property
    def redirect_to(self):
        """Gets the redirect_to of this TykOauthAuthorizeClientPost200Response.


        :return: The redirect_to of this TykOauthAuthorizeClientPost200Response.
        :rtype: str
        """
        return self._redirect_to

    @redirect_to.setter
    def redirect_to(self, redirect_to):
        """Sets the redirect_to of this TykOauthAuthorizeClientPost200Response.


        :param redirect_to: The redirect_to of this TykOauthAuthorizeClientPost200Response.
        :type redirect_to: str
        """

        self._redirect_to = redirect_to

    @property
    def token_type(self):
        """Gets the token_type of this TykOauthAuthorizeClientPost200Response.


        :return: The token_type of this TykOauthAuthorizeClientPost200Response.
        :rtype: str
        """
        return self._token_type

    @token_type.setter
    def token_type(self, token_type):
        """Sets the token_type of this TykOauthAuthorizeClientPost200Response.


        :param token_type: The token_type of this TykOauthAuthorizeClientPost200Response.
        :type token_type: str
        """

        self._token_type = token_type
