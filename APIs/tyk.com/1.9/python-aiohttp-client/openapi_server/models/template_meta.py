# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.template_meta_template_data import TemplateMetaTemplateData
from openapi_server import util


class TemplateMeta(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, method: str=None, path: str=None, template_data: TemplateMetaTemplateData=None):
        """TemplateMeta - a model defined in OpenAPI

        :param method: The method of this TemplateMeta.
        :param path: The path of this TemplateMeta.
        :param template_data: The template_data of this TemplateMeta.
        """
        self.openapi_types = {
            'method': str,
            'path': str,
            'template_data': TemplateMetaTemplateData
        }

        self.attribute_map = {
            'method': 'method',
            'path': 'path',
            'template_data': 'template_data'
        }

        self._method = method
        self._path = path
        self._template_data = template_data

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TemplateMeta':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TemplateMeta of this TemplateMeta.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def method(self):
        """Gets the method of this TemplateMeta.


        :return: The method of this TemplateMeta.
        :rtype: str
        """
        return self._method

    @method.setter
    def method(self, method):
        """Sets the method of this TemplateMeta.


        :param method: The method of this TemplateMeta.
        :type method: str
        """

        self._method = method

    @property
    def path(self):
        """Gets the path of this TemplateMeta.


        :return: The path of this TemplateMeta.
        :rtype: str
        """
        return self._path

    @path.setter
    def path(self, path):
        """Sets the path of this TemplateMeta.


        :param path: The path of this TemplateMeta.
        :type path: str
        """

        self._path = path

    @property
    def template_data(self):
        """Gets the template_data of this TemplateMeta.


        :return: The template_data of this TemplateMeta.
        :rtype: TemplateMetaTemplateData
        """
        return self._template_data

    @template_data.setter
    def template_data(self, template_data):
        """Sets the template_data of this TemplateMeta.


        :param template_data: The template_data of this TemplateMeta.
        :type template_data: TemplateMetaTemplateData
        """

        self._template_data = template_data
