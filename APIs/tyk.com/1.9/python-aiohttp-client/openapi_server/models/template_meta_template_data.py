# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TemplateMetaTemplateData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, enable_session: bool=None, input_type: str=None, template_mode: str=None):
        """TemplateMetaTemplateData - a model defined in OpenAPI

        :param enable_session: The enable_session of this TemplateMetaTemplateData.
        :param input_type: The input_type of this TemplateMetaTemplateData.
        :param template_mode: The template_mode of this TemplateMetaTemplateData.
        """
        self.openapi_types = {
            'enable_session': bool,
            'input_type': str,
            'template_mode': str
        }

        self.attribute_map = {
            'enable_session': 'enable_session',
            'input_type': 'input_type',
            'template_mode': 'template_mode'
        }

        self._enable_session = enable_session
        self._input_type = input_type
        self._template_mode = template_mode

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TemplateMetaTemplateData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TemplateMeta_template_data of this TemplateMetaTemplateData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def enable_session(self):
        """Gets the enable_session of this TemplateMetaTemplateData.


        :return: The enable_session of this TemplateMetaTemplateData.
        :rtype: bool
        """
        return self._enable_session

    @enable_session.setter
    def enable_session(self, enable_session):
        """Sets the enable_session of this TemplateMetaTemplateData.


        :param enable_session: The enable_session of this TemplateMetaTemplateData.
        :type enable_session: bool
        """

        self._enable_session = enable_session

    @property
    def input_type(self):
        """Gets the input_type of this TemplateMetaTemplateData.


        :return: The input_type of this TemplateMetaTemplateData.
        :rtype: str
        """
        return self._input_type

    @input_type.setter
    def input_type(self, input_type):
        """Sets the input_type of this TemplateMetaTemplateData.


        :param input_type: The input_type of this TemplateMetaTemplateData.
        :type input_type: str
        """

        self._input_type = input_type

    @property
    def template_mode(self):
        """Gets the template_mode of this TemplateMetaTemplateData.


        :return: The template_mode of this TemplateMetaTemplateData.
        :rtype: str
        """
        return self._template_mode

    @template_mode.setter
    def template_mode(self, template_mode):
        """Sets the template_mode of this TemplateMetaTemplateData.


        :param template_mode: The template_mode of this TemplateMetaTemplateData.
        :type template_mode: str
        """

        self._template_mode = template_mode
