# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.api_definition_uptime_tests_cors import APIDefinitionUptimeTestsCORS
from openapi_server.models.api_definition_uptime_tests_cache_options import APIDefinitionUptimeTestsCacheOptions
from openapi_server.models.api_definition_uptime_tests_check_list_inner import APIDefinitionUptimeTestsCheckListInner
from openapi_server.models.api_definition_uptime_tests_config import APIDefinitionUptimeTestsConfig
from openapi_server.models.api_definition_uptime_tests_custom_middleware import APIDefinitionUptimeTestsCustomMiddleware
from openapi_server.models.api_definition_uptime_tests_proxy import APIDefinitionUptimeTestsProxy
from openapi_server.models.api_definition_uptime_tests_response_processors_inner import APIDefinitionUptimeTestsResponseProcessorsInner
from openapi_server import util


class APIDefinitionUptimeTests(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cors: APIDefinitionUptimeTestsCORS=None, active: bool=None, allowed_ips: List[str]=None, cache_options: APIDefinitionUptimeTestsCacheOptions=None, check_list: List[APIDefinitionUptimeTestsCheckListInner]=None, config: APIDefinitionUptimeTestsConfig=None, custom_middleware: APIDefinitionUptimeTestsCustomMiddleware=None, do_not_track: str=None, domain: str=None, dont_set_quota_on_create: bool=None, enable_batch_request_support: bool=None, enable_ip_whitelisting: bool=None, event_handlers: object=None, expire_analytics_after: float=None, proxy: APIDefinitionUptimeTestsProxy=None, response_processors: List[APIDefinitionUptimeTestsResponseProcessorsInner]=None, session_lifetime: float=None, tags: List[str]=None):
        """APIDefinitionUptimeTests - a model defined in OpenAPI

        :param cors: The cors of this APIDefinitionUptimeTests.
        :param active: The active of this APIDefinitionUptimeTests.
        :param allowed_ips: The allowed_ips of this APIDefinitionUptimeTests.
        :param cache_options: The cache_options of this APIDefinitionUptimeTests.
        :param check_list: The check_list of this APIDefinitionUptimeTests.
        :param config: The config of this APIDefinitionUptimeTests.
        :param custom_middleware: The custom_middleware of this APIDefinitionUptimeTests.
        :param do_not_track: The do_not_track of this APIDefinitionUptimeTests.
        :param domain: The domain of this APIDefinitionUptimeTests.
        :param dont_set_quota_on_create: The dont_set_quota_on_create of this APIDefinitionUptimeTests.
        :param enable_batch_request_support: The enable_batch_request_support of this APIDefinitionUptimeTests.
        :param enable_ip_whitelisting: The enable_ip_whitelisting of this APIDefinitionUptimeTests.
        :param event_handlers: The event_handlers of this APIDefinitionUptimeTests.
        :param expire_analytics_after: The expire_analytics_after of this APIDefinitionUptimeTests.
        :param proxy: The proxy of this APIDefinitionUptimeTests.
        :param response_processors: The response_processors of this APIDefinitionUptimeTests.
        :param session_lifetime: The session_lifetime of this APIDefinitionUptimeTests.
        :param tags: The tags of this APIDefinitionUptimeTests.
        """
        self.openapi_types = {
            'cors': APIDefinitionUptimeTestsCORS,
            'active': bool,
            'allowed_ips': List[str],
            'cache_options': APIDefinitionUptimeTestsCacheOptions,
            'check_list': List[APIDefinitionUptimeTestsCheckListInner],
            'config': APIDefinitionUptimeTestsConfig,
            'custom_middleware': APIDefinitionUptimeTestsCustomMiddleware,
            'do_not_track': str,
            'domain': str,
            'dont_set_quota_on_create': bool,
            'enable_batch_request_support': bool,
            'enable_ip_whitelisting': bool,
            'event_handlers': object,
            'expire_analytics_after': float,
            'proxy': APIDefinitionUptimeTestsProxy,
            'response_processors': List[APIDefinitionUptimeTestsResponseProcessorsInner],
            'session_lifetime': float,
            'tags': List[str]
        }

        self.attribute_map = {
            'cors': 'CORS',
            'active': 'active',
            'allowed_ips': 'allowed_ips',
            'cache_options': 'cache_options',
            'check_list': 'check_list',
            'config': 'config',
            'custom_middleware': 'custom_middleware',
            'do_not_track': 'do_not_track',
            'domain': 'domain',
            'dont_set_quota_on_create': 'dont_set_quota_on_create',
            'enable_batch_request_support': 'enable_batch_request_support',
            'enable_ip_whitelisting': 'enable_ip_whitelisting',
            'event_handlers': 'event_handlers',
            'expire_analytics_after': 'expire_analytics_after',
            'proxy': 'proxy',
            'response_processors': 'response_processors',
            'session_lifetime': 'session_lifetime',
            'tags': 'tags'
        }

        self._cors = cors
        self._active = active
        self._allowed_ips = allowed_ips
        self._cache_options = cache_options
        self._check_list = check_list
        self._config = config
        self._custom_middleware = custom_middleware
        self._do_not_track = do_not_track
        self._domain = domain
        self._dont_set_quota_on_create = dont_set_quota_on_create
        self._enable_batch_request_support = enable_batch_request_support
        self._enable_ip_whitelisting = enable_ip_whitelisting
        self._event_handlers = event_handlers
        self._expire_analytics_after = expire_analytics_after
        self._proxy = proxy
        self._response_processors = response_processors
        self._session_lifetime = session_lifetime
        self._tags = tags

    @classmethod
    def from_dict(cls, dikt: dict) -> 'APIDefinitionUptimeTests':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The APIDefinition_uptime_tests of this APIDefinitionUptimeTests.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cors(self):
        """Gets the cors of this APIDefinitionUptimeTests.


        :return: The cors of this APIDefinitionUptimeTests.
        :rtype: APIDefinitionUptimeTestsCORS
        """
        return self._cors

    @cors.setter
    def cors(self, cors):
        """Sets the cors of this APIDefinitionUptimeTests.


        :param cors: The cors of this APIDefinitionUptimeTests.
        :type cors: APIDefinitionUptimeTestsCORS
        """

        self._cors = cors

    @property
    def active(self):
        """Gets the active of this APIDefinitionUptimeTests.


        :return: The active of this APIDefinitionUptimeTests.
        :rtype: bool
        """
        return self._active

    @active.setter
    def active(self, active):
        """Sets the active of this APIDefinitionUptimeTests.


        :param active: The active of this APIDefinitionUptimeTests.
        :type active: bool
        """

        self._active = active

    @property
    def allowed_ips(self):
        """Gets the allowed_ips of this APIDefinitionUptimeTests.


        :return: The allowed_ips of this APIDefinitionUptimeTests.
        :rtype: List[str]
        """
        return self._allowed_ips

    @allowed_ips.setter
    def allowed_ips(self, allowed_ips):
        """Sets the allowed_ips of this APIDefinitionUptimeTests.


        :param allowed_ips: The allowed_ips of this APIDefinitionUptimeTests.
        :type allowed_ips: List[str]
        """

        self._allowed_ips = allowed_ips

    @property
    def cache_options(self):
        """Gets the cache_options of this APIDefinitionUptimeTests.


        :return: The cache_options of this APIDefinitionUptimeTests.
        :rtype: APIDefinitionUptimeTestsCacheOptions
        """
        return self._cache_options

    @cache_options.setter
    def cache_options(self, cache_options):
        """Sets the cache_options of this APIDefinitionUptimeTests.


        :param cache_options: The cache_options of this APIDefinitionUptimeTests.
        :type cache_options: APIDefinitionUptimeTestsCacheOptions
        """

        self._cache_options = cache_options

    @property
    def check_list(self):
        """Gets the check_list of this APIDefinitionUptimeTests.


        :return: The check_list of this APIDefinitionUptimeTests.
        :rtype: List[APIDefinitionUptimeTestsCheckListInner]
        """
        return self._check_list

    @check_list.setter
    def check_list(self, check_list):
        """Sets the check_list of this APIDefinitionUptimeTests.


        :param check_list: The check_list of this APIDefinitionUptimeTests.
        :type check_list: List[APIDefinitionUptimeTestsCheckListInner]
        """

        self._check_list = check_list

    @property
    def config(self):
        """Gets the config of this APIDefinitionUptimeTests.


        :return: The config of this APIDefinitionUptimeTests.
        :rtype: APIDefinitionUptimeTestsConfig
        """
        return self._config

    @config.setter
    def config(self, config):
        """Sets the config of this APIDefinitionUptimeTests.


        :param config: The config of this APIDefinitionUptimeTests.
        :type config: APIDefinitionUptimeTestsConfig
        """

        self._config = config

    @property
    def custom_middleware(self):
        """Gets the custom_middleware of this APIDefinitionUptimeTests.


        :return: The custom_middleware of this APIDefinitionUptimeTests.
        :rtype: APIDefinitionUptimeTestsCustomMiddleware
        """
        return self._custom_middleware

    @custom_middleware.setter
    def custom_middleware(self, custom_middleware):
        """Sets the custom_middleware of this APIDefinitionUptimeTests.


        :param custom_middleware: The custom_middleware of this APIDefinitionUptimeTests.
        :type custom_middleware: APIDefinitionUptimeTestsCustomMiddleware
        """

        self._custom_middleware = custom_middleware

    @property
    def do_not_track(self):
        """Gets the do_not_track of this APIDefinitionUptimeTests.


        :return: The do_not_track of this APIDefinitionUptimeTests.
        :rtype: str
        """
        return self._do_not_track

    @do_not_track.setter
    def do_not_track(self, do_not_track):
        """Sets the do_not_track of this APIDefinitionUptimeTests.


        :param do_not_track: The do_not_track of this APIDefinitionUptimeTests.
        :type do_not_track: str
        """

        self._do_not_track = do_not_track

    @property
    def domain(self):
        """Gets the domain of this APIDefinitionUptimeTests.


        :return: The domain of this APIDefinitionUptimeTests.
        :rtype: str
        """
        return self._domain

    @domain.setter
    def domain(self, domain):
        """Sets the domain of this APIDefinitionUptimeTests.


        :param domain: The domain of this APIDefinitionUptimeTests.
        :type domain: str
        """

        self._domain = domain

    @property
    def dont_set_quota_on_create(self):
        """Gets the dont_set_quota_on_create of this APIDefinitionUptimeTests.


        :return: The dont_set_quota_on_create of this APIDefinitionUptimeTests.
        :rtype: bool
        """
        return self._dont_set_quota_on_create

    @dont_set_quota_on_create.setter
    def dont_set_quota_on_create(self, dont_set_quota_on_create):
        """Sets the dont_set_quota_on_create of this APIDefinitionUptimeTests.


        :param dont_set_quota_on_create: The dont_set_quota_on_create of this APIDefinitionUptimeTests.
        :type dont_set_quota_on_create: bool
        """

        self._dont_set_quota_on_create = dont_set_quota_on_create

    @property
    def enable_batch_request_support(self):
        """Gets the enable_batch_request_support of this APIDefinitionUptimeTests.


        :return: The enable_batch_request_support of this APIDefinitionUptimeTests.
        :rtype: bool
        """
        return self._enable_batch_request_support

    @enable_batch_request_support.setter
    def enable_batch_request_support(self, enable_batch_request_support):
        """Sets the enable_batch_request_support of this APIDefinitionUptimeTests.


        :param enable_batch_request_support: The enable_batch_request_support of this APIDefinitionUptimeTests.
        :type enable_batch_request_support: bool
        """

        self._enable_batch_request_support = enable_batch_request_support

    @property
    def enable_ip_whitelisting(self):
        """Gets the enable_ip_whitelisting of this APIDefinitionUptimeTests.


        :return: The enable_ip_whitelisting of this APIDefinitionUptimeTests.
        :rtype: bool
        """
        return self._enable_ip_whitelisting

    @enable_ip_whitelisting.setter
    def enable_ip_whitelisting(self, enable_ip_whitelisting):
        """Sets the enable_ip_whitelisting of this APIDefinitionUptimeTests.


        :param enable_ip_whitelisting: The enable_ip_whitelisting of this APIDefinitionUptimeTests.
        :type enable_ip_whitelisting: bool
        """

        self._enable_ip_whitelisting = enable_ip_whitelisting

    @property
    def event_handlers(self):
        """Gets the event_handlers of this APIDefinitionUptimeTests.


        :return: The event_handlers of this APIDefinitionUptimeTests.
        :rtype: object
        """
        return self._event_handlers

    @event_handlers.setter
    def event_handlers(self, event_handlers):
        """Sets the event_handlers of this APIDefinitionUptimeTests.


        :param event_handlers: The event_handlers of this APIDefinitionUptimeTests.
        :type event_handlers: object
        """

        self._event_handlers = event_handlers

    @property
    def expire_analytics_after(self):
        """Gets the expire_analytics_after of this APIDefinitionUptimeTests.


        :return: The expire_analytics_after of this APIDefinitionUptimeTests.
        :rtype: float
        """
        return self._expire_analytics_after

    @expire_analytics_after.setter
    def expire_analytics_after(self, expire_analytics_after):
        """Sets the expire_analytics_after of this APIDefinitionUptimeTests.


        :param expire_analytics_after: The expire_analytics_after of this APIDefinitionUptimeTests.
        :type expire_analytics_after: float
        """

        self._expire_analytics_after = expire_analytics_after

    @property
    def proxy(self):
        """Gets the proxy of this APIDefinitionUptimeTests.


        :return: The proxy of this APIDefinitionUptimeTests.
        :rtype: APIDefinitionUptimeTestsProxy
        """
        return self._proxy

    @proxy.setter
    def proxy(self, proxy):
        """Sets the proxy of this APIDefinitionUptimeTests.


        :param proxy: The proxy of this APIDefinitionUptimeTests.
        :type proxy: APIDefinitionUptimeTestsProxy
        """

        self._proxy = proxy

    @property
    def response_processors(self):
        """Gets the response_processors of this APIDefinitionUptimeTests.


        :return: The response_processors of this APIDefinitionUptimeTests.
        :rtype: List[APIDefinitionUptimeTestsResponseProcessorsInner]
        """
        return self._response_processors

    @response_processors.setter
    def response_processors(self, response_processors):
        """Sets the response_processors of this APIDefinitionUptimeTests.


        :param response_processors: The response_processors of this APIDefinitionUptimeTests.
        :type response_processors: List[APIDefinitionUptimeTestsResponseProcessorsInner]
        """

        self._response_processors = response_processors

    @property
    def session_lifetime(self):
        """Gets the session_lifetime of this APIDefinitionUptimeTests.


        :return: The session_lifetime of this APIDefinitionUptimeTests.
        :rtype: float
        """
        return self._session_lifetime

    @session_lifetime.setter
    def session_lifetime(self, session_lifetime):
        """Sets the session_lifetime of this APIDefinitionUptimeTests.


        :param session_lifetime: The session_lifetime of this APIDefinitionUptimeTests.
        :type session_lifetime: float
        """

        self._session_lifetime = session_lifetime

    @property
    def tags(self):
        """Gets the tags of this APIDefinitionUptimeTests.


        :return: The tags of this APIDefinitionUptimeTests.
        :rtype: List[str]
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this APIDefinitionUptimeTests.


        :param tags: The tags of this APIDefinitionUptimeTests.
        :type tags: List[str]
        """

        self._tags = tags
