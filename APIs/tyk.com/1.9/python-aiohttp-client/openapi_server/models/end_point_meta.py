# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.endpoint_method_meta import EndpointMethodMeta
from openapi_server import util


class EndPointMeta(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, method_actions: Dict[str, EndpointMethodMeta]=None, path: str=None):
        """EndPointMeta - a model defined in OpenAPI

        :param method_actions: The method_actions of this EndPointMeta.
        :param path: The path of this EndPointMeta.
        """
        self.openapi_types = {
            'method_actions': Dict[str, EndpointMethodMeta],
            'path': str
        }

        self.attribute_map = {
            'method_actions': 'method_actions',
            'path': 'path'
        }

        self._method_actions = method_actions
        self._path = path

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EndPointMeta':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EndPointMeta of this EndPointMeta.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def method_actions(self):
        """Gets the method_actions of this EndPointMeta.


        :return: The method_actions of this EndPointMeta.
        :rtype: Dict[str, EndpointMethodMeta]
        """
        return self._method_actions

    @method_actions.setter
    def method_actions(self, method_actions):
        """Sets the method_actions of this EndPointMeta.


        :param method_actions: The method_actions of this EndPointMeta.
        :type method_actions: Dict[str, EndpointMethodMeta]
        """

        self._method_actions = method_actions

    @property
    def path(self):
        """Gets the path of this EndPointMeta.


        :return: The path of this EndPointMeta.
        :rtype: str
        """
        return self._path

    @path.setter
    def path(self, path):
        """Sets the path of this EndPointMeta.


        :param path: The path of this EndPointMeta.
        :type path: str
        """

        self._path = path
