# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class APIDefinitionUptimeTestsCORS(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, allow_credentials: bool=None, allowed_headers: List[str]=None, allowed_methods: List[str]=None, allowed_origins: List[str]=None, debug: bool=None, enable: bool=None, exposed_headers: List[str]=None, max_age: float=None, options_passthrough: bool=None):
        """APIDefinitionUptimeTestsCORS - a model defined in OpenAPI

        :param allow_credentials: The allow_credentials of this APIDefinitionUptimeTestsCORS.
        :param allowed_headers: The allowed_headers of this APIDefinitionUptimeTestsCORS.
        :param allowed_methods: The allowed_methods of this APIDefinitionUptimeTestsCORS.
        :param allowed_origins: The allowed_origins of this APIDefinitionUptimeTestsCORS.
        :param debug: The debug of this APIDefinitionUptimeTestsCORS.
        :param enable: The enable of this APIDefinitionUptimeTestsCORS.
        :param exposed_headers: The exposed_headers of this APIDefinitionUptimeTestsCORS.
        :param max_age: The max_age of this APIDefinitionUptimeTestsCORS.
        :param options_passthrough: The options_passthrough of this APIDefinitionUptimeTestsCORS.
        """
        self.openapi_types = {
            'allow_credentials': bool,
            'allowed_headers': List[str],
            'allowed_methods': List[str],
            'allowed_origins': List[str],
            'debug': bool,
            'enable': bool,
            'exposed_headers': List[str],
            'max_age': float,
            'options_passthrough': bool
        }

        self.attribute_map = {
            'allow_credentials': 'allow_credentials',
            'allowed_headers': 'allowed_headers',
            'allowed_methods': 'allowed_methods',
            'allowed_origins': 'allowed_origins',
            'debug': 'debug',
            'enable': 'enable',
            'exposed_headers': 'exposed_headers',
            'max_age': 'max_age',
            'options_passthrough': 'options_passthrough'
        }

        self._allow_credentials = allow_credentials
        self._allowed_headers = allowed_headers
        self._allowed_methods = allowed_methods
        self._allowed_origins = allowed_origins
        self._debug = debug
        self._enable = enable
        self._exposed_headers = exposed_headers
        self._max_age = max_age
        self._options_passthrough = options_passthrough

    @classmethod
    def from_dict(cls, dikt: dict) -> 'APIDefinitionUptimeTestsCORS':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The APIDefinition_uptime_tests_CORS of this APIDefinitionUptimeTestsCORS.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def allow_credentials(self):
        """Gets the allow_credentials of this APIDefinitionUptimeTestsCORS.


        :return: The allow_credentials of this APIDefinitionUptimeTestsCORS.
        :rtype: bool
        """
        return self._allow_credentials

    @allow_credentials.setter
    def allow_credentials(self, allow_credentials):
        """Sets the allow_credentials of this APIDefinitionUptimeTestsCORS.


        :param allow_credentials: The allow_credentials of this APIDefinitionUptimeTestsCORS.
        :type allow_credentials: bool
        """

        self._allow_credentials = allow_credentials

    @property
    def allowed_headers(self):
        """Gets the allowed_headers of this APIDefinitionUptimeTestsCORS.


        :return: The allowed_headers of this APIDefinitionUptimeTestsCORS.
        :rtype: List[str]
        """
        return self._allowed_headers

    @allowed_headers.setter
    def allowed_headers(self, allowed_headers):
        """Sets the allowed_headers of this APIDefinitionUptimeTestsCORS.


        :param allowed_headers: The allowed_headers of this APIDefinitionUptimeTestsCORS.
        :type allowed_headers: List[str]
        """

        self._allowed_headers = allowed_headers

    @property
    def allowed_methods(self):
        """Gets the allowed_methods of this APIDefinitionUptimeTestsCORS.


        :return: The allowed_methods of this APIDefinitionUptimeTestsCORS.
        :rtype: List[str]
        """
        return self._allowed_methods

    @allowed_methods.setter
    def allowed_methods(self, allowed_methods):
        """Sets the allowed_methods of this APIDefinitionUptimeTestsCORS.


        :param allowed_methods: The allowed_methods of this APIDefinitionUptimeTestsCORS.
        :type allowed_methods: List[str]
        """

        self._allowed_methods = allowed_methods

    @property
    def allowed_origins(self):
        """Gets the allowed_origins of this APIDefinitionUptimeTestsCORS.


        :return: The allowed_origins of this APIDefinitionUptimeTestsCORS.
        :rtype: List[str]
        """
        return self._allowed_origins

    @allowed_origins.setter
    def allowed_origins(self, allowed_origins):
        """Sets the allowed_origins of this APIDefinitionUptimeTestsCORS.


        :param allowed_origins: The allowed_origins of this APIDefinitionUptimeTestsCORS.
        :type allowed_origins: List[str]
        """

        self._allowed_origins = allowed_origins

    @property
    def debug(self):
        """Gets the debug of this APIDefinitionUptimeTestsCORS.


        :return: The debug of this APIDefinitionUptimeTestsCORS.
        :rtype: bool
        """
        return self._debug

    @debug.setter
    def debug(self, debug):
        """Sets the debug of this APIDefinitionUptimeTestsCORS.


        :param debug: The debug of this APIDefinitionUptimeTestsCORS.
        :type debug: bool
        """

        self._debug = debug

    @property
    def enable(self):
        """Gets the enable of this APIDefinitionUptimeTestsCORS.


        :return: The enable of this APIDefinitionUptimeTestsCORS.
        :rtype: bool
        """
        return self._enable

    @enable.setter
    def enable(self, enable):
        """Sets the enable of this APIDefinitionUptimeTestsCORS.


        :param enable: The enable of this APIDefinitionUptimeTestsCORS.
        :type enable: bool
        """

        self._enable = enable

    @property
    def exposed_headers(self):
        """Gets the exposed_headers of this APIDefinitionUptimeTestsCORS.


        :return: The exposed_headers of this APIDefinitionUptimeTestsCORS.
        :rtype: List[str]
        """
        return self._exposed_headers

    @exposed_headers.setter
    def exposed_headers(self, exposed_headers):
        """Sets the exposed_headers of this APIDefinitionUptimeTestsCORS.


        :param exposed_headers: The exposed_headers of this APIDefinitionUptimeTestsCORS.
        :type exposed_headers: List[str]
        """

        self._exposed_headers = exposed_headers

    @property
    def max_age(self):
        """Gets the max_age of this APIDefinitionUptimeTestsCORS.


        :return: The max_age of this APIDefinitionUptimeTestsCORS.
        :rtype: float
        """
        return self._max_age

    @max_age.setter
    def max_age(self, max_age):
        """Sets the max_age of this APIDefinitionUptimeTestsCORS.


        :param max_age: The max_age of this APIDefinitionUptimeTestsCORS.
        :type max_age: float
        """

        self._max_age = max_age

    @property
    def options_passthrough(self):
        """Gets the options_passthrough of this APIDefinitionUptimeTestsCORS.


        :return: The options_passthrough of this APIDefinitionUptimeTestsCORS.
        :rtype: bool
        """
        return self._options_passthrough

    @options_passthrough.setter
    def options_passthrough(self, options_passthrough):
        """Sets the options_passthrough of this APIDefinitionUptimeTestsCORS.


        :param options_passthrough: The options_passthrough of this APIDefinitionUptimeTestsCORS.
        :type options_passthrough: bool
        """

        self._options_passthrough = options_passthrough
