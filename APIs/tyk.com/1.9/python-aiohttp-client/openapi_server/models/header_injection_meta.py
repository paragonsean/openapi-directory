# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class HeaderInjectionMeta(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, add_headers: object=None, delete_headers: List[str]=None, method: str=None, path: str=None):
        """HeaderInjectionMeta - a model defined in OpenAPI

        :param add_headers: The add_headers of this HeaderInjectionMeta.
        :param delete_headers: The delete_headers of this HeaderInjectionMeta.
        :param method: The method of this HeaderInjectionMeta.
        :param path: The path of this HeaderInjectionMeta.
        """
        self.openapi_types = {
            'add_headers': object,
            'delete_headers': List[str],
            'method': str,
            'path': str
        }

        self.attribute_map = {
            'add_headers': 'add_headers',
            'delete_headers': 'delete_headers',
            'method': 'method',
            'path': 'path'
        }

        self._add_headers = add_headers
        self._delete_headers = delete_headers
        self._method = method
        self._path = path

    @classmethod
    def from_dict(cls, dikt: dict) -> 'HeaderInjectionMeta':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The HeaderInjectionMeta of this HeaderInjectionMeta.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def add_headers(self):
        """Gets the add_headers of this HeaderInjectionMeta.


        :return: The add_headers of this HeaderInjectionMeta.
        :rtype: object
        """
        return self._add_headers

    @add_headers.setter
    def add_headers(self, add_headers):
        """Sets the add_headers of this HeaderInjectionMeta.


        :param add_headers: The add_headers of this HeaderInjectionMeta.
        :type add_headers: object
        """

        self._add_headers = add_headers

    @property
    def delete_headers(self):
        """Gets the delete_headers of this HeaderInjectionMeta.


        :return: The delete_headers of this HeaderInjectionMeta.
        :rtype: List[str]
        """
        return self._delete_headers

    @delete_headers.setter
    def delete_headers(self, delete_headers):
        """Sets the delete_headers of this HeaderInjectionMeta.


        :param delete_headers: The delete_headers of this HeaderInjectionMeta.
        :type delete_headers: List[str]
        """

        self._delete_headers = delete_headers

    @property
    def method(self):
        """Gets the method of this HeaderInjectionMeta.


        :return: The method of this HeaderInjectionMeta.
        :rtype: str
        """
        return self._method

    @method.setter
    def method(self, method):
        """Sets the method of this HeaderInjectionMeta.


        :param method: The method of this HeaderInjectionMeta.
        :type method: str
        """

        self._method = method

    @property
    def path(self):
        """Gets the path of this HeaderInjectionMeta.


        :return: The path of this HeaderInjectionMeta.
        :rtype: str
        """
        return self._path

    @path.setter
    def path(self, path):
        """Sets the path of this HeaderInjectionMeta.


        :param path: The path of this HeaderInjectionMeta.
        :type path: str
        """

        self._path = path
