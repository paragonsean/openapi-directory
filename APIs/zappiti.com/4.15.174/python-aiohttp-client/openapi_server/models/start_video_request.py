# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class StartVideoRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, api_key: str=None, auth_key: str=None, collection: str=None, ip: str=None, media_id: str=None, port: int=None):
        """StartVideoRequest - a model defined in OpenAPI

        :param api_key: The api_key of this StartVideoRequest.
        :param auth_key: The auth_key of this StartVideoRequest.
        :param collection: The collection of this StartVideoRequest.
        :param ip: The ip of this StartVideoRequest.
        :param media_id: The media_id of this StartVideoRequest.
        :param port: The port of this StartVideoRequest.
        """
        self.openapi_types = {
            'api_key': str,
            'auth_key': str,
            'collection': str,
            'ip': str,
            'media_id': str,
            'port': int
        }

        self.attribute_map = {
            'api_key': 'ApiKey',
            'auth_key': 'AuthKey',
            'collection': 'Collection',
            'ip': 'Ip',
            'media_id': 'MediaId',
            'port': 'Port'
        }

        self._api_key = api_key
        self._auth_key = auth_key
        self._collection = collection
        self._ip = ip
        self._media_id = media_id
        self._port = port

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StartVideoRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StartVideoRequest of this StartVideoRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def api_key(self):
        """Gets the api_key of this StartVideoRequest.

        Client API Key

        :return: The api_key of this StartVideoRequest.
        :rtype: str
        """
        return self._api_key

    @api_key.setter
    def api_key(self, api_key):
        """Sets the api_key of this StartVideoRequest.

        Client API Key

        :param api_key: The api_key of this StartVideoRequest.
        :type api_key: str
        """

        self._api_key = api_key

    @property
    def auth_key(self):
        """Gets the auth_key of this StartVideoRequest.

        User auth key

        :return: The auth_key of this StartVideoRequest.
        :rtype: str
        """
        return self._auth_key

    @auth_key.setter
    def auth_key(self, auth_key):
        """Sets the auth_key of this StartVideoRequest.

        User auth key

        :param auth_key: The auth_key of this StartVideoRequest.
        :type auth_key: str
        """

        self._auth_key = auth_key

    @property
    def collection(self):
        """Gets the collection of this StartVideoRequest.

        Collection id

        :return: The collection of this StartVideoRequest.
        :rtype: str
        """
        return self._collection

    @collection.setter
    def collection(self, collection):
        """Sets the collection of this StartVideoRequest.

        Collection id

        :param collection: The collection of this StartVideoRequest.
        :type collection: str
        """

        self._collection = collection

    @property
    def ip(self):
        """Gets the ip of this StartVideoRequest.

        Server Ip

        :return: The ip of this StartVideoRequest.
        :rtype: str
        """
        return self._ip

    @ip.setter
    def ip(self, ip):
        """Sets the ip of this StartVideoRequest.

        Server Ip

        :param ip: The ip of this StartVideoRequest.
        :type ip: str
        """

        self._ip = ip

    @property
    def media_id(self):
        """Gets the media_id of this StartVideoRequest.

        Id of the video to start

        :return: The media_id of this StartVideoRequest.
        :rtype: str
        """
        return self._media_id

    @media_id.setter
    def media_id(self, media_id):
        """Sets the media_id of this StartVideoRequest.

        Id of the video to start

        :param media_id: The media_id of this StartVideoRequest.
        :type media_id: str
        """

        self._media_id = media_id

    @property
    def port(self):
        """Gets the port of this StartVideoRequest.

        Server Port

        :return: The port of this StartVideoRequest.
        :rtype: int
        """
        return self._port

    @port.setter
    def port(self, port):
        """Sets the port of this StartVideoRequest.

        Server Port

        :param port: The port of this StartVideoRequest.
        :type port: int
        """

        self._port = port
