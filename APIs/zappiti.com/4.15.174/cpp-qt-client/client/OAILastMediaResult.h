/**
 * Zappiti Player API
 * Move your app forward with the Zappiti Player API. Use http://your-player-ip:8990/ as base URL for your requests.
 *
 * The version of the OpenAPI document: 4.15.174
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILastMediaResult.h
 *
 * 
 */

#ifndef OAILastMediaResult_H
#define OAILastMediaResult_H

#include <QJsonObject>

#include "OAIErrorCode.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAILastMediaResult : public OAIObject {
public:
    OAILastMediaResult();
    OAILastMediaResult(QString json);
    ~OAILastMediaResult() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getActors() const;
    void setActors(const QList<QString> &actors);
    bool is_actors_Set() const;
    bool is_actors_Valid() const;

    QString getBackgroundUrl() const;
    void setBackgroundUrl(const QString &background_url);
    bool is_background_url_Set() const;
    bool is_background_url_Valid() const;

    QList<QString> getDirectors() const;
    void setDirectors(const QList<QString> &directors);
    bool is_directors_Set() const;
    bool is_directors_Valid() const;

    qint32 getEpisode() const;
    void setEpisode(const qint32 &episode);
    bool is_episode_Set() const;
    bool is_episode_Valid() const;

    OAIErrorCode getErrorCode() const;
    void setErrorCode(const OAIErrorCode &error_code);
    bool is_error_code_Set() const;
    bool is_error_code_Valid() const;

    QString getPosterUrl() const;
    void setPosterUrl(const QString &poster_url);
    bool is_poster_url_Set() const;
    bool is_poster_url_Valid() const;

    qint32 getRuntime() const;
    void setRuntime(const qint32 &runtime);
    bool is_runtime_Set() const;
    bool is_runtime_Valid() const;

    qint32 getSeason() const;
    void setSeason(const qint32 &season);
    bool is_season_Set() const;
    bool is_season_Valid() const;

    QString getSynopsis() const;
    void setSynopsis(const QString &synopsis);
    bool is_synopsis_Set() const;
    bool is_synopsis_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    QString getTvShowName() const;
    void setTvShowName(const QString &tv_show_name);
    bool is_tv_show_name_Set() const;
    bool is_tv_show_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_actors;
    bool m_actors_isSet;
    bool m_actors_isValid;

    QString m_background_url;
    bool m_background_url_isSet;
    bool m_background_url_isValid;

    QList<QString> m_directors;
    bool m_directors_isSet;
    bool m_directors_isValid;

    qint32 m_episode;
    bool m_episode_isSet;
    bool m_episode_isValid;

    OAIErrorCode m_error_code;
    bool m_error_code_isSet;
    bool m_error_code_isValid;

    QString m_poster_url;
    bool m_poster_url_isSet;
    bool m_poster_url_isValid;

    qint32 m_runtime;
    bool m_runtime_isSet;
    bool m_runtime_isValid;

    qint32 m_season;
    bool m_season_isSet;
    bool m_season_isValid;

    QString m_synopsis;
    bool m_synopsis_isSet;
    bool m_synopsis_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;

    QString m_tv_show_name;
    bool m_tv_show_name_isSet;
    bool m_tv_show_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILastMediaResult)

#endif // OAILastMediaResult_H
