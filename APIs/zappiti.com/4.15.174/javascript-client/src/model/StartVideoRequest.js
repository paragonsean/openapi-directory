/**
 * Zappiti Player API
 * Move your app forward with the Zappiti Player API. Use http://your-player-ip:8990/ as base URL for your requests.
 *
 * The version of the OpenAPI document: 4.15.174
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The StartVideoRequest model module.
 * @module model/StartVideoRequest
 * @version 4.15.174
 */
class StartVideoRequest {
    /**
     * Constructs a new <code>StartVideoRequest</code>.
     * @alias module:model/StartVideoRequest
     */
    constructor() { 
        
        StartVideoRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>StartVideoRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/StartVideoRequest} obj Optional instance to populate.
     * @return {module:model/StartVideoRequest} The populated <code>StartVideoRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new StartVideoRequest();

            if (data.hasOwnProperty('ApiKey')) {
                obj['ApiKey'] = ApiClient.convertToType(data['ApiKey'], 'String');
            }
            if (data.hasOwnProperty('AuthKey')) {
                obj['AuthKey'] = ApiClient.convertToType(data['AuthKey'], 'String');
            }
            if (data.hasOwnProperty('Collection')) {
                obj['Collection'] = ApiClient.convertToType(data['Collection'], 'String');
            }
            if (data.hasOwnProperty('Ip')) {
                obj['Ip'] = ApiClient.convertToType(data['Ip'], 'String');
            }
            if (data.hasOwnProperty('MediaId')) {
                obj['MediaId'] = ApiClient.convertToType(data['MediaId'], 'String');
            }
            if (data.hasOwnProperty('Port')) {
                obj['Port'] = ApiClient.convertToType(data['Port'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>StartVideoRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>StartVideoRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['ApiKey'] && !(typeof data['ApiKey'] === 'string' || data['ApiKey'] instanceof String)) {
            throw new Error("Expected the field `ApiKey` to be a primitive type in the JSON string but got " + data['ApiKey']);
        }
        // ensure the json data is a string
        if (data['AuthKey'] && !(typeof data['AuthKey'] === 'string' || data['AuthKey'] instanceof String)) {
            throw new Error("Expected the field `AuthKey` to be a primitive type in the JSON string but got " + data['AuthKey']);
        }
        // ensure the json data is a string
        if (data['Collection'] && !(typeof data['Collection'] === 'string' || data['Collection'] instanceof String)) {
            throw new Error("Expected the field `Collection` to be a primitive type in the JSON string but got " + data['Collection']);
        }
        // ensure the json data is a string
        if (data['Ip'] && !(typeof data['Ip'] === 'string' || data['Ip'] instanceof String)) {
            throw new Error("Expected the field `Ip` to be a primitive type in the JSON string but got " + data['Ip']);
        }
        // ensure the json data is a string
        if (data['MediaId'] && !(typeof data['MediaId'] === 'string' || data['MediaId'] instanceof String)) {
            throw new Error("Expected the field `MediaId` to be a primitive type in the JSON string but got " + data['MediaId']);
        }

        return true;
    }


}



/**
 * Client API Key
 * @member {String} ApiKey
 */
StartVideoRequest.prototype['ApiKey'] = undefined;

/**
 * User auth key
 * @member {String} AuthKey
 */
StartVideoRequest.prototype['AuthKey'] = undefined;

/**
 * Collection id
 * @member {String} Collection
 */
StartVideoRequest.prototype['Collection'] = undefined;

/**
 * Server Ip
 * @member {String} Ip
 */
StartVideoRequest.prototype['Ip'] = undefined;

/**
 * Id of the video to start
 * @member {String} MediaId
 */
StartVideoRequest.prototype['MediaId'] = undefined;

/**
 * Server Port
 * @member {Number} Port
 */
StartVideoRequest.prototype['Port'] = undefined;






export default StartVideoRequest;

