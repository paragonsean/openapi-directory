/**
 * Zappiti Player API
 * Move your app forward with the Zappiti Player API. Use http://your-player-ip:8990/ as base URL for your requests.
 *
 * The version of the OpenAPI document: 4.15.174
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import CheckZappitiServiceRequest from './model/CheckZappitiServiceRequest';
import CheckZappitiServiceResult from './model/CheckZappitiServiceResult';
import ConnectionDetailsRequest from './model/ConnectionDetailsRequest';
import ConnectionDetailsResult from './model/ConnectionDetailsResult';
import ErrorCode from './model/ErrorCode';
import InstallZappitiServiceRequest from './model/InstallZappitiServiceRequest';
import InstallZappitiServiceResult from './model/InstallZappitiServiceResult';
import IsAliveRequest from './model/IsAliveRequest';
import IsAliveResult from './model/IsAliveResult';
import LastMediaRequest from './model/LastMediaRequest';
import LastMediaResult from './model/LastMediaResult';
import StartVideoRequest from './model/StartVideoRequest';
import StartVideoResult from './model/StartVideoResult';
import StartZappitiServiceRequest from './model/StartZappitiServiceRequest';
import StartZappitiServiceResult from './model/StartZappitiServiceResult';
import GeneralApi from './api/GeneralApi';
import PlaybackApi from './api/PlaybackApi';
import ZappitiServiceApi from './api/ZappitiServiceApi';


/**
* Move your app forward with the Zappiti Player API. Use http://your-player-ip:8990/ as base URL for your requests..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var ZappitiPlayerApi = require('index'); // See note below*.
* var xxxSvc = new ZappitiPlayerApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new ZappitiPlayerApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new ZappitiPlayerApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new ZappitiPlayerApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 4.15.174
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The CheckZappitiServiceRequest model constructor.
     * @property {module:model/CheckZappitiServiceRequest}
     */
    CheckZappitiServiceRequest,

    /**
     * The CheckZappitiServiceResult model constructor.
     * @property {module:model/CheckZappitiServiceResult}
     */
    CheckZappitiServiceResult,

    /**
     * The ConnectionDetailsRequest model constructor.
     * @property {module:model/ConnectionDetailsRequest}
     */
    ConnectionDetailsRequest,

    /**
     * The ConnectionDetailsResult model constructor.
     * @property {module:model/ConnectionDetailsResult}
     */
    ConnectionDetailsResult,

    /**
     * The ErrorCode model constructor.
     * @property {module:model/ErrorCode}
     */
    ErrorCode,

    /**
     * The InstallZappitiServiceRequest model constructor.
     * @property {module:model/InstallZappitiServiceRequest}
     */
    InstallZappitiServiceRequest,

    /**
     * The InstallZappitiServiceResult model constructor.
     * @property {module:model/InstallZappitiServiceResult}
     */
    InstallZappitiServiceResult,

    /**
     * The IsAliveRequest model constructor.
     * @property {module:model/IsAliveRequest}
     */
    IsAliveRequest,

    /**
     * The IsAliveResult model constructor.
     * @property {module:model/IsAliveResult}
     */
    IsAliveResult,

    /**
     * The LastMediaRequest model constructor.
     * @property {module:model/LastMediaRequest}
     */
    LastMediaRequest,

    /**
     * The LastMediaResult model constructor.
     * @property {module:model/LastMediaResult}
     */
    LastMediaResult,

    /**
     * The StartVideoRequest model constructor.
     * @property {module:model/StartVideoRequest}
     */
    StartVideoRequest,

    /**
     * The StartVideoResult model constructor.
     * @property {module:model/StartVideoResult}
     */
    StartVideoResult,

    /**
     * The StartZappitiServiceRequest model constructor.
     * @property {module:model/StartZappitiServiceRequest}
     */
    StartZappitiServiceRequest,

    /**
     * The StartZappitiServiceResult model constructor.
     * @property {module:model/StartZappitiServiceResult}
     */
    StartZappitiServiceResult,

    /**
    * The GeneralApi service constructor.
    * @property {module:api/GeneralApi}
    */
    GeneralApi,

    /**
    * The PlaybackApi service constructor.
    * @property {module:api/PlaybackApi}
    */
    PlaybackApi,

    /**
    * The ZappitiServiceApi service constructor.
    * @property {module:api/ZappitiServiceApi}
    */
    ZappitiServiceApi
};
