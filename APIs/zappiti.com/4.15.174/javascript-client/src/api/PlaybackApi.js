/**
 * Zappiti Player API
 * Move your app forward with the Zappiti Player API. Use http://your-player-ip:8990/ as base URL for your requests.
 *
 * The version of the OpenAPI document: 4.15.174
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import LastMediaRequest from '../model/LastMediaRequest';
import LastMediaResult from '../model/LastMediaResult';
import StartVideoRequest from '../model/StartVideoRequest';
import StartVideoResult from '../model/StartVideoResult';

/**
* Playback service.
* @module api/PlaybackApi
* @version 4.15.174
*/
export default class PlaybackApi {

    /**
    * Constructs a new PlaybackApi. 
    * @alias module:api/PlaybackApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the lastMediaPost operation.
     * @callback module:api/PlaybackApi~lastMediaPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/LastMediaResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get informations about last media playback
     * @param {module:model/LastMediaRequest} body 
     * @param {module:api/PlaybackApi~lastMediaPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/LastMediaResult}
     */
    lastMediaPost(body, callback) {
      let postBody = body;
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling lastMediaPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = LastMediaResult;
      return this.apiClient.callApi(
        '/LastMedia', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the startVideoPost operation.
     * @callback module:api/PlaybackApi~startVideoPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/StartVideoResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Start the playback
     * Start the playback of the speficied video. 
     * @param {module:model/StartVideoRequest} body 
     * @param {module:api/PlaybackApi~startVideoPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/StartVideoResult}
     */
    startVideoPost(body, callback) {
      let postBody = body;
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling startVideoPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = StartVideoResult;
      return this.apiClient.callApi(
        '/StartVideo', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
