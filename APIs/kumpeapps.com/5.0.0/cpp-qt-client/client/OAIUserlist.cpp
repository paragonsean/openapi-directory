/**
 * KumpeApps API
 * KKid API. Due to security concerns all calls to this API requires authentication. If you have access then you may use your KumpeApps username/password to authenticate. To gain access please use the contact developer link below.
 *
 * The version of the OpenAPI document: 5.0.0
 * Contact: helpdesk@kumpeapps.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUserlist.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUserlist::OAIUserlist(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUserlist::OAIUserlist() {
    this->initializeModel();
}

OAIUserlist::~OAIUserlist() {}

void OAIUserlist::initializeModel() {

    m_success_isSet = false;
    m_success_isValid = false;

    m_user_isSet = false;
    m_user_isValid = false;
}

void OAIUserlist::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUserlist::fromJsonObject(QJsonObject json) {

    m_success_isValid = ::OpenAPI::fromJsonValue(m_success, json[QString("success")]);
    m_success_isSet = !json[QString("success")].isNull() && m_success_isValid;

    m_user_isValid = ::OpenAPI::fromJsonValue(m_user, json[QString("user")]);
    m_user_isSet = !json[QString("user")].isNull() && m_user_isValid;
}

QString OAIUserlist::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUserlist::asJsonObject() const {
    QJsonObject obj;
    if (m_success_isSet) {
        obj.insert(QString("success"), ::OpenAPI::toJsonValue(m_success));
    }
    if (m_user.size() > 0) {
        obj.insert(QString("user"), ::OpenAPI::toJsonValue(m_user));
    }
    return obj;
}

bool OAIUserlist::isSuccess() const {
    return m_success;
}
void OAIUserlist::setSuccess(const bool &success) {
    m_success = success;
    m_success_isSet = true;
}

bool OAIUserlist::is_success_Set() const{
    return m_success_isSet;
}

bool OAIUserlist::is_success_Valid() const{
    return m_success_isValid;
}

QList<OAIUser> OAIUserlist::getUser() const {
    return m_user;
}
void OAIUserlist::setUser(const QList<OAIUser> &user) {
    m_user = user;
    m_user_isSet = true;
}

bool OAIUserlist::is_user_Set() const{
    return m_user_isSet;
}

bool OAIUserlist::is_user_Valid() const{
    return m_user_isValid;
}

bool OAIUserlist::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_success_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_user.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUserlist::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
