/**
 * KumpeApps API
 * KKid API. Due to security concerns all calls to this API requires authentication. If you have access then you may use your KumpeApps username/password to authenticate. To gain access please use the contact developer link below.
 *
 * The version of the OpenAPI document: 5.0.0
 * Contact: helpdesk@kumpeapps.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAddUserResponse.h
 *
 * add user
 */

#ifndef OAIAddUserResponse_H
#define OAIAddUserResponse_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAddUserResponse : public OAIObject {
public:
    OAIAddUserResponse();
    OAIAddUserResponse(QString json);
    ~OAIAddUserResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAdded() const;
    void setAdded(const QString &added);
    bool is_added_Set() const;
    bool is_added_Valid() const;

    QString getAffAdded() const;
    void setAffAdded(const QString &aff_added);
    bool is_aff_added_Set() const;
    bool is_aff_added_Valid() const;

    QString getAffId() const;
    void setAffId(const QString &aff_id);
    bool is_aff_id_Set() const;
    bool is_aff_id_Valid() const;

    QString getAffPayoutType() const;
    void setAffPayoutType(const QString &aff_payout_type);
    bool is_aff_payout_type_Set() const;
    bool is_aff_payout_type_Valid() const;

    QString getAvatar() const;
    void setAvatar(const QString &avatar);
    bool is_avatar_Set() const;
    bool is_avatar_Valid() const;

    QString getCity() const;
    void setCity(const QString &city);
    bool is_city_Set() const;
    bool is_city_Valid() const;

    QString getComment() const;
    void setComment(const QString &comment);
    bool is_comment_Set() const;
    bool is_comment_Valid() const;

    QString getCountry() const;
    void setCountry(const QString &country);
    bool is_country_Set() const;
    bool is_country_Valid() const;

    QString getDisableLockUntil() const;
    void setDisableLockUntil(const QString &disable_lock_until);
    bool is_disable_lock_until_Set() const;
    bool is_disable_lock_until_Valid() const;

    QString getEmail() const;
    void setEmail(const QString &email);
    bool is_email_Set() const;
    bool is_email_Valid() const;

    QString getIAgree() const;
    void setIAgree(const QString &i_agree);
    bool is_i_agree_Set() const;
    bool is_i_agree_Valid() const;

    QString getIsAffiliate() const;
    void setIsAffiliate(const QString &is_affiliate);
    bool is_is_affiliate_Set() const;
    bool is_is_affiliate_Valid() const;

    QString getIsLocked() const;
    void setIsLocked(const QString &is_locked);
    bool is_is_locked_Set() const;
    bool is_is_locked_Valid() const;

    QString getLang() const;
    void setLang(const QString &lang);
    bool is_lang_Set() const;
    bool is_lang_Valid() const;

    QString getLastLogin() const;
    void setLastLogin(const QString &last_login);
    bool is_last_login_Set() const;
    bool is_last_login_Valid() const;

    QString getLogin() const;
    void setLogin(const QString &login);
    bool is_login_Set() const;
    bool is_login_Valid() const;

    QString getNameF() const;
    void setNameF(const QString &name_f);
    bool is_name_f_Set() const;
    bool is_name_f_Valid() const;

    QString getNameL() const;
    void setNameL(const QString &name_l);
    bool is_name_l_Set() const;
    bool is_name_l_Valid() const;

    QString getPass() const;
    void setPass(const QString &pass);
    bool is_pass_Set() const;
    bool is_pass_Valid() const;

    QString getPassDattm() const;
    void setPassDattm(const QString &pass_dattm);
    bool is_pass_dattm_Set() const;
    bool is_pass_dattm_Valid() const;

    QString getPhone() const;
    void setPhone(const QString &phone);
    bool is_phone_Set() const;
    bool is_phone_Valid() const;

    QString getPin() const;
    void setPin(const QString &pin);
    bool is_pin_Set() const;
    bool is_pin_Valid() const;

    QString getPlainPassword() const;
    void setPlainPassword(const QString &plain_password);
    bool is_plain_password_Set() const;
    bool is_plain_password_Valid() const;

    QString getRememberKey() const;
    void setRememberKey(const QString &remember_key);
    bool is_remember_key_Set() const;
    bool is_remember_key_Valid() const;

    QString getRemoteAddr() const;
    void setRemoteAddr(const QString &remote_addr);
    bool is_remote_addr_Set() const;
    bool is_remote_addr_Valid() const;

    QString getRequireConsent() const;
    void setRequireConsent(const QString &require_consent);
    bool is_require_consent_Set() const;
    bool is_require_consent_Valid() const;

    QString getResellerId() const;
    void setResellerId(const QString &reseller_id);
    bool is_reseller_id_Set() const;
    bool is_reseller_id_Valid() const;

    QString getSavedFormId() const;
    void setSavedFormId(const QString &saved_form_id);
    bool is_saved_form_id_Set() const;
    bool is_saved_form_id_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getStreet() const;
    void setStreet(const QString &street);
    bool is_street_Set() const;
    bool is_street_Valid() const;

    QString getStreet2() const;
    void setStreet2(const QString &street2);
    bool is_street2_Set() const;
    bool is_street2_Valid() const;

    QString getSubusersParentId() const;
    void setSubusersParentId(const QString &subusers_parent_id);
    bool is_subusers_parent_id_Set() const;
    bool is_subusers_parent_id_Valid() const;

    QString getTaxId() const;
    void setTaxId(const QString &tax_id);
    bool is_tax_id_Set() const;
    bool is_tax_id_Valid() const;

    QString getUnsubscribed() const;
    void setUnsubscribed(const QString &unsubscribed);
    bool is_unsubscribed_Set() const;
    bool is_unsubscribed_Valid() const;

    QString getUserAgent() const;
    void setUserAgent(const QString &user_agent);
    bool is_user_agent_Set() const;
    bool is_user_agent_Valid() const;

    qint32 getUserId() const;
    void setUserId(const qint32 &user_id);
    bool is_user_id_Set() const;
    bool is_user_id_Valid() const;

    QString getZip() const;
    void setZip(const QString &zip);
    bool is_zip_Set() const;
    bool is_zip_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_added;
    bool m_added_isSet;
    bool m_added_isValid;

    QString m_aff_added;
    bool m_aff_added_isSet;
    bool m_aff_added_isValid;

    QString m_aff_id;
    bool m_aff_id_isSet;
    bool m_aff_id_isValid;

    QString m_aff_payout_type;
    bool m_aff_payout_type_isSet;
    bool m_aff_payout_type_isValid;

    QString m_avatar;
    bool m_avatar_isSet;
    bool m_avatar_isValid;

    QString m_city;
    bool m_city_isSet;
    bool m_city_isValid;

    QString m_comment;
    bool m_comment_isSet;
    bool m_comment_isValid;

    QString m_country;
    bool m_country_isSet;
    bool m_country_isValid;

    QString m_disable_lock_until;
    bool m_disable_lock_until_isSet;
    bool m_disable_lock_until_isValid;

    QString m_email;
    bool m_email_isSet;
    bool m_email_isValid;

    QString m_i_agree;
    bool m_i_agree_isSet;
    bool m_i_agree_isValid;

    QString m_is_affiliate;
    bool m_is_affiliate_isSet;
    bool m_is_affiliate_isValid;

    QString m_is_locked;
    bool m_is_locked_isSet;
    bool m_is_locked_isValid;

    QString m_lang;
    bool m_lang_isSet;
    bool m_lang_isValid;

    QString m_last_login;
    bool m_last_login_isSet;
    bool m_last_login_isValid;

    QString m_login;
    bool m_login_isSet;
    bool m_login_isValid;

    QString m_name_f;
    bool m_name_f_isSet;
    bool m_name_f_isValid;

    QString m_name_l;
    bool m_name_l_isSet;
    bool m_name_l_isValid;

    QString m_pass;
    bool m_pass_isSet;
    bool m_pass_isValid;

    QString m_pass_dattm;
    bool m_pass_dattm_isSet;
    bool m_pass_dattm_isValid;

    QString m_phone;
    bool m_phone_isSet;
    bool m_phone_isValid;

    QString m_pin;
    bool m_pin_isSet;
    bool m_pin_isValid;

    QString m_plain_password;
    bool m_plain_password_isSet;
    bool m_plain_password_isValid;

    QString m_remember_key;
    bool m_remember_key_isSet;
    bool m_remember_key_isValid;

    QString m_remote_addr;
    bool m_remote_addr_isSet;
    bool m_remote_addr_isValid;

    QString m_require_consent;
    bool m_require_consent_isSet;
    bool m_require_consent_isValid;

    QString m_reseller_id;
    bool m_reseller_id_isSet;
    bool m_reseller_id_isValid;

    QString m_saved_form_id;
    bool m_saved_form_id_isSet;
    bool m_saved_form_id_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_street;
    bool m_street_isSet;
    bool m_street_isValid;

    QString m_street2;
    bool m_street2_isSet;
    bool m_street2_isValid;

    QString m_subusers_parent_id;
    bool m_subusers_parent_id_isSet;
    bool m_subusers_parent_id_isValid;

    QString m_tax_id;
    bool m_tax_id_isSet;
    bool m_tax_id_isValid;

    QString m_unsubscribed;
    bool m_unsubscribed_isSet;
    bool m_unsubscribed_isValid;

    QString m_user_agent;
    bool m_user_agent_isSet;
    bool m_user_agent_isValid;

    qint32 m_user_id;
    bool m_user_id_isSet;
    bool m_user_id_isValid;

    QString m_zip;
    bool m_zip_isSet;
    bool m_zip_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAddUserResponse)

#endif // OAIAddUserResponse_H
