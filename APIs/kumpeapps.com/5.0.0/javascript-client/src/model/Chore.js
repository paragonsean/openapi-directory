/**
 * KumpeApps API
 * KKid API. Due to security concerns all calls to this API requires authentication. If you have access then you may use your KumpeApps username/password to authenticate. To gain access please use the contact developer link below.
 *
 * The version of the OpenAPI document: 5.0.0
 * Contact: helpdesk@kumpeapps.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Chore model module.
 * @module model/Chore
 * @version 5.0.0
 */
class Chore {
    /**
     * Constructs a new <code>Chore</code>.
     * chore
     * @alias module:model/Chore
     */
    constructor() { 
        
        Chore.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Chore</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Chore} obj Optional instance to populate.
     * @return {module:model/Chore} The populated <code>Chore</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Chore();

            if (data.hasOwnProperty('aiIcon')) {
                obj['aiIcon'] = ApiClient.convertToType(data['aiIcon'], 'String');
            }
            if (data.hasOwnProperty('altitude')) {
                obj['altitude'] = ApiClient.convertToType(data['altitude'], 'Number');
            }
            if (data.hasOwnProperty('blockDash')) {
                obj['blockDash'] = ApiClient.convertToType(data['blockDash'], 'Boolean');
            }
            if (data.hasOwnProperty('choreDescription')) {
                obj['choreDescription'] = ApiClient.convertToType(data['choreDescription'], 'String');
            }
            if (data.hasOwnProperty('choreName')) {
                obj['choreName'] = ApiClient.convertToType(data['choreName'], 'String');
            }
            if (data.hasOwnProperty('choreNumber')) {
                obj['choreNumber'] = ApiClient.convertToType(data['choreNumber'], 'Number');
            }
            if (data.hasOwnProperty('day')) {
                obj['day'] = ApiClient.convertToType(data['day'], 'String');
            }
            if (data.hasOwnProperty('extraAllowance')) {
                obj['extraAllowance'] = ApiClient.convertToType(data['extraAllowance'], 'Number');
            }
            if (data.hasOwnProperty('idChoreList')) {
                obj['idChoreList'] = ApiClient.convertToType(data['idChoreList'], 'Number');
            }
            if (data.hasOwnProperty('isCalendar')) {
                obj['isCalendar'] = ApiClient.convertToType(data['isCalendar'], 'Boolean');
            }
            if (data.hasOwnProperty('kid')) {
                obj['kid'] = ApiClient.convertToType(data['kid'], 'String');
            }
            if (data.hasOwnProperty('latitude')) {
                obj['latitude'] = ApiClient.convertToType(data['latitude'], 'Number');
            }
            if (data.hasOwnProperty('longitude')) {
                obj['longitude'] = ApiClient.convertToType(data['longitude'], 'Number');
            }
            if (data.hasOwnProperty('nfcTag')) {
                obj['nfcTag'] = ApiClient.convertToType(data['nfcTag'], 'String');
            }
            if (data.hasOwnProperty('notes')) {
                obj['notes'] = ApiClient.convertToType(data['notes'], 'String');
            }
            if (data.hasOwnProperty('oneTime')) {
                obj['oneTime'] = ApiClient.convertToType(data['oneTime'], 'Boolean');
            }
            if (data.hasOwnProperty('optional')) {
                obj['optional'] = ApiClient.convertToType(data['optional'], 'Boolean');
            }
            if (data.hasOwnProperty('reassignable')) {
                obj['reassignable'] = ApiClient.convertToType(data['reassignable'], 'Boolean');
            }
            if (data.hasOwnProperty('reassigned')) {
                obj['reassigned'] = ApiClient.convertToType(data['reassigned'], 'Boolean');
            }
            if (data.hasOwnProperty('requireObjectDetection')) {
                obj['requireObjectDetection'] = ApiClient.convertToType(data['requireObjectDetection'], 'String');
            }
            if (data.hasOwnProperty('startDate')) {
                obj['startDate'] = ApiClient.convertToType(data['startDate'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('stolen')) {
                obj['stolen'] = ApiClient.convertToType(data['stolen'], 'Boolean');
            }
            if (data.hasOwnProperty('stolenBy')) {
                obj['stolenBy'] = ApiClient.convertToType(data['stolenBy'], 'String');
            }
            if (data.hasOwnProperty('updated')) {
                obj['updated'] = ApiClient.convertToType(data['updated'], 'String');
            }
            if (data.hasOwnProperty('updatedBy')) {
                obj['updatedBy'] = ApiClient.convertToType(data['updatedBy'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Chore</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Chore</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['aiIcon'] && !(typeof data['aiIcon'] === 'string' || data['aiIcon'] instanceof String)) {
            throw new Error("Expected the field `aiIcon` to be a primitive type in the JSON string but got " + data['aiIcon']);
        }
        // ensure the json data is a string
        if (data['choreDescription'] && !(typeof data['choreDescription'] === 'string' || data['choreDescription'] instanceof String)) {
            throw new Error("Expected the field `choreDescription` to be a primitive type in the JSON string but got " + data['choreDescription']);
        }
        // ensure the json data is a string
        if (data['choreName'] && !(typeof data['choreName'] === 'string' || data['choreName'] instanceof String)) {
            throw new Error("Expected the field `choreName` to be a primitive type in the JSON string but got " + data['choreName']);
        }
        // ensure the json data is a string
        if (data['day'] && !(typeof data['day'] === 'string' || data['day'] instanceof String)) {
            throw new Error("Expected the field `day` to be a primitive type in the JSON string but got " + data['day']);
        }
        // ensure the json data is a string
        if (data['kid'] && !(typeof data['kid'] === 'string' || data['kid'] instanceof String)) {
            throw new Error("Expected the field `kid` to be a primitive type in the JSON string but got " + data['kid']);
        }
        // ensure the json data is a string
        if (data['nfcTag'] && !(typeof data['nfcTag'] === 'string' || data['nfcTag'] instanceof String)) {
            throw new Error("Expected the field `nfcTag` to be a primitive type in the JSON string but got " + data['nfcTag']);
        }
        // ensure the json data is a string
        if (data['notes'] && !(typeof data['notes'] === 'string' || data['notes'] instanceof String)) {
            throw new Error("Expected the field `notes` to be a primitive type in the JSON string but got " + data['notes']);
        }
        // ensure the json data is a string
        if (data['requireObjectDetection'] && !(typeof data['requireObjectDetection'] === 'string' || data['requireObjectDetection'] instanceof String)) {
            throw new Error("Expected the field `requireObjectDetection` to be a primitive type in the JSON string but got " + data['requireObjectDetection']);
        }
        // ensure the json data is a string
        if (data['startDate'] && !(typeof data['startDate'] === 'string' || data['startDate'] instanceof String)) {
            throw new Error("Expected the field `startDate` to be a primitive type in the JSON string but got " + data['startDate']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        // ensure the json data is a string
        if (data['stolenBy'] && !(typeof data['stolenBy'] === 'string' || data['stolenBy'] instanceof String)) {
            throw new Error("Expected the field `stolenBy` to be a primitive type in the JSON string but got " + data['stolenBy']);
        }
        // ensure the json data is a string
        if (data['updated'] && !(typeof data['updated'] === 'string' || data['updated'] instanceof String)) {
            throw new Error("Expected the field `updated` to be a primitive type in the JSON string but got " + data['updated']);
        }
        // ensure the json data is a string
        if (data['updatedBy'] && !(typeof data['updatedBy'] === 'string' || data['updatedBy'] instanceof String)) {
            throw new Error("Expected the field `updatedBy` to be a primitive type in the JSON string but got " + data['updatedBy']);
        }

        return true;
    }


}



/**
 * @member {String} aiIcon
 */
Chore.prototype['aiIcon'] = undefined;

/**
 * @member {Number} altitude
 */
Chore.prototype['altitude'] = undefined;

/**
 * @member {Boolean} blockDash
 */
Chore.prototype['blockDash'] = undefined;

/**
 * @member {String} choreDescription
 */
Chore.prototype['choreDescription'] = undefined;

/**
 * @member {String} choreName
 */
Chore.prototype['choreName'] = undefined;

/**
 * @member {Number} choreNumber
 */
Chore.prototype['choreNumber'] = undefined;

/**
 * @member {String} day
 */
Chore.prototype['day'] = undefined;

/**
 * @member {Number} extraAllowance
 */
Chore.prototype['extraAllowance'] = undefined;

/**
 * @member {Number} idChoreList
 */
Chore.prototype['idChoreList'] = undefined;

/**
 * @member {Boolean} isCalendar
 */
Chore.prototype['isCalendar'] = undefined;

/**
 * @member {String} kid
 */
Chore.prototype['kid'] = undefined;

/**
 * @member {Number} latitude
 */
Chore.prototype['latitude'] = undefined;

/**
 * @member {Number} longitude
 */
Chore.prototype['longitude'] = undefined;

/**
 * @member {String} nfcTag
 */
Chore.prototype['nfcTag'] = undefined;

/**
 * @member {String} notes
 */
Chore.prototype['notes'] = undefined;

/**
 * @member {Boolean} oneTime
 */
Chore.prototype['oneTime'] = undefined;

/**
 * @member {Boolean} optional
 */
Chore.prototype['optional'] = undefined;

/**
 * @member {Boolean} reassignable
 */
Chore.prototype['reassignable'] = undefined;

/**
 * @member {Boolean} reassigned
 */
Chore.prototype['reassigned'] = undefined;

/**
 * @member {String} requireObjectDetection
 */
Chore.prototype['requireObjectDetection'] = undefined;

/**
 * @member {String} startDate
 */
Chore.prototype['startDate'] = undefined;

/**
 * @member {String} status
 */
Chore.prototype['status'] = undefined;

/**
 * @member {Boolean} stolen
 */
Chore.prototype['stolen'] = undefined;

/**
 * @member {String} stolenBy
 */
Chore.prototype['stolenBy'] = undefined;

/**
 * @member {String} updated
 */
Chore.prototype['updated'] = undefined;

/**
 * @member {String} updatedBy
 */
Chore.prototype['updatedBy'] = undefined;






export default Chore;

