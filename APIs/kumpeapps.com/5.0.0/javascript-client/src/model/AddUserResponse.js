/**
 * KumpeApps API
 * KKid API. Due to security concerns all calls to this API requires authentication. If you have access then you may use your KumpeApps username/password to authenticate. To gain access please use the contact developer link below.
 *
 * The version of the OpenAPI document: 5.0.0
 * Contact: helpdesk@kumpeapps.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AddUserResponse model module.
 * @module model/AddUserResponse
 * @version 5.0.0
 */
class AddUserResponse {
    /**
     * Constructs a new <code>AddUserResponse</code>.
     * add user
     * @alias module:model/AddUserResponse
     */
    constructor() { 
        
        AddUserResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AddUserResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AddUserResponse} obj Optional instance to populate.
     * @return {module:model/AddUserResponse} The populated <code>AddUserResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AddUserResponse();

            if (data.hasOwnProperty('added')) {
                obj['added'] = ApiClient.convertToType(data['added'], 'String');
            }
            if (data.hasOwnProperty('aff_added')) {
                obj['aff_added'] = ApiClient.convertToType(data['aff_added'], 'String');
            }
            if (data.hasOwnProperty('aff_id')) {
                obj['aff_id'] = ApiClient.convertToType(data['aff_id'], 'String');
            }
            if (data.hasOwnProperty('aff_payout_type')) {
                obj['aff_payout_type'] = ApiClient.convertToType(data['aff_payout_type'], 'String');
            }
            if (data.hasOwnProperty('avatar')) {
                obj['avatar'] = ApiClient.convertToType(data['avatar'], 'String');
            }
            if (data.hasOwnProperty('city')) {
                obj['city'] = ApiClient.convertToType(data['city'], 'String');
            }
            if (data.hasOwnProperty('comment')) {
                obj['comment'] = ApiClient.convertToType(data['comment'], 'String');
            }
            if (data.hasOwnProperty('country')) {
                obj['country'] = ApiClient.convertToType(data['country'], 'String');
            }
            if (data.hasOwnProperty('disable_lock_until')) {
                obj['disable_lock_until'] = ApiClient.convertToType(data['disable_lock_until'], 'String');
            }
            if (data.hasOwnProperty('email')) {
                obj['email'] = ApiClient.convertToType(data['email'], 'String');
            }
            if (data.hasOwnProperty('i_agree')) {
                obj['i_agree'] = ApiClient.convertToType(data['i_agree'], 'String');
            }
            if (data.hasOwnProperty('is_affiliate')) {
                obj['is_affiliate'] = ApiClient.convertToType(data['is_affiliate'], 'String');
            }
            if (data.hasOwnProperty('is_locked')) {
                obj['is_locked'] = ApiClient.convertToType(data['is_locked'], 'String');
            }
            if (data.hasOwnProperty('lang')) {
                obj['lang'] = ApiClient.convertToType(data['lang'], 'String');
            }
            if (data.hasOwnProperty('last_login')) {
                obj['last_login'] = ApiClient.convertToType(data['last_login'], 'String');
            }
            if (data.hasOwnProperty('login')) {
                obj['login'] = ApiClient.convertToType(data['login'], 'String');
            }
            if (data.hasOwnProperty('name_f')) {
                obj['name_f'] = ApiClient.convertToType(data['name_f'], 'String');
            }
            if (data.hasOwnProperty('name_l')) {
                obj['name_l'] = ApiClient.convertToType(data['name_l'], 'String');
            }
            if (data.hasOwnProperty('pass')) {
                obj['pass'] = ApiClient.convertToType(data['pass'], 'String');
            }
            if (data.hasOwnProperty('pass_dattm')) {
                obj['pass_dattm'] = ApiClient.convertToType(data['pass_dattm'], 'String');
            }
            if (data.hasOwnProperty('phone')) {
                obj['phone'] = ApiClient.convertToType(data['phone'], 'String');
            }
            if (data.hasOwnProperty('pin')) {
                obj['pin'] = ApiClient.convertToType(data['pin'], 'String');
            }
            if (data.hasOwnProperty('plain_password')) {
                obj['plain_password'] = ApiClient.convertToType(data['plain_password'], 'String');
            }
            if (data.hasOwnProperty('remember_key')) {
                obj['remember_key'] = ApiClient.convertToType(data['remember_key'], 'String');
            }
            if (data.hasOwnProperty('remote_addr')) {
                obj['remote_addr'] = ApiClient.convertToType(data['remote_addr'], 'String');
            }
            if (data.hasOwnProperty('require_consent')) {
                obj['require_consent'] = ApiClient.convertToType(data['require_consent'], 'String');
            }
            if (data.hasOwnProperty('reseller_id')) {
                obj['reseller_id'] = ApiClient.convertToType(data['reseller_id'], 'String');
            }
            if (data.hasOwnProperty('saved_form_id')) {
                obj['saved_form_id'] = ApiClient.convertToType(data['saved_form_id'], 'String');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('street')) {
                obj['street'] = ApiClient.convertToType(data['street'], 'String');
            }
            if (data.hasOwnProperty('street2')) {
                obj['street2'] = ApiClient.convertToType(data['street2'], 'String');
            }
            if (data.hasOwnProperty('subusers_parent_id')) {
                obj['subusers_parent_id'] = ApiClient.convertToType(data['subusers_parent_id'], 'String');
            }
            if (data.hasOwnProperty('tax_id')) {
                obj['tax_id'] = ApiClient.convertToType(data['tax_id'], 'String');
            }
            if (data.hasOwnProperty('unsubscribed')) {
                obj['unsubscribed'] = ApiClient.convertToType(data['unsubscribed'], 'String');
            }
            if (data.hasOwnProperty('user_agent')) {
                obj['user_agent'] = ApiClient.convertToType(data['user_agent'], 'String');
            }
            if (data.hasOwnProperty('user_id')) {
                obj['user_id'] = ApiClient.convertToType(data['user_id'], 'Number');
            }
            if (data.hasOwnProperty('zip')) {
                obj['zip'] = ApiClient.convertToType(data['zip'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AddUserResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AddUserResponse</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['added'] && !(typeof data['added'] === 'string' || data['added'] instanceof String)) {
            throw new Error("Expected the field `added` to be a primitive type in the JSON string but got " + data['added']);
        }
        // ensure the json data is a string
        if (data['aff_added'] && !(typeof data['aff_added'] === 'string' || data['aff_added'] instanceof String)) {
            throw new Error("Expected the field `aff_added` to be a primitive type in the JSON string but got " + data['aff_added']);
        }
        // ensure the json data is a string
        if (data['aff_id'] && !(typeof data['aff_id'] === 'string' || data['aff_id'] instanceof String)) {
            throw new Error("Expected the field `aff_id` to be a primitive type in the JSON string but got " + data['aff_id']);
        }
        // ensure the json data is a string
        if (data['aff_payout_type'] && !(typeof data['aff_payout_type'] === 'string' || data['aff_payout_type'] instanceof String)) {
            throw new Error("Expected the field `aff_payout_type` to be a primitive type in the JSON string but got " + data['aff_payout_type']);
        }
        // ensure the json data is a string
        if (data['avatar'] && !(typeof data['avatar'] === 'string' || data['avatar'] instanceof String)) {
            throw new Error("Expected the field `avatar` to be a primitive type in the JSON string but got " + data['avatar']);
        }
        // ensure the json data is a string
        if (data['city'] && !(typeof data['city'] === 'string' || data['city'] instanceof String)) {
            throw new Error("Expected the field `city` to be a primitive type in the JSON string but got " + data['city']);
        }
        // ensure the json data is a string
        if (data['comment'] && !(typeof data['comment'] === 'string' || data['comment'] instanceof String)) {
            throw new Error("Expected the field `comment` to be a primitive type in the JSON string but got " + data['comment']);
        }
        // ensure the json data is a string
        if (data['country'] && !(typeof data['country'] === 'string' || data['country'] instanceof String)) {
            throw new Error("Expected the field `country` to be a primitive type in the JSON string but got " + data['country']);
        }
        // ensure the json data is a string
        if (data['disable_lock_until'] && !(typeof data['disable_lock_until'] === 'string' || data['disable_lock_until'] instanceof String)) {
            throw new Error("Expected the field `disable_lock_until` to be a primitive type in the JSON string but got " + data['disable_lock_until']);
        }
        // ensure the json data is a string
        if (data['email'] && !(typeof data['email'] === 'string' || data['email'] instanceof String)) {
            throw new Error("Expected the field `email` to be a primitive type in the JSON string but got " + data['email']);
        }
        // ensure the json data is a string
        if (data['i_agree'] && !(typeof data['i_agree'] === 'string' || data['i_agree'] instanceof String)) {
            throw new Error("Expected the field `i_agree` to be a primitive type in the JSON string but got " + data['i_agree']);
        }
        // ensure the json data is a string
        if (data['is_affiliate'] && !(typeof data['is_affiliate'] === 'string' || data['is_affiliate'] instanceof String)) {
            throw new Error("Expected the field `is_affiliate` to be a primitive type in the JSON string but got " + data['is_affiliate']);
        }
        // ensure the json data is a string
        if (data['is_locked'] && !(typeof data['is_locked'] === 'string' || data['is_locked'] instanceof String)) {
            throw new Error("Expected the field `is_locked` to be a primitive type in the JSON string but got " + data['is_locked']);
        }
        // ensure the json data is a string
        if (data['lang'] && !(typeof data['lang'] === 'string' || data['lang'] instanceof String)) {
            throw new Error("Expected the field `lang` to be a primitive type in the JSON string but got " + data['lang']);
        }
        // ensure the json data is a string
        if (data['last_login'] && !(typeof data['last_login'] === 'string' || data['last_login'] instanceof String)) {
            throw new Error("Expected the field `last_login` to be a primitive type in the JSON string but got " + data['last_login']);
        }
        // ensure the json data is a string
        if (data['login'] && !(typeof data['login'] === 'string' || data['login'] instanceof String)) {
            throw new Error("Expected the field `login` to be a primitive type in the JSON string but got " + data['login']);
        }
        // ensure the json data is a string
        if (data['name_f'] && !(typeof data['name_f'] === 'string' || data['name_f'] instanceof String)) {
            throw new Error("Expected the field `name_f` to be a primitive type in the JSON string but got " + data['name_f']);
        }
        // ensure the json data is a string
        if (data['name_l'] && !(typeof data['name_l'] === 'string' || data['name_l'] instanceof String)) {
            throw new Error("Expected the field `name_l` to be a primitive type in the JSON string but got " + data['name_l']);
        }
        // ensure the json data is a string
        if (data['pass'] && !(typeof data['pass'] === 'string' || data['pass'] instanceof String)) {
            throw new Error("Expected the field `pass` to be a primitive type in the JSON string but got " + data['pass']);
        }
        // ensure the json data is a string
        if (data['pass_dattm'] && !(typeof data['pass_dattm'] === 'string' || data['pass_dattm'] instanceof String)) {
            throw new Error("Expected the field `pass_dattm` to be a primitive type in the JSON string but got " + data['pass_dattm']);
        }
        // ensure the json data is a string
        if (data['phone'] && !(typeof data['phone'] === 'string' || data['phone'] instanceof String)) {
            throw new Error("Expected the field `phone` to be a primitive type in the JSON string but got " + data['phone']);
        }
        // ensure the json data is a string
        if (data['pin'] && !(typeof data['pin'] === 'string' || data['pin'] instanceof String)) {
            throw new Error("Expected the field `pin` to be a primitive type in the JSON string but got " + data['pin']);
        }
        // ensure the json data is a string
        if (data['plain_password'] && !(typeof data['plain_password'] === 'string' || data['plain_password'] instanceof String)) {
            throw new Error("Expected the field `plain_password` to be a primitive type in the JSON string but got " + data['plain_password']);
        }
        // ensure the json data is a string
        if (data['remember_key'] && !(typeof data['remember_key'] === 'string' || data['remember_key'] instanceof String)) {
            throw new Error("Expected the field `remember_key` to be a primitive type in the JSON string but got " + data['remember_key']);
        }
        // ensure the json data is a string
        if (data['remote_addr'] && !(typeof data['remote_addr'] === 'string' || data['remote_addr'] instanceof String)) {
            throw new Error("Expected the field `remote_addr` to be a primitive type in the JSON string but got " + data['remote_addr']);
        }
        // ensure the json data is a string
        if (data['require_consent'] && !(typeof data['require_consent'] === 'string' || data['require_consent'] instanceof String)) {
            throw new Error("Expected the field `require_consent` to be a primitive type in the JSON string but got " + data['require_consent']);
        }
        // ensure the json data is a string
        if (data['reseller_id'] && !(typeof data['reseller_id'] === 'string' || data['reseller_id'] instanceof String)) {
            throw new Error("Expected the field `reseller_id` to be a primitive type in the JSON string but got " + data['reseller_id']);
        }
        // ensure the json data is a string
        if (data['saved_form_id'] && !(typeof data['saved_form_id'] === 'string' || data['saved_form_id'] instanceof String)) {
            throw new Error("Expected the field `saved_form_id` to be a primitive type in the JSON string but got " + data['saved_form_id']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        // ensure the json data is a string
        if (data['street'] && !(typeof data['street'] === 'string' || data['street'] instanceof String)) {
            throw new Error("Expected the field `street` to be a primitive type in the JSON string but got " + data['street']);
        }
        // ensure the json data is a string
        if (data['street2'] && !(typeof data['street2'] === 'string' || data['street2'] instanceof String)) {
            throw new Error("Expected the field `street2` to be a primitive type in the JSON string but got " + data['street2']);
        }
        // ensure the json data is a string
        if (data['subusers_parent_id'] && !(typeof data['subusers_parent_id'] === 'string' || data['subusers_parent_id'] instanceof String)) {
            throw new Error("Expected the field `subusers_parent_id` to be a primitive type in the JSON string but got " + data['subusers_parent_id']);
        }
        // ensure the json data is a string
        if (data['tax_id'] && !(typeof data['tax_id'] === 'string' || data['tax_id'] instanceof String)) {
            throw new Error("Expected the field `tax_id` to be a primitive type in the JSON string but got " + data['tax_id']);
        }
        // ensure the json data is a string
        if (data['unsubscribed'] && !(typeof data['unsubscribed'] === 'string' || data['unsubscribed'] instanceof String)) {
            throw new Error("Expected the field `unsubscribed` to be a primitive type in the JSON string but got " + data['unsubscribed']);
        }
        // ensure the json data is a string
        if (data['user_agent'] && !(typeof data['user_agent'] === 'string' || data['user_agent'] instanceof String)) {
            throw new Error("Expected the field `user_agent` to be a primitive type in the JSON string but got " + data['user_agent']);
        }
        // ensure the json data is a string
        if (data['zip'] && !(typeof data['zip'] === 'string' || data['zip'] instanceof String)) {
            throw new Error("Expected the field `zip` to be a primitive type in the JSON string but got " + data['zip']);
        }

        return true;
    }


}



/**
 * @member {String} added
 */
AddUserResponse.prototype['added'] = undefined;

/**
 * @member {String} aff_added
 */
AddUserResponse.prototype['aff_added'] = undefined;

/**
 * @member {String} aff_id
 */
AddUserResponse.prototype['aff_id'] = undefined;

/**
 * @member {String} aff_payout_type
 */
AddUserResponse.prototype['aff_payout_type'] = undefined;

/**
 * @member {String} avatar
 */
AddUserResponse.prototype['avatar'] = undefined;

/**
 * @member {String} city
 */
AddUserResponse.prototype['city'] = undefined;

/**
 * @member {String} comment
 */
AddUserResponse.prototype['comment'] = undefined;

/**
 * @member {String} country
 */
AddUserResponse.prototype['country'] = undefined;

/**
 * @member {String} disable_lock_until
 */
AddUserResponse.prototype['disable_lock_until'] = undefined;

/**
 * @member {String} email
 */
AddUserResponse.prototype['email'] = undefined;

/**
 * @member {String} i_agree
 */
AddUserResponse.prototype['i_agree'] = undefined;

/**
 * @member {String} is_affiliate
 */
AddUserResponse.prototype['is_affiliate'] = undefined;

/**
 * @member {String} is_locked
 */
AddUserResponse.prototype['is_locked'] = undefined;

/**
 * @member {String} lang
 */
AddUserResponse.prototype['lang'] = undefined;

/**
 * @member {String} last_login
 */
AddUserResponse.prototype['last_login'] = undefined;

/**
 * @member {String} login
 */
AddUserResponse.prototype['login'] = undefined;

/**
 * @member {String} name_f
 */
AddUserResponse.prototype['name_f'] = undefined;

/**
 * @member {String} name_l
 */
AddUserResponse.prototype['name_l'] = undefined;

/**
 * @member {String} pass
 */
AddUserResponse.prototype['pass'] = undefined;

/**
 * @member {String} pass_dattm
 */
AddUserResponse.prototype['pass_dattm'] = undefined;

/**
 * @member {String} phone
 */
AddUserResponse.prototype['phone'] = undefined;

/**
 * @member {String} pin
 */
AddUserResponse.prototype['pin'] = undefined;

/**
 * @member {String} plain_password
 */
AddUserResponse.prototype['plain_password'] = undefined;

/**
 * @member {String} remember_key
 */
AddUserResponse.prototype['remember_key'] = undefined;

/**
 * @member {String} remote_addr
 */
AddUserResponse.prototype['remote_addr'] = undefined;

/**
 * @member {String} require_consent
 */
AddUserResponse.prototype['require_consent'] = undefined;

/**
 * @member {String} reseller_id
 */
AddUserResponse.prototype['reseller_id'] = undefined;

/**
 * @member {String} saved_form_id
 */
AddUserResponse.prototype['saved_form_id'] = undefined;

/**
 * @member {String} state
 */
AddUserResponse.prototype['state'] = undefined;

/**
 * @member {String} status
 */
AddUserResponse.prototype['status'] = undefined;

/**
 * @member {String} street
 */
AddUserResponse.prototype['street'] = undefined;

/**
 * @member {String} street2
 */
AddUserResponse.prototype['street2'] = undefined;

/**
 * @member {String} subusers_parent_id
 */
AddUserResponse.prototype['subusers_parent_id'] = undefined;

/**
 * @member {String} tax_id
 */
AddUserResponse.prototype['tax_id'] = undefined;

/**
 * @member {String} unsubscribed
 */
AddUserResponse.prototype['unsubscribed'] = undefined;

/**
 * @member {String} user_agent
 */
AddUserResponse.prototype['user_agent'] = undefined;

/**
 * @member {Number} user_id
 */
AddUserResponse.prototype['user_id'] = undefined;

/**
 * @member {String} zip
 */
AddUserResponse.prototype['zip'] = undefined;






export default AddUserResponse;

