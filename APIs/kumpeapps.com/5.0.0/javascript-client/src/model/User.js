/**
 * KumpeApps API
 * KKid API. Due to security concerns all calls to this API requires authentication. If you have access then you may use your KumpeApps username/password to authenticate. To gain access please use the contact developer link below.
 *
 * The version of the OpenAPI document: 5.0.0
 * Contact: helpdesk@kumpeapps.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The User model module.
 * @module model/User
 * @version 5.0.0
 */
class User {
    /**
     * Constructs a new <code>User</code>.
     * user
     * @alias module:model/User
     */
    constructor() { 
        
        User.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>User</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/User} obj Optional instance to populate.
     * @return {module:model/User} The populated <code>User</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new User();

            if (data.hasOwnProperty('email')) {
                obj['email'] = ApiClient.convertToType(data['email'], 'String');
            }
            if (data.hasOwnProperty('emoji')) {
                obj['emoji'] = ApiClient.convertToType(data['emoji'], 'String');
            }
            if (data.hasOwnProperty('enableAllowance')) {
                obj['enableAllowance'] = ApiClient.convertToType(data['enableAllowance'], 'Boolean');
            }
            if (data.hasOwnProperty('enableBehaviorChart')) {
                obj['enableBehaviorChart'] = ApiClient.convertToType(data['enableBehaviorChart'], 'Boolean');
            }
            if (data.hasOwnProperty('enableChores')) {
                obj['enableChores'] = ApiClient.convertToType(data['enableChores'], 'Boolean');
            }
            if (data.hasOwnProperty('enableNoAds')) {
                obj['enableNoAds'] = ApiClient.convertToType(data['enableNoAds'], 'Boolean');
            }
            if (data.hasOwnProperty('enableObjectDetection')) {
                obj['enableObjectDetection'] = ApiClient.convertToType(data['enableObjectDetection'], 'Boolean');
            }
            if (data.hasOwnProperty('enableTmdb')) {
                obj['enableTmdb'] = ApiClient.convertToType(data['enableTmdb'], 'Boolean');
            }
            if (data.hasOwnProperty('firstName')) {
                obj['firstName'] = ApiClient.convertToType(data['firstName'], 'String');
            }
            if (data.hasOwnProperty('homeId')) {
                obj['homeId'] = ApiClient.convertToType(data['homeId'], 'Number');
            }
            if (data.hasOwnProperty('isActive')) {
                obj['isActive'] = ApiClient.convertToType(data['isActive'], 'Boolean');
            }
            if (data.hasOwnProperty('isAdmin')) {
                obj['isAdmin'] = ApiClient.convertToType(data['isAdmin'], 'Boolean');
            }
            if (data.hasOwnProperty('isBanned')) {
                obj['isBanned'] = ApiClient.convertToType(data['isBanned'], 'Boolean');
            }
            if (data.hasOwnProperty('isChild')) {
                obj['isChild'] = ApiClient.convertToType(data['isChild'], 'Boolean');
            }
            if (data.hasOwnProperty('isDisabled')) {
                obj['isDisabled'] = ApiClient.convertToType(data['isDisabled'], 'Boolean');
            }
            if (data.hasOwnProperty('isLocked')) {
                obj['isLocked'] = ApiClient.convertToType(data['isLocked'], 'Boolean');
            }
            if (data.hasOwnProperty('isMaster')) {
                obj['isMaster'] = ApiClient.convertToType(data['isMaster'], 'Boolean');
            }
            if (data.hasOwnProperty('lastName')) {
                obj['lastName'] = ApiClient.convertToType(data['lastName'], 'String');
            }
            if (data.hasOwnProperty('masterId')) {
                obj['masterId'] = ApiClient.convertToType(data['masterId'], 'Number');
            }
            if (data.hasOwnProperty('pushAllowance')) {
                obj['pushAllowance'] = ApiClient.convertToType(data['pushAllowance'], 'Boolean');
            }
            if (data.hasOwnProperty('pushAllowanceNew')) {
                obj['pushAllowanceNew'] = ApiClient.convertToType(data['pushAllowanceNew'], 'Boolean');
            }
            if (data.hasOwnProperty('pushChores')) {
                obj['pushChores'] = ApiClient.convertToType(data['pushChores'], 'Boolean');
            }
            if (data.hasOwnProperty('pushChoresNew')) {
                obj['pushChoresNew'] = ApiClient.convertToType(data['pushChoresNew'], 'Boolean');
            }
            if (data.hasOwnProperty('pushChoresReminders')) {
                obj['pushChoresReminders'] = ApiClient.convertToType(data['pushChoresReminders'], 'Boolean');
            }
            if (data.hasOwnProperty('tmdbKey')) {
                obj['tmdbKey'] = ApiClient.convertToType(data['tmdbKey'], 'String');
            }
            if (data.hasOwnProperty('userId')) {
                obj['userId'] = ApiClient.convertToType(data['userId'], 'Number');
            }
            if (data.hasOwnProperty('username')) {
                obj['username'] = ApiClient.convertToType(data['username'], 'String');
            }
            if (data.hasOwnProperty('weeklyAllowance')) {
                obj['weeklyAllowance'] = ApiClient.convertToType(data['weeklyAllowance'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>User</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>User</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['email'] && !(typeof data['email'] === 'string' || data['email'] instanceof String)) {
            throw new Error("Expected the field `email` to be a primitive type in the JSON string but got " + data['email']);
        }
        // ensure the json data is a string
        if (data['emoji'] && !(typeof data['emoji'] === 'string' || data['emoji'] instanceof String)) {
            throw new Error("Expected the field `emoji` to be a primitive type in the JSON string but got " + data['emoji']);
        }
        // ensure the json data is a string
        if (data['firstName'] && !(typeof data['firstName'] === 'string' || data['firstName'] instanceof String)) {
            throw new Error("Expected the field `firstName` to be a primitive type in the JSON string but got " + data['firstName']);
        }
        // ensure the json data is a string
        if (data['lastName'] && !(typeof data['lastName'] === 'string' || data['lastName'] instanceof String)) {
            throw new Error("Expected the field `lastName` to be a primitive type in the JSON string but got " + data['lastName']);
        }
        // ensure the json data is a string
        if (data['tmdbKey'] && !(typeof data['tmdbKey'] === 'string' || data['tmdbKey'] instanceof String)) {
            throw new Error("Expected the field `tmdbKey` to be a primitive type in the JSON string but got " + data['tmdbKey']);
        }
        // ensure the json data is a string
        if (data['username'] && !(typeof data['username'] === 'string' || data['username'] instanceof String)) {
            throw new Error("Expected the field `username` to be a primitive type in the JSON string but got " + data['username']);
        }

        return true;
    }


}



/**
 * @member {String} email
 */
User.prototype['email'] = undefined;

/**
 * @member {String} emoji
 */
User.prototype['emoji'] = undefined;

/**
 * @member {Boolean} enableAllowance
 */
User.prototype['enableAllowance'] = undefined;

/**
 * @member {Boolean} enableBehaviorChart
 */
User.prototype['enableBehaviorChart'] = undefined;

/**
 * @member {Boolean} enableChores
 */
User.prototype['enableChores'] = undefined;

/**
 * @member {Boolean} enableNoAds
 */
User.prototype['enableNoAds'] = undefined;

/**
 * @member {Boolean} enableObjectDetection
 */
User.prototype['enableObjectDetection'] = undefined;

/**
 * @member {Boolean} enableTmdb
 */
User.prototype['enableTmdb'] = undefined;

/**
 * @member {String} firstName
 */
User.prototype['firstName'] = undefined;

/**
 * @member {Number} homeId
 */
User.prototype['homeId'] = undefined;

/**
 * @member {Boolean} isActive
 */
User.prototype['isActive'] = undefined;

/**
 * @member {Boolean} isAdmin
 */
User.prototype['isAdmin'] = undefined;

/**
 * @member {Boolean} isBanned
 */
User.prototype['isBanned'] = undefined;

/**
 * @member {Boolean} isChild
 */
User.prototype['isChild'] = undefined;

/**
 * @member {Boolean} isDisabled
 */
User.prototype['isDisabled'] = undefined;

/**
 * @member {Boolean} isLocked
 */
User.prototype['isLocked'] = undefined;

/**
 * @member {Boolean} isMaster
 */
User.prototype['isMaster'] = undefined;

/**
 * @member {String} lastName
 */
User.prototype['lastName'] = undefined;

/**
 * @member {Number} masterId
 */
User.prototype['masterId'] = undefined;

/**
 * @member {Boolean} pushAllowance
 */
User.prototype['pushAllowance'] = undefined;

/**
 * @member {Boolean} pushAllowanceNew
 */
User.prototype['pushAllowanceNew'] = undefined;

/**
 * @member {Boolean} pushChores
 */
User.prototype['pushChores'] = undefined;

/**
 * @member {Boolean} pushChoresNew
 */
User.prototype['pushChoresNew'] = undefined;

/**
 * @member {Boolean} pushChoresReminders
 */
User.prototype['pushChoresReminders'] = undefined;

/**
 * @member {String} tmdbKey
 */
User.prototype['tmdbKey'] = undefined;

/**
 * @member {Number} userId
 */
User.prototype['userId'] = undefined;

/**
 * @member {String} username
 */
User.prototype['username'] = undefined;

/**
 * @member {Number} weeklyAllowance
 */
User.prototype['weeklyAllowance'] = undefined;






export default User;

