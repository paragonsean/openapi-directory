/*
 * KumpeApps API
 * KKid API. Due to security concerns all calls to this API requires authentication. If you have access then you may use your KumpeApps username/password to authenticate. To gain access please use the contact developer link below.
 *
 * The version of the OpenAPI document: 5.0.0
 * Contact: helpdesk@kumpeapps.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.InlineResponse201;
import org.openapitools.client.model.InlineResponse2011;
import org.openapitools.client.model.InlineResponse202;
import org.openapitools.client.model.Model403;
import org.openapitools.client.model.Model449;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AuthenticationApi
 */
@Disabled
public class AuthenticationApiTest {

    private final AuthenticationApi api = new AuthenticationApi();

    /**
     * Compromise app key
     *
     * Pass an app key to mark it as compromised. This may be submitted by the app owner or a concerned party that has optained the compromised app key.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void appkeyPatchTest() throws ApiException {
        String appKey = null;
        String comments = null;
        InlineResponse202 response = api.appkeyPatch(appKey, comments);
        // TODO: test validations
    }

    /**
     * Request app key
     *
     * Request a new app key by passing username and password for app account
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void appkeyPostTest() throws ApiException {
        String username = null;
        String password = null;
        Boolean supportsYubikey = null;
        InlineResponse201 response = api.appkeyPost(username, password, supportsYubikey);
        // TODO: test validations
    }

    /**
     * Deactivate app key
     *
     * Pass your app key to deactivate the key
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void appkeyPutTest() throws ApiException {
        String appKey = null;
        InlineResponse202 response = api.appkeyPut(appKey);
        // TODO: test validations
    }

    /**
     * Compromise app key
     *
     * Pass an app key to mark it as compromised. This may be submitted by the app owner or a concerned party that has optained the compromised app key.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void authAppkeyPatchTest() throws ApiException {
        String appKey = null;
        String comments = null;
        InlineResponse202 response = api.authAppkeyPatch(appKey, comments);
        // TODO: test validations
    }

    /**
     * Request app key
     *
     * Request a new app key by passing username and password for app account
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void authAppkeyPostTest() throws ApiException {
        String username = null;
        String password = null;
        Boolean supportsYubikey = null;
        InlineResponse201 response = api.authAppkeyPost(username, password, supportsYubikey);
        // TODO: test validations
    }

    /**
     * Deactivate app key
     *
     * Pass your app key to deactivate the key
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void authAppkeyPutTest() throws ApiException {
        String appKey = null;
        InlineResponse202 response = api.authAppkeyPut(appKey);
        // TODO: test validations
    }

    /**
     * Request auth key for user (login user)
     *
     * Obtain auth key for user that has provided their username and password to login to your app. (or to obtain an auth key for a script like IFTTT)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void authAuthkeyGetTest() throws ApiException {
        String username = null;
        String password = null;
        String otp = null;
        String deviceName = null;
        String identifierForVendor = null;
        InlineResponse2011 response = api.authAuthkeyGet(username, password, otp, deviceName, identifierForVendor);
        // TODO: test validations
    }

    /**
     * Compromise auth key
     *
     * Mark user auth key as compromised
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void authAuthkeyPatchTest() throws ApiException {
        String authKey = null;
        String comments = null;
        InlineResponse202 response = api.authAuthkeyPatch(authKey, comments);
        // TODO: test validations
    }

    /**
     * Request auth key for user (login user)
     *
     * Obtain auth key for user that has provided their username and password to login to your app. (or to obtain an auth key for a script like IFTTT)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void authAuthkeyPostTest() throws ApiException {
        String username = null;
        String password = null;
        String otp = null;
        InlineResponse2011 response = api.authAuthkeyPost(username, password, otp);
        // TODO: test validations
    }

    /**
     * Deactivate auth key (logout)
     *
     * Deactivate auth key for user logging them out of your application
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void authAuthkeyPutTest() throws ApiException {
        String authKey = null;
        InlineResponse202 response = api.authAuthkeyPut(authKey);
        // TODO: test validations
    }

    /**
     * Verifies YubiKey OTP for authenticated user
     *
     * Verifies YubiKey OTP for authenticated user
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void authVerifyotpGetTest() throws ApiException {
        String otp = null;
        api.authVerifyotpGet(otp);
        // TODO: test validations
    }

    /**
     * Request auth key for user (login user)
     *
     * Obtain auth key for user that has provided their username and password to login to your app. (or to obtain an auth key for a script like IFTTT)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void authkeyGetTest() throws ApiException {
        String username = null;
        String password = null;
        String otp = null;
        InlineResponse2011 response = api.authkeyGet(username, password, otp);
        // TODO: test validations
    }

    /**
     * Compromise auth key
     *
     * Mark user auth key as compromised
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void authkeyPatchTest() throws ApiException {
        String authKey = null;
        String comments = null;
        InlineResponse202 response = api.authkeyPatch(authKey, comments);
        // TODO: test validations
    }

    /**
     * Request auth key for user (login user)
     *
     * Obtain auth key for user that has provided their username and password to login to your app. (or to obtain an auth key for a script like IFTTT)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void authkeyPostTest() throws ApiException {
        String username = null;
        String password = null;
        String otp = null;
        InlineResponse2011 response = api.authkeyPost(username, password, otp);
        // TODO: test validations
    }

    /**
     * Deactivate auth key (logout)
     *
     * Deactivate auth key for user logging them out of your application
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void authkeyPutTest() throws ApiException {
        String authKey = null;
        InlineResponse202 response = api.authkeyPut(authKey);
        // TODO: test validations
    }

}
