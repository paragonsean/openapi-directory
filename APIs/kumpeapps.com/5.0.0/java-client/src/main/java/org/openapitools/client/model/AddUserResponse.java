/*
 * KumpeApps API
 * KKid API. Due to security concerns all calls to this API requires authentication. If you have access then you may use your KumpeApps username/password to authenticate. To gain access please use the contact developer link below.
 *
 * The version of the OpenAPI document: 5.0.0
 * Contact: helpdesk@kumpeapps.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * add user
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T09:58:42.665983-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AddUserResponse {
  public static final String SERIALIZED_NAME_ADDED = "added";
  @SerializedName(SERIALIZED_NAME_ADDED)
  private String added;

  public static final String SERIALIZED_NAME_AFF_ADDED = "aff_added";
  @SerializedName(SERIALIZED_NAME_AFF_ADDED)
  private String affAdded;

  public static final String SERIALIZED_NAME_AFF_ID = "aff_id";
  @SerializedName(SERIALIZED_NAME_AFF_ID)
  private String affId;

  public static final String SERIALIZED_NAME_AFF_PAYOUT_TYPE = "aff_payout_type";
  @SerializedName(SERIALIZED_NAME_AFF_PAYOUT_TYPE)
  private String affPayoutType;

  public static final String SERIALIZED_NAME_AVATAR = "avatar";
  @SerializedName(SERIALIZED_NAME_AVATAR)
  private String avatar;

  public static final String SERIALIZED_NAME_CITY = "city";
  @SerializedName(SERIALIZED_NAME_CITY)
  private String city;

  public static final String SERIALIZED_NAME_COMMENT = "comment";
  @SerializedName(SERIALIZED_NAME_COMMENT)
  private String comment;

  public static final String SERIALIZED_NAME_COUNTRY = "country";
  @SerializedName(SERIALIZED_NAME_COUNTRY)
  private String country;

  public static final String SERIALIZED_NAME_DISABLE_LOCK_UNTIL = "disable_lock_until";
  @SerializedName(SERIALIZED_NAME_DISABLE_LOCK_UNTIL)
  private String disableLockUntil;

  public static final String SERIALIZED_NAME_EMAIL = "email";
  @SerializedName(SERIALIZED_NAME_EMAIL)
  private String email;

  public static final String SERIALIZED_NAME_I_AGREE = "i_agree";
  @SerializedName(SERIALIZED_NAME_I_AGREE)
  private String iAgree;

  public static final String SERIALIZED_NAME_IS_AFFILIATE = "is_affiliate";
  @SerializedName(SERIALIZED_NAME_IS_AFFILIATE)
  private String isAffiliate;

  public static final String SERIALIZED_NAME_IS_LOCKED = "is_locked";
  @SerializedName(SERIALIZED_NAME_IS_LOCKED)
  private String isLocked;

  public static final String SERIALIZED_NAME_LANG = "lang";
  @SerializedName(SERIALIZED_NAME_LANG)
  private String lang;

  public static final String SERIALIZED_NAME_LAST_LOGIN = "last_login";
  @SerializedName(SERIALIZED_NAME_LAST_LOGIN)
  private String lastLogin;

  public static final String SERIALIZED_NAME_LOGIN = "login";
  @SerializedName(SERIALIZED_NAME_LOGIN)
  private String login;

  public static final String SERIALIZED_NAME_NAME_F = "name_f";
  @SerializedName(SERIALIZED_NAME_NAME_F)
  private String nameF;

  public static final String SERIALIZED_NAME_NAME_L = "name_l";
  @SerializedName(SERIALIZED_NAME_NAME_L)
  private String nameL;

  public static final String SERIALIZED_NAME_PASS = "pass";
  @SerializedName(SERIALIZED_NAME_PASS)
  private String pass;

  public static final String SERIALIZED_NAME_PASS_DATTM = "pass_dattm";
  @SerializedName(SERIALIZED_NAME_PASS_DATTM)
  private String passDattm;

  public static final String SERIALIZED_NAME_PHONE = "phone";
  @SerializedName(SERIALIZED_NAME_PHONE)
  private String phone;

  public static final String SERIALIZED_NAME_PIN = "pin";
  @SerializedName(SERIALIZED_NAME_PIN)
  private String pin;

  public static final String SERIALIZED_NAME_PLAIN_PASSWORD = "plain_password";
  @SerializedName(SERIALIZED_NAME_PLAIN_PASSWORD)
  private String plainPassword;

  public static final String SERIALIZED_NAME_REMEMBER_KEY = "remember_key";
  @SerializedName(SERIALIZED_NAME_REMEMBER_KEY)
  private String rememberKey;

  public static final String SERIALIZED_NAME_REMOTE_ADDR = "remote_addr";
  @SerializedName(SERIALIZED_NAME_REMOTE_ADDR)
  private String remoteAddr;

  public static final String SERIALIZED_NAME_REQUIRE_CONSENT = "require_consent";
  @SerializedName(SERIALIZED_NAME_REQUIRE_CONSENT)
  private String requireConsent;

  public static final String SERIALIZED_NAME_RESELLER_ID = "reseller_id";
  @SerializedName(SERIALIZED_NAME_RESELLER_ID)
  private String resellerId;

  public static final String SERIALIZED_NAME_SAVED_FORM_ID = "saved_form_id";
  @SerializedName(SERIALIZED_NAME_SAVED_FORM_ID)
  private String savedFormId;

  public static final String SERIALIZED_NAME_STATE = "state";
  @SerializedName(SERIALIZED_NAME_STATE)
  private String state;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_STREET = "street";
  @SerializedName(SERIALIZED_NAME_STREET)
  private String street;

  public static final String SERIALIZED_NAME_STREET2 = "street2";
  @SerializedName(SERIALIZED_NAME_STREET2)
  private String street2;

  public static final String SERIALIZED_NAME_SUBUSERS_PARENT_ID = "subusers_parent_id";
  @SerializedName(SERIALIZED_NAME_SUBUSERS_PARENT_ID)
  private String subusersParentId;

  public static final String SERIALIZED_NAME_TAX_ID = "tax_id";
  @SerializedName(SERIALIZED_NAME_TAX_ID)
  private String taxId;

  public static final String SERIALIZED_NAME_UNSUBSCRIBED = "unsubscribed";
  @SerializedName(SERIALIZED_NAME_UNSUBSCRIBED)
  private String unsubscribed;

  public static final String SERIALIZED_NAME_USER_AGENT = "user_agent";
  @SerializedName(SERIALIZED_NAME_USER_AGENT)
  private String userAgent;

  public static final String SERIALIZED_NAME_USER_ID = "user_id";
  @SerializedName(SERIALIZED_NAME_USER_ID)
  private Integer userId;

  public static final String SERIALIZED_NAME_ZIP = "zip";
  @SerializedName(SERIALIZED_NAME_ZIP)
  private String zip;

  public AddUserResponse() {
  }

  public AddUserResponse added(String added) {
    this.added = added;
    return this;
  }

  /**
   * Get added
   * @return added
   */
  @javax.annotation.Nullable
  public String getAdded() {
    return added;
  }

  public void setAdded(String added) {
    this.added = added;
  }


  public AddUserResponse affAdded(String affAdded) {
    this.affAdded = affAdded;
    return this;
  }

  /**
   * Get affAdded
   * @return affAdded
   */
  @javax.annotation.Nullable
  public String getAffAdded() {
    return affAdded;
  }

  public void setAffAdded(String affAdded) {
    this.affAdded = affAdded;
  }


  public AddUserResponse affId(String affId) {
    this.affId = affId;
    return this;
  }

  /**
   * Get affId
   * @return affId
   */
  @javax.annotation.Nullable
  public String getAffId() {
    return affId;
  }

  public void setAffId(String affId) {
    this.affId = affId;
  }


  public AddUserResponse affPayoutType(String affPayoutType) {
    this.affPayoutType = affPayoutType;
    return this;
  }

  /**
   * Get affPayoutType
   * @return affPayoutType
   */
  @javax.annotation.Nullable
  public String getAffPayoutType() {
    return affPayoutType;
  }

  public void setAffPayoutType(String affPayoutType) {
    this.affPayoutType = affPayoutType;
  }


  public AddUserResponse avatar(String avatar) {
    this.avatar = avatar;
    return this;
  }

  /**
   * Get avatar
   * @return avatar
   */
  @javax.annotation.Nullable
  public String getAvatar() {
    return avatar;
  }

  public void setAvatar(String avatar) {
    this.avatar = avatar;
  }


  public AddUserResponse city(String city) {
    this.city = city;
    return this;
  }

  /**
   * Get city
   * @return city
   */
  @javax.annotation.Nullable
  public String getCity() {
    return city;
  }

  public void setCity(String city) {
    this.city = city;
  }


  public AddUserResponse comment(String comment) {
    this.comment = comment;
    return this;
  }

  /**
   * Get comment
   * @return comment
   */
  @javax.annotation.Nullable
  public String getComment() {
    return comment;
  }

  public void setComment(String comment) {
    this.comment = comment;
  }


  public AddUserResponse country(String country) {
    this.country = country;
    return this;
  }

  /**
   * Get country
   * @return country
   */
  @javax.annotation.Nullable
  public String getCountry() {
    return country;
  }

  public void setCountry(String country) {
    this.country = country;
  }


  public AddUserResponse disableLockUntil(String disableLockUntil) {
    this.disableLockUntil = disableLockUntil;
    return this;
  }

  /**
   * Get disableLockUntil
   * @return disableLockUntil
   */
  @javax.annotation.Nullable
  public String getDisableLockUntil() {
    return disableLockUntil;
  }

  public void setDisableLockUntil(String disableLockUntil) {
    this.disableLockUntil = disableLockUntil;
  }


  public AddUserResponse email(String email) {
    this.email = email;
    return this;
  }

  /**
   * Get email
   * @return email
   */
  @javax.annotation.Nullable
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }


  public AddUserResponse iAgree(String iAgree) {
    this.iAgree = iAgree;
    return this;
  }

  /**
   * Get iAgree
   * @return iAgree
   */
  @javax.annotation.Nullable
  public String getiAgree() {
    return iAgree;
  }

  public void setiAgree(String iAgree) {
    this.iAgree = iAgree;
  }


  public AddUserResponse isAffiliate(String isAffiliate) {
    this.isAffiliate = isAffiliate;
    return this;
  }

  /**
   * Get isAffiliate
   * @return isAffiliate
   */
  @javax.annotation.Nullable
  public String getIsAffiliate() {
    return isAffiliate;
  }

  public void setIsAffiliate(String isAffiliate) {
    this.isAffiliate = isAffiliate;
  }


  public AddUserResponse isLocked(String isLocked) {
    this.isLocked = isLocked;
    return this;
  }

  /**
   * Get isLocked
   * @return isLocked
   */
  @javax.annotation.Nullable
  public String getIsLocked() {
    return isLocked;
  }

  public void setIsLocked(String isLocked) {
    this.isLocked = isLocked;
  }


  public AddUserResponse lang(String lang) {
    this.lang = lang;
    return this;
  }

  /**
   * Get lang
   * @return lang
   */
  @javax.annotation.Nullable
  public String getLang() {
    return lang;
  }

  public void setLang(String lang) {
    this.lang = lang;
  }


  public AddUserResponse lastLogin(String lastLogin) {
    this.lastLogin = lastLogin;
    return this;
  }

  /**
   * Get lastLogin
   * @return lastLogin
   */
  @javax.annotation.Nullable
  public String getLastLogin() {
    return lastLogin;
  }

  public void setLastLogin(String lastLogin) {
    this.lastLogin = lastLogin;
  }


  public AddUserResponse login(String login) {
    this.login = login;
    return this;
  }

  /**
   * Get login
   * @return login
   */
  @javax.annotation.Nullable
  public String getLogin() {
    return login;
  }

  public void setLogin(String login) {
    this.login = login;
  }


  public AddUserResponse nameF(String nameF) {
    this.nameF = nameF;
    return this;
  }

  /**
   * Get nameF
   * @return nameF
   */
  @javax.annotation.Nullable
  public String getNameF() {
    return nameF;
  }

  public void setNameF(String nameF) {
    this.nameF = nameF;
  }


  public AddUserResponse nameL(String nameL) {
    this.nameL = nameL;
    return this;
  }

  /**
   * Get nameL
   * @return nameL
   */
  @javax.annotation.Nullable
  public String getNameL() {
    return nameL;
  }

  public void setNameL(String nameL) {
    this.nameL = nameL;
  }


  public AddUserResponse pass(String pass) {
    this.pass = pass;
    return this;
  }

  /**
   * Get pass
   * @return pass
   */
  @javax.annotation.Nullable
  public String getPass() {
    return pass;
  }

  public void setPass(String pass) {
    this.pass = pass;
  }


  public AddUserResponse passDattm(String passDattm) {
    this.passDattm = passDattm;
    return this;
  }

  /**
   * Get passDattm
   * @return passDattm
   */
  @javax.annotation.Nullable
  public String getPassDattm() {
    return passDattm;
  }

  public void setPassDattm(String passDattm) {
    this.passDattm = passDattm;
  }


  public AddUserResponse phone(String phone) {
    this.phone = phone;
    return this;
  }

  /**
   * Get phone
   * @return phone
   */
  @javax.annotation.Nullable
  public String getPhone() {
    return phone;
  }

  public void setPhone(String phone) {
    this.phone = phone;
  }


  public AddUserResponse pin(String pin) {
    this.pin = pin;
    return this;
  }

  /**
   * Get pin
   * @return pin
   */
  @javax.annotation.Nullable
  public String getPin() {
    return pin;
  }

  public void setPin(String pin) {
    this.pin = pin;
  }


  public AddUserResponse plainPassword(String plainPassword) {
    this.plainPassword = plainPassword;
    return this;
  }

  /**
   * Get plainPassword
   * @return plainPassword
   */
  @javax.annotation.Nullable
  public String getPlainPassword() {
    return plainPassword;
  }

  public void setPlainPassword(String plainPassword) {
    this.plainPassword = plainPassword;
  }


  public AddUserResponse rememberKey(String rememberKey) {
    this.rememberKey = rememberKey;
    return this;
  }

  /**
   * Get rememberKey
   * @return rememberKey
   */
  @javax.annotation.Nullable
  public String getRememberKey() {
    return rememberKey;
  }

  public void setRememberKey(String rememberKey) {
    this.rememberKey = rememberKey;
  }


  public AddUserResponse remoteAddr(String remoteAddr) {
    this.remoteAddr = remoteAddr;
    return this;
  }

  /**
   * Get remoteAddr
   * @return remoteAddr
   */
  @javax.annotation.Nullable
  public String getRemoteAddr() {
    return remoteAddr;
  }

  public void setRemoteAddr(String remoteAddr) {
    this.remoteAddr = remoteAddr;
  }


  public AddUserResponse requireConsent(String requireConsent) {
    this.requireConsent = requireConsent;
    return this;
  }

  /**
   * Get requireConsent
   * @return requireConsent
   */
  @javax.annotation.Nullable
  public String getRequireConsent() {
    return requireConsent;
  }

  public void setRequireConsent(String requireConsent) {
    this.requireConsent = requireConsent;
  }


  public AddUserResponse resellerId(String resellerId) {
    this.resellerId = resellerId;
    return this;
  }

  /**
   * Get resellerId
   * @return resellerId
   */
  @javax.annotation.Nullable
  public String getResellerId() {
    return resellerId;
  }

  public void setResellerId(String resellerId) {
    this.resellerId = resellerId;
  }


  public AddUserResponse savedFormId(String savedFormId) {
    this.savedFormId = savedFormId;
    return this;
  }

  /**
   * Get savedFormId
   * @return savedFormId
   */
  @javax.annotation.Nullable
  public String getSavedFormId() {
    return savedFormId;
  }

  public void setSavedFormId(String savedFormId) {
    this.savedFormId = savedFormId;
  }


  public AddUserResponse state(String state) {
    this.state = state;
    return this;
  }

  /**
   * Get state
   * @return state
   */
  @javax.annotation.Nullable
  public String getState() {
    return state;
  }

  public void setState(String state) {
    this.state = state;
  }


  public AddUserResponse status(String status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }


  public AddUserResponse street(String street) {
    this.street = street;
    return this;
  }

  /**
   * Get street
   * @return street
   */
  @javax.annotation.Nullable
  public String getStreet() {
    return street;
  }

  public void setStreet(String street) {
    this.street = street;
  }


  public AddUserResponse street2(String street2) {
    this.street2 = street2;
    return this;
  }

  /**
   * Get street2
   * @return street2
   */
  @javax.annotation.Nullable
  public String getStreet2() {
    return street2;
  }

  public void setStreet2(String street2) {
    this.street2 = street2;
  }


  public AddUserResponse subusersParentId(String subusersParentId) {
    this.subusersParentId = subusersParentId;
    return this;
  }

  /**
   * Get subusersParentId
   * @return subusersParentId
   */
  @javax.annotation.Nullable
  public String getSubusersParentId() {
    return subusersParentId;
  }

  public void setSubusersParentId(String subusersParentId) {
    this.subusersParentId = subusersParentId;
  }


  public AddUserResponse taxId(String taxId) {
    this.taxId = taxId;
    return this;
  }

  /**
   * Get taxId
   * @return taxId
   */
  @javax.annotation.Nullable
  public String getTaxId() {
    return taxId;
  }

  public void setTaxId(String taxId) {
    this.taxId = taxId;
  }


  public AddUserResponse unsubscribed(String unsubscribed) {
    this.unsubscribed = unsubscribed;
    return this;
  }

  /**
   * Get unsubscribed
   * @return unsubscribed
   */
  @javax.annotation.Nullable
  public String getUnsubscribed() {
    return unsubscribed;
  }

  public void setUnsubscribed(String unsubscribed) {
    this.unsubscribed = unsubscribed;
  }


  public AddUserResponse userAgent(String userAgent) {
    this.userAgent = userAgent;
    return this;
  }

  /**
   * Get userAgent
   * @return userAgent
   */
  @javax.annotation.Nullable
  public String getUserAgent() {
    return userAgent;
  }

  public void setUserAgent(String userAgent) {
    this.userAgent = userAgent;
  }


  public AddUserResponse userId(Integer userId) {
    this.userId = userId;
    return this;
  }

  /**
   * Get userId
   * @return userId
   */
  @javax.annotation.Nullable
  public Integer getUserId() {
    return userId;
  }

  public void setUserId(Integer userId) {
    this.userId = userId;
  }


  public AddUserResponse zip(String zip) {
    this.zip = zip;
    return this;
  }

  /**
   * Get zip
   * @return zip
   */
  @javax.annotation.Nullable
  public String getZip() {
    return zip;
  }

  public void setZip(String zip) {
    this.zip = zip;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AddUserResponse addUserResponse = (AddUserResponse) o;
    return Objects.equals(this.added, addUserResponse.added) &&
        Objects.equals(this.affAdded, addUserResponse.affAdded) &&
        Objects.equals(this.affId, addUserResponse.affId) &&
        Objects.equals(this.affPayoutType, addUserResponse.affPayoutType) &&
        Objects.equals(this.avatar, addUserResponse.avatar) &&
        Objects.equals(this.city, addUserResponse.city) &&
        Objects.equals(this.comment, addUserResponse.comment) &&
        Objects.equals(this.country, addUserResponse.country) &&
        Objects.equals(this.disableLockUntil, addUserResponse.disableLockUntil) &&
        Objects.equals(this.email, addUserResponse.email) &&
        Objects.equals(this.iAgree, addUserResponse.iAgree) &&
        Objects.equals(this.isAffiliate, addUserResponse.isAffiliate) &&
        Objects.equals(this.isLocked, addUserResponse.isLocked) &&
        Objects.equals(this.lang, addUserResponse.lang) &&
        Objects.equals(this.lastLogin, addUserResponse.lastLogin) &&
        Objects.equals(this.login, addUserResponse.login) &&
        Objects.equals(this.nameF, addUserResponse.nameF) &&
        Objects.equals(this.nameL, addUserResponse.nameL) &&
        Objects.equals(this.pass, addUserResponse.pass) &&
        Objects.equals(this.passDattm, addUserResponse.passDattm) &&
        Objects.equals(this.phone, addUserResponse.phone) &&
        Objects.equals(this.pin, addUserResponse.pin) &&
        Objects.equals(this.plainPassword, addUserResponse.plainPassword) &&
        Objects.equals(this.rememberKey, addUserResponse.rememberKey) &&
        Objects.equals(this.remoteAddr, addUserResponse.remoteAddr) &&
        Objects.equals(this.requireConsent, addUserResponse.requireConsent) &&
        Objects.equals(this.resellerId, addUserResponse.resellerId) &&
        Objects.equals(this.savedFormId, addUserResponse.savedFormId) &&
        Objects.equals(this.state, addUserResponse.state) &&
        Objects.equals(this.status, addUserResponse.status) &&
        Objects.equals(this.street, addUserResponse.street) &&
        Objects.equals(this.street2, addUserResponse.street2) &&
        Objects.equals(this.subusersParentId, addUserResponse.subusersParentId) &&
        Objects.equals(this.taxId, addUserResponse.taxId) &&
        Objects.equals(this.unsubscribed, addUserResponse.unsubscribed) &&
        Objects.equals(this.userAgent, addUserResponse.userAgent) &&
        Objects.equals(this.userId, addUserResponse.userId) &&
        Objects.equals(this.zip, addUserResponse.zip);
  }

  @Override
  public int hashCode() {
    return Objects.hash(added, affAdded, affId, affPayoutType, avatar, city, comment, country, disableLockUntil, email, iAgree, isAffiliate, isLocked, lang, lastLogin, login, nameF, nameL, pass, passDattm, phone, pin, plainPassword, rememberKey, remoteAddr, requireConsent, resellerId, savedFormId, state, status, street, street2, subusersParentId, taxId, unsubscribed, userAgent, userId, zip);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AddUserResponse {\n");
    sb.append("    added: ").append(toIndentedString(added)).append("\n");
    sb.append("    affAdded: ").append(toIndentedString(affAdded)).append("\n");
    sb.append("    affId: ").append(toIndentedString(affId)).append("\n");
    sb.append("    affPayoutType: ").append(toIndentedString(affPayoutType)).append("\n");
    sb.append("    avatar: ").append(toIndentedString(avatar)).append("\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    comment: ").append(toIndentedString(comment)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    disableLockUntil: ").append(toIndentedString(disableLockUntil)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    iAgree: ").append(toIndentedString(iAgree)).append("\n");
    sb.append("    isAffiliate: ").append(toIndentedString(isAffiliate)).append("\n");
    sb.append("    isLocked: ").append(toIndentedString(isLocked)).append("\n");
    sb.append("    lang: ").append(toIndentedString(lang)).append("\n");
    sb.append("    lastLogin: ").append(toIndentedString(lastLogin)).append("\n");
    sb.append("    login: ").append(toIndentedString(login)).append("\n");
    sb.append("    nameF: ").append(toIndentedString(nameF)).append("\n");
    sb.append("    nameL: ").append(toIndentedString(nameL)).append("\n");
    sb.append("    pass: ").append(toIndentedString(pass)).append("\n");
    sb.append("    passDattm: ").append(toIndentedString(passDattm)).append("\n");
    sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
    sb.append("    pin: ").append(toIndentedString(pin)).append("\n");
    sb.append("    plainPassword: ").append(toIndentedString(plainPassword)).append("\n");
    sb.append("    rememberKey: ").append(toIndentedString(rememberKey)).append("\n");
    sb.append("    remoteAddr: ").append(toIndentedString(remoteAddr)).append("\n");
    sb.append("    requireConsent: ").append(toIndentedString(requireConsent)).append("\n");
    sb.append("    resellerId: ").append(toIndentedString(resellerId)).append("\n");
    sb.append("    savedFormId: ").append(toIndentedString(savedFormId)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    street: ").append(toIndentedString(street)).append("\n");
    sb.append("    street2: ").append(toIndentedString(street2)).append("\n");
    sb.append("    subusersParentId: ").append(toIndentedString(subusersParentId)).append("\n");
    sb.append("    taxId: ").append(toIndentedString(taxId)).append("\n");
    sb.append("    unsubscribed: ").append(toIndentedString(unsubscribed)).append("\n");
    sb.append("    userAgent: ").append(toIndentedString(userAgent)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    zip: ").append(toIndentedString(zip)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("added");
    openapiFields.add("aff_added");
    openapiFields.add("aff_id");
    openapiFields.add("aff_payout_type");
    openapiFields.add("avatar");
    openapiFields.add("city");
    openapiFields.add("comment");
    openapiFields.add("country");
    openapiFields.add("disable_lock_until");
    openapiFields.add("email");
    openapiFields.add("i_agree");
    openapiFields.add("is_affiliate");
    openapiFields.add("is_locked");
    openapiFields.add("lang");
    openapiFields.add("last_login");
    openapiFields.add("login");
    openapiFields.add("name_f");
    openapiFields.add("name_l");
    openapiFields.add("pass");
    openapiFields.add("pass_dattm");
    openapiFields.add("phone");
    openapiFields.add("pin");
    openapiFields.add("plain_password");
    openapiFields.add("remember_key");
    openapiFields.add("remote_addr");
    openapiFields.add("require_consent");
    openapiFields.add("reseller_id");
    openapiFields.add("saved_form_id");
    openapiFields.add("state");
    openapiFields.add("status");
    openapiFields.add("street");
    openapiFields.add("street2");
    openapiFields.add("subusers_parent_id");
    openapiFields.add("tax_id");
    openapiFields.add("unsubscribed");
    openapiFields.add("user_agent");
    openapiFields.add("user_id");
    openapiFields.add("zip");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AddUserResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AddUserResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AddUserResponse is not found in the empty JSON string", AddUserResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AddUserResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AddUserResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("added") != null && !jsonObj.get("added").isJsonNull()) && !jsonObj.get("added").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `added` to be a primitive type in the JSON string but got `%s`", jsonObj.get("added").toString()));
      }
      if ((jsonObj.get("aff_added") != null && !jsonObj.get("aff_added").isJsonNull()) && !jsonObj.get("aff_added").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `aff_added` to be a primitive type in the JSON string but got `%s`", jsonObj.get("aff_added").toString()));
      }
      if ((jsonObj.get("aff_id") != null && !jsonObj.get("aff_id").isJsonNull()) && !jsonObj.get("aff_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `aff_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("aff_id").toString()));
      }
      if ((jsonObj.get("aff_payout_type") != null && !jsonObj.get("aff_payout_type").isJsonNull()) && !jsonObj.get("aff_payout_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `aff_payout_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("aff_payout_type").toString()));
      }
      if ((jsonObj.get("avatar") != null && !jsonObj.get("avatar").isJsonNull()) && !jsonObj.get("avatar").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `avatar` to be a primitive type in the JSON string but got `%s`", jsonObj.get("avatar").toString()));
      }
      if ((jsonObj.get("city") != null && !jsonObj.get("city").isJsonNull()) && !jsonObj.get("city").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `city` to be a primitive type in the JSON string but got `%s`", jsonObj.get("city").toString()));
      }
      if ((jsonObj.get("comment") != null && !jsonObj.get("comment").isJsonNull()) && !jsonObj.get("comment").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `comment` to be a primitive type in the JSON string but got `%s`", jsonObj.get("comment").toString()));
      }
      if ((jsonObj.get("country") != null && !jsonObj.get("country").isJsonNull()) && !jsonObj.get("country").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `country` to be a primitive type in the JSON string but got `%s`", jsonObj.get("country").toString()));
      }
      if ((jsonObj.get("disable_lock_until") != null && !jsonObj.get("disable_lock_until").isJsonNull()) && !jsonObj.get("disable_lock_until").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `disable_lock_until` to be a primitive type in the JSON string but got `%s`", jsonObj.get("disable_lock_until").toString()));
      }
      if ((jsonObj.get("email") != null && !jsonObj.get("email").isJsonNull()) && !jsonObj.get("email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("email").toString()));
      }
      if ((jsonObj.get("i_agree") != null && !jsonObj.get("i_agree").isJsonNull()) && !jsonObj.get("i_agree").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `i_agree` to be a primitive type in the JSON string but got `%s`", jsonObj.get("i_agree").toString()));
      }
      if ((jsonObj.get("is_affiliate") != null && !jsonObj.get("is_affiliate").isJsonNull()) && !jsonObj.get("is_affiliate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `is_affiliate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("is_affiliate").toString()));
      }
      if ((jsonObj.get("is_locked") != null && !jsonObj.get("is_locked").isJsonNull()) && !jsonObj.get("is_locked").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `is_locked` to be a primitive type in the JSON string but got `%s`", jsonObj.get("is_locked").toString()));
      }
      if ((jsonObj.get("lang") != null && !jsonObj.get("lang").isJsonNull()) && !jsonObj.get("lang").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lang` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lang").toString()));
      }
      if ((jsonObj.get("last_login") != null && !jsonObj.get("last_login").isJsonNull()) && !jsonObj.get("last_login").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `last_login` to be a primitive type in the JSON string but got `%s`", jsonObj.get("last_login").toString()));
      }
      if ((jsonObj.get("login") != null && !jsonObj.get("login").isJsonNull()) && !jsonObj.get("login").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `login` to be a primitive type in the JSON string but got `%s`", jsonObj.get("login").toString()));
      }
      if ((jsonObj.get("name_f") != null && !jsonObj.get("name_f").isJsonNull()) && !jsonObj.get("name_f").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name_f` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name_f").toString()));
      }
      if ((jsonObj.get("name_l") != null && !jsonObj.get("name_l").isJsonNull()) && !jsonObj.get("name_l").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name_l` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name_l").toString()));
      }
      if ((jsonObj.get("pass") != null && !jsonObj.get("pass").isJsonNull()) && !jsonObj.get("pass").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pass` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pass").toString()));
      }
      if ((jsonObj.get("pass_dattm") != null && !jsonObj.get("pass_dattm").isJsonNull()) && !jsonObj.get("pass_dattm").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pass_dattm` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pass_dattm").toString()));
      }
      if ((jsonObj.get("phone") != null && !jsonObj.get("phone").isJsonNull()) && !jsonObj.get("phone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `phone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("phone").toString()));
      }
      if ((jsonObj.get("pin") != null && !jsonObj.get("pin").isJsonNull()) && !jsonObj.get("pin").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pin` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pin").toString()));
      }
      if ((jsonObj.get("plain_password") != null && !jsonObj.get("plain_password").isJsonNull()) && !jsonObj.get("plain_password").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `plain_password` to be a primitive type in the JSON string but got `%s`", jsonObj.get("plain_password").toString()));
      }
      if ((jsonObj.get("remember_key") != null && !jsonObj.get("remember_key").isJsonNull()) && !jsonObj.get("remember_key").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `remember_key` to be a primitive type in the JSON string but got `%s`", jsonObj.get("remember_key").toString()));
      }
      if ((jsonObj.get("remote_addr") != null && !jsonObj.get("remote_addr").isJsonNull()) && !jsonObj.get("remote_addr").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `remote_addr` to be a primitive type in the JSON string but got `%s`", jsonObj.get("remote_addr").toString()));
      }
      if ((jsonObj.get("require_consent") != null && !jsonObj.get("require_consent").isJsonNull()) && !jsonObj.get("require_consent").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `require_consent` to be a primitive type in the JSON string but got `%s`", jsonObj.get("require_consent").toString()));
      }
      if ((jsonObj.get("reseller_id") != null && !jsonObj.get("reseller_id").isJsonNull()) && !jsonObj.get("reseller_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `reseller_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("reseller_id").toString()));
      }
      if ((jsonObj.get("saved_form_id") != null && !jsonObj.get("saved_form_id").isJsonNull()) && !jsonObj.get("saved_form_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `saved_form_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("saved_form_id").toString()));
      }
      if ((jsonObj.get("state") != null && !jsonObj.get("state").isJsonNull()) && !jsonObj.get("state").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `state` to be a primitive type in the JSON string but got `%s`", jsonObj.get("state").toString()));
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      if ((jsonObj.get("street") != null && !jsonObj.get("street").isJsonNull()) && !jsonObj.get("street").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `street` to be a primitive type in the JSON string but got `%s`", jsonObj.get("street").toString()));
      }
      if ((jsonObj.get("street2") != null && !jsonObj.get("street2").isJsonNull()) && !jsonObj.get("street2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `street2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("street2").toString()));
      }
      if ((jsonObj.get("subusers_parent_id") != null && !jsonObj.get("subusers_parent_id").isJsonNull()) && !jsonObj.get("subusers_parent_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `subusers_parent_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("subusers_parent_id").toString()));
      }
      if ((jsonObj.get("tax_id") != null && !jsonObj.get("tax_id").isJsonNull()) && !jsonObj.get("tax_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tax_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tax_id").toString()));
      }
      if ((jsonObj.get("unsubscribed") != null && !jsonObj.get("unsubscribed").isJsonNull()) && !jsonObj.get("unsubscribed").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `unsubscribed` to be a primitive type in the JSON string but got `%s`", jsonObj.get("unsubscribed").toString()));
      }
      if ((jsonObj.get("user_agent") != null && !jsonObj.get("user_agent").isJsonNull()) && !jsonObj.get("user_agent").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `user_agent` to be a primitive type in the JSON string but got `%s`", jsonObj.get("user_agent").toString()));
      }
      if ((jsonObj.get("zip") != null && !jsonObj.get("zip").isJsonNull()) && !jsonObj.get("zip").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `zip` to be a primitive type in the JSON string but got `%s`", jsonObj.get("zip").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AddUserResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AddUserResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AddUserResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AddUserResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<AddUserResponse>() {
           @Override
           public void write(JsonWriter out, AddUserResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AddUserResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AddUserResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AddUserResponse
   * @throws IOException if the JSON string is invalid with respect to AddUserResponse
   */
  public static AddUserResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AddUserResponse.class);
  }

  /**
   * Convert an instance of AddUserResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

