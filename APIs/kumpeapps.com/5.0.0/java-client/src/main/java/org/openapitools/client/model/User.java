/*
 * KumpeApps API
 * KKid API. Due to security concerns all calls to this API requires authentication. If you have access then you may use your KumpeApps username/password to authenticate. To gain access please use the contact developer link below.
 *
 * The version of the OpenAPI document: 5.0.0
 * Contact: helpdesk@kumpeapps.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * user
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T09:58:42.665983-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class User {
  public static final String SERIALIZED_NAME_EMAIL = "email";
  @SerializedName(SERIALIZED_NAME_EMAIL)
  private String email;

  public static final String SERIALIZED_NAME_EMOJI = "emoji";
  @SerializedName(SERIALIZED_NAME_EMOJI)
  private String emoji;

  public static final String SERIALIZED_NAME_ENABLE_ALLOWANCE = "enableAllowance";
  @SerializedName(SERIALIZED_NAME_ENABLE_ALLOWANCE)
  private Boolean enableAllowance;

  public static final String SERIALIZED_NAME_ENABLE_BEHAVIOR_CHART = "enableBehaviorChart";
  @SerializedName(SERIALIZED_NAME_ENABLE_BEHAVIOR_CHART)
  private Boolean enableBehaviorChart;

  public static final String SERIALIZED_NAME_ENABLE_CHORES = "enableChores";
  @SerializedName(SERIALIZED_NAME_ENABLE_CHORES)
  private Boolean enableChores;

  public static final String SERIALIZED_NAME_ENABLE_NO_ADS = "enableNoAds";
  @SerializedName(SERIALIZED_NAME_ENABLE_NO_ADS)
  private Boolean enableNoAds;

  public static final String SERIALIZED_NAME_ENABLE_OBJECT_DETECTION = "enableObjectDetection";
  @SerializedName(SERIALIZED_NAME_ENABLE_OBJECT_DETECTION)
  private Boolean enableObjectDetection;

  public static final String SERIALIZED_NAME_ENABLE_TMDB = "enableTmdb";
  @SerializedName(SERIALIZED_NAME_ENABLE_TMDB)
  private Boolean enableTmdb;

  public static final String SERIALIZED_NAME_FIRST_NAME = "firstName";
  @SerializedName(SERIALIZED_NAME_FIRST_NAME)
  private String firstName;

  public static final String SERIALIZED_NAME_HOME_ID = "homeId";
  @SerializedName(SERIALIZED_NAME_HOME_ID)
  private Integer homeId;

  public static final String SERIALIZED_NAME_IS_ACTIVE = "isActive";
  @SerializedName(SERIALIZED_NAME_IS_ACTIVE)
  private Boolean isActive;

  public static final String SERIALIZED_NAME_IS_ADMIN = "isAdmin";
  @SerializedName(SERIALIZED_NAME_IS_ADMIN)
  private Boolean isAdmin;

  public static final String SERIALIZED_NAME_IS_BANNED = "isBanned";
  @SerializedName(SERIALIZED_NAME_IS_BANNED)
  private Boolean isBanned;

  public static final String SERIALIZED_NAME_IS_CHILD = "isChild";
  @SerializedName(SERIALIZED_NAME_IS_CHILD)
  private Boolean isChild;

  public static final String SERIALIZED_NAME_IS_DISABLED = "isDisabled";
  @SerializedName(SERIALIZED_NAME_IS_DISABLED)
  private Boolean isDisabled;

  public static final String SERIALIZED_NAME_IS_LOCKED = "isLocked";
  @SerializedName(SERIALIZED_NAME_IS_LOCKED)
  private Boolean isLocked;

  public static final String SERIALIZED_NAME_IS_MASTER = "isMaster";
  @SerializedName(SERIALIZED_NAME_IS_MASTER)
  private Boolean isMaster;

  public static final String SERIALIZED_NAME_LAST_NAME = "lastName";
  @SerializedName(SERIALIZED_NAME_LAST_NAME)
  private String lastName;

  public static final String SERIALIZED_NAME_MASTER_ID = "masterId";
  @SerializedName(SERIALIZED_NAME_MASTER_ID)
  private Integer masterId;

  public static final String SERIALIZED_NAME_PUSH_ALLOWANCE = "pushAllowance";
  @SerializedName(SERIALIZED_NAME_PUSH_ALLOWANCE)
  private Boolean pushAllowance;

  public static final String SERIALIZED_NAME_PUSH_ALLOWANCE_NEW = "pushAllowanceNew";
  @SerializedName(SERIALIZED_NAME_PUSH_ALLOWANCE_NEW)
  private Boolean pushAllowanceNew;

  public static final String SERIALIZED_NAME_PUSH_CHORES = "pushChores";
  @SerializedName(SERIALIZED_NAME_PUSH_CHORES)
  private Boolean pushChores;

  public static final String SERIALIZED_NAME_PUSH_CHORES_NEW = "pushChoresNew";
  @SerializedName(SERIALIZED_NAME_PUSH_CHORES_NEW)
  private Boolean pushChoresNew;

  public static final String SERIALIZED_NAME_PUSH_CHORES_REMINDERS = "pushChoresReminders";
  @SerializedName(SERIALIZED_NAME_PUSH_CHORES_REMINDERS)
  private Boolean pushChoresReminders;

  public static final String SERIALIZED_NAME_TMDB_KEY = "tmdbKey";
  @SerializedName(SERIALIZED_NAME_TMDB_KEY)
  private String tmdbKey;

  public static final String SERIALIZED_NAME_USER_ID = "userId";
  @SerializedName(SERIALIZED_NAME_USER_ID)
  private Integer userId;

  public static final String SERIALIZED_NAME_USERNAME = "username";
  @SerializedName(SERIALIZED_NAME_USERNAME)
  private String username;

  public static final String SERIALIZED_NAME_WEEKLY_ALLOWANCE = "weeklyAllowance";
  @SerializedName(SERIALIZED_NAME_WEEKLY_ALLOWANCE)
  private Integer weeklyAllowance;

  public User() {
  }

  public User email(String email) {
    this.email = email;
    return this;
  }

  /**
   * Get email
   * @return email
   */
  @javax.annotation.Nullable
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }


  public User emoji(String emoji) {
    this.emoji = emoji;
    return this;
  }

  /**
   * Get emoji
   * @return emoji
   */
  @javax.annotation.Nullable
  public String getEmoji() {
    return emoji;
  }

  public void setEmoji(String emoji) {
    this.emoji = emoji;
  }


  public User enableAllowance(Boolean enableAllowance) {
    this.enableAllowance = enableAllowance;
    return this;
  }

  /**
   * Get enableAllowance
   * @return enableAllowance
   */
  @javax.annotation.Nullable
  public Boolean getEnableAllowance() {
    return enableAllowance;
  }

  public void setEnableAllowance(Boolean enableAllowance) {
    this.enableAllowance = enableAllowance;
  }


  public User enableBehaviorChart(Boolean enableBehaviorChart) {
    this.enableBehaviorChart = enableBehaviorChart;
    return this;
  }

  /**
   * Get enableBehaviorChart
   * @return enableBehaviorChart
   */
  @javax.annotation.Nullable
  public Boolean getEnableBehaviorChart() {
    return enableBehaviorChart;
  }

  public void setEnableBehaviorChart(Boolean enableBehaviorChart) {
    this.enableBehaviorChart = enableBehaviorChart;
  }


  public User enableChores(Boolean enableChores) {
    this.enableChores = enableChores;
    return this;
  }

  /**
   * Get enableChores
   * @return enableChores
   */
  @javax.annotation.Nullable
  public Boolean getEnableChores() {
    return enableChores;
  }

  public void setEnableChores(Boolean enableChores) {
    this.enableChores = enableChores;
  }


  public User enableNoAds(Boolean enableNoAds) {
    this.enableNoAds = enableNoAds;
    return this;
  }

  /**
   * Get enableNoAds
   * @return enableNoAds
   */
  @javax.annotation.Nullable
  public Boolean getEnableNoAds() {
    return enableNoAds;
  }

  public void setEnableNoAds(Boolean enableNoAds) {
    this.enableNoAds = enableNoAds;
  }


  public User enableObjectDetection(Boolean enableObjectDetection) {
    this.enableObjectDetection = enableObjectDetection;
    return this;
  }

  /**
   * Get enableObjectDetection
   * @return enableObjectDetection
   */
  @javax.annotation.Nullable
  public Boolean getEnableObjectDetection() {
    return enableObjectDetection;
  }

  public void setEnableObjectDetection(Boolean enableObjectDetection) {
    this.enableObjectDetection = enableObjectDetection;
  }


  public User enableTmdb(Boolean enableTmdb) {
    this.enableTmdb = enableTmdb;
    return this;
  }

  /**
   * Get enableTmdb
   * @return enableTmdb
   */
  @javax.annotation.Nullable
  public Boolean getEnableTmdb() {
    return enableTmdb;
  }

  public void setEnableTmdb(Boolean enableTmdb) {
    this.enableTmdb = enableTmdb;
  }


  public User firstName(String firstName) {
    this.firstName = firstName;
    return this;
  }

  /**
   * Get firstName
   * @return firstName
   */
  @javax.annotation.Nullable
  public String getFirstName() {
    return firstName;
  }

  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }


  public User homeId(Integer homeId) {
    this.homeId = homeId;
    return this;
  }

  /**
   * Get homeId
   * @return homeId
   */
  @javax.annotation.Nullable
  public Integer getHomeId() {
    return homeId;
  }

  public void setHomeId(Integer homeId) {
    this.homeId = homeId;
  }


  public User isActive(Boolean isActive) {
    this.isActive = isActive;
    return this;
  }

  /**
   * Get isActive
   * @return isActive
   */
  @javax.annotation.Nullable
  public Boolean getIsActive() {
    return isActive;
  }

  public void setIsActive(Boolean isActive) {
    this.isActive = isActive;
  }


  public User isAdmin(Boolean isAdmin) {
    this.isAdmin = isAdmin;
    return this;
  }

  /**
   * Get isAdmin
   * @return isAdmin
   */
  @javax.annotation.Nullable
  public Boolean getIsAdmin() {
    return isAdmin;
  }

  public void setIsAdmin(Boolean isAdmin) {
    this.isAdmin = isAdmin;
  }


  public User isBanned(Boolean isBanned) {
    this.isBanned = isBanned;
    return this;
  }

  /**
   * Get isBanned
   * @return isBanned
   */
  @javax.annotation.Nullable
  public Boolean getIsBanned() {
    return isBanned;
  }

  public void setIsBanned(Boolean isBanned) {
    this.isBanned = isBanned;
  }


  public User isChild(Boolean isChild) {
    this.isChild = isChild;
    return this;
  }

  /**
   * Get isChild
   * @return isChild
   */
  @javax.annotation.Nullable
  public Boolean getIsChild() {
    return isChild;
  }

  public void setIsChild(Boolean isChild) {
    this.isChild = isChild;
  }


  public User isDisabled(Boolean isDisabled) {
    this.isDisabled = isDisabled;
    return this;
  }

  /**
   * Get isDisabled
   * @return isDisabled
   */
  @javax.annotation.Nullable
  public Boolean getIsDisabled() {
    return isDisabled;
  }

  public void setIsDisabled(Boolean isDisabled) {
    this.isDisabled = isDisabled;
  }


  public User isLocked(Boolean isLocked) {
    this.isLocked = isLocked;
    return this;
  }

  /**
   * Get isLocked
   * @return isLocked
   */
  @javax.annotation.Nullable
  public Boolean getIsLocked() {
    return isLocked;
  }

  public void setIsLocked(Boolean isLocked) {
    this.isLocked = isLocked;
  }


  public User isMaster(Boolean isMaster) {
    this.isMaster = isMaster;
    return this;
  }

  /**
   * Get isMaster
   * @return isMaster
   */
  @javax.annotation.Nullable
  public Boolean getIsMaster() {
    return isMaster;
  }

  public void setIsMaster(Boolean isMaster) {
    this.isMaster = isMaster;
  }


  public User lastName(String lastName) {
    this.lastName = lastName;
    return this;
  }

  /**
   * Get lastName
   * @return lastName
   */
  @javax.annotation.Nullable
  public String getLastName() {
    return lastName;
  }

  public void setLastName(String lastName) {
    this.lastName = lastName;
  }


  public User masterId(Integer masterId) {
    this.masterId = masterId;
    return this;
  }

  /**
   * Get masterId
   * @return masterId
   */
  @javax.annotation.Nullable
  public Integer getMasterId() {
    return masterId;
  }

  public void setMasterId(Integer masterId) {
    this.masterId = masterId;
  }


  public User pushAllowance(Boolean pushAllowance) {
    this.pushAllowance = pushAllowance;
    return this;
  }

  /**
   * Get pushAllowance
   * @return pushAllowance
   */
  @javax.annotation.Nullable
  public Boolean getPushAllowance() {
    return pushAllowance;
  }

  public void setPushAllowance(Boolean pushAllowance) {
    this.pushAllowance = pushAllowance;
  }


  public User pushAllowanceNew(Boolean pushAllowanceNew) {
    this.pushAllowanceNew = pushAllowanceNew;
    return this;
  }

  /**
   * Get pushAllowanceNew
   * @return pushAllowanceNew
   */
  @javax.annotation.Nullable
  public Boolean getPushAllowanceNew() {
    return pushAllowanceNew;
  }

  public void setPushAllowanceNew(Boolean pushAllowanceNew) {
    this.pushAllowanceNew = pushAllowanceNew;
  }


  public User pushChores(Boolean pushChores) {
    this.pushChores = pushChores;
    return this;
  }

  /**
   * Get pushChores
   * @return pushChores
   */
  @javax.annotation.Nullable
  public Boolean getPushChores() {
    return pushChores;
  }

  public void setPushChores(Boolean pushChores) {
    this.pushChores = pushChores;
  }


  public User pushChoresNew(Boolean pushChoresNew) {
    this.pushChoresNew = pushChoresNew;
    return this;
  }

  /**
   * Get pushChoresNew
   * @return pushChoresNew
   */
  @javax.annotation.Nullable
  public Boolean getPushChoresNew() {
    return pushChoresNew;
  }

  public void setPushChoresNew(Boolean pushChoresNew) {
    this.pushChoresNew = pushChoresNew;
  }


  public User pushChoresReminders(Boolean pushChoresReminders) {
    this.pushChoresReminders = pushChoresReminders;
    return this;
  }

  /**
   * Get pushChoresReminders
   * @return pushChoresReminders
   */
  @javax.annotation.Nullable
  public Boolean getPushChoresReminders() {
    return pushChoresReminders;
  }

  public void setPushChoresReminders(Boolean pushChoresReminders) {
    this.pushChoresReminders = pushChoresReminders;
  }


  public User tmdbKey(String tmdbKey) {
    this.tmdbKey = tmdbKey;
    return this;
  }

  /**
   * Get tmdbKey
   * @return tmdbKey
   */
  @javax.annotation.Nullable
  public String getTmdbKey() {
    return tmdbKey;
  }

  public void setTmdbKey(String tmdbKey) {
    this.tmdbKey = tmdbKey;
  }


  public User userId(Integer userId) {
    this.userId = userId;
    return this;
  }

  /**
   * Get userId
   * @return userId
   */
  @javax.annotation.Nullable
  public Integer getUserId() {
    return userId;
  }

  public void setUserId(Integer userId) {
    this.userId = userId;
  }


  public User username(String username) {
    this.username = username;
    return this;
  }

  /**
   * Get username
   * @return username
   */
  @javax.annotation.Nullable
  public String getUsername() {
    return username;
  }

  public void setUsername(String username) {
    this.username = username;
  }


  public User weeklyAllowance(Integer weeklyAllowance) {
    this.weeklyAllowance = weeklyAllowance;
    return this;
  }

  /**
   * Get weeklyAllowance
   * @return weeklyAllowance
   */
  @javax.annotation.Nullable
  public Integer getWeeklyAllowance() {
    return weeklyAllowance;
  }

  public void setWeeklyAllowance(Integer weeklyAllowance) {
    this.weeklyAllowance = weeklyAllowance;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    User user = (User) o;
    return Objects.equals(this.email, user.email) &&
        Objects.equals(this.emoji, user.emoji) &&
        Objects.equals(this.enableAllowance, user.enableAllowance) &&
        Objects.equals(this.enableBehaviorChart, user.enableBehaviorChart) &&
        Objects.equals(this.enableChores, user.enableChores) &&
        Objects.equals(this.enableNoAds, user.enableNoAds) &&
        Objects.equals(this.enableObjectDetection, user.enableObjectDetection) &&
        Objects.equals(this.enableTmdb, user.enableTmdb) &&
        Objects.equals(this.firstName, user.firstName) &&
        Objects.equals(this.homeId, user.homeId) &&
        Objects.equals(this.isActive, user.isActive) &&
        Objects.equals(this.isAdmin, user.isAdmin) &&
        Objects.equals(this.isBanned, user.isBanned) &&
        Objects.equals(this.isChild, user.isChild) &&
        Objects.equals(this.isDisabled, user.isDisabled) &&
        Objects.equals(this.isLocked, user.isLocked) &&
        Objects.equals(this.isMaster, user.isMaster) &&
        Objects.equals(this.lastName, user.lastName) &&
        Objects.equals(this.masterId, user.masterId) &&
        Objects.equals(this.pushAllowance, user.pushAllowance) &&
        Objects.equals(this.pushAllowanceNew, user.pushAllowanceNew) &&
        Objects.equals(this.pushChores, user.pushChores) &&
        Objects.equals(this.pushChoresNew, user.pushChoresNew) &&
        Objects.equals(this.pushChoresReminders, user.pushChoresReminders) &&
        Objects.equals(this.tmdbKey, user.tmdbKey) &&
        Objects.equals(this.userId, user.userId) &&
        Objects.equals(this.username, user.username) &&
        Objects.equals(this.weeklyAllowance, user.weeklyAllowance);
  }

  @Override
  public int hashCode() {
    return Objects.hash(email, emoji, enableAllowance, enableBehaviorChart, enableChores, enableNoAds, enableObjectDetection, enableTmdb, firstName, homeId, isActive, isAdmin, isBanned, isChild, isDisabled, isLocked, isMaster, lastName, masterId, pushAllowance, pushAllowanceNew, pushChores, pushChoresNew, pushChoresReminders, tmdbKey, userId, username, weeklyAllowance);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class User {\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    emoji: ").append(toIndentedString(emoji)).append("\n");
    sb.append("    enableAllowance: ").append(toIndentedString(enableAllowance)).append("\n");
    sb.append("    enableBehaviorChart: ").append(toIndentedString(enableBehaviorChart)).append("\n");
    sb.append("    enableChores: ").append(toIndentedString(enableChores)).append("\n");
    sb.append("    enableNoAds: ").append(toIndentedString(enableNoAds)).append("\n");
    sb.append("    enableObjectDetection: ").append(toIndentedString(enableObjectDetection)).append("\n");
    sb.append("    enableTmdb: ").append(toIndentedString(enableTmdb)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    homeId: ").append(toIndentedString(homeId)).append("\n");
    sb.append("    isActive: ").append(toIndentedString(isActive)).append("\n");
    sb.append("    isAdmin: ").append(toIndentedString(isAdmin)).append("\n");
    sb.append("    isBanned: ").append(toIndentedString(isBanned)).append("\n");
    sb.append("    isChild: ").append(toIndentedString(isChild)).append("\n");
    sb.append("    isDisabled: ").append(toIndentedString(isDisabled)).append("\n");
    sb.append("    isLocked: ").append(toIndentedString(isLocked)).append("\n");
    sb.append("    isMaster: ").append(toIndentedString(isMaster)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    masterId: ").append(toIndentedString(masterId)).append("\n");
    sb.append("    pushAllowance: ").append(toIndentedString(pushAllowance)).append("\n");
    sb.append("    pushAllowanceNew: ").append(toIndentedString(pushAllowanceNew)).append("\n");
    sb.append("    pushChores: ").append(toIndentedString(pushChores)).append("\n");
    sb.append("    pushChoresNew: ").append(toIndentedString(pushChoresNew)).append("\n");
    sb.append("    pushChoresReminders: ").append(toIndentedString(pushChoresReminders)).append("\n");
    sb.append("    tmdbKey: ").append(toIndentedString(tmdbKey)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("    weeklyAllowance: ").append(toIndentedString(weeklyAllowance)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("email");
    openapiFields.add("emoji");
    openapiFields.add("enableAllowance");
    openapiFields.add("enableBehaviorChart");
    openapiFields.add("enableChores");
    openapiFields.add("enableNoAds");
    openapiFields.add("enableObjectDetection");
    openapiFields.add("enableTmdb");
    openapiFields.add("firstName");
    openapiFields.add("homeId");
    openapiFields.add("isActive");
    openapiFields.add("isAdmin");
    openapiFields.add("isBanned");
    openapiFields.add("isChild");
    openapiFields.add("isDisabled");
    openapiFields.add("isLocked");
    openapiFields.add("isMaster");
    openapiFields.add("lastName");
    openapiFields.add("masterId");
    openapiFields.add("pushAllowance");
    openapiFields.add("pushAllowanceNew");
    openapiFields.add("pushChores");
    openapiFields.add("pushChoresNew");
    openapiFields.add("pushChoresReminders");
    openapiFields.add("tmdbKey");
    openapiFields.add("userId");
    openapiFields.add("username");
    openapiFields.add("weeklyAllowance");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to User
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!User.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in User is not found in the empty JSON string", User.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!User.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `User` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("email") != null && !jsonObj.get("email").isJsonNull()) && !jsonObj.get("email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("email").toString()));
      }
      if ((jsonObj.get("emoji") != null && !jsonObj.get("emoji").isJsonNull()) && !jsonObj.get("emoji").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `emoji` to be a primitive type in the JSON string but got `%s`", jsonObj.get("emoji").toString()));
      }
      if ((jsonObj.get("firstName") != null && !jsonObj.get("firstName").isJsonNull()) && !jsonObj.get("firstName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `firstName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("firstName").toString()));
      }
      if ((jsonObj.get("lastName") != null && !jsonObj.get("lastName").isJsonNull()) && !jsonObj.get("lastName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastName").toString()));
      }
      if ((jsonObj.get("tmdbKey") != null && !jsonObj.get("tmdbKey").isJsonNull()) && !jsonObj.get("tmdbKey").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tmdbKey` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tmdbKey").toString()));
      }
      if ((jsonObj.get("username") != null && !jsonObj.get("username").isJsonNull()) && !jsonObj.get("username").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `username` to be a primitive type in the JSON string but got `%s`", jsonObj.get("username").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!User.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'User' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<User> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(User.class));

       return (TypeAdapter<T>) new TypeAdapter<User>() {
           @Override
           public void write(JsonWriter out, User value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public User read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of User given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of User
   * @throws IOException if the JSON string is invalid with respect to User
   */
  public static User fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, User.class);
  }

  /**
   * Convert an instance of User to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

