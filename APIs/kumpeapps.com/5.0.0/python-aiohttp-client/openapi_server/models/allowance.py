# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.allowance_allowance_transaction import AllowanceAllowanceTransaction
from openapi_server import util


class Allowance(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, allowance_transaction: List[AllowanceAllowanceTransaction]=None, balance: int=None, id: int=None, last_updated: str=None, success: int=None):
        """Allowance - a model defined in OpenAPI

        :param allowance_transaction: The allowance_transaction of this Allowance.
        :param balance: The balance of this Allowance.
        :param id: The id of this Allowance.
        :param last_updated: The last_updated of this Allowance.
        :param success: The success of this Allowance.
        """
        self.openapi_types = {
            'allowance_transaction': List[AllowanceAllowanceTransaction],
            'balance': int,
            'id': int,
            'last_updated': str,
            'success': int
        }

        self.attribute_map = {
            'allowance_transaction': 'allowanceTransaction',
            'balance': 'balance',
            'id': 'id',
            'last_updated': 'lastUpdated',
            'success': 'success'
        }

        self._allowance_transaction = allowance_transaction
        self._balance = balance
        self._id = id
        self._last_updated = last_updated
        self._success = success

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Allowance':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The allowance of this Allowance.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def allowance_transaction(self):
        """Gets the allowance_transaction of this Allowance.


        :return: The allowance_transaction of this Allowance.
        :rtype: List[AllowanceAllowanceTransaction]
        """
        return self._allowance_transaction

    @allowance_transaction.setter
    def allowance_transaction(self, allowance_transaction):
        """Sets the allowance_transaction of this Allowance.


        :param allowance_transaction: The allowance_transaction of this Allowance.
        :type allowance_transaction: List[AllowanceAllowanceTransaction]
        """

        self._allowance_transaction = allowance_transaction

    @property
    def balance(self):
        """Gets the balance of this Allowance.


        :return: The balance of this Allowance.
        :rtype: int
        """
        return self._balance

    @balance.setter
    def balance(self, balance):
        """Sets the balance of this Allowance.


        :param balance: The balance of this Allowance.
        :type balance: int
        """

        self._balance = balance

    @property
    def id(self):
        """Gets the id of this Allowance.


        :return: The id of this Allowance.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Allowance.


        :param id: The id of this Allowance.
        :type id: int
        """

        self._id = id

    @property
    def last_updated(self):
        """Gets the last_updated of this Allowance.


        :return: The last_updated of this Allowance.
        :rtype: str
        """
        return self._last_updated

    @last_updated.setter
    def last_updated(self, last_updated):
        """Sets the last_updated of this Allowance.


        :param last_updated: The last_updated of this Allowance.
        :type last_updated: str
        """

        self._last_updated = last_updated

    @property
    def success(self):
        """Gets the success of this Allowance.


        :return: The success of this Allowance.
        :rtype: int
        """
        return self._success

    @success.setter
    def success(self, success):
        """Sets the success of this Allowance.


        :param success: The success of this Allowance.
        :type success: int
        """

        self._success = success
