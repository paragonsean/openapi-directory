# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class InlineResponse2011(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, auth_key: str=None, success: bool=None):
        """InlineResponse2011 - a model defined in OpenAPI

        :param auth_key: The auth_key of this InlineResponse2011.
        :param success: The success of this InlineResponse2011.
        """
        self.openapi_types = {
            'auth_key': str,
            'success': bool
        }

        self.attribute_map = {
            'auth_key': 'auth_key',
            'success': 'success'
        }

        self._auth_key = auth_key
        self._success = success

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InlineResponse2011':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The inline_response_201_1 of this InlineResponse2011.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def auth_key(self):
        """Gets the auth_key of this InlineResponse2011.


        :return: The auth_key of this InlineResponse2011.
        :rtype: str
        """
        return self._auth_key

    @auth_key.setter
    def auth_key(self, auth_key):
        """Sets the auth_key of this InlineResponse2011.


        :param auth_key: The auth_key of this InlineResponse2011.
        :type auth_key: str
        """

        self._auth_key = auth_key

    @property
    def success(self):
        """Gets the success of this InlineResponse2011.


        :return: The success of this InlineResponse2011.
        :rtype: bool
        """
        return self._success

    @success.setter
    def success(self, success):
        """Sets the success of this InlineResponse2011.


        :param success: The success of this InlineResponse2011.
        :type success: bool
        """

        self._success = success
