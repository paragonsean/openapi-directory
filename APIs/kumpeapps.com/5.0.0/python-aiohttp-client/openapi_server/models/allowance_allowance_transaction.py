# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AllowanceAllowanceTransaction(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, amount: int=None, _date: str=None, transaction_description: str=None, transaction_id: int=None, transaction_type: str=None, user_id: int=None):
        """AllowanceAllowanceTransaction - a model defined in OpenAPI

        :param amount: The amount of this AllowanceAllowanceTransaction.
        :param _date: The _date of this AllowanceAllowanceTransaction.
        :param transaction_description: The transaction_description of this AllowanceAllowanceTransaction.
        :param transaction_id: The transaction_id of this AllowanceAllowanceTransaction.
        :param transaction_type: The transaction_type of this AllowanceAllowanceTransaction.
        :param user_id: The user_id of this AllowanceAllowanceTransaction.
        """
        self.openapi_types = {
            'amount': int,
            '_date': str,
            'transaction_description': str,
            'transaction_id': int,
            'transaction_type': str,
            'user_id': int
        }

        self.attribute_map = {
            'amount': 'amount',
            '_date': 'date',
            'transaction_description': 'transactionDescription',
            'transaction_id': 'transactionId',
            'transaction_type': 'transactionType',
            'user_id': 'userId'
        }

        self._amount = amount
        self.__date = _date
        self._transaction_description = transaction_description
        self._transaction_id = transaction_id
        self._transaction_type = transaction_type
        self._user_id = user_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AllowanceAllowanceTransaction':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The allowance_allowanceTransaction of this AllowanceAllowanceTransaction.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def amount(self):
        """Gets the amount of this AllowanceAllowanceTransaction.


        :return: The amount of this AllowanceAllowanceTransaction.
        :rtype: int
        """
        return self._amount

    @amount.setter
    def amount(self, amount):
        """Sets the amount of this AllowanceAllowanceTransaction.


        :param amount: The amount of this AllowanceAllowanceTransaction.
        :type amount: int
        """

        self._amount = amount

    @property
    def _date(self):
        """Gets the _date of this AllowanceAllowanceTransaction.


        :return: The _date of this AllowanceAllowanceTransaction.
        :rtype: str
        """
        return self.__date

    @_date.setter
    def _date(self, _date):
        """Sets the _date of this AllowanceAllowanceTransaction.


        :param _date: The _date of this AllowanceAllowanceTransaction.
        :type _date: str
        """

        self.__date = _date

    @property
    def transaction_description(self):
        """Gets the transaction_description of this AllowanceAllowanceTransaction.


        :return: The transaction_description of this AllowanceAllowanceTransaction.
        :rtype: str
        """
        return self._transaction_description

    @transaction_description.setter
    def transaction_description(self, transaction_description):
        """Sets the transaction_description of this AllowanceAllowanceTransaction.


        :param transaction_description: The transaction_description of this AllowanceAllowanceTransaction.
        :type transaction_description: str
        """

        self._transaction_description = transaction_description

    @property
    def transaction_id(self):
        """Gets the transaction_id of this AllowanceAllowanceTransaction.


        :return: The transaction_id of this AllowanceAllowanceTransaction.
        :rtype: int
        """
        return self._transaction_id

    @transaction_id.setter
    def transaction_id(self, transaction_id):
        """Sets the transaction_id of this AllowanceAllowanceTransaction.


        :param transaction_id: The transaction_id of this AllowanceAllowanceTransaction.
        :type transaction_id: int
        """

        self._transaction_id = transaction_id

    @property
    def transaction_type(self):
        """Gets the transaction_type of this AllowanceAllowanceTransaction.


        :return: The transaction_type of this AllowanceAllowanceTransaction.
        :rtype: str
        """
        return self._transaction_type

    @transaction_type.setter
    def transaction_type(self, transaction_type):
        """Sets the transaction_type of this AllowanceAllowanceTransaction.


        :param transaction_type: The transaction_type of this AllowanceAllowanceTransaction.
        :type transaction_type: str
        """

        self._transaction_type = transaction_type

    @property
    def user_id(self):
        """Gets the user_id of this AllowanceAllowanceTransaction.


        :return: The user_id of this AllowanceAllowanceTransaction.
        :rtype: int
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id):
        """Sets the user_id of this AllowanceAllowanceTransaction.


        :param user_id: The user_id of this AllowanceAllowanceTransaction.
        :type user_id: int
        """

        self._user_id = user_id
