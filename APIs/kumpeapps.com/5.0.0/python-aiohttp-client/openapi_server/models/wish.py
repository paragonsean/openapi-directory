# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Wish(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description: str=None, id: int=None, link: str=None, master_id: int=None, priority: int=None, title: str=None, user_id: int=None):
        """Wish - a model defined in OpenAPI

        :param description: The description of this Wish.
        :param id: The id of this Wish.
        :param link: The link of this Wish.
        :param master_id: The master_id of this Wish.
        :param priority: The priority of this Wish.
        :param title: The title of this Wish.
        :param user_id: The user_id of this Wish.
        """
        self.openapi_types = {
            'description': str,
            'id': int,
            'link': str,
            'master_id': int,
            'priority': int,
            'title': str,
            'user_id': int
        }

        self.attribute_map = {
            'description': 'description',
            'id': 'id',
            'link': 'link',
            'master_id': 'master_id',
            'priority': 'priority',
            'title': 'title',
            'user_id': 'user_id'
        }

        self._description = description
        self._id = id
        self._link = link
        self._master_id = master_id
        self._priority = priority
        self._title = title
        self._user_id = user_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Wish':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The wish of this Wish.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self):
        """Gets the description of this Wish.


        :return: The description of this Wish.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this Wish.


        :param description: The description of this Wish.
        :type description: str
        """

        self._description = description

    @property
    def id(self):
        """Gets the id of this Wish.


        :return: The id of this Wish.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Wish.


        :param id: The id of this Wish.
        :type id: int
        """

        self._id = id

    @property
    def link(self):
        """Gets the link of this Wish.


        :return: The link of this Wish.
        :rtype: str
        """
        return self._link

    @link.setter
    def link(self, link):
        """Sets the link of this Wish.


        :param link: The link of this Wish.
        :type link: str
        """

        self._link = link

    @property
    def master_id(self):
        """Gets the master_id of this Wish.


        :return: The master_id of this Wish.
        :rtype: int
        """
        return self._master_id

    @master_id.setter
    def master_id(self, master_id):
        """Sets the master_id of this Wish.


        :param master_id: The master_id of this Wish.
        :type master_id: int
        """

        self._master_id = master_id

    @property
    def priority(self):
        """Gets the priority of this Wish.


        :return: The priority of this Wish.
        :rtype: int
        """
        return self._priority

    @priority.setter
    def priority(self, priority):
        """Sets the priority of this Wish.


        :param priority: The priority of this Wish.
        :type priority: int
        """

        self._priority = priority

    @property
    def title(self):
        """Gets the title of this Wish.


        :return: The title of this Wish.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this Wish.


        :param title: The title of this Wish.
        :type title: str
        """

        self._title = title

    @property
    def user_id(self):
        """Gets the user_id of this Wish.


        :return: The user_id of this Wish.
        :rtype: int
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id):
        """Sets the user_id of this Wish.


        :param user_id: The user_id of this Wish.
        :type user_id: int
        """

        self._user_id = user_id
