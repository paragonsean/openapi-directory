/*
 * Shotstack
 * Shotstack is a video, image and audio editing service that allows for the automated generation of videos, images and audio using JSON and a RESTful API.  You arrange and configure an edit and POST it to the API which will render your media and provide a file  location when complete.  For more details visit [shotstack.io](https://shotstack.io) or checkout our [getting started](https://shotstack.gitbook.io/docs/guides/getting-started) documentation. There are two main API's, one for editing and generating assets (Edit API) and one for managing hosted assets (Serve API).  The Edit API base URL is: <b>https://api.shotstack.io/{version}</b>  The Serve API base URL is: <b>https://api.shotstack.io/serve/{version}</b>
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AssetRenderResponse;
import org.openapitools.client.model.AssetResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ServeApi
 */
@Disabled
public class ServeApiTest {

    private final ServeApi api = new ServeApi();

    /**
     * Delete Asset
     *
     * Delete an asset by its asset id. If a render creates multiple assets, such as thumbnail and poster images, each asset must be deleted individually by the asset id.  **base URL:** https://api.shotstack.io/serve/{version}
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteAssetTest() throws ApiException {
        String id = null;
        api.deleteAsset(id);
        // TODO: test validations
    }

    /**
     * Get Asset
     *
     * The Serve API is used to interact with, and delete hosted assets including videos, images, audio files,  thumbnails and poster images. Use this endpoint to fetch an asset by asset id. Note that an asset id is unique for each asset and different from the render id.  **base URL:** https://api.shotstack.io/serve/{version}
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAssetTest() throws ApiException {
        String id = null;
        AssetResponse response = api.getAsset(id);
        // TODO: test validations
    }

    /**
     * Get Asset by Render ID
     *
     * A render may generate more than one file, such as a video, thumbnail and poster image. When the assets are created the only known id is the render id returned by the original [render request](#render-video), status  request or webhook. This endpoint lets you look up one or more assets by the render id.  **base URL:** https://api.shotstack.io/serve/{version}
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAssetByRenderIdTest() throws ApiException {
        String id = null;
        AssetRenderResponse response = api.getAssetByRenderId(id);
        // TODO: test validations
    }

}
