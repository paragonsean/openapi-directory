/**
 * Shotstack
 * Shotstack is a video, image and audio editing service that allows for the automated generation of videos, images and audio using JSON and a RESTful API.  You arrange and configure an edit and POST it to the API which will render your media and provide a file  location when complete.  For more details visit [shotstack.io](https://shotstack.io) or checkout our [getting started](https://shotstack.gitbook.io/docs/guides/getting-started) documentation. There are two main API's, one for editing and generating assets (Edit API) and one for managing hosted assets (Serve API).  The Edit API base URL is: <b>https://api.shotstack.io/{version}</b>  The Serve API base URL is: <b>https://api.shotstack.io/serve/{version}</b>
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAssetResponseData.h
 *
 * The type of resource (an asset) and attributes of the asset.
 */

#ifndef OAIAssetResponseData_H
#define OAIAssetResponseData_H

#include <QJsonObject>

#include "OAIAssetResponseAttributes.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAssetResponseAttributes;

class OAIAssetResponseData : public OAIObject {
public:
    OAIAssetResponseData();
    OAIAssetResponseData(QString json);
    ~OAIAssetResponseData() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAssetResponseAttributes getAttributes() const;
    void setAttributes(const OAIAssetResponseAttributes &attributes);
    bool is_attributes_Set() const;
    bool is_attributes_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAssetResponseAttributes m_attributes;
    bool m_attributes_isSet;
    bool m_attributes_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAssetResponseData)

#endif // OAIAssetResponseData_H
