/**
 * Shotstack
 * Shotstack is a video, image and audio editing service that allows for the automated generation of videos, images and audio using JSON and a RESTful API.  You arrange and configure an edit and POST it to the API which will render your media and provide a file  location when complete.  For more details visit [shotstack.io](https://shotstack.io) or checkout our [getting started](https://shotstack.gitbook.io/docs/guides/getting-started) documentation. There are two main API's, one for editing and generating assets (Edit API) and one for managing hosted assets (Serve API).  The Edit API base URL is: <b>https://api.shotstack.io/{version}</b>  The Serve API base URL is: <b>https://api.shotstack.io/serve/{version}</b>
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIClip_asset.h
 *
 * The type of asset to display for the duration of this Clip. Value must be one of &lt;b&gt;TitleAsset&lt;/b&gt;, &lt;b&gt;ImageAsset&lt;/b&gt;, &lt;b&gt;VideoAsset&lt;/b&gt;, &lt;b&gt;HtmlAsset&lt;/b&gt;, &lt;b&gt;AudioAsset&lt;/b&gt; or &lt;b&gt;LumaAsset&lt;/b&gt;
 */

#ifndef OAIClip_asset_H
#define OAIClip_asset_H

#include <QJsonObject>

#include "OAIAudioAsset.h"
#include "OAICrop.h"
#include "OAIHtmlAsset.h"
#include "OAIImageAsset.h"
#include "OAILumaAsset.h"
#include "OAIOffset.h"
#include "OAITitleAsset.h"
#include "OAIVideoAsset.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICrop;
class OAIOffset;

class OAIClip_asset : public OAIObject {
public:
    OAIClip_asset();
    OAIClip_asset(QString json);
    ~OAIClip_asset() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAICrop getCrop() const;
    void setCrop(const OAICrop &crop);
    bool is_crop_Set() const;
    bool is_crop_Valid() const;

    QString getSrc() const;
    void setSrc(const QString &src);
    bool is_src_Set() const;
    bool is_src_Valid() const;

    double getTrim() const;
    void setTrim(const double &trim);
    bool is_trim_Set() const;
    bool is_trim_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    double getVolume() const;
    void setVolume(const double &volume);
    bool is_volume_Set() const;
    bool is_volume_Valid() const;

    QString getBackground() const;
    void setBackground(const QString &background);
    bool is_background_Set() const;
    bool is_background_Valid() const;

    QString getColor() const;
    void setColor(const QString &color);
    bool is_color_Set() const;
    bool is_color_Valid() const;

    OAIOffset getOffset() const;
    void setOffset(const OAIOffset &offset);
    bool is_offset_Set() const;
    bool is_offset_Valid() const;

    QString getPosition() const;
    void setPosition(const QString &position);
    bool is_position_Set() const;
    bool is_position_Valid() const;

    QString getSize() const;
    void setSize(const QString &size);
    bool is_size_Set() const;
    bool is_size_Valid() const;

    QString getStyle() const;
    void setStyle(const QString &style);
    bool is_style_Set() const;
    bool is_style_Valid() const;

    QString getText() const;
    void setText(const QString &text);
    bool is_text_Set() const;
    bool is_text_Valid() const;

    QString getCss() const;
    void setCss(const QString &css);
    bool is_css_Set() const;
    bool is_css_Valid() const;

    qint32 getHeight() const;
    void setHeight(const qint32 &height);
    bool is_height_Set() const;
    bool is_height_Valid() const;

    QString getHtml() const;
    void setHtml(const QString &html);
    bool is_html_Set() const;
    bool is_html_Valid() const;

    qint32 getWidth() const;
    void setWidth(const qint32 &width);
    bool is_width_Set() const;
    bool is_width_Valid() const;

    QString getEffect() const;
    void setEffect(const QString &effect);
    bool is_effect_Set() const;
    bool is_effect_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAICrop m_crop;
    bool m_crop_isSet;
    bool m_crop_isValid;

    QString m_src;
    bool m_src_isSet;
    bool m_src_isValid;

    double m_trim;
    bool m_trim_isSet;
    bool m_trim_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    double m_volume;
    bool m_volume_isSet;
    bool m_volume_isValid;

    QString m_background;
    bool m_background_isSet;
    bool m_background_isValid;

    QString m_color;
    bool m_color_isSet;
    bool m_color_isValid;

    OAIOffset m_offset;
    bool m_offset_isSet;
    bool m_offset_isValid;

    QString m_position;
    bool m_position_isSet;
    bool m_position_isValid;

    QString m_size;
    bool m_size_isSet;
    bool m_size_isValid;

    QString m_style;
    bool m_style_isSet;
    bool m_style_isValid;

    QString m_text;
    bool m_text_isSet;
    bool m_text_isValid;

    QString m_css;
    bool m_css_isSet;
    bool m_css_isValid;

    qint32 m_height;
    bool m_height_isSet;
    bool m_height_isValid;

    QString m_html;
    bool m_html_isSet;
    bool m_html_isValid;

    qint32 m_width;
    bool m_width_isSet;
    bool m_width_isValid;

    QString m_effect;
    bool m_effect_isSet;
    bool m_effect_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIClip_asset)

#endif // OAIClip_asset_H
