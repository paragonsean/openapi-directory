/**
 * Shotstack
 * Shotstack is a video, image and audio editing service that allows for the automated generation of videos, images and audio using JSON and a RESTful API.  You arrange and configure an edit and POST it to the API which will render your media and provide a file  location when complete.  For more details visit [shotstack.io](https://shotstack.io) or checkout our [getting started](https://shotstack.gitbook.io/docs/guides/getting-started) documentation. There are two main API's, one for editing and generating assets (Edit API) and one for managing hosted assets (Serve API).  The Edit API base URL is: <b>https://api.shotstack.io/{version}</b>  The Serve API base URL is: <b>https://api.shotstack.io/serve/{version}</b>
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITimeline.h
 *
 * A timeline represents the contents of a video edit over time, an audio edit over time, in seconds, or an image layout. A timeline consists of layers called tracks. Tracks are composed of titles, images, audio, html or video segments referred to as clips which are placed along the track at specific starting point and lasting for a specific amount of time.
 */

#ifndef OAITimeline_H
#define OAITimeline_H

#include <QJsonObject>

#include "OAIFont.h"
#include "OAISoundtrack.h"
#include "OAITrack.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIFont;
class OAISoundtrack;
class OAITrack;

class OAITimeline : public OAIObject {
public:
    OAITimeline();
    OAITimeline(QString json);
    ~OAITimeline() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBackground() const;
    void setBackground(const QString &background);
    bool is_background_Set() const;
    bool is_background_Valid() const;

    bool isCache() const;
    void setCache(const bool &cache);
    bool is_cache_Set() const;
    bool is_cache_Valid() const;

    QList<OAIFont> getFonts() const;
    void setFonts(const QList<OAIFont> &fonts);
    bool is_fonts_Set() const;
    bool is_fonts_Valid() const;

    OAISoundtrack getSoundtrack() const;
    void setSoundtrack(const OAISoundtrack &soundtrack);
    bool is_soundtrack_Set() const;
    bool is_soundtrack_Valid() const;

    QList<OAITrack> getTracks() const;
    void setTracks(const QList<OAITrack> &tracks);
    bool is_tracks_Set() const;
    bool is_tracks_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_background;
    bool m_background_isSet;
    bool m_background_isValid;

    bool m_cache;
    bool m_cache_isSet;
    bool m_cache_isValid;

    QList<OAIFont> m_fonts;
    bool m_fonts_isSet;
    bool m_fonts_isValid;

    OAISoundtrack m_soundtrack;
    bool m_soundtrack_isSet;
    bool m_soundtrack_isValid;

    QList<OAITrack> m_tracks;
    bool m_tracks_isSet;
    bool m_tracks_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITimeline)

#endif // OAITimeline_H
