/**
 * Shotstack
 * Shotstack is a video, image and audio editing service that allows for the automated generation of videos, images and audio using JSON and a RESTful API.  You arrange and configure an edit and POST it to the API which will render your media and provide a file  location when complete.  For more details visit [shotstack.io](https://shotstack.io) or checkout our [getting started](https://shotstack.gitbook.io/docs/guides/getting-started) documentation. There are two main API's, one for editing and generating assets (Edit API) and one for managing hosted assets (Serve API).  The Edit API base URL is: <b>https://api.shotstack.io/{version}</b>  The Serve API base URL is: <b>https://api.shotstack.io/serve/{version}</b>
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICrop.h
 *
 * Crop the sides of an asset by a relative amount. The size of the crop is specified using a scale between 0 and 1, relative to the screen width - i.e a left crop of 0.5 will crop half of the asset from the left, a top crop  of 0.25 will crop the top by quarter of the asset.
 */

#ifndef OAICrop_H
#define OAICrop_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICrop : public OAIObject {
public:
    OAICrop();
    OAICrop(QString json);
    ~OAICrop() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    float getBottom() const;
    void setBottom(const float &bottom);
    bool is_bottom_Set() const;
    bool is_bottom_Valid() const;

    float getLeft() const;
    void setLeft(const float &left);
    bool is_left_Set() const;
    bool is_left_Valid() const;

    float getRight() const;
    void setRight(const float &right);
    bool is_right_Set() const;
    bool is_right_Valid() const;

    float getTop() const;
    void setTop(const float &top);
    bool is_top_Set() const;
    bool is_top_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    float m_bottom;
    bool m_bottom_isSet;
    bool m_bottom_isValid;

    float m_left;
    bool m_left_isSet;
    bool m_left_isValid;

    float m_right;
    bool m_right_isSet;
    bool m_right_isValid;

    float m_top;
    bool m_top_isSet;
    bool m_top_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICrop)

#endif // OAICrop_H
