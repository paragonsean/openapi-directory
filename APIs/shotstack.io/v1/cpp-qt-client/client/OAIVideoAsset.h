/**
 * Shotstack
 * Shotstack is a video, image and audio editing service that allows for the automated generation of videos, images and audio using JSON and a RESTful API.  You arrange and configure an edit and POST it to the API which will render your media and provide a file  location when complete.  For more details visit [shotstack.io](https://shotstack.io) or checkout our [getting started](https://shotstack.gitbook.io/docs/guides/getting-started) documentation. There are two main API's, one for editing and generating assets (Edit API) and one for managing hosted assets (Serve API).  The Edit API base URL is: <b>https://api.shotstack.io/{version}</b>  The Serve API base URL is: <b>https://api.shotstack.io/serve/{version}</b>
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIVideoAsset.h
 *
 * The VideoAsset is used to create video sequences from video files. The src must be a publicly accessible URL to a video resource such as an mp4 file.
 */

#ifndef OAIVideoAsset_H
#define OAIVideoAsset_H

#include <QJsonObject>

#include "OAICrop.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICrop;

class OAIVideoAsset : public OAIObject {
public:
    OAIVideoAsset();
    OAIVideoAsset(QString json);
    ~OAIVideoAsset() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAICrop getCrop() const;
    void setCrop(const OAICrop &crop);
    bool is_crop_Set() const;
    bool is_crop_Valid() const;

    QString getSrc() const;
    void setSrc(const QString &src);
    bool is_src_Set() const;
    bool is_src_Valid() const;

    double getTrim() const;
    void setTrim(const double &trim);
    bool is_trim_Set() const;
    bool is_trim_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    double getVolume() const;
    void setVolume(const double &volume);
    bool is_volume_Set() const;
    bool is_volume_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAICrop m_crop;
    bool m_crop_isSet;
    bool m_crop_isValid;

    QString m_src;
    bool m_src_isSet;
    bool m_src_isValid;

    double m_trim;
    bool m_trim_isSet;
    bool m_trim_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    double m_volume;
    bool m_volume_isSet;
    bool m_volume_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIVideoAsset)

#endif // OAIVideoAsset_H
