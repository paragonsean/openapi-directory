# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.clip import Clip
from openapi_server import util


class Track(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, clips: List[Clip]=None):
        """Track - a model defined in OpenAPI

        :param clips: The clips of this Track.
        """
        self.openapi_types = {
            'clips': List[Clip]
        }

        self.attribute_map = {
            'clips': 'clips'
        }

        self._clips = clips

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Track':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Track of this Track.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def clips(self):
        """Gets the clips of this Track.

        An array of Clips comprising of TitleClip, ImageClip or VideoClip.

        :return: The clips of this Track.
        :rtype: List[Clip]
        """
        return self._clips

    @clips.setter
    def clips(self, clips):
        """Sets the clips of this Track.

        An array of Clips comprising of TitleClip, ImageClip or VideoClip.

        :param clips: The clips of this Track.
        :type clips: List[Clip]
        """
        if clips is None:
            raise ValueError("Invalid value for `clips`, must not be `None`")

        self._clips = clips
