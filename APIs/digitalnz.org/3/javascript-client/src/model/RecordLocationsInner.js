/**
 * DigitalNZ API
 * OpenAPI specification of DigitalNZ's Record API.   For more information about the API see [digitalnz.org/developers](https://digitalnz.org/developers).   To learn more about the metadata/fields used in the API see the [Metadata Dictionary](https://docs.google.com/document/pub?id=1Z3I_ckQWjnQQ4SzpORbClcIXUheO-Jd4jt-oZFuMcoQ).   To get a sense of what content is available via the API take a look at the search feature on the [DigitalNZ website](https://digitalnz.org/records?text=all%20sorts&tab=Images).   The [terms of use](https://digitalnz.org/about/terms-of-use/developer-api-terms-of-use) specify how developers can use the DigitalNZ API. 
 *
 * The version of the OpenAPI document: 3
 * Contact: develop@digitalnz.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The RecordLocationsInner model module.
 * @module model/RecordLocationsInner
 * @version 3
 */
class RecordLocationsInner {
    /**
     * Constructs a new <code>RecordLocationsInner</code>.
     * @alias module:model/RecordLocationsInner
     */
    constructor() { 
        
        RecordLocationsInner.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RecordLocationsInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RecordLocationsInner} obj Optional instance to populate.
     * @return {module:model/RecordLocationsInner} The populated <code>RecordLocationsInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RecordLocationsInner();

            if (data.hasOwnProperty('comment')) {
                obj['comment'] = ApiClient.convertToType(data['comment'], 'String');
            }
            if (data.hasOwnProperty('lat')) {
                obj['lat'] = ApiClient.convertToType(data['lat'], 'Number');
            }
            if (data.hasOwnProperty('lng')) {
                obj['lng'] = ApiClient.convertToType(data['lng'], 'Number');
            }
            if (data.hasOwnProperty('placename')) {
                obj['placename'] = ApiClient.convertToType(data['placename'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RecordLocationsInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RecordLocationsInner</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['comment'] && !(typeof data['comment'] === 'string' || data['comment'] instanceof String)) {
            throw new Error("Expected the field `comment` to be a primitive type in the JSON string but got " + data['comment']);
        }
        // ensure the json data is a string
        if (data['placename'] && !(typeof data['placename'] === 'string' || data['placename'] instanceof String)) {
            throw new Error("Expected the field `placename` to be a primitive type in the JSON string but got " + data['placename']);
        }

        return true;
    }


}



/**
 * Describes who provided this location metadata.
 * @member {String} comment
 */
RecordLocationsInner.prototype['comment'] = undefined;

/**
 * @member {Number} lat
 */
RecordLocationsInner.prototype['lat'] = undefined;

/**
 * @member {Number} lng
 */
RecordLocationsInner.prototype['lng'] = undefined;

/**
 * @member {String} placename
 */
RecordLocationsInner.prototype['placename'] = undefined;






export default RecordLocationsInner;

