/**
 * DigitalNZ API
 * OpenAPI specification of DigitalNZ's Record API.   For more information about the API see [digitalnz.org/developers](https://digitalnz.org/developers).   To learn more about the metadata/fields used in the API see the [Metadata Dictionary](https://docs.google.com/document/pub?id=1Z3I_ckQWjnQQ4SzpORbClcIXUheO-Jd4jt-oZFuMcoQ).   To get a sense of what content is available via the API take a look at the search feature on the [DigitalNZ website](https://digitalnz.org/records?text=all%20sorts&tab=Images).   The [terms of use](https://digitalnz.org/about/terms-of-use/developer-api-terms-of-use) specify how developers can use the DigitalNZ API. 
 *
 * The version of the OpenAPI document: 3
 * Contact: develop@digitalnz.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.DigitalNzApi);
  }
}(this, function(expect, DigitalNzApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new DigitalNzApi.Record();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Record', function() {
    it('should create an instance of Record', function() {
      // uncomment below and update the code to test Record
      //var instance = new DigitalNzApi.Record();
      //expect(instance).to.be.a(DigitalNzApi.Record);
    });

    it('should have the property category (base name: "category")', function() {
      // uncomment below and update the code to test the property category
      //var instance = new DigitalNzApi.Record();
      //expect(instance).to.be();
    });

    it('should have the property collection (base name: "collection")', function() {
      // uncomment below and update the code to test the property collection
      //var instance = new DigitalNzApi.Record();
      //expect(instance).to.be();
    });

    it('should have the property collectionTitle (base name: "collection_title")', function() {
      // uncomment below and update the code to test the property collectionTitle
      //var instance = new DigitalNzApi.Record();
      //expect(instance).to.be();
    });

    it('should have the property contentPartner (base name: "content_partner")', function() {
      // uncomment below and update the code to test the property contentPartner
      //var instance = new DigitalNzApi.Record();
      //expect(instance).to.be();
    });

    it('should have the property copyright (base name: "copyright")', function() {
      // uncomment below and update the code to test the property copyright
      //var instance = new DigitalNzApi.Record();
      //expect(instance).to.be();
    });

    it('should have the property createdAt (base name: "created_at")', function() {
      // uncomment below and update the code to test the property createdAt
      //var instance = new DigitalNzApi.Record();
      //expect(instance).to.be();
    });

    it('should have the property creator (base name: "creator")', function() {
      // uncomment below and update the code to test the property creator
      //var instance = new DigitalNzApi.Record();
      //expect(instance).to.be();
    });

    it('should have the property date (base name: "date")', function() {
      // uncomment below and update the code to test the property date
      //var instance = new DigitalNzApi.Record();
      //expect(instance).to.be();
    });

    it('should have the property dcIdentifier (base name: "dc_identifier")', function() {
      // uncomment below and update the code to test the property dcIdentifier
      //var instance = new DigitalNzApi.Record();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new DigitalNzApi.Record();
      //expect(instance).to.be();
    });

    it('should have the property displayCollection (base name: "display_collection")', function() {
      // uncomment below and update the code to test the property displayCollection
      //var instance = new DigitalNzApi.Record();
      //expect(instance).to.be();
    });

    it('should have the property displayContentPartner (base name: "display_content_partner")', function() {
      // uncomment below and update the code to test the property displayContentPartner
      //var instance = new DigitalNzApi.Record();
      //expect(instance).to.be();
    });

    it('should have the property displayDate (base name: "display_date")', function() {
      // uncomment below and update the code to test the property displayDate
      //var instance = new DigitalNzApi.Record();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new DigitalNzApi.Record();
      //expect(instance).to.be();
    });

    it('should have the property landingUrl (base name: "landing_url")', function() {
      // uncomment below and update the code to test the property landingUrl
      //var instance = new DigitalNzApi.Record();
      //expect(instance).to.be();
    });

    it('should have the property largeThumbnailUrl (base name: "large_thumbnail_url")', function() {
      // uncomment below and update the code to test the property largeThumbnailUrl
      //var instance = new DigitalNzApi.Record();
      //expect(instance).to.be();
    });

    it('should have the property locations (base name: "locations")', function() {
      // uncomment below and update the code to test the property locations
      //var instance = new DigitalNzApi.Record();
      //expect(instance).to.be();
    });

    it('should have the property primaryCollection (base name: "primary_collection")', function() {
      // uncomment below and update the code to test the property primaryCollection
      //var instance = new DigitalNzApi.Record();
      //expect(instance).to.be();
    });

    it('should have the property rights (base name: "rights")', function() {
      // uncomment below and update the code to test the property rights
      //var instance = new DigitalNzApi.Record();
      //expect(instance).to.be();
    });

    it('should have the property rightsUrl (base name: "rights_url")', function() {
      // uncomment below and update the code to test the property rightsUrl
      //var instance = new DigitalNzApi.Record();
      //expect(instance).to.be();
    });

    it('should have the property sourceUrl (base name: "source_url")', function() {
      // uncomment below and update the code to test the property sourceUrl
      //var instance = new DigitalNzApi.Record();
      //expect(instance).to.be();
    });

    it('should have the property subject (base name: "subject")', function() {
      // uncomment below and update the code to test the property subject
      //var instance = new DigitalNzApi.Record();
      //expect(instance).to.be();
    });

    it('should have the property thumbnailUrl (base name: "thumbnail_url")', function() {
      // uncomment below and update the code to test the property thumbnailUrl
      //var instance = new DigitalNzApi.Record();
      //expect(instance).to.be();
    });

    it('should have the property title (base name: "title")', function() {
      // uncomment below and update the code to test the property title
      //var instance = new DigitalNzApi.Record();
      //expect(instance).to.be();
    });

    it('should have the property updatedAt (base name: "updated_at")', function() {
      // uncomment below and update the code to test the property updatedAt
      //var instance = new DigitalNzApi.Record();
      //expect(instance).to.be();
    });

    it('should have the property usage (base name: "usage")', function() {
      // uncomment below and update the code to test the property usage
      //var instance = new DigitalNzApi.Record();
      //expect(instance).to.be();
    });

  });

}));
