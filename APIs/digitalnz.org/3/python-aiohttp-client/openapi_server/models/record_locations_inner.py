# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RecordLocationsInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, comment: str=None, lat: float=None, lng: float=None, placename: str=None):
        """RecordLocationsInner - a model defined in OpenAPI

        :param comment: The comment of this RecordLocationsInner.
        :param lat: The lat of this RecordLocationsInner.
        :param lng: The lng of this RecordLocationsInner.
        :param placename: The placename of this RecordLocationsInner.
        """
        self.openapi_types = {
            'comment': str,
            'lat': float,
            'lng': float,
            'placename': str
        }

        self.attribute_map = {
            'comment': 'comment',
            'lat': 'lat',
            'lng': 'lng',
            'placename': 'placename'
        }

        self._comment = comment
        self._lat = lat
        self._lng = lng
        self._placename = placename

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RecordLocationsInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The record_locations_inner of this RecordLocationsInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def comment(self):
        """Gets the comment of this RecordLocationsInner.

        Describes who provided this location metadata.

        :return: The comment of this RecordLocationsInner.
        :rtype: str
        """
        return self._comment

    @comment.setter
    def comment(self, comment):
        """Sets the comment of this RecordLocationsInner.

        Describes who provided this location metadata.

        :param comment: The comment of this RecordLocationsInner.
        :type comment: str
        """

        self._comment = comment

    @property
    def lat(self):
        """Gets the lat of this RecordLocationsInner.


        :return: The lat of this RecordLocationsInner.
        :rtype: float
        """
        return self._lat

    @lat.setter
    def lat(self, lat):
        """Sets the lat of this RecordLocationsInner.


        :param lat: The lat of this RecordLocationsInner.
        :type lat: float
        """

        self._lat = lat

    @property
    def lng(self):
        """Gets the lng of this RecordLocationsInner.


        :return: The lng of this RecordLocationsInner.
        :rtype: float
        """
        return self._lng

    @lng.setter
    def lng(self, lng):
        """Sets the lng of this RecordLocationsInner.


        :param lng: The lng of this RecordLocationsInner.
        :type lng: float
        """

        self._lng = lng

    @property
    def placename(self):
        """Gets the placename of this RecordLocationsInner.


        :return: The placename of this RecordLocationsInner.
        :rtype: str
        """
        return self._placename

    @placename.setter
    def placename(self, placename):
        """Sets the placename of this RecordLocationsInner.


        :param placename: The placename of this RecordLocationsInner.
        :type placename: str
        """

        self._placename = placename
