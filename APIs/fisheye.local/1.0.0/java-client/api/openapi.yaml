openapi: 3.0.1
info:
  contact: {}
  title: FishEye
  version: 1.0.0
  x-apisguru-categories:
  - developer_tools
  x-logo:
    url: https://twitter.com/Atlassian/profile_image?size=original
  x-origin:
  - converter:
      url: https://github.com/lucybot/api-spec-converter
      version: 2.7.18
    format: wadl
    url: https://docs.atlassian.com/fisheye-crucible/latest_backup/wadl/fisheye.wadl
    version: "1.0"
  x-providerName: fisheye.local
servers:
- url: http://fisheye.local/context/
paths:
  /rest-service-fe/changeset-v1/listChangesets:
    get:
      description: List of changesets from a repository.
      operationId: getChangesetsForText
      parameters:
      - description: the key of the repository
        in: query
        name: rep
        schema:
          type: string
      - description: repository path
        in: query
        name: path
        schema:
          type: string
      - description: ID of the committer
        in: query
        name: committer
        schema:
          type: string
      - description: comment to match
        in: query
        name: comment
        schema:
          type: string
      - description: Perforce option to select the changesets marked as fixing
        in: query
        name: p4JobFixed
        schema:
          type: string
      - description: expand query parameter to specify the maximum number of results
        in: query
        name: expand
        schema:
          type: string
      - description: parent of the changesets
        in: query
        name: beforeCsid
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
  /rest-service-fe/commit-graph-v1/details/{repository}:
    post:
      description: "Retrieves detailed information about a set of changesets in a\
        \ repository, designed to be used with the FishEye commit graph"
      operationId: getChangesetDetails
      parameters:
      - description: the key of the repository
        in: path
        name: repository
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
  /rest-service-fe/commit-graph-v1/slice/{repository}:
    get:
      description: finds slice data the query
      operationId: findSliceData
      parameters:
      - description: the key of the repository to search
        in: path
        name: repository
        required: true
        schema:
          type: string
      - description: "the set of branches to search. If not specified, will search\
          \ all branches"
        in: query
        name: branch
        schema:
          type: string
      - description: the id of the changeset which we are
        in: query
        name: id
        schema:
          type: string
      - description: "the direction to traverse. May be \"before\", \"after\" or \"\
          around\""
        in: query
        name: direction
        schema:
          default: around
          type: string
      - description: the number of changesets to return in the slice
        in: query
        name: size
        schema:
          default: 50
          format: int32
          type: integer
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
  /rest-service-fe/repositories-v1:
    get:
      description: List all the repositories.
      operationId: getAllRepositories
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
  /rest-service-fe/repositories-v1/{repository}:
    get:
      description: Get the information about a repository.
      operationId: getRepositoryInfo
      parameters:
      - description: the key of the repository
        in: path
        name: repository
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
  /rest-service-fe/revisionData-v1/changeset/{repository}/{csid}:
    get:
      operationId: getChangeset
      parameters:
      - description: the ChangesetID of the changeset to return.
        in: path
        name: csid
        required: true
        schema:
          type: string
      - description: the key of the repository to query.
        in: path
        name: repository
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
  /rest-service-fe/revisionData-v1/changesetList/{repository}:
    get:
      description: Get a list of changesets on a repository.
      operationId: listChangesets
      parameters:
      - description: the key of the repository to query.
        in: path
        name: repository
        required: true
        schema:
          type: string
      - description: "restrict the changesets to those in this path, should be \"\
          /\" to look at the whole repository."
        in: query
        name: path
        schema:
          type: string
      - description: only return changesets after this date.
        in: query
        name: start
        schema:
          type: string
      - description: only return changesets before this date.
        in: query
        name: end
        schema:
          type: string
      - description: the maximum number of changesets to return.
        in: query
        name: maxReturn
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
  /rest-service-fe/revisionData-v1/pathHistory/{repository}:
    get:
      description: Get a list of the file revisions for a specific path.
      operationId: listPathHistory
      parameters:
      - description: the key of the repository to query.
        in: path
        name: repository
        required: true
        schema:
          type: string
      - description: the path to query.
        in: query
        name: path
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
  /rest-service-fe/revisionData-v1/pathList/{repository}:
    get:
      description: Get a list of information about files and directories in a path.
      operationId: getPathList
      parameters:
      - description: the key of the repository to query.
        in: path
        name: repository
        required: true
        schema:
          type: string
      - description: "the path to query, with respect to the fisheye repository root."
        in: query
        name: path
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
  /rest-service-fe/revisionData-v1/revisionInfo/{repository}:
    get:
      operationId: getRevisionInfo
      parameters:
      - description: the key of the repository to query.
        in: path
        name: repository
        required: true
        schema:
          type: string
      - description: "the path of the filerevision, with respect to the fisheye repository\
          \ root."
        in: query
        name: path
        schema:
          type: string
      - description: the id of the filerevision to retrieve.
        in: query
        name: revision
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
  /rest-service-fe/revisionData-v1/revisionTags/{repository}:
    get:
      operationId: listTagsForRevision
      parameters:
      - description: the key of the repository to query.
        in: path
        name: repository
        required: true
        schema:
          type: string
      - description: "the path of the filerevision, with respect to the fisheye repository\
          \ root."
        in: query
        name: path
        schema:
          type: string
      - description: the id of the filerevision to retrieve.
        in: query
        name: revision
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
  /rest-service-fe/search-v1/crossRepositoryQuery:
    get:
      description: "Execute a query across repositories. By default, this will search\
        \ all repositories."
      operationId: getCrossRepositoryQuery
      parameters:
      - description: text to search for in commit message and p4 jobId. Must not be
          empty.
        in: query
        name: query
        schema:
          type: string
      - description: restrict search to only these repositories (by their keys)
        in: query
        name: repository
        schema:
          type: string
      - description: |-
          expand query parameter to specify the maximum number of results. Format is changesets[n:m].revisions[n:m],reviews
                  the default number of changesets returned is 30, the maximum returned is 100
        in: query
        name: expand
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
  /rest-service-fe/search-v1/query/{repository}:
    get:
      description: Execute a FishEye query against a specific repository.
      operationId: getQuery
      parameters:
      - description: the key of the repository
        in: path
        name: repository
        required: true
        schema:
          type: string
      - description: FishEye query to execute
        in: query
        name: query
        schema:
          type: string
      - description: |-
          maximum number of results (which can be left unspecified, but in that case,
           the maximum number of results will set to 3000 results)
        in: query
        name: maxReturn
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
  /rest-service-fe/search-v1/queryAsRows/{repository}:
    get:
      description: Execute a FishEye query (that contains a "return" statement) against
        a specific repository.
      operationId: getQueryAsRows
      parameters:
      - description: the key of the repository
        in: path
        name: repository
        required: true
        schema:
          type: string
      - description: FishEye query to execute (which must contain a "return" statement)
        in: query
        name: query
        schema:
          type: string
      - description: |-
          maximum number of results (which can be left unspecified, but in that case,
           the maximum number of results will set to 3000 results)
        in: query
        name: maxReturn
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
  /rest-service-fe/search-v1/reviewsForChangeset/{repository}:
    post:
      description: Retrieve a list of reviews for a changeset in a given repository.
      operationId: getReviewsForChangeset
      parameters:
      - description: the key of the repository
        in: path
        name: repository
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
  /rest-service-fe/search-v1/reviewsForChangesets/{repository}:
    post:
      description: Retrieve a list of reviews for each given changeset in a given
        repository.
      operationId: getReviewsForChangesets
      parameters:
      - description: the key of the repository
        in: path
        name: repository
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Successful Response
      x-accepts:
      - application/json
components:
  schemas: {}
x-original-swagger-version: "2.0"

