# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EcEntropyDistributionInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, char: str=None, l33tchar: str=None, percentage: float=None):
        """EcEntropyDistributionInner - a model defined in OpenAPI

        :param char: The char of this EcEntropyDistributionInner.
        :param l33tchar: The l33tchar of this EcEntropyDistributionInner.
        :param percentage: The percentage of this EcEntropyDistributionInner.
        """
        self.openapi_types = {
            'char': str,
            'l33tchar': str,
            'percentage': float
        }

        self.attribute_map = {
            'char': 'char',
            'l33tchar': 'l33tchar',
            'percentage': 'percentage'
        }

        self._char = char
        self._l33tchar = l33tchar
        self._percentage = percentage

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EcEntropyDistributionInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ec_entropyDistribution_inner of this EcEntropyDistributionInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def char(self):
        """Gets the char of this EcEntropyDistributionInner.

        The n-th character.

        :return: The char of this EcEntropyDistributionInner.
        :rtype: str
        """
        return self._char

    @char.setter
    def char(self, char):
        """Sets the char of this EcEntropyDistributionInner.

        The n-th character.

        :param char: The char of this EcEntropyDistributionInner.
        :type char: str
        """

        self._char = char

    @property
    def l33tchar(self):
        """Gets the l33tchar of this EcEntropyDistributionInner.

        The n-th character after the l33t transformation.

        :return: The l33tchar of this EcEntropyDistributionInner.
        :rtype: str
        """
        return self._l33tchar

    @l33tchar.setter
    def l33tchar(self, l33tchar):
        """Sets the l33tchar of this EcEntropyDistributionInner.

        The n-th character after the l33t transformation.

        :param l33tchar: The l33tchar of this EcEntropyDistributionInner.
        :type l33tchar: str
        """

        self._l33tchar = l33tchar

    @property
    def percentage(self):
        """Gets the percentage of this EcEntropyDistributionInner.

        The amount of entropy contributed by this character, expressed as percentage of the total.

        :return: The percentage of this EcEntropyDistributionInner.
        :rtype: float
        """
        return self._percentage

    @percentage.setter
    def percentage(self, percentage):
        """Sets the percentage of this EcEntropyDistributionInner.

        The amount of entropy contributed by this character, expressed as percentage of the total.

        :param percentage: The percentage of this EcEntropyDistributionInner.
        :type percentage: float
        """

        self._percentage = percentage
