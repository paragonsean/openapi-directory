openapi: 3.0.0
info:
  description: Analyzes a password and calculates its entropy.
  title: Arespass
  version: "1.0"
  x-origin:
  - format: openapi
    url: https://arespass.net/assets/arespassv1.0-openapi.yaml
    version: "3.0"
  x-providerName: arespass.net
servers:
- url: http://arespass.net/v1.0
paths:
  /about:
    get:
      operationId: about_get
      parameters:
      - description: |
          **The format of the returned metadata.**

          Allowed values are *json*, *xml* and *yaml*.

          The default value is *xml*.
        explode: true
        in: query
        name: outputFormat
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/about'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/about'
            application/xml:
              schema:
                $ref: '#/components/schemas/about'
          description: |
            **The metadata about this API&#58; version number, release date and available languages.**
        "400":
          description: |
            **At least one error was found in the request parameters.**
        "405":
          description: |
            **HTTP method POST is not allowed.**
        "500":
          description: "**Unexpected server error.**                \n"
      summary: |
        Metadata about this API&#58; version number, release date and available languages.

        Metadata requests are NOT billed.
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /ec:
    get:
      operationId: ec_get
      parameters:
      - description: |
          **The password to be analyzed.**

          Minimum length is 4 characters; maximum length is 128 characters.

          Beware that certain characters like '&#35;', '&#61;' or '&#63;' must be properly encoded.

          For more information about this issue, please refer to RFC 3986 ("*Uniform Resource Identifier (URI): Generic Syntax*"), sections 2.1, 2.2 and 2.4.
        explode: true
        in: query
        name: password
        required: true
        schema:
          type: string
        style: form
      - description: |
          **The format of the returned analysis.**

          Allowed values are *json*, *xml* and *yaml*.

          The default value is *xml*.
        explode: true
        in: query
        name: outputFormat
        required: false
        schema:
          type: string
        style: form
      - description: |
          **The penalty applied to each character that is part of a word, number sequence, alphabet sequence, etc.**

          The penalty is a float number in the range [0, 1]. Full penalty, 0; no penalty, 1.

          The character used as decimal separator is always '&#46;'. Hence, a parameter value like *0,33* would be illegal.

          The default value is *0.25*.
        explode: true
        in: query
        name: penalty
        required: false
        schema:
          type: number
        style: form
      - description: |
          **An identifier for this request.**

          The request identifier is a string that must match the regular expression */(?i)^[a-z0-9]{8,16}$/*.

          This identifier is echoed in the returned response. Its value has no effect on the password analysis.

          If this parameter is unset, a randomly generated identifier will be automatically assigned to this request.
        explode: true
        in: query
        name: reqId
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ec'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ec'
            application/xml:
              schema:
                $ref: '#/components/schemas/ec'
          description: "The password analysis, including the calculated entropy."
        "400":
          description: |
            **At least one error was found in the request parameters.**
        "405":
          description: |
            **HTTP method POST is not allowed.**
        "500":
          description: |
            **Unexpected server error.**
      summary: |
        The entropy calculator - alias ec -, analyzes a password and calculates its entropy.

        Entropy calculator requests are billed.
      x-openapi-router-controller: openapi_server.controllers.default_controller
components:
  schemas:
    about:
      description: |
        **This API version number**.
      example:
        apiVersion:
          majorNumber: 0
          minorNumber: 6
        availableLanguagesIso639_1: availableLanguagesIso639_1
        apiReleaseDateIso8601: apiReleaseDateIso8601
      properties:
        apiReleaseDateIso8601:
          description: |
            **The release date of this API, ISO 8601 format.**
          title: apiReleaseDateIso8601
          type: string
        apiVersion:
          $ref: '#/components/schemas/about_apiVersion'
        availableLanguagesIso639_1:
          description: |
            **The list of available languages.**

            Each language is identified by its ISO 639-1, two-letter code.

            The list elements are comma-separated and sorted in ascending order.
          title: availableLanguagesIso639_1
          type: string
      title: about
      type: object
    ec:
      example:
        summary:
        - summary
        - summary
        efficiency: 6.027456183070403
        requestTimestamp: 7.386281948385884
        keyboardSequence:
        - penalty: 2.3021358869347655
          char: char
          l33tchar: l33tchar
        - penalty: 2.3021358869347655
          char: char
          l33tchar: l33tchar
        penalty: 2.027123023002322
        idealEntropy: 5.637376656633329
        words:
        - penalty: 1.0246457001441578
          char: char
          l33tchar: l33tchar
        - penalty: 1.0246457001441578
          char: char
          l33tchar: l33tchar
        l33tPassword: l33tPassword
        repeatedChars:
        - penalty: 4.145608029883936
          char: char
          l33tchar: l33tchar
        - penalty: 4.145608029883936
          char: char
          l33tchar: l33tchar
        passwordLength: 3
        alphabetSequence:
        - penalty: 0.8008281904610115
          char: char
          l33tchar: l33tchar
        - penalty: 0.8008281904610115
          char: char
          l33tchar: l33tchar
        detectedKeyboard: detectedKeyboard
        password: password
        total:
        - penalty: 1.2315135367772556
          char: char
          l33tchar: l33tchar
        - penalty: 1.2315135367772556
          char: char
          l33tchar: l33tchar
        apiVersion: apiVersion
        entropy: 1.4658129805029452
        numberSequence:
        - penalty: 9.301444243932576
          char: char
          l33tchar: l33tchar
        - penalty: 9.301444243932576
          char: char
          l33tchar: l33tchar
        requestId: requestId
        entropyDistribution:
        - percentage: 5.962133916683182
          char: char
          l33tchar: l33tchar
        - percentage: 5.962133916683182
          char: char
          l33tchar: l33tchar
        nonUniformEntropyDistributionPenalty: 7.061401241503109
      properties:
        alphabetSequence:
          description: |
            **The penalty applied to each character that has been found to be part of an alphabet sequence.**

            The penalty is a float number in the range [0, 1]. Full penalty, 0; no penalty, 1.
          items:
            $ref: '#/components/schemas/ec_alphabetSequence_inner'
          title: alphabetSequence
          type: array
        apiVersion:
          description: |
            **This API version number.**
          title: apiVersion
          type: string
        detectedKeyboard:
          description: |
            **The detected keyboard, QWERTY or Dvorak.**
          title: detectedKeyboard
          type: string
        efficiency:
          description: |
            **The ratio entropy / idealEntropy.**

            It is a float number in the range [0, 1].
          title: efficiency
          type: number
        entropy:
          description: |
            **The entropy calculated for the input password.**

            It is measured in bits.
          title: entropy
          type: number
        entropyDistribution:
          description: |
            **The distribution of the calculated entropy among the password characters.**
          items:
            $ref: '#/components/schemas/ec_entropyDistribution_inner'
          title: entropyDistribution
          type: array
        idealEntropy:
          description: |
            **The Shannon entropy.**

            The Shannon entropy is the entropy calculated if no penalizations - words, number sequence, alphabet sequence, etc - were found in the password.

            It is measured in bits.
          title: idealEntropy
          type: number
        keyboardSequence:
          description: |
            **The penalty applied to each character that has been found to be part of a keyboard sequence.**

            The penalty is a float number in the range [0, 1]. Full penalty, 0; no penalty, 1.
          items:
            $ref: '#/components/schemas/ec_keyboardSequence_inner'
          title: keyboardSequence
          type: array
        l33tPassword:
          description: The analyzed password after the l33t substitution.
          title: l33tPassword
          type: string
        nonUniformEntropyDistributionPenalty:
          description: |
            **The penalty applied to the whole password because of irregular entropy distribution.**

            This penalty is a float number in the range [0, 1]. Full penalty, 0; no penalty, 1.
          title: nonUniformEntropyDistributionPenalty
          type: number
        numberSequence:
          description: |
            **The penalty applied to each character that has been found to be part of a number sequence.**

            The penalty is a float number in the range [0, 1]. Full penalty, 0; no penalty, 1.
          items:
            $ref: '#/components/schemas/ec_numberSequence_inner'
          title: numberSequence
          type: array
        password:
          description: The analyzed password.
          title: password
          type: string
        passwordLength:
          description: The number of characters the password has.
          title: passwordLength
          type: integer
        penalty:
          description: |
            **The penalty applied to each character that has been found to be part of a word, number sequence, alphabet sequence, etc.**

            The penalty is a float number in the range [0, 1]. Full penalty, 0; no penalty, 1.

            Its value is equal to the value of the input parameter *penalty*.
          title: penalty
          type: number
        repeatedChars:
          description: "**The penalty applied to each character that are repeated**\n\
            \nThe penalty is a float number in the range [0, 1]. Full penalty, 0;\
            \ no penalty, 1.          \n"
          items:
            $ref: '#/components/schemas/ec_repeatedChars_inner'
          title: repeatedChars
          type: array
        requestId:
          description: |
            **The identifier of the request that corresponds to this response.**
          title: requestId
          type: string
        requestTimestamp:
          description: |
            **The timestamp for this response.**

            Milliseconds from the epoch of 1970-01-01T00:00:00Z.
          title: requestTimestamp
          type: number
        summary:
          items:
            description: |
              **A human-readable summary of the password analysis.**

              This human readable summary is not intended to be parsed.
            type: string
          title: summary
          type: array
        total:
          description: |
            **The total penalty applied to each character.**

            The penalty is a float number in the range [0, 1]. Full penalty, 0; no penalty, 1.
          items:
            $ref: '#/components/schemas/ec_total_inner'
          title: total
          type: array
        words:
          description: |
            **The penalty applied to each character that has been found to be part of a word.**

            The penalty is a float number in the range [0, 1]. Full penalty, 0; no penalty, 1.
          items:
            $ref: '#/components/schemas/ec_words_inner'
          title: words
          type: array
      title: ec
      type: object
    about_apiVersion:
      example:
        majorNumber: 0
        minorNumber: 6
      properties:
        majorNumber:
          description: This API version major number.
          title: majorNumber
          type: integer
          xml:
            attribute: true
        minorNumber:
          description: This API version minor number.
          title: minorNumber
          type: integer
          xml:
            attribute: true
      title: about_apiVersion
      type: object
    ec_alphabetSequence_inner:
      example:
        penalty: 0.8008281904610115
        char: char
        l33tchar: l33tchar
      properties:
        char:
          description: The n-th character.
          title: char
          type: string
          xml:
            attribute: true
        l33tchar:
          description: The n-th character after the l33t transformation.
          title: l33tchar
          type: string
          xml:
            attribute: true
        penalty:
          description: |
            The penalty applied to this character if it is part of an alphabet sequence.

            The penalty is a float number in the range [0, 1]. Full penalty, 0; no penalty, 1.
          title: penalty
          type: number
          xml:
            attribute: true
      title: ec_alphabetSequence_inner
      type: object
    ec_entropyDistribution_inner:
      example:
        percentage: 5.962133916683182
        char: char
        l33tchar: l33tchar
      properties:
        char:
          description: The n-th character.
          title: char
          type: string
          xml:
            attribute: true
        l33tchar:
          description: The n-th character after the l33t transformation.
          title: l33tchar
          type: string
          xml:
            attribute: true
        percentage:
          description: "The amount of entropy contributed by this character, expressed\
            \ as percentage of the total."
          title: percentage
          type: number
          xml:
            attribute: true
      title: ec_entropyDistribution_inner
      type: object
    ec_keyboardSequence_inner:
      example:
        penalty: 2.3021358869347655
        char: char
        l33tchar: l33tchar
      properties:
        char:
          description: The n-th character.
          title: char
          type: string
          xml:
            attribute: true
        l33tchar:
          description: The n-th character after the l33t transformation.
          title: l33tchar
          type: string
          xml:
            attribute: true
        penalty:
          description: |
            The penalty applied to this character if it is part of a keyboard sequence.

            The penalty is a float number in the range [0, 1]. Full penalty, 0; no penalty, 1.
          title: penalty
          type: number
          xml:
            attribute: true
      title: ec_keyboardSequence_inner
      type: object
    ec_numberSequence_inner:
      example:
        penalty: 9.301444243932576
        char: char
        l33tchar: l33tchar
      properties:
        char:
          description: The n-th character.
          title: char
          type: string
          xml:
            attribute: true
        l33tchar:
          description: The n-th character after the l33t transformation.
          title: l33tchar
          type: string
          xml:
            attribute: true
        penalty:
          description: |
            The penalty applied to this character if it is part of a number sequence.

            The penalty is a float number in the range [0, 1]. Full penalty, 0; no penalty, 1.
          title: penalty
          type: number
          xml:
            attribute: true
      title: ec_numberSequence_inner
      type: object
    ec_repeatedChars_inner:
      example:
        penalty: 4.145608029883936
        char: char
        l33tchar: l33tchar
      properties:
        char:
          description: The n-th character.
          title: char
          type: string
          xml:
            attribute: true
        l33tchar:
          description: The n-th character after the l33t transformation.
          title: l33tchar
          type: string
          xml:
            attribute: true
        penalty:
          description: |
            The penalty applied to this character if it is repeated.

            The penalty is a float number in the range [0, 1]. Full penalty, 0; no penalty, 1.
          title: penalty
          type: number
          xml:
            attribute: true
      title: ec_repeatedChars_inner
      type: object
    ec_total_inner:
      example:
        penalty: 1.2315135367772556
        char: char
        l33tchar: l33tchar
      properties:
        char:
          description: The n-th character.
          title: char
          type: string
          xml:
            attribute: true
        l33tchar:
          description: The n-th character after the l33t transformation.
          title: l33tchar
          type: string
          xml:
            attribute: true
        penalty:
          description: "The total penalty applied to each character.\n\nThe penalty\
            \ is a float number in the range [0, 1]. Full penalty, 0; no penalty,\
            \ 1.                \n"
          title: penalty
          type: number
          xml:
            attribute: true
      title: ec_total_inner
      type: object
    ec_words_inner:
      example:
        penalty: 1.0246457001441578
        char: char
        l33tchar: l33tchar
      properties:
        char:
          description: The n-th character.
          title: char
          type: string
          xml:
            attribute: true
        l33tchar:
          description: The n-th character after the l33t transformation.
          title: l33tchar
          type: string
          xml:
            attribute: true
        penalty:
          description: "The penalty applied to this character if it is part of a word.\n\
            \nThe penalty is a float number in the range [0, 1]. Full penalty, 0;\
            \ no penalty, 1.                \n"
          title: penalty
          type: number
          xml:
            attribute: true
      title: ec_words_inner
      type: object
