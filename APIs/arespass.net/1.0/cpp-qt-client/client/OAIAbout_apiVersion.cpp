/**
 * Arespass
 * Analyzes a password and calculates its entropy.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAbout_apiVersion.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAbout_apiVersion::OAIAbout_apiVersion(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAbout_apiVersion::OAIAbout_apiVersion() {
    this->initializeModel();
}

OAIAbout_apiVersion::~OAIAbout_apiVersion() {}

void OAIAbout_apiVersion::initializeModel() {

    m_major_number_isSet = false;
    m_major_number_isValid = false;

    m_minor_number_isSet = false;
    m_minor_number_isValid = false;
}

void OAIAbout_apiVersion::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAbout_apiVersion::fromJsonObject(QJsonObject json) {

    m_major_number_isValid = ::OpenAPI::fromJsonValue(m_major_number, json[QString("majorNumber")]);
    m_major_number_isSet = !json[QString("majorNumber")].isNull() && m_major_number_isValid;

    m_minor_number_isValid = ::OpenAPI::fromJsonValue(m_minor_number, json[QString("minorNumber")]);
    m_minor_number_isSet = !json[QString("minorNumber")].isNull() && m_minor_number_isValid;
}

QString OAIAbout_apiVersion::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAbout_apiVersion::asJsonObject() const {
    QJsonObject obj;
    if (m_major_number_isSet) {
        obj.insert(QString("majorNumber"), ::OpenAPI::toJsonValue(m_major_number));
    }
    if (m_minor_number_isSet) {
        obj.insert(QString("minorNumber"), ::OpenAPI::toJsonValue(m_minor_number));
    }
    return obj;
}

qint32 OAIAbout_apiVersion::getMajorNumber() const {
    return m_major_number;
}
void OAIAbout_apiVersion::setMajorNumber(const qint32 &major_number) {
    m_major_number = major_number;
    m_major_number_isSet = true;
}

bool OAIAbout_apiVersion::is_major_number_Set() const{
    return m_major_number_isSet;
}

bool OAIAbout_apiVersion::is_major_number_Valid() const{
    return m_major_number_isValid;
}

qint32 OAIAbout_apiVersion::getMinorNumber() const {
    return m_minor_number;
}
void OAIAbout_apiVersion::setMinorNumber(const qint32 &minor_number) {
    m_minor_number = minor_number;
    m_minor_number_isSet = true;
}

bool OAIAbout_apiVersion::is_minor_number_Set() const{
    return m_minor_number_isSet;
}

bool OAIAbout_apiVersion::is_minor_number_Valid() const{
    return m_minor_number_isValid;
}

bool OAIAbout_apiVersion::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_major_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_minor_number_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAbout_apiVersion::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
