/**
 * Arespass
 * Analyzes a password and calculates its entropy.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEc_words_inner.h
 *
 * 
 */

#ifndef OAIEc_words_inner_H
#define OAIEc_words_inner_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIEc_words_inner : public OAIObject {
public:
    OAIEc_words_inner();
    OAIEc_words_inner(QString json);
    ~OAIEc_words_inner() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getRChar() const;
    void setRChar(const QString &r_char);
    bool is_r_char_Set() const;
    bool is_r_char_Valid() const;

    QString getL33tchar() const;
    void setL33tchar(const QString &l33tchar);
    bool is_l33tchar_Set() const;
    bool is_l33tchar_Valid() const;

    double getPenalty() const;
    void setPenalty(const double &penalty);
    bool is_penalty_Set() const;
    bool is_penalty_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_r_char;
    bool m_r_char_isSet;
    bool m_r_char_isValid;

    QString m_l33tchar;
    bool m_l33tchar_isSet;
    bool m_l33tchar_isValid;

    double m_penalty;
    bool m_penalty_isSet;
    bool m_penalty_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEc_words_inner)

#endif // OAIEc_words_inner_H
