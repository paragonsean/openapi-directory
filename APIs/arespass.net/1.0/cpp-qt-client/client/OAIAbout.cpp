/**
 * Arespass
 * Analyzes a password and calculates its entropy.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAbout.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAbout::OAIAbout(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAbout::OAIAbout() {
    this->initializeModel();
}

OAIAbout::~OAIAbout() {}

void OAIAbout::initializeModel() {

    m_api_release_date_iso8601_isSet = false;
    m_api_release_date_iso8601_isValid = false;

    m_api_version_isSet = false;
    m_api_version_isValid = false;

    m_available_languages_iso639_1_isSet = false;
    m_available_languages_iso639_1_isValid = false;
}

void OAIAbout::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAbout::fromJsonObject(QJsonObject json) {

    m_api_release_date_iso8601_isValid = ::OpenAPI::fromJsonValue(m_api_release_date_iso8601, json[QString("apiReleaseDateIso8601")]);
    m_api_release_date_iso8601_isSet = !json[QString("apiReleaseDateIso8601")].isNull() && m_api_release_date_iso8601_isValid;

    m_api_version_isValid = ::OpenAPI::fromJsonValue(m_api_version, json[QString("apiVersion")]);
    m_api_version_isSet = !json[QString("apiVersion")].isNull() && m_api_version_isValid;

    m_available_languages_iso639_1_isValid = ::OpenAPI::fromJsonValue(m_available_languages_iso639_1, json[QString("availableLanguagesIso639_1")]);
    m_available_languages_iso639_1_isSet = !json[QString("availableLanguagesIso639_1")].isNull() && m_available_languages_iso639_1_isValid;
}

QString OAIAbout::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAbout::asJsonObject() const {
    QJsonObject obj;
    if (m_api_release_date_iso8601_isSet) {
        obj.insert(QString("apiReleaseDateIso8601"), ::OpenAPI::toJsonValue(m_api_release_date_iso8601));
    }
    if (m_api_version.isSet()) {
        obj.insert(QString("apiVersion"), ::OpenAPI::toJsonValue(m_api_version));
    }
    if (m_available_languages_iso639_1_isSet) {
        obj.insert(QString("availableLanguagesIso639_1"), ::OpenAPI::toJsonValue(m_available_languages_iso639_1));
    }
    return obj;
}

QString OAIAbout::getApiReleaseDateIso8601() const {
    return m_api_release_date_iso8601;
}
void OAIAbout::setApiReleaseDateIso8601(const QString &api_release_date_iso8601) {
    m_api_release_date_iso8601 = api_release_date_iso8601;
    m_api_release_date_iso8601_isSet = true;
}

bool OAIAbout::is_api_release_date_iso8601_Set() const{
    return m_api_release_date_iso8601_isSet;
}

bool OAIAbout::is_api_release_date_iso8601_Valid() const{
    return m_api_release_date_iso8601_isValid;
}

OAIAbout_apiVersion OAIAbout::getApiVersion() const {
    return m_api_version;
}
void OAIAbout::setApiVersion(const OAIAbout_apiVersion &api_version) {
    m_api_version = api_version;
    m_api_version_isSet = true;
}

bool OAIAbout::is_api_version_Set() const{
    return m_api_version_isSet;
}

bool OAIAbout::is_api_version_Valid() const{
    return m_api_version_isValid;
}

QString OAIAbout::getAvailableLanguagesIso6391() const {
    return m_available_languages_iso639_1;
}
void OAIAbout::setAvailableLanguagesIso6391(const QString &available_languages_iso639_1) {
    m_available_languages_iso639_1 = available_languages_iso639_1;
    m_available_languages_iso639_1_isSet = true;
}

bool OAIAbout::is_available_languages_iso639_1_Set() const{
    return m_available_languages_iso639_1_isSet;
}

bool OAIAbout::is_available_languages_iso639_1_Valid() const{
    return m_available_languages_iso639_1_isValid;
}

bool OAIAbout::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_api_release_date_iso8601_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_api_version.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_available_languages_iso639_1_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAbout::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
