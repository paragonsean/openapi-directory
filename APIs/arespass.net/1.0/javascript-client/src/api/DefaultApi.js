/**
 * Arespass
 * Analyzes a password and calculates its entropy.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import About from '../model/About';
import Ec from '../model/Ec';

/**
* Default service.
* @module api/DefaultApi
* @version 1.0
*/
export default class DefaultApi {

    /**
    * Constructs a new DefaultApi. 
    * @alias module:api/DefaultApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the aboutGet operation.
     * @callback module:api/DefaultApi~aboutGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/About} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Metadata about this API&#58; version number, release date and available languages.  Metadata requests are NOT billed. 
     * @param {Object} opts Optional parameters
     * @param {String} [outputFormat] **The format of the returned metadata.**  Allowed values are *json*, *xml* and *yaml*.  The default value is *xml*. 
     * @param {module:api/DefaultApi~aboutGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/About}
     */
    aboutGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'outputFormat': opts['outputFormat']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'application/x-yaml', 'application/xml'];
      let returnType = About;
      return this.apiClient.callApi(
        '/about', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the ecGet operation.
     * @callback module:api/DefaultApi~ecGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Ec} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * The entropy calculator - alias ec -, analyzes a password and calculates its entropy.  Entropy calculator requests are billed. 
     * @param {String} password **The password to be analyzed.**  Minimum length is 4 characters; maximum length is 128 characters.  Beware that certain characters like '&#35;', '&#61;' or '&#63;' must be properly encoded.  For more information about this issue, please refer to RFC 3986 (\"*Uniform Resource Identifier (URI): Generic Syntax*\"), sections 2.1, 2.2 and 2.4. 
     * @param {Object} opts Optional parameters
     * @param {String} [outputFormat] **The format of the returned analysis.**  Allowed values are *json*, *xml* and *yaml*.  The default value is *xml*. 
     * @param {Number} [penalty] **The penalty applied to each character that is part of a word, number sequence, alphabet sequence, etc.**  The penalty is a float number in the range [0, 1]. Full penalty, 0; no penalty, 1.  The character used as decimal separator is always '&#46;'. Hence, a parameter value like *0,33* would be illegal.  The default value is *0.25*. 
     * @param {String} [reqId] **An identifier for this request.**  The request identifier is a string that must match the regular expression *_/(?i)^[a-z0-9]{8,16}$/_*.  This identifier is echoed in the returned response. Its value has no effect on the password analysis.  If this parameter is unset, a randomly generated identifier will be automatically assigned to this request. 
     * @param {module:api/DefaultApi~ecGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Ec}
     */
    ecGet(password, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'password' is set
      if (password === undefined || password === null) {
        throw new Error("Missing the required parameter 'password' when calling ecGet");
      }

      let pathParams = {
      };
      let queryParams = {
        'password': password,
        'outputFormat': opts['outputFormat'],
        'penalty': opts['penalty'],
        'reqId': opts['reqId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'application/x-yaml', 'application/xml'];
      let returnType = Ec;
      return this.apiClient.callApi(
        '/ec', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
