# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_list_of_payments200_response_data_inner import GetListOfPayments200ResponseDataInner
from openapi_server import util


class GetListOfPayments200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, data: List[GetListOfPayments200ResponseDataInner]=None, limit: float=None, page: float=None, pages_count: float=None, total: float=None):
        """GetListOfPayments200Response - a model defined in OpenAPI

        :param data: The data of this GetListOfPayments200Response.
        :param limit: The limit of this GetListOfPayments200Response.
        :param page: The page of this GetListOfPayments200Response.
        :param pages_count: The pages_count of this GetListOfPayments200Response.
        :param total: The total of this GetListOfPayments200Response.
        """
        self.openapi_types = {
            'data': List[GetListOfPayments200ResponseDataInner],
            'limit': float,
            'page': float,
            'pages_count': float,
            'total': float
        }

        self.attribute_map = {
            'data': 'data',
            'limit': 'limit',
            'page': 'page',
            'pages_count': 'pagesCount',
            'total': 'total'
        }

        self._data = data
        self._limit = limit
        self._page = page
        self._pages_count = pages_count
        self._total = total

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetListOfPayments200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The getListOfPayments_200_response of this GetListOfPayments200Response.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def data(self):
        """Gets the data of this GetListOfPayments200Response.


        :return: The data of this GetListOfPayments200Response.
        :rtype: List[GetListOfPayments200ResponseDataInner]
        """
        return self._data

    @data.setter
    def data(self, data):
        """Sets the data of this GetListOfPayments200Response.


        :param data: The data of this GetListOfPayments200Response.
        :type data: List[GetListOfPayments200ResponseDataInner]
        """

        self._data = data

    @property
    def limit(self):
        """Gets the limit of this GetListOfPayments200Response.


        :return: The limit of this GetListOfPayments200Response.
        :rtype: float
        """
        return self._limit

    @limit.setter
    def limit(self, limit):
        """Sets the limit of this GetListOfPayments200Response.


        :param limit: The limit of this GetListOfPayments200Response.
        :type limit: float
        """

        self._limit = limit

    @property
    def page(self):
        """Gets the page of this GetListOfPayments200Response.


        :return: The page of this GetListOfPayments200Response.
        :rtype: float
        """
        return self._page

    @page.setter
    def page(self, page):
        """Sets the page of this GetListOfPayments200Response.


        :param page: The page of this GetListOfPayments200Response.
        :type page: float
        """

        self._page = page

    @property
    def pages_count(self):
        """Gets the pages_count of this GetListOfPayments200Response.


        :return: The pages_count of this GetListOfPayments200Response.
        :rtype: float
        """
        return self._pages_count

    @pages_count.setter
    def pages_count(self, pages_count):
        """Sets the pages_count of this GetListOfPayments200Response.


        :param pages_count: The pages_count of this GetListOfPayments200Response.
        :type pages_count: float
        """

        self._pages_count = pages_count

    @property
    def total(self):
        """Gets the total of this GetListOfPayments200Response.


        :return: The total of this GetListOfPayments200Response.
        :rtype: float
        """
        return self._total

    @total.setter
    def total(self, total):
        """Sets the total of this GetListOfPayments200Response.


        :param total: The total of this GetListOfPayments200Response.
        :type total: float
        """

        self._total = total
