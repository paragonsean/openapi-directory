# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetEstimatedPrice200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, amount_from: float=None, currency_from: str=None, currency_to: str=None, estimated_amount: float=None):
        """GetEstimatedPrice200Response - a model defined in OpenAPI

        :param amount_from: The amount_from of this GetEstimatedPrice200Response.
        :param currency_from: The currency_from of this GetEstimatedPrice200Response.
        :param currency_to: The currency_to of this GetEstimatedPrice200Response.
        :param estimated_amount: The estimated_amount of this GetEstimatedPrice200Response.
        """
        self.openapi_types = {
            'amount_from': float,
            'currency_from': str,
            'currency_to': str,
            'estimated_amount': float
        }

        self.attribute_map = {
            'amount_from': 'amount_from',
            'currency_from': 'currency_from',
            'currency_to': 'currency_to',
            'estimated_amount': 'estimated_amount'
        }

        self._amount_from = amount_from
        self._currency_from = currency_from
        self._currency_to = currency_to
        self._estimated_amount = estimated_amount

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetEstimatedPrice200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The getEstimatedPrice_200_response of this GetEstimatedPrice200Response.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def amount_from(self):
        """Gets the amount_from of this GetEstimatedPrice200Response.


        :return: The amount_from of this GetEstimatedPrice200Response.
        :rtype: float
        """
        return self._amount_from

    @amount_from.setter
    def amount_from(self, amount_from):
        """Sets the amount_from of this GetEstimatedPrice200Response.


        :param amount_from: The amount_from of this GetEstimatedPrice200Response.
        :type amount_from: float
        """

        self._amount_from = amount_from

    @property
    def currency_from(self):
        """Gets the currency_from of this GetEstimatedPrice200Response.


        :return: The currency_from of this GetEstimatedPrice200Response.
        :rtype: str
        """
        return self._currency_from

    @currency_from.setter
    def currency_from(self, currency_from):
        """Sets the currency_from of this GetEstimatedPrice200Response.


        :param currency_from: The currency_from of this GetEstimatedPrice200Response.
        :type currency_from: str
        """

        self._currency_from = currency_from

    @property
    def currency_to(self):
        """Gets the currency_to of this GetEstimatedPrice200Response.


        :return: The currency_to of this GetEstimatedPrice200Response.
        :rtype: str
        """
        return self._currency_to

    @currency_to.setter
    def currency_to(self, currency_to):
        """Sets the currency_to of this GetEstimatedPrice200Response.


        :param currency_to: The currency_to of this GetEstimatedPrice200Response.
        :type currency_to: str
        """

        self._currency_to = currency_to

    @property
    def estimated_amount(self):
        """Gets the estimated_amount of this GetEstimatedPrice200Response.


        :return: The estimated_amount of this GetEstimatedPrice200Response.
        :rtype: float
        """
        return self._estimated_amount

    @estimated_amount.setter
    def estimated_amount(self, estimated_amount):
        """Sets the estimated_amount of this GetEstimatedPrice200Response.


        :param estimated_amount: The estimated_amount of this GetEstimatedPrice200Response.
        :type estimated_amount: float
        """

        self._estimated_amount = estimated_amount
