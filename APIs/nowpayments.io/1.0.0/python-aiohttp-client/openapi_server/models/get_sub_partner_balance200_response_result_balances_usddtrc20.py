# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetSubPartnerBalance200ResponseResultBalancesUsddtrc20(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, amount: float=None, pending_amount: float=None):
        """GetSubPartnerBalance200ResponseResultBalancesUsddtrc20 - a model defined in OpenAPI

        :param amount: The amount of this GetSubPartnerBalance200ResponseResultBalancesUsddtrc20.
        :param pending_amount: The pending_amount of this GetSubPartnerBalance200ResponseResultBalancesUsddtrc20.
        """
        self.openapi_types = {
            'amount': float,
            'pending_amount': float
        }

        self.attribute_map = {
            'amount': 'amount',
            'pending_amount': 'pendingAmount'
        }

        self._amount = amount
        self._pending_amount = pending_amount

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetSubPartnerBalance200ResponseResultBalancesUsddtrc20':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The getSubPartnerBalance_200_response_result_balances_usddtrc20 of this GetSubPartnerBalance200ResponseResultBalancesUsddtrc20.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def amount(self):
        """Gets the amount of this GetSubPartnerBalance200ResponseResultBalancesUsddtrc20.


        :return: The amount of this GetSubPartnerBalance200ResponseResultBalancesUsddtrc20.
        :rtype: float
        """
        return self._amount

    @amount.setter
    def amount(self, amount):
        """Sets the amount of this GetSubPartnerBalance200ResponseResultBalancesUsddtrc20.


        :param amount: The amount of this GetSubPartnerBalance200ResponseResultBalancesUsddtrc20.
        :type amount: float
        """

        self._amount = amount

    @property
    def pending_amount(self):
        """Gets the pending_amount of this GetSubPartnerBalance200ResponseResultBalancesUsddtrc20.


        :return: The pending_amount of this GetSubPartnerBalance200ResponseResultBalancesUsddtrc20.
        :rtype: float
        """
        return self._pending_amount

    @pending_amount.setter
    def pending_amount(self, pending_amount):
        """Sets the pending_amount of this GetSubPartnerBalance200ResponseResultBalancesUsddtrc20.


        :param pending_amount: The pending_amount of this GetSubPartnerBalance200ResponseResultBalancesUsddtrc20.
        :type pending_amount: float
        """

        self._pending_amount = pending_amount
