# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_sub_partner_balance200_response_result_balances import GetSubPartnerBalance200ResponseResultBalances
from openapi_server import util


class GetSubPartnerBalance200ResponseResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, balances: GetSubPartnerBalance200ResponseResultBalances=None, sub_partner_id: str=None):
        """GetSubPartnerBalance200ResponseResult - a model defined in OpenAPI

        :param balances: The balances of this GetSubPartnerBalance200ResponseResult.
        :param sub_partner_id: The sub_partner_id of this GetSubPartnerBalance200ResponseResult.
        """
        self.openapi_types = {
            'balances': GetSubPartnerBalance200ResponseResultBalances,
            'sub_partner_id': str
        }

        self.attribute_map = {
            'balances': 'balances',
            'sub_partner_id': 'subPartnerId'
        }

        self._balances = balances
        self._sub_partner_id = sub_partner_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetSubPartnerBalance200ResponseResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The getSubPartnerBalance_200_response_result of this GetSubPartnerBalance200ResponseResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def balances(self):
        """Gets the balances of this GetSubPartnerBalance200ResponseResult.


        :return: The balances of this GetSubPartnerBalance200ResponseResult.
        :rtype: GetSubPartnerBalance200ResponseResultBalances
        """
        return self._balances

    @balances.setter
    def balances(self, balances):
        """Sets the balances of this GetSubPartnerBalance200ResponseResult.


        :param balances: The balances of this GetSubPartnerBalance200ResponseResult.
        :type balances: GetSubPartnerBalance200ResponseResultBalances
        """

        self._balances = balances

    @property
    def sub_partner_id(self):
        """Gets the sub_partner_id of this GetSubPartnerBalance200ResponseResult.


        :return: The sub_partner_id of this GetSubPartnerBalance200ResponseResult.
        :rtype: str
        """
        return self._sub_partner_id

    @sub_partner_id.setter
    def sub_partner_id(self, sub_partner_id):
        """Sets the sub_partner_id of this GetSubPartnerBalance200ResponseResult.


        :param sub_partner_id: The sub_partner_id of this GetSubPartnerBalance200ResponseResult.
        :type sub_partner_id: str
        """

        self._sub_partner_id = sub_partner_id
