# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_one_recurring_payment200_response_result_subscriber import GetOneRecurringPayment200ResponseResultSubscriber
from openapi_server import util


class GetOneRecurringPayment200ResponseResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created_at: str=None, expire_date: str=None, id: str=None, is_active: bool=None, status: str=None, subscriber: GetOneRecurringPayment200ResponseResultSubscriber=None, subscription_plan_id: str=None, updated_at: str=None):
        """GetOneRecurringPayment200ResponseResult - a model defined in OpenAPI

        :param created_at: The created_at of this GetOneRecurringPayment200ResponseResult.
        :param expire_date: The expire_date of this GetOneRecurringPayment200ResponseResult.
        :param id: The id of this GetOneRecurringPayment200ResponseResult.
        :param is_active: The is_active of this GetOneRecurringPayment200ResponseResult.
        :param status: The status of this GetOneRecurringPayment200ResponseResult.
        :param subscriber: The subscriber of this GetOneRecurringPayment200ResponseResult.
        :param subscription_plan_id: The subscription_plan_id of this GetOneRecurringPayment200ResponseResult.
        :param updated_at: The updated_at of this GetOneRecurringPayment200ResponseResult.
        """
        self.openapi_types = {
            'created_at': str,
            'expire_date': str,
            'id': str,
            'is_active': bool,
            'status': str,
            'subscriber': GetOneRecurringPayment200ResponseResultSubscriber,
            'subscription_plan_id': str,
            'updated_at': str
        }

        self.attribute_map = {
            'created_at': 'created_at',
            'expire_date': 'expire_date',
            'id': 'id',
            'is_active': 'is_active',
            'status': 'status',
            'subscriber': 'subscriber',
            'subscription_plan_id': 'subscription_plan_id',
            'updated_at': 'updated_at'
        }

        self._created_at = created_at
        self._expire_date = expire_date
        self._id = id
        self._is_active = is_active
        self._status = status
        self._subscriber = subscriber
        self._subscription_plan_id = subscription_plan_id
        self._updated_at = updated_at

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetOneRecurringPayment200ResponseResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The getOneRecurringPayment_200_response_result of this GetOneRecurringPayment200ResponseResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created_at(self):
        """Gets the created_at of this GetOneRecurringPayment200ResponseResult.


        :return: The created_at of this GetOneRecurringPayment200ResponseResult.
        :rtype: str
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this GetOneRecurringPayment200ResponseResult.


        :param created_at: The created_at of this GetOneRecurringPayment200ResponseResult.
        :type created_at: str
        """

        self._created_at = created_at

    @property
    def expire_date(self):
        """Gets the expire_date of this GetOneRecurringPayment200ResponseResult.


        :return: The expire_date of this GetOneRecurringPayment200ResponseResult.
        :rtype: str
        """
        return self._expire_date

    @expire_date.setter
    def expire_date(self, expire_date):
        """Sets the expire_date of this GetOneRecurringPayment200ResponseResult.


        :param expire_date: The expire_date of this GetOneRecurringPayment200ResponseResult.
        :type expire_date: str
        """

        self._expire_date = expire_date

    @property
    def id(self):
        """Gets the id of this GetOneRecurringPayment200ResponseResult.


        :return: The id of this GetOneRecurringPayment200ResponseResult.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this GetOneRecurringPayment200ResponseResult.


        :param id: The id of this GetOneRecurringPayment200ResponseResult.
        :type id: str
        """

        self._id = id

    @property
    def is_active(self):
        """Gets the is_active of this GetOneRecurringPayment200ResponseResult.


        :return: The is_active of this GetOneRecurringPayment200ResponseResult.
        :rtype: bool
        """
        return self._is_active

    @is_active.setter
    def is_active(self, is_active):
        """Sets the is_active of this GetOneRecurringPayment200ResponseResult.


        :param is_active: The is_active of this GetOneRecurringPayment200ResponseResult.
        :type is_active: bool
        """

        self._is_active = is_active

    @property
    def status(self):
        """Gets the status of this GetOneRecurringPayment200ResponseResult.


        :return: The status of this GetOneRecurringPayment200ResponseResult.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this GetOneRecurringPayment200ResponseResult.


        :param status: The status of this GetOneRecurringPayment200ResponseResult.
        :type status: str
        """

        self._status = status

    @property
    def subscriber(self):
        """Gets the subscriber of this GetOneRecurringPayment200ResponseResult.


        :return: The subscriber of this GetOneRecurringPayment200ResponseResult.
        :rtype: GetOneRecurringPayment200ResponseResultSubscriber
        """
        return self._subscriber

    @subscriber.setter
    def subscriber(self, subscriber):
        """Sets the subscriber of this GetOneRecurringPayment200ResponseResult.


        :param subscriber: The subscriber of this GetOneRecurringPayment200ResponseResult.
        :type subscriber: GetOneRecurringPayment200ResponseResultSubscriber
        """

        self._subscriber = subscriber

    @property
    def subscription_plan_id(self):
        """Gets the subscription_plan_id of this GetOneRecurringPayment200ResponseResult.


        :return: The subscription_plan_id of this GetOneRecurringPayment200ResponseResult.
        :rtype: str
        """
        return self._subscription_plan_id

    @subscription_plan_id.setter
    def subscription_plan_id(self, subscription_plan_id):
        """Sets the subscription_plan_id of this GetOneRecurringPayment200ResponseResult.


        :param subscription_plan_id: The subscription_plan_id of this GetOneRecurringPayment200ResponseResult.
        :type subscription_plan_id: str
        """

        self._subscription_plan_id = subscription_plan_id

    @property
    def updated_at(self):
        """Gets the updated_at of this GetOneRecurringPayment200ResponseResult.


        :return: The updated_at of this GetOneRecurringPayment200ResponseResult.
        :rtype: str
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this GetOneRecurringPayment200ResponseResult.


        :param updated_at: The updated_at of this GetOneRecurringPayment200ResponseResult.
        :type updated_at: str
        """

        self._updated_at = updated_at
