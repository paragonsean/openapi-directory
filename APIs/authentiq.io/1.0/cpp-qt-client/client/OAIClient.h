/**
 * Authentiq Connect API
 * Authentiq Connect OAuth 2.0 and OpenID Connect API reference. Learn about [Authentiq ID](https://www.authentiq.com/) or check out the [Authentiq Connect](https://developers.authentiq.com) developer documentation. 
 *
 * The version of the OpenAPI document: 1.0
 * Contact: hello@authentiq.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIClient.h
 *
 * Client object
 */

#ifndef OAIClient_H
#define OAIClient_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIClient : public OAIObject {
public:
    OAIClient();
    OAIClient(QString json);
    ~OAIClient() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getApplicationType() const;
    void setApplicationType(const QString &application_type);
    bool is_application_type_Set() const;
    bool is_application_type_Valid() const;

    QString getClientId() const;
    void setClientId(const QString &client_id);
    bool is_client_id_Set() const;
    bool is_client_id_Valid() const;

    QString getClientName() const;
    void setClientName(const QString &client_name);
    bool is_client_name_Set() const;
    bool is_client_name_Valid() const;

    QString getClientUri() const;
    void setClientUri(const QString &client_uri);
    bool is_client_uri_Set() const;
    bool is_client_uri_Valid() const;

    QList<QString> getContacts() const;
    void setContacts(const QList<QString> &contacts);
    bool is_contacts_Set() const;
    bool is_contacts_Valid() const;

    qint64 getDefaultMaxAge() const;
    void setDefaultMaxAge(const qint64 &default_max_age);
    bool is_default_max_age_Set() const;
    bool is_default_max_age_Valid() const;

    QList<QString> getDefaultScopes() const;
    void setDefaultScopes(const QList<QString> &default_scopes);
    bool is_default_scopes_Set() const;
    bool is_default_scopes_Valid() const;

    QList<QString> getGrantTypes() const;
    void setGrantTypes(const QList<QString> &grant_types);
    bool is_grant_types_Set() const;
    bool is_grant_types_Valid() const;

    QString getLogoUri() const;
    void setLogoUri(const QString &logo_uri);
    bool is_logo_uri_Set() const;
    bool is_logo_uri_Valid() const;

    QString getPolicyUri() const;
    void setPolicyUri(const QString &policy_uri);
    bool is_policy_uri_Set() const;
    bool is_policy_uri_Valid() const;

    QList<QString> getRedirectUris() const;
    void setRedirectUris(const QList<QString> &redirect_uris);
    bool is_redirect_uris_Set() const;
    bool is_redirect_uris_Valid() const;

    QList<QString> getResponseTypes() const;
    void setResponseTypes(const QList<QString> &response_types);
    bool is_response_types_Set() const;
    bool is_response_types_Valid() const;

    QString getTosUri() const;
    void setTosUri(const QString &tos_uri);
    bool is_tos_uri_Set() const;
    bool is_tos_uri_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_application_type;
    bool m_application_type_isSet;
    bool m_application_type_isValid;

    QString m_client_id;
    bool m_client_id_isSet;
    bool m_client_id_isValid;

    QString m_client_name;
    bool m_client_name_isSet;
    bool m_client_name_isValid;

    QString m_client_uri;
    bool m_client_uri_isSet;
    bool m_client_uri_isValid;

    QList<QString> m_contacts;
    bool m_contacts_isSet;
    bool m_contacts_isValid;

    qint64 m_default_max_age;
    bool m_default_max_age_isSet;
    bool m_default_max_age_isValid;

    QList<QString> m_default_scopes;
    bool m_default_scopes_isSet;
    bool m_default_scopes_isValid;

    QList<QString> m_grant_types;
    bool m_grant_types_isSet;
    bool m_grant_types_isValid;

    QString m_logo_uri;
    bool m_logo_uri_isSet;
    bool m_logo_uri_isValid;

    QString m_policy_uri;
    bool m_policy_uri_isSet;
    bool m_policy_uri_isValid;

    QList<QString> m_redirect_uris;
    bool m_redirect_uris_isSet;
    bool m_redirect_uris_isValid;

    QList<QString> m_response_types;
    bool m_response_types_isSet;
    bool m_response_types_isValid;

    QString m_tos_uri;
    bool m_tos_uri_isSet;
    bool m_tos_uri_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIClient)

#endif // OAIClient_H
