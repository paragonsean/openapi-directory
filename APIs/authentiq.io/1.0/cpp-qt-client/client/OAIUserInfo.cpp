/**
 * Authentiq Connect API
 * Authentiq Connect OAuth 2.0 and OpenID Connect API reference. Learn about [Authentiq ID](https://www.authentiq.com/) or check out the [Authentiq Connect](https://developers.authentiq.com) developer documentation. 
 *
 * The version of the OpenAPI document: 1.0
 * Contact: hello@authentiq.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUserInfo.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUserInfo::OAIUserInfo(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUserInfo::OAIUserInfo() {
    this->initializeModel();
}

OAIUserInfo::~OAIUserInfo() {}

void OAIUserInfo::initializeModel() {

    m_address_isSet = false;
    m_address_isValid = false;

    m_aqlocation_isSet = false;
    m_aqlocation_isValid = false;

    m_email_isSet = false;
    m_email_isValid = false;

    m_email_verified_isSet = false;
    m_email_verified_isValid = false;

    m_family_name_isSet = false;
    m_family_name_isValid = false;

    m_given_name_isSet = false;
    m_given_name_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_phone_number_isSet = false;
    m_phone_number_isValid = false;

    m_phone_number_verified_isSet = false;
    m_phone_number_verified_isValid = false;

    m_sub_isSet = false;
    m_sub_isValid = false;
}

void OAIUserInfo::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUserInfo::fromJsonObject(QJsonObject json) {

    m_address_isValid = ::OpenAPI::fromJsonValue(m_address, json[QString("address")]);
    m_address_isSet = !json[QString("address")].isNull() && m_address_isValid;

    m_aqlocation_isValid = ::OpenAPI::fromJsonValue(m_aqlocation, json[QString("aq:location")]);
    m_aqlocation_isSet = !json[QString("aq:location")].isNull() && m_aqlocation_isValid;

    m_email_isValid = ::OpenAPI::fromJsonValue(m_email, json[QString("email")]);
    m_email_isSet = !json[QString("email")].isNull() && m_email_isValid;

    m_email_verified_isValid = ::OpenAPI::fromJsonValue(m_email_verified, json[QString("email_verified")]);
    m_email_verified_isSet = !json[QString("email_verified")].isNull() && m_email_verified_isValid;

    m_family_name_isValid = ::OpenAPI::fromJsonValue(m_family_name, json[QString("family_name")]);
    m_family_name_isSet = !json[QString("family_name")].isNull() && m_family_name_isValid;

    m_given_name_isValid = ::OpenAPI::fromJsonValue(m_given_name, json[QString("given_name")]);
    m_given_name_isSet = !json[QString("given_name")].isNull() && m_given_name_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_phone_number_isValid = ::OpenAPI::fromJsonValue(m_phone_number, json[QString("phone_number")]);
    m_phone_number_isSet = !json[QString("phone_number")].isNull() && m_phone_number_isValid;

    m_phone_number_verified_isValid = ::OpenAPI::fromJsonValue(m_phone_number_verified, json[QString("phone_number_verified")]);
    m_phone_number_verified_isSet = !json[QString("phone_number_verified")].isNull() && m_phone_number_verified_isValid;

    m_sub_isValid = ::OpenAPI::fromJsonValue(m_sub, json[QString("sub")]);
    m_sub_isSet = !json[QString("sub")].isNull() && m_sub_isValid;
}

QString OAIUserInfo::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUserInfo::asJsonObject() const {
    QJsonObject obj;
    if (m_address.isSet()) {
        obj.insert(QString("address"), ::OpenAPI::toJsonValue(m_address));
    }
    if (m_aqlocation.isSet()) {
        obj.insert(QString("aq:location"), ::OpenAPI::toJsonValue(m_aqlocation));
    }
    if (m_email_isSet) {
        obj.insert(QString("email"), ::OpenAPI::toJsonValue(m_email));
    }
    if (m_email_verified_isSet) {
        obj.insert(QString("email_verified"), ::OpenAPI::toJsonValue(m_email_verified));
    }
    if (m_family_name_isSet) {
        obj.insert(QString("family_name"), ::OpenAPI::toJsonValue(m_family_name));
    }
    if (m_given_name_isSet) {
        obj.insert(QString("given_name"), ::OpenAPI::toJsonValue(m_given_name));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_phone_number_isSet) {
        obj.insert(QString("phone_number"), ::OpenAPI::toJsonValue(m_phone_number));
    }
    if (m_phone_number_verified_isSet) {
        obj.insert(QString("phone_number_verified"), ::OpenAPI::toJsonValue(m_phone_number_verified));
    }
    if (m_sub_isSet) {
        obj.insert(QString("sub"), ::OpenAPI::toJsonValue(m_sub));
    }
    return obj;
}

OAIAddress OAIUserInfo::getAddress() const {
    return m_address;
}
void OAIUserInfo::setAddress(const OAIAddress &address) {
    m_address = address;
    m_address_isSet = true;
}

bool OAIUserInfo::is_address_Set() const{
    return m_address_isSet;
}

bool OAIUserInfo::is_address_Valid() const{
    return m_address_isValid;
}

OAIUserInfo_aq_location OAIUserInfo::getAqlocation() const {
    return m_aqlocation;
}
void OAIUserInfo::setAqlocation(const OAIUserInfo_aq_location &aqlocation) {
    m_aqlocation = aqlocation;
    m_aqlocation_isSet = true;
}

bool OAIUserInfo::is_aqlocation_Set() const{
    return m_aqlocation_isSet;
}

bool OAIUserInfo::is_aqlocation_Valid() const{
    return m_aqlocation_isValid;
}

QString OAIUserInfo::getEmail() const {
    return m_email;
}
void OAIUserInfo::setEmail(const QString &email) {
    m_email = email;
    m_email_isSet = true;
}

bool OAIUserInfo::is_email_Set() const{
    return m_email_isSet;
}

bool OAIUserInfo::is_email_Valid() const{
    return m_email_isValid;
}

bool OAIUserInfo::isEmailVerified() const {
    return m_email_verified;
}
void OAIUserInfo::setEmailVerified(const bool &email_verified) {
    m_email_verified = email_verified;
    m_email_verified_isSet = true;
}

bool OAIUserInfo::is_email_verified_Set() const{
    return m_email_verified_isSet;
}

bool OAIUserInfo::is_email_verified_Valid() const{
    return m_email_verified_isValid;
}

QString OAIUserInfo::getFamilyName() const {
    return m_family_name;
}
void OAIUserInfo::setFamilyName(const QString &family_name) {
    m_family_name = family_name;
    m_family_name_isSet = true;
}

bool OAIUserInfo::is_family_name_Set() const{
    return m_family_name_isSet;
}

bool OAIUserInfo::is_family_name_Valid() const{
    return m_family_name_isValid;
}

QString OAIUserInfo::getGivenName() const {
    return m_given_name;
}
void OAIUserInfo::setGivenName(const QString &given_name) {
    m_given_name = given_name;
    m_given_name_isSet = true;
}

bool OAIUserInfo::is_given_name_Set() const{
    return m_given_name_isSet;
}

bool OAIUserInfo::is_given_name_Valid() const{
    return m_given_name_isValid;
}

QString OAIUserInfo::getName() const {
    return m_name;
}
void OAIUserInfo::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIUserInfo::is_name_Set() const{
    return m_name_isSet;
}

bool OAIUserInfo::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIUserInfo::getPhoneNumber() const {
    return m_phone_number;
}
void OAIUserInfo::setPhoneNumber(const QString &phone_number) {
    m_phone_number = phone_number;
    m_phone_number_isSet = true;
}

bool OAIUserInfo::is_phone_number_Set() const{
    return m_phone_number_isSet;
}

bool OAIUserInfo::is_phone_number_Valid() const{
    return m_phone_number_isValid;
}

bool OAIUserInfo::isPhoneNumberVerified() const {
    return m_phone_number_verified;
}
void OAIUserInfo::setPhoneNumberVerified(const bool &phone_number_verified) {
    m_phone_number_verified = phone_number_verified;
    m_phone_number_verified_isSet = true;
}

bool OAIUserInfo::is_phone_number_verified_Set() const{
    return m_phone_number_verified_isSet;
}

bool OAIUserInfo::is_phone_number_verified_Valid() const{
    return m_phone_number_verified_isValid;
}

QString OAIUserInfo::getSub() const {
    return m_sub;
}
void OAIUserInfo::setSub(const QString &sub) {
    m_sub = sub;
    m_sub_isSet = true;
}

bool OAIUserInfo::is_sub_Set() const{
    return m_sub_isSet;
}

bool OAIUserInfo::is_sub_Valid() const{
    return m_sub_isValid;
}

bool OAIUserInfo::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_address.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_aqlocation.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_email_verified_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_family_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_given_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_phone_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_phone_number_verified_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sub_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUserInfo::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_sub_isValid && true;
}

} // namespace OpenAPI
