/**
 * Authentiq Connect API
 * Authentiq Connect OAuth 2.0 and OpenID Connect API reference. Learn about [Authentiq ID](https://www.authentiq.com/) or check out the [Authentiq Connect](https://developers.authentiq.com) developer documentation. 
 *
 * The version of the OpenAPI document: 1.0
 * Contact: hello@authentiq.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Client model module.
 * @module model/Client
 * @version 1.0
 */
class Client {
    /**
     * Constructs a new <code>Client</code>.
     * Client object
     * @alias module:model/Client
     * @param clientName {String} 
     * @param clientUri {String} 
     */
    constructor(clientName, clientUri) { 
        
        Client.initialize(this, clientName, clientUri);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, clientName, clientUri) { 
        obj['client_name'] = clientName;
        obj['client_uri'] = clientUri;
    }

    /**
     * Constructs a <code>Client</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Client} obj Optional instance to populate.
     * @return {module:model/Client} The populated <code>Client</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Client();

            if (data.hasOwnProperty('application_type')) {
                obj['application_type'] = ApiClient.convertToType(data['application_type'], 'String');
            }
            if (data.hasOwnProperty('client_id')) {
                obj['client_id'] = ApiClient.convertToType(data['client_id'], 'String');
            }
            if (data.hasOwnProperty('client_name')) {
                obj['client_name'] = ApiClient.convertToType(data['client_name'], 'String');
            }
            if (data.hasOwnProperty('client_uri')) {
                obj['client_uri'] = ApiClient.convertToType(data['client_uri'], 'String');
            }
            if (data.hasOwnProperty('contacts')) {
                obj['contacts'] = ApiClient.convertToType(data['contacts'], ['String']);
            }
            if (data.hasOwnProperty('default_max_age')) {
                obj['default_max_age'] = ApiClient.convertToType(data['default_max_age'], 'Number');
            }
            if (data.hasOwnProperty('default_scopes')) {
                obj['default_scopes'] = ApiClient.convertToType(data['default_scopes'], ['String']);
            }
            if (data.hasOwnProperty('grant_types')) {
                obj['grant_types'] = ApiClient.convertToType(data['grant_types'], ['String']);
            }
            if (data.hasOwnProperty('logo_uri')) {
                obj['logo_uri'] = ApiClient.convertToType(data['logo_uri'], 'String');
            }
            if (data.hasOwnProperty('policy_uri')) {
                obj['policy_uri'] = ApiClient.convertToType(data['policy_uri'], 'String');
            }
            if (data.hasOwnProperty('redirect_uris')) {
                obj['redirect_uris'] = ApiClient.convertToType(data['redirect_uris'], ['String']);
            }
            if (data.hasOwnProperty('response_types')) {
                obj['response_types'] = ApiClient.convertToType(data['response_types'], ['String']);
            }
            if (data.hasOwnProperty('tos_uri')) {
                obj['tos_uri'] = ApiClient.convertToType(data['tos_uri'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Client</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Client</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Client.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['application_type'] && !(typeof data['application_type'] === 'string' || data['application_type'] instanceof String)) {
            throw new Error("Expected the field `application_type` to be a primitive type in the JSON string but got " + data['application_type']);
        }
        // ensure the json data is a string
        if (data['client_id'] && !(typeof data['client_id'] === 'string' || data['client_id'] instanceof String)) {
            throw new Error("Expected the field `client_id` to be a primitive type in the JSON string but got " + data['client_id']);
        }
        // ensure the json data is a string
        if (data['client_name'] && !(typeof data['client_name'] === 'string' || data['client_name'] instanceof String)) {
            throw new Error("Expected the field `client_name` to be a primitive type in the JSON string but got " + data['client_name']);
        }
        // ensure the json data is a string
        if (data['client_uri'] && !(typeof data['client_uri'] === 'string' || data['client_uri'] instanceof String)) {
            throw new Error("Expected the field `client_uri` to be a primitive type in the JSON string but got " + data['client_uri']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['contacts'])) {
            throw new Error("Expected the field `contacts` to be an array in the JSON data but got " + data['contacts']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['default_scopes'])) {
            throw new Error("Expected the field `default_scopes` to be an array in the JSON data but got " + data['default_scopes']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['grant_types'])) {
            throw new Error("Expected the field `grant_types` to be an array in the JSON data but got " + data['grant_types']);
        }
        // ensure the json data is a string
        if (data['logo_uri'] && !(typeof data['logo_uri'] === 'string' || data['logo_uri'] instanceof String)) {
            throw new Error("Expected the field `logo_uri` to be a primitive type in the JSON string but got " + data['logo_uri']);
        }
        // ensure the json data is a string
        if (data['policy_uri'] && !(typeof data['policy_uri'] === 'string' || data['policy_uri'] instanceof String)) {
            throw new Error("Expected the field `policy_uri` to be a primitive type in the JSON string but got " + data['policy_uri']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['redirect_uris'])) {
            throw new Error("Expected the field `redirect_uris` to be an array in the JSON data but got " + data['redirect_uris']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['response_types'])) {
            throw new Error("Expected the field `response_types` to be an array in the JSON data but got " + data['response_types']);
        }
        // ensure the json data is a string
        if (data['tos_uri'] && !(typeof data['tos_uri'] === 'string' || data['tos_uri'] instanceof String)) {
            throw new Error("Expected the field `tos_uri` to be a primitive type in the JSON string but got " + data['tos_uri']);
        }

        return true;
    }


}

Client.RequiredProperties = ["client_name", "client_uri"];

/**
 * @member {String} application_type
 */
Client.prototype['application_type'] = undefined;

/**
 * @member {String} client_id
 */
Client.prototype['client_id'] = undefined;

/**
 * @member {String} client_name
 */
Client.prototype['client_name'] = undefined;

/**
 * @member {String} client_uri
 */
Client.prototype['client_uri'] = undefined;

/**
 * @member {Array.<String>} contacts
 */
Client.prototype['contacts'] = undefined;

/**
 * @member {Number} default_max_age
 */
Client.prototype['default_max_age'] = undefined;

/**
 * @member {Array.<String>} default_scopes
 */
Client.prototype['default_scopes'] = undefined;

/**
 * @member {Array.<String>} grant_types
 */
Client.prototype['grant_types'] = undefined;

/**
 * @member {String} logo_uri
 */
Client.prototype['logo_uri'] = undefined;

/**
 * @member {String} policy_uri
 */
Client.prototype['policy_uri'] = undefined;

/**
 * @member {Array.<String>} redirect_uris
 */
Client.prototype['redirect_uris'] = undefined;

/**
 * @member {Array.<String>} response_types
 */
Client.prototype['response_types'] = undefined;

/**
 * @member {String} tos_uri
 */
Client.prototype['tos_uri'] = undefined;






export default Client;

