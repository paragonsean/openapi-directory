/**
 * Authentiq Connect API
 * Authentiq Connect OAuth 2.0 and OpenID Connect API reference. Learn about [Authentiq ID](https://www.authentiq.com/) or check out the [Authentiq Connect](https://developers.authentiq.com) developer documentation. 
 *
 * The version of the OpenAPI document: 1.0
 * Contact: hello@authentiq.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Address from './Address';

/**
 * The UserInfoAqLocation model module.
 * @module model/UserInfoAqLocation
 * @version 1.0
 */
class UserInfoAqLocation {
    /**
     * Constructs a new <code>UserInfoAqLocation</code>.
     * Geolocation structure
     * @alias module:model/UserInfoAqLocation
     */
    constructor() { 
        
        UserInfoAqLocation.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UserInfoAqLocation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UserInfoAqLocation} obj Optional instance to populate.
     * @return {module:model/UserInfoAqLocation} The populated <code>UserInfoAqLocation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UserInfoAqLocation();

            if (data.hasOwnProperty('address')) {
                obj['address'] = Address.constructFromObject(data['address']);
            }
            if (data.hasOwnProperty('latitude')) {
                obj['latitude'] = ApiClient.convertToType(data['latitude'], 'Number');
            }
            if (data.hasOwnProperty('longitude')) {
                obj['longitude'] = ApiClient.convertToType(data['longitude'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UserInfoAqLocation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UserInfoAqLocation</code>.
     */
    static validateJSON(data) {
        // validate the optional field `address`
        if (data['address']) { // data not null
          Address.validateJSON(data['address']);
        }

        return true;
    }


}



/**
 * @member {module:model/Address} address
 */
UserInfoAqLocation.prototype['address'] = undefined;

/**
 * @member {Number} latitude
 */
UserInfoAqLocation.prototype['latitude'] = undefined;

/**
 * @member {Number} longitude
 */
UserInfoAqLocation.prototype['longitude'] = undefined;






export default UserInfoAqLocation;

