/*
 * Authentiq Connect API
 * Authentiq Connect OAuth 2.0 and OpenID Connect API reference. Learn about [Authentiq ID](https://www.authentiq.com/) or check out the [Authentiq Connect](https://developers.authentiq.com) developer documentation. 
 *
 * The version of the OpenAPI document: 1.0
 * Contact: hello@authentiq.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.OAuth2Error;
import org.openapitools.client.model.Token;
import org.openapitools.client.model.UserInfo;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AuthenticationApi
 */
@Disabled
public class AuthenticationApiTest {

    private final AuthenticationApi api = new AuthenticationApi();

    /**
     * Authenticate a user
     *
     * Start a session with Authentiq Connect to authenticate a user.  &#x60;&#x60;&#x60; GET https://connect.authentiq.io/authorize?client_id&#x3D;&lt;your-client-id&gt;&amp;response_type&#x3D;code+id_token&amp;scope&#x3D;openid+email&amp;redirect_uri&#x3D;&lt;your-redirect-uri&gt;&amp;state&#x3D;0123456789 &#x60;&#x60;&#x60;  This endpoint also supports the POST method. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void authorizeTest() throws ApiException {
        String clientId = null;
        String responseType = null;
        String scope = null;
        String redirectUri = null;
        String state = null;
        String responseMode = null;
        String nonce = null;
        String display = null;
        String prompt = null;
        Integer maxAge = null;
        String uiLocales = null;
        api.authorize(clientId, responseType, scope, redirectUri, state, responseMode, nonce, display, prompt, maxAge, uiLocales);
        // TODO: test validations
    }

    /**
     * Obtain an ID Token
     *
     * Exchange en authorization code for an ID Token or Access Token.  This endpoint supports both &#x60;client_secret_basic&#x60; (default) and &#x60;client_secret_basic&#x60; authentication methods, as specified by the client&#39;s &#x60;token_endpoint_auth_method&#x60;. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tokenTest() throws ApiException {
        String clientId = null;
        String clientSecret = null;
        String code = null;
        String grantType = null;
        String redirectUri = null;
        String authorization = null;
        Token response = api.token(clientId, clientSecret, code, grantType, redirectUri, authorization);
        // TODO: test validations
    }

    /**
     * Retrieve a user profile
     *
     * Use this endpoint to retrieve a user&#39;s profile in case you are unable to parse an ID Token or you&#39;ve not already obtained enough details from the ID Token via the Token Endpoint. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void userInfoTest() throws ApiException {
        UserInfo response = api.userInfo();
        // TODO: test validations
    }

}
