/*
 * Authentiq Connect API
 * Authentiq Connect OAuth 2.0 and OpenID Connect API reference. Learn about [Authentiq ID](https://www.authentiq.com/) or check out the [Authentiq Connect](https://developers.authentiq.com) developer documentation. 
 *
 * The version of the OpenAPI document: 1.0
 * Contact: hello@authentiq.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Client;
import org.openapitools.client.model.OAuth2Error;
import org.openapitools.client.model.ProblemDetail;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ClientManagementApi
 */
@Disabled
public class ClientManagementApiTest {

    private final ClientManagementApi api = new ClientManagementApi();

    /**
     * List clients
     *
     * Retrieve a list of clients. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void clientTest() throws ApiException {
        List<Client> response = api.client();
        // TODO: test validations
    }

    /**
     * Delete a client
     *
     * Delete a previously registered client. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void clientClientIdTest() throws ApiException {
        String clientId = null;
        api.clientClientId(clientId);
        // TODO: test validations
    }

    /**
     * Register a client
     *
     * Register a new client with this Authentiq Connect provider.  This endpoint is compatible with [OIDC&#39;s Client Registration](http://openid.net/specs/openid-connect-registration-1_0.html) extension. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createClientTest() throws ApiException {
        Client client = null;
        api.createClient(client);
        // TODO: test validations
    }

    /**
     * View a client
     *
     * Retrieve the configuration of a previously registered client. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getClientTest() throws ApiException {
        String clientId = null;
        Client response = api.getClient(clientId);
        // TODO: test validations
    }

    /**
     * Update a client
     *
     * Update the configuration of a previously registered client. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateClientTest() throws ApiException {
        String clientId = null;
        Client client = null;
        Client response = api.updateClient(clientId, client);
        // TODO: test validations
    }

}
