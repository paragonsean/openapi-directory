/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAssociateFieldConfigurationsWithIssueTypesRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAssociateFieldConfigurationsWithIssueTypesRequest::OAIAssociateFieldConfigurationsWithIssueTypesRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAssociateFieldConfigurationsWithIssueTypesRequest::OAIAssociateFieldConfigurationsWithIssueTypesRequest() {
    this->initializeModel();
}

OAIAssociateFieldConfigurationsWithIssueTypesRequest::~OAIAssociateFieldConfigurationsWithIssueTypesRequest() {}

void OAIAssociateFieldConfigurationsWithIssueTypesRequest::initializeModel() {

    m_mappings_isSet = false;
    m_mappings_isValid = false;
}

void OAIAssociateFieldConfigurationsWithIssueTypesRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAssociateFieldConfigurationsWithIssueTypesRequest::fromJsonObject(QJsonObject json) {

    m_mappings_isValid = ::OpenAPI::fromJsonValue(m_mappings, json[QString("mappings")]);
    m_mappings_isSet = !json[QString("mappings")].isNull() && m_mappings_isValid;
}

QString OAIAssociateFieldConfigurationsWithIssueTypesRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAssociateFieldConfigurationsWithIssueTypesRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_mappings.size() > 0) {
        obj.insert(QString("mappings"), ::OpenAPI::toJsonValue(m_mappings));
    }
    return obj;
}

QSet<OAIFieldConfigurationToIssueTypeMapping> OAIAssociateFieldConfigurationsWithIssueTypesRequest::getMappings() const {
    return m_mappings;
}
void OAIAssociateFieldConfigurationsWithIssueTypesRequest::setMappings(const QSet<OAIFieldConfigurationToIssueTypeMapping> &mappings) {
    m_mappings = mappings;
    m_mappings_isSet = true;
}

bool OAIAssociateFieldConfigurationsWithIssueTypesRequest::is_mappings_Set() const{
    return m_mappings_isSet;
}

bool OAIAssociateFieldConfigurationsWithIssueTypesRequest::is_mappings_Valid() const{
    return m_mappings_isValid;
}

bool OAIAssociateFieldConfigurationsWithIssueTypesRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_mappings.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAssociateFieldConfigurationsWithIssueTypesRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_mappings_isValid && true;
}

} // namespace OpenAPI
