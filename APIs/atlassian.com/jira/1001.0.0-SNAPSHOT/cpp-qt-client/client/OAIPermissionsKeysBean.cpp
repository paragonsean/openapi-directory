/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPermissionsKeysBean.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPermissionsKeysBean::OAIPermissionsKeysBean(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPermissionsKeysBean::OAIPermissionsKeysBean() {
    this->initializeModel();
}

OAIPermissionsKeysBean::~OAIPermissionsKeysBean() {}

void OAIPermissionsKeysBean::initializeModel() {

    m_permissions_isSet = false;
    m_permissions_isValid = false;
}

void OAIPermissionsKeysBean::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPermissionsKeysBean::fromJsonObject(QJsonObject json) {

    m_permissions_isValid = ::OpenAPI::fromJsonValue(m_permissions, json[QString("permissions")]);
    m_permissions_isSet = !json[QString("permissions")].isNull() && m_permissions_isValid;
}

QString OAIPermissionsKeysBean::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPermissionsKeysBean::asJsonObject() const {
    QJsonObject obj;
    if (m_permissions.size() > 0) {
        obj.insert(QString("permissions"), ::OpenAPI::toJsonValue(m_permissions));
    }
    return obj;
}

QList<QString> OAIPermissionsKeysBean::getPermissions() const {
    return m_permissions;
}
void OAIPermissionsKeysBean::setPermissions(const QList<QString> &permissions) {
    m_permissions = permissions;
    m_permissions_isSet = true;
}

bool OAIPermissionsKeysBean::is_permissions_Set() const{
    return m_permissions_isSet;
}

bool OAIPermissionsKeysBean::is_permissions_Valid() const{
    return m_permissions_isValid;
}

bool OAIPermissionsKeysBean::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_permissions.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPermissionsKeysBean::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_permissions_isValid && true;
}

} // namespace OpenAPI
