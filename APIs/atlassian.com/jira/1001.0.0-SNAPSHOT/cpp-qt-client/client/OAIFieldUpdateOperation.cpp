/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFieldUpdateOperation.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFieldUpdateOperation::OAIFieldUpdateOperation(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFieldUpdateOperation::OAIFieldUpdateOperation() {
    this->initializeModel();
}

OAIFieldUpdateOperation::~OAIFieldUpdateOperation() {}

void OAIFieldUpdateOperation::initializeModel() {

    m_add_isSet = false;
    m_add_isValid = false;

    m_copy_isSet = false;
    m_copy_isValid = false;

    m_edit_isSet = false;
    m_edit_isValid = false;

    m_remove_isSet = false;
    m_remove_isValid = false;

    m_r_set_isSet = false;
    m_r_set_isValid = false;
}

void OAIFieldUpdateOperation::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFieldUpdateOperation::fromJsonObject(QJsonObject json) {

    m_add_isValid = ::OpenAPI::fromJsonValue(m_add, json[QString("add")]);
    m_add_isSet = !json[QString("add")].isNull() && m_add_isValid;

    m_copy_isValid = ::OpenAPI::fromJsonValue(m_copy, json[QString("copy")]);
    m_copy_isSet = !json[QString("copy")].isNull() && m_copy_isValid;

    m_edit_isValid = ::OpenAPI::fromJsonValue(m_edit, json[QString("edit")]);
    m_edit_isSet = !json[QString("edit")].isNull() && m_edit_isValid;

    m_remove_isValid = ::OpenAPI::fromJsonValue(m_remove, json[QString("remove")]);
    m_remove_isSet = !json[QString("remove")].isNull() && m_remove_isValid;

    m_r_set_isValid = ::OpenAPI::fromJsonValue(m_r_set, json[QString("set")]);
    m_r_set_isSet = !json[QString("set")].isNull() && m_r_set_isValid;
}

QString OAIFieldUpdateOperation::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFieldUpdateOperation::asJsonObject() const {
    QJsonObject obj;
    if (m_add_isSet) {
        obj.insert(QString("add"), ::OpenAPI::toJsonValue(m_add));
    }
    if (m_copy_isSet) {
        obj.insert(QString("copy"), ::OpenAPI::toJsonValue(m_copy));
    }
    if (m_edit_isSet) {
        obj.insert(QString("edit"), ::OpenAPI::toJsonValue(m_edit));
    }
    if (m_remove_isSet) {
        obj.insert(QString("remove"), ::OpenAPI::toJsonValue(m_remove));
    }
    if (m_r_set_isSet) {
        obj.insert(QString("set"), ::OpenAPI::toJsonValue(m_r_set));
    }
    return obj;
}

QJsonValue OAIFieldUpdateOperation::getAdd() const {
    return m_add;
}
void OAIFieldUpdateOperation::setAdd(const QJsonValue &add) {
    m_add = add;
    m_add_isSet = true;
}

bool OAIFieldUpdateOperation::is_add_Set() const{
    return m_add_isSet;
}

bool OAIFieldUpdateOperation::is_add_Valid() const{
    return m_add_isValid;
}

QJsonValue OAIFieldUpdateOperation::getCopy() const {
    return m_copy;
}
void OAIFieldUpdateOperation::setCopy(const QJsonValue &copy) {
    m_copy = copy;
    m_copy_isSet = true;
}

bool OAIFieldUpdateOperation::is_copy_Set() const{
    return m_copy_isSet;
}

bool OAIFieldUpdateOperation::is_copy_Valid() const{
    return m_copy_isValid;
}

QJsonValue OAIFieldUpdateOperation::getEdit() const {
    return m_edit;
}
void OAIFieldUpdateOperation::setEdit(const QJsonValue &edit) {
    m_edit = edit;
    m_edit_isSet = true;
}

bool OAIFieldUpdateOperation::is_edit_Set() const{
    return m_edit_isSet;
}

bool OAIFieldUpdateOperation::is_edit_Valid() const{
    return m_edit_isValid;
}

QJsonValue OAIFieldUpdateOperation::getRemove() const {
    return m_remove;
}
void OAIFieldUpdateOperation::setRemove(const QJsonValue &remove) {
    m_remove = remove;
    m_remove_isSet = true;
}

bool OAIFieldUpdateOperation::is_remove_Set() const{
    return m_remove_isSet;
}

bool OAIFieldUpdateOperation::is_remove_Valid() const{
    return m_remove_isValid;
}

QJsonValue OAIFieldUpdateOperation::getRSet() const {
    return m_r_set;
}
void OAIFieldUpdateOperation::setRSet(const QJsonValue &r_set) {
    m_r_set = r_set;
    m_r_set_isSet = true;
}

bool OAIFieldUpdateOperation::is_r_set_Set() const{
    return m_r_set_isSet;
}

bool OAIFieldUpdateOperation::is_r_set_Valid() const{
    return m_r_set_isValid;
}

bool OAIFieldUpdateOperation::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_add_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_copy_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_edit_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_remove_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_r_set_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFieldUpdateOperation::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
