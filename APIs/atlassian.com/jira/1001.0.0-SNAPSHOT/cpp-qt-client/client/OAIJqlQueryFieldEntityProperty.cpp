/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIJqlQueryFieldEntityProperty.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIJqlQueryFieldEntityProperty::OAIJqlQueryFieldEntityProperty(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIJqlQueryFieldEntityProperty::OAIJqlQueryFieldEntityProperty() {
    this->initializeModel();
}

OAIJqlQueryFieldEntityProperty::~OAIJqlQueryFieldEntityProperty() {}

void OAIJqlQueryFieldEntityProperty::initializeModel() {

    m_entity_isSet = false;
    m_entity_isValid = false;

    m_key_isSet = false;
    m_key_isValid = false;

    m_path_isSet = false;
    m_path_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAIJqlQueryFieldEntityProperty::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIJqlQueryFieldEntityProperty::fromJsonObject(QJsonObject json) {

    m_entity_isValid = ::OpenAPI::fromJsonValue(m_entity, json[QString("entity")]);
    m_entity_isSet = !json[QString("entity")].isNull() && m_entity_isValid;

    m_key_isValid = ::OpenAPI::fromJsonValue(m_key, json[QString("key")]);
    m_key_isSet = !json[QString("key")].isNull() && m_key_isValid;

    m_path_isValid = ::OpenAPI::fromJsonValue(m_path, json[QString("path")]);
    m_path_isSet = !json[QString("path")].isNull() && m_path_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;
}

QString OAIJqlQueryFieldEntityProperty::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIJqlQueryFieldEntityProperty::asJsonObject() const {
    QJsonObject obj;
    if (m_entity_isSet) {
        obj.insert(QString("entity"), ::OpenAPI::toJsonValue(m_entity));
    }
    if (m_key_isSet) {
        obj.insert(QString("key"), ::OpenAPI::toJsonValue(m_key));
    }
    if (m_path_isSet) {
        obj.insert(QString("path"), ::OpenAPI::toJsonValue(m_path));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

QString OAIJqlQueryFieldEntityProperty::getEntity() const {
    return m_entity;
}
void OAIJqlQueryFieldEntityProperty::setEntity(const QString &entity) {
    m_entity = entity;
    m_entity_isSet = true;
}

bool OAIJqlQueryFieldEntityProperty::is_entity_Set() const{
    return m_entity_isSet;
}

bool OAIJqlQueryFieldEntityProperty::is_entity_Valid() const{
    return m_entity_isValid;
}

QString OAIJqlQueryFieldEntityProperty::getKey() const {
    return m_key;
}
void OAIJqlQueryFieldEntityProperty::setKey(const QString &key) {
    m_key = key;
    m_key_isSet = true;
}

bool OAIJqlQueryFieldEntityProperty::is_key_Set() const{
    return m_key_isSet;
}

bool OAIJqlQueryFieldEntityProperty::is_key_Valid() const{
    return m_key_isValid;
}

QString OAIJqlQueryFieldEntityProperty::getPath() const {
    return m_path;
}
void OAIJqlQueryFieldEntityProperty::setPath(const QString &path) {
    m_path = path;
    m_path_isSet = true;
}

bool OAIJqlQueryFieldEntityProperty::is_path_Set() const{
    return m_path_isSet;
}

bool OAIJqlQueryFieldEntityProperty::is_path_Valid() const{
    return m_path_isValid;
}

QString OAIJqlQueryFieldEntityProperty::getType() const {
    return m_type;
}
void OAIJqlQueryFieldEntityProperty::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIJqlQueryFieldEntityProperty::is_type_Set() const{
    return m_type_isSet;
}

bool OAIJqlQueryFieldEntityProperty::is_type_Valid() const{
    return m_type_isValid;
}

bool OAIJqlQueryFieldEntityProperty::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_entity_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_key_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_path_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIJqlQueryFieldEntityProperty::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_entity_isValid && m_key_isValid && m_path_isValid && true;
}

} // namespace OpenAPI
