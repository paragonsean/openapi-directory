/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIJiraExpressionEvaluationMetaDataBean.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIJiraExpressionEvaluationMetaDataBean::OAIJiraExpressionEvaluationMetaDataBean(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIJiraExpressionEvaluationMetaDataBean::OAIJiraExpressionEvaluationMetaDataBean() {
    this->initializeModel();
}

OAIJiraExpressionEvaluationMetaDataBean::~OAIJiraExpressionEvaluationMetaDataBean() {}

void OAIJiraExpressionEvaluationMetaDataBean::initializeModel() {

    m_complexity_isSet = false;
    m_complexity_isValid = false;

    m_issues_isSet = false;
    m_issues_isValid = false;
}

void OAIJiraExpressionEvaluationMetaDataBean::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIJiraExpressionEvaluationMetaDataBean::fromJsonObject(QJsonObject json) {

    m_complexity_isValid = ::OpenAPI::fromJsonValue(m_complexity, json[QString("complexity")]);
    m_complexity_isSet = !json[QString("complexity")].isNull() && m_complexity_isValid;

    m_issues_isValid = ::OpenAPI::fromJsonValue(m_issues, json[QString("issues")]);
    m_issues_isSet = !json[QString("issues")].isNull() && m_issues_isValid;
}

QString OAIJiraExpressionEvaluationMetaDataBean::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIJiraExpressionEvaluationMetaDataBean::asJsonObject() const {
    QJsonObject obj;
    if (m_complexity.isSet()) {
        obj.insert(QString("complexity"), ::OpenAPI::toJsonValue(m_complexity));
    }
    if (m_issues.isSet()) {
        obj.insert(QString("issues"), ::OpenAPI::toJsonValue(m_issues));
    }
    return obj;
}

OAIJiraExpressionsComplexityBean OAIJiraExpressionEvaluationMetaDataBean::getComplexity() const {
    return m_complexity;
}
void OAIJiraExpressionEvaluationMetaDataBean::setComplexity(const OAIJiraExpressionsComplexityBean &complexity) {
    m_complexity = complexity;
    m_complexity_isSet = true;
}

bool OAIJiraExpressionEvaluationMetaDataBean::is_complexity_Set() const{
    return m_complexity_isSet;
}

bool OAIJiraExpressionEvaluationMetaDataBean::is_complexity_Valid() const{
    return m_complexity_isValid;
}

OAIIssuesMetaBean OAIJiraExpressionEvaluationMetaDataBean::getIssues() const {
    return m_issues;
}
void OAIJiraExpressionEvaluationMetaDataBean::setIssues(const OAIIssuesMetaBean &issues) {
    m_issues = issues;
    m_issues_isSet = true;
}

bool OAIJiraExpressionEvaluationMetaDataBean::is_issues_Set() const{
    return m_issues_isSet;
}

bool OAIJiraExpressionEvaluationMetaDataBean::is_issues_Valid() const{
    return m_issues_isValid;
}

bool OAIJiraExpressionEvaluationMetaDataBean::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_complexity.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_issues.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIJiraExpressionEvaluationMetaDataBean::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
