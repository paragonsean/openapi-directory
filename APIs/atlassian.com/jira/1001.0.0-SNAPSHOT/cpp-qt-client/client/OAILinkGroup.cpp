/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILinkGroup.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILinkGroup::OAILinkGroup(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILinkGroup::OAILinkGroup() {
    this->initializeModel();
}

OAILinkGroup::~OAILinkGroup() {}

void OAILinkGroup::initializeModel() {

    m_groups_isSet = false;
    m_groups_isValid = false;

    m_header_isSet = false;
    m_header_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_links_isSet = false;
    m_links_isValid = false;

    m_style_class_isSet = false;
    m_style_class_isValid = false;

    m_weight_isSet = false;
    m_weight_isValid = false;
}

void OAILinkGroup::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILinkGroup::fromJsonObject(QJsonObject json) {

    m_groups_isValid = ::OpenAPI::fromJsonValue(m_groups, json[QString("groups")]);
    m_groups_isSet = !json[QString("groups")].isNull() && m_groups_isValid;

    m_header_isValid = ::OpenAPI::fromJsonValue(m_header, json[QString("header")]);
    m_header_isSet = !json[QString("header")].isNull() && m_header_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_links_isValid = ::OpenAPI::fromJsonValue(m_links, json[QString("links")]);
    m_links_isSet = !json[QString("links")].isNull() && m_links_isValid;

    m_style_class_isValid = ::OpenAPI::fromJsonValue(m_style_class, json[QString("styleClass")]);
    m_style_class_isSet = !json[QString("styleClass")].isNull() && m_style_class_isValid;

    m_weight_isValid = ::OpenAPI::fromJsonValue(m_weight, json[QString("weight")]);
    m_weight_isSet = !json[QString("weight")].isNull() && m_weight_isValid;
}

QString OAILinkGroup::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILinkGroup::asJsonObject() const {
    QJsonObject obj;
    if (m_groups.size() > 0) {
        obj.insert(QString("groups"), ::OpenAPI::toJsonValue(m_groups));
    }
    if (m_header.isSet()) {
        obj.insert(QString("header"), ::OpenAPI::toJsonValue(m_header));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_links.size() > 0) {
        obj.insert(QString("links"), ::OpenAPI::toJsonValue(m_links));
    }
    if (m_style_class_isSet) {
        obj.insert(QString("styleClass"), ::OpenAPI::toJsonValue(m_style_class));
    }
    if (m_weight_isSet) {
        obj.insert(QString("weight"), ::OpenAPI::toJsonValue(m_weight));
    }
    return obj;
}

QList<OAILinkGroup> OAILinkGroup::getGroups() const {
    return m_groups;
}
void OAILinkGroup::setGroups(const QList<OAILinkGroup> &groups) {
    m_groups = groups;
    m_groups_isSet = true;
}

bool OAILinkGroup::is_groups_Set() const{
    return m_groups_isSet;
}

bool OAILinkGroup::is_groups_Valid() const{
    return m_groups_isValid;
}

OAISimpleLink OAILinkGroup::getHeader() const {
    return m_header;
}
void OAILinkGroup::setHeader(const OAISimpleLink &header) {
    m_header = header;
    m_header_isSet = true;
}

bool OAILinkGroup::is_header_Set() const{
    return m_header_isSet;
}

bool OAILinkGroup::is_header_Valid() const{
    return m_header_isValid;
}

QString OAILinkGroup::getId() const {
    return m_id;
}
void OAILinkGroup::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAILinkGroup::is_id_Set() const{
    return m_id_isSet;
}

bool OAILinkGroup::is_id_Valid() const{
    return m_id_isValid;
}

QList<OAISimpleLink> OAILinkGroup::getLinks() const {
    return m_links;
}
void OAILinkGroup::setLinks(const QList<OAISimpleLink> &links) {
    m_links = links;
    m_links_isSet = true;
}

bool OAILinkGroup::is_links_Set() const{
    return m_links_isSet;
}

bool OAILinkGroup::is_links_Valid() const{
    return m_links_isValid;
}

QString OAILinkGroup::getStyleClass() const {
    return m_style_class;
}
void OAILinkGroup::setStyleClass(const QString &style_class) {
    m_style_class = style_class;
    m_style_class_isSet = true;
}

bool OAILinkGroup::is_style_class_Set() const{
    return m_style_class_isSet;
}

bool OAILinkGroup::is_style_class_Valid() const{
    return m_style_class_isValid;
}

qint32 OAILinkGroup::getWeight() const {
    return m_weight;
}
void OAILinkGroup::setWeight(const qint32 &weight) {
    m_weight = weight;
    m_weight_isSet = true;
}

bool OAILinkGroup::is_weight_Set() const{
    return m_weight_isSet;
}

bool OAILinkGroup::is_weight_Valid() const{
    return m_weight_isValid;
}

bool OAILinkGroup::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_groups.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_header.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_links.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_style_class_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_weight_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILinkGroup::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
