/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIReorderIssuePriorities.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIReorderIssuePriorities::OAIReorderIssuePriorities(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIReorderIssuePriorities::OAIReorderIssuePriorities() {
    this->initializeModel();
}

OAIReorderIssuePriorities::~OAIReorderIssuePriorities() {}

void OAIReorderIssuePriorities::initializeModel() {

    m_after_isSet = false;
    m_after_isValid = false;

    m_ids_isSet = false;
    m_ids_isValid = false;

    m_position_isSet = false;
    m_position_isValid = false;
}

void OAIReorderIssuePriorities::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIReorderIssuePriorities::fromJsonObject(QJsonObject json) {

    m_after_isValid = ::OpenAPI::fromJsonValue(m_after, json[QString("after")]);
    m_after_isSet = !json[QString("after")].isNull() && m_after_isValid;

    m_ids_isValid = ::OpenAPI::fromJsonValue(m_ids, json[QString("ids")]);
    m_ids_isSet = !json[QString("ids")].isNull() && m_ids_isValid;

    m_position_isValid = ::OpenAPI::fromJsonValue(m_position, json[QString("position")]);
    m_position_isSet = !json[QString("position")].isNull() && m_position_isValid;
}

QString OAIReorderIssuePriorities::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIReorderIssuePriorities::asJsonObject() const {
    QJsonObject obj;
    if (m_after_isSet) {
        obj.insert(QString("after"), ::OpenAPI::toJsonValue(m_after));
    }
    if (m_ids.size() > 0) {
        obj.insert(QString("ids"), ::OpenAPI::toJsonValue(m_ids));
    }
    if (m_position_isSet) {
        obj.insert(QString("position"), ::OpenAPI::toJsonValue(m_position));
    }
    return obj;
}

QString OAIReorderIssuePriorities::getAfter() const {
    return m_after;
}
void OAIReorderIssuePriorities::setAfter(const QString &after) {
    m_after = after;
    m_after_isSet = true;
}

bool OAIReorderIssuePriorities::is_after_Set() const{
    return m_after_isSet;
}

bool OAIReorderIssuePriorities::is_after_Valid() const{
    return m_after_isValid;
}

QList<QString> OAIReorderIssuePriorities::getIds() const {
    return m_ids;
}
void OAIReorderIssuePriorities::setIds(const QList<QString> &ids) {
    m_ids = ids;
    m_ids_isSet = true;
}

bool OAIReorderIssuePriorities::is_ids_Set() const{
    return m_ids_isSet;
}

bool OAIReorderIssuePriorities::is_ids_Valid() const{
    return m_ids_isValid;
}

QString OAIReorderIssuePriorities::getPosition() const {
    return m_position;
}
void OAIReorderIssuePriorities::setPosition(const QString &position) {
    m_position = position;
    m_position_isSet = true;
}

bool OAIReorderIssuePriorities::is_position_Set() const{
    return m_position_isSet;
}

bool OAIReorderIssuePriorities::is_position_Valid() const{
    return m_position_isValid;
}

bool OAIReorderIssuePriorities::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_after_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ids.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_position_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIReorderIssuePriorities::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_ids_isValid && true;
}

} // namespace OpenAPI
