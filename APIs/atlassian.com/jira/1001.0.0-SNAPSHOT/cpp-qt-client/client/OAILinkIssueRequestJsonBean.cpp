/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILinkIssueRequestJsonBean.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILinkIssueRequestJsonBean::OAILinkIssueRequestJsonBean(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILinkIssueRequestJsonBean::OAILinkIssueRequestJsonBean() {
    this->initializeModel();
}

OAILinkIssueRequestJsonBean::~OAILinkIssueRequestJsonBean() {}

void OAILinkIssueRequestJsonBean::initializeModel() {

    m_comment_isSet = false;
    m_comment_isValid = false;

    m_inward_issue_isSet = false;
    m_inward_issue_isValid = false;

    m_outward_issue_isSet = false;
    m_outward_issue_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAILinkIssueRequestJsonBean::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILinkIssueRequestJsonBean::fromJsonObject(QJsonObject json) {

    m_comment_isValid = ::OpenAPI::fromJsonValue(m_comment, json[QString("comment")]);
    m_comment_isSet = !json[QString("comment")].isNull() && m_comment_isValid;

    m_inward_issue_isValid = ::OpenAPI::fromJsonValue(m_inward_issue, json[QString("inwardIssue")]);
    m_inward_issue_isSet = !json[QString("inwardIssue")].isNull() && m_inward_issue_isValid;

    m_outward_issue_isValid = ::OpenAPI::fromJsonValue(m_outward_issue, json[QString("outwardIssue")]);
    m_outward_issue_isSet = !json[QString("outwardIssue")].isNull() && m_outward_issue_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;
}

QString OAILinkIssueRequestJsonBean::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILinkIssueRequestJsonBean::asJsonObject() const {
    QJsonObject obj;
    if (m_comment.isSet()) {
        obj.insert(QString("comment"), ::OpenAPI::toJsonValue(m_comment));
    }
    if (m_inward_issue.isSet()) {
        obj.insert(QString("inwardIssue"), ::OpenAPI::toJsonValue(m_inward_issue));
    }
    if (m_outward_issue.isSet()) {
        obj.insert(QString("outwardIssue"), ::OpenAPI::toJsonValue(m_outward_issue));
    }
    if (m_type.isSet()) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

OAIComment OAILinkIssueRequestJsonBean::getComment() const {
    return m_comment;
}
void OAILinkIssueRequestJsonBean::setComment(const OAIComment &comment) {
    m_comment = comment;
    m_comment_isSet = true;
}

bool OAILinkIssueRequestJsonBean::is_comment_Set() const{
    return m_comment_isSet;
}

bool OAILinkIssueRequestJsonBean::is_comment_Valid() const{
    return m_comment_isValid;
}

OAILinkedIssue OAILinkIssueRequestJsonBean::getInwardIssue() const {
    return m_inward_issue;
}
void OAILinkIssueRequestJsonBean::setInwardIssue(const OAILinkedIssue &inward_issue) {
    m_inward_issue = inward_issue;
    m_inward_issue_isSet = true;
}

bool OAILinkIssueRequestJsonBean::is_inward_issue_Set() const{
    return m_inward_issue_isSet;
}

bool OAILinkIssueRequestJsonBean::is_inward_issue_Valid() const{
    return m_inward_issue_isValid;
}

OAILinkedIssue OAILinkIssueRequestJsonBean::getOutwardIssue() const {
    return m_outward_issue;
}
void OAILinkIssueRequestJsonBean::setOutwardIssue(const OAILinkedIssue &outward_issue) {
    m_outward_issue = outward_issue;
    m_outward_issue_isSet = true;
}

bool OAILinkIssueRequestJsonBean::is_outward_issue_Set() const{
    return m_outward_issue_isSet;
}

bool OAILinkIssueRequestJsonBean::is_outward_issue_Valid() const{
    return m_outward_issue_isValid;
}

OAIIssueLinkType OAILinkIssueRequestJsonBean::getType() const {
    return m_type;
}
void OAILinkIssueRequestJsonBean::setType(const OAIIssueLinkType &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAILinkIssueRequestJsonBean::is_type_Set() const{
    return m_type_isSet;
}

bool OAILinkIssueRequestJsonBean::is_type_Valid() const{
    return m_type_isValid;
}

bool OAILinkIssueRequestJsonBean::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_comment.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_inward_issue.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_outward_issue.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_type.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILinkIssueRequestJsonBean::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_inward_issue_isValid && m_outward_issue_isValid && m_type_isValid && true;
}

} // namespace OpenAPI
