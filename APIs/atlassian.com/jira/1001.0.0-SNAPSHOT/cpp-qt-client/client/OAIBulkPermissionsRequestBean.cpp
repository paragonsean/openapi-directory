/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBulkPermissionsRequestBean.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBulkPermissionsRequestBean::OAIBulkPermissionsRequestBean(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBulkPermissionsRequestBean::OAIBulkPermissionsRequestBean() {
    this->initializeModel();
}

OAIBulkPermissionsRequestBean::~OAIBulkPermissionsRequestBean() {}

void OAIBulkPermissionsRequestBean::initializeModel() {

    m_account_id_isSet = false;
    m_account_id_isValid = false;

    m_global_permissions_isSet = false;
    m_global_permissions_isValid = false;

    m_project_permissions_isSet = false;
    m_project_permissions_isValid = false;
}

void OAIBulkPermissionsRequestBean::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBulkPermissionsRequestBean::fromJsonObject(QJsonObject json) {

    m_account_id_isValid = ::OpenAPI::fromJsonValue(m_account_id, json[QString("accountId")]);
    m_account_id_isSet = !json[QString("accountId")].isNull() && m_account_id_isValid;

    m_global_permissions_isValid = ::OpenAPI::fromJsonValue(m_global_permissions, json[QString("globalPermissions")]);
    m_global_permissions_isSet = !json[QString("globalPermissions")].isNull() && m_global_permissions_isValid;

    m_project_permissions_isValid = ::OpenAPI::fromJsonValue(m_project_permissions, json[QString("projectPermissions")]);
    m_project_permissions_isSet = !json[QString("projectPermissions")].isNull() && m_project_permissions_isValid;
}

QString OAIBulkPermissionsRequestBean::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBulkPermissionsRequestBean::asJsonObject() const {
    QJsonObject obj;
    if (m_account_id_isSet) {
        obj.insert(QString("accountId"), ::OpenAPI::toJsonValue(m_account_id));
    }
    if (m_global_permissions.size() > 0) {
        obj.insert(QString("globalPermissions"), ::OpenAPI::toJsonValue(m_global_permissions));
    }
    if (m_project_permissions.size() > 0) {
        obj.insert(QString("projectPermissions"), ::OpenAPI::toJsonValue(m_project_permissions));
    }
    return obj;
}

QString OAIBulkPermissionsRequestBean::getAccountId() const {
    return m_account_id;
}
void OAIBulkPermissionsRequestBean::setAccountId(const QString &account_id) {
    m_account_id = account_id;
    m_account_id_isSet = true;
}

bool OAIBulkPermissionsRequestBean::is_account_id_Set() const{
    return m_account_id_isSet;
}

bool OAIBulkPermissionsRequestBean::is_account_id_Valid() const{
    return m_account_id_isValid;
}

QSet<QString> OAIBulkPermissionsRequestBean::getGlobalPermissions() const {
    return m_global_permissions;
}
void OAIBulkPermissionsRequestBean::setGlobalPermissions(const QSet<QString> &global_permissions) {
    m_global_permissions = global_permissions;
    m_global_permissions_isSet = true;
}

bool OAIBulkPermissionsRequestBean::is_global_permissions_Set() const{
    return m_global_permissions_isSet;
}

bool OAIBulkPermissionsRequestBean::is_global_permissions_Valid() const{
    return m_global_permissions_isValid;
}

QSet<OAIBulkProjectPermissions> OAIBulkPermissionsRequestBean::getProjectPermissions() const {
    return m_project_permissions;
}
void OAIBulkPermissionsRequestBean::setProjectPermissions(const QSet<OAIBulkProjectPermissions> &project_permissions) {
    m_project_permissions = project_permissions;
    m_project_permissions_isSet = true;
}

bool OAIBulkPermissionsRequestBean::is_project_permissions_Set() const{
    return m_project_permissions_isSet;
}

bool OAIBulkPermissionsRequestBean::is_project_permissions_Valid() const{
    return m_project_permissions_isValid;
}

bool OAIBulkPermissionsRequestBean::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_global_permissions.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_project_permissions.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBulkPermissionsRequestBean::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
