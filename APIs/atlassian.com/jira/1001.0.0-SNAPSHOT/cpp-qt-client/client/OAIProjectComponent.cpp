/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProjectComponent.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProjectComponent::OAIProjectComponent(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProjectComponent::OAIProjectComponent() {
    this->initializeModel();
}

OAIProjectComponent::~OAIProjectComponent() {}

void OAIProjectComponent::initializeModel() {

    m_assignee_isSet = false;
    m_assignee_isValid = false;

    m_assignee_type_isSet = false;
    m_assignee_type_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_is_assignee_type_valid_isSet = false;
    m_is_assignee_type_valid_isValid = false;

    m_lead_isSet = false;
    m_lead_isValid = false;

    m_lead_account_id_isSet = false;
    m_lead_account_id_isValid = false;

    m_lead_user_name_isSet = false;
    m_lead_user_name_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_project_isSet = false;
    m_project_isValid = false;

    m_project_id_isSet = false;
    m_project_id_isValid = false;

    m_real_assignee_isSet = false;
    m_real_assignee_isValid = false;

    m_real_assignee_type_isSet = false;
    m_real_assignee_type_isValid = false;

    m_self_isSet = false;
    m_self_isValid = false;
}

void OAIProjectComponent::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIProjectComponent::fromJsonObject(QJsonObject json) {

    m_assignee_isValid = ::OpenAPI::fromJsonValue(m_assignee, json[QString("assignee")]);
    m_assignee_isSet = !json[QString("assignee")].isNull() && m_assignee_isValid;

    m_assignee_type_isValid = ::OpenAPI::fromJsonValue(m_assignee_type, json[QString("assigneeType")]);
    m_assignee_type_isSet = !json[QString("assigneeType")].isNull() && m_assignee_type_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_is_assignee_type_valid_isValid = ::OpenAPI::fromJsonValue(m_is_assignee_type_valid, json[QString("isAssigneeTypeValid")]);
    m_is_assignee_type_valid_isSet = !json[QString("isAssigneeTypeValid")].isNull() && m_is_assignee_type_valid_isValid;

    m_lead_isValid = ::OpenAPI::fromJsonValue(m_lead, json[QString("lead")]);
    m_lead_isSet = !json[QString("lead")].isNull() && m_lead_isValid;

    m_lead_account_id_isValid = ::OpenAPI::fromJsonValue(m_lead_account_id, json[QString("leadAccountId")]);
    m_lead_account_id_isSet = !json[QString("leadAccountId")].isNull() && m_lead_account_id_isValid;

    m_lead_user_name_isValid = ::OpenAPI::fromJsonValue(m_lead_user_name, json[QString("leadUserName")]);
    m_lead_user_name_isSet = !json[QString("leadUserName")].isNull() && m_lead_user_name_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_project_isValid = ::OpenAPI::fromJsonValue(m_project, json[QString("project")]);
    m_project_isSet = !json[QString("project")].isNull() && m_project_isValid;

    m_project_id_isValid = ::OpenAPI::fromJsonValue(m_project_id, json[QString("projectId")]);
    m_project_id_isSet = !json[QString("projectId")].isNull() && m_project_id_isValid;

    m_real_assignee_isValid = ::OpenAPI::fromJsonValue(m_real_assignee, json[QString("realAssignee")]);
    m_real_assignee_isSet = !json[QString("realAssignee")].isNull() && m_real_assignee_isValid;

    m_real_assignee_type_isValid = ::OpenAPI::fromJsonValue(m_real_assignee_type, json[QString("realAssigneeType")]);
    m_real_assignee_type_isSet = !json[QString("realAssigneeType")].isNull() && m_real_assignee_type_isValid;

    m_self_isValid = ::OpenAPI::fromJsonValue(m_self, json[QString("self")]);
    m_self_isSet = !json[QString("self")].isNull() && m_self_isValid;
}

QString OAIProjectComponent::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIProjectComponent::asJsonObject() const {
    QJsonObject obj;
    if (m_assignee.isSet()) {
        obj.insert(QString("assignee"), ::OpenAPI::toJsonValue(m_assignee));
    }
    if (m_assignee_type_isSet) {
        obj.insert(QString("assigneeType"), ::OpenAPI::toJsonValue(m_assignee_type));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_is_assignee_type_valid_isSet) {
        obj.insert(QString("isAssigneeTypeValid"), ::OpenAPI::toJsonValue(m_is_assignee_type_valid));
    }
    if (m_lead.isSet()) {
        obj.insert(QString("lead"), ::OpenAPI::toJsonValue(m_lead));
    }
    if (m_lead_account_id_isSet) {
        obj.insert(QString("leadAccountId"), ::OpenAPI::toJsonValue(m_lead_account_id));
    }
    if (m_lead_user_name_isSet) {
        obj.insert(QString("leadUserName"), ::OpenAPI::toJsonValue(m_lead_user_name));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_project_isSet) {
        obj.insert(QString("project"), ::OpenAPI::toJsonValue(m_project));
    }
    if (m_project_id_isSet) {
        obj.insert(QString("projectId"), ::OpenAPI::toJsonValue(m_project_id));
    }
    if (m_real_assignee.isSet()) {
        obj.insert(QString("realAssignee"), ::OpenAPI::toJsonValue(m_real_assignee));
    }
    if (m_real_assignee_type_isSet) {
        obj.insert(QString("realAssigneeType"), ::OpenAPI::toJsonValue(m_real_assignee_type));
    }
    if (m_self_isSet) {
        obj.insert(QString("self"), ::OpenAPI::toJsonValue(m_self));
    }
    return obj;
}

OAIUser OAIProjectComponent::getAssignee() const {
    return m_assignee;
}
void OAIProjectComponent::setAssignee(const OAIUser &assignee) {
    m_assignee = assignee;
    m_assignee_isSet = true;
}

bool OAIProjectComponent::is_assignee_Set() const{
    return m_assignee_isSet;
}

bool OAIProjectComponent::is_assignee_Valid() const{
    return m_assignee_isValid;
}

QString OAIProjectComponent::getAssigneeType() const {
    return m_assignee_type;
}
void OAIProjectComponent::setAssigneeType(const QString &assignee_type) {
    m_assignee_type = assignee_type;
    m_assignee_type_isSet = true;
}

bool OAIProjectComponent::is_assignee_type_Set() const{
    return m_assignee_type_isSet;
}

bool OAIProjectComponent::is_assignee_type_Valid() const{
    return m_assignee_type_isValid;
}

QString OAIProjectComponent::getDescription() const {
    return m_description;
}
void OAIProjectComponent::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIProjectComponent::is_description_Set() const{
    return m_description_isSet;
}

bool OAIProjectComponent::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIProjectComponent::getId() const {
    return m_id;
}
void OAIProjectComponent::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIProjectComponent::is_id_Set() const{
    return m_id_isSet;
}

bool OAIProjectComponent::is_id_Valid() const{
    return m_id_isValid;
}

bool OAIProjectComponent::isIsAssigneeTypeValid() const {
    return m_is_assignee_type_valid;
}
void OAIProjectComponent::setIsAssigneeTypeValid(const bool &is_assignee_type_valid) {
    m_is_assignee_type_valid = is_assignee_type_valid;
    m_is_assignee_type_valid_isSet = true;
}

bool OAIProjectComponent::is_is_assignee_type_valid_Set() const{
    return m_is_assignee_type_valid_isSet;
}

bool OAIProjectComponent::is_is_assignee_type_valid_Valid() const{
    return m_is_assignee_type_valid_isValid;
}

OAIUser OAIProjectComponent::getLead() const {
    return m_lead;
}
void OAIProjectComponent::setLead(const OAIUser &lead) {
    m_lead = lead;
    m_lead_isSet = true;
}

bool OAIProjectComponent::is_lead_Set() const{
    return m_lead_isSet;
}

bool OAIProjectComponent::is_lead_Valid() const{
    return m_lead_isValid;
}

QString OAIProjectComponent::getLeadAccountId() const {
    return m_lead_account_id;
}
void OAIProjectComponent::setLeadAccountId(const QString &lead_account_id) {
    m_lead_account_id = lead_account_id;
    m_lead_account_id_isSet = true;
}

bool OAIProjectComponent::is_lead_account_id_Set() const{
    return m_lead_account_id_isSet;
}

bool OAIProjectComponent::is_lead_account_id_Valid() const{
    return m_lead_account_id_isValid;
}

QString OAIProjectComponent::getLeadUserName() const {
    return m_lead_user_name;
}
void OAIProjectComponent::setLeadUserName(const QString &lead_user_name) {
    m_lead_user_name = lead_user_name;
    m_lead_user_name_isSet = true;
}

bool OAIProjectComponent::is_lead_user_name_Set() const{
    return m_lead_user_name_isSet;
}

bool OAIProjectComponent::is_lead_user_name_Valid() const{
    return m_lead_user_name_isValid;
}

QString OAIProjectComponent::getName() const {
    return m_name;
}
void OAIProjectComponent::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIProjectComponent::is_name_Set() const{
    return m_name_isSet;
}

bool OAIProjectComponent::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIProjectComponent::getProject() const {
    return m_project;
}
void OAIProjectComponent::setProject(const QString &project) {
    m_project = project;
    m_project_isSet = true;
}

bool OAIProjectComponent::is_project_Set() const{
    return m_project_isSet;
}

bool OAIProjectComponent::is_project_Valid() const{
    return m_project_isValid;
}

qint64 OAIProjectComponent::getProjectId() const {
    return m_project_id;
}
void OAIProjectComponent::setProjectId(const qint64 &project_id) {
    m_project_id = project_id;
    m_project_id_isSet = true;
}

bool OAIProjectComponent::is_project_id_Set() const{
    return m_project_id_isSet;
}

bool OAIProjectComponent::is_project_id_Valid() const{
    return m_project_id_isValid;
}

OAIUser OAIProjectComponent::getRealAssignee() const {
    return m_real_assignee;
}
void OAIProjectComponent::setRealAssignee(const OAIUser &real_assignee) {
    m_real_assignee = real_assignee;
    m_real_assignee_isSet = true;
}

bool OAIProjectComponent::is_real_assignee_Set() const{
    return m_real_assignee_isSet;
}

bool OAIProjectComponent::is_real_assignee_Valid() const{
    return m_real_assignee_isValid;
}

QString OAIProjectComponent::getRealAssigneeType() const {
    return m_real_assignee_type;
}
void OAIProjectComponent::setRealAssigneeType(const QString &real_assignee_type) {
    m_real_assignee_type = real_assignee_type;
    m_real_assignee_type_isSet = true;
}

bool OAIProjectComponent::is_real_assignee_type_Set() const{
    return m_real_assignee_type_isSet;
}

bool OAIProjectComponent::is_real_assignee_type_Valid() const{
    return m_real_assignee_type_isValid;
}

QString OAIProjectComponent::getSelf() const {
    return m_self;
}
void OAIProjectComponent::setSelf(const QString &self) {
    m_self = self;
    m_self_isSet = true;
}

bool OAIProjectComponent::is_self_Set() const{
    return m_self_isSet;
}

bool OAIProjectComponent::is_self_Valid() const{
    return m_self_isValid;
}

bool OAIProjectComponent::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_assignee.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_assignee_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_assignee_type_valid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_lead.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_lead_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_lead_user_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_project_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_project_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_real_assignee.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_real_assignee_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_self_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIProjectComponent::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
