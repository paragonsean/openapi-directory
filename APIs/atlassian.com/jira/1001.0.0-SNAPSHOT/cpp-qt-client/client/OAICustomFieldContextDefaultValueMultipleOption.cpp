/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICustomFieldContextDefaultValueMultipleOption.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICustomFieldContextDefaultValueMultipleOption::OAICustomFieldContextDefaultValueMultipleOption(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICustomFieldContextDefaultValueMultipleOption::OAICustomFieldContextDefaultValueMultipleOption() {
    this->initializeModel();
}

OAICustomFieldContextDefaultValueMultipleOption::~OAICustomFieldContextDefaultValueMultipleOption() {}

void OAICustomFieldContextDefaultValueMultipleOption::initializeModel() {

    m_context_id_isSet = false;
    m_context_id_isValid = false;

    m_option_ids_isSet = false;
    m_option_ids_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAICustomFieldContextDefaultValueMultipleOption::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICustomFieldContextDefaultValueMultipleOption::fromJsonObject(QJsonObject json) {

    m_context_id_isValid = ::OpenAPI::fromJsonValue(m_context_id, json[QString("contextId")]);
    m_context_id_isSet = !json[QString("contextId")].isNull() && m_context_id_isValid;

    m_option_ids_isValid = ::OpenAPI::fromJsonValue(m_option_ids, json[QString("optionIds")]);
    m_option_ids_isSet = !json[QString("optionIds")].isNull() && m_option_ids_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;
}

QString OAICustomFieldContextDefaultValueMultipleOption::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICustomFieldContextDefaultValueMultipleOption::asJsonObject() const {
    QJsonObject obj;
    if (m_context_id_isSet) {
        obj.insert(QString("contextId"), ::OpenAPI::toJsonValue(m_context_id));
    }
    if (m_option_ids.size() > 0) {
        obj.insert(QString("optionIds"), ::OpenAPI::toJsonValue(m_option_ids));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

QString OAICustomFieldContextDefaultValueMultipleOption::getContextId() const {
    return m_context_id;
}
void OAICustomFieldContextDefaultValueMultipleOption::setContextId(const QString &context_id) {
    m_context_id = context_id;
    m_context_id_isSet = true;
}

bool OAICustomFieldContextDefaultValueMultipleOption::is_context_id_Set() const{
    return m_context_id_isSet;
}

bool OAICustomFieldContextDefaultValueMultipleOption::is_context_id_Valid() const{
    return m_context_id_isValid;
}

QList<QString> OAICustomFieldContextDefaultValueMultipleOption::getOptionIds() const {
    return m_option_ids;
}
void OAICustomFieldContextDefaultValueMultipleOption::setOptionIds(const QList<QString> &option_ids) {
    m_option_ids = option_ids;
    m_option_ids_isSet = true;
}

bool OAICustomFieldContextDefaultValueMultipleOption::is_option_ids_Set() const{
    return m_option_ids_isSet;
}

bool OAICustomFieldContextDefaultValueMultipleOption::is_option_ids_Valid() const{
    return m_option_ids_isValid;
}

QString OAICustomFieldContextDefaultValueMultipleOption::getType() const {
    return m_type;
}
void OAICustomFieldContextDefaultValueMultipleOption::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAICustomFieldContextDefaultValueMultipleOption::is_type_Set() const{
    return m_type_isSet;
}

bool OAICustomFieldContextDefaultValueMultipleOption::is_type_Valid() const{
    return m_type_isValid;
}

bool OAICustomFieldContextDefaultValueMultipleOption::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_context_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_option_ids.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICustomFieldContextDefaultValueMultipleOption::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_context_id_isValid && m_option_ids_isValid && m_type_isValid && true;
}

} // namespace OpenAPI
