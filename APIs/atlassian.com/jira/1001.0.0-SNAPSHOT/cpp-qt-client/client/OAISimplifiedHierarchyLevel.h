/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISimplifiedHierarchyLevel.h
 *
 * 
 */

#ifndef OAISimplifiedHierarchyLevel_H
#define OAISimplifiedHierarchyLevel_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISimplifiedHierarchyLevel : public OAIObject {
public:
    OAISimplifiedHierarchyLevel();
    OAISimplifiedHierarchyLevel(QString json);
    ~OAISimplifiedHierarchyLevel() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint64 getAboveLevelId() const;
    void setAboveLevelId(const qint64 &above_level_id);
    bool is_above_level_id_Set() const;
    bool is_above_level_id_Valid() const;

    qint64 getBelowLevelId() const;
    void setBelowLevelId(const qint64 &below_level_id);
    bool is_below_level_id_Set() const;
    bool is_below_level_id_Valid() const;

    QString getExternalUuid() const;
    void setExternalUuid(const QString &external_uuid);
    bool is_external_uuid_Set() const;
    bool is_external_uuid_Valid() const;

    qint32 getHierarchyLevelNumber() const;
    void setHierarchyLevelNumber(const qint32 &hierarchy_level_number);
    bool is_hierarchy_level_number_Set() const;
    bool is_hierarchy_level_number_Valid() const;

    qint64 getId() const;
    void setId(const qint64 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QList<qint64> getIssueTypeIds() const;
    void setIssueTypeIds(const QList<qint64> &issue_type_ids);
    bool is_issue_type_ids_Set() const;
    bool is_issue_type_ids_Valid() const;

    qint32 getLevel() const;
    void setLevel(const qint32 &level);
    bool is_level_Set() const;
    bool is_level_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    qint64 getProjectConfigurationId() const;
    void setProjectConfigurationId(const qint64 &project_configuration_id);
    bool is_project_configuration_id_Set() const;
    bool is_project_configuration_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint64 m_above_level_id;
    bool m_above_level_id_isSet;
    bool m_above_level_id_isValid;

    qint64 m_below_level_id;
    bool m_below_level_id_isSet;
    bool m_below_level_id_isValid;

    QString m_external_uuid;
    bool m_external_uuid_isSet;
    bool m_external_uuid_isValid;

    qint32 m_hierarchy_level_number;
    bool m_hierarchy_level_number_isSet;
    bool m_hierarchy_level_number_isValid;

    qint64 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QList<qint64> m_issue_type_ids;
    bool m_issue_type_ids_isSet;
    bool m_issue_type_ids_isValid;

    qint32 m_level;
    bool m_level_isSet;
    bool m_level_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    qint64 m_project_configuration_id;
    bool m_project_configuration_id_isSet;
    bool m_project_configuration_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISimplifiedHierarchyLevel)

#endif // OAISimplifiedHierarchyLevel_H
