/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIJiraExpressionValidationError.h
 *
 * Details about syntax and type errors. The error details apply to the entire expression, unless the object includes:   *  &#x60;line&#x60; and &#x60;column&#x60;  *  &#x60;expression&#x60;
 */

#ifndef OAIJiraExpressionValidationError_H
#define OAIJiraExpressionValidationError_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIJiraExpressionValidationError : public OAIObject {
public:
    OAIJiraExpressionValidationError();
    OAIJiraExpressionValidationError(QString json);
    ~OAIJiraExpressionValidationError() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getColumn() const;
    void setColumn(const qint32 &column);
    bool is_column_Set() const;
    bool is_column_Valid() const;

    QString getExpression() const;
    void setExpression(const QString &expression);
    bool is_expression_Set() const;
    bool is_expression_Valid() const;

    qint32 getLine() const;
    void setLine(const qint32 &line);
    bool is_line_Set() const;
    bool is_line_Valid() const;

    QString getMessage() const;
    void setMessage(const QString &message);
    bool is_message_Set() const;
    bool is_message_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_column;
    bool m_column_isSet;
    bool m_column_isValid;

    QString m_expression;
    bool m_expression_isSet;
    bool m_expression_isValid;

    qint32 m_line;
    bool m_line_isSet;
    bool m_line_isValid;

    QString m_message;
    bool m_message_isSet;
    bool m_message_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIJiraExpressionValidationError)

#endif // OAIJiraExpressionValidationError_H
