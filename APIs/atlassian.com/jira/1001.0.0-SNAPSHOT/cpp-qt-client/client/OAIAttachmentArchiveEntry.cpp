/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAttachmentArchiveEntry.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAttachmentArchiveEntry::OAIAttachmentArchiveEntry(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAttachmentArchiveEntry::OAIAttachmentArchiveEntry() {
    this->initializeModel();
}

OAIAttachmentArchiveEntry::~OAIAttachmentArchiveEntry() {}

void OAIAttachmentArchiveEntry::initializeModel() {

    m_abbreviated_name_isSet = false;
    m_abbreviated_name_isValid = false;

    m_entry_index_isSet = false;
    m_entry_index_isValid = false;

    m_media_type_isSet = false;
    m_media_type_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_size_isSet = false;
    m_size_isValid = false;
}

void OAIAttachmentArchiveEntry::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAttachmentArchiveEntry::fromJsonObject(QJsonObject json) {

    m_abbreviated_name_isValid = ::OpenAPI::fromJsonValue(m_abbreviated_name, json[QString("abbreviatedName")]);
    m_abbreviated_name_isSet = !json[QString("abbreviatedName")].isNull() && m_abbreviated_name_isValid;

    m_entry_index_isValid = ::OpenAPI::fromJsonValue(m_entry_index, json[QString("entryIndex")]);
    m_entry_index_isSet = !json[QString("entryIndex")].isNull() && m_entry_index_isValid;

    m_media_type_isValid = ::OpenAPI::fromJsonValue(m_media_type, json[QString("mediaType")]);
    m_media_type_isSet = !json[QString("mediaType")].isNull() && m_media_type_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_size_isValid = ::OpenAPI::fromJsonValue(m_size, json[QString("size")]);
    m_size_isSet = !json[QString("size")].isNull() && m_size_isValid;
}

QString OAIAttachmentArchiveEntry::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAttachmentArchiveEntry::asJsonObject() const {
    QJsonObject obj;
    if (m_abbreviated_name_isSet) {
        obj.insert(QString("abbreviatedName"), ::OpenAPI::toJsonValue(m_abbreviated_name));
    }
    if (m_entry_index_isSet) {
        obj.insert(QString("entryIndex"), ::OpenAPI::toJsonValue(m_entry_index));
    }
    if (m_media_type_isSet) {
        obj.insert(QString("mediaType"), ::OpenAPI::toJsonValue(m_media_type));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_size_isSet) {
        obj.insert(QString("size"), ::OpenAPI::toJsonValue(m_size));
    }
    return obj;
}

QString OAIAttachmentArchiveEntry::getAbbreviatedName() const {
    return m_abbreviated_name;
}
void OAIAttachmentArchiveEntry::setAbbreviatedName(const QString &abbreviated_name) {
    m_abbreviated_name = abbreviated_name;
    m_abbreviated_name_isSet = true;
}

bool OAIAttachmentArchiveEntry::is_abbreviated_name_Set() const{
    return m_abbreviated_name_isSet;
}

bool OAIAttachmentArchiveEntry::is_abbreviated_name_Valid() const{
    return m_abbreviated_name_isValid;
}

qint64 OAIAttachmentArchiveEntry::getEntryIndex() const {
    return m_entry_index;
}
void OAIAttachmentArchiveEntry::setEntryIndex(const qint64 &entry_index) {
    m_entry_index = entry_index;
    m_entry_index_isSet = true;
}

bool OAIAttachmentArchiveEntry::is_entry_index_Set() const{
    return m_entry_index_isSet;
}

bool OAIAttachmentArchiveEntry::is_entry_index_Valid() const{
    return m_entry_index_isValid;
}

QString OAIAttachmentArchiveEntry::getMediaType() const {
    return m_media_type;
}
void OAIAttachmentArchiveEntry::setMediaType(const QString &media_type) {
    m_media_type = media_type;
    m_media_type_isSet = true;
}

bool OAIAttachmentArchiveEntry::is_media_type_Set() const{
    return m_media_type_isSet;
}

bool OAIAttachmentArchiveEntry::is_media_type_Valid() const{
    return m_media_type_isValid;
}

QString OAIAttachmentArchiveEntry::getName() const {
    return m_name;
}
void OAIAttachmentArchiveEntry::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIAttachmentArchiveEntry::is_name_Set() const{
    return m_name_isSet;
}

bool OAIAttachmentArchiveEntry::is_name_Valid() const{
    return m_name_isValid;
}

qint64 OAIAttachmentArchiveEntry::getSize() const {
    return m_size;
}
void OAIAttachmentArchiveEntry::setSize(const qint64 &size) {
    m_size = size;
    m_size_isSet = true;
}

bool OAIAttachmentArchiveEntry::is_size_Set() const{
    return m_size_isSet;
}

bool OAIAttachmentArchiveEntry::is_size_Valid() const{
    return m_size_isValid;
}

bool OAIAttachmentArchiveEntry::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_abbreviated_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_entry_index_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_media_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_size_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAttachmentArchiveEntry::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
