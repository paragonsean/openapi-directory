/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIApplicationRole.h
 *
 * Details of an application role.
 */

#ifndef OAIApplicationRole_H
#define OAIApplicationRole_H

#include <QJsonObject>

#include "OAIGroupName.h"
#include <QList>
#include <QSet>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGroupName;

class OAIApplicationRole : public OAIObject {
public:
    OAIApplicationRole();
    OAIApplicationRole(QString json);
    ~OAIApplicationRole() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QSet<QString> getDefaultGroups() const;
    void setDefaultGroups(const QSet<QString> &default_groups);
    bool is_default_groups_Set() const;
    bool is_default_groups_Valid() const;

    QList<OAIGroupName> getDefaultGroupsDetails() const;
    void setDefaultGroupsDetails(const QList<OAIGroupName> &default_groups_details);
    bool is_default_groups_details_Set() const;
    bool is_default_groups_details_Valid() const;

    bool isDefined() const;
    void setDefined(const bool &defined);
    bool is_defined_Set() const;
    bool is_defined_Valid() const;

    QList<OAIGroupName> getGroupDetails() const;
    void setGroupDetails(const QList<OAIGroupName> &group_details);
    bool is_group_details_Set() const;
    bool is_group_details_Valid() const;

    QSet<QString> getGroups() const;
    void setGroups(const QSet<QString> &groups);
    bool is_groups_Set() const;
    bool is_groups_Valid() const;

    bool isHasUnlimitedSeats() const;
    void setHasUnlimitedSeats(const bool &has_unlimited_seats);
    bool is_has_unlimited_seats_Set() const;
    bool is_has_unlimited_seats_Valid() const;

    QString getKey() const;
    void setKey(const QString &key);
    bool is_key_Set() const;
    bool is_key_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    qint32 getNumberOfSeats() const;
    void setNumberOfSeats(const qint32 &number_of_seats);
    bool is_number_of_seats_Set() const;
    bool is_number_of_seats_Valid() const;

    bool isPlatform() const;
    void setPlatform(const bool &platform);
    bool is_platform_Set() const;
    bool is_platform_Valid() const;

    qint32 getRemainingSeats() const;
    void setRemainingSeats(const qint32 &remaining_seats);
    bool is_remaining_seats_Set() const;
    bool is_remaining_seats_Valid() const;

    bool isSelectedByDefault() const;
    void setSelectedByDefault(const bool &selected_by_default);
    bool is_selected_by_default_Set() const;
    bool is_selected_by_default_Valid() const;

    qint32 getUserCount() const;
    void setUserCount(const qint32 &user_count);
    bool is_user_count_Set() const;
    bool is_user_count_Valid() const;

    QString getUserCountDescription() const;
    void setUserCountDescription(const QString &user_count_description);
    bool is_user_count_description_Set() const;
    bool is_user_count_description_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QSet<QString> m_default_groups;
    bool m_default_groups_isSet;
    bool m_default_groups_isValid;

    QList<OAIGroupName> m_default_groups_details;
    bool m_default_groups_details_isSet;
    bool m_default_groups_details_isValid;

    bool m_defined;
    bool m_defined_isSet;
    bool m_defined_isValid;

    QList<OAIGroupName> m_group_details;
    bool m_group_details_isSet;
    bool m_group_details_isValid;

    QSet<QString> m_groups;
    bool m_groups_isSet;
    bool m_groups_isValid;

    bool m_has_unlimited_seats;
    bool m_has_unlimited_seats_isSet;
    bool m_has_unlimited_seats_isValid;

    QString m_key;
    bool m_key_isSet;
    bool m_key_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    qint32 m_number_of_seats;
    bool m_number_of_seats_isSet;
    bool m_number_of_seats_isValid;

    bool m_platform;
    bool m_platform_isSet;
    bool m_platform_isValid;

    qint32 m_remaining_seats;
    bool m_remaining_seats_isSet;
    bool m_remaining_seats_isValid;

    bool m_selected_by_default;
    bool m_selected_by_default_isSet;
    bool m_selected_by_default_isValid;

    qint32 m_user_count;
    bool m_user_count_isSet;
    bool m_user_count_isValid;

    QString m_user_count_description;
    bool m_user_count_description_isSet;
    bool m_user_count_description_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIApplicationRole)

#endif // OAIApplicationRole_H
