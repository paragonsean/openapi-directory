/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISimpleListWrapperApplicationRole.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISimpleListWrapperApplicationRole::OAISimpleListWrapperApplicationRole(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISimpleListWrapperApplicationRole::OAISimpleListWrapperApplicationRole() {
    this->initializeModel();
}

OAISimpleListWrapperApplicationRole::~OAISimpleListWrapperApplicationRole() {}

void OAISimpleListWrapperApplicationRole::initializeModel() {

    m_callback_isSet = false;
    m_callback_isValid = false;

    m_items_isSet = false;
    m_items_isValid = false;

    m_max_results_isSet = false;
    m_max_results_isValid = false;

    m_paging_callback_isSet = false;
    m_paging_callback_isValid = false;

    m_size_isSet = false;
    m_size_isValid = false;
}

void OAISimpleListWrapperApplicationRole::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISimpleListWrapperApplicationRole::fromJsonObject(QJsonObject json) {

    m_callback_isValid = ::OpenAPI::fromJsonValue(m_callback, json[QString("callback")]);
    m_callback_isSet = !json[QString("callback")].isNull() && m_callback_isValid;

    m_items_isValid = ::OpenAPI::fromJsonValue(m_items, json[QString("items")]);
    m_items_isSet = !json[QString("items")].isNull() && m_items_isValid;

    m_max_results_isValid = ::OpenAPI::fromJsonValue(m_max_results, json[QString("max-results")]);
    m_max_results_isSet = !json[QString("max-results")].isNull() && m_max_results_isValid;

    m_paging_callback_isValid = ::OpenAPI::fromJsonValue(m_paging_callback, json[QString("pagingCallback")]);
    m_paging_callback_isSet = !json[QString("pagingCallback")].isNull() && m_paging_callback_isValid;

    m_size_isValid = ::OpenAPI::fromJsonValue(m_size, json[QString("size")]);
    m_size_isSet = !json[QString("size")].isNull() && m_size_isValid;
}

QString OAISimpleListWrapperApplicationRole::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISimpleListWrapperApplicationRole::asJsonObject() const {
    QJsonObject obj;
    if (m_callback_isSet) {
        obj.insert(QString("callback"), ::OpenAPI::toJsonValue(m_callback));
    }
    if (m_items.size() > 0) {
        obj.insert(QString("items"), ::OpenAPI::toJsonValue(m_items));
    }
    if (m_max_results_isSet) {
        obj.insert(QString("max-results"), ::OpenAPI::toJsonValue(m_max_results));
    }
    if (m_paging_callback_isSet) {
        obj.insert(QString("pagingCallback"), ::OpenAPI::toJsonValue(m_paging_callback));
    }
    if (m_size_isSet) {
        obj.insert(QString("size"), ::OpenAPI::toJsonValue(m_size));
    }
    return obj;
}

OAIObject OAISimpleListWrapperApplicationRole::getCallback() const {
    return m_callback;
}
void OAISimpleListWrapperApplicationRole::setCallback(const OAIObject &callback) {
    m_callback = callback;
    m_callback_isSet = true;
}

bool OAISimpleListWrapperApplicationRole::is_callback_Set() const{
    return m_callback_isSet;
}

bool OAISimpleListWrapperApplicationRole::is_callback_Valid() const{
    return m_callback_isValid;
}

QList<OAIApplicationRole> OAISimpleListWrapperApplicationRole::getItems() const {
    return m_items;
}
void OAISimpleListWrapperApplicationRole::setItems(const QList<OAIApplicationRole> &items) {
    m_items = items;
    m_items_isSet = true;
}

bool OAISimpleListWrapperApplicationRole::is_items_Set() const{
    return m_items_isSet;
}

bool OAISimpleListWrapperApplicationRole::is_items_Valid() const{
    return m_items_isValid;
}

qint32 OAISimpleListWrapperApplicationRole::getMaxResults() const {
    return m_max_results;
}
void OAISimpleListWrapperApplicationRole::setMaxResults(const qint32 &max_results) {
    m_max_results = max_results;
    m_max_results_isSet = true;
}

bool OAISimpleListWrapperApplicationRole::is_max_results_Set() const{
    return m_max_results_isSet;
}

bool OAISimpleListWrapperApplicationRole::is_max_results_Valid() const{
    return m_max_results_isValid;
}

OAIObject OAISimpleListWrapperApplicationRole::getPagingCallback() const {
    return m_paging_callback;
}
void OAISimpleListWrapperApplicationRole::setPagingCallback(const OAIObject &paging_callback) {
    m_paging_callback = paging_callback;
    m_paging_callback_isSet = true;
}

bool OAISimpleListWrapperApplicationRole::is_paging_callback_Set() const{
    return m_paging_callback_isSet;
}

bool OAISimpleListWrapperApplicationRole::is_paging_callback_Valid() const{
    return m_paging_callback_isValid;
}

qint32 OAISimpleListWrapperApplicationRole::getSize() const {
    return m_size;
}
void OAISimpleListWrapperApplicationRole::setSize(const qint32 &size) {
    m_size = size;
    m_size_isSet = true;
}

bool OAISimpleListWrapperApplicationRole::is_size_Set() const{
    return m_size_isSet;
}

bool OAISimpleListWrapperApplicationRole::is_size_Valid() const{
    return m_size_isValid;
}

bool OAISimpleListWrapperApplicationRole::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_callback_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_items.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_max_results_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_paging_callback_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_size_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISimpleListWrapperApplicationRole::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
