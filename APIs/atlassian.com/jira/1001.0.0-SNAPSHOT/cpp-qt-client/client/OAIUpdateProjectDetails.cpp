/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateProjectDetails.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateProjectDetails::OAIUpdateProjectDetails(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateProjectDetails::OAIUpdateProjectDetails() {
    this->initializeModel();
}

OAIUpdateProjectDetails::~OAIUpdateProjectDetails() {}

void OAIUpdateProjectDetails::initializeModel() {

    m_assignee_type_isSet = false;
    m_assignee_type_isValid = false;

    m_avatar_id_isSet = false;
    m_avatar_id_isValid = false;

    m_category_id_isSet = false;
    m_category_id_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_issue_security_scheme_isSet = false;
    m_issue_security_scheme_isValid = false;

    m_key_isSet = false;
    m_key_isValid = false;

    m_lead_isSet = false;
    m_lead_isValid = false;

    m_lead_account_id_isSet = false;
    m_lead_account_id_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_notification_scheme_isSet = false;
    m_notification_scheme_isValid = false;

    m_permission_scheme_isSet = false;
    m_permission_scheme_isValid = false;

    m_url_isSet = false;
    m_url_isValid = false;
}

void OAIUpdateProjectDetails::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateProjectDetails::fromJsonObject(QJsonObject json) {

    m_assignee_type_isValid = ::OpenAPI::fromJsonValue(m_assignee_type, json[QString("assigneeType")]);
    m_assignee_type_isSet = !json[QString("assigneeType")].isNull() && m_assignee_type_isValid;

    m_avatar_id_isValid = ::OpenAPI::fromJsonValue(m_avatar_id, json[QString("avatarId")]);
    m_avatar_id_isSet = !json[QString("avatarId")].isNull() && m_avatar_id_isValid;

    m_category_id_isValid = ::OpenAPI::fromJsonValue(m_category_id, json[QString("categoryId")]);
    m_category_id_isSet = !json[QString("categoryId")].isNull() && m_category_id_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_issue_security_scheme_isValid = ::OpenAPI::fromJsonValue(m_issue_security_scheme, json[QString("issueSecurityScheme")]);
    m_issue_security_scheme_isSet = !json[QString("issueSecurityScheme")].isNull() && m_issue_security_scheme_isValid;

    m_key_isValid = ::OpenAPI::fromJsonValue(m_key, json[QString("key")]);
    m_key_isSet = !json[QString("key")].isNull() && m_key_isValid;

    m_lead_isValid = ::OpenAPI::fromJsonValue(m_lead, json[QString("lead")]);
    m_lead_isSet = !json[QString("lead")].isNull() && m_lead_isValid;

    m_lead_account_id_isValid = ::OpenAPI::fromJsonValue(m_lead_account_id, json[QString("leadAccountId")]);
    m_lead_account_id_isSet = !json[QString("leadAccountId")].isNull() && m_lead_account_id_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_notification_scheme_isValid = ::OpenAPI::fromJsonValue(m_notification_scheme, json[QString("notificationScheme")]);
    m_notification_scheme_isSet = !json[QString("notificationScheme")].isNull() && m_notification_scheme_isValid;

    m_permission_scheme_isValid = ::OpenAPI::fromJsonValue(m_permission_scheme, json[QString("permissionScheme")]);
    m_permission_scheme_isSet = !json[QString("permissionScheme")].isNull() && m_permission_scheme_isValid;

    m_url_isValid = ::OpenAPI::fromJsonValue(m_url, json[QString("url")]);
    m_url_isSet = !json[QString("url")].isNull() && m_url_isValid;
}

QString OAIUpdateProjectDetails::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateProjectDetails::asJsonObject() const {
    QJsonObject obj;
    if (m_assignee_type_isSet) {
        obj.insert(QString("assigneeType"), ::OpenAPI::toJsonValue(m_assignee_type));
    }
    if (m_avatar_id_isSet) {
        obj.insert(QString("avatarId"), ::OpenAPI::toJsonValue(m_avatar_id));
    }
    if (m_category_id_isSet) {
        obj.insert(QString("categoryId"), ::OpenAPI::toJsonValue(m_category_id));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_issue_security_scheme_isSet) {
        obj.insert(QString("issueSecurityScheme"), ::OpenAPI::toJsonValue(m_issue_security_scheme));
    }
    if (m_key_isSet) {
        obj.insert(QString("key"), ::OpenAPI::toJsonValue(m_key));
    }
    if (m_lead_isSet) {
        obj.insert(QString("lead"), ::OpenAPI::toJsonValue(m_lead));
    }
    if (m_lead_account_id_isSet) {
        obj.insert(QString("leadAccountId"), ::OpenAPI::toJsonValue(m_lead_account_id));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_notification_scheme_isSet) {
        obj.insert(QString("notificationScheme"), ::OpenAPI::toJsonValue(m_notification_scheme));
    }
    if (m_permission_scheme_isSet) {
        obj.insert(QString("permissionScheme"), ::OpenAPI::toJsonValue(m_permission_scheme));
    }
    if (m_url_isSet) {
        obj.insert(QString("url"), ::OpenAPI::toJsonValue(m_url));
    }
    return obj;
}

QString OAIUpdateProjectDetails::getAssigneeType() const {
    return m_assignee_type;
}
void OAIUpdateProjectDetails::setAssigneeType(const QString &assignee_type) {
    m_assignee_type = assignee_type;
    m_assignee_type_isSet = true;
}

bool OAIUpdateProjectDetails::is_assignee_type_Set() const{
    return m_assignee_type_isSet;
}

bool OAIUpdateProjectDetails::is_assignee_type_Valid() const{
    return m_assignee_type_isValid;
}

qint64 OAIUpdateProjectDetails::getAvatarId() const {
    return m_avatar_id;
}
void OAIUpdateProjectDetails::setAvatarId(const qint64 &avatar_id) {
    m_avatar_id = avatar_id;
    m_avatar_id_isSet = true;
}

bool OAIUpdateProjectDetails::is_avatar_id_Set() const{
    return m_avatar_id_isSet;
}

bool OAIUpdateProjectDetails::is_avatar_id_Valid() const{
    return m_avatar_id_isValid;
}

qint64 OAIUpdateProjectDetails::getCategoryId() const {
    return m_category_id;
}
void OAIUpdateProjectDetails::setCategoryId(const qint64 &category_id) {
    m_category_id = category_id;
    m_category_id_isSet = true;
}

bool OAIUpdateProjectDetails::is_category_id_Set() const{
    return m_category_id_isSet;
}

bool OAIUpdateProjectDetails::is_category_id_Valid() const{
    return m_category_id_isValid;
}

QString OAIUpdateProjectDetails::getDescription() const {
    return m_description;
}
void OAIUpdateProjectDetails::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIUpdateProjectDetails::is_description_Set() const{
    return m_description_isSet;
}

bool OAIUpdateProjectDetails::is_description_Valid() const{
    return m_description_isValid;
}

qint64 OAIUpdateProjectDetails::getIssueSecurityScheme() const {
    return m_issue_security_scheme;
}
void OAIUpdateProjectDetails::setIssueSecurityScheme(const qint64 &issue_security_scheme) {
    m_issue_security_scheme = issue_security_scheme;
    m_issue_security_scheme_isSet = true;
}

bool OAIUpdateProjectDetails::is_issue_security_scheme_Set() const{
    return m_issue_security_scheme_isSet;
}

bool OAIUpdateProjectDetails::is_issue_security_scheme_Valid() const{
    return m_issue_security_scheme_isValid;
}

QString OAIUpdateProjectDetails::getKey() const {
    return m_key;
}
void OAIUpdateProjectDetails::setKey(const QString &key) {
    m_key = key;
    m_key_isSet = true;
}

bool OAIUpdateProjectDetails::is_key_Set() const{
    return m_key_isSet;
}

bool OAIUpdateProjectDetails::is_key_Valid() const{
    return m_key_isValid;
}

QString OAIUpdateProjectDetails::getLead() const {
    return m_lead;
}
void OAIUpdateProjectDetails::setLead(const QString &lead) {
    m_lead = lead;
    m_lead_isSet = true;
}

bool OAIUpdateProjectDetails::is_lead_Set() const{
    return m_lead_isSet;
}

bool OAIUpdateProjectDetails::is_lead_Valid() const{
    return m_lead_isValid;
}

QString OAIUpdateProjectDetails::getLeadAccountId() const {
    return m_lead_account_id;
}
void OAIUpdateProjectDetails::setLeadAccountId(const QString &lead_account_id) {
    m_lead_account_id = lead_account_id;
    m_lead_account_id_isSet = true;
}

bool OAIUpdateProjectDetails::is_lead_account_id_Set() const{
    return m_lead_account_id_isSet;
}

bool OAIUpdateProjectDetails::is_lead_account_id_Valid() const{
    return m_lead_account_id_isValid;
}

QString OAIUpdateProjectDetails::getName() const {
    return m_name;
}
void OAIUpdateProjectDetails::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIUpdateProjectDetails::is_name_Set() const{
    return m_name_isSet;
}

bool OAIUpdateProjectDetails::is_name_Valid() const{
    return m_name_isValid;
}

qint64 OAIUpdateProjectDetails::getNotificationScheme() const {
    return m_notification_scheme;
}
void OAIUpdateProjectDetails::setNotificationScheme(const qint64 &notification_scheme) {
    m_notification_scheme = notification_scheme;
    m_notification_scheme_isSet = true;
}

bool OAIUpdateProjectDetails::is_notification_scheme_Set() const{
    return m_notification_scheme_isSet;
}

bool OAIUpdateProjectDetails::is_notification_scheme_Valid() const{
    return m_notification_scheme_isValid;
}

qint64 OAIUpdateProjectDetails::getPermissionScheme() const {
    return m_permission_scheme;
}
void OAIUpdateProjectDetails::setPermissionScheme(const qint64 &permission_scheme) {
    m_permission_scheme = permission_scheme;
    m_permission_scheme_isSet = true;
}

bool OAIUpdateProjectDetails::is_permission_scheme_Set() const{
    return m_permission_scheme_isSet;
}

bool OAIUpdateProjectDetails::is_permission_scheme_Valid() const{
    return m_permission_scheme_isValid;
}

QString OAIUpdateProjectDetails::getUrl() const {
    return m_url;
}
void OAIUpdateProjectDetails::setUrl(const QString &url) {
    m_url = url;
    m_url_isSet = true;
}

bool OAIUpdateProjectDetails::is_url_Set() const{
    return m_url_isSet;
}

bool OAIUpdateProjectDetails::is_url_Valid() const{
    return m_url_isValid;
}

bool OAIUpdateProjectDetails::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_assignee_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_avatar_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_category_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_issue_security_scheme_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_key_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_lead_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_lead_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_notification_scheme_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_permission_scheme_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateProjectDetails::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
