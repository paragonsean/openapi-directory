/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBulkIssuePropertyUpdateRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBulkIssuePropertyUpdateRequest::OAIBulkIssuePropertyUpdateRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBulkIssuePropertyUpdateRequest::OAIBulkIssuePropertyUpdateRequest() {
    this->initializeModel();
}

OAIBulkIssuePropertyUpdateRequest::~OAIBulkIssuePropertyUpdateRequest() {}

void OAIBulkIssuePropertyUpdateRequest::initializeModel() {

    m_expression_isSet = false;
    m_expression_isValid = false;

    m_filter_isSet = false;
    m_filter_isValid = false;

    m_value_isSet = false;
    m_value_isValid = false;
}

void OAIBulkIssuePropertyUpdateRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBulkIssuePropertyUpdateRequest::fromJsonObject(QJsonObject json) {

    m_expression_isValid = ::OpenAPI::fromJsonValue(m_expression, json[QString("expression")]);
    m_expression_isSet = !json[QString("expression")].isNull() && m_expression_isValid;

    m_filter_isValid = ::OpenAPI::fromJsonValue(m_filter, json[QString("filter")]);
    m_filter_isSet = !json[QString("filter")].isNull() && m_filter_isValid;

    m_value_isValid = ::OpenAPI::fromJsonValue(m_value, json[QString("value")]);
    m_value_isSet = !json[QString("value")].isNull() && m_value_isValid;
}

QString OAIBulkIssuePropertyUpdateRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBulkIssuePropertyUpdateRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_expression_isSet) {
        obj.insert(QString("expression"), ::OpenAPI::toJsonValue(m_expression));
    }
    if (m_filter.isSet()) {
        obj.insert(QString("filter"), ::OpenAPI::toJsonValue(m_filter));
    }
    if (m_value_isSet) {
        obj.insert(QString("value"), ::OpenAPI::toJsonValue(m_value));
    }
    return obj;
}

QString OAIBulkIssuePropertyUpdateRequest::getExpression() const {
    return m_expression;
}
void OAIBulkIssuePropertyUpdateRequest::setExpression(const QString &expression) {
    m_expression = expression;
    m_expression_isSet = true;
}

bool OAIBulkIssuePropertyUpdateRequest::is_expression_Set() const{
    return m_expression_isSet;
}

bool OAIBulkIssuePropertyUpdateRequest::is_expression_Valid() const{
    return m_expression_isValid;
}

OAIIssueFilterForBulkPropertySet OAIBulkIssuePropertyUpdateRequest::getFilter() const {
    return m_filter;
}
void OAIBulkIssuePropertyUpdateRequest::setFilter(const OAIIssueFilterForBulkPropertySet &filter) {
    m_filter = filter;
    m_filter_isSet = true;
}

bool OAIBulkIssuePropertyUpdateRequest::is_filter_Set() const{
    return m_filter_isSet;
}

bool OAIBulkIssuePropertyUpdateRequest::is_filter_Valid() const{
    return m_filter_isValid;
}

QJsonValue OAIBulkIssuePropertyUpdateRequest::getValue() const {
    return m_value;
}
void OAIBulkIssuePropertyUpdateRequest::setValue(const QJsonValue &value) {
    m_value = value;
    m_value_isSet = true;
}

bool OAIBulkIssuePropertyUpdateRequest::is_value_Set() const{
    return m_value_isSet;
}

bool OAIBulkIssuePropertyUpdateRequest::is_value_Valid() const{
    return m_value_isValid;
}

bool OAIBulkIssuePropertyUpdateRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_expression_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_filter.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_value_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBulkIssuePropertyUpdateRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
