/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIJexpIssues.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIJexpIssues::OAIJexpIssues(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIJexpIssues::OAIJexpIssues() {
    this->initializeModel();
}

OAIJexpIssues::~OAIJexpIssues() {}

void OAIJexpIssues::initializeModel() {

    m_jql_isSet = false;
    m_jql_isValid = false;
}

void OAIJexpIssues::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIJexpIssues::fromJsonObject(QJsonObject json) {

    m_jql_isValid = ::OpenAPI::fromJsonValue(m_jql, json[QString("jql")]);
    m_jql_isSet = !json[QString("jql")].isNull() && m_jql_isValid;
}

QString OAIJexpIssues::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIJexpIssues::asJsonObject() const {
    QJsonObject obj;
    if (m_jql.isSet()) {
        obj.insert(QString("jql"), ::OpenAPI::toJsonValue(m_jql));
    }
    return obj;
}

OAIJexpJqlIssues OAIJexpIssues::getJql() const {
    return m_jql;
}
void OAIJexpIssues::setJql(const OAIJexpJqlIssues &jql) {
    m_jql = jql;
    m_jql_isSet = true;
}

bool OAIJexpIssues::is_jql_Set() const{
    return m_jql_isSet;
}

bool OAIJexpIssues::is_jql_Valid() const{
    return m_jql_isValid;
}

bool OAIJexpIssues::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_jql.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIJexpIssues::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
