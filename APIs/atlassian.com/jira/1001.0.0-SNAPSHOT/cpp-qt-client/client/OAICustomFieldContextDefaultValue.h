/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICustomFieldContextDefaultValue.h
 *
 * 
 */

#ifndef OAICustomFieldContextDefaultValue_H
#define OAICustomFieldContextDefaultValue_H

#include <QJsonObject>

#include "OAICustomFieldContextDefaultValueCascadingOption.h"
#include "OAICustomFieldContextDefaultValueDate.h"
#include "OAICustomFieldContextDefaultValueDateTime.h"
#include "OAICustomFieldContextDefaultValueFloat.h"
#include "OAICustomFieldContextDefaultValueForgeDateTimeField.h"
#include "OAICustomFieldContextDefaultValueForgeGroupField.h"
#include "OAICustomFieldContextDefaultValueForgeMultiGroupField.h"
#include "OAICustomFieldContextDefaultValueForgeMultiStringField.h"
#include "OAICustomFieldContextDefaultValueForgeMultiUserField.h"
#include "OAICustomFieldContextDefaultValueForgeNumberField.h"
#include "OAICustomFieldContextDefaultValueForgeObjectField.h"
#include "OAICustomFieldContextDefaultValueForgeStringField.h"
#include "OAICustomFieldContextDefaultValueForgeUserField.h"
#include "OAICustomFieldContextDefaultValueLabels.h"
#include "OAICustomFieldContextDefaultValueMultiUserPicker.h"
#include "OAICustomFieldContextDefaultValueMultipleGroupPicker.h"
#include "OAICustomFieldContextDefaultValueMultipleOption.h"
#include "OAICustomFieldContextDefaultValueMultipleVersionPicker.h"
#include "OAICustomFieldContextDefaultValueProject.h"
#include "OAICustomFieldContextDefaultValueReadOnly.h"
#include "OAICustomFieldContextDefaultValueSingleGroupPicker.h"
#include "OAICustomFieldContextDefaultValueSingleOption.h"
#include "OAICustomFieldContextDefaultValueSingleVersionPicker.h"
#include "OAICustomFieldContextDefaultValueTextArea.h"
#include "OAICustomFieldContextDefaultValueTextField.h"
#include "OAICustomFieldContextDefaultValueURL.h"
#include "OAICustomFieldContextSingleUserPickerDefaults.h"
#include "OAIObject.h"
#include "OAIUserFilter.h"
#include <QList>
#include <QSet>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUserFilter;

class OAICustomFieldContextDefaultValue : public OAIObject {
public:
    OAICustomFieldContextDefaultValue();
    OAICustomFieldContextDefaultValue(QString json);
    ~OAICustomFieldContextDefaultValue() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCascadingOptionId() const;
    void setCascadingOptionId(const QString &cascading_option_id);
    bool is_cascading_option_id_Set() const;
    bool is_cascading_option_id_Valid() const;

    QString getContextId() const;
    void setContextId(const QString &context_id);
    bool is_context_id_Set() const;
    bool is_context_id_Valid() const;

    QString getOptionId() const;
    void setOptionId(const QString &option_id);
    bool is_option_id_Set() const;
    bool is_option_id_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QList<QString> getOptionIds() const;
    void setOptionIds(const QList<QString> &option_ids);
    bool is_option_ids_Set() const;
    bool is_option_ids_Valid() const;

    QString getAccountId() const;
    void setAccountId(const QString &account_id);
    bool is_account_id_Set() const;
    bool is_account_id_Valid() const;

    OAIUserFilter getUserFilter() const;
    void setUserFilter(const OAIUserFilter &user_filter);
    bool is_user_filter_Set() const;
    bool is_user_filter_Valid() const;

    QList<QString> getAccountIds() const;
    void setAccountIds(const QList<QString> &account_ids);
    bool is_account_ids_Set() const;
    bool is_account_ids_Valid() const;

    QString getGroupId() const;
    void setGroupId(const QString &group_id);
    bool is_group_id_Set() const;
    bool is_group_id_Valid() const;

    QSet<QString> getGroupIds() const;
    void setGroupIds(const QSet<QString> &group_ids);
    bool is_group_ids_Set() const;
    bool is_group_ids_Valid() const;

    QString getDate() const;
    void setDate(const QString &date);
    bool is_date_Set() const;
    bool is_date_Valid() const;

    bool isUseCurrent() const;
    void setUseCurrent(const bool &use_current);
    bool is_use_current_Set() const;
    bool is_use_current_Valid() const;

    QString getDateTime() const;
    void setDateTime(const QString &date_time);
    bool is_date_time_Set() const;
    bool is_date_time_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    QString getProjectId() const;
    void setProjectId(const QString &project_id);
    bool is_project_id_Set() const;
    bool is_project_id_Valid() const;

    double getNumber() const;
    void setNumber(const double &number);
    bool is_number_Set() const;
    bool is_number_Valid() const;

    QList<QString> getLabels() const;
    void setLabels(const QList<QString> &labels);
    bool is_labels_Set() const;
    bool is_labels_Valid() const;

    QString getText() const;
    void setText(const QString &text);
    bool is_text_Set() const;
    bool is_text_Valid() const;

    QString getVersionId() const;
    void setVersionId(const QString &version_id);
    bool is_version_id_Set() const;
    bool is_version_id_Valid() const;

    QString getVersionOrder() const;
    void setVersionOrder(const QString &version_order);
    bool is_version_order_Set() const;
    bool is_version_order_Valid() const;

    QSet<QString> getVersionIds() const;
    void setVersionIds(const QSet<QString> &version_ids);
    bool is_version_ids_Set() const;
    bool is_version_ids_Valid() const;

    QList<QString> getValues() const;
    void setValues(const QList<QString> &values);
    bool is_values_Set() const;
    bool is_values_Valid() const;

    OAIObject getObject() const;
    void setObject(const OAIObject &object);
    bool is_object_Set() const;
    bool is_object_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_cascading_option_id;
    bool m_cascading_option_id_isSet;
    bool m_cascading_option_id_isValid;

    QString m_context_id;
    bool m_context_id_isSet;
    bool m_context_id_isValid;

    QString m_option_id;
    bool m_option_id_isSet;
    bool m_option_id_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QList<QString> m_option_ids;
    bool m_option_ids_isSet;
    bool m_option_ids_isValid;

    QString m_account_id;
    bool m_account_id_isSet;
    bool m_account_id_isValid;

    OAIUserFilter m_user_filter;
    bool m_user_filter_isSet;
    bool m_user_filter_isValid;

    QList<QString> m_account_ids;
    bool m_account_ids_isSet;
    bool m_account_ids_isValid;

    QString m_group_id;
    bool m_group_id_isSet;
    bool m_group_id_isValid;

    QSet<QString> m_group_ids;
    bool m_group_ids_isSet;
    bool m_group_ids_isValid;

    QString m_date;
    bool m_date_isSet;
    bool m_date_isValid;

    bool m_use_current;
    bool m_use_current_isSet;
    bool m_use_current_isValid;

    QString m_date_time;
    bool m_date_time_isSet;
    bool m_date_time_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;

    QString m_project_id;
    bool m_project_id_isSet;
    bool m_project_id_isValid;

    double m_number;
    bool m_number_isSet;
    bool m_number_isValid;

    QList<QString> m_labels;
    bool m_labels_isSet;
    bool m_labels_isValid;

    QString m_text;
    bool m_text_isSet;
    bool m_text_isValid;

    QString m_version_id;
    bool m_version_id_isSet;
    bool m_version_id_isValid;

    QString m_version_order;
    bool m_version_order_isSet;
    bool m_version_order_isValid;

    QSet<QString> m_version_ids;
    bool m_version_ids_isSet;
    bool m_version_ids_isValid;

    QList<QString> m_values;
    bool m_values_isSet;
    bool m_values_isValid;

    OAIObject m_object;
    bool m_object_isSet;
    bool m_object_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICustomFieldContextDefaultValue)

#endif // OAICustomFieldContextDefaultValue_H
