/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICustomFieldContextDefaultValueForgeUserField.h
 *
 * Defaults for a Forge user custom field.
 */

#ifndef OAICustomFieldContextDefaultValueForgeUserField_H
#define OAICustomFieldContextDefaultValueForgeUserField_H

#include <QJsonObject>

#include "OAIUserFilter.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUserFilter;

class OAICustomFieldContextDefaultValueForgeUserField : public OAIObject {
public:
    OAICustomFieldContextDefaultValueForgeUserField();
    OAICustomFieldContextDefaultValueForgeUserField(QString json);
    ~OAICustomFieldContextDefaultValueForgeUserField() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAccountId() const;
    void setAccountId(const QString &account_id);
    bool is_account_id_Set() const;
    bool is_account_id_Valid() const;

    QString getContextId() const;
    void setContextId(const QString &context_id);
    bool is_context_id_Set() const;
    bool is_context_id_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    OAIUserFilter getUserFilter() const;
    void setUserFilter(const OAIUserFilter &user_filter);
    bool is_user_filter_Set() const;
    bool is_user_filter_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_account_id;
    bool m_account_id_isSet;
    bool m_account_id_isValid;

    QString m_context_id;
    bool m_context_id_isSet;
    bool m_context_id_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    OAIUserFilter m_user_filter;
    bool m_user_filter_isSet;
    bool m_user_filter_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICustomFieldContextDefaultValueForgeUserField)

#endif // OAICustomFieldContextDefaultValueForgeUserField_H
