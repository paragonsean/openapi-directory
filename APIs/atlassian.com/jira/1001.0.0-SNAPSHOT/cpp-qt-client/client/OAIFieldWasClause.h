/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFieldWasClause.h
 *
 * A clause that asserts a previous value of a field. For example, &#x60;status WAS \&quot;Resolved\&quot; BY currentUser() BEFORE \&quot;2019/02/02\&quot;&#x60;. See [WAS](https://confluence.atlassian.com/x/dgiiLQ#Advancedsearching-operatorsreference-WASWAS) for more information about the WAS operator.
 */

#ifndef OAIFieldWasClause_H
#define OAIFieldWasClause_H

#include <QJsonObject>

#include "OAIJqlQueryClauseOperand.h"
#include "OAIJqlQueryClauseTimePredicate.h"
#include "OAIJqlQueryField.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIJqlQueryField;
class OAIJqlQueryClauseOperand;
class OAIJqlQueryClauseTimePredicate;

class OAIFieldWasClause : public OAIObject {
public:
    OAIFieldWasClause();
    OAIFieldWasClause(QString json);
    ~OAIFieldWasClause() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIJqlQueryField getField() const;
    void setField(const OAIJqlQueryField &field);
    bool is_field_Set() const;
    bool is_field_Valid() const;

    OAIJqlQueryClauseOperand getOperand() const;
    void setOperand(const OAIJqlQueryClauseOperand &operand);
    bool is_operand_Set() const;
    bool is_operand_Valid() const;

    QString getROperator() const;
    void setROperator(const QString &r_operator);
    bool is_r_operator_Set() const;
    bool is_r_operator_Valid() const;

    QList<OAIJqlQueryClauseTimePredicate> getPredicates() const;
    void setPredicates(const QList<OAIJqlQueryClauseTimePredicate> &predicates);
    bool is_predicates_Set() const;
    bool is_predicates_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIJqlQueryField m_field;
    bool m_field_isSet;
    bool m_field_isValid;

    OAIJqlQueryClauseOperand m_operand;
    bool m_operand_isSet;
    bool m_operand_isValid;

    QString m_r_operator;
    bool m_r_operator_isSet;
    bool m_r_operator_isValid;

    QList<OAIJqlQueryClauseTimePredicate> m_predicates;
    bool m_predicates_isSet;
    bool m_predicates_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFieldWasClause)

#endif // OAIFieldWasClause_H
