/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIJiraExpressionAnalysis.h
 *
 * Details about the analysed Jira expression.
 */

#ifndef OAIJiraExpressionAnalysis_H
#define OAIJiraExpressionAnalysis_H

#include <QJsonObject>

#include "OAIJiraExpressionComplexity.h"
#include "OAIJiraExpressionValidationError.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIJiraExpressionComplexity;
class OAIJiraExpressionValidationError;

class OAIJiraExpressionAnalysis : public OAIObject {
public:
    OAIJiraExpressionAnalysis();
    OAIJiraExpressionAnalysis(QString json);
    ~OAIJiraExpressionAnalysis() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIJiraExpressionComplexity getComplexity() const;
    void setComplexity(const OAIJiraExpressionComplexity &complexity);
    bool is_complexity_Set() const;
    bool is_complexity_Valid() const;

    QList<OAIJiraExpressionValidationError> getErrors() const;
    void setErrors(const QList<OAIJiraExpressionValidationError> &errors);
    bool is_errors_Set() const;
    bool is_errors_Valid() const;

    QString getExpression() const;
    void setExpression(const QString &expression);
    bool is_expression_Set() const;
    bool is_expression_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    bool isRValid() const;
    void setRValid(const bool &r_valid);
    bool is_r_valid_Set() const;
    bool is_r_valid_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIJiraExpressionComplexity m_complexity;
    bool m_complexity_isSet;
    bool m_complexity_isValid;

    QList<OAIJiraExpressionValidationError> m_errors;
    bool m_errors_isSet;
    bool m_errors_isValid;

    QString m_expression;
    bool m_expression_isSet;
    bool m_expression_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    bool m_r_valid;
    bool m_r_valid_isSet;
    bool m_r_valid_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIJiraExpressionAnalysis)

#endif // OAIJiraExpressionAnalysis_H
