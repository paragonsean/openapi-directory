/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIIncludedFields.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIIncludedFields::OAIIncludedFields(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIIncludedFields::OAIIncludedFields() {
    this->initializeModel();
}

OAIIncludedFields::~OAIIncludedFields() {}

void OAIIncludedFields::initializeModel() {

    m_actually_included_isSet = false;
    m_actually_included_isValid = false;

    m_excluded_isSet = false;
    m_excluded_isValid = false;

    m_included_isSet = false;
    m_included_isValid = false;
}

void OAIIncludedFields::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIIncludedFields::fromJsonObject(QJsonObject json) {

    m_actually_included_isValid = ::OpenAPI::fromJsonValue(m_actually_included, json[QString("actuallyIncluded")]);
    m_actually_included_isSet = !json[QString("actuallyIncluded")].isNull() && m_actually_included_isValid;

    m_excluded_isValid = ::OpenAPI::fromJsonValue(m_excluded, json[QString("excluded")]);
    m_excluded_isSet = !json[QString("excluded")].isNull() && m_excluded_isValid;

    m_included_isValid = ::OpenAPI::fromJsonValue(m_included, json[QString("included")]);
    m_included_isSet = !json[QString("included")].isNull() && m_included_isValid;
}

QString OAIIncludedFields::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIIncludedFields::asJsonObject() const {
    QJsonObject obj;
    if (m_actually_included.size() > 0) {
        obj.insert(QString("actuallyIncluded"), ::OpenAPI::toJsonValue(m_actually_included));
    }
    if (m_excluded.size() > 0) {
        obj.insert(QString("excluded"), ::OpenAPI::toJsonValue(m_excluded));
    }
    if (m_included.size() > 0) {
        obj.insert(QString("included"), ::OpenAPI::toJsonValue(m_included));
    }
    return obj;
}

QSet<QString> OAIIncludedFields::getActuallyIncluded() const {
    return m_actually_included;
}
void OAIIncludedFields::setActuallyIncluded(const QSet<QString> &actually_included) {
    m_actually_included = actually_included;
    m_actually_included_isSet = true;
}

bool OAIIncludedFields::is_actually_included_Set() const{
    return m_actually_included_isSet;
}

bool OAIIncludedFields::is_actually_included_Valid() const{
    return m_actually_included_isValid;
}

QSet<QString> OAIIncludedFields::getExcluded() const {
    return m_excluded;
}
void OAIIncludedFields::setExcluded(const QSet<QString> &excluded) {
    m_excluded = excluded;
    m_excluded_isSet = true;
}

bool OAIIncludedFields::is_excluded_Set() const{
    return m_excluded_isSet;
}

bool OAIIncludedFields::is_excluded_Valid() const{
    return m_excluded_isValid;
}

QSet<QString> OAIIncludedFields::getIncluded() const {
    return m_included;
}
void OAIIncludedFields::setIncluded(const QSet<QString> &included) {
    m_included = included;
    m_included_isSet = true;
}

bool OAIIncludedFields::is_included_Set() const{
    return m_included_isSet;
}

bool OAIIncludedFields::is_included_Valid() const{
    return m_included_isValid;
}

bool OAIIncludedFields::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_actually_included.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_excluded.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_included.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIIncludedFields::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
