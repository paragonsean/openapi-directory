/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIVersionUsageInCustomField.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIVersionUsageInCustomField::OAIVersionUsageInCustomField(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIVersionUsageInCustomField::OAIVersionUsageInCustomField() {
    this->initializeModel();
}

OAIVersionUsageInCustomField::~OAIVersionUsageInCustomField() {}

void OAIVersionUsageInCustomField::initializeModel() {

    m_custom_field_id_isSet = false;
    m_custom_field_id_isValid = false;

    m_field_name_isSet = false;
    m_field_name_isValid = false;

    m_issue_count_with_version_in_custom_field_isSet = false;
    m_issue_count_with_version_in_custom_field_isValid = false;
}

void OAIVersionUsageInCustomField::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIVersionUsageInCustomField::fromJsonObject(QJsonObject json) {

    m_custom_field_id_isValid = ::OpenAPI::fromJsonValue(m_custom_field_id, json[QString("customFieldId")]);
    m_custom_field_id_isSet = !json[QString("customFieldId")].isNull() && m_custom_field_id_isValid;

    m_field_name_isValid = ::OpenAPI::fromJsonValue(m_field_name, json[QString("fieldName")]);
    m_field_name_isSet = !json[QString("fieldName")].isNull() && m_field_name_isValid;

    m_issue_count_with_version_in_custom_field_isValid = ::OpenAPI::fromJsonValue(m_issue_count_with_version_in_custom_field, json[QString("issueCountWithVersionInCustomField")]);
    m_issue_count_with_version_in_custom_field_isSet = !json[QString("issueCountWithVersionInCustomField")].isNull() && m_issue_count_with_version_in_custom_field_isValid;
}

QString OAIVersionUsageInCustomField::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIVersionUsageInCustomField::asJsonObject() const {
    QJsonObject obj;
    if (m_custom_field_id_isSet) {
        obj.insert(QString("customFieldId"), ::OpenAPI::toJsonValue(m_custom_field_id));
    }
    if (m_field_name_isSet) {
        obj.insert(QString("fieldName"), ::OpenAPI::toJsonValue(m_field_name));
    }
    if (m_issue_count_with_version_in_custom_field_isSet) {
        obj.insert(QString("issueCountWithVersionInCustomField"), ::OpenAPI::toJsonValue(m_issue_count_with_version_in_custom_field));
    }
    return obj;
}

qint64 OAIVersionUsageInCustomField::getCustomFieldId() const {
    return m_custom_field_id;
}
void OAIVersionUsageInCustomField::setCustomFieldId(const qint64 &custom_field_id) {
    m_custom_field_id = custom_field_id;
    m_custom_field_id_isSet = true;
}

bool OAIVersionUsageInCustomField::is_custom_field_id_Set() const{
    return m_custom_field_id_isSet;
}

bool OAIVersionUsageInCustomField::is_custom_field_id_Valid() const{
    return m_custom_field_id_isValid;
}

QString OAIVersionUsageInCustomField::getFieldName() const {
    return m_field_name;
}
void OAIVersionUsageInCustomField::setFieldName(const QString &field_name) {
    m_field_name = field_name;
    m_field_name_isSet = true;
}

bool OAIVersionUsageInCustomField::is_field_name_Set() const{
    return m_field_name_isSet;
}

bool OAIVersionUsageInCustomField::is_field_name_Valid() const{
    return m_field_name_isValid;
}

qint64 OAIVersionUsageInCustomField::getIssueCountWithVersionInCustomField() const {
    return m_issue_count_with_version_in_custom_field;
}
void OAIVersionUsageInCustomField::setIssueCountWithVersionInCustomField(const qint64 &issue_count_with_version_in_custom_field) {
    m_issue_count_with_version_in_custom_field = issue_count_with_version_in_custom_field;
    m_issue_count_with_version_in_custom_field_isSet = true;
}

bool OAIVersionUsageInCustomField::is_issue_count_with_version_in_custom_field_Set() const{
    return m_issue_count_with_version_in_custom_field_isSet;
}

bool OAIVersionUsageInCustomField::is_issue_count_with_version_in_custom_field_Valid() const{
    return m_issue_count_with_version_in_custom_field_isValid;
}

bool OAIVersionUsageInCustomField::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_custom_field_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_field_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_issue_count_with_version_in_custom_field_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIVersionUsageInCustomField::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
