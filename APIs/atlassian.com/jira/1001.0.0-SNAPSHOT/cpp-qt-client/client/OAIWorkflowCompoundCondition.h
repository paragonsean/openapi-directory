/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIWorkflowCompoundCondition.h
 *
 * A compound workflow transition rule condition. This object returns &#x60;nodeType&#x60; as &#x60;compound&#x60;.
 */

#ifndef OAIWorkflowCompoundCondition_H
#define OAIWorkflowCompoundCondition_H

#include <QJsonObject>

#include "OAIWorkflowCondition.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIWorkflowCondition;

class OAIWorkflowCompoundCondition : public OAIObject {
public:
    OAIWorkflowCompoundCondition();
    OAIWorkflowCompoundCondition(QString json);
    ~OAIWorkflowCompoundCondition() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIWorkflowCondition> getConditions() const;
    void setConditions(const QList<OAIWorkflowCondition> &conditions);
    bool is_conditions_Set() const;
    bool is_conditions_Valid() const;

    QString getNodeType() const;
    void setNodeType(const QString &node_type);
    bool is_node_type_Set() const;
    bool is_node_type_Valid() const;

    QString getROperator() const;
    void setROperator(const QString &r_operator);
    bool is_r_operator_Set() const;
    bool is_r_operator_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIWorkflowCondition> m_conditions;
    bool m_conditions_isSet;
    bool m_conditions_isValid;

    QString m_node_type;
    bool m_node_type_isSet;
    bool m_node_type_isValid;

    QString m_r_operator;
    bool m_r_operator_isSet;
    bool m_r_operator_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIWorkflowCompoundCondition)

#endif // OAIWorkflowCompoundCondition_H
