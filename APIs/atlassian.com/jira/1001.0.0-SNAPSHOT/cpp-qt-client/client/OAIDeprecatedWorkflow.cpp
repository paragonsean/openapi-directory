/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDeprecatedWorkflow.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDeprecatedWorkflow::OAIDeprecatedWorkflow(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDeprecatedWorkflow::OAIDeprecatedWorkflow() {
    this->initializeModel();
}

OAIDeprecatedWorkflow::~OAIDeprecatedWorkflow() {}

void OAIDeprecatedWorkflow::initializeModel() {

    m_r_default_isSet = false;
    m_r_default_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_last_modified_date_isSet = false;
    m_last_modified_date_isValid = false;

    m_last_modified_user_isSet = false;
    m_last_modified_user_isValid = false;

    m_last_modified_user_account_id_isSet = false;
    m_last_modified_user_account_id_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_scope_isSet = false;
    m_scope_isValid = false;

    m_steps_isSet = false;
    m_steps_isValid = false;
}

void OAIDeprecatedWorkflow::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDeprecatedWorkflow::fromJsonObject(QJsonObject json) {

    m_r_default_isValid = ::OpenAPI::fromJsonValue(m_r_default, json[QString("default")]);
    m_r_default_isSet = !json[QString("default")].isNull() && m_r_default_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_last_modified_date_isValid = ::OpenAPI::fromJsonValue(m_last_modified_date, json[QString("lastModifiedDate")]);
    m_last_modified_date_isSet = !json[QString("lastModifiedDate")].isNull() && m_last_modified_date_isValid;

    m_last_modified_user_isValid = ::OpenAPI::fromJsonValue(m_last_modified_user, json[QString("lastModifiedUser")]);
    m_last_modified_user_isSet = !json[QString("lastModifiedUser")].isNull() && m_last_modified_user_isValid;

    m_last_modified_user_account_id_isValid = ::OpenAPI::fromJsonValue(m_last_modified_user_account_id, json[QString("lastModifiedUserAccountId")]);
    m_last_modified_user_account_id_isSet = !json[QString("lastModifiedUserAccountId")].isNull() && m_last_modified_user_account_id_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_scope_isValid = ::OpenAPI::fromJsonValue(m_scope, json[QString("scope")]);
    m_scope_isSet = !json[QString("scope")].isNull() && m_scope_isValid;

    m_steps_isValid = ::OpenAPI::fromJsonValue(m_steps, json[QString("steps")]);
    m_steps_isSet = !json[QString("steps")].isNull() && m_steps_isValid;
}

QString OAIDeprecatedWorkflow::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDeprecatedWorkflow::asJsonObject() const {
    QJsonObject obj;
    if (m_r_default_isSet) {
        obj.insert(QString("default"), ::OpenAPI::toJsonValue(m_r_default));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_last_modified_date_isSet) {
        obj.insert(QString("lastModifiedDate"), ::OpenAPI::toJsonValue(m_last_modified_date));
    }
    if (m_last_modified_user_isSet) {
        obj.insert(QString("lastModifiedUser"), ::OpenAPI::toJsonValue(m_last_modified_user));
    }
    if (m_last_modified_user_account_id_isSet) {
        obj.insert(QString("lastModifiedUserAccountId"), ::OpenAPI::toJsonValue(m_last_modified_user_account_id));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_scope.isSet()) {
        obj.insert(QString("scope"), ::OpenAPI::toJsonValue(m_scope));
    }
    if (m_steps_isSet) {
        obj.insert(QString("steps"), ::OpenAPI::toJsonValue(m_steps));
    }
    return obj;
}

bool OAIDeprecatedWorkflow::isRDefault() const {
    return m_r_default;
}
void OAIDeprecatedWorkflow::setRDefault(const bool &r_default) {
    m_r_default = r_default;
    m_r_default_isSet = true;
}

bool OAIDeprecatedWorkflow::is_r_default_Set() const{
    return m_r_default_isSet;
}

bool OAIDeprecatedWorkflow::is_r_default_Valid() const{
    return m_r_default_isValid;
}

QString OAIDeprecatedWorkflow::getDescription() const {
    return m_description;
}
void OAIDeprecatedWorkflow::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIDeprecatedWorkflow::is_description_Set() const{
    return m_description_isSet;
}

bool OAIDeprecatedWorkflow::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIDeprecatedWorkflow::getLastModifiedDate() const {
    return m_last_modified_date;
}
void OAIDeprecatedWorkflow::setLastModifiedDate(const QString &last_modified_date) {
    m_last_modified_date = last_modified_date;
    m_last_modified_date_isSet = true;
}

bool OAIDeprecatedWorkflow::is_last_modified_date_Set() const{
    return m_last_modified_date_isSet;
}

bool OAIDeprecatedWorkflow::is_last_modified_date_Valid() const{
    return m_last_modified_date_isValid;
}

QString OAIDeprecatedWorkflow::getLastModifiedUser() const {
    return m_last_modified_user;
}
void OAIDeprecatedWorkflow::setLastModifiedUser(const QString &last_modified_user) {
    m_last_modified_user = last_modified_user;
    m_last_modified_user_isSet = true;
}

bool OAIDeprecatedWorkflow::is_last_modified_user_Set() const{
    return m_last_modified_user_isSet;
}

bool OAIDeprecatedWorkflow::is_last_modified_user_Valid() const{
    return m_last_modified_user_isValid;
}

QString OAIDeprecatedWorkflow::getLastModifiedUserAccountId() const {
    return m_last_modified_user_account_id;
}
void OAIDeprecatedWorkflow::setLastModifiedUserAccountId(const QString &last_modified_user_account_id) {
    m_last_modified_user_account_id = last_modified_user_account_id;
    m_last_modified_user_account_id_isSet = true;
}

bool OAIDeprecatedWorkflow::is_last_modified_user_account_id_Set() const{
    return m_last_modified_user_account_id_isSet;
}

bool OAIDeprecatedWorkflow::is_last_modified_user_account_id_Valid() const{
    return m_last_modified_user_account_id_isValid;
}

QString OAIDeprecatedWorkflow::getName() const {
    return m_name;
}
void OAIDeprecatedWorkflow::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIDeprecatedWorkflow::is_name_Set() const{
    return m_name_isSet;
}

bool OAIDeprecatedWorkflow::is_name_Valid() const{
    return m_name_isValid;
}

OAIScope OAIDeprecatedWorkflow::getScope() const {
    return m_scope;
}
void OAIDeprecatedWorkflow::setScope(const OAIScope &scope) {
    m_scope = scope;
    m_scope_isSet = true;
}

bool OAIDeprecatedWorkflow::is_scope_Set() const{
    return m_scope_isSet;
}

bool OAIDeprecatedWorkflow::is_scope_Valid() const{
    return m_scope_isValid;
}

qint32 OAIDeprecatedWorkflow::getSteps() const {
    return m_steps;
}
void OAIDeprecatedWorkflow::setSteps(const qint32 &steps) {
    m_steps = steps;
    m_steps_isSet = true;
}

bool OAIDeprecatedWorkflow::is_steps_Set() const{
    return m_steps_isSet;
}

bool OAIDeprecatedWorkflow::is_steps_Valid() const{
    return m_steps_isValid;
}

bool OAIDeprecatedWorkflow::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_r_default_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modified_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modified_user_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modified_user_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_scope.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_steps_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDeprecatedWorkflow::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
