/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIWebhooksExpirationDate.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIWebhooksExpirationDate::OAIWebhooksExpirationDate(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIWebhooksExpirationDate::OAIWebhooksExpirationDate() {
    this->initializeModel();
}

OAIWebhooksExpirationDate::~OAIWebhooksExpirationDate() {}

void OAIWebhooksExpirationDate::initializeModel() {

    m_expiration_date_isSet = false;
    m_expiration_date_isValid = false;
}

void OAIWebhooksExpirationDate::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIWebhooksExpirationDate::fromJsonObject(QJsonObject json) {

    m_expiration_date_isValid = ::OpenAPI::fromJsonValue(m_expiration_date, json[QString("expirationDate")]);
    m_expiration_date_isSet = !json[QString("expirationDate")].isNull() && m_expiration_date_isValid;
}

QString OAIWebhooksExpirationDate::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIWebhooksExpirationDate::asJsonObject() const {
    QJsonObject obj;
    if (m_expiration_date_isSet) {
        obj.insert(QString("expirationDate"), ::OpenAPI::toJsonValue(m_expiration_date));
    }
    return obj;
}

qint64 OAIWebhooksExpirationDate::getExpirationDate() const {
    return m_expiration_date;
}
void OAIWebhooksExpirationDate::setExpirationDate(const qint64 &expiration_date) {
    m_expiration_date = expiration_date;
    m_expiration_date_isSet = true;
}

bool OAIWebhooksExpirationDate::is_expiration_date_Set() const{
    return m_expiration_date_isSet;
}

bool OAIWebhooksExpirationDate::is_expiration_date_Valid() const{
    return m_expiration_date_isValid;
}

bool OAIWebhooksExpirationDate::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_expiration_date_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIWebhooksExpirationDate::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_expiration_date_isValid && true;
}

} // namespace OpenAPI
