/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIIssueFieldOptionScopeBean.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIIssueFieldOptionScopeBean::OAIIssueFieldOptionScopeBean(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIIssueFieldOptionScopeBean::OAIIssueFieldOptionScopeBean() {
    this->initializeModel();
}

OAIIssueFieldOptionScopeBean::~OAIIssueFieldOptionScopeBean() {}

void OAIIssueFieldOptionScopeBean::initializeModel() {

    m_global_isSet = false;
    m_global_isValid = false;

    m_projects_isSet = false;
    m_projects_isValid = false;

    m_projects2_isSet = false;
    m_projects2_isValid = false;
}

void OAIIssueFieldOptionScopeBean::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIIssueFieldOptionScopeBean::fromJsonObject(QJsonObject json) {

    m_global_isValid = ::OpenAPI::fromJsonValue(m_global, json[QString("global")]);
    m_global_isSet = !json[QString("global")].isNull() && m_global_isValid;

    m_projects_isValid = ::OpenAPI::fromJsonValue(m_projects, json[QString("projects")]);
    m_projects_isSet = !json[QString("projects")].isNull() && m_projects_isValid;

    m_projects2_isValid = ::OpenAPI::fromJsonValue(m_projects2, json[QString("projects2")]);
    m_projects2_isSet = !json[QString("projects2")].isNull() && m_projects2_isValid;
}

QString OAIIssueFieldOptionScopeBean::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIIssueFieldOptionScopeBean::asJsonObject() const {
    QJsonObject obj;
    if (m_global.isSet()) {
        obj.insert(QString("global"), ::OpenAPI::toJsonValue(m_global));
    }
    if (m_projects.size() > 0) {
        obj.insert(QString("projects"), ::OpenAPI::toJsonValue(m_projects));
    }
    if (m_projects2.size() > 0) {
        obj.insert(QString("projects2"), ::OpenAPI::toJsonValue(m_projects2));
    }
    return obj;
}

OAIGlobalScopeBean OAIIssueFieldOptionScopeBean::getGlobal() const {
    return m_global;
}
void OAIIssueFieldOptionScopeBean::setGlobal(const OAIGlobalScopeBean &global) {
    m_global = global;
    m_global_isSet = true;
}

bool OAIIssueFieldOptionScopeBean::is_global_Set() const{
    return m_global_isSet;
}

bool OAIIssueFieldOptionScopeBean::is_global_Valid() const{
    return m_global_isValid;
}

QSet<qint64> OAIIssueFieldOptionScopeBean::getProjects() const {
    return m_projects;
}
void OAIIssueFieldOptionScopeBean::setProjects(const QSet<qint64> &projects) {
    m_projects = projects;
    m_projects_isSet = true;
}

bool OAIIssueFieldOptionScopeBean::is_projects_Set() const{
    return m_projects_isSet;
}

bool OAIIssueFieldOptionScopeBean::is_projects_Valid() const{
    return m_projects_isValid;
}

QSet<OAIProjectScopeBean> OAIIssueFieldOptionScopeBean::getProjects2() const {
    return m_projects2;
}
void OAIIssueFieldOptionScopeBean::setProjects2(const QSet<OAIProjectScopeBean> &projects2) {
    m_projects2 = projects2;
    m_projects2_isSet = true;
}

bool OAIIssueFieldOptionScopeBean::is_projects2_Set() const{
    return m_projects2_isSet;
}

bool OAIIssueFieldOptionScopeBean::is_projects2_Valid() const{
    return m_projects2_isValid;
}

bool OAIIssueFieldOptionScopeBean::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_global.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_projects.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_projects2.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIIssueFieldOptionScopeBean::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
