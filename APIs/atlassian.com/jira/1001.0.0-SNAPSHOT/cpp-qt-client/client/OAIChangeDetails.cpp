/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIChangeDetails.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIChangeDetails::OAIChangeDetails(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIChangeDetails::OAIChangeDetails() {
    this->initializeModel();
}

OAIChangeDetails::~OAIChangeDetails() {}

void OAIChangeDetails::initializeModel() {

    m_field_isSet = false;
    m_field_isValid = false;

    m_field_id_isSet = false;
    m_field_id_isValid = false;

    m_fieldtype_isSet = false;
    m_fieldtype_isValid = false;

    m_from_isSet = false;
    m_from_isValid = false;

    m_from_string_isSet = false;
    m_from_string_isValid = false;

    m_to_isSet = false;
    m_to_isValid = false;
}

void OAIChangeDetails::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIChangeDetails::fromJsonObject(QJsonObject json) {

    m_field_isValid = ::OpenAPI::fromJsonValue(m_field, json[QString("field")]);
    m_field_isSet = !json[QString("field")].isNull() && m_field_isValid;

    m_field_id_isValid = ::OpenAPI::fromJsonValue(m_field_id, json[QString("fieldId")]);
    m_field_id_isSet = !json[QString("fieldId")].isNull() && m_field_id_isValid;

    m_fieldtype_isValid = ::OpenAPI::fromJsonValue(m_fieldtype, json[QString("fieldtype")]);
    m_fieldtype_isSet = !json[QString("fieldtype")].isNull() && m_fieldtype_isValid;

    m_from_isValid = ::OpenAPI::fromJsonValue(m_from, json[QString("from")]);
    m_from_isSet = !json[QString("from")].isNull() && m_from_isValid;

    m_from_string_isValid = ::OpenAPI::fromJsonValue(m_from_string, json[QString("fromString")]);
    m_from_string_isSet = !json[QString("fromString")].isNull() && m_from_string_isValid;

    m_to_isValid = ::OpenAPI::fromJsonValue(m_to, json[QString("to")]);
    m_to_isSet = !json[QString("to")].isNull() && m_to_isValid;
}

QString OAIChangeDetails::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIChangeDetails::asJsonObject() const {
    QJsonObject obj;
    if (m_field_isSet) {
        obj.insert(QString("field"), ::OpenAPI::toJsonValue(m_field));
    }
    if (m_field_id_isSet) {
        obj.insert(QString("fieldId"), ::OpenAPI::toJsonValue(m_field_id));
    }
    if (m_fieldtype_isSet) {
        obj.insert(QString("fieldtype"), ::OpenAPI::toJsonValue(m_fieldtype));
    }
    if (m_from_isSet) {
        obj.insert(QString("from"), ::OpenAPI::toJsonValue(m_from));
    }
    if (m_from_string_isSet) {
        obj.insert(QString("fromString"), ::OpenAPI::toJsonValue(m_from_string));
    }
    if (m_to_isSet) {
        obj.insert(QString("to"), ::OpenAPI::toJsonValue(m_to));
    }
    return obj;
}

QString OAIChangeDetails::getField() const {
    return m_field;
}
void OAIChangeDetails::setField(const QString &field) {
    m_field = field;
    m_field_isSet = true;
}

bool OAIChangeDetails::is_field_Set() const{
    return m_field_isSet;
}

bool OAIChangeDetails::is_field_Valid() const{
    return m_field_isValid;
}

QString OAIChangeDetails::getFieldId() const {
    return m_field_id;
}
void OAIChangeDetails::setFieldId(const QString &field_id) {
    m_field_id = field_id;
    m_field_id_isSet = true;
}

bool OAIChangeDetails::is_field_id_Set() const{
    return m_field_id_isSet;
}

bool OAIChangeDetails::is_field_id_Valid() const{
    return m_field_id_isValid;
}

QString OAIChangeDetails::getFieldtype() const {
    return m_fieldtype;
}
void OAIChangeDetails::setFieldtype(const QString &fieldtype) {
    m_fieldtype = fieldtype;
    m_fieldtype_isSet = true;
}

bool OAIChangeDetails::is_fieldtype_Set() const{
    return m_fieldtype_isSet;
}

bool OAIChangeDetails::is_fieldtype_Valid() const{
    return m_fieldtype_isValid;
}

QString OAIChangeDetails::getFrom() const {
    return m_from;
}
void OAIChangeDetails::setFrom(const QString &from) {
    m_from = from;
    m_from_isSet = true;
}

bool OAIChangeDetails::is_from_Set() const{
    return m_from_isSet;
}

bool OAIChangeDetails::is_from_Valid() const{
    return m_from_isValid;
}

QString OAIChangeDetails::getFromString() const {
    return m_from_string;
}
void OAIChangeDetails::setFromString(const QString &from_string) {
    m_from_string = from_string;
    m_from_string_isSet = true;
}

bool OAIChangeDetails::is_from_string_Set() const{
    return m_from_string_isSet;
}

bool OAIChangeDetails::is_from_string_Valid() const{
    return m_from_string_isValid;
}

QString OAIChangeDetails::getTo() const {
    return m_to;
}
void OAIChangeDetails::setTo(const QString &to) {
    m_to = to;
    m_to_isSet = true;
}

bool OAIChangeDetails::is_to_Set() const{
    return m_to_isSet;
}

bool OAIChangeDetails::is_to_Valid() const{
    return m_to_isValid;
}

bool OAIChangeDetails::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_field_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_field_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fieldtype_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_from_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_from_string_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_to_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIChangeDetails::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
