/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIChangedValueBean.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIChangedValueBean::OAIChangedValueBean(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIChangedValueBean::OAIChangedValueBean() {
    this->initializeModel();
}

OAIChangedValueBean::~OAIChangedValueBean() {}

void OAIChangedValueBean::initializeModel() {

    m_changed_from_isSet = false;
    m_changed_from_isValid = false;

    m_changed_to_isSet = false;
    m_changed_to_isValid = false;

    m_field_name_isSet = false;
    m_field_name_isValid = false;
}

void OAIChangedValueBean::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIChangedValueBean::fromJsonObject(QJsonObject json) {

    m_changed_from_isValid = ::OpenAPI::fromJsonValue(m_changed_from, json[QString("changedFrom")]);
    m_changed_from_isSet = !json[QString("changedFrom")].isNull() && m_changed_from_isValid;

    m_changed_to_isValid = ::OpenAPI::fromJsonValue(m_changed_to, json[QString("changedTo")]);
    m_changed_to_isSet = !json[QString("changedTo")].isNull() && m_changed_to_isValid;

    m_field_name_isValid = ::OpenAPI::fromJsonValue(m_field_name, json[QString("fieldName")]);
    m_field_name_isSet = !json[QString("fieldName")].isNull() && m_field_name_isValid;
}

QString OAIChangedValueBean::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIChangedValueBean::asJsonObject() const {
    QJsonObject obj;
    if (m_changed_from_isSet) {
        obj.insert(QString("changedFrom"), ::OpenAPI::toJsonValue(m_changed_from));
    }
    if (m_changed_to_isSet) {
        obj.insert(QString("changedTo"), ::OpenAPI::toJsonValue(m_changed_to));
    }
    if (m_field_name_isSet) {
        obj.insert(QString("fieldName"), ::OpenAPI::toJsonValue(m_field_name));
    }
    return obj;
}

QString OAIChangedValueBean::getChangedFrom() const {
    return m_changed_from;
}
void OAIChangedValueBean::setChangedFrom(const QString &changed_from) {
    m_changed_from = changed_from;
    m_changed_from_isSet = true;
}

bool OAIChangedValueBean::is_changed_from_Set() const{
    return m_changed_from_isSet;
}

bool OAIChangedValueBean::is_changed_from_Valid() const{
    return m_changed_from_isValid;
}

QString OAIChangedValueBean::getChangedTo() const {
    return m_changed_to;
}
void OAIChangedValueBean::setChangedTo(const QString &changed_to) {
    m_changed_to = changed_to;
    m_changed_to_isSet = true;
}

bool OAIChangedValueBean::is_changed_to_Set() const{
    return m_changed_to_isSet;
}

bool OAIChangedValueBean::is_changed_to_Valid() const{
    return m_changed_to_isValid;
}

QString OAIChangedValueBean::getFieldName() const {
    return m_field_name;
}
void OAIChangedValueBean::setFieldName(const QString &field_name) {
    m_field_name = field_name;
    m_field_name_isSet = true;
}

bool OAIChangedValueBean::is_field_name_Set() const{
    return m_field_name_isSet;
}

bool OAIChangedValueBean::is_field_name_Valid() const{
    return m_field_name_isValid;
}

bool OAIChangedValueBean::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_changed_from_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_changed_to_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_field_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIChangedValueBean::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
