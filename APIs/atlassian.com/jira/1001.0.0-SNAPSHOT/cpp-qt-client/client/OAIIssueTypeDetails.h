/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIIssueTypeDetails.h
 *
 * Details about an issue type.
 */

#ifndef OAIIssueTypeDetails_H
#define OAIIssueTypeDetails_H

#include <QJsonObject>

#include "OAIScope.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIIssueTypeDetails : public OAIObject {
public:
    OAIIssueTypeDetails();
    OAIIssueTypeDetails(QString json);
    ~OAIIssueTypeDetails() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint64 getAvatarId() const;
    void setAvatarId(const qint64 &avatar_id);
    bool is_avatar_id_Set() const;
    bool is_avatar_id_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getEntityId() const;
    void setEntityId(const QString &entity_id);
    bool is_entity_id_Set() const;
    bool is_entity_id_Valid() const;

    qint32 getHierarchyLevel() const;
    void setHierarchyLevel(const qint32 &hierarchy_level);
    bool is_hierarchy_level_Set() const;
    bool is_hierarchy_level_Valid() const;

    QString getIconUrl() const;
    void setIconUrl(const QString &icon_url);
    bool is_icon_url_Set() const;
    bool is_icon_url_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAIScope getScope() const;
    void setScope(const OAIScope &scope);
    bool is_scope_Set() const;
    bool is_scope_Valid() const;

    QString getSelf() const;
    void setSelf(const QString &self);
    bool is_self_Set() const;
    bool is_self_Valid() const;

    bool isSubtask() const;
    void setSubtask(const bool &subtask);
    bool is_subtask_Set() const;
    bool is_subtask_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint64 m_avatar_id;
    bool m_avatar_id_isSet;
    bool m_avatar_id_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_entity_id;
    bool m_entity_id_isSet;
    bool m_entity_id_isValid;

    qint32 m_hierarchy_level;
    bool m_hierarchy_level_isSet;
    bool m_hierarchy_level_isValid;

    QString m_icon_url;
    bool m_icon_url_isSet;
    bool m_icon_url_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAIScope m_scope;
    bool m_scope_isSet;
    bool m_scope_isValid;

    QString m_self;
    bool m_self_isSet;
    bool m_self_isValid;

    bool m_subtask;
    bool m_subtask_isSet;
    bool m_subtask_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIIssueTypeDetails)

#endif // OAIIssueTypeDetails_H
