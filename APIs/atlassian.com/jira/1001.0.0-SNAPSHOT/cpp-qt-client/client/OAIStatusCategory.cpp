/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIStatusCategory.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIStatusCategory::OAIStatusCategory(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIStatusCategory::OAIStatusCategory() {
    this->initializeModel();
}

OAIStatusCategory::~OAIStatusCategory() {}

void OAIStatusCategory::initializeModel() {

    m_color_name_isSet = false;
    m_color_name_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_key_isSet = false;
    m_key_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_self_isSet = false;
    m_self_isValid = false;
}

void OAIStatusCategory::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIStatusCategory::fromJsonObject(QJsonObject json) {

    m_color_name_isValid = ::OpenAPI::fromJsonValue(m_color_name, json[QString("colorName")]);
    m_color_name_isSet = !json[QString("colorName")].isNull() && m_color_name_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_key_isValid = ::OpenAPI::fromJsonValue(m_key, json[QString("key")]);
    m_key_isSet = !json[QString("key")].isNull() && m_key_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_self_isValid = ::OpenAPI::fromJsonValue(m_self, json[QString("self")]);
    m_self_isSet = !json[QString("self")].isNull() && m_self_isValid;
}

QString OAIStatusCategory::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIStatusCategory::asJsonObject() const {
    QJsonObject obj;
    if (m_color_name_isSet) {
        obj.insert(QString("colorName"), ::OpenAPI::toJsonValue(m_color_name));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_key_isSet) {
        obj.insert(QString("key"), ::OpenAPI::toJsonValue(m_key));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_self_isSet) {
        obj.insert(QString("self"), ::OpenAPI::toJsonValue(m_self));
    }
    return obj;
}

QString OAIStatusCategory::getColorName() const {
    return m_color_name;
}
void OAIStatusCategory::setColorName(const QString &color_name) {
    m_color_name = color_name;
    m_color_name_isSet = true;
}

bool OAIStatusCategory::is_color_name_Set() const{
    return m_color_name_isSet;
}

bool OAIStatusCategory::is_color_name_Valid() const{
    return m_color_name_isValid;
}

qint64 OAIStatusCategory::getId() const {
    return m_id;
}
void OAIStatusCategory::setId(const qint64 &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIStatusCategory::is_id_Set() const{
    return m_id_isSet;
}

bool OAIStatusCategory::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIStatusCategory::getKey() const {
    return m_key;
}
void OAIStatusCategory::setKey(const QString &key) {
    m_key = key;
    m_key_isSet = true;
}

bool OAIStatusCategory::is_key_Set() const{
    return m_key_isSet;
}

bool OAIStatusCategory::is_key_Valid() const{
    return m_key_isValid;
}

QString OAIStatusCategory::getName() const {
    return m_name;
}
void OAIStatusCategory::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIStatusCategory::is_name_Set() const{
    return m_name_isSet;
}

bool OAIStatusCategory::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIStatusCategory::getSelf() const {
    return m_self;
}
void OAIStatusCategory::setSelf(const QString &self) {
    m_self = self;
    m_self_isSet = true;
}

bool OAIStatusCategory::is_self_Set() const{
    return m_self_isSet;
}

bool OAIStatusCategory::is_self_Valid() const{
    return m_self_isValid;
}

bool OAIStatusCategory::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_color_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_key_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_self_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIStatusCategory::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
