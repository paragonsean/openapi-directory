/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPageBeanWorkflow.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPageBeanWorkflow::OAIPageBeanWorkflow(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPageBeanWorkflow::OAIPageBeanWorkflow() {
    this->initializeModel();
}

OAIPageBeanWorkflow::~OAIPageBeanWorkflow() {}

void OAIPageBeanWorkflow::initializeModel() {

    m_is_last_isSet = false;
    m_is_last_isValid = false;

    m_max_results_isSet = false;
    m_max_results_isValid = false;

    m_next_page_isSet = false;
    m_next_page_isValid = false;

    m_self_isSet = false;
    m_self_isValid = false;

    m_start_at_isSet = false;
    m_start_at_isValid = false;

    m_total_isSet = false;
    m_total_isValid = false;

    m_values_isSet = false;
    m_values_isValid = false;
}

void OAIPageBeanWorkflow::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPageBeanWorkflow::fromJsonObject(QJsonObject json) {

    m_is_last_isValid = ::OpenAPI::fromJsonValue(m_is_last, json[QString("isLast")]);
    m_is_last_isSet = !json[QString("isLast")].isNull() && m_is_last_isValid;

    m_max_results_isValid = ::OpenAPI::fromJsonValue(m_max_results, json[QString("maxResults")]);
    m_max_results_isSet = !json[QString("maxResults")].isNull() && m_max_results_isValid;

    m_next_page_isValid = ::OpenAPI::fromJsonValue(m_next_page, json[QString("nextPage")]);
    m_next_page_isSet = !json[QString("nextPage")].isNull() && m_next_page_isValid;

    m_self_isValid = ::OpenAPI::fromJsonValue(m_self, json[QString("self")]);
    m_self_isSet = !json[QString("self")].isNull() && m_self_isValid;

    m_start_at_isValid = ::OpenAPI::fromJsonValue(m_start_at, json[QString("startAt")]);
    m_start_at_isSet = !json[QString("startAt")].isNull() && m_start_at_isValid;

    m_total_isValid = ::OpenAPI::fromJsonValue(m_total, json[QString("total")]);
    m_total_isSet = !json[QString("total")].isNull() && m_total_isValid;

    m_values_isValid = ::OpenAPI::fromJsonValue(m_values, json[QString("values")]);
    m_values_isSet = !json[QString("values")].isNull() && m_values_isValid;
}

QString OAIPageBeanWorkflow::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPageBeanWorkflow::asJsonObject() const {
    QJsonObject obj;
    if (m_is_last_isSet) {
        obj.insert(QString("isLast"), ::OpenAPI::toJsonValue(m_is_last));
    }
    if (m_max_results_isSet) {
        obj.insert(QString("maxResults"), ::OpenAPI::toJsonValue(m_max_results));
    }
    if (m_next_page_isSet) {
        obj.insert(QString("nextPage"), ::OpenAPI::toJsonValue(m_next_page));
    }
    if (m_self_isSet) {
        obj.insert(QString("self"), ::OpenAPI::toJsonValue(m_self));
    }
    if (m_start_at_isSet) {
        obj.insert(QString("startAt"), ::OpenAPI::toJsonValue(m_start_at));
    }
    if (m_total_isSet) {
        obj.insert(QString("total"), ::OpenAPI::toJsonValue(m_total));
    }
    if (m_values.size() > 0) {
        obj.insert(QString("values"), ::OpenAPI::toJsonValue(m_values));
    }
    return obj;
}

bool OAIPageBeanWorkflow::isIsLast() const {
    return m_is_last;
}
void OAIPageBeanWorkflow::setIsLast(const bool &is_last) {
    m_is_last = is_last;
    m_is_last_isSet = true;
}

bool OAIPageBeanWorkflow::is_is_last_Set() const{
    return m_is_last_isSet;
}

bool OAIPageBeanWorkflow::is_is_last_Valid() const{
    return m_is_last_isValid;
}

qint32 OAIPageBeanWorkflow::getMaxResults() const {
    return m_max_results;
}
void OAIPageBeanWorkflow::setMaxResults(const qint32 &max_results) {
    m_max_results = max_results;
    m_max_results_isSet = true;
}

bool OAIPageBeanWorkflow::is_max_results_Set() const{
    return m_max_results_isSet;
}

bool OAIPageBeanWorkflow::is_max_results_Valid() const{
    return m_max_results_isValid;
}

QString OAIPageBeanWorkflow::getNextPage() const {
    return m_next_page;
}
void OAIPageBeanWorkflow::setNextPage(const QString &next_page) {
    m_next_page = next_page;
    m_next_page_isSet = true;
}

bool OAIPageBeanWorkflow::is_next_page_Set() const{
    return m_next_page_isSet;
}

bool OAIPageBeanWorkflow::is_next_page_Valid() const{
    return m_next_page_isValid;
}

QString OAIPageBeanWorkflow::getSelf() const {
    return m_self;
}
void OAIPageBeanWorkflow::setSelf(const QString &self) {
    m_self = self;
    m_self_isSet = true;
}

bool OAIPageBeanWorkflow::is_self_Set() const{
    return m_self_isSet;
}

bool OAIPageBeanWorkflow::is_self_Valid() const{
    return m_self_isValid;
}

qint64 OAIPageBeanWorkflow::getStartAt() const {
    return m_start_at;
}
void OAIPageBeanWorkflow::setStartAt(const qint64 &start_at) {
    m_start_at = start_at;
    m_start_at_isSet = true;
}

bool OAIPageBeanWorkflow::is_start_at_Set() const{
    return m_start_at_isSet;
}

bool OAIPageBeanWorkflow::is_start_at_Valid() const{
    return m_start_at_isValid;
}

qint64 OAIPageBeanWorkflow::getTotal() const {
    return m_total;
}
void OAIPageBeanWorkflow::setTotal(const qint64 &total) {
    m_total = total;
    m_total_isSet = true;
}

bool OAIPageBeanWorkflow::is_total_Set() const{
    return m_total_isSet;
}

bool OAIPageBeanWorkflow::is_total_Valid() const{
    return m_total_isValid;
}

QList<OAIWorkflow> OAIPageBeanWorkflow::getValues() const {
    return m_values;
}
void OAIPageBeanWorkflow::setValues(const QList<OAIWorkflow> &values) {
    m_values = values;
    m_values_isSet = true;
}

bool OAIPageBeanWorkflow::is_values_Set() const{
    return m_values_isSet;
}

bool OAIPageBeanWorkflow::is_values_Valid() const{
    return m_values_isValid;
}

bool OAIPageBeanWorkflow::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_is_last_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_max_results_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_page_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_self_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_values.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPageBeanWorkflow::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
