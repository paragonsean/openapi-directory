/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILocale.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILocale::OAILocale(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILocale::OAILocale() {
    this->initializeModel();
}

OAILocale::~OAILocale() {}

void OAILocale::initializeModel() {

    m_locale_isSet = false;
    m_locale_isValid = false;
}

void OAILocale::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILocale::fromJsonObject(QJsonObject json) {

    m_locale_isValid = ::OpenAPI::fromJsonValue(m_locale, json[QString("locale")]);
    m_locale_isSet = !json[QString("locale")].isNull() && m_locale_isValid;
}

QString OAILocale::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILocale::asJsonObject() const {
    QJsonObject obj;
    if (m_locale_isSet) {
        obj.insert(QString("locale"), ::OpenAPI::toJsonValue(m_locale));
    }
    return obj;
}

QString OAILocale::getLocale() const {
    return m_locale;
}
void OAILocale::setLocale(const QString &locale) {
    m_locale = locale;
    m_locale_isSet = true;
}

bool OAILocale::is_locale_Set() const{
    return m_locale_isSet;
}

bool OAILocale::is_locale_Valid() const{
    return m_locale_isValid;
}

bool OAILocale::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_locale_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILocale::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
