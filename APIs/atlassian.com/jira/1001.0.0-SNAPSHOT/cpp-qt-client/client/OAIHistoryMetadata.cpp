/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIHistoryMetadata.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIHistoryMetadata::OAIHistoryMetadata(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIHistoryMetadata::OAIHistoryMetadata() {
    this->initializeModel();
}

OAIHistoryMetadata::~OAIHistoryMetadata() {}

void OAIHistoryMetadata::initializeModel() {

    m_activity_description_isSet = false;
    m_activity_description_isValid = false;

    m_activity_description_key_isSet = false;
    m_activity_description_key_isValid = false;

    m_actor_isSet = false;
    m_actor_isValid = false;

    m_cause_isSet = false;
    m_cause_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_description_key_isSet = false;
    m_description_key_isValid = false;

    m_email_description_isSet = false;
    m_email_description_isValid = false;

    m_email_description_key_isSet = false;
    m_email_description_key_isValid = false;

    m_extra_data_isSet = false;
    m_extra_data_isValid = false;

    m_generator_isSet = false;
    m_generator_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAIHistoryMetadata::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIHistoryMetadata::fromJsonObject(QJsonObject json) {

    m_activity_description_isValid = ::OpenAPI::fromJsonValue(m_activity_description, json[QString("activityDescription")]);
    m_activity_description_isSet = !json[QString("activityDescription")].isNull() && m_activity_description_isValid;

    m_activity_description_key_isValid = ::OpenAPI::fromJsonValue(m_activity_description_key, json[QString("activityDescriptionKey")]);
    m_activity_description_key_isSet = !json[QString("activityDescriptionKey")].isNull() && m_activity_description_key_isValid;

    m_actor_isValid = ::OpenAPI::fromJsonValue(m_actor, json[QString("actor")]);
    m_actor_isSet = !json[QString("actor")].isNull() && m_actor_isValid;

    m_cause_isValid = ::OpenAPI::fromJsonValue(m_cause, json[QString("cause")]);
    m_cause_isSet = !json[QString("cause")].isNull() && m_cause_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_description_key_isValid = ::OpenAPI::fromJsonValue(m_description_key, json[QString("descriptionKey")]);
    m_description_key_isSet = !json[QString("descriptionKey")].isNull() && m_description_key_isValid;

    m_email_description_isValid = ::OpenAPI::fromJsonValue(m_email_description, json[QString("emailDescription")]);
    m_email_description_isSet = !json[QString("emailDescription")].isNull() && m_email_description_isValid;

    m_email_description_key_isValid = ::OpenAPI::fromJsonValue(m_email_description_key, json[QString("emailDescriptionKey")]);
    m_email_description_key_isSet = !json[QString("emailDescriptionKey")].isNull() && m_email_description_key_isValid;

    m_extra_data_isValid = ::OpenAPI::fromJsonValue(m_extra_data, json[QString("extraData")]);
    m_extra_data_isSet = !json[QString("extraData")].isNull() && m_extra_data_isValid;

    m_generator_isValid = ::OpenAPI::fromJsonValue(m_generator, json[QString("generator")]);
    m_generator_isSet = !json[QString("generator")].isNull() && m_generator_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;
}

QString OAIHistoryMetadata::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIHistoryMetadata::asJsonObject() const {
    QJsonObject obj;
    if (m_activity_description_isSet) {
        obj.insert(QString("activityDescription"), ::OpenAPI::toJsonValue(m_activity_description));
    }
    if (m_activity_description_key_isSet) {
        obj.insert(QString("activityDescriptionKey"), ::OpenAPI::toJsonValue(m_activity_description_key));
    }
    if (m_actor.isSet()) {
        obj.insert(QString("actor"), ::OpenAPI::toJsonValue(m_actor));
    }
    if (m_cause.isSet()) {
        obj.insert(QString("cause"), ::OpenAPI::toJsonValue(m_cause));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_description_key_isSet) {
        obj.insert(QString("descriptionKey"), ::OpenAPI::toJsonValue(m_description_key));
    }
    if (m_email_description_isSet) {
        obj.insert(QString("emailDescription"), ::OpenAPI::toJsonValue(m_email_description));
    }
    if (m_email_description_key_isSet) {
        obj.insert(QString("emailDescriptionKey"), ::OpenAPI::toJsonValue(m_email_description_key));
    }
    if (m_extra_data.size() > 0) {
        obj.insert(QString("extraData"), ::OpenAPI::toJsonValue(m_extra_data));
    }
    if (m_generator.isSet()) {
        obj.insert(QString("generator"), ::OpenAPI::toJsonValue(m_generator));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

QString OAIHistoryMetadata::getActivityDescription() const {
    return m_activity_description;
}
void OAIHistoryMetadata::setActivityDescription(const QString &activity_description) {
    m_activity_description = activity_description;
    m_activity_description_isSet = true;
}

bool OAIHistoryMetadata::is_activity_description_Set() const{
    return m_activity_description_isSet;
}

bool OAIHistoryMetadata::is_activity_description_Valid() const{
    return m_activity_description_isValid;
}

QString OAIHistoryMetadata::getActivityDescriptionKey() const {
    return m_activity_description_key;
}
void OAIHistoryMetadata::setActivityDescriptionKey(const QString &activity_description_key) {
    m_activity_description_key = activity_description_key;
    m_activity_description_key_isSet = true;
}

bool OAIHistoryMetadata::is_activity_description_key_Set() const{
    return m_activity_description_key_isSet;
}

bool OAIHistoryMetadata::is_activity_description_key_Valid() const{
    return m_activity_description_key_isValid;
}

OAIHistoryMetadataParticipant OAIHistoryMetadata::getActor() const {
    return m_actor;
}
void OAIHistoryMetadata::setActor(const OAIHistoryMetadataParticipant &actor) {
    m_actor = actor;
    m_actor_isSet = true;
}

bool OAIHistoryMetadata::is_actor_Set() const{
    return m_actor_isSet;
}

bool OAIHistoryMetadata::is_actor_Valid() const{
    return m_actor_isValid;
}

OAIHistoryMetadataParticipant OAIHistoryMetadata::getCause() const {
    return m_cause;
}
void OAIHistoryMetadata::setCause(const OAIHistoryMetadataParticipant &cause) {
    m_cause = cause;
    m_cause_isSet = true;
}

bool OAIHistoryMetadata::is_cause_Set() const{
    return m_cause_isSet;
}

bool OAIHistoryMetadata::is_cause_Valid() const{
    return m_cause_isValid;
}

QString OAIHistoryMetadata::getDescription() const {
    return m_description;
}
void OAIHistoryMetadata::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIHistoryMetadata::is_description_Set() const{
    return m_description_isSet;
}

bool OAIHistoryMetadata::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIHistoryMetadata::getDescriptionKey() const {
    return m_description_key;
}
void OAIHistoryMetadata::setDescriptionKey(const QString &description_key) {
    m_description_key = description_key;
    m_description_key_isSet = true;
}

bool OAIHistoryMetadata::is_description_key_Set() const{
    return m_description_key_isSet;
}

bool OAIHistoryMetadata::is_description_key_Valid() const{
    return m_description_key_isValid;
}

QString OAIHistoryMetadata::getEmailDescription() const {
    return m_email_description;
}
void OAIHistoryMetadata::setEmailDescription(const QString &email_description) {
    m_email_description = email_description;
    m_email_description_isSet = true;
}

bool OAIHistoryMetadata::is_email_description_Set() const{
    return m_email_description_isSet;
}

bool OAIHistoryMetadata::is_email_description_Valid() const{
    return m_email_description_isValid;
}

QString OAIHistoryMetadata::getEmailDescriptionKey() const {
    return m_email_description_key;
}
void OAIHistoryMetadata::setEmailDescriptionKey(const QString &email_description_key) {
    m_email_description_key = email_description_key;
    m_email_description_key_isSet = true;
}

bool OAIHistoryMetadata::is_email_description_key_Set() const{
    return m_email_description_key_isSet;
}

bool OAIHistoryMetadata::is_email_description_key_Valid() const{
    return m_email_description_key_isValid;
}

QMap<QString, QString> OAIHistoryMetadata::getExtraData() const {
    return m_extra_data;
}
void OAIHistoryMetadata::setExtraData(const QMap<QString, QString> &extra_data) {
    m_extra_data = extra_data;
    m_extra_data_isSet = true;
}

bool OAIHistoryMetadata::is_extra_data_Set() const{
    return m_extra_data_isSet;
}

bool OAIHistoryMetadata::is_extra_data_Valid() const{
    return m_extra_data_isValid;
}

OAIHistoryMetadataParticipant OAIHistoryMetadata::getGenerator() const {
    return m_generator;
}
void OAIHistoryMetadata::setGenerator(const OAIHistoryMetadataParticipant &generator) {
    m_generator = generator;
    m_generator_isSet = true;
}

bool OAIHistoryMetadata::is_generator_Set() const{
    return m_generator_isSet;
}

bool OAIHistoryMetadata::is_generator_Valid() const{
    return m_generator_isValid;
}

QString OAIHistoryMetadata::getType() const {
    return m_type;
}
void OAIHistoryMetadata::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIHistoryMetadata::is_type_Set() const{
    return m_type_isSet;
}

bool OAIHistoryMetadata::is_type_Valid() const{
    return m_type_isValid;
}

bool OAIHistoryMetadata::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_activity_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_activity_description_key_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_actor.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_cause.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_key_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_email_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_email_description_key_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_extra_data.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_generator.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIHistoryMetadata::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
