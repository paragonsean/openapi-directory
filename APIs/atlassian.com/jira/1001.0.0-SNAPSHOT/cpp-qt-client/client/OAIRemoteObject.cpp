/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRemoteObject.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRemoteObject::OAIRemoteObject(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRemoteObject::OAIRemoteObject() {
    this->initializeModel();
}

OAIRemoteObject::~OAIRemoteObject() {}

void OAIRemoteObject::initializeModel() {

    m_icon_isSet = false;
    m_icon_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_summary_isSet = false;
    m_summary_isValid = false;

    m_title_isSet = false;
    m_title_isValid = false;

    m_url_isSet = false;
    m_url_isValid = false;
}

void OAIRemoteObject::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRemoteObject::fromJsonObject(QJsonObject json) {

    m_icon_isValid = ::OpenAPI::fromJsonValue(m_icon, json[QString("icon")]);
    m_icon_isSet = !json[QString("icon")].isNull() && m_icon_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_summary_isValid = ::OpenAPI::fromJsonValue(m_summary, json[QString("summary")]);
    m_summary_isSet = !json[QString("summary")].isNull() && m_summary_isValid;

    m_title_isValid = ::OpenAPI::fromJsonValue(m_title, json[QString("title")]);
    m_title_isSet = !json[QString("title")].isNull() && m_title_isValid;

    m_url_isValid = ::OpenAPI::fromJsonValue(m_url, json[QString("url")]);
    m_url_isSet = !json[QString("url")].isNull() && m_url_isValid;
}

QString OAIRemoteObject::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRemoteObject::asJsonObject() const {
    QJsonObject obj;
    if (m_icon.isSet()) {
        obj.insert(QString("icon"), ::OpenAPI::toJsonValue(m_icon));
    }
    if (m_status.isSet()) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_summary_isSet) {
        obj.insert(QString("summary"), ::OpenAPI::toJsonValue(m_summary));
    }
    if (m_title_isSet) {
        obj.insert(QString("title"), ::OpenAPI::toJsonValue(m_title));
    }
    if (m_url_isSet) {
        obj.insert(QString("url"), ::OpenAPI::toJsonValue(m_url));
    }
    return obj;
}

OAIIcon OAIRemoteObject::getIcon() const {
    return m_icon;
}
void OAIRemoteObject::setIcon(const OAIIcon &icon) {
    m_icon = icon;
    m_icon_isSet = true;
}

bool OAIRemoteObject::is_icon_Set() const{
    return m_icon_isSet;
}

bool OAIRemoteObject::is_icon_Valid() const{
    return m_icon_isValid;
}

OAIStatus OAIRemoteObject::getStatus() const {
    return m_status;
}
void OAIRemoteObject::setStatus(const OAIStatus &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIRemoteObject::is_status_Set() const{
    return m_status_isSet;
}

bool OAIRemoteObject::is_status_Valid() const{
    return m_status_isValid;
}

QString OAIRemoteObject::getSummary() const {
    return m_summary;
}
void OAIRemoteObject::setSummary(const QString &summary) {
    m_summary = summary;
    m_summary_isSet = true;
}

bool OAIRemoteObject::is_summary_Set() const{
    return m_summary_isSet;
}

bool OAIRemoteObject::is_summary_Valid() const{
    return m_summary_isValid;
}

QString OAIRemoteObject::getTitle() const {
    return m_title;
}
void OAIRemoteObject::setTitle(const QString &title) {
    m_title = title;
    m_title_isSet = true;
}

bool OAIRemoteObject::is_title_Set() const{
    return m_title_isSet;
}

bool OAIRemoteObject::is_title_Valid() const{
    return m_title_isValid;
}

QString OAIRemoteObject::getUrl() const {
    return m_url;
}
void OAIRemoteObject::setUrl(const QString &url) {
    m_url = url;
    m_url_isSet = true;
}

bool OAIRemoteObject::is_url_Set() const{
    return m_url_isSet;
}

bool OAIRemoteObject::is_url_Valid() const{
    return m_url_isValid;
}

bool OAIRemoteObject::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_icon.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_summary_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_title_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRemoteObject::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_title_isValid && m_url_isValid && true;
}

} // namespace OpenAPI
