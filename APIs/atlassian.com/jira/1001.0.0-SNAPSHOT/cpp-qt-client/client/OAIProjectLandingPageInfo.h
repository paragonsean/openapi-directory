/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIProjectLandingPageInfo.h
 *
 * 
 */

#ifndef OAIProjectLandingPageInfo_H
#define OAIProjectLandingPageInfo_H

#include <QJsonObject>

#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIProjectLandingPageInfo : public OAIObject {
public:
    OAIProjectLandingPageInfo();
    OAIProjectLandingPageInfo(QString json);
    ~OAIProjectLandingPageInfo() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QMap<QString, QString> getAttributes() const;
    void setAttributes(const QMap<QString, QString> &attributes);
    bool is_attributes_Set() const;
    bool is_attributes_Valid() const;

    qint64 getBoardId() const;
    void setBoardId(const qint64 &board_id);
    bool is_board_id_Set() const;
    bool is_board_id_Valid() const;

    QString getBoardName() const;
    void setBoardName(const QString &board_name);
    bool is_board_name_Set() const;
    bool is_board_name_Valid() const;

    QString getProjectKey() const;
    void setProjectKey(const QString &project_key);
    bool is_project_key_Set() const;
    bool is_project_key_Valid() const;

    QString getProjectType() const;
    void setProjectType(const QString &project_type);
    bool is_project_type_Set() const;
    bool is_project_type_Valid() const;

    QString getQueueCategory() const;
    void setQueueCategory(const QString &queue_category);
    bool is_queue_category_Set() const;
    bool is_queue_category_Valid() const;

    qint64 getQueueId() const;
    void setQueueId(const qint64 &queue_id);
    bool is_queue_id_Set() const;
    bool is_queue_id_Valid() const;

    QString getQueueName() const;
    void setQueueName(const QString &queue_name);
    bool is_queue_name_Set() const;
    bool is_queue_name_Valid() const;

    bool isSimpleBoard() const;
    void setSimpleBoard(const bool &simple_board);
    bool is_simple_board_Set() const;
    bool is_simple_board_Valid() const;

    bool isSimplified() const;
    void setSimplified(const bool &simplified);
    bool is_simplified_Set() const;
    bool is_simplified_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QMap<QString, QString> m_attributes;
    bool m_attributes_isSet;
    bool m_attributes_isValid;

    qint64 m_board_id;
    bool m_board_id_isSet;
    bool m_board_id_isValid;

    QString m_board_name;
    bool m_board_name_isSet;
    bool m_board_name_isValid;

    QString m_project_key;
    bool m_project_key_isSet;
    bool m_project_key_isValid;

    QString m_project_type;
    bool m_project_type_isSet;
    bool m_project_type_isValid;

    QString m_queue_category;
    bool m_queue_category_isSet;
    bool m_queue_category_isValid;

    qint64 m_queue_id;
    bool m_queue_id_isSet;
    bool m_queue_id_isValid;

    QString m_queue_name;
    bool m_queue_name_isSet;
    bool m_queue_name_isValid;

    bool m_simple_board;
    bool m_simple_board_isSet;
    bool m_simple_board_isValid;

    bool m_simplified;
    bool m_simplified_isSet;
    bool m_simplified_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIProjectLandingPageInfo)

#endif // OAIProjectLandingPageInfo_H
