/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRichText.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRichText::OAIRichText(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRichText::OAIRichText() {
    this->initializeModel();
}

OAIRichText::~OAIRichText() {}

void OAIRichText::initializeModel() {

    m_empty_isSet = false;
    m_empty_isValid = false;

    m_empty_adf_isSet = false;
    m_empty_adf_isValid = false;

    m_finalised_isSet = false;
    m_finalised_isValid = false;

    m_value_set_isSet = false;
    m_value_set_isValid = false;
}

void OAIRichText::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRichText::fromJsonObject(QJsonObject json) {

    m_empty_isValid = ::OpenAPI::fromJsonValue(m_empty, json[QString("empty")]);
    m_empty_isSet = !json[QString("empty")].isNull() && m_empty_isValid;

    m_empty_adf_isValid = ::OpenAPI::fromJsonValue(m_empty_adf, json[QString("emptyAdf")]);
    m_empty_adf_isSet = !json[QString("emptyAdf")].isNull() && m_empty_adf_isValid;

    m_finalised_isValid = ::OpenAPI::fromJsonValue(m_finalised, json[QString("finalised")]);
    m_finalised_isSet = !json[QString("finalised")].isNull() && m_finalised_isValid;

    m_value_set_isValid = ::OpenAPI::fromJsonValue(m_value_set, json[QString("valueSet")]);
    m_value_set_isSet = !json[QString("valueSet")].isNull() && m_value_set_isValid;
}

QString OAIRichText::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRichText::asJsonObject() const {
    QJsonObject obj;
    if (m_empty_isSet) {
        obj.insert(QString("empty"), ::OpenAPI::toJsonValue(m_empty));
    }
    if (m_empty_adf_isSet) {
        obj.insert(QString("emptyAdf"), ::OpenAPI::toJsonValue(m_empty_adf));
    }
    if (m_finalised_isSet) {
        obj.insert(QString("finalised"), ::OpenAPI::toJsonValue(m_finalised));
    }
    if (m_value_set_isSet) {
        obj.insert(QString("valueSet"), ::OpenAPI::toJsonValue(m_value_set));
    }
    return obj;
}

bool OAIRichText::isEmpty() const {
    return m_empty;
}
void OAIRichText::setEmpty(const bool &empty) {
    m_empty = empty;
    m_empty_isSet = true;
}

bool OAIRichText::is_empty_Set() const{
    return m_empty_isSet;
}

bool OAIRichText::is_empty_Valid() const{
    return m_empty_isValid;
}

bool OAIRichText::isEmptyAdf() const {
    return m_empty_adf;
}
void OAIRichText::setEmptyAdf(const bool &empty_adf) {
    m_empty_adf = empty_adf;
    m_empty_adf_isSet = true;
}

bool OAIRichText::is_empty_adf_Set() const{
    return m_empty_adf_isSet;
}

bool OAIRichText::is_empty_adf_Valid() const{
    return m_empty_adf_isValid;
}

bool OAIRichText::isFinalised() const {
    return m_finalised;
}
void OAIRichText::setFinalised(const bool &finalised) {
    m_finalised = finalised;
    m_finalised_isSet = true;
}

bool OAIRichText::is_finalised_Set() const{
    return m_finalised_isSet;
}

bool OAIRichText::is_finalised_Valid() const{
    return m_finalised_isValid;
}

bool OAIRichText::isValueSet() const {
    return m_value_set;
}
void OAIRichText::setValueSet(const bool &value_set) {
    m_value_set = value_set;
    m_value_set_isSet = true;
}

bool OAIRichText::is_value_set_Set() const{
    return m_value_set_isSet;
}

bool OAIRichText::is_value_set_Valid() const{
    return m_value_set_isValid;
}

bool OAIRichText::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_empty_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_empty_adf_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_finalised_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_value_set_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRichText::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
