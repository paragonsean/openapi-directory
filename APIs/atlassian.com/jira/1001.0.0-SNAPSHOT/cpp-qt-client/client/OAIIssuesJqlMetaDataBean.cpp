/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIIssuesJqlMetaDataBean.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIIssuesJqlMetaDataBean::OAIIssuesJqlMetaDataBean(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIIssuesJqlMetaDataBean::OAIIssuesJqlMetaDataBean() {
    this->initializeModel();
}

OAIIssuesJqlMetaDataBean::~OAIIssuesJqlMetaDataBean() {}

void OAIIssuesJqlMetaDataBean::initializeModel() {

    m_count_isSet = false;
    m_count_isValid = false;

    m_max_results_isSet = false;
    m_max_results_isValid = false;

    m_start_at_isSet = false;
    m_start_at_isValid = false;

    m_total_count_isSet = false;
    m_total_count_isValid = false;

    m_validation_warnings_isSet = false;
    m_validation_warnings_isValid = false;
}

void OAIIssuesJqlMetaDataBean::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIIssuesJqlMetaDataBean::fromJsonObject(QJsonObject json) {

    m_count_isValid = ::OpenAPI::fromJsonValue(m_count, json[QString("count")]);
    m_count_isSet = !json[QString("count")].isNull() && m_count_isValid;

    m_max_results_isValid = ::OpenAPI::fromJsonValue(m_max_results, json[QString("maxResults")]);
    m_max_results_isSet = !json[QString("maxResults")].isNull() && m_max_results_isValid;

    m_start_at_isValid = ::OpenAPI::fromJsonValue(m_start_at, json[QString("startAt")]);
    m_start_at_isSet = !json[QString("startAt")].isNull() && m_start_at_isValid;

    m_total_count_isValid = ::OpenAPI::fromJsonValue(m_total_count, json[QString("totalCount")]);
    m_total_count_isSet = !json[QString("totalCount")].isNull() && m_total_count_isValid;

    m_validation_warnings_isValid = ::OpenAPI::fromJsonValue(m_validation_warnings, json[QString("validationWarnings")]);
    m_validation_warnings_isSet = !json[QString("validationWarnings")].isNull() && m_validation_warnings_isValid;
}

QString OAIIssuesJqlMetaDataBean::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIIssuesJqlMetaDataBean::asJsonObject() const {
    QJsonObject obj;
    if (m_count_isSet) {
        obj.insert(QString("count"), ::OpenAPI::toJsonValue(m_count));
    }
    if (m_max_results_isSet) {
        obj.insert(QString("maxResults"), ::OpenAPI::toJsonValue(m_max_results));
    }
    if (m_start_at_isSet) {
        obj.insert(QString("startAt"), ::OpenAPI::toJsonValue(m_start_at));
    }
    if (m_total_count_isSet) {
        obj.insert(QString("totalCount"), ::OpenAPI::toJsonValue(m_total_count));
    }
    if (m_validation_warnings.size() > 0) {
        obj.insert(QString("validationWarnings"), ::OpenAPI::toJsonValue(m_validation_warnings));
    }
    return obj;
}

qint32 OAIIssuesJqlMetaDataBean::getCount() const {
    return m_count;
}
void OAIIssuesJqlMetaDataBean::setCount(const qint32 &count) {
    m_count = count;
    m_count_isSet = true;
}

bool OAIIssuesJqlMetaDataBean::is_count_Set() const{
    return m_count_isSet;
}

bool OAIIssuesJqlMetaDataBean::is_count_Valid() const{
    return m_count_isValid;
}

qint32 OAIIssuesJqlMetaDataBean::getMaxResults() const {
    return m_max_results;
}
void OAIIssuesJqlMetaDataBean::setMaxResults(const qint32 &max_results) {
    m_max_results = max_results;
    m_max_results_isSet = true;
}

bool OAIIssuesJqlMetaDataBean::is_max_results_Set() const{
    return m_max_results_isSet;
}

bool OAIIssuesJqlMetaDataBean::is_max_results_Valid() const{
    return m_max_results_isValid;
}

qint64 OAIIssuesJqlMetaDataBean::getStartAt() const {
    return m_start_at;
}
void OAIIssuesJqlMetaDataBean::setStartAt(const qint64 &start_at) {
    m_start_at = start_at;
    m_start_at_isSet = true;
}

bool OAIIssuesJqlMetaDataBean::is_start_at_Set() const{
    return m_start_at_isSet;
}

bool OAIIssuesJqlMetaDataBean::is_start_at_Valid() const{
    return m_start_at_isValid;
}

qint64 OAIIssuesJqlMetaDataBean::getTotalCount() const {
    return m_total_count;
}
void OAIIssuesJqlMetaDataBean::setTotalCount(const qint64 &total_count) {
    m_total_count = total_count;
    m_total_count_isSet = true;
}

bool OAIIssuesJqlMetaDataBean::is_total_count_Set() const{
    return m_total_count_isSet;
}

bool OAIIssuesJqlMetaDataBean::is_total_count_Valid() const{
    return m_total_count_isValid;
}

QList<QString> OAIIssuesJqlMetaDataBean::getValidationWarnings() const {
    return m_validation_warnings;
}
void OAIIssuesJqlMetaDataBean::setValidationWarnings(const QList<QString> &validation_warnings) {
    m_validation_warnings = validation_warnings;
    m_validation_warnings_isSet = true;
}

bool OAIIssuesJqlMetaDataBean::is_validation_warnings_Set() const{
    return m_validation_warnings_isSet;
}

bool OAIIssuesJqlMetaDataBean::is_validation_warnings_Valid() const{
    return m_validation_warnings_isValid;
}

bool OAIIssuesJqlMetaDataBean::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_max_results_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_validation_warnings.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIIssuesJqlMetaDataBean::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_count_isValid && m_max_results_isValid && m_start_at_isValid && m_total_count_isValid && true;
}

} // namespace OpenAPI
