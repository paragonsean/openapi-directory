/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITaskProgressBeanObject.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITaskProgressBeanObject::OAITaskProgressBeanObject(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITaskProgressBeanObject::OAITaskProgressBeanObject() {
    this->initializeModel();
}

OAITaskProgressBeanObject::~OAITaskProgressBeanObject() {}

void OAITaskProgressBeanObject::initializeModel() {

    m_description_isSet = false;
    m_description_isValid = false;

    m_elapsed_runtime_isSet = false;
    m_elapsed_runtime_isValid = false;

    m_finished_isSet = false;
    m_finished_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_last_update_isSet = false;
    m_last_update_isValid = false;

    m_message_isSet = false;
    m_message_isValid = false;

    m_progress_isSet = false;
    m_progress_isValid = false;

    m_result_isSet = false;
    m_result_isValid = false;

    m_self_isSet = false;
    m_self_isValid = false;

    m_started_isSet = false;
    m_started_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_submitted_isSet = false;
    m_submitted_isValid = false;

    m_submitted_by_isSet = false;
    m_submitted_by_isValid = false;
}

void OAITaskProgressBeanObject::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITaskProgressBeanObject::fromJsonObject(QJsonObject json) {

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_elapsed_runtime_isValid = ::OpenAPI::fromJsonValue(m_elapsed_runtime, json[QString("elapsedRuntime")]);
    m_elapsed_runtime_isSet = !json[QString("elapsedRuntime")].isNull() && m_elapsed_runtime_isValid;

    m_finished_isValid = ::OpenAPI::fromJsonValue(m_finished, json[QString("finished")]);
    m_finished_isSet = !json[QString("finished")].isNull() && m_finished_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_last_update_isValid = ::OpenAPI::fromJsonValue(m_last_update, json[QString("lastUpdate")]);
    m_last_update_isSet = !json[QString("lastUpdate")].isNull() && m_last_update_isValid;

    m_message_isValid = ::OpenAPI::fromJsonValue(m_message, json[QString("message")]);
    m_message_isSet = !json[QString("message")].isNull() && m_message_isValid;

    m_progress_isValid = ::OpenAPI::fromJsonValue(m_progress, json[QString("progress")]);
    m_progress_isSet = !json[QString("progress")].isNull() && m_progress_isValid;

    m_result_isValid = ::OpenAPI::fromJsonValue(m_result, json[QString("result")]);
    m_result_isSet = !json[QString("result")].isNull() && m_result_isValid;

    m_self_isValid = ::OpenAPI::fromJsonValue(m_self, json[QString("self")]);
    m_self_isSet = !json[QString("self")].isNull() && m_self_isValid;

    m_started_isValid = ::OpenAPI::fromJsonValue(m_started, json[QString("started")]);
    m_started_isSet = !json[QString("started")].isNull() && m_started_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_submitted_isValid = ::OpenAPI::fromJsonValue(m_submitted, json[QString("submitted")]);
    m_submitted_isSet = !json[QString("submitted")].isNull() && m_submitted_isValid;

    m_submitted_by_isValid = ::OpenAPI::fromJsonValue(m_submitted_by, json[QString("submittedBy")]);
    m_submitted_by_isSet = !json[QString("submittedBy")].isNull() && m_submitted_by_isValid;
}

QString OAITaskProgressBeanObject::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITaskProgressBeanObject::asJsonObject() const {
    QJsonObject obj;
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_elapsed_runtime_isSet) {
        obj.insert(QString("elapsedRuntime"), ::OpenAPI::toJsonValue(m_elapsed_runtime));
    }
    if (m_finished_isSet) {
        obj.insert(QString("finished"), ::OpenAPI::toJsonValue(m_finished));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_last_update_isSet) {
        obj.insert(QString("lastUpdate"), ::OpenAPI::toJsonValue(m_last_update));
    }
    if (m_message_isSet) {
        obj.insert(QString("message"), ::OpenAPI::toJsonValue(m_message));
    }
    if (m_progress_isSet) {
        obj.insert(QString("progress"), ::OpenAPI::toJsonValue(m_progress));
    }
    if (m_result_isSet) {
        obj.insert(QString("result"), ::OpenAPI::toJsonValue(m_result));
    }
    if (m_self_isSet) {
        obj.insert(QString("self"), ::OpenAPI::toJsonValue(m_self));
    }
    if (m_started_isSet) {
        obj.insert(QString("started"), ::OpenAPI::toJsonValue(m_started));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_submitted_isSet) {
        obj.insert(QString("submitted"), ::OpenAPI::toJsonValue(m_submitted));
    }
    if (m_submitted_by_isSet) {
        obj.insert(QString("submittedBy"), ::OpenAPI::toJsonValue(m_submitted_by));
    }
    return obj;
}

QString OAITaskProgressBeanObject::getDescription() const {
    return m_description;
}
void OAITaskProgressBeanObject::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAITaskProgressBeanObject::is_description_Set() const{
    return m_description_isSet;
}

bool OAITaskProgressBeanObject::is_description_Valid() const{
    return m_description_isValid;
}

qint64 OAITaskProgressBeanObject::getElapsedRuntime() const {
    return m_elapsed_runtime;
}
void OAITaskProgressBeanObject::setElapsedRuntime(const qint64 &elapsed_runtime) {
    m_elapsed_runtime = elapsed_runtime;
    m_elapsed_runtime_isSet = true;
}

bool OAITaskProgressBeanObject::is_elapsed_runtime_Set() const{
    return m_elapsed_runtime_isSet;
}

bool OAITaskProgressBeanObject::is_elapsed_runtime_Valid() const{
    return m_elapsed_runtime_isValid;
}

qint64 OAITaskProgressBeanObject::getFinished() const {
    return m_finished;
}
void OAITaskProgressBeanObject::setFinished(const qint64 &finished) {
    m_finished = finished;
    m_finished_isSet = true;
}

bool OAITaskProgressBeanObject::is_finished_Set() const{
    return m_finished_isSet;
}

bool OAITaskProgressBeanObject::is_finished_Valid() const{
    return m_finished_isValid;
}

QString OAITaskProgressBeanObject::getId() const {
    return m_id;
}
void OAITaskProgressBeanObject::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAITaskProgressBeanObject::is_id_Set() const{
    return m_id_isSet;
}

bool OAITaskProgressBeanObject::is_id_Valid() const{
    return m_id_isValid;
}

qint64 OAITaskProgressBeanObject::getLastUpdate() const {
    return m_last_update;
}
void OAITaskProgressBeanObject::setLastUpdate(const qint64 &last_update) {
    m_last_update = last_update;
    m_last_update_isSet = true;
}

bool OAITaskProgressBeanObject::is_last_update_Set() const{
    return m_last_update_isSet;
}

bool OAITaskProgressBeanObject::is_last_update_Valid() const{
    return m_last_update_isValid;
}

QString OAITaskProgressBeanObject::getMessage() const {
    return m_message;
}
void OAITaskProgressBeanObject::setMessage(const QString &message) {
    m_message = message;
    m_message_isSet = true;
}

bool OAITaskProgressBeanObject::is_message_Set() const{
    return m_message_isSet;
}

bool OAITaskProgressBeanObject::is_message_Valid() const{
    return m_message_isValid;
}

qint64 OAITaskProgressBeanObject::getProgress() const {
    return m_progress;
}
void OAITaskProgressBeanObject::setProgress(const qint64 &progress) {
    m_progress = progress;
    m_progress_isSet = true;
}

bool OAITaskProgressBeanObject::is_progress_Set() const{
    return m_progress_isSet;
}

bool OAITaskProgressBeanObject::is_progress_Valid() const{
    return m_progress_isValid;
}

QJsonValue OAITaskProgressBeanObject::getResult() const {
    return m_result;
}
void OAITaskProgressBeanObject::setResult(const QJsonValue &result) {
    m_result = result;
    m_result_isSet = true;
}

bool OAITaskProgressBeanObject::is_result_Set() const{
    return m_result_isSet;
}

bool OAITaskProgressBeanObject::is_result_Valid() const{
    return m_result_isValid;
}

QString OAITaskProgressBeanObject::getSelf() const {
    return m_self;
}
void OAITaskProgressBeanObject::setSelf(const QString &self) {
    m_self = self;
    m_self_isSet = true;
}

bool OAITaskProgressBeanObject::is_self_Set() const{
    return m_self_isSet;
}

bool OAITaskProgressBeanObject::is_self_Valid() const{
    return m_self_isValid;
}

qint64 OAITaskProgressBeanObject::getStarted() const {
    return m_started;
}
void OAITaskProgressBeanObject::setStarted(const qint64 &started) {
    m_started = started;
    m_started_isSet = true;
}

bool OAITaskProgressBeanObject::is_started_Set() const{
    return m_started_isSet;
}

bool OAITaskProgressBeanObject::is_started_Valid() const{
    return m_started_isValid;
}

QString OAITaskProgressBeanObject::getStatus() const {
    return m_status;
}
void OAITaskProgressBeanObject::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAITaskProgressBeanObject::is_status_Set() const{
    return m_status_isSet;
}

bool OAITaskProgressBeanObject::is_status_Valid() const{
    return m_status_isValid;
}

qint64 OAITaskProgressBeanObject::getSubmitted() const {
    return m_submitted;
}
void OAITaskProgressBeanObject::setSubmitted(const qint64 &submitted) {
    m_submitted = submitted;
    m_submitted_isSet = true;
}

bool OAITaskProgressBeanObject::is_submitted_Set() const{
    return m_submitted_isSet;
}

bool OAITaskProgressBeanObject::is_submitted_Valid() const{
    return m_submitted_isValid;
}

qint64 OAITaskProgressBeanObject::getSubmittedBy() const {
    return m_submitted_by;
}
void OAITaskProgressBeanObject::setSubmittedBy(const qint64 &submitted_by) {
    m_submitted_by = submitted_by;
    m_submitted_by_isSet = true;
}

bool OAITaskProgressBeanObject::is_submitted_by_Set() const{
    return m_submitted_by_isSet;
}

bool OAITaskProgressBeanObject::is_submitted_by_Valid() const{
    return m_submitted_by_isValid;
}

bool OAITaskProgressBeanObject::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_elapsed_runtime_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_finished_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_update_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_message_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_progress_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_result_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_self_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_started_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_submitted_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_submitted_by_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITaskProgressBeanObject::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_elapsed_runtime_isValid && m_id_isValid && m_last_update_isValid && m_progress_isValid && m_self_isValid && m_status_isValid && m_submitted_isValid && m_submitted_by_isValid && true;
}

} // namespace OpenAPI
