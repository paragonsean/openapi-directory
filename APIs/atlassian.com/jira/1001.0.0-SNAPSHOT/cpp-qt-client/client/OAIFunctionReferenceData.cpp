/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFunctionReferenceData.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFunctionReferenceData::OAIFunctionReferenceData(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFunctionReferenceData::OAIFunctionReferenceData() {
    this->initializeModel();
}

OAIFunctionReferenceData::~OAIFunctionReferenceData() {}

void OAIFunctionReferenceData::initializeModel() {

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_is_list_isSet = false;
    m_is_list_isValid = false;

    m_types_isSet = false;
    m_types_isValid = false;

    m_value_isSet = false;
    m_value_isValid = false;
}

void OAIFunctionReferenceData::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFunctionReferenceData::fromJsonObject(QJsonObject json) {

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_is_list_isValid = ::OpenAPI::fromJsonValue(m_is_list, json[QString("isList")]);
    m_is_list_isSet = !json[QString("isList")].isNull() && m_is_list_isValid;

    m_types_isValid = ::OpenAPI::fromJsonValue(m_types, json[QString("types")]);
    m_types_isSet = !json[QString("types")].isNull() && m_types_isValid;

    m_value_isValid = ::OpenAPI::fromJsonValue(m_value, json[QString("value")]);
    m_value_isSet = !json[QString("value")].isNull() && m_value_isValid;
}

QString OAIFunctionReferenceData::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFunctionReferenceData::asJsonObject() const {
    QJsonObject obj;
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_is_list_isSet) {
        obj.insert(QString("isList"), ::OpenAPI::toJsonValue(m_is_list));
    }
    if (m_types.size() > 0) {
        obj.insert(QString("types"), ::OpenAPI::toJsonValue(m_types));
    }
    if (m_value_isSet) {
        obj.insert(QString("value"), ::OpenAPI::toJsonValue(m_value));
    }
    return obj;
}

QString OAIFunctionReferenceData::getDisplayName() const {
    return m_display_name;
}
void OAIFunctionReferenceData::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIFunctionReferenceData::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIFunctionReferenceData::is_display_name_Valid() const{
    return m_display_name_isValid;
}

QString OAIFunctionReferenceData::getIsList() const {
    return m_is_list;
}
void OAIFunctionReferenceData::setIsList(const QString &is_list) {
    m_is_list = is_list;
    m_is_list_isSet = true;
}

bool OAIFunctionReferenceData::is_is_list_Set() const{
    return m_is_list_isSet;
}

bool OAIFunctionReferenceData::is_is_list_Valid() const{
    return m_is_list_isValid;
}

QList<QString> OAIFunctionReferenceData::getTypes() const {
    return m_types;
}
void OAIFunctionReferenceData::setTypes(const QList<QString> &types) {
    m_types = types;
    m_types_isSet = true;
}

bool OAIFunctionReferenceData::is_types_Set() const{
    return m_types_isSet;
}

bool OAIFunctionReferenceData::is_types_Valid() const{
    return m_types_isValid;
}

QString OAIFunctionReferenceData::getValue() const {
    return m_value;
}
void OAIFunctionReferenceData::setValue(const QString &value) {
    m_value = value;
    m_value_isSet = true;
}

bool OAIFunctionReferenceData::is_value_Set() const{
    return m_value_isSet;
}

bool OAIFunctionReferenceData::is_value_Valid() const{
    return m_value_isValid;
}

bool OAIFunctionReferenceData::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_list_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_types.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_value_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFunctionReferenceData::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
