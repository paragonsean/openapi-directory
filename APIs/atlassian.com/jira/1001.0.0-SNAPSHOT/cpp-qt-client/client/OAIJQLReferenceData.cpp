/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIJQLReferenceData.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIJQLReferenceData::OAIJQLReferenceData(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIJQLReferenceData::OAIJQLReferenceData() {
    this->initializeModel();
}

OAIJQLReferenceData::~OAIJQLReferenceData() {}

void OAIJQLReferenceData::initializeModel() {

    m_jql_reserved_words_isSet = false;
    m_jql_reserved_words_isValid = false;

    m_visible_field_names_isSet = false;
    m_visible_field_names_isValid = false;

    m_visible_function_names_isSet = false;
    m_visible_function_names_isValid = false;
}

void OAIJQLReferenceData::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIJQLReferenceData::fromJsonObject(QJsonObject json) {

    m_jql_reserved_words_isValid = ::OpenAPI::fromJsonValue(m_jql_reserved_words, json[QString("jqlReservedWords")]);
    m_jql_reserved_words_isSet = !json[QString("jqlReservedWords")].isNull() && m_jql_reserved_words_isValid;

    m_visible_field_names_isValid = ::OpenAPI::fromJsonValue(m_visible_field_names, json[QString("visibleFieldNames")]);
    m_visible_field_names_isSet = !json[QString("visibleFieldNames")].isNull() && m_visible_field_names_isValid;

    m_visible_function_names_isValid = ::OpenAPI::fromJsonValue(m_visible_function_names, json[QString("visibleFunctionNames")]);
    m_visible_function_names_isSet = !json[QString("visibleFunctionNames")].isNull() && m_visible_function_names_isValid;
}

QString OAIJQLReferenceData::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIJQLReferenceData::asJsonObject() const {
    QJsonObject obj;
    if (m_jql_reserved_words.size() > 0) {
        obj.insert(QString("jqlReservedWords"), ::OpenAPI::toJsonValue(m_jql_reserved_words));
    }
    if (m_visible_field_names.size() > 0) {
        obj.insert(QString("visibleFieldNames"), ::OpenAPI::toJsonValue(m_visible_field_names));
    }
    if (m_visible_function_names.size() > 0) {
        obj.insert(QString("visibleFunctionNames"), ::OpenAPI::toJsonValue(m_visible_function_names));
    }
    return obj;
}

QList<QString> OAIJQLReferenceData::getJqlReservedWords() const {
    return m_jql_reserved_words;
}
void OAIJQLReferenceData::setJqlReservedWords(const QList<QString> &jql_reserved_words) {
    m_jql_reserved_words = jql_reserved_words;
    m_jql_reserved_words_isSet = true;
}

bool OAIJQLReferenceData::is_jql_reserved_words_Set() const{
    return m_jql_reserved_words_isSet;
}

bool OAIJQLReferenceData::is_jql_reserved_words_Valid() const{
    return m_jql_reserved_words_isValid;
}

QList<OAIFieldReferenceData> OAIJQLReferenceData::getVisibleFieldNames() const {
    return m_visible_field_names;
}
void OAIJQLReferenceData::setVisibleFieldNames(const QList<OAIFieldReferenceData> &visible_field_names) {
    m_visible_field_names = visible_field_names;
    m_visible_field_names_isSet = true;
}

bool OAIJQLReferenceData::is_visible_field_names_Set() const{
    return m_visible_field_names_isSet;
}

bool OAIJQLReferenceData::is_visible_field_names_Valid() const{
    return m_visible_field_names_isValid;
}

QList<OAIFunctionReferenceData> OAIJQLReferenceData::getVisibleFunctionNames() const {
    return m_visible_function_names;
}
void OAIJQLReferenceData::setVisibleFunctionNames(const QList<OAIFunctionReferenceData> &visible_function_names) {
    m_visible_function_names = visible_function_names;
    m_visible_function_names_isSet = true;
}

bool OAIJQLReferenceData::is_visible_function_names_Set() const{
    return m_visible_function_names_isSet;
}

bool OAIJQLReferenceData::is_visible_function_names_Valid() const{
    return m_visible_function_names_isValid;
}

bool OAIJQLReferenceData::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_jql_reserved_words.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_visible_field_names.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_visible_function_names.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIJQLReferenceData::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
