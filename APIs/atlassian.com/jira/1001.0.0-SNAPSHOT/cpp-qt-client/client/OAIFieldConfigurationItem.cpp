/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFieldConfigurationItem.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFieldConfigurationItem::OAIFieldConfigurationItem(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFieldConfigurationItem::OAIFieldConfigurationItem() {
    this->initializeModel();
}

OAIFieldConfigurationItem::~OAIFieldConfigurationItem() {}

void OAIFieldConfigurationItem::initializeModel() {

    m_description_isSet = false;
    m_description_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_is_hidden_isSet = false;
    m_is_hidden_isValid = false;

    m_is_required_isSet = false;
    m_is_required_isValid = false;

    m_renderer_isSet = false;
    m_renderer_isValid = false;
}

void OAIFieldConfigurationItem::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFieldConfigurationItem::fromJsonObject(QJsonObject json) {

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_is_hidden_isValid = ::OpenAPI::fromJsonValue(m_is_hidden, json[QString("isHidden")]);
    m_is_hidden_isSet = !json[QString("isHidden")].isNull() && m_is_hidden_isValid;

    m_is_required_isValid = ::OpenAPI::fromJsonValue(m_is_required, json[QString("isRequired")]);
    m_is_required_isSet = !json[QString("isRequired")].isNull() && m_is_required_isValid;

    m_renderer_isValid = ::OpenAPI::fromJsonValue(m_renderer, json[QString("renderer")]);
    m_renderer_isSet = !json[QString("renderer")].isNull() && m_renderer_isValid;
}

QString OAIFieldConfigurationItem::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFieldConfigurationItem::asJsonObject() const {
    QJsonObject obj;
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_is_hidden_isSet) {
        obj.insert(QString("isHidden"), ::OpenAPI::toJsonValue(m_is_hidden));
    }
    if (m_is_required_isSet) {
        obj.insert(QString("isRequired"), ::OpenAPI::toJsonValue(m_is_required));
    }
    if (m_renderer_isSet) {
        obj.insert(QString("renderer"), ::OpenAPI::toJsonValue(m_renderer));
    }
    return obj;
}

QString OAIFieldConfigurationItem::getDescription() const {
    return m_description;
}
void OAIFieldConfigurationItem::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIFieldConfigurationItem::is_description_Set() const{
    return m_description_isSet;
}

bool OAIFieldConfigurationItem::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIFieldConfigurationItem::getId() const {
    return m_id;
}
void OAIFieldConfigurationItem::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIFieldConfigurationItem::is_id_Set() const{
    return m_id_isSet;
}

bool OAIFieldConfigurationItem::is_id_Valid() const{
    return m_id_isValid;
}

bool OAIFieldConfigurationItem::isIsHidden() const {
    return m_is_hidden;
}
void OAIFieldConfigurationItem::setIsHidden(const bool &is_hidden) {
    m_is_hidden = is_hidden;
    m_is_hidden_isSet = true;
}

bool OAIFieldConfigurationItem::is_is_hidden_Set() const{
    return m_is_hidden_isSet;
}

bool OAIFieldConfigurationItem::is_is_hidden_Valid() const{
    return m_is_hidden_isValid;
}

bool OAIFieldConfigurationItem::isIsRequired() const {
    return m_is_required;
}
void OAIFieldConfigurationItem::setIsRequired(const bool &is_required) {
    m_is_required = is_required;
    m_is_required_isSet = true;
}

bool OAIFieldConfigurationItem::is_is_required_Set() const{
    return m_is_required_isSet;
}

bool OAIFieldConfigurationItem::is_is_required_Valid() const{
    return m_is_required_isValid;
}

QString OAIFieldConfigurationItem::getRenderer() const {
    return m_renderer;
}
void OAIFieldConfigurationItem::setRenderer(const QString &renderer) {
    m_renderer = renderer;
    m_renderer_isSet = true;
}

bool OAIFieldConfigurationItem::is_renderer_Set() const{
    return m_renderer_isSet;
}

bool OAIFieldConfigurationItem::is_renderer_Valid() const{
    return m_renderer_isValid;
}

bool OAIFieldConfigurationItem::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_hidden_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_required_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_renderer_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFieldConfigurationItem::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_id_isValid && true;
}

} // namespace OpenAPI
