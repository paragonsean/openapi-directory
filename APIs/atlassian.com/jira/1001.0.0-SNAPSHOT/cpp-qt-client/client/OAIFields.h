/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFields.h
 *
 * Key fields from the linked issue.
 */

#ifndef OAIFields_H
#define OAIFields_H

#include <QJsonObject>

#include "OAIIssueTypeDetails.h"
#include "OAIPriority.h"
#include "OAIStatusDetails.h"
#include "OAITimeTrackingDetails.h"
#include "OAIUserDetails.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUserDetails;
class OAIIssueTypeDetails;
class OAITimeTrackingDetails;

class OAIFields : public OAIObject {
public:
    OAIFields();
    OAIFields(QString json);
    ~OAIFields() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIUserDetails getAssignee() const;
    void setAssignee(const OAIUserDetails &assignee);
    bool is_assignee_Set() const;
    bool is_assignee_Valid() const;

    OAIIssueTypeDetails getIssueType() const;
    void setIssueType(const OAIIssueTypeDetails &issue_type);
    bool is_issue_type_Set() const;
    bool is_issue_type_Valid() const;

    OAIIssueTypeDetails getIssuetype() const;
    void setIssuetype(const OAIIssueTypeDetails &issuetype);
    bool is_issuetype_Set() const;
    bool is_issuetype_Valid() const;

    OAIPriority getPriority() const;
    void setPriority(const OAIPriority &priority);
    bool is_priority_Set() const;
    bool is_priority_Valid() const;

    OAIStatusDetails getStatus() const;
    void setStatus(const OAIStatusDetails &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getSummary() const;
    void setSummary(const QString &summary);
    bool is_summary_Set() const;
    bool is_summary_Valid() const;

    OAITimeTrackingDetails getTimetracking() const;
    void setTimetracking(const OAITimeTrackingDetails &timetracking);
    bool is_timetracking_Set() const;
    bool is_timetracking_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIUserDetails m_assignee;
    bool m_assignee_isSet;
    bool m_assignee_isValid;

    OAIIssueTypeDetails m_issue_type;
    bool m_issue_type_isSet;
    bool m_issue_type_isValid;

    OAIIssueTypeDetails m_issuetype;
    bool m_issuetype_isSet;
    bool m_issuetype_isValid;

    OAIPriority m_priority;
    bool m_priority_isSet;
    bool m_priority_isValid;

    OAIStatusDetails m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_summary;
    bool m_summary_isSet;
    bool m_summary_isValid;

    OAITimeTrackingDetails m_timetracking;
    bool m_timetracking_isSet;
    bool m_timetracking_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFields)

#endif // OAIFields_H
