/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIJqlQueryClause.h
 *
 * A JQL query clause.
 */

#ifndef OAIJqlQueryClause_H
#define OAIJqlQueryClause_H

#include <QJsonObject>

#include "OAICompoundClause.h"
#include "OAIFieldChangedClause.h"
#include "OAIFieldValueClause.h"
#include "OAIFieldWasClause.h"
#include "OAIJqlQueryClauseOperand.h"
#include "OAIJqlQueryClauseTimePredicate.h"
#include "OAIJqlQueryField.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIJqlQueryField;
class OAIJqlQueryClauseOperand;
class OAIJqlQueryClauseTimePredicate;

class OAIJqlQueryClause : public OAIObject {
public:
    OAIJqlQueryClause();
    OAIJqlQueryClause(QString json);
    ~OAIJqlQueryClause() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIJqlQueryClause> getClauses() const;
    void setClauses(const QList<OAIJqlQueryClause> &clauses);
    bool is_clauses_Set() const;
    bool is_clauses_Valid() const;

    QString getROperator() const;
    void setROperator(const QString &r_operator);
    bool is_r_operator_Set() const;
    bool is_r_operator_Valid() const;

    OAIJqlQueryField getField() const;
    void setField(const OAIJqlQueryField &field);
    bool is_field_Set() const;
    bool is_field_Valid() const;

    OAIJqlQueryClauseOperand getOperand() const;
    void setOperand(const OAIJqlQueryClauseOperand &operand);
    bool is_operand_Set() const;
    bool is_operand_Valid() const;

    QList<OAIJqlQueryClauseTimePredicate> getPredicates() const;
    void setPredicates(const QList<OAIJqlQueryClauseTimePredicate> &predicates);
    bool is_predicates_Set() const;
    bool is_predicates_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIJqlQueryClause> m_clauses;
    bool m_clauses_isSet;
    bool m_clauses_isValid;

    QString m_r_operator;
    bool m_r_operator_isSet;
    bool m_r_operator_isValid;

    OAIJqlQueryField m_field;
    bool m_field_isSet;
    bool m_field_isValid;

    OAIJqlQueryClauseOperand m_operand;
    bool m_operand_isSet;
    bool m_operand_isValid;

    QList<OAIJqlQueryClauseTimePredicate> m_predicates;
    bool m_predicates_isSet;
    bool m_predicates_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIJqlQueryClause)

#endif // OAIJqlQueryClause_H
