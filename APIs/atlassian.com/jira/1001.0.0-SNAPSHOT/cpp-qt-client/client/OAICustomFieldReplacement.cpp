/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICustomFieldReplacement.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICustomFieldReplacement::OAICustomFieldReplacement(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICustomFieldReplacement::OAICustomFieldReplacement() {
    this->initializeModel();
}

OAICustomFieldReplacement::~OAICustomFieldReplacement() {}

void OAICustomFieldReplacement::initializeModel() {

    m_custom_field_id_isSet = false;
    m_custom_field_id_isValid = false;

    m_move_to_isSet = false;
    m_move_to_isValid = false;
}

void OAICustomFieldReplacement::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICustomFieldReplacement::fromJsonObject(QJsonObject json) {

    m_custom_field_id_isValid = ::OpenAPI::fromJsonValue(m_custom_field_id, json[QString("customFieldId")]);
    m_custom_field_id_isSet = !json[QString("customFieldId")].isNull() && m_custom_field_id_isValid;

    m_move_to_isValid = ::OpenAPI::fromJsonValue(m_move_to, json[QString("moveTo")]);
    m_move_to_isSet = !json[QString("moveTo")].isNull() && m_move_to_isValid;
}

QString OAICustomFieldReplacement::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICustomFieldReplacement::asJsonObject() const {
    QJsonObject obj;
    if (m_custom_field_id_isSet) {
        obj.insert(QString("customFieldId"), ::OpenAPI::toJsonValue(m_custom_field_id));
    }
    if (m_move_to_isSet) {
        obj.insert(QString("moveTo"), ::OpenAPI::toJsonValue(m_move_to));
    }
    return obj;
}

qint64 OAICustomFieldReplacement::getCustomFieldId() const {
    return m_custom_field_id;
}
void OAICustomFieldReplacement::setCustomFieldId(const qint64 &custom_field_id) {
    m_custom_field_id = custom_field_id;
    m_custom_field_id_isSet = true;
}

bool OAICustomFieldReplacement::is_custom_field_id_Set() const{
    return m_custom_field_id_isSet;
}

bool OAICustomFieldReplacement::is_custom_field_id_Valid() const{
    return m_custom_field_id_isValid;
}

qint64 OAICustomFieldReplacement::getMoveTo() const {
    return m_move_to;
}
void OAICustomFieldReplacement::setMoveTo(const qint64 &move_to) {
    m_move_to = move_to;
    m_move_to_isSet = true;
}

bool OAICustomFieldReplacement::is_move_to_Set() const{
    return m_move_to_isSet;
}

bool OAICustomFieldReplacement::is_move_to_Valid() const{
    return m_move_to_isValid;
}

bool OAICustomFieldReplacement::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_custom_field_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_move_to_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICustomFieldReplacement::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
