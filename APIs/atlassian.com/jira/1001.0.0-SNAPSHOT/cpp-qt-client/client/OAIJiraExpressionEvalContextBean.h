/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIJiraExpressionEvalContextBean.h
 *
 * 
 */

#ifndef OAIJiraExpressionEvalContextBean_H
#define OAIJiraExpressionEvalContextBean_H

#include <QJsonObject>

#include "OAICustomContextVariable.h"
#include "OAIIdOrKeyBean.h"
#include "OAIJexpIssues.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICustomContextVariable;
class OAIIdOrKeyBean;
class OAIJexpIssues;

class OAIJiraExpressionEvalContextBean : public OAIObject {
public:
    OAIJiraExpressionEvalContextBean();
    OAIJiraExpressionEvalContextBean(QString json);
    ~OAIJiraExpressionEvalContextBean() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint64 getBoard() const;
    void setBoard(const qint64 &board);
    bool is_board_Set() const;
    bool is_board_Valid() const;

    QList<OAICustomContextVariable> getCustom() const;
    void setCustom(const QList<OAICustomContextVariable> &custom);
    bool is_custom_Set() const;
    bool is_custom_Valid() const;

    qint64 getCustomerRequest() const;
    void setCustomerRequest(const qint64 &customer_request);
    bool is_customer_request_Set() const;
    bool is_customer_request_Valid() const;

    OAIIdOrKeyBean getIssue() const;
    void setIssue(const OAIIdOrKeyBean &issue);
    bool is_issue_Set() const;
    bool is_issue_Valid() const;

    OAIJexpIssues getIssues() const;
    void setIssues(const OAIJexpIssues &issues);
    bool is_issues_Set() const;
    bool is_issues_Valid() const;

    OAIIdOrKeyBean getProject() const;
    void setProject(const OAIIdOrKeyBean &project);
    bool is_project_Set() const;
    bool is_project_Valid() const;

    qint64 getServiceDesk() const;
    void setServiceDesk(const qint64 &service_desk);
    bool is_service_desk_Set() const;
    bool is_service_desk_Valid() const;

    qint64 getSprint() const;
    void setSprint(const qint64 &sprint);
    bool is_sprint_Set() const;
    bool is_sprint_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint64 m_board;
    bool m_board_isSet;
    bool m_board_isValid;

    QList<OAICustomContextVariable> m_custom;
    bool m_custom_isSet;
    bool m_custom_isValid;

    qint64 m_customer_request;
    bool m_customer_request_isSet;
    bool m_customer_request_isValid;

    OAIIdOrKeyBean m_issue;
    bool m_issue_isSet;
    bool m_issue_isValid;

    OAIJexpIssues m_issues;
    bool m_issues_isSet;
    bool m_issues_isValid;

    OAIIdOrKeyBean m_project;
    bool m_project_isSet;
    bool m_project_isValid;

    qint64 m_service_desk;
    bool m_service_desk_isSet;
    bool m_service_desk_isValid;

    qint64 m_sprint;
    bool m_sprint_isSet;
    bool m_sprint_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIJiraExpressionEvalContextBean)

#endif // OAIJiraExpressionEvalContextBean_H
