/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIIssueFieldOptionCreateBean.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIIssueFieldOptionCreateBean::OAIIssueFieldOptionCreateBean(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIIssueFieldOptionCreateBean::OAIIssueFieldOptionCreateBean() {
    this->initializeModel();
}

OAIIssueFieldOptionCreateBean::~OAIIssueFieldOptionCreateBean() {}

void OAIIssueFieldOptionCreateBean::initializeModel() {

    m_config_isSet = false;
    m_config_isValid = false;

    m_properties_isSet = false;
    m_properties_isValid = false;

    m_value_isSet = false;
    m_value_isValid = false;
}

void OAIIssueFieldOptionCreateBean::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIIssueFieldOptionCreateBean::fromJsonObject(QJsonObject json) {

    m_config_isValid = ::OpenAPI::fromJsonValue(m_config, json[QString("config")]);
    m_config_isSet = !json[QString("config")].isNull() && m_config_isValid;

    m_properties_isValid = ::OpenAPI::fromJsonValue(m_properties, json[QString("properties")]);
    m_properties_isSet = !json[QString("properties")].isNull() && m_properties_isValid;

    m_value_isValid = ::OpenAPI::fromJsonValue(m_value, json[QString("value")]);
    m_value_isSet = !json[QString("value")].isNull() && m_value_isValid;
}

QString OAIIssueFieldOptionCreateBean::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIIssueFieldOptionCreateBean::asJsonObject() const {
    QJsonObject obj;
    if (m_config.isSet()) {
        obj.insert(QString("config"), ::OpenAPI::toJsonValue(m_config));
    }
    if (m_properties.size() > 0) {
        obj.insert(QString("properties"), ::OpenAPI::toJsonValue(m_properties));
    }
    if (m_value_isSet) {
        obj.insert(QString("value"), ::OpenAPI::toJsonValue(m_value));
    }
    return obj;
}

OAIIssueFieldOptionConfiguration OAIIssueFieldOptionCreateBean::getConfig() const {
    return m_config;
}
void OAIIssueFieldOptionCreateBean::setConfig(const OAIIssueFieldOptionConfiguration &config) {
    m_config = config;
    m_config_isSet = true;
}

bool OAIIssueFieldOptionCreateBean::is_config_Set() const{
    return m_config_isSet;
}

bool OAIIssueFieldOptionCreateBean::is_config_Valid() const{
    return m_config_isValid;
}

QMap<QString, QJsonValue> OAIIssueFieldOptionCreateBean::getProperties() const {
    return m_properties;
}
void OAIIssueFieldOptionCreateBean::setProperties(const QMap<QString, QJsonValue> &properties) {
    m_properties = properties;
    m_properties_isSet = true;
}

bool OAIIssueFieldOptionCreateBean::is_properties_Set() const{
    return m_properties_isSet;
}

bool OAIIssueFieldOptionCreateBean::is_properties_Valid() const{
    return m_properties_isValid;
}

QString OAIIssueFieldOptionCreateBean::getValue() const {
    return m_value;
}
void OAIIssueFieldOptionCreateBean::setValue(const QString &value) {
    m_value = value;
    m_value_isSet = true;
}

bool OAIIssueFieldOptionCreateBean::is_value_Set() const{
    return m_value_isSet;
}

bool OAIIssueFieldOptionCreateBean::is_value_Valid() const{
    return m_value_isValid;
}

bool OAIIssueFieldOptionCreateBean::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_properties.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_value_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIIssueFieldOptionCreateBean::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid && true;
}

} // namespace OpenAPI
