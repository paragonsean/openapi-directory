/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProjectInsight.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProjectInsight::OAIProjectInsight(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProjectInsight::OAIProjectInsight() {
    this->initializeModel();
}

OAIProjectInsight::~OAIProjectInsight() {}

void OAIProjectInsight::initializeModel() {

    m_last_issue_update_time_isSet = false;
    m_last_issue_update_time_isValid = false;

    m_total_issue_count_isSet = false;
    m_total_issue_count_isValid = false;
}

void OAIProjectInsight::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIProjectInsight::fromJsonObject(QJsonObject json) {

    m_last_issue_update_time_isValid = ::OpenAPI::fromJsonValue(m_last_issue_update_time, json[QString("lastIssueUpdateTime")]);
    m_last_issue_update_time_isSet = !json[QString("lastIssueUpdateTime")].isNull() && m_last_issue_update_time_isValid;

    m_total_issue_count_isValid = ::OpenAPI::fromJsonValue(m_total_issue_count, json[QString("totalIssueCount")]);
    m_total_issue_count_isSet = !json[QString("totalIssueCount")].isNull() && m_total_issue_count_isValid;
}

QString OAIProjectInsight::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIProjectInsight::asJsonObject() const {
    QJsonObject obj;
    if (m_last_issue_update_time_isSet) {
        obj.insert(QString("lastIssueUpdateTime"), ::OpenAPI::toJsonValue(m_last_issue_update_time));
    }
    if (m_total_issue_count_isSet) {
        obj.insert(QString("totalIssueCount"), ::OpenAPI::toJsonValue(m_total_issue_count));
    }
    return obj;
}

QDateTime OAIProjectInsight::getLastIssueUpdateTime() const {
    return m_last_issue_update_time;
}
void OAIProjectInsight::setLastIssueUpdateTime(const QDateTime &last_issue_update_time) {
    m_last_issue_update_time = last_issue_update_time;
    m_last_issue_update_time_isSet = true;
}

bool OAIProjectInsight::is_last_issue_update_time_Set() const{
    return m_last_issue_update_time_isSet;
}

bool OAIProjectInsight::is_last_issue_update_time_Valid() const{
    return m_last_issue_update_time_isValid;
}

qint64 OAIProjectInsight::getTotalIssueCount() const {
    return m_total_issue_count;
}
void OAIProjectInsight::setTotalIssueCount(const qint64 &total_issue_count) {
    m_total_issue_count = total_issue_count;
    m_total_issue_count_isSet = true;
}

bool OAIProjectInsight::is_total_issue_count_Set() const{
    return m_total_issue_count_isSet;
}

bool OAIProjectInsight::is_total_issue_count_Valid() const{
    return m_total_issue_count_isValid;
}

bool OAIProjectInsight::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_last_issue_update_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_issue_count_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIProjectInsight::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
