/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIServiceManagementNavigationInfo.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIServiceManagementNavigationInfo::OAIServiceManagementNavigationInfo(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIServiceManagementNavigationInfo::OAIServiceManagementNavigationInfo() {
    this->initializeModel();
}

OAIServiceManagementNavigationInfo::~OAIServiceManagementNavigationInfo() {}

void OAIServiceManagementNavigationInfo::initializeModel() {

    m_queue_category_isSet = false;
    m_queue_category_isValid = false;

    m_queue_id_isSet = false;
    m_queue_id_isValid = false;

    m_queue_name_isSet = false;
    m_queue_name_isValid = false;
}

void OAIServiceManagementNavigationInfo::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIServiceManagementNavigationInfo::fromJsonObject(QJsonObject json) {

    m_queue_category_isValid = ::OpenAPI::fromJsonValue(m_queue_category, json[QString("queueCategory")]);
    m_queue_category_isSet = !json[QString("queueCategory")].isNull() && m_queue_category_isValid;

    m_queue_id_isValid = ::OpenAPI::fromJsonValue(m_queue_id, json[QString("queueId")]);
    m_queue_id_isSet = !json[QString("queueId")].isNull() && m_queue_id_isValid;

    m_queue_name_isValid = ::OpenAPI::fromJsonValue(m_queue_name, json[QString("queueName")]);
    m_queue_name_isSet = !json[QString("queueName")].isNull() && m_queue_name_isValid;
}

QString OAIServiceManagementNavigationInfo::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIServiceManagementNavigationInfo::asJsonObject() const {
    QJsonObject obj;
    if (m_queue_category_isSet) {
        obj.insert(QString("queueCategory"), ::OpenAPI::toJsonValue(m_queue_category));
    }
    if (m_queue_id_isSet) {
        obj.insert(QString("queueId"), ::OpenAPI::toJsonValue(m_queue_id));
    }
    if (m_queue_name_isSet) {
        obj.insert(QString("queueName"), ::OpenAPI::toJsonValue(m_queue_name));
    }
    return obj;
}

QString OAIServiceManagementNavigationInfo::getQueueCategory() const {
    return m_queue_category;
}
void OAIServiceManagementNavigationInfo::setQueueCategory(const QString &queue_category) {
    m_queue_category = queue_category;
    m_queue_category_isSet = true;
}

bool OAIServiceManagementNavigationInfo::is_queue_category_Set() const{
    return m_queue_category_isSet;
}

bool OAIServiceManagementNavigationInfo::is_queue_category_Valid() const{
    return m_queue_category_isValid;
}

qint64 OAIServiceManagementNavigationInfo::getQueueId() const {
    return m_queue_id;
}
void OAIServiceManagementNavigationInfo::setQueueId(const qint64 &queue_id) {
    m_queue_id = queue_id;
    m_queue_id_isSet = true;
}

bool OAIServiceManagementNavigationInfo::is_queue_id_Set() const{
    return m_queue_id_isSet;
}

bool OAIServiceManagementNavigationInfo::is_queue_id_Valid() const{
    return m_queue_id_isValid;
}

QString OAIServiceManagementNavigationInfo::getQueueName() const {
    return m_queue_name;
}
void OAIServiceManagementNavigationInfo::setQueueName(const QString &queue_name) {
    m_queue_name = queue_name;
    m_queue_name_isSet = true;
}

bool OAIServiceManagementNavigationInfo::is_queue_name_Set() const{
    return m_queue_name_isSet;
}

bool OAIServiceManagementNavigationInfo::is_queue_name_Valid() const{
    return m_queue_name_isValid;
}

bool OAIServiceManagementNavigationInfo::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_queue_category_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_queue_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_queue_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIServiceManagementNavigationInfo::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
