/*
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.WorkflowTransitionProperty;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for WorkflowTransitionPropertiesApi
 */
@Disabled
public class WorkflowTransitionPropertiesApiTest {

    private final WorkflowTransitionPropertiesApi api = new WorkflowTransitionPropertiesApi();

    /**
     * Create workflow transition property
     *
     * Adds a property to a workflow transition. Transition properties are used to change the behavior of a transition. For more information, see [Transition properties](https://confluence.atlassian.com/x/zIhKLg#Advancedworkflowconfiguration-transitionproperties) and [Workflow properties](https://confluence.atlassian.com/x/JYlKLg).  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createWorkflowTransitionPropertyTest() throws ApiException {
        Long transitionId = null;
        String key = null;
        String workflowName = null;
        WorkflowTransitionProperty workflowTransitionProperty = null;
        String workflowMode = null;
        WorkflowTransitionProperty response = api.createWorkflowTransitionProperty(transitionId, key, workflowName, workflowTransitionProperty, workflowMode);
        // TODO: test validations
    }

    /**
     * Delete workflow transition property
     *
     * Deletes a property from a workflow transition. Transition properties are used to change the behavior of a transition. For more information, see [Transition properties](https://confluence.atlassian.com/x/zIhKLg#Advancedworkflowconfiguration-transitionproperties) and [Workflow properties](https://confluence.atlassian.com/x/JYlKLg).  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteWorkflowTransitionPropertyTest() throws ApiException {
        Long transitionId = null;
        String key = null;
        String workflowName = null;
        String workflowMode = null;
        api.deleteWorkflowTransitionProperty(transitionId, key, workflowName, workflowMode);
        // TODO: test validations
    }

    /**
     * Get workflow transition properties
     *
     * Returns the properties on a workflow transition. Transition properties are used to change the behavior of a transition. For more information, see [Transition properties](https://confluence.atlassian.com/x/zIhKLg#Advancedworkflowconfiguration-transitionproperties) and [Workflow properties](https://confluence.atlassian.com/x/JYlKLg).  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getWorkflowTransitionPropertiesTest() throws ApiException {
        Long transitionId = null;
        String workflowName = null;
        Boolean includeReservedKeys = null;
        String key = null;
        String workflowMode = null;
        WorkflowTransitionProperty response = api.getWorkflowTransitionProperties(transitionId, workflowName, includeReservedKeys, key, workflowMode);
        // TODO: test validations
    }

    /**
     * Update workflow transition property
     *
     * Updates a workflow transition by changing the property value. Trying to update a property that does not exist results in a new property being added to the transition. Transition properties are used to change the behavior of a transition. For more information, see [Transition properties](https://confluence.atlassian.com/x/zIhKLg#Advancedworkflowconfiguration-transitionproperties) and [Workflow properties](https://confluence.atlassian.com/x/JYlKLg).  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateWorkflowTransitionPropertyTest() throws ApiException {
        Long transitionId = null;
        String key = null;
        String workflowName = null;
        WorkflowTransitionProperty workflowTransitionProperty = null;
        String workflowMode = null;
        WorkflowTransitionProperty response = api.updateWorkflowTransitionProperty(transitionId, key, workflowName, workflowTransitionProperty, workflowMode);
        // TODO: test validations
    }

}
