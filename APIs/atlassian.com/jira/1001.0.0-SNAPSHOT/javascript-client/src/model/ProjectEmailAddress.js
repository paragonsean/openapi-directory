/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ProjectEmailAddress model module.
 * @module model/ProjectEmailAddress
 * @version 1001.0.0-SNAPSHOT
 */
class ProjectEmailAddress {
    /**
     * Constructs a new <code>ProjectEmailAddress</code>.
     * A project&#39;s sender email address.
     * @alias module:model/ProjectEmailAddress
     */
    constructor() { 
        
        ProjectEmailAddress.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ProjectEmailAddress</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProjectEmailAddress} obj Optional instance to populate.
     * @return {module:model/ProjectEmailAddress} The populated <code>ProjectEmailAddress</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ProjectEmailAddress();

            if (data.hasOwnProperty('emailAddress')) {
                obj['emailAddress'] = ApiClient.convertToType(data['emailAddress'], 'String');
            }
            if (data.hasOwnProperty('emailAddressStatus')) {
                obj['emailAddressStatus'] = ApiClient.convertToType(data['emailAddressStatus'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ProjectEmailAddress</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ProjectEmailAddress</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['emailAddress'] && !(typeof data['emailAddress'] === 'string' || data['emailAddress'] instanceof String)) {
            throw new Error("Expected the field `emailAddress` to be a primitive type in the JSON string but got " + data['emailAddress']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['emailAddressStatus'])) {
            throw new Error("Expected the field `emailAddressStatus` to be an array in the JSON data but got " + data['emailAddressStatus']);
        }

        return true;
    }


}



/**
 * The email address.
 * @member {String} emailAddress
 */
ProjectEmailAddress.prototype['emailAddress'] = undefined;

/**
 * When using a custom domain, the status of the email address.
 * @member {Array.<String>} emailAddressStatus
 */
ProjectEmailAddress.prototype['emailAddressStatus'] = undefined;






export default ProjectEmailAddress;

