/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The FieldUpdateOperation model module.
 * @module model/FieldUpdateOperation
 * @version 1001.0.0-SNAPSHOT
 */
class FieldUpdateOperation {
    /**
     * Constructs a new <code>FieldUpdateOperation</code>.
     * Details of an operation to perform on a field.
     * @alias module:model/FieldUpdateOperation
     */
    constructor() { 
        
        FieldUpdateOperation.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>FieldUpdateOperation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FieldUpdateOperation} obj Optional instance to populate.
     * @return {module:model/FieldUpdateOperation} The populated <code>FieldUpdateOperation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FieldUpdateOperation();

            if (data.hasOwnProperty('add')) {
                obj['add'] = ApiClient.convertToType(data['add'], Object);
            }
            if (data.hasOwnProperty('copy')) {
                obj['copy'] = ApiClient.convertToType(data['copy'], Object);
            }
            if (data.hasOwnProperty('edit')) {
                obj['edit'] = ApiClient.convertToType(data['edit'], Object);
            }
            if (data.hasOwnProperty('remove')) {
                obj['remove'] = ApiClient.convertToType(data['remove'], Object);
            }
            if (data.hasOwnProperty('set')) {
                obj['set'] = ApiClient.convertToType(data['set'], Object);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FieldUpdateOperation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FieldUpdateOperation</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * The value to add to the field.
 * @member {Object} add
 */
FieldUpdateOperation.prototype['add'] = undefined;

/**
 * The field value to copy from another issue.
 * @member {Object} copy
 */
FieldUpdateOperation.prototype['copy'] = undefined;

/**
 * The value to edit in the field.
 * @member {Object} edit
 */
FieldUpdateOperation.prototype['edit'] = undefined;

/**
 * The value to removed from the field.
 * @member {Object} remove
 */
FieldUpdateOperation.prototype['remove'] = undefined;

/**
 * The value to set in the field.
 * @member {Object} set
 */
FieldUpdateOperation.prototype['set'] = undefined;






export default FieldUpdateOperation;

