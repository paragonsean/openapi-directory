/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The IssuesJqlMetaDataBean model module.
 * @module model/IssuesJqlMetaDataBean
 * @version 1001.0.0-SNAPSHOT
 */
class IssuesJqlMetaDataBean {
    /**
     * Constructs a new <code>IssuesJqlMetaDataBean</code>.
     * The description of the page of issues loaded by the provided JQL query.
     * @alias module:model/IssuesJqlMetaDataBean
     * @param count {Number} The number of issues that were loaded in this evaluation.
     * @param maxResults {Number} The maximum number of issues that could be loaded in this evaluation.
     * @param startAt {Number} The index of the first issue.
     * @param totalCount {Number} The total number of issues the JQL returned.
     */
    constructor(count, maxResults, startAt, totalCount) { 
        
        IssuesJqlMetaDataBean.initialize(this, count, maxResults, startAt, totalCount);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, count, maxResults, startAt, totalCount) { 
        obj['count'] = count;
        obj['maxResults'] = maxResults;
        obj['startAt'] = startAt;
        obj['totalCount'] = totalCount;
    }

    /**
     * Constructs a <code>IssuesJqlMetaDataBean</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IssuesJqlMetaDataBean} obj Optional instance to populate.
     * @return {module:model/IssuesJqlMetaDataBean} The populated <code>IssuesJqlMetaDataBean</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IssuesJqlMetaDataBean();

            if (data.hasOwnProperty('count')) {
                obj['count'] = ApiClient.convertToType(data['count'], 'Number');
            }
            if (data.hasOwnProperty('maxResults')) {
                obj['maxResults'] = ApiClient.convertToType(data['maxResults'], 'Number');
            }
            if (data.hasOwnProperty('startAt')) {
                obj['startAt'] = ApiClient.convertToType(data['startAt'], 'Number');
            }
            if (data.hasOwnProperty('totalCount')) {
                obj['totalCount'] = ApiClient.convertToType(data['totalCount'], 'Number');
            }
            if (data.hasOwnProperty('validationWarnings')) {
                obj['validationWarnings'] = ApiClient.convertToType(data['validationWarnings'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IssuesJqlMetaDataBean</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IssuesJqlMetaDataBean</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of IssuesJqlMetaDataBean.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is an array
        if (!Array.isArray(data['validationWarnings'])) {
            throw new Error("Expected the field `validationWarnings` to be an array in the JSON data but got " + data['validationWarnings']);
        }

        return true;
    }


}

IssuesJqlMetaDataBean.RequiredProperties = ["count", "maxResults", "startAt", "totalCount"];

/**
 * The number of issues that were loaded in this evaluation.
 * @member {Number} count
 */
IssuesJqlMetaDataBean.prototype['count'] = undefined;

/**
 * The maximum number of issues that could be loaded in this evaluation.
 * @member {Number} maxResults
 */
IssuesJqlMetaDataBean.prototype['maxResults'] = undefined;

/**
 * The index of the first issue.
 * @member {Number} startAt
 */
IssuesJqlMetaDataBean.prototype['startAt'] = undefined;

/**
 * The total number of issues the JQL returned.
 * @member {Number} totalCount
 */
IssuesJqlMetaDataBean.prototype['totalCount'] = undefined;

/**
 * Any warnings related to the JQL query. Present only if the validation mode was set to `warn`.
 * @member {Array.<String>} validationWarnings
 */
IssuesJqlMetaDataBean.prototype['validationWarnings'] = undefined;






export default IssuesJqlMetaDataBean;

