/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import IssueContextVariable from './IssueContextVariable';
import JsonContextVariable from './JsonContextVariable';
import UserContextVariable from './UserContextVariable';

/**
 * The CustomContextVariable model module.
 * @module model/CustomContextVariable
 * @version 1001.0.0-SNAPSHOT
 */
class CustomContextVariable {
    /**
     * Constructs a new <code>CustomContextVariable</code>.
     * @alias module:model/CustomContextVariable
     * @param {(module:model/IssueContextVariable|module:model/JsonContextVariable|module:model/UserContextVariable)} instance The actual instance to initialize CustomContextVariable.
     */
    constructor(instance = null) {
        if (instance === null) {
            this.actualInstance = null;
            return;
        }
        var match = 0;
        var errorMessages = [];
        try {
            if (typeof instance === "UserContextVariable") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                UserContextVariable.validateJSON(instance); // throw an exception if no match
                // create UserContextVariable from JS object
                this.actualInstance = UserContextVariable.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into UserContextVariable
            errorMessages.push("Failed to construct UserContextVariable: " + err)
        }

        try {
            if (typeof instance === "IssueContextVariable") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                IssueContextVariable.validateJSON(instance); // throw an exception if no match
                // create IssueContextVariable from JS object
                this.actualInstance = IssueContextVariable.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into IssueContextVariable
            errorMessages.push("Failed to construct IssueContextVariable: " + err)
        }

        try {
            if (typeof instance === "JsonContextVariable") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                JsonContextVariable.validateJSON(instance); // throw an exception if no match
                // create JsonContextVariable from JS object
                this.actualInstance = JsonContextVariable.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into JsonContextVariable
            errorMessages.push("Failed to construct JsonContextVariable: " + err)
        }

        if (match > 1) {
            throw new Error("Multiple matches found constructing `CustomContextVariable` with oneOf schemas IssueContextVariable, JsonContextVariable, UserContextVariable. Input: " + JSON.stringify(instance));
        } else if (match === 0) {
            this.actualInstance = null; // clear the actual instance in case there are multiple matches
            throw new Error("No match found constructing `CustomContextVariable` with oneOf schemas IssueContextVariable, JsonContextVariable, UserContextVariable. Details: " +
                            errorMessages.join(", "));
        } else { // only 1 match
            // the input is valid
        }
    }

    /**
     * Constructs a <code>CustomContextVariable</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CustomContextVariable} obj Optional instance to populate.
     * @return {module:model/CustomContextVariable} The populated <code>CustomContextVariable</code> instance.
     */
    static constructFromObject(data, obj) {
        return new CustomContextVariable(data);
    }

    /**
     * Gets the actual instance, which can be <code>IssueContextVariable</code>, <code>JsonContextVariable</code>, <code>UserContextVariable</code>.
     * @return {(module:model/IssueContextVariable|module:model/JsonContextVariable|module:model/UserContextVariable)} The actual instance.
     */
    getActualInstance() {
        return this.actualInstance;
    }

    /**
     * Sets the actual instance, which can be <code>IssueContextVariable</code>, <code>JsonContextVariable</code>, <code>UserContextVariable</code>.
     * @param {(module:model/IssueContextVariable|module:model/JsonContextVariable|module:model/UserContextVariable)} obj The actual instance.
     */
    setActualInstance(obj) {
       this.actualInstance = CustomContextVariable.constructFromObject(obj).getActualInstance();
    }

    /**
     * Returns the JSON representation of the actual instance.
     * @return {string}
     */
    toJSON = function(){
        return this.getActualInstance();
    }

    /**
     * Create an instance of CustomContextVariable from a JSON string.
     * @param {string} json_string JSON string.
     * @return {module:model/CustomContextVariable} An instance of CustomContextVariable.
     */
    static fromJSON = function(json_string){
        return CustomContextVariable.constructFromObject(JSON.parse(json_string));
    }
}

/**
 * Type of custom context variable.
 * @member {String} type
 */
CustomContextVariable.prototype['type'] = undefined;

/**
 * The account ID of the user.
 * @member {String} accountId
 */
CustomContextVariable.prototype['accountId'] = undefined;

/**
 * The issue ID.
 * @member {Number} id
 */
CustomContextVariable.prototype['id'] = undefined;

/**
 * The issue key.
 * @member {String} key
 */
CustomContextVariable.prototype['key'] = undefined;

/**
 * A JSON object containing custom content.
 * @member {Object} value
 */
CustomContextVariable.prototype['value'] = undefined;


CustomContextVariable.OneOf = ["IssueContextVariable", "JsonContextVariable", "UserContextVariable"];

export default CustomContextVariable;

