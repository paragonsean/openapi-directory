/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The IssueTypeWorkflowMapping model module.
 * @module model/IssueTypeWorkflowMapping
 * @version 1001.0.0-SNAPSHOT
 */
class IssueTypeWorkflowMapping {
    /**
     * Constructs a new <code>IssueTypeWorkflowMapping</code>.
     * Details about the mapping between an issue type and a workflow.
     * @alias module:model/IssueTypeWorkflowMapping
     */
    constructor() { 
        
        IssueTypeWorkflowMapping.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>IssueTypeWorkflowMapping</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IssueTypeWorkflowMapping} obj Optional instance to populate.
     * @return {module:model/IssueTypeWorkflowMapping} The populated <code>IssueTypeWorkflowMapping</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IssueTypeWorkflowMapping();

            if (data.hasOwnProperty('issueType')) {
                obj['issueType'] = ApiClient.convertToType(data['issueType'], 'String');
            }
            if (data.hasOwnProperty('updateDraftIfNeeded')) {
                obj['updateDraftIfNeeded'] = ApiClient.convertToType(data['updateDraftIfNeeded'], 'Boolean');
            }
            if (data.hasOwnProperty('workflow')) {
                obj['workflow'] = ApiClient.convertToType(data['workflow'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IssueTypeWorkflowMapping</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IssueTypeWorkflowMapping</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['issueType'] && !(typeof data['issueType'] === 'string' || data['issueType'] instanceof String)) {
            throw new Error("Expected the field `issueType` to be a primitive type in the JSON string but got " + data['issueType']);
        }
        // ensure the json data is a string
        if (data['workflow'] && !(typeof data['workflow'] === 'string' || data['workflow'] instanceof String)) {
            throw new Error("Expected the field `workflow` to be a primitive type in the JSON string but got " + data['workflow']);
        }

        return true;
    }


}



/**
 * The ID of the issue type. Not required if updating the issue type-workflow mapping.
 * @member {String} issueType
 */
IssueTypeWorkflowMapping.prototype['issueType'] = undefined;

/**
 * Set to true to create or update the draft of a workflow scheme and update the mapping in the draft, when the workflow scheme cannot be edited. Defaults to `false`. Only applicable when updating the workflow-issue types mapping.
 * @member {Boolean} updateDraftIfNeeded
 */
IssueTypeWorkflowMapping.prototype['updateDraftIfNeeded'] = undefined;

/**
 * The name of the workflow.
 * @member {String} workflow
 */
IssueTypeWorkflowMapping.prototype['workflow'] = undefined;






export default IssueTypeWorkflowMapping;

