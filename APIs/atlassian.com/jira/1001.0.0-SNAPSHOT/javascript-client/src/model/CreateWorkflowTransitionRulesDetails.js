/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateWorkflowCondition from './CreateWorkflowCondition';
import CreateWorkflowTransitionRule from './CreateWorkflowTransitionRule';

/**
 * The CreateWorkflowTransitionRulesDetails model module.
 * @module model/CreateWorkflowTransitionRulesDetails
 * @version 1001.0.0-SNAPSHOT
 */
class CreateWorkflowTransitionRulesDetails {
    /**
     * Constructs a new <code>CreateWorkflowTransitionRulesDetails</code>.
     * The details of a workflow transition rules.
     * @alias module:model/CreateWorkflowTransitionRulesDetails
     */
    constructor() { 
        
        CreateWorkflowTransitionRulesDetails.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CreateWorkflowTransitionRulesDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateWorkflowTransitionRulesDetails} obj Optional instance to populate.
     * @return {module:model/CreateWorkflowTransitionRulesDetails} The populated <code>CreateWorkflowTransitionRulesDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateWorkflowTransitionRulesDetails();

            if (data.hasOwnProperty('conditions')) {
                obj['conditions'] = ApiClient.convertToType(data['conditions'], CreateWorkflowCondition);
            }
            if (data.hasOwnProperty('postFunctions')) {
                obj['postFunctions'] = ApiClient.convertToType(data['postFunctions'], [CreateWorkflowTransitionRule]);
            }
            if (data.hasOwnProperty('validators')) {
                obj['validators'] = ApiClient.convertToType(data['validators'], [CreateWorkflowTransitionRule]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateWorkflowTransitionRulesDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateWorkflowTransitionRulesDetails</code>.
     */
    static validateJSON(data) {
        // validate the optional field `conditions`
        if (data['conditions']) { // data not null
          CreateWorkflowCondition.validateJSON(data['conditions']);
        }
        if (data['postFunctions']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['postFunctions'])) {
                throw new Error("Expected the field `postFunctions` to be an array in the JSON data but got " + data['postFunctions']);
            }
            // validate the optional field `postFunctions` (array)
            for (const item of data['postFunctions']) {
                CreateWorkflowTransitionRule.validateJSON(item);
            };
        }
        if (data['validators']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['validators'])) {
                throw new Error("Expected the field `validators` to be an array in the JSON data but got " + data['validators']);
            }
            // validate the optional field `validators` (array)
            for (const item of data['validators']) {
                CreateWorkflowTransitionRule.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * The workflow conditions.
 * @member {module:model/CreateWorkflowCondition} conditions
 */
CreateWorkflowTransitionRulesDetails.prototype['conditions'] = undefined;

/**
 * The workflow post functions.  **Note:** The default post functions are always added to the *initial* transition, as in:      \"postFunctions\": [         {             \"type\": \"IssueCreateFunction\"         },         {             \"type\": \"IssueReindexFunction\"         },         {             \"type\": \"FireIssueEventFunction\",             \"configuration\": {                 \"event\": {                     \"id\": \"1\",                     \"name\": \"issue_created\"                 }             }         }     ]  **Note:** The default post functions are always added to the *global* and *directed* transitions, as in:      \"postFunctions\": [         {             \"type\": \"UpdateIssueStatusFunction\"         },         {             \"type\": \"CreateCommentFunction\"         },         {             \"type\": \"GenerateChangeHistoryFunction\"         },         {             \"type\": \"IssueReindexFunction\"         },         {             \"type\": \"FireIssueEventFunction\",             \"configuration\": {                 \"event\": {                     \"id\": \"13\",                     \"name\": \"issue_generic\"                 }             }         }     ]
 * @member {Array.<module:model/CreateWorkflowTransitionRule>} postFunctions
 */
CreateWorkflowTransitionRulesDetails.prototype['postFunctions'] = undefined;

/**
 * The workflow validators.  **Note:** The default permission validator is always added to the *initial* transition, as in:      \"validators\": [         {             \"type\": \"PermissionValidator\",             \"configuration\": {                 \"permissionKey\": \"CREATE_ISSUES\"             }         }     ]
 * @member {Array.<module:model/CreateWorkflowTransitionRule>} validators
 */
CreateWorkflowTransitionRulesDetails.prototype['validators'] = undefined;






export default CreateWorkflowTransitionRulesDetails;

