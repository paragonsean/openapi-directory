/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Dashboard from './Dashboard';

/**
 * The PageOfDashboards model module.
 * @module model/PageOfDashboards
 * @version 1001.0.0-SNAPSHOT
 */
class PageOfDashboards {
    /**
     * Constructs a new <code>PageOfDashboards</code>.
     * A page containing dashboard details.
     * @alias module:model/PageOfDashboards
     */
    constructor() { 
        
        PageOfDashboards.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PageOfDashboards</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PageOfDashboards} obj Optional instance to populate.
     * @return {module:model/PageOfDashboards} The populated <code>PageOfDashboards</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PageOfDashboards();

            if (data.hasOwnProperty('dashboards')) {
                obj['dashboards'] = ApiClient.convertToType(data['dashboards'], [Dashboard]);
            }
            if (data.hasOwnProperty('maxResults')) {
                obj['maxResults'] = ApiClient.convertToType(data['maxResults'], 'Number');
            }
            if (data.hasOwnProperty('next')) {
                obj['next'] = ApiClient.convertToType(data['next'], 'String');
            }
            if (data.hasOwnProperty('prev')) {
                obj['prev'] = ApiClient.convertToType(data['prev'], 'String');
            }
            if (data.hasOwnProperty('startAt')) {
                obj['startAt'] = ApiClient.convertToType(data['startAt'], 'Number');
            }
            if (data.hasOwnProperty('total')) {
                obj['total'] = ApiClient.convertToType(data['total'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PageOfDashboards</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PageOfDashboards</code>.
     */
    static validateJSON(data) {
        if (data['dashboards']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['dashboards'])) {
                throw new Error("Expected the field `dashboards` to be an array in the JSON data but got " + data['dashboards']);
            }
            // validate the optional field `dashboards` (array)
            for (const item of data['dashboards']) {
                Dashboard.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['next'] && !(typeof data['next'] === 'string' || data['next'] instanceof String)) {
            throw new Error("Expected the field `next` to be a primitive type in the JSON string but got " + data['next']);
        }
        // ensure the json data is a string
        if (data['prev'] && !(typeof data['prev'] === 'string' || data['prev'] instanceof String)) {
            throw new Error("Expected the field `prev` to be a primitive type in the JSON string but got " + data['prev']);
        }

        return true;
    }


}



/**
 * List of dashboards.
 * @member {Array.<module:model/Dashboard>} dashboards
 */
PageOfDashboards.prototype['dashboards'] = undefined;

/**
 * The maximum number of results that could be on the page.
 * @member {Number} maxResults
 */
PageOfDashboards.prototype['maxResults'] = undefined;

/**
 * The URL of the next page of results, if any.
 * @member {String} next
 */
PageOfDashboards.prototype['next'] = undefined;

/**
 * The URL of the previous page of results, if any.
 * @member {String} prev
 */
PageOfDashboards.prototype['prev'] = undefined;

/**
 * The index of the first item returned on the page.
 * @member {Number} startAt
 */
PageOfDashboards.prototype['startAt'] = undefined;

/**
 * The number of results on the page.
 * @member {Number} total
 */
PageOfDashboards.prototype['total'] = undefined;






export default PageOfDashboards;

