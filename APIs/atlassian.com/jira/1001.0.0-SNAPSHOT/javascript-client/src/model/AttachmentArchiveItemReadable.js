/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AttachmentArchiveItemReadable model module.
 * @module model/AttachmentArchiveItemReadable
 * @version 1001.0.0-SNAPSHOT
 */
class AttachmentArchiveItemReadable {
    /**
     * Constructs a new <code>AttachmentArchiveItemReadable</code>.
     * Metadata for an item in an attachment archive.
     * @alias module:model/AttachmentArchiveItemReadable
     */
    constructor() { 
        
        AttachmentArchiveItemReadable.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AttachmentArchiveItemReadable</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AttachmentArchiveItemReadable} obj Optional instance to populate.
     * @return {module:model/AttachmentArchiveItemReadable} The populated <code>AttachmentArchiveItemReadable</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AttachmentArchiveItemReadable();

            if (data.hasOwnProperty('index')) {
                obj['index'] = ApiClient.convertToType(data['index'], 'Number');
            }
            if (data.hasOwnProperty('label')) {
                obj['label'] = ApiClient.convertToType(data['label'], 'String');
            }
            if (data.hasOwnProperty('mediaType')) {
                obj['mediaType'] = ApiClient.convertToType(data['mediaType'], 'String');
            }
            if (data.hasOwnProperty('path')) {
                obj['path'] = ApiClient.convertToType(data['path'], 'String');
            }
            if (data.hasOwnProperty('size')) {
                obj['size'] = ApiClient.convertToType(data['size'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AttachmentArchiveItemReadable</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AttachmentArchiveItemReadable</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['label'] && !(typeof data['label'] === 'string' || data['label'] instanceof String)) {
            throw new Error("Expected the field `label` to be a primitive type in the JSON string but got " + data['label']);
        }
        // ensure the json data is a string
        if (data['mediaType'] && !(typeof data['mediaType'] === 'string' || data['mediaType'] instanceof String)) {
            throw new Error("Expected the field `mediaType` to be a primitive type in the JSON string but got " + data['mediaType']);
        }
        // ensure the json data is a string
        if (data['path'] && !(typeof data['path'] === 'string' || data['path'] instanceof String)) {
            throw new Error("Expected the field `path` to be a primitive type in the JSON string but got " + data['path']);
        }
        // ensure the json data is a string
        if (data['size'] && !(typeof data['size'] === 'string' || data['size'] instanceof String)) {
            throw new Error("Expected the field `size` to be a primitive type in the JSON string but got " + data['size']);
        }

        return true;
    }


}



/**
 * The position of the item within the archive.
 * @member {Number} index
 */
AttachmentArchiveItemReadable.prototype['index'] = undefined;

/**
 * The label for the archive item.
 * @member {String} label
 */
AttachmentArchiveItemReadable.prototype['label'] = undefined;

/**
 * The MIME type of the archive item.
 * @member {String} mediaType
 */
AttachmentArchiveItemReadable.prototype['mediaType'] = undefined;

/**
 * The path of the archive item.
 * @member {String} path
 */
AttachmentArchiveItemReadable.prototype['path'] = undefined;

/**
 * The size of the archive item.
 * @member {String} size
 */
AttachmentArchiveItemReadable.prototype['size'] = undefined;






export default AttachmentArchiveItemReadable;

