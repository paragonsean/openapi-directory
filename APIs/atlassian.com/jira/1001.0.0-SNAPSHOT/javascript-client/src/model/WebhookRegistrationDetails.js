/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import WebhookDetails from './WebhookDetails';

/**
 * The WebhookRegistrationDetails model module.
 * @module model/WebhookRegistrationDetails
 * @version 1001.0.0-SNAPSHOT
 */
class WebhookRegistrationDetails {
    /**
     * Constructs a new <code>WebhookRegistrationDetails</code>.
     * Details of webhooks to register.
     * @alias module:model/WebhookRegistrationDetails
     * @param url {String} The URL that specifies where to send the webhooks. This URL must use the same base URL as the Connect app. Only a single URL per app is allowed to be registered.
     * @param webhooks {Array.<module:model/WebhookDetails>} A list of webhooks.
     */
    constructor(url, webhooks) { 
        
        WebhookRegistrationDetails.initialize(this, url, webhooks);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, url, webhooks) { 
        obj['url'] = url;
        obj['webhooks'] = webhooks;
    }

    /**
     * Constructs a <code>WebhookRegistrationDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/WebhookRegistrationDetails} obj Optional instance to populate.
     * @return {module:model/WebhookRegistrationDetails} The populated <code>WebhookRegistrationDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WebhookRegistrationDetails();

            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
            if (data.hasOwnProperty('webhooks')) {
                obj['webhooks'] = ApiClient.convertToType(data['webhooks'], [WebhookDetails]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>WebhookRegistrationDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>WebhookRegistrationDetails</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of WebhookRegistrationDetails.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }
        if (data['webhooks']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['webhooks'])) {
                throw new Error("Expected the field `webhooks` to be an array in the JSON data but got " + data['webhooks']);
            }
            // validate the optional field `webhooks` (array)
            for (const item of data['webhooks']) {
                WebhookDetails.validateJSON(item);
            };
        }

        return true;
    }


}

WebhookRegistrationDetails.RequiredProperties = ["url", "webhooks"];

/**
 * The URL that specifies where to send the webhooks. This URL must use the same base URL as the Connect app. Only a single URL per app is allowed to be registered.
 * @member {String} url
 */
WebhookRegistrationDetails.prototype['url'] = undefined;

/**
 * A list of webhooks.
 * @member {Array.<module:model/WebhookDetails>} webhooks
 */
WebhookRegistrationDetails.prototype['webhooks'] = undefined;






export default WebhookRegistrationDetails;

