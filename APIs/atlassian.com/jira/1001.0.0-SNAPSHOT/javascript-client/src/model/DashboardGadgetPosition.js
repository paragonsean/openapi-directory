/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DashboardGadgetPosition model module.
 * @module model/DashboardGadgetPosition
 * @version 1001.0.0-SNAPSHOT
 */
class DashboardGadgetPosition {
    /**
     * Constructs a new <code>DashboardGadgetPosition</code>.
     * Details of a gadget position.
     * @alias module:model/DashboardGadgetPosition
     * @param theColumnPositionOfTheGadget {Number} 
     * @param theRowPositionOfTheGadget {Number} 
     */
    constructor(theColumnPositionOfTheGadget, theRowPositionOfTheGadget) { 
        
        DashboardGadgetPosition.initialize(this, theColumnPositionOfTheGadget, theRowPositionOfTheGadget);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, theColumnPositionOfTheGadget, theRowPositionOfTheGadget) { 
        obj['The column position of the gadget.'] = theColumnPositionOfTheGadget;
        obj['The row position of the gadget.'] = theRowPositionOfTheGadget;
    }

    /**
     * Constructs a <code>DashboardGadgetPosition</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DashboardGadgetPosition} obj Optional instance to populate.
     * @return {module:model/DashboardGadgetPosition} The populated <code>DashboardGadgetPosition</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DashboardGadgetPosition();

            if (data.hasOwnProperty('The column position of the gadget.')) {
                obj['The column position of the gadget.'] = ApiClient.convertToType(data['The column position of the gadget.'], 'Number');
            }
            if (data.hasOwnProperty('The row position of the gadget.')) {
                obj['The row position of the gadget.'] = ApiClient.convertToType(data['The row position of the gadget.'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DashboardGadgetPosition</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DashboardGadgetPosition</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of DashboardGadgetPosition.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }

        return true;
    }


}

DashboardGadgetPosition.RequiredProperties = ["The column position of the gadget.", "The row position of the gadget."];

/**
 * @member {Number} The column position of the gadget.
 */
DashboardGadgetPosition.prototype['The column position of the gadget.'] = undefined;

/**
 * @member {Number} The row position of the gadget.
 */
DashboardGadgetPosition.prototype['The row position of the gadget.'] = undefined;






export default DashboardGadgetPosition;

