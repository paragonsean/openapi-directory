/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ProjectIssueCreateMetadata from './ProjectIssueCreateMetadata';

/**
 * The IssueCreateMetadata model module.
 * @module model/IssueCreateMetadata
 * @version 1001.0.0-SNAPSHOT
 */
class IssueCreateMetadata {
    /**
     * Constructs a new <code>IssueCreateMetadata</code>.
     * The wrapper for the issue creation metadata for a list of projects.
     * @alias module:model/IssueCreateMetadata
     */
    constructor() { 
        
        IssueCreateMetadata.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>IssueCreateMetadata</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IssueCreateMetadata} obj Optional instance to populate.
     * @return {module:model/IssueCreateMetadata} The populated <code>IssueCreateMetadata</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IssueCreateMetadata();

            if (data.hasOwnProperty('expand')) {
                obj['expand'] = ApiClient.convertToType(data['expand'], 'String');
            }
            if (data.hasOwnProperty('projects')) {
                obj['projects'] = ApiClient.convertToType(data['projects'], [ProjectIssueCreateMetadata]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IssueCreateMetadata</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IssueCreateMetadata</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['expand'] && !(typeof data['expand'] === 'string' || data['expand'] instanceof String)) {
            throw new Error("Expected the field `expand` to be a primitive type in the JSON string but got " + data['expand']);
        }
        if (data['projects']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['projects'])) {
                throw new Error("Expected the field `projects` to be an array in the JSON data but got " + data['projects']);
            }
            // validate the optional field `projects` (array)
            for (const item of data['projects']) {
                ProjectIssueCreateMetadata.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Expand options that include additional project details in the response.
 * @member {String} expand
 */
IssueCreateMetadata.prototype['expand'] = undefined;

/**
 * List of projects and their issue creation metadata.
 * @member {Array.<module:model/ProjectIssueCreateMetadata>} projects
 */
IssueCreateMetadata.prototype['projects'] = undefined;






export default IssueCreateMetadata;

