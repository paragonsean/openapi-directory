/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import IssuesJqlMetaDataBean from './IssuesJqlMetaDataBean';

/**
 * The IssuesMetaBean model module.
 * @module model/IssuesMetaBean
 * @version 1001.0.0-SNAPSHOT
 */
class IssuesMetaBean {
    /**
     * Constructs a new <code>IssuesMetaBean</code>.
     * Meta data describing the &#x60;issues&#x60; context variable.
     * @alias module:model/IssuesMetaBean
     */
    constructor() { 
        
        IssuesMetaBean.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>IssuesMetaBean</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IssuesMetaBean} obj Optional instance to populate.
     * @return {module:model/IssuesMetaBean} The populated <code>IssuesMetaBean</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IssuesMetaBean();

            if (data.hasOwnProperty('jql')) {
                obj['jql'] = IssuesJqlMetaDataBean.constructFromObject(data['jql']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IssuesMetaBean</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IssuesMetaBean</code>.
     */
    static validateJSON(data) {
        // validate the optional field `jql`
        if (data['jql']) { // data not null
          IssuesJqlMetaDataBean.validateJSON(data['jql']);
        }

        return true;
    }


}



/**
 * @member {module:model/IssuesJqlMetaDataBean} jql
 */
IssuesMetaBean.prototype['jql'] = undefined;






export default IssuesMetaBean;

