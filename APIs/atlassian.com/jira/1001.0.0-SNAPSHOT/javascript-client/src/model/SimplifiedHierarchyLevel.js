/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SimplifiedHierarchyLevel model module.
 * @module model/SimplifiedHierarchyLevel
 * @version 1001.0.0-SNAPSHOT
 */
class SimplifiedHierarchyLevel {
    /**
     * Constructs a new <code>SimplifiedHierarchyLevel</code>.
     * @alias module:model/SimplifiedHierarchyLevel
     */
    constructor() { 
        
        SimplifiedHierarchyLevel.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SimplifiedHierarchyLevel</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SimplifiedHierarchyLevel} obj Optional instance to populate.
     * @return {module:model/SimplifiedHierarchyLevel} The populated <code>SimplifiedHierarchyLevel</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SimplifiedHierarchyLevel();

            if (data.hasOwnProperty('aboveLevelId')) {
                obj['aboveLevelId'] = ApiClient.convertToType(data['aboveLevelId'], 'Number');
            }
            if (data.hasOwnProperty('belowLevelId')) {
                obj['belowLevelId'] = ApiClient.convertToType(data['belowLevelId'], 'Number');
            }
            if (data.hasOwnProperty('externalUuid')) {
                obj['externalUuid'] = ApiClient.convertToType(data['externalUuid'], 'String');
            }
            if (data.hasOwnProperty('hierarchyLevelNumber')) {
                obj['hierarchyLevelNumber'] = ApiClient.convertToType(data['hierarchyLevelNumber'], 'Number');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('issueTypeIds')) {
                obj['issueTypeIds'] = ApiClient.convertToType(data['issueTypeIds'], ['Number']);
            }
            if (data.hasOwnProperty('level')) {
                obj['level'] = ApiClient.convertToType(data['level'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('projectConfigurationId')) {
                obj['projectConfigurationId'] = ApiClient.convertToType(data['projectConfigurationId'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SimplifiedHierarchyLevel</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SimplifiedHierarchyLevel</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['externalUuid'] && !(typeof data['externalUuid'] === 'string' || data['externalUuid'] instanceof String)) {
            throw new Error("Expected the field `externalUuid` to be a primitive type in the JSON string but got " + data['externalUuid']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['issueTypeIds'])) {
            throw new Error("Expected the field `issueTypeIds` to be an array in the JSON data but got " + data['issueTypeIds']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }

        return true;
    }


}



/**
 * The ID of the level above this one in the hierarchy. This property is deprecated, see [Change notice: Removing hierarchy level IDs from next-gen APIs](https://developer.atlassian.com/cloud/jira/platform/change-notice-removing-hierarchy-level-ids-from-next-gen-apis/).
 * @member {Number} aboveLevelId
 */
SimplifiedHierarchyLevel.prototype['aboveLevelId'] = undefined;

/**
 * The ID of the level below this one in the hierarchy. This property is deprecated, see [Change notice: Removing hierarchy level IDs from next-gen APIs](https://developer.atlassian.com/cloud/jira/platform/change-notice-removing-hierarchy-level-ids-from-next-gen-apis/).
 * @member {Number} belowLevelId
 */
SimplifiedHierarchyLevel.prototype['belowLevelId'] = undefined;

/**
 * The external UUID of the hierarchy level. This property is deprecated, see [Change notice: Removing hierarchy level IDs from next-gen APIs](https://developer.atlassian.com/cloud/jira/platform/change-notice-removing-hierarchy-level-ids-from-next-gen-apis/).
 * @member {String} externalUuid
 */
SimplifiedHierarchyLevel.prototype['externalUuid'] = undefined;

/**
 * @member {Number} hierarchyLevelNumber
 */
SimplifiedHierarchyLevel.prototype['hierarchyLevelNumber'] = undefined;

/**
 * The ID of the hierarchy level. This property is deprecated, see [Change notice: Removing hierarchy level IDs from next-gen APIs](https://developer.atlassian.com/cloud/jira/platform/change-notice-removing-hierarchy-level-ids-from-next-gen-apis/).
 * @member {Number} id
 */
SimplifiedHierarchyLevel.prototype['id'] = undefined;

/**
 * The issue types available in this hierarchy level.
 * @member {Array.<Number>} issueTypeIds
 */
SimplifiedHierarchyLevel.prototype['issueTypeIds'] = undefined;

/**
 * The level of this item in the hierarchy.
 * @member {Number} level
 */
SimplifiedHierarchyLevel.prototype['level'] = undefined;

/**
 * The name of this hierarchy level.
 * @member {String} name
 */
SimplifiedHierarchyLevel.prototype['name'] = undefined;

/**
 * The ID of the project configuration. This property is deprecated, see [Change oticen: Removing hierarchy level IDs from next-gen APIs](https://developer.atlassian.com/cloud/jira/platform/change-notice-removing-hierarchy-level-ids-from-next-gen-apis/).
 * @member {Number} projectConfigurationId
 */
SimplifiedHierarchyLevel.prototype['projectConfigurationId'] = undefined;






export default SimplifiedHierarchyLevel;

