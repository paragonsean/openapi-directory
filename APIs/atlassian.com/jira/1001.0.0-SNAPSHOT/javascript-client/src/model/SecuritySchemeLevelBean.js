/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SecuritySchemeLevelMemberBean from './SecuritySchemeLevelMemberBean';

/**
 * The SecuritySchemeLevelBean model module.
 * @module model/SecuritySchemeLevelBean
 * @version 1001.0.0-SNAPSHOT
 */
class SecuritySchemeLevelBean {
    /**
     * Constructs a new <code>SecuritySchemeLevelBean</code>.
     * @alias module:model/SecuritySchemeLevelBean
     * @param name {String} The name of the issue security scheme level. Must be unique.
     */
    constructor(name) { 
        
        SecuritySchemeLevelBean.initialize(this, name);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name) { 
        obj['name'] = name;
    }

    /**
     * Constructs a <code>SecuritySchemeLevelBean</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SecuritySchemeLevelBean} obj Optional instance to populate.
     * @return {module:model/SecuritySchemeLevelBean} The populated <code>SecuritySchemeLevelBean</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SecuritySchemeLevelBean();

            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('isDefault')) {
                obj['isDefault'] = ApiClient.convertToType(data['isDefault'], 'Boolean');
            }
            if (data.hasOwnProperty('members')) {
                obj['members'] = ApiClient.convertToType(data['members'], [SecuritySchemeLevelMemberBean]);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SecuritySchemeLevelBean</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SecuritySchemeLevelBean</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of SecuritySchemeLevelBean.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        if (data['members']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['members'])) {
                throw new Error("Expected the field `members` to be an array in the JSON data but got " + data['members']);
            }
            // validate the optional field `members` (array)
            for (const item of data['members']) {
                SecuritySchemeLevelMemberBean.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }

        return true;
    }


}

SecuritySchemeLevelBean.RequiredProperties = ["name"];

/**
 * The description of the issue security scheme level.
 * @member {String} description
 */
SecuritySchemeLevelBean.prototype['description'] = undefined;

/**
 * Specifies whether the level is the default level. False by default.
 * @member {Boolean} isDefault
 */
SecuritySchemeLevelBean.prototype['isDefault'] = undefined;

/**
 * The list of level members which should be added to the issue security scheme level.
 * @member {Array.<module:model/SecuritySchemeLevelMemberBean>} members
 */
SecuritySchemeLevelBean.prototype['members'] = undefined;

/**
 * The name of the issue security scheme level. Must be unique.
 * @member {String} name
 */
SecuritySchemeLevelBean.prototype['name'] = undefined;






export default SecuritySchemeLevelBean;

