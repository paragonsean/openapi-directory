/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import NotificationSchemeEventDetails from './NotificationSchemeEventDetails';

/**
 * The AddNotificationsDetails model module.
 * @module model/AddNotificationsDetails
 * @version 1001.0.0-SNAPSHOT
 */
class AddNotificationsDetails {
    /**
     * Constructs a new <code>AddNotificationsDetails</code>.
     * Details of notifications which should be added to the notification scheme.
     * @alias module:model/AddNotificationsDetails
     * @extends Object
     * @param notificationSchemeEvents {Array.<module:model/NotificationSchemeEventDetails>} The list of notifications which should be added to the notification scheme.
     */
    constructor(notificationSchemeEvents) { 
        
        AddNotificationsDetails.initialize(this, notificationSchemeEvents);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, notificationSchemeEvents) { 
        obj['notificationSchemeEvents'] = notificationSchemeEvents;
    }

    /**
     * Constructs a <code>AddNotificationsDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AddNotificationsDetails} obj Optional instance to populate.
     * @return {module:model/AddNotificationsDetails} The populated <code>AddNotificationsDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AddNotificationsDetails();

            ApiClient.constructFromObject(data, obj, 'Object');
            

            if (data.hasOwnProperty('notificationSchemeEvents')) {
                obj['notificationSchemeEvents'] = ApiClient.convertToType(data['notificationSchemeEvents'], [NotificationSchemeEventDetails]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AddNotificationsDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AddNotificationsDetails</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AddNotificationsDetails.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is an array
        if (!Array.isArray(data['notificationSchemeEvents'])) {
            throw new Error("Expected the field `notificationSchemeEvents` to be an array in the JSON data but got " + data['notificationSchemeEvents']);
        }

        return true;
    }


}

AddNotificationsDetails.RequiredProperties = ["notificationSchemeEvents"];

/**
 * The list of notifications which should be added to the notification scheme.
 * @member {Array.<module:model/NotificationSchemeEventDetails>} notificationSchemeEvents
 */
AddNotificationsDetails.prototype['notificationSchemeEvents'] = undefined;






export default AddNotificationsDetails;

