/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import IssueTypeScreenSchemeMapping from './IssueTypeScreenSchemeMapping';

/**
 * The IssueTypeScreenSchemeMappingDetails model module.
 * @module model/IssueTypeScreenSchemeMappingDetails
 * @version 1001.0.0-SNAPSHOT
 */
class IssueTypeScreenSchemeMappingDetails {
    /**
     * Constructs a new <code>IssueTypeScreenSchemeMappingDetails</code>.
     * A list of issue type screen scheme mappings.
     * @alias module:model/IssueTypeScreenSchemeMappingDetails
     * @param issueTypeMappings {Array.<module:model/IssueTypeScreenSchemeMapping>} The list of issue type to screen scheme mappings. A *default* entry cannot be specified because a default entry is added when an issue type screen scheme is created.
     */
    constructor(issueTypeMappings) { 
        
        IssueTypeScreenSchemeMappingDetails.initialize(this, issueTypeMappings);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, issueTypeMappings) { 
        obj['issueTypeMappings'] = issueTypeMappings;
    }

    /**
     * Constructs a <code>IssueTypeScreenSchemeMappingDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IssueTypeScreenSchemeMappingDetails} obj Optional instance to populate.
     * @return {module:model/IssueTypeScreenSchemeMappingDetails} The populated <code>IssueTypeScreenSchemeMappingDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IssueTypeScreenSchemeMappingDetails();

            if (data.hasOwnProperty('issueTypeMappings')) {
                obj['issueTypeMappings'] = ApiClient.convertToType(data['issueTypeMappings'], [IssueTypeScreenSchemeMapping]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IssueTypeScreenSchemeMappingDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IssueTypeScreenSchemeMappingDetails</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of IssueTypeScreenSchemeMappingDetails.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['issueTypeMappings']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['issueTypeMappings'])) {
                throw new Error("Expected the field `issueTypeMappings` to be an array in the JSON data but got " + data['issueTypeMappings']);
            }
            // validate the optional field `issueTypeMappings` (array)
            for (const item of data['issueTypeMappings']) {
                IssueTypeScreenSchemeMapping.validateJSON(item);
            };
        }

        return true;
    }


}

IssueTypeScreenSchemeMappingDetails.RequiredProperties = ["issueTypeMappings"];

/**
 * The list of issue type to screen scheme mappings. A *default* entry cannot be specified because a default entry is added when an issue type screen scheme is created.
 * @member {Array.<module:model/IssueTypeScreenSchemeMapping>} issueTypeMappings
 */
IssueTypeScreenSchemeMappingDetails.prototype['issueTypeMappings'] = undefined;






export default IssueTypeScreenSchemeMappingDetails;

