/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import JsonNode from './JsonNode';

/**
 * The IssueEntityPropertiesForMultiUpdate model module.
 * @module model/IssueEntityPropertiesForMultiUpdate
 * @version 1001.0.0-SNAPSHOT
 */
class IssueEntityPropertiesForMultiUpdate {
    /**
     * Constructs a new <code>IssueEntityPropertiesForMultiUpdate</code>.
     * An issue ID with entity property values. See [Entity properties](https://developer.atlassian.com/cloud/jira/platform/jira-entity-properties/) for more information.
     * @alias module:model/IssueEntityPropertiesForMultiUpdate
     */
    constructor() { 
        
        IssueEntityPropertiesForMultiUpdate.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>IssueEntityPropertiesForMultiUpdate</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IssueEntityPropertiesForMultiUpdate} obj Optional instance to populate.
     * @return {module:model/IssueEntityPropertiesForMultiUpdate} The populated <code>IssueEntityPropertiesForMultiUpdate</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IssueEntityPropertiesForMultiUpdate();

            if (data.hasOwnProperty('issueID')) {
                obj['issueID'] = ApiClient.convertToType(data['issueID'], 'Number');
            }
            if (data.hasOwnProperty('properties')) {
                obj['properties'] = ApiClient.convertToType(data['properties'], {'String': JsonNode});
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IssueEntityPropertiesForMultiUpdate</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IssueEntityPropertiesForMultiUpdate</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * The ID of the issue.
 * @member {Number} issueID
 */
IssueEntityPropertiesForMultiUpdate.prototype['issueID'] = undefined;

/**
 * Entity properties to set on the issue. The maximum length of an issue property value is 32768 characters.
 * @member {Object.<String, module:model/JsonNode>} properties
 */
IssueEntityPropertiesForMultiUpdate.prototype['properties'] = undefined;






export default IssueEntityPropertiesForMultiUpdate;

