/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The NotificationSchemeNotificationDetails model module.
 * @module model/NotificationSchemeNotificationDetails
 * @version 1001.0.0-SNAPSHOT
 */
class NotificationSchemeNotificationDetails {
    /**
     * Constructs a new <code>NotificationSchemeNotificationDetails</code>.
     * Details of a notification within a notification scheme.
     * @alias module:model/NotificationSchemeNotificationDetails
     * @extends Object
     * @param notificationType {String} The notification type, e.g `CurrentAssignee`, `Group`, `EmailAddress`.
     */
    constructor(notificationType) { 
        
        NotificationSchemeNotificationDetails.initialize(this, notificationType);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, notificationType) { 
        obj['notificationType'] = notificationType;
    }

    /**
     * Constructs a <code>NotificationSchemeNotificationDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/NotificationSchemeNotificationDetails} obj Optional instance to populate.
     * @return {module:model/NotificationSchemeNotificationDetails} The populated <code>NotificationSchemeNotificationDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new NotificationSchemeNotificationDetails();

            ApiClient.constructFromObject(data, obj, 'Object');
            

            if (data.hasOwnProperty('notificationType')) {
                obj['notificationType'] = ApiClient.convertToType(data['notificationType'], 'String');
            }
            if (data.hasOwnProperty('parameter')) {
                obj['parameter'] = ApiClient.convertToType(data['parameter'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>NotificationSchemeNotificationDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>NotificationSchemeNotificationDetails</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of NotificationSchemeNotificationDetails.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['notificationType'] && !(typeof data['notificationType'] === 'string' || data['notificationType'] instanceof String)) {
            throw new Error("Expected the field `notificationType` to be a primitive type in the JSON string but got " + data['notificationType']);
        }
        // ensure the json data is a string
        if (data['parameter'] && !(typeof data['parameter'] === 'string' || data['parameter'] instanceof String)) {
            throw new Error("Expected the field `parameter` to be a primitive type in the JSON string but got " + data['parameter']);
        }

        return true;
    }


}

NotificationSchemeNotificationDetails.RequiredProperties = ["notificationType"];

/**
 * The notification type, e.g `CurrentAssignee`, `Group`, `EmailAddress`.
 * @member {String} notificationType
 */
NotificationSchemeNotificationDetails.prototype['notificationType'] = undefined;

/**
 * The value corresponding to the specified notification type.
 * @member {String} parameter
 */
NotificationSchemeNotificationDetails.prototype['parameter'] = undefined;






export default NotificationSchemeNotificationDetails;

