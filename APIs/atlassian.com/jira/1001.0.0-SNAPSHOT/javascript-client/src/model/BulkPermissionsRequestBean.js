/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BulkProjectPermissions from './BulkProjectPermissions';

/**
 * The BulkPermissionsRequestBean model module.
 * @module model/BulkPermissionsRequestBean
 * @version 1001.0.0-SNAPSHOT
 */
class BulkPermissionsRequestBean {
    /**
     * Constructs a new <code>BulkPermissionsRequestBean</code>.
     * Details of global permissions to look up and project permissions with associated projects and issues to look up.
     * @alias module:model/BulkPermissionsRequestBean
     */
    constructor() { 
        
        BulkPermissionsRequestBean.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BulkPermissionsRequestBean</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BulkPermissionsRequestBean} obj Optional instance to populate.
     * @return {module:model/BulkPermissionsRequestBean} The populated <code>BulkPermissionsRequestBean</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BulkPermissionsRequestBean();

            if (data.hasOwnProperty('accountId')) {
                obj['accountId'] = ApiClient.convertToType(data['accountId'], 'String');
            }
            if (data.hasOwnProperty('globalPermissions')) {
                obj['globalPermissions'] = ApiClient.convertToType(data['globalPermissions'], ['String']);
            }
            if (data.hasOwnProperty('projectPermissions')) {
                obj['projectPermissions'] = ApiClient.convertToType(data['projectPermissions'], [BulkProjectPermissions]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BulkPermissionsRequestBean</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BulkPermissionsRequestBean</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['accountId'] && !(typeof data['accountId'] === 'string' || data['accountId'] instanceof String)) {
            throw new Error("Expected the field `accountId` to be a primitive type in the JSON string but got " + data['accountId']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['globalPermissions'])) {
            throw new Error("Expected the field `globalPermissions` to be an array in the JSON data but got " + data['globalPermissions']);
        }
        if (data['projectPermissions']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['projectPermissions'])) {
                throw new Error("Expected the field `projectPermissions` to be an array in the JSON data but got " + data['projectPermissions']);
            }
            // validate the optional field `projectPermissions` (array)
            for (const item of data['projectPermissions']) {
                BulkProjectPermissions.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * The account ID of a user.
 * @member {String} accountId
 */
BulkPermissionsRequestBean.prototype['accountId'] = undefined;

/**
 * Global permissions to look up.
 * @member {Array.<String>} globalPermissions
 */
BulkPermissionsRequestBean.prototype['globalPermissions'] = undefined;

/**
 * Project permissions with associated projects and issues to look up.
 * @member {Array.<module:model/BulkProjectPermissions>} projectPermissions
 */
BulkPermissionsRequestBean.prototype['projectPermissions'] = undefined;






export default BulkPermissionsRequestBean;

