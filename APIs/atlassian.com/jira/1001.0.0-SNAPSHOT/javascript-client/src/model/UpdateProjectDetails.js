/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The UpdateProjectDetails model module.
 * @module model/UpdateProjectDetails
 * @version 1001.0.0-SNAPSHOT
 */
class UpdateProjectDetails {
    /**
     * Constructs a new <code>UpdateProjectDetails</code>.
     * Details about the project.
     * @alias module:model/UpdateProjectDetails
     */
    constructor() { 
        
        UpdateProjectDetails.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UpdateProjectDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateProjectDetails} obj Optional instance to populate.
     * @return {module:model/UpdateProjectDetails} The populated <code>UpdateProjectDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateProjectDetails();

            if (data.hasOwnProperty('assigneeType')) {
                obj['assigneeType'] = ApiClient.convertToType(data['assigneeType'], 'String');
            }
            if (data.hasOwnProperty('avatarId')) {
                obj['avatarId'] = ApiClient.convertToType(data['avatarId'], 'Number');
            }
            if (data.hasOwnProperty('categoryId')) {
                obj['categoryId'] = ApiClient.convertToType(data['categoryId'], 'Number');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('issueSecurityScheme')) {
                obj['issueSecurityScheme'] = ApiClient.convertToType(data['issueSecurityScheme'], 'Number');
            }
            if (data.hasOwnProperty('key')) {
                obj['key'] = ApiClient.convertToType(data['key'], 'String');
            }
            if (data.hasOwnProperty('lead')) {
                obj['lead'] = ApiClient.convertToType(data['lead'], 'String');
            }
            if (data.hasOwnProperty('leadAccountId')) {
                obj['leadAccountId'] = ApiClient.convertToType(data['leadAccountId'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('notificationScheme')) {
                obj['notificationScheme'] = ApiClient.convertToType(data['notificationScheme'], 'Number');
            }
            if (data.hasOwnProperty('permissionScheme')) {
                obj['permissionScheme'] = ApiClient.convertToType(data['permissionScheme'], 'Number');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateProjectDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateProjectDetails</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['assigneeType'] && !(typeof data['assigneeType'] === 'string' || data['assigneeType'] instanceof String)) {
            throw new Error("Expected the field `assigneeType` to be a primitive type in the JSON string but got " + data['assigneeType']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['key'] && !(typeof data['key'] === 'string' || data['key'] instanceof String)) {
            throw new Error("Expected the field `key` to be a primitive type in the JSON string but got " + data['key']);
        }
        // ensure the json data is a string
        if (data['lead'] && !(typeof data['lead'] === 'string' || data['lead'] instanceof String)) {
            throw new Error("Expected the field `lead` to be a primitive type in the JSON string but got " + data['lead']);
        }
        // ensure the json data is a string
        if (data['leadAccountId'] && !(typeof data['leadAccountId'] === 'string' || data['leadAccountId'] instanceof String)) {
            throw new Error("Expected the field `leadAccountId` to be a primitive type in the JSON string but got " + data['leadAccountId']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }

        return true;
    }


}



/**
 * The default assignee when creating issues for this project.
 * @member {module:model/UpdateProjectDetails.AssigneeTypeEnum} assigneeType
 */
UpdateProjectDetails.prototype['assigneeType'] = undefined;

/**
 * An integer value for the project's avatar.
 * @member {Number} avatarId
 */
UpdateProjectDetails.prototype['avatarId'] = undefined;

/**
 * The ID of the project's category. A complete list of category IDs is found using the [Get all project categories](#api-rest-api-3-projectCategory-get) operation. To remove the project category from the project, set the value to `-1.`
 * @member {Number} categoryId
 */
UpdateProjectDetails.prototype['categoryId'] = undefined;

/**
 * A brief description of the project.
 * @member {String} description
 */
UpdateProjectDetails.prototype['description'] = undefined;

/**
 * The ID of the issue security scheme for the project, which enables you to control who can and cannot view issues. Use the [Get issue security schemes](#api-rest-api-3-issuesecurityschemes-get) resource to get all issue security scheme IDs.
 * @member {Number} issueSecurityScheme
 */
UpdateProjectDetails.prototype['issueSecurityScheme'] = undefined;

/**
 * Project keys must be unique and start with an uppercase letter followed by one or more uppercase alphanumeric characters. The maximum length is 10 characters.
 * @member {String} key
 */
UpdateProjectDetails.prototype['key'] = undefined;

/**
 * This parameter is deprecated because of privacy changes. Use `leadAccountId` instead. See the [migration guide](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details. The user name of the project lead. Cannot be provided with `leadAccountId`.
 * @member {String} lead
 */
UpdateProjectDetails.prototype['lead'] = undefined;

/**
 * The account ID of the project lead. Cannot be provided with `lead`.
 * @member {String} leadAccountId
 */
UpdateProjectDetails.prototype['leadAccountId'] = undefined;

/**
 * The name of the project.
 * @member {String} name
 */
UpdateProjectDetails.prototype['name'] = undefined;

/**
 * The ID of the notification scheme for the project. Use the [Get notification schemes](#api-rest-api-3-notificationscheme-get) resource to get a list of notification scheme IDs.
 * @member {Number} notificationScheme
 */
UpdateProjectDetails.prototype['notificationScheme'] = undefined;

/**
 * The ID of the permission scheme for the project. Use the [Get all permission schemes](#api-rest-api-3-permissionscheme-get) resource to see a list of all permission scheme IDs.
 * @member {Number} permissionScheme
 */
UpdateProjectDetails.prototype['permissionScheme'] = undefined;

/**
 * A link to information about this project, such as project documentation
 * @member {String} url
 */
UpdateProjectDetails.prototype['url'] = undefined;





/**
 * Allowed values for the <code>assigneeType</code> property.
 * @enum {String}
 * @readonly
 */
UpdateProjectDetails['AssigneeTypeEnum'] = {

    /**
     * value: "PROJECT_LEAD"
     * @const
     */
    "PROJECT_LEAD": "PROJECT_LEAD",

    /**
     * value: "UNASSIGNED"
     * @const
     */
    "UNASSIGNED": "UNASSIGNED"
};



export default UpdateProjectDetails;

