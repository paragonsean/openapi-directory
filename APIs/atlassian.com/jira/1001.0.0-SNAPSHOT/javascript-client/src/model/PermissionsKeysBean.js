/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PermissionsKeysBean model module.
 * @module model/PermissionsKeysBean
 * @version 1001.0.0-SNAPSHOT
 */
class PermissionsKeysBean {
    /**
     * Constructs a new <code>PermissionsKeysBean</code>.
     * @alias module:model/PermissionsKeysBean
     * @param permissions {Array.<String>} A list of permission keys.
     */
    constructor(permissions) { 
        
        PermissionsKeysBean.initialize(this, permissions);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, permissions) { 
        obj['permissions'] = permissions;
    }

    /**
     * Constructs a <code>PermissionsKeysBean</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PermissionsKeysBean} obj Optional instance to populate.
     * @return {module:model/PermissionsKeysBean} The populated <code>PermissionsKeysBean</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PermissionsKeysBean();

            if (data.hasOwnProperty('permissions')) {
                obj['permissions'] = ApiClient.convertToType(data['permissions'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PermissionsKeysBean</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PermissionsKeysBean</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PermissionsKeysBean.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is an array
        if (!Array.isArray(data['permissions'])) {
            throw new Error("Expected the field `permissions` to be an array in the JSON data but got " + data['permissions']);
        }

        return true;
    }


}

PermissionsKeysBean.RequiredProperties = ["permissions"];

/**
 * A list of permission keys.
 * @member {Array.<String>} permissions
 */
PermissionsKeysBean.prototype['permissions'] = undefined;






export default PermissionsKeysBean;

