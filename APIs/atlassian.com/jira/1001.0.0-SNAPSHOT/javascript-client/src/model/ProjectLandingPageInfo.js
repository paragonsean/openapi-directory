/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ProjectLandingPageInfo model module.
 * @module model/ProjectLandingPageInfo
 * @version 1001.0.0-SNAPSHOT
 */
class ProjectLandingPageInfo {
    /**
     * Constructs a new <code>ProjectLandingPageInfo</code>.
     * @alias module:model/ProjectLandingPageInfo
     */
    constructor() { 
        
        ProjectLandingPageInfo.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ProjectLandingPageInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProjectLandingPageInfo} obj Optional instance to populate.
     * @return {module:model/ProjectLandingPageInfo} The populated <code>ProjectLandingPageInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ProjectLandingPageInfo();

            if (data.hasOwnProperty('attributes')) {
                obj['attributes'] = ApiClient.convertToType(data['attributes'], {'String': 'String'});
            }
            if (data.hasOwnProperty('boardId')) {
                obj['boardId'] = ApiClient.convertToType(data['boardId'], 'Number');
            }
            if (data.hasOwnProperty('boardName')) {
                obj['boardName'] = ApiClient.convertToType(data['boardName'], 'String');
            }
            if (data.hasOwnProperty('projectKey')) {
                obj['projectKey'] = ApiClient.convertToType(data['projectKey'], 'String');
            }
            if (data.hasOwnProperty('projectType')) {
                obj['projectType'] = ApiClient.convertToType(data['projectType'], 'String');
            }
            if (data.hasOwnProperty('queueCategory')) {
                obj['queueCategory'] = ApiClient.convertToType(data['queueCategory'], 'String');
            }
            if (data.hasOwnProperty('queueId')) {
                obj['queueId'] = ApiClient.convertToType(data['queueId'], 'Number');
            }
            if (data.hasOwnProperty('queueName')) {
                obj['queueName'] = ApiClient.convertToType(data['queueName'], 'String');
            }
            if (data.hasOwnProperty('simpleBoard')) {
                obj['simpleBoard'] = ApiClient.convertToType(data['simpleBoard'], 'Boolean');
            }
            if (data.hasOwnProperty('simplified')) {
                obj['simplified'] = ApiClient.convertToType(data['simplified'], 'Boolean');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ProjectLandingPageInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ProjectLandingPageInfo</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['boardName'] && !(typeof data['boardName'] === 'string' || data['boardName'] instanceof String)) {
            throw new Error("Expected the field `boardName` to be a primitive type in the JSON string but got " + data['boardName']);
        }
        // ensure the json data is a string
        if (data['projectKey'] && !(typeof data['projectKey'] === 'string' || data['projectKey'] instanceof String)) {
            throw new Error("Expected the field `projectKey` to be a primitive type in the JSON string but got " + data['projectKey']);
        }
        // ensure the json data is a string
        if (data['projectType'] && !(typeof data['projectType'] === 'string' || data['projectType'] instanceof String)) {
            throw new Error("Expected the field `projectType` to be a primitive type in the JSON string but got " + data['projectType']);
        }
        // ensure the json data is a string
        if (data['queueCategory'] && !(typeof data['queueCategory'] === 'string' || data['queueCategory'] instanceof String)) {
            throw new Error("Expected the field `queueCategory` to be a primitive type in the JSON string but got " + data['queueCategory']);
        }
        // ensure the json data is a string
        if (data['queueName'] && !(typeof data['queueName'] === 'string' || data['queueName'] instanceof String)) {
            throw new Error("Expected the field `queueName` to be a primitive type in the JSON string but got " + data['queueName']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }

        return true;
    }


}



/**
 * @member {Object.<String, String>} attributes
 */
ProjectLandingPageInfo.prototype['attributes'] = undefined;

/**
 * @member {Number} boardId
 */
ProjectLandingPageInfo.prototype['boardId'] = undefined;

/**
 * @member {String} boardName
 */
ProjectLandingPageInfo.prototype['boardName'] = undefined;

/**
 * @member {String} projectKey
 */
ProjectLandingPageInfo.prototype['projectKey'] = undefined;

/**
 * @member {String} projectType
 */
ProjectLandingPageInfo.prototype['projectType'] = undefined;

/**
 * @member {String} queueCategory
 */
ProjectLandingPageInfo.prototype['queueCategory'] = undefined;

/**
 * @member {Number} queueId
 */
ProjectLandingPageInfo.prototype['queueId'] = undefined;

/**
 * @member {String} queueName
 */
ProjectLandingPageInfo.prototype['queueName'] = undefined;

/**
 * @member {Boolean} simpleBoard
 */
ProjectLandingPageInfo.prototype['simpleBoard'] = undefined;

/**
 * @member {Boolean} simplified
 */
ProjectLandingPageInfo.prototype['simplified'] = undefined;

/**
 * @member {String} url
 */
ProjectLandingPageInfo.prototype['url'] = undefined;






export default ProjectLandingPageInfo;

