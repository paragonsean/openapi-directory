/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateWorkflowTransitionRulesDetails from './CreateWorkflowTransitionRulesDetails';
import CreateWorkflowTransitionScreenDetails from './CreateWorkflowTransitionScreenDetails';

/**
 * The CreateWorkflowTransitionDetails model module.
 * @module model/CreateWorkflowTransitionDetails
 * @version 1001.0.0-SNAPSHOT
 */
class CreateWorkflowTransitionDetails {
    /**
     * Constructs a new <code>CreateWorkflowTransitionDetails</code>.
     * The details of a workflow transition.
     * @alias module:model/CreateWorkflowTransitionDetails
     * @param name {String} The name of the transition. The maximum length is 60 characters.
     * @param to {String} The status the transition goes to.
     * @param type {module:model/CreateWorkflowTransitionDetails.TypeEnum} The type of the transition.
     */
    constructor(name, to, type) { 
        
        CreateWorkflowTransitionDetails.initialize(this, name, to, type);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name, to, type) { 
        obj['name'] = name;
        obj['to'] = to;
        obj['type'] = type;
    }

    /**
     * Constructs a <code>CreateWorkflowTransitionDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateWorkflowTransitionDetails} obj Optional instance to populate.
     * @return {module:model/CreateWorkflowTransitionDetails} The populated <code>CreateWorkflowTransitionDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateWorkflowTransitionDetails();

            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('from')) {
                obj['from'] = ApiClient.convertToType(data['from'], ['String']);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('properties')) {
                obj['properties'] = ApiClient.convertToType(data['properties'], {'String': 'String'});
            }
            if (data.hasOwnProperty('rules')) {
                obj['rules'] = ApiClient.convertToType(data['rules'], CreateWorkflowTransitionRulesDetails);
            }
            if (data.hasOwnProperty('screen')) {
                obj['screen'] = ApiClient.convertToType(data['screen'], CreateWorkflowTransitionScreenDetails);
            }
            if (data.hasOwnProperty('to')) {
                obj['to'] = ApiClient.convertToType(data['to'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateWorkflowTransitionDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateWorkflowTransitionDetails</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateWorkflowTransitionDetails.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['from'])) {
            throw new Error("Expected the field `from` to be an array in the JSON data but got " + data['from']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // validate the optional field `rules`
        if (data['rules']) { // data not null
          CreateWorkflowTransitionRulesDetails.validateJSON(data['rules']);
        }
        // validate the optional field `screen`
        if (data['screen']) { // data not null
          CreateWorkflowTransitionScreenDetails.validateJSON(data['screen']);
        }
        // ensure the json data is a string
        if (data['to'] && !(typeof data['to'] === 'string' || data['to'] instanceof String)) {
            throw new Error("Expected the field `to` to be a primitive type in the JSON string but got " + data['to']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}

CreateWorkflowTransitionDetails.RequiredProperties = ["name", "to", "type"];

/**
 * The description of the transition. The maximum length is 1000 characters.
 * @member {String} description
 */
CreateWorkflowTransitionDetails.prototype['description'] = undefined;

/**
 * The statuses the transition can start from.
 * @member {Array.<String>} from
 */
CreateWorkflowTransitionDetails.prototype['from'] = undefined;

/**
 * The name of the transition. The maximum length is 60 characters.
 * @member {String} name
 */
CreateWorkflowTransitionDetails.prototype['name'] = undefined;

/**
 * The properties of the transition.
 * @member {Object.<String, String>} properties
 */
CreateWorkflowTransitionDetails.prototype['properties'] = undefined;

/**
 * The rules of the transition.
 * @member {module:model/CreateWorkflowTransitionRulesDetails} rules
 */
CreateWorkflowTransitionDetails.prototype['rules'] = undefined;

/**
 * The screen of the transition.
 * @member {module:model/CreateWorkflowTransitionScreenDetails} screen
 */
CreateWorkflowTransitionDetails.prototype['screen'] = undefined;

/**
 * The status the transition goes to.
 * @member {String} to
 */
CreateWorkflowTransitionDetails.prototype['to'] = undefined;

/**
 * The type of the transition.
 * @member {module:model/CreateWorkflowTransitionDetails.TypeEnum} type
 */
CreateWorkflowTransitionDetails.prototype['type'] = undefined;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
CreateWorkflowTransitionDetails['TypeEnum'] = {

    /**
     * value: "global"
     * @const
     */
    "global": "global",

    /**
     * value: "initial"
     * @const
     */
    "initial": "initial",

    /**
     * value: "directed"
     * @const
     */
    "directed": "directed"
};



export default CreateWorkflowTransitionDetails;

