/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import User from './User';

/**
 * The Votes model module.
 * @module model/Votes
 * @version 1001.0.0-SNAPSHOT
 */
class Votes {
    /**
     * Constructs a new <code>Votes</code>.
     * The details of votes on an issue.
     * @alias module:model/Votes
     */
    constructor() { 
        
        Votes.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Votes</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Votes} obj Optional instance to populate.
     * @return {module:model/Votes} The populated <code>Votes</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Votes();

            if (data.hasOwnProperty('hasVoted')) {
                obj['hasVoted'] = ApiClient.convertToType(data['hasVoted'], 'Boolean');
            }
            if (data.hasOwnProperty('self')) {
                obj['self'] = ApiClient.convertToType(data['self'], 'String');
            }
            if (data.hasOwnProperty('voters')) {
                obj['voters'] = ApiClient.convertToType(data['voters'], [User]);
            }
            if (data.hasOwnProperty('votes')) {
                obj['votes'] = ApiClient.convertToType(data['votes'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Votes</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Votes</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['self'] && !(typeof data['self'] === 'string' || data['self'] instanceof String)) {
            throw new Error("Expected the field `self` to be a primitive type in the JSON string but got " + data['self']);
        }
        if (data['voters']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['voters'])) {
                throw new Error("Expected the field `voters` to be an array in the JSON data but got " + data['voters']);
            }
            // validate the optional field `voters` (array)
            for (const item of data['voters']) {
                User.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Whether the user making this request has voted on the issue.
 * @member {Boolean} hasVoted
 */
Votes.prototype['hasVoted'] = undefined;

/**
 * The URL of these issue vote details.
 * @member {String} self
 */
Votes.prototype['self'] = undefined;

/**
 * List of the users who have voted on this issue. An empty list is returned when the calling user doesn't have the *View voters and watchers* project permission.
 * @member {Array.<module:model/User>} voters
 */
Votes.prototype['voters'] = undefined;

/**
 * The number of votes on the issue.
 * @member {Number} votes
 */
Votes.prototype['votes'] = undefined;






export default Votes;

