/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import HistoryMetadataParticipant from './HistoryMetadataParticipant';

/**
 * The HistoryMetadata model module.
 * @module model/HistoryMetadata
 * @version 1001.0.0-SNAPSHOT
 */
class HistoryMetadata {
    /**
     * Constructs a new <code>HistoryMetadata</code>.
     * Details of issue history metadata.
     * @alias module:model/HistoryMetadata
     * @extends Object
     */
    constructor() { 
        
        HistoryMetadata.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>HistoryMetadata</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/HistoryMetadata} obj Optional instance to populate.
     * @return {module:model/HistoryMetadata} The populated <code>HistoryMetadata</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new HistoryMetadata();

            ApiClient.constructFromObject(data, obj, 'Object');
            

            if (data.hasOwnProperty('activityDescription')) {
                obj['activityDescription'] = ApiClient.convertToType(data['activityDescription'], 'String');
            }
            if (data.hasOwnProperty('activityDescriptionKey')) {
                obj['activityDescriptionKey'] = ApiClient.convertToType(data['activityDescriptionKey'], 'String');
            }
            if (data.hasOwnProperty('actor')) {
                obj['actor'] = ApiClient.convertToType(data['actor'], HistoryMetadataParticipant);
            }
            if (data.hasOwnProperty('cause')) {
                obj['cause'] = ApiClient.convertToType(data['cause'], HistoryMetadataParticipant);
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('descriptionKey')) {
                obj['descriptionKey'] = ApiClient.convertToType(data['descriptionKey'], 'String');
            }
            if (data.hasOwnProperty('emailDescription')) {
                obj['emailDescription'] = ApiClient.convertToType(data['emailDescription'], 'String');
            }
            if (data.hasOwnProperty('emailDescriptionKey')) {
                obj['emailDescriptionKey'] = ApiClient.convertToType(data['emailDescriptionKey'], 'String');
            }
            if (data.hasOwnProperty('extraData')) {
                obj['extraData'] = ApiClient.convertToType(data['extraData'], {'String': 'String'});
            }
            if (data.hasOwnProperty('generator')) {
                obj['generator'] = ApiClient.convertToType(data['generator'], HistoryMetadataParticipant);
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>HistoryMetadata</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>HistoryMetadata</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['activityDescription'] && !(typeof data['activityDescription'] === 'string' || data['activityDescription'] instanceof String)) {
            throw new Error("Expected the field `activityDescription` to be a primitive type in the JSON string but got " + data['activityDescription']);
        }
        // ensure the json data is a string
        if (data['activityDescriptionKey'] && !(typeof data['activityDescriptionKey'] === 'string' || data['activityDescriptionKey'] instanceof String)) {
            throw new Error("Expected the field `activityDescriptionKey` to be a primitive type in the JSON string but got " + data['activityDescriptionKey']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['descriptionKey'] && !(typeof data['descriptionKey'] === 'string' || data['descriptionKey'] instanceof String)) {
            throw new Error("Expected the field `descriptionKey` to be a primitive type in the JSON string but got " + data['descriptionKey']);
        }
        // ensure the json data is a string
        if (data['emailDescription'] && !(typeof data['emailDescription'] === 'string' || data['emailDescription'] instanceof String)) {
            throw new Error("Expected the field `emailDescription` to be a primitive type in the JSON string but got " + data['emailDescription']);
        }
        // ensure the json data is a string
        if (data['emailDescriptionKey'] && !(typeof data['emailDescriptionKey'] === 'string' || data['emailDescriptionKey'] instanceof String)) {
            throw new Error("Expected the field `emailDescriptionKey` to be a primitive type in the JSON string but got " + data['emailDescriptionKey']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}



/**
 * The activity described in the history record.
 * @member {String} activityDescription
 */
HistoryMetadata.prototype['activityDescription'] = undefined;

/**
 * The key of the activity described in the history record.
 * @member {String} activityDescriptionKey
 */
HistoryMetadata.prototype['activityDescriptionKey'] = undefined;

/**
 * Details of the user whose action created the history record.
 * @member {module:model/HistoryMetadataParticipant} actor
 */
HistoryMetadata.prototype['actor'] = undefined;

/**
 * Details of the cause that triggered the creation the history record.
 * @member {module:model/HistoryMetadataParticipant} cause
 */
HistoryMetadata.prototype['cause'] = undefined;

/**
 * The description of the history record.
 * @member {String} description
 */
HistoryMetadata.prototype['description'] = undefined;

/**
 * The description key of the history record.
 * @member {String} descriptionKey
 */
HistoryMetadata.prototype['descriptionKey'] = undefined;

/**
 * The description of the email address associated the history record.
 * @member {String} emailDescription
 */
HistoryMetadata.prototype['emailDescription'] = undefined;

/**
 * The description key of the email address associated the history record.
 * @member {String} emailDescriptionKey
 */
HistoryMetadata.prototype['emailDescriptionKey'] = undefined;

/**
 * Additional arbitrary information about the history record.
 * @member {Object.<String, String>} extraData
 */
HistoryMetadata.prototype['extraData'] = undefined;

/**
 * Details of the system that generated the history record.
 * @member {module:model/HistoryMetadataParticipant} generator
 */
HistoryMetadata.prototype['generator'] = undefined;

/**
 * The type of the history record.
 * @member {String} type
 */
HistoryMetadata.prototype['type'] = undefined;






export default HistoryMetadata;

