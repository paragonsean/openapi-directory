/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PermissionHolder from './PermissionHolder';

/**
 * The SecurityLevelMember model module.
 * @module model/SecurityLevelMember
 * @version 1001.0.0-SNAPSHOT
 */
class SecurityLevelMember {
    /**
     * Constructs a new <code>SecurityLevelMember</code>.
     * Issue security level member.
     * @alias module:model/SecurityLevelMember
     * @extends Object
     * @param holder {module:model/PermissionHolder} The user or group being granted the permission. It consists of a `type` and a type-dependent `parameter`. See [Holder object](../api-group-permission-schemes/#holder-object) in *Get all permission schemes* for more information.
     * @param id {String} The ID of the issue security level member.
     * @param issueSecurityLevelId {String} The ID of the issue security level.
     * @param issueSecuritySchemeId {String} The ID of the issue security scheme.
     */
    constructor(holder, id, issueSecurityLevelId, issueSecuritySchemeId) { 
        
        SecurityLevelMember.initialize(this, holder, id, issueSecurityLevelId, issueSecuritySchemeId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, holder, id, issueSecurityLevelId, issueSecuritySchemeId) { 
        obj['holder'] = holder;
        obj['id'] = id;
        obj['issueSecurityLevelId'] = issueSecurityLevelId;
        obj['issueSecuritySchemeId'] = issueSecuritySchemeId;
    }

    /**
     * Constructs a <code>SecurityLevelMember</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SecurityLevelMember} obj Optional instance to populate.
     * @return {module:model/SecurityLevelMember} The populated <code>SecurityLevelMember</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SecurityLevelMember();

            ApiClient.constructFromObject(data, obj, 'Object');
            

            if (data.hasOwnProperty('holder')) {
                obj['holder'] = ApiClient.convertToType(data['holder'], PermissionHolder);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('issueSecurityLevelId')) {
                obj['issueSecurityLevelId'] = ApiClient.convertToType(data['issueSecurityLevelId'], 'String');
            }
            if (data.hasOwnProperty('issueSecuritySchemeId')) {
                obj['issueSecuritySchemeId'] = ApiClient.convertToType(data['issueSecuritySchemeId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SecurityLevelMember</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SecurityLevelMember</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of SecurityLevelMember.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `holder`
        if (data['holder']) { // data not null
          PermissionHolder.validateJSON(data['holder']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['issueSecurityLevelId'] && !(typeof data['issueSecurityLevelId'] === 'string' || data['issueSecurityLevelId'] instanceof String)) {
            throw new Error("Expected the field `issueSecurityLevelId` to be a primitive type in the JSON string but got " + data['issueSecurityLevelId']);
        }
        // ensure the json data is a string
        if (data['issueSecuritySchemeId'] && !(typeof data['issueSecuritySchemeId'] === 'string' || data['issueSecuritySchemeId'] instanceof String)) {
            throw new Error("Expected the field `issueSecuritySchemeId` to be a primitive type in the JSON string but got " + data['issueSecuritySchemeId']);
        }

        return true;
    }


}

SecurityLevelMember.RequiredProperties = ["holder", "id", "issueSecurityLevelId", "issueSecuritySchemeId"];

/**
 * The user or group being granted the permission. It consists of a `type` and a type-dependent `parameter`. See [Holder object](../api-group-permission-schemes/#holder-object) in *Get all permission schemes* for more information.
 * @member {module:model/PermissionHolder} holder
 */
SecurityLevelMember.prototype['holder'] = undefined;

/**
 * The ID of the issue security level member.
 * @member {String} id
 */
SecurityLevelMember.prototype['id'] = undefined;

/**
 * The ID of the issue security level.
 * @member {String} issueSecurityLevelId
 */
SecurityLevelMember.prototype['issueSecurityLevelId'] = undefined;

/**
 * The ID of the issue security scheme.
 * @member {String} issueSecuritySchemeId
 */
SecurityLevelMember.prototype['issueSecuritySchemeId'] = undefined;






export default SecurityLevelMember;

