/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The VersionUsageInCustomField model module.
 * @module model/VersionUsageInCustomField
 * @version 1001.0.0-SNAPSHOT
 */
class VersionUsageInCustomField {
    /**
     * Constructs a new <code>VersionUsageInCustomField</code>.
     * List of custom fields using the version.
     * @alias module:model/VersionUsageInCustomField
     */
    constructor() { 
        
        VersionUsageInCustomField.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>VersionUsageInCustomField</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VersionUsageInCustomField} obj Optional instance to populate.
     * @return {module:model/VersionUsageInCustomField} The populated <code>VersionUsageInCustomField</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VersionUsageInCustomField();

            if (data.hasOwnProperty('customFieldId')) {
                obj['customFieldId'] = ApiClient.convertToType(data['customFieldId'], 'Number');
            }
            if (data.hasOwnProperty('fieldName')) {
                obj['fieldName'] = ApiClient.convertToType(data['fieldName'], 'String');
            }
            if (data.hasOwnProperty('issueCountWithVersionInCustomField')) {
                obj['issueCountWithVersionInCustomField'] = ApiClient.convertToType(data['issueCountWithVersionInCustomField'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>VersionUsageInCustomField</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>VersionUsageInCustomField</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['fieldName'] && !(typeof data['fieldName'] === 'string' || data['fieldName'] instanceof String)) {
            throw new Error("Expected the field `fieldName` to be a primitive type in the JSON string but got " + data['fieldName']);
        }

        return true;
    }


}



/**
 * The ID of the custom field.
 * @member {Number} customFieldId
 */
VersionUsageInCustomField.prototype['customFieldId'] = undefined;

/**
 * The name of the custom field.
 * @member {String} fieldName
 */
VersionUsageInCustomField.prototype['fieldName'] = undefined;

/**
 * Count of the issues where the custom field contains the version.
 * @member {Number} issueCountWithVersionInCustomField
 */
VersionUsageInCustomField.prototype['issueCountWithVersionInCustomField'] = undefined;






export default VersionUsageInCustomField;

