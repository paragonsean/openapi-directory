/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ActorsMap model module.
 * @module model/ActorsMap
 * @version 1001.0.0-SNAPSHOT
 */
class ActorsMap {
    /**
     * Constructs a new <code>ActorsMap</code>.
     * @alias module:model/ActorsMap
     */
    constructor() { 
        
        ActorsMap.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ActorsMap</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ActorsMap} obj Optional instance to populate.
     * @return {module:model/ActorsMap} The populated <code>ActorsMap</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ActorsMap();

            if (data.hasOwnProperty('group')) {
                obj['group'] = ApiClient.convertToType(data['group'], ['String']);
            }
            if (data.hasOwnProperty('groupId')) {
                obj['groupId'] = ApiClient.convertToType(data['groupId'], ['String']);
            }
            if (data.hasOwnProperty('user')) {
                obj['user'] = ApiClient.convertToType(data['user'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ActorsMap</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ActorsMap</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['group'])) {
            throw new Error("Expected the field `group` to be an array in the JSON data but got " + data['group']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['groupId'])) {
            throw new Error("Expected the field `groupId` to be an array in the JSON data but got " + data['groupId']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['user'])) {
            throw new Error("Expected the field `user` to be an array in the JSON data but got " + data['user']);
        }

        return true;
    }


}



/**
 * The name of the group to add. This parameter cannot be used with the `groupId` parameter. As a group's name can change, use of `groupId` is recommended.
 * @member {Array.<String>} group
 */
ActorsMap.prototype['group'] = undefined;

/**
 * The ID of the group to add. This parameter cannot be used with the `group` parameter.
 * @member {Array.<String>} groupId
 */
ActorsMap.prototype['groupId'] = undefined;

/**
 * The user account ID of the user to add.
 * @member {Array.<String>} user
 */
ActorsMap.prototype['user'] = undefined;






export default ActorsMap;

