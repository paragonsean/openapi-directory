/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CustomFieldConfigurations from '../model/CustomFieldConfigurations';
import PageBeanContextualConfiguration from '../model/PageBeanContextualConfiguration';

/**
* IssueCustomFieldConfigurationApps service.
* @module api/IssueCustomFieldConfigurationAppsApi
* @version 1001.0.0-SNAPSHOT
*/
export default class IssueCustomFieldConfigurationAppsApi {

    /**
    * Constructs a new IssueCustomFieldConfigurationAppsApi. 
    * @alias module:api/IssueCustomFieldConfigurationAppsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getCustomFieldConfiguration operation.
     * @callback module:api/IssueCustomFieldConfigurationAppsApi~getCustomFieldConfigurationCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PageBeanContextualConfiguration} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get custom field configurations
     * Returns a [paginated](#pagination) list of configurations for a custom field created by a [Forge app](https://developer.atlassian.com/platform/forge/).  The result can be filtered by one of these criteria:   *  `id`.  *  `fieldContextId`.  *  `issueId`.  *  `projectKeyOrId` and `issueTypeId`.  Otherwise, all configurations are returned.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg). Jira permissions are not required for the Forge app that created the custom field.
     * @param {String} fieldIdOrKey The ID or key of the custom field, for example `customfield_10000`.
     * @param {Object} opts Optional parameters
     * @param {Array.<Number>} [id] The list of configuration IDs. To include multiple configurations, separate IDs with an ampersand: `id=10000&id=10001`. Can't be provided with `fieldContextId`, `issueId`, `projectKeyOrId`, or `issueTypeId`.
     * @param {Array.<Number>} [fieldContextId] The list of field context IDs. To include multiple field contexts, separate IDs with an ampersand: `fieldContextId=10000&fieldContextId=10001`. Can't be provided with `id`, `issueId`, `projectKeyOrId`, or `issueTypeId`.
     * @param {Number} [issueId] The ID of the issue to filter results by. If the issue doesn't exist, an empty list is returned. Can't be provided with `projectKeyOrId`, or `issueTypeId`.
     * @param {String} [projectKeyOrId] The ID or key of the project to filter results by. Must be provided with `issueTypeId`. Can't be provided with `issueId`.
     * @param {String} [issueTypeId] The ID of the issue type to filter results by. Must be provided with `projectKeyOrId`. Can't be provided with `issueId`.
     * @param {Number} [startAt = 0)] The index of the first item to return in a page of results (page offset).
     * @param {Number} [maxResults = 100)] The maximum number of items to return per page.
     * @param {module:api/IssueCustomFieldConfigurationAppsApi~getCustomFieldConfigurationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PageBeanContextualConfiguration}
     */
    getCustomFieldConfiguration(fieldIdOrKey, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'fieldIdOrKey' is set
      if (fieldIdOrKey === undefined || fieldIdOrKey === null) {
        throw new Error("Missing the required parameter 'fieldIdOrKey' when calling getCustomFieldConfiguration");
      }

      let pathParams = {
        'fieldIdOrKey': fieldIdOrKey
      };
      let queryParams = {
        'id': this.apiClient.buildCollectionParam(opts['id'], 'multi'),
        'fieldContextId': this.apiClient.buildCollectionParam(opts['fieldContextId'], 'multi'),
        'issueId': opts['issueId'],
        'projectKeyOrId': opts['projectKeyOrId'],
        'issueTypeId': opts['issueTypeId'],
        'startAt': opts['startAt'],
        'maxResults': opts['maxResults']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['OAuth2', 'basicAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PageBeanContextualConfiguration;
      return this.apiClient.callApi(
        '/rest/api/3/app/field/{fieldIdOrKey}/context/configuration', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateCustomFieldConfiguration operation.
     * @callback module:api/IssueCustomFieldConfigurationAppsApi~updateCustomFieldConfigurationCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update custom field configurations
     * Update the configuration for contexts of a custom field created by a [Forge app](https://developer.atlassian.com/platform/forge/).  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg). Jira permissions are not required for the Forge app that created the custom field.
     * @param {String} fieldIdOrKey The ID or key of the custom field, for example `customfield_10000`.
     * @param {module:model/CustomFieldConfigurations} customFieldConfigurations 
     * @param {module:api/IssueCustomFieldConfigurationAppsApi~updateCustomFieldConfigurationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    updateCustomFieldConfiguration(fieldIdOrKey, customFieldConfigurations, callback) {
      let postBody = customFieldConfigurations;
      // verify the required parameter 'fieldIdOrKey' is set
      if (fieldIdOrKey === undefined || fieldIdOrKey === null) {
        throw new Error("Missing the required parameter 'fieldIdOrKey' when calling updateCustomFieldConfiguration");
      }
      // verify the required parameter 'customFieldConfigurations' is set
      if (customFieldConfigurations === undefined || customFieldConfigurations === null) {
        throw new Error("Missing the required parameter 'customFieldConfigurations' when calling updateCustomFieldConfiguration");
      }

      let pathParams = {
        'fieldIdOrKey': fieldIdOrKey
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['OAuth2', 'basicAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/rest/api/3/app/field/{fieldIdOrKey}/context/configuration', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
