/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import TimeTrackingConfiguration from '../model/TimeTrackingConfiguration';
import TimeTrackingProvider from '../model/TimeTrackingProvider';

/**
* TimeTracking service.
* @module api/TimeTrackingApi
* @version 1001.0.0-SNAPSHOT
*/
export default class TimeTrackingApi {

    /**
    * Constructs a new TimeTrackingApi. 
    * @alias module:api/TimeTrackingApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getAvailableTimeTrackingImplementations operation.
     * @callback module:api/TimeTrackingApi~getAvailableTimeTrackingImplementationsCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/TimeTrackingProvider>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get all time tracking providers
     * Returns all time tracking providers. By default, Jira only has one time tracking provider: *JIRA provided time tracking*. However, you can install other time tracking providers via apps from the Atlassian Marketplace. For more information on time tracking providers, see the documentation for the [ Time Tracking Provider](https://developer.atlassian.com/cloud/jira/platform/modules/time-tracking-provider/) module.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     * @param {module:api/TimeTrackingApi~getAvailableTimeTrackingImplementationsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/TimeTrackingProvider>}
     */
    getAvailableTimeTrackingImplementations(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['OAuth2', 'basicAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [TimeTrackingProvider];
      return this.apiClient.callApi(
        '/rest/api/3/configuration/timetracking/list', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getSelectedTimeTrackingImplementation operation.
     * @callback module:api/TimeTrackingApi~getSelectedTimeTrackingImplementationCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TimeTrackingProvider} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get selected time tracking provider
     * Returns the time tracking provider that is currently selected. Note that if time tracking is disabled, then a successful but empty response is returned.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     * @param {module:api/TimeTrackingApi~getSelectedTimeTrackingImplementationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TimeTrackingProvider}
     */
    getSelectedTimeTrackingImplementation(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['OAuth2', 'basicAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = TimeTrackingProvider;
      return this.apiClient.callApi(
        '/rest/api/3/configuration/timetracking', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getSharedTimeTrackingConfiguration operation.
     * @callback module:api/TimeTrackingApi~getSharedTimeTrackingConfigurationCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TimeTrackingConfiguration} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get time tracking settings
     * Returns the time tracking settings. This includes settings such as the time format, default time unit, and others. For more information, see [Configuring time tracking](https://confluence.atlassian.com/x/qoXKM).  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     * @param {module:api/TimeTrackingApi~getSharedTimeTrackingConfigurationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TimeTrackingConfiguration}
     */
    getSharedTimeTrackingConfiguration(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['OAuth2', 'basicAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = TimeTrackingConfiguration;
      return this.apiClient.callApi(
        '/rest/api/3/configuration/timetracking/options', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the selectTimeTrackingImplementation operation.
     * @callback module:api/TimeTrackingApi~selectTimeTrackingImplementationCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Select time tracking provider
     * Selects a time tracking provider.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     * @param {module:model/TimeTrackingProvider} timeTrackingProvider 
     * @param {module:api/TimeTrackingApi~selectTimeTrackingImplementationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    selectTimeTrackingImplementation(timeTrackingProvider, callback) {
      let postBody = timeTrackingProvider;
      // verify the required parameter 'timeTrackingProvider' is set
      if (timeTrackingProvider === undefined || timeTrackingProvider === null) {
        throw new Error("Missing the required parameter 'timeTrackingProvider' when calling selectTimeTrackingImplementation");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['OAuth2', 'basicAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/rest/api/3/configuration/timetracking', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the setSharedTimeTrackingConfiguration operation.
     * @callback module:api/TimeTrackingApi~setSharedTimeTrackingConfigurationCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TimeTrackingConfiguration} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Set time tracking settings
     * Sets the time tracking settings.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     * @param {module:model/TimeTrackingConfiguration} timeTrackingConfiguration 
     * @param {module:api/TimeTrackingApi~setSharedTimeTrackingConfigurationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TimeTrackingConfiguration}
     */
    setSharedTimeTrackingConfiguration(timeTrackingConfiguration, callback) {
      let postBody = timeTrackingConfiguration;
      // verify the required parameter 'timeTrackingConfiguration' is set
      if (timeTrackingConfiguration === undefined || timeTrackingConfiguration === null) {
        throw new Error("Missing the required parameter 'timeTrackingConfiguration' when calling setSharedTimeTrackingConfiguration");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['OAuth2', 'basicAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = TimeTrackingConfiguration;
      return this.apiClient.callApi(
        '/rest/api/3/configuration/timetracking/options', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
