/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ConnectCustomFieldValues from '../model/ConnectCustomFieldValues';
import EntityPropertyDetails from '../model/EntityPropertyDetails';
import WorkflowRulesSearch from '../model/WorkflowRulesSearch';
import WorkflowRulesSearchDetails from '../model/WorkflowRulesSearchDetails';

/**
* AppMigration service.
* @module api/AppMigrationApi
* @version 1001.0.0-SNAPSHOT
*/
export default class AppMigrationApi {

    /**
    * Constructs a new AppMigrationApi. 
    * @alias module:api/AppMigrationApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the appIssueFieldValueUpdateResourceUpdateIssueFieldsPut operation.
     * @callback module:api/AppMigrationApi~appIssueFieldValueUpdateResourceUpdateIssueFieldsPutCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Bulk update custom field value
     * Updates the value of a custom field added by Connect apps on one or more issues. The values of up to 200 custom fields can be updated.  **[Permissions](#permissions) required:** Only Connect apps can make this request.
     * @param {String} atlassianTransferId The ID of the transfer.
     * @param {module:model/ConnectCustomFieldValues} connectCustomFieldValues 
     * @param {module:api/AppMigrationApi~appIssueFieldValueUpdateResourceUpdateIssueFieldsPutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    appIssueFieldValueUpdateResourceUpdateIssueFieldsPut(atlassianTransferId, connectCustomFieldValues, callback) {
      let postBody = connectCustomFieldValues;
      // verify the required parameter 'atlassianTransferId' is set
      if (atlassianTransferId === undefined || atlassianTransferId === null) {
        throw new Error("Missing the required parameter 'atlassianTransferId' when calling appIssueFieldValueUpdateResourceUpdateIssueFieldsPut");
      }
      // verify the required parameter 'connectCustomFieldValues' is set
      if (connectCustomFieldValues === undefined || connectCustomFieldValues === null) {
        throw new Error("Missing the required parameter 'connectCustomFieldValues' when calling appIssueFieldValueUpdateResourceUpdateIssueFieldsPut");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'Atlassian-Transfer-Id': atlassianTransferId
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/rest/atlassian-connect/1/migration/field', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the migrationResourceUpdateEntityPropertiesValuePut operation.
     * @callback module:api/AppMigrationApi~migrationResourceUpdateEntityPropertiesValuePutCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Bulk update entity properties
     * Updates the values of multiple entity properties for an object, up to 50 updates per request. This operation is for use by Connect apps during app migration.
     * @param {String} atlassianTransferId The app migration transfer ID.
     * @param {module:model/String} entityType The type indicating the object that contains the entity properties.
     * @param {Array.<module:model/EntityPropertyDetails>} entityPropertyDetails 
     * @param {module:api/AppMigrationApi~migrationResourceUpdateEntityPropertiesValuePutCallback} callback The callback function, accepting three arguments: error, data, response
     */
    migrationResourceUpdateEntityPropertiesValuePut(atlassianTransferId, entityType, entityPropertyDetails, callback) {
      let postBody = entityPropertyDetails;
      // verify the required parameter 'atlassianTransferId' is set
      if (atlassianTransferId === undefined || atlassianTransferId === null) {
        throw new Error("Missing the required parameter 'atlassianTransferId' when calling migrationResourceUpdateEntityPropertiesValuePut");
      }
      // verify the required parameter 'entityType' is set
      if (entityType === undefined || entityType === null) {
        throw new Error("Missing the required parameter 'entityType' when calling migrationResourceUpdateEntityPropertiesValuePut");
      }
      // verify the required parameter 'entityPropertyDetails' is set
      if (entityPropertyDetails === undefined || entityPropertyDetails === null) {
        throw new Error("Missing the required parameter 'entityPropertyDetails' when calling migrationResourceUpdateEntityPropertiesValuePut");
      }

      let pathParams = {
        'entityType': entityType
      };
      let queryParams = {
      };
      let headerParams = {
        'Atlassian-Transfer-Id': atlassianTransferId
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/rest/atlassian-connect/1/migration/properties/{entityType}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the migrationResourceWorkflowRuleSearchPost operation.
     * @callback module:api/AppMigrationApi~migrationResourceWorkflowRuleSearchPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/WorkflowRulesSearchDetails} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get workflow transition rule configurations
     * Returns configurations for workflow transition rules migrated from server to cloud and owned by the calling Connect app.
     * @param {String} atlassianTransferId The app migration transfer ID.
     * @param {module:model/WorkflowRulesSearch} workflowRulesSearch 
     * @param {module:api/AppMigrationApi~migrationResourceWorkflowRuleSearchPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/WorkflowRulesSearchDetails}
     */
    migrationResourceWorkflowRuleSearchPost(atlassianTransferId, workflowRulesSearch, callback) {
      let postBody = workflowRulesSearch;
      // verify the required parameter 'atlassianTransferId' is set
      if (atlassianTransferId === undefined || atlassianTransferId === null) {
        throw new Error("Missing the required parameter 'atlassianTransferId' when calling migrationResourceWorkflowRuleSearchPost");
      }
      // verify the required parameter 'workflowRulesSearch' is set
      if (workflowRulesSearch === undefined || workflowRulesSearch === null) {
        throw new Error("Missing the required parameter 'workflowRulesSearch' when calling migrationResourceWorkflowRuleSearchPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'Atlassian-Transfer-Id': atlassianTransferId
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = WorkflowRulesSearchDetails;
      return this.apiClient.callApi(
        '/rest/atlassian-connect/1/migration/workflow/rule/search', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
