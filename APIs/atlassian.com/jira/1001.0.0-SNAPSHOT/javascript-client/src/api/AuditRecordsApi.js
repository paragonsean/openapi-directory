/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AuditRecords from '../model/AuditRecords';

/**
* AuditRecords service.
* @module api/AuditRecordsApi
* @version 1001.0.0-SNAPSHOT
*/
export default class AuditRecordsApi {

    /**
    * Constructs a new AuditRecordsApi. 
    * @alias module:api/AuditRecordsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getAuditRecords operation.
     * @callback module:api/AuditRecordsApi~getAuditRecordsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AuditRecords} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get audit records
     * Returns a list of audit records. The list can be filtered to include items:   *  where each item in `filter` has at least one match in any of these fields:           *  `summary`      *  `category`      *  `eventSource`      *  `objectItem.name` If the object is a user, account ID is available to filter.      *  `objectItem.parentName`      *  `objectItem.typeName`      *  `changedValues.changedFrom`      *  `changedValues.changedTo`      *  `remoteAddress`          For example, if `filter` contains *man ed*, an audit record containing `summary\": \"User added to group\"` and `\"category\": \"group management\"` is returned.  *  created on or after a date and time.  *  created or or before a date and time.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     * @param {Object} opts Optional parameters
     * @param {Number} [offset = 0)] The number of records to skip before returning the first result.
     * @param {Number} [limit = 1000)] The maximum number of results to return.
     * @param {String} [filter] The strings to match with audit field content, space separated.
     * @param {Date} [from] The date and time on or after which returned audit records must have been created. If `to` is provided `from` must be before `to` or no audit records are returned.
     * @param {Date} [to] The date and time on or before which returned audit results must have been created. If `from` is provided `to` must be after `from` or no audit records are returned.
     * @param {module:api/AuditRecordsApi~getAuditRecordsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AuditRecords}
     */
    getAuditRecords(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'offset': opts['offset'],
        'limit': opts['limit'],
        'filter': opts['filter'],
        'from': opts['from'],
        'to': opts['to']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['OAuth2', 'basicAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AuditRecords;
      return this.apiClient.callApi(
        '/rest/api/3/auditing/record', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
