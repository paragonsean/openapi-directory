/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import LicenseMetric from '../model/LicenseMetric';

/**
* LicenseMetrics service.
* @module api/LicenseMetricsApi
* @version 1001.0.0-SNAPSHOT
*/
export default class LicenseMetricsApi {

    /**
    * Constructs a new LicenseMetricsApi. 
    * @alias module:api/LicenseMetricsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getApproximateApplicationLicenseCount operation.
     * @callback module:api/LicenseMetricsApi~getApproximateApplicationLicenseCountCallback
     * @param {String} error Error message, if any.
     * @param {module:model/LicenseMetric} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get approximate application license count
     * Returns the total approximate user account for a specific `jira licence application key`. Please note this information is cached with a 7-day lifecycle and could be stale at the time of call.  #### Application Key ####  An application key represents a specific version of Jira. See \\{@link ApplicationKey\\} for details  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     * @param {String} applicationKey 
     * @param {module:api/LicenseMetricsApi~getApproximateApplicationLicenseCountCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/LicenseMetric}
     */
    getApproximateApplicationLicenseCount(applicationKey, callback) {
      let postBody = null;
      // verify the required parameter 'applicationKey' is set
      if (applicationKey === undefined || applicationKey === null) {
        throw new Error("Missing the required parameter 'applicationKey' when calling getApproximateApplicationLicenseCount");
      }

      let pathParams = {
        'applicationKey': applicationKey
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['OAuth2', 'basicAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = LicenseMetric;
      return this.apiClient.callApi(
        '/rest/api/3/license/approximateLicenseCount/product/{applicationKey}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getApproximateLicenseCount operation.
     * @callback module:api/LicenseMetricsApi~getApproximateLicenseCountCallback
     * @param {String} error Error message, if any.
     * @param {module:model/LicenseMetric} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get approximate license count
     * Returns the total approximate user account across all jira licenced application keys. Please note this information is cached with a 7-day lifecycle and could be stale at the time of call.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     * @param {module:api/LicenseMetricsApi~getApproximateLicenseCountCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/LicenseMetric}
     */
    getApproximateLicenseCount(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['OAuth2', 'basicAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = LicenseMetric;
      return this.apiClient.callApi(
        '/rest/api/3/license/approximateLicenseCount', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
