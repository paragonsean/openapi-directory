/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ColumnItem from '../model/ColumnItem';

/**
* IssueNavigatorSettings service.
* @module api/IssueNavigatorSettingsApi
* @version 1001.0.0-SNAPSHOT
*/
export default class IssueNavigatorSettingsApi {

    /**
    * Constructs a new IssueNavigatorSettingsApi. 
    * @alias module:api/IssueNavigatorSettingsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getIssueNavigatorDefaultColumns operation.
     * @callback module:api/IssueNavigatorSettingsApi~getIssueNavigatorDefaultColumnsCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/ColumnItem>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get issue navigator default columns
     * Returns the default issue navigator columns.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     * @param {module:api/IssueNavigatorSettingsApi~getIssueNavigatorDefaultColumnsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/ColumnItem>}
     */
    getIssueNavigatorDefaultColumns(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [ColumnItem];
      return this.apiClient.callApi(
        '/rest/api/3/settings/columns', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the setIssueNavigatorDefaultColumns operation.
     * @callback module:api/IssueNavigatorSettingsApi~setIssueNavigatorDefaultColumnsCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Set issue navigator default columns
     * Sets the default issue navigator columns.  The `columns` parameter accepts a navigable field value and is expressed as HTML form data. To specify multiple columns, pass multiple `columns` parameters. For example, in curl:  `curl -X PUT -d columns=summary -d columns=description https://your-domain.atlassian.net/rest/api/3/settings/columns`  If no column details are sent, then all default columns are removed.  A navigable field is one that can be used as a column on the issue navigator. Find details of navigable issue columns using [Get fields](#api-rest-api-3-field-get).  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     * @param {Object} opts Optional parameters
     * @param {Array.<String>} [requestBody] A navigable field value.
     * @param {module:api/IssueNavigatorSettingsApi~setIssueNavigatorDefaultColumnsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    setIssueNavigatorDefaultColumns(opts, callback) {
      opts = opts || {};
      let postBody = opts['requestBody'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth'];
      let contentTypes = ['multipart/form-data'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/rest/api/3/settings/columns', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
