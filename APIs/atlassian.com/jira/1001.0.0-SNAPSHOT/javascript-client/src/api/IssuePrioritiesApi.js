/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CreatePriorityDetails from '../model/CreatePriorityDetails';
import ErrorCollection from '../model/ErrorCollection';
import PageBeanPriority from '../model/PageBeanPriority';
import Priority from '../model/Priority';
import PriorityId from '../model/PriorityId';
import ReorderIssuePriorities from '../model/ReorderIssuePriorities';
import SetDefaultPriorityRequest from '../model/SetDefaultPriorityRequest';
import TaskProgressBeanObject from '../model/TaskProgressBeanObject';
import UpdatePriorityDetails from '../model/UpdatePriorityDetails';

/**
* IssuePriorities service.
* @module api/IssuePrioritiesApi
* @version 1001.0.0-SNAPSHOT
*/
export default class IssuePrioritiesApi {

    /**
    * Constructs a new IssuePrioritiesApi. 
    * @alias module:api/IssuePrioritiesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createPriority operation.
     * @callback module:api/IssuePrioritiesApi~createPriorityCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PriorityId} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create priority
     * Creates an issue priority.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     * @param {module:model/CreatePriorityDetails} createPriorityDetails 
     * @param {module:api/IssuePrioritiesApi~createPriorityCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PriorityId}
     */
    createPriority(createPriorityDetails, callback) {
      let postBody = createPriorityDetails;
      // verify the required parameter 'createPriorityDetails' is set
      if (createPriorityDetails === undefined || createPriorityDetails === null) {
        throw new Error("Missing the required parameter 'createPriorityDetails' when calling createPriority");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['OAuth2', 'basicAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = PriorityId;
      return this.apiClient.callApi(
        '/rest/api/3/priority', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deletePriority operation.
     * @callback module:api/IssuePrioritiesApi~deletePriorityCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete priority
     * Deletes an issue priority.  This operation is [asynchronous](#async). Follow the `location` link in the response to determine the status of the task and use [Get task](#api-rest-api-3-task-taskId-get) to obtain subsequent updates.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     * @param {String} id The ID of the issue priority.
     * @param {String} replaceWith The ID of the issue priority that will replace the currently selected resolution.
     * @param {module:api/IssuePrioritiesApi~deletePriorityCallback} callback The callback function, accepting three arguments: error, data, response
     */
    deletePriority(id, replaceWith, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling deletePriority");
      }
      // verify the required parameter 'replaceWith' is set
      if (replaceWith === undefined || replaceWith === null) {
        throw new Error("Missing the required parameter 'replaceWith' when calling deletePriority");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'replaceWith': replaceWith
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['OAuth2', 'basicAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/rest/api/3/priority/{id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getPriorities operation.
     * @callback module:api/IssuePrioritiesApi~getPrioritiesCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/Priority>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get priorities
     * Returns the list of all issue priorities.  **[Permissions](#permissions) required:** Permission to access Jira.
     * @param {module:api/IssuePrioritiesApi~getPrioritiesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/Priority>}
     */
    getPriorities(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['OAuth2', 'basicAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [Priority];
      return this.apiClient.callApi(
        '/rest/api/3/priority', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getPriority operation.
     * @callback module:api/IssuePrioritiesApi~getPriorityCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Priority} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get priority
     * Returns an issue priority.  **[Permissions](#permissions) required:** Permission to access Jira.
     * @param {String} id The ID of the issue priority.
     * @param {module:api/IssuePrioritiesApi~getPriorityCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Priority}
     */
    getPriority(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling getPriority");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['OAuth2', 'basicAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Priority;
      return this.apiClient.callApi(
        '/rest/api/3/priority/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the movePriorities operation.
     * @callback module:api/IssuePrioritiesApi~movePrioritiesCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Move priorities
     * Changes the order of issue priorities.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     * @param {module:model/ReorderIssuePriorities} reorderIssuePriorities 
     * @param {module:api/IssuePrioritiesApi~movePrioritiesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    movePriorities(reorderIssuePriorities, callback) {
      let postBody = reorderIssuePriorities;
      // verify the required parameter 'reorderIssuePriorities' is set
      if (reorderIssuePriorities === undefined || reorderIssuePriorities === null) {
        throw new Error("Missing the required parameter 'reorderIssuePriorities' when calling movePriorities");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['OAuth2', 'basicAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/rest/api/3/priority/move', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the searchPriorities operation.
     * @callback module:api/IssuePrioritiesApi~searchPrioritiesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PageBeanPriority} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Search priorities
     * Returns a [paginated](#pagination) list of priorities. The list can contain all priorities or a subset determined by any combination of these criteria:   *  a list of priority IDs. Any invalid priority IDs are ignored.  *  whether the field configuration is a default. This returns priorities from company-managed (classic) projects only, as there is no concept of default priorities in team-managed projects.  **[Permissions](#permissions) required:** Permission to access Jira.
     * @param {Object} opts Optional parameters
     * @param {String} [startAt = '0')] The index of the first item to return in a page of results (page offset).
     * @param {String} [maxResults = '50')] The maximum number of items to return per page.
     * @param {Array.<String>} [id] The list of priority IDs. To include multiple IDs, provide an ampersand-separated list. For example, `id=2&id=3`.
     * @param {Boolean} [onlyDefault = false)] Whether only the default priority is returned.
     * @param {module:api/IssuePrioritiesApi~searchPrioritiesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PageBeanPriority}
     */
    searchPriorities(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'startAt': opts['startAt'],
        'maxResults': opts['maxResults'],
        'id': this.apiClient.buildCollectionParam(opts['id'], 'multi'),
        'onlyDefault': opts['onlyDefault']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['OAuth2', 'basicAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PageBeanPriority;
      return this.apiClient.callApi(
        '/rest/api/3/priority/search', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the setDefaultPriority operation.
     * @callback module:api/IssuePrioritiesApi~setDefaultPriorityCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Set default priority
     * Sets default issue priority.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     * @param {module:model/SetDefaultPriorityRequest} setDefaultPriorityRequest 
     * @param {module:api/IssuePrioritiesApi~setDefaultPriorityCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    setDefaultPriority(setDefaultPriorityRequest, callback) {
      let postBody = setDefaultPriorityRequest;
      // verify the required parameter 'setDefaultPriorityRequest' is set
      if (setDefaultPriorityRequest === undefined || setDefaultPriorityRequest === null) {
        throw new Error("Missing the required parameter 'setDefaultPriorityRequest' when calling setDefaultPriority");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['OAuth2', 'basicAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/rest/api/3/priority/default', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updatePriority operation.
     * @callback module:api/IssuePrioritiesApi~updatePriorityCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update priority
     * Updates an issue priority.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     * @param {String} id The ID of the issue priority.
     * @param {module:model/UpdatePriorityDetails} updatePriorityDetails 
     * @param {module:api/IssuePrioritiesApi~updatePriorityCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    updatePriority(id, updatePriorityDetails, callback) {
      let postBody = updatePriorityDetails;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling updatePriority");
      }
      // verify the required parameter 'updatePriorityDetails' is set
      if (updatePriorityDetails === undefined || updatePriorityDetails === null) {
        throw new Error("Missing the required parameter 'updatePriorityDetails' when calling updatePriority");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['OAuth2', 'basicAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/rest/api/3/priority/{id}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
