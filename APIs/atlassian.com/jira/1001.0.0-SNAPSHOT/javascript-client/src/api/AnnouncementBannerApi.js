/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AnnouncementBannerConfiguration from '../model/AnnouncementBannerConfiguration';
import AnnouncementBannerConfigurationUpdate from '../model/AnnouncementBannerConfigurationUpdate';
import ErrorCollection from '../model/ErrorCollection';

/**
* AnnouncementBanner service.
* @module api/AnnouncementBannerApi
* @version 1001.0.0-SNAPSHOT
*/
export default class AnnouncementBannerApi {

    /**
    * Constructs a new AnnouncementBannerApi. 
    * @alias module:api/AnnouncementBannerApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getBanner operation.
     * @callback module:api/AnnouncementBannerApi~getBannerCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AnnouncementBannerConfiguration} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get announcement banner configuration
     * Returns the current announcement banner configuration.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     * @param {module:api/AnnouncementBannerApi~getBannerCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AnnouncementBannerConfiguration}
     */
    getBanner(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['OAuth2', 'basicAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AnnouncementBannerConfiguration;
      return this.apiClient.callApi(
        '/rest/api/3/announcementBanner', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the setBanner operation.
     * @callback module:api/AnnouncementBannerApi~setBannerCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update announcement banner configuration
     * Updates the announcement banner configuration.  **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
     * @param {module:model/AnnouncementBannerConfigurationUpdate} announcementBannerConfigurationUpdate 
     * @param {module:api/AnnouncementBannerApi~setBannerCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    setBanner(announcementBannerConfigurationUpdate, callback) {
      let postBody = announcementBannerConfigurationUpdate;
      // verify the required parameter 'announcementBannerConfigurationUpdate' is set
      if (announcementBannerConfigurationUpdate === undefined || announcementBannerConfigurationUpdate === null) {
        throw new Error("Missing the required parameter 'announcementBannerConfigurationUpdate' when calling setBanner");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['OAuth2', 'basicAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/rest/api/3/announcementBanner', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
