/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ErrorCollection from '../model/ErrorCollection';
import PageBeanWorkflowTransitionRules from '../model/PageBeanWorkflowTransitionRules';
import WorkflowTransitionRulesUpdate from '../model/WorkflowTransitionRulesUpdate';
import WorkflowTransitionRulesUpdateErrors from '../model/WorkflowTransitionRulesUpdateErrors';
import WorkflowsWithTransitionRulesDetails from '../model/WorkflowsWithTransitionRulesDetails';

/**
* WorkflowTransitionRules service.
* @module api/WorkflowTransitionRulesApi
* @version 1001.0.0-SNAPSHOT
*/
export default class WorkflowTransitionRulesApi {

    /**
    * Constructs a new WorkflowTransitionRulesApi. 
    * @alias module:api/WorkflowTransitionRulesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the deleteWorkflowTransitionRuleConfigurations operation.
     * @callback module:api/WorkflowTransitionRulesApi~deleteWorkflowTransitionRuleConfigurationsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/WorkflowTransitionRulesUpdateErrors} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete workflow transition rule configurations
     * Deletes workflow transition rules from one or more workflows. These rule types are supported:   *  [post functions](https://developer.atlassian.com/cloud/jira/platform/modules/workflow-post-function/)  *  [conditions](https://developer.atlassian.com/cloud/jira/platform/modules/workflow-condition/)  *  [validators](https://developer.atlassian.com/cloud/jira/platform/modules/workflow-validator/)  Only rules created by the calling Connect app can be deleted.  **[Permissions](#permissions) required:** Only Connect apps can use this operation.
     * @param {module:model/WorkflowsWithTransitionRulesDetails} workflowsWithTransitionRulesDetails 
     * @param {module:api/WorkflowTransitionRulesApi~deleteWorkflowTransitionRuleConfigurationsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/WorkflowTransitionRulesUpdateErrors}
     */
    deleteWorkflowTransitionRuleConfigurations(workflowsWithTransitionRulesDetails, callback) {
      let postBody = workflowsWithTransitionRulesDetails;
      // verify the required parameter 'workflowsWithTransitionRulesDetails' is set
      if (workflowsWithTransitionRulesDetails === undefined || workflowsWithTransitionRulesDetails === null) {
        throw new Error("Missing the required parameter 'workflowsWithTransitionRulesDetails' when calling deleteWorkflowTransitionRuleConfigurations");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = WorkflowTransitionRulesUpdateErrors;
      return this.apiClient.callApi(
        '/rest/api/3/workflow/rule/config/delete', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getWorkflowTransitionRuleConfigurations operation.
     * @callback module:api/WorkflowTransitionRulesApi~getWorkflowTransitionRuleConfigurationsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PageBeanWorkflowTransitionRules} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get workflow transition rule configurations
     * Returns a [paginated](#pagination) list of workflows with transition rules. The workflows can be filtered to return only those containing workflow transition rules:   *  of one or more transition rule types, such as [workflow post functions](https://developer.atlassian.com/cloud/jira/platform/modules/workflow-post-function/).  *  matching one or more transition rule keys.  Only workflows containing transition rules created by the calling [Connect](https://developer.atlassian.com/cloud/jira/platform/index/#connect-apps) or [Forge](https://developer.atlassian.com/cloud/jira/platform/index/#forge-apps) app are returned.  Due to server-side optimizations, workflows with an empty list of rules may be returned; these workflows can be ignored.  **[Permissions](#permissions) required:** Only [Connect](https://developer.atlassian.com/cloud/jira/platform/index/#connect-apps) or [Forge](https://developer.atlassian.com/cloud/jira/platform/index/#forge-apps) apps can use this operation.
     * @param {Array.<module:model/String>} types The types of the transition rules to return.
     * @param {Object} opts Optional parameters
     * @param {Number} [startAt = 0)] The index of the first item to return in a page of results (page offset).
     * @param {Number} [maxResults = 10)] The maximum number of items to return per page.
     * @param {Array.<String>} [keys] The transition rule class keys, as defined in the Connect or the Forge app descriptor, of the transition rules to return.
     * @param {Array.<String>} [workflowNames] EXPERIMENTAL: The list of workflow names to filter by.
     * @param {Array.<String>} [withTags] EXPERIMENTAL: The list of `tags` to filter by.
     * @param {Boolean} [draft] EXPERIMENTAL: Whether draft or published workflows are returned. If not provided, both workflow types are returned.
     * @param {String} [expand] Use [expand](#expansion) to include additional information in the response. This parameter accepts `transition`, which, for each rule, returns information about the transition the rule is assigned to.
     * @param {module:api/WorkflowTransitionRulesApi~getWorkflowTransitionRuleConfigurationsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PageBeanWorkflowTransitionRules}
     */
    getWorkflowTransitionRuleConfigurations(types, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'types' is set
      if (types === undefined || types === null) {
        throw new Error("Missing the required parameter 'types' when calling getWorkflowTransitionRuleConfigurations");
      }

      let pathParams = {
      };
      let queryParams = {
        'startAt': opts['startAt'],
        'maxResults': opts['maxResults'],
        'types': this.apiClient.buildCollectionParam(types, 'multi'),
        'keys': this.apiClient.buildCollectionParam(opts['keys'], 'multi'),
        'workflowNames': this.apiClient.buildCollectionParam(opts['workflowNames'], 'multi'),
        'withTags': this.apiClient.buildCollectionParam(opts['withTags'], 'multi'),
        'draft': opts['draft'],
        'expand': opts['expand']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['OAuth2', 'basicAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PageBeanWorkflowTransitionRules;
      return this.apiClient.callApi(
        '/rest/api/3/workflow/rule/config', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateWorkflowTransitionRuleConfigurations operation.
     * @callback module:api/WorkflowTransitionRulesApi~updateWorkflowTransitionRuleConfigurationsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/WorkflowTransitionRulesUpdateErrors} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update workflow transition rule configurations
     * Updates configuration of workflow transition rules. The following rule types are supported:   *  [post functions](https://developer.atlassian.com/cloud/jira/platform/modules/workflow-post-function/)  *  [conditions](https://developer.atlassian.com/cloud/jira/platform/modules/workflow-condition/)  *  [validators](https://developer.atlassian.com/cloud/jira/platform/modules/workflow-validator/)  Only rules created by the calling Connect app can be updated.  To assist with app migration, this operation can be used to:   *  Disable a rule.  *  Add a `tag`. Use this to filter rules in the [Get workflow transition rule configurations](https://developer.atlassian.com/cloud/jira/platform/rest/v3/api-group-workflow-transition-rules/#api-rest-api-3-workflow-rule-config-get).  Rules are enabled if the `disabled` parameter is not provided.  **[Permissions](#permissions) required:** Only Connect apps can use this operation.
     * @param {module:model/WorkflowTransitionRulesUpdate} workflowTransitionRulesUpdate 
     * @param {module:api/WorkflowTransitionRulesApi~updateWorkflowTransitionRuleConfigurationsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/WorkflowTransitionRulesUpdateErrors}
     */
    updateWorkflowTransitionRuleConfigurations(workflowTransitionRulesUpdate, callback) {
      let postBody = workflowTransitionRulesUpdate;
      // verify the required parameter 'workflowTransitionRulesUpdate' is set
      if (workflowTransitionRulesUpdate === undefined || workflowTransitionRulesUpdate === null) {
        throw new Error("Missing the required parameter 'workflowTransitionRulesUpdate' when calling updateWorkflowTransitionRuleConfigurations");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = WorkflowTransitionRulesUpdateErrors;
      return this.apiClient.callApi(
        '/rest/api/3/workflow/rule/config', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
