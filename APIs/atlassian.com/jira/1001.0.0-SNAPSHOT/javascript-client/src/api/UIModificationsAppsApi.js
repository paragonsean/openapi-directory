/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CreateUiModificationDetails from '../model/CreateUiModificationDetails';
import PageBeanUiModificationDetails from '../model/PageBeanUiModificationDetails';
import UiModificationIdentifiers from '../model/UiModificationIdentifiers';
import UpdateUiModificationDetails from '../model/UpdateUiModificationDetails';

/**
* UIModificationsApps service.
* @module api/UIModificationsAppsApi
* @version 1001.0.0-SNAPSHOT
*/
export default class UIModificationsAppsApi {

    /**
    * Constructs a new UIModificationsAppsApi. 
    * @alias module:api/UIModificationsAppsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createUiModification operation.
     * @callback module:api/UIModificationsAppsApi~createUiModificationCallback
     * @param {String} error Error message, if any.
     * @param {module:model/UiModificationIdentifiers} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create UI modification
     * Creates a UI modification. UI modification can only be created by Forge apps.  Each app can define up to 100 UI modifications. Each UI modification can define up to 1000 contexts.  **[Permissions](#permissions) required:**   *  *None* if the UI modification is created without contexts.  *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for one or more projects, if the UI modification is created with contexts.
     * @param {module:model/CreateUiModificationDetails} createUiModificationDetails Details of the UI modification.
     * @param {module:api/UIModificationsAppsApi~createUiModificationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/UiModificationIdentifiers}
     */
    createUiModification(createUiModificationDetails, callback) {
      let postBody = createUiModificationDetails;
      // verify the required parameter 'createUiModificationDetails' is set
      if (createUiModificationDetails === undefined || createUiModificationDetails === null) {
        throw new Error("Missing the required parameter 'createUiModificationDetails' when calling createUiModification");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['OAuth2', 'basicAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = UiModificationIdentifiers;
      return this.apiClient.callApi(
        '/rest/api/3/uiModifications', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteUiModification operation.
     * @callback module:api/UIModificationsAppsApi~deleteUiModificationCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete UI modification
     * Deletes a UI modification. All the contexts that belong to the UI modification are deleted too. UI modification can only be deleted by Forge apps.  **[Permissions](#permissions) required:** None.
     * @param {String} uiModificationId The ID of the UI modification.
     * @param {module:api/UIModificationsAppsApi~deleteUiModificationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    deleteUiModification(uiModificationId, callback) {
      let postBody = null;
      // verify the required parameter 'uiModificationId' is set
      if (uiModificationId === undefined || uiModificationId === null) {
        throw new Error("Missing the required parameter 'uiModificationId' when calling deleteUiModification");
      }

      let pathParams = {
        'uiModificationId': uiModificationId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['OAuth2', 'basicAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/rest/api/3/uiModifications/{uiModificationId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getUiModifications operation.
     * @callback module:api/UIModificationsAppsApi~getUiModificationsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PageBeanUiModificationDetails} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get UI modifications
     * Gets UI modifications. UI modifications can only be retrieved by Forge apps.  **[Permissions](#permissions) required:** None.
     * @param {Object} opts Optional parameters
     * @param {Number} [startAt = 0)] The index of the first item to return in a page of results (page offset).
     * @param {Number} [maxResults = 50)] The maximum number of items to return per page.
     * @param {String} [expand] Use expand to include additional information in the response. This parameter accepts a comma-separated list. Expand options include:   *  `data` Returns UI modification data.  *  `contexts` Returns UI modification contexts.
     * @param {module:api/UIModificationsAppsApi~getUiModificationsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PageBeanUiModificationDetails}
     */
    getUiModifications(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'startAt': opts['startAt'],
        'maxResults': opts['maxResults'],
        'expand': opts['expand']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['OAuth2', 'basicAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PageBeanUiModificationDetails;
      return this.apiClient.callApi(
        '/rest/api/3/uiModifications', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateUiModification operation.
     * @callback module:api/UIModificationsAppsApi~updateUiModificationCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update UI modification
     * Updates a UI modification. UI modification can only be updated by Forge apps.  Each UI modification can define up to 1000 contexts.  **[Permissions](#permissions) required:**   *  *None* if the UI modification is created without contexts.  *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for one or more projects, if the UI modification is created with contexts.
     * @param {String} uiModificationId The ID of the UI modification.
     * @param {module:model/UpdateUiModificationDetails} updateUiModificationDetails Details of the UI modification.
     * @param {module:api/UIModificationsAppsApi~updateUiModificationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    updateUiModification(uiModificationId, updateUiModificationDetails, callback) {
      let postBody = updateUiModificationDetails;
      // verify the required parameter 'uiModificationId' is set
      if (uiModificationId === undefined || uiModificationId === null) {
        throw new Error("Missing the required parameter 'uiModificationId' when calling updateUiModification");
      }
      // verify the required parameter 'updateUiModificationDetails' is set
      if (updateUiModificationDetails === undefined || updateUiModificationDetails === null) {
        throw new Error("Missing the required parameter 'updateUiModificationDetails' when calling updateUiModification");
      }

      let pathParams = {
        'uiModificationId': uiModificationId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['OAuth2', 'basicAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/rest/api/3/uiModifications/{uiModificationId}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
