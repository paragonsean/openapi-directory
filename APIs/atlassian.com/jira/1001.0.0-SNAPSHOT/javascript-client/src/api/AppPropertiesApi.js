/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import EntityProperty from '../model/EntityProperty';
import OperationMessage from '../model/OperationMessage';
import PropertyKeys from '../model/PropertyKeys';

/**
* AppProperties service.
* @module api/AppPropertiesApi
* @version 1001.0.0-SNAPSHOT
*/
export default class AppPropertiesApi {

    /**
    * Constructs a new AppPropertiesApi. 
    * @alias module:api/AppPropertiesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the addonPropertiesResourceDeleteAddonPropertyDelete operation.
     * @callback module:api/AppPropertiesApi~addonPropertiesResourceDeleteAddonPropertyDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete app property
     * Deletes an app's property.  **[Permissions](#permissions) required:** Only a Connect app whose key matches `addonKey` can make this request.
     * @param {String} addonKey The key of the app, as defined in its descriptor.
     * @param {String} propertyKey The key of the property.
     * @param {module:api/AppPropertiesApi~addonPropertiesResourceDeleteAddonPropertyDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    addonPropertiesResourceDeleteAddonPropertyDelete(addonKey, propertyKey, callback) {
      let postBody = null;
      // verify the required parameter 'addonKey' is set
      if (addonKey === undefined || addonKey === null) {
        throw new Error("Missing the required parameter 'addonKey' when calling addonPropertiesResourceDeleteAddonPropertyDelete");
      }
      // verify the required parameter 'propertyKey' is set
      if (propertyKey === undefined || propertyKey === null) {
        throw new Error("Missing the required parameter 'propertyKey' when calling addonPropertiesResourceDeleteAddonPropertyDelete");
      }

      let pathParams = {
        'addonKey': addonKey,
        'propertyKey': propertyKey
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/rest/atlassian-connect/1/addons/{addonKey}/properties/{propertyKey}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the addonPropertiesResourceGetAddonPropertiesGet operation.
     * @callback module:api/AppPropertiesApi~addonPropertiesResourceGetAddonPropertiesGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PropertyKeys} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get app properties
     * Gets all the properties of an app.  **[Permissions](#permissions) required:** Only a Connect app whose key matches `addonKey` can make this request. Additionally, Forge apps published on the Marketplace can access properties of Connect apps they were [migrated from](https://developer.atlassian.com/platform/forge/build-a-connect-on-forge-app/).
     * @param {String} addonKey The key of the app, as defined in its descriptor.
     * @param {module:api/AppPropertiesApi~addonPropertiesResourceGetAddonPropertiesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PropertyKeys}
     */
    addonPropertiesResourceGetAddonPropertiesGet(addonKey, callback) {
      let postBody = null;
      // verify the required parameter 'addonKey' is set
      if (addonKey === undefined || addonKey === null) {
        throw new Error("Missing the required parameter 'addonKey' when calling addonPropertiesResourceGetAddonPropertiesGet");
      }

      let pathParams = {
        'addonKey': addonKey
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['OAuth2', 'basicAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PropertyKeys;
      return this.apiClient.callApi(
        '/rest/atlassian-connect/1/addons/{addonKey}/properties', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the addonPropertiesResourceGetAddonPropertyGet operation.
     * @callback module:api/AppPropertiesApi~addonPropertiesResourceGetAddonPropertyGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/EntityProperty} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get app property
     * Returns the key and value of an app's property.  **[Permissions](#permissions) required:** Only a Connect app whose key matches `addonKey` can make this request. Additionally, Forge apps published on the Marketplace can access properties of Connect apps they were [migrated from](https://developer.atlassian.com/platform/forge/build-a-connect-on-forge-app/).
     * @param {String} addonKey The key of the app, as defined in its descriptor.
     * @param {String} propertyKey The key of the property.
     * @param {module:api/AppPropertiesApi~addonPropertiesResourceGetAddonPropertyGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/EntityProperty}
     */
    addonPropertiesResourceGetAddonPropertyGet(addonKey, propertyKey, callback) {
      let postBody = null;
      // verify the required parameter 'addonKey' is set
      if (addonKey === undefined || addonKey === null) {
        throw new Error("Missing the required parameter 'addonKey' when calling addonPropertiesResourceGetAddonPropertyGet");
      }
      // verify the required parameter 'propertyKey' is set
      if (propertyKey === undefined || propertyKey === null) {
        throw new Error("Missing the required parameter 'propertyKey' when calling addonPropertiesResourceGetAddonPropertyGet");
      }

      let pathParams = {
        'addonKey': addonKey,
        'propertyKey': propertyKey
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['OAuth2', 'basicAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = EntityProperty;
      return this.apiClient.callApi(
        '/rest/atlassian-connect/1/addons/{addonKey}/properties/{propertyKey}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the addonPropertiesResourcePutAddonPropertyPut operation.
     * @callback module:api/AppPropertiesApi~addonPropertiesResourcePutAddonPropertyPutCallback
     * @param {String} error Error message, if any.
     * @param {module:model/OperationMessage} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Set app property
     * Sets the value of an app's property. Use this resource to store custom data for your app.  The value of the request body must be a [valid](http://tools.ietf.org/html/rfc4627), non-empty JSON blob. The maximum length is 32768 characters.  **[Permissions](#permissions) required:** Only a Connect app whose key matches `addonKey` can make this request.
     * @param {String} addonKey The key of the app, as defined in its descriptor.
     * @param {String} propertyKey The key of the property.
     * @param {Object} body 
     * @param {module:api/AppPropertiesApi~addonPropertiesResourcePutAddonPropertyPutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/OperationMessage}
     */
    addonPropertiesResourcePutAddonPropertyPut(addonKey, propertyKey, body, callback) {
      let postBody = body;
      // verify the required parameter 'addonKey' is set
      if (addonKey === undefined || addonKey === null) {
        throw new Error("Missing the required parameter 'addonKey' when calling addonPropertiesResourcePutAddonPropertyPut");
      }
      // verify the required parameter 'propertyKey' is set
      if (propertyKey === undefined || propertyKey === null) {
        throw new Error("Missing the required parameter 'propertyKey' when calling addonPropertiesResourcePutAddonPropertyPut");
      }
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling addonPropertiesResourcePutAddonPropertyPut");
      }

      let pathParams = {
        'addonKey': addonKey,
        'propertyKey': propertyKey
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = OperationMessage;
      return this.apiClient.callApi(
        '/rest/atlassian-connect/1/addons/{addonKey}/properties/{propertyKey}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
