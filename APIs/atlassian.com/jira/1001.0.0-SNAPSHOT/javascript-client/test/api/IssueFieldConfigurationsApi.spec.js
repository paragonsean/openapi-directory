/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.TheJiraCloudPlatformRestApi);
  }
}(this, function(expect, TheJiraCloudPlatformRestApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new TheJiraCloudPlatformRestApi.IssueFieldConfigurationsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('IssueFieldConfigurationsApi', function() {
    describe('assignFieldConfigurationSchemeToProject', function() {
      it('should call assignFieldConfigurationSchemeToProject successfully', function(done) {
        //uncomment below and update the code to test assignFieldConfigurationSchemeToProject
        //instance.assignFieldConfigurationSchemeToProject(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createFieldConfiguration', function() {
      it('should call createFieldConfiguration successfully', function(done) {
        //uncomment below and update the code to test createFieldConfiguration
        //instance.createFieldConfiguration(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createFieldConfigurationScheme', function() {
      it('should call createFieldConfigurationScheme successfully', function(done) {
        //uncomment below and update the code to test createFieldConfigurationScheme
        //instance.createFieldConfigurationScheme(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteFieldConfiguration', function() {
      it('should call deleteFieldConfiguration successfully', function(done) {
        //uncomment below and update the code to test deleteFieldConfiguration
        //instance.deleteFieldConfiguration(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteFieldConfigurationScheme', function() {
      it('should call deleteFieldConfigurationScheme successfully', function(done) {
        //uncomment below and update the code to test deleteFieldConfigurationScheme
        //instance.deleteFieldConfigurationScheme(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAllFieldConfigurationSchemes', function() {
      it('should call getAllFieldConfigurationSchemes successfully', function(done) {
        //uncomment below and update the code to test getAllFieldConfigurationSchemes
        //instance.getAllFieldConfigurationSchemes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAllFieldConfigurations', function() {
      it('should call getAllFieldConfigurations successfully', function(done) {
        //uncomment below and update the code to test getAllFieldConfigurations
        //instance.getAllFieldConfigurations(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getFieldConfigurationItems', function() {
      it('should call getFieldConfigurationItems successfully', function(done) {
        //uncomment below and update the code to test getFieldConfigurationItems
        //instance.getFieldConfigurationItems(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getFieldConfigurationSchemeMappings', function() {
      it('should call getFieldConfigurationSchemeMappings successfully', function(done) {
        //uncomment below and update the code to test getFieldConfigurationSchemeMappings
        //instance.getFieldConfigurationSchemeMappings(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getFieldConfigurationSchemeProjectMapping', function() {
      it('should call getFieldConfigurationSchemeProjectMapping successfully', function(done) {
        //uncomment below and update the code to test getFieldConfigurationSchemeProjectMapping
        //instance.getFieldConfigurationSchemeProjectMapping(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('removeIssueTypesFromGlobalFieldConfigurationScheme', function() {
      it('should call removeIssueTypesFromGlobalFieldConfigurationScheme successfully', function(done) {
        //uncomment below and update the code to test removeIssueTypesFromGlobalFieldConfigurationScheme
        //instance.removeIssueTypesFromGlobalFieldConfigurationScheme(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('setFieldConfigurationSchemeMapping', function() {
      it('should call setFieldConfigurationSchemeMapping successfully', function(done) {
        //uncomment below and update the code to test setFieldConfigurationSchemeMapping
        //instance.setFieldConfigurationSchemeMapping(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateFieldConfiguration', function() {
      it('should call updateFieldConfiguration successfully', function(done) {
        //uncomment below and update the code to test updateFieldConfiguration
        //instance.updateFieldConfiguration(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateFieldConfigurationItems', function() {
      it('should call updateFieldConfigurationItems successfully', function(done) {
        //uncomment below and update the code to test updateFieldConfigurationItems
        //instance.updateFieldConfigurationItems(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateFieldConfigurationScheme', function() {
      it('should call updateFieldConfigurationScheme successfully', function(done) {
        //uncomment below and update the code to test updateFieldConfigurationScheme
        //instance.updateFieldConfigurationScheme(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
