/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.TheJiraCloudPlatformRestApi);
  }
}(this, function(expect, TheJiraCloudPlatformRestApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new TheJiraCloudPlatformRestApi.UserSearchApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('UserSearchApi', function() {
    describe('findAssignableUsers', function() {
      it('should call findAssignableUsers successfully', function(done) {
        //uncomment below and update the code to test findAssignableUsers
        //instance.findAssignableUsers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('findBulkAssignableUsers', function() {
      it('should call findBulkAssignableUsers successfully', function(done) {
        //uncomment below and update the code to test findBulkAssignableUsers
        //instance.findBulkAssignableUsers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('findUserKeysByQuery', function() {
      it('should call findUserKeysByQuery successfully', function(done) {
        //uncomment below and update the code to test findUserKeysByQuery
        //instance.findUserKeysByQuery(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('findUsers', function() {
      it('should call findUsers successfully', function(done) {
        //uncomment below and update the code to test findUsers
        //instance.findUsers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('findUsersByQuery', function() {
      it('should call findUsersByQuery successfully', function(done) {
        //uncomment below and update the code to test findUsersByQuery
        //instance.findUsersByQuery(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('findUsersForPicker', function() {
      it('should call findUsersForPicker successfully', function(done) {
        //uncomment below and update the code to test findUsersForPicker
        //instance.findUsersForPicker(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('findUsersWithAllPermissions', function() {
      it('should call findUsersWithAllPermissions successfully', function(done) {
        //uncomment below and update the code to test findUsersWithAllPermissions
        //instance.findUsersWithAllPermissions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('findUsersWithBrowsePermission', function() {
      it('should call findUsersWithBrowsePermission successfully', function(done) {
        //uncomment below and update the code to test findUsersWithBrowsePermission
        //instance.findUsersWithBrowsePermission(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
