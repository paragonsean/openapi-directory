/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.TheJiraCloudPlatformRestApi);
  }
}(this, function(expect, TheJiraCloudPlatformRestApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new TheJiraCloudPlatformRestApi.UsersApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('UsersApi', function() {
    describe('bulkGetUsers', function() {
      it('should call bulkGetUsers successfully', function(done) {
        //uncomment below and update the code to test bulkGetUsers
        //instance.bulkGetUsers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('bulkGetUsersMigration', function() {
      it('should call bulkGetUsersMigration successfully', function(done) {
        //uncomment below and update the code to test bulkGetUsersMigration
        //instance.bulkGetUsersMigration(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createUser', function() {
      it('should call createUser successfully', function(done) {
        //uncomment below and update the code to test createUser
        //instance.createUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAllUsers', function() {
      it('should call getAllUsers successfully', function(done) {
        //uncomment below and update the code to test getAllUsers
        //instance.getAllUsers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAllUsersDefault', function() {
      it('should call getAllUsersDefault successfully', function(done) {
        //uncomment below and update the code to test getAllUsersDefault
        //instance.getAllUsersDefault(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getUser', function() {
      it('should call getUser successfully', function(done) {
        //uncomment below and update the code to test getUser
        //instance.getUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getUserDefaultColumns', function() {
      it('should call getUserDefaultColumns successfully', function(done) {
        //uncomment below and update the code to test getUserDefaultColumns
        //instance.getUserDefaultColumns(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getUserEmail', function() {
      it('should call getUserEmail successfully', function(done) {
        //uncomment below and update the code to test getUserEmail
        //instance.getUserEmail(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getUserEmailBulk', function() {
      it('should call getUserEmailBulk successfully', function(done) {
        //uncomment below and update the code to test getUserEmailBulk
        //instance.getUserEmailBulk(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getUserGroups', function() {
      it('should call getUserGroups successfully', function(done) {
        //uncomment below and update the code to test getUserGroups
        //instance.getUserGroups(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('removeUser', function() {
      it('should call removeUser successfully', function(done) {
        //uncomment below and update the code to test removeUser
        //instance.removeUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('resetUserColumns', function() {
      it('should call resetUserColumns successfully', function(done) {
        //uncomment below and update the code to test resetUserColumns
        //instance.resetUserColumns(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('setUserColumns', function() {
      it('should call setUserColumns successfully', function(done) {
        //uncomment below and update the code to test setUserColumns
        //instance.setUserColumns(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
