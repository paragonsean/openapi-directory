/**
 * The Jira Cloud platform REST API
 * Jira Cloud platform REST API documentation
 *
 * The version of the OpenAPI document: 1001.0.0-SNAPSHOT
 * Contact: ecosystem@atlassian.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.TheJiraCloudPlatformRestApi);
  }
}(this, function(expect, TheJiraCloudPlatformRestApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new TheJiraCloudPlatformRestApi.DashboardsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DashboardsApi', function() {
    describe('addGadget', function() {
      it('should call addGadget successfully', function(done) {
        //uncomment below and update the code to test addGadget
        //instance.addGadget(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('copyDashboard', function() {
      it('should call copyDashboard successfully', function(done) {
        //uncomment below and update the code to test copyDashboard
        //instance.copyDashboard(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createDashboard', function() {
      it('should call createDashboard successfully', function(done) {
        //uncomment below and update the code to test createDashboard
        //instance.createDashboard(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteDashboard', function() {
      it('should call deleteDashboard successfully', function(done) {
        //uncomment below and update the code to test deleteDashboard
        //instance.deleteDashboard(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteDashboardItemProperty', function() {
      it('should call deleteDashboardItemProperty successfully', function(done) {
        //uncomment below and update the code to test deleteDashboardItemProperty
        //instance.deleteDashboardItemProperty(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAllAvailableDashboardGadgets', function() {
      it('should call getAllAvailableDashboardGadgets successfully', function(done) {
        //uncomment below and update the code to test getAllAvailableDashboardGadgets
        //instance.getAllAvailableDashboardGadgets(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAllDashboards', function() {
      it('should call getAllDashboards successfully', function(done) {
        //uncomment below and update the code to test getAllDashboards
        //instance.getAllDashboards(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAllGadgets', function() {
      it('should call getAllGadgets successfully', function(done) {
        //uncomment below and update the code to test getAllGadgets
        //instance.getAllGadgets(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDashboard', function() {
      it('should call getDashboard successfully', function(done) {
        //uncomment below and update the code to test getDashboard
        //instance.getDashboard(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDashboardItemProperty', function() {
      it('should call getDashboardItemProperty successfully', function(done) {
        //uncomment below and update the code to test getDashboardItemProperty
        //instance.getDashboardItemProperty(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDashboardItemPropertyKeys', function() {
      it('should call getDashboardItemPropertyKeys successfully', function(done) {
        //uncomment below and update the code to test getDashboardItemPropertyKeys
        //instance.getDashboardItemPropertyKeys(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDashboardsPaginated', function() {
      it('should call getDashboardsPaginated successfully', function(done) {
        //uncomment below and update the code to test getDashboardsPaginated
        //instance.getDashboardsPaginated(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('removeGadget', function() {
      it('should call removeGadget successfully', function(done) {
        //uncomment below and update the code to test removeGadget
        //instance.removeGadget(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('setDashboardItemProperty', function() {
      it('should call setDashboardItemProperty successfully', function(done) {
        //uncomment below and update the code to test setDashboardItemProperty
        //instance.setDashboardItemProperty(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateDashboard', function() {
      it('should call updateDashboard successfully', function(done) {
        //uncomment below and update the code to test updateDashboard
        //instance.updateDashboard(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateGadget', function() {
      it('should call updateGadget successfully', function(done) {
        //uncomment below and update the code to test updateGadget
        //instance.updateGadget(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
