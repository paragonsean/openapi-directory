# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.security_level import SecurityLevel
from openapi_server import util


class ProjectIssueSecurityLevels(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, levels: List[SecurityLevel]=None):
        """ProjectIssueSecurityLevels - a model defined in OpenAPI

        :param levels: The levels of this ProjectIssueSecurityLevels.
        """
        self.openapi_types = {
            'levels': List[SecurityLevel]
        }

        self.attribute_map = {
            'levels': 'levels'
        }

        self._levels = levels

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProjectIssueSecurityLevels':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ProjectIssueSecurityLevels of this ProjectIssueSecurityLevels.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def levels(self):
        """Gets the levels of this ProjectIssueSecurityLevels.

        Issue level security items list.

        :return: The levels of this ProjectIssueSecurityLevels.
        :rtype: List[SecurityLevel]
        """
        return self._levels

    @levels.setter
    def levels(self, levels):
        """Sets the levels of this ProjectIssueSecurityLevels.

        Issue level security items list.

        :param levels: The levels of this ProjectIssueSecurityLevels.
        :type levels: List[SecurityLevel]
        """
        if levels is None:
            raise ValueError("Invalid value for `levels`, must not be `None`")

        self._levels = levels
