# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class IssueTypeCreateBean(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description: str=None, hierarchy_level: int=None, name: str=None, type: str=None):
        """IssueTypeCreateBean - a model defined in OpenAPI

        :param description: The description of this IssueTypeCreateBean.
        :param hierarchy_level: The hierarchy_level of this IssueTypeCreateBean.
        :param name: The name of this IssueTypeCreateBean.
        :param type: The type of this IssueTypeCreateBean.
        """
        self.openapi_types = {
            'description': str,
            'hierarchy_level': int,
            'name': str,
            'type': str
        }

        self.attribute_map = {
            'description': 'description',
            'hierarchy_level': 'hierarchyLevel',
            'name': 'name',
            'type': 'type'
        }

        self._description = description
        self._hierarchy_level = hierarchy_level
        self._name = name
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IssueTypeCreateBean':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The IssueTypeCreateBean of this IssueTypeCreateBean.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self):
        """Gets the description of this IssueTypeCreateBean.

        The description of the issue type.

        :return: The description of this IssueTypeCreateBean.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this IssueTypeCreateBean.

        The description of the issue type.

        :param description: The description of this IssueTypeCreateBean.
        :type description: str
        """

        self._description = description

    @property
    def hierarchy_level(self):
        """Gets the hierarchy_level of this IssueTypeCreateBean.

        The hierarchy level of the issue type. Use:   *  `-1` for Subtask.  *  `0` for Base.  Defaults to `0`.

        :return: The hierarchy_level of this IssueTypeCreateBean.
        :rtype: int
        """
        return self._hierarchy_level

    @hierarchy_level.setter
    def hierarchy_level(self, hierarchy_level):
        """Sets the hierarchy_level of this IssueTypeCreateBean.

        The hierarchy level of the issue type. Use:   *  `-1` for Subtask.  *  `0` for Base.  Defaults to `0`.

        :param hierarchy_level: The hierarchy_level of this IssueTypeCreateBean.
        :type hierarchy_level: int
        """

        self._hierarchy_level = hierarchy_level

    @property
    def name(self):
        """Gets the name of this IssueTypeCreateBean.

        The unique name for the issue type. The maximum length is 60 characters.

        :return: The name of this IssueTypeCreateBean.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this IssueTypeCreateBean.

        The unique name for the issue type. The maximum length is 60 characters.

        :param name: The name of this IssueTypeCreateBean.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")

        self._name = name

    @property
    def type(self):
        """Gets the type of this IssueTypeCreateBean.

        Deprecated. Use `hierarchyLevel` instead. See the [deprecation notice](https://community.developer.atlassian.com/t/deprecation-of-the-epic-link-parent-link-and-other-related-fields-in-rest-apis-and-webhooks/54048) for details.  Whether the issue type is `subtype` or `standard`. Defaults to `standard`.

        :return: The type of this IssueTypeCreateBean.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this IssueTypeCreateBean.

        Deprecated. Use `hierarchyLevel` instead. See the [deprecation notice](https://community.developer.atlassian.com/t/deprecation-of-the-epic-link-parent-link-and-other-related-fields-in-rest-apis-and-webhooks/54048) for details.  Whether the issue type is `subtype` or `standard`. Defaults to `standard`.

        :param type: The type of this IssueTypeCreateBean.
        :type type: str
        """
        allowed_values = ["subtask", "standard"]  # noqa: E501
        if type not in allowed_values:
            raise ValueError(
                "Invalid value for `type` ({0}), must be one of {1}"
                .format(type, allowed_values)
            )

        self._type = type
