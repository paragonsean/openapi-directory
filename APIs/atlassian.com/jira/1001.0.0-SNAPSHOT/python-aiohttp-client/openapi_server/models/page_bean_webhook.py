# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.webhook import Webhook
from openapi_server import util


class PageBeanWebhook(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, is_last: bool=None, max_results: int=None, next_page: str=None, _self: str=None, start_at: int=None, total: int=None, values: List[Webhook]=None):
        """PageBeanWebhook - a model defined in OpenAPI

        :param is_last: The is_last of this PageBeanWebhook.
        :param max_results: The max_results of this PageBeanWebhook.
        :param next_page: The next_page of this PageBeanWebhook.
        :param _self: The _self of this PageBeanWebhook.
        :param start_at: The start_at of this PageBeanWebhook.
        :param total: The total of this PageBeanWebhook.
        :param values: The values of this PageBeanWebhook.
        """
        self.openapi_types = {
            'is_last': bool,
            'max_results': int,
            'next_page': str,
            '_self': str,
            'start_at': int,
            'total': int,
            'values': List[Webhook]
        }

        self.attribute_map = {
            'is_last': 'isLast',
            'max_results': 'maxResults',
            'next_page': 'nextPage',
            '_self': 'self',
            'start_at': 'startAt',
            'total': 'total',
            'values': 'values'
        }

        self._is_last = is_last
        self._max_results = max_results
        self._next_page = next_page
        self.__self = _self
        self._start_at = start_at
        self._total = total
        self._values = values

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PageBeanWebhook':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PageBeanWebhook of this PageBeanWebhook.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def is_last(self):
        """Gets the is_last of this PageBeanWebhook.

        Whether this is the last page.

        :return: The is_last of this PageBeanWebhook.
        :rtype: bool
        """
        return self._is_last

    @is_last.setter
    def is_last(self, is_last):
        """Sets the is_last of this PageBeanWebhook.

        Whether this is the last page.

        :param is_last: The is_last of this PageBeanWebhook.
        :type is_last: bool
        """

        self._is_last = is_last

    @property
    def max_results(self):
        """Gets the max_results of this PageBeanWebhook.

        The maximum number of items that could be returned.

        :return: The max_results of this PageBeanWebhook.
        :rtype: int
        """
        return self._max_results

    @max_results.setter
    def max_results(self, max_results):
        """Sets the max_results of this PageBeanWebhook.

        The maximum number of items that could be returned.

        :param max_results: The max_results of this PageBeanWebhook.
        :type max_results: int
        """

        self._max_results = max_results

    @property
    def next_page(self):
        """Gets the next_page of this PageBeanWebhook.

        If there is another page of results, the URL of the next page.

        :return: The next_page of this PageBeanWebhook.
        :rtype: str
        """
        return self._next_page

    @next_page.setter
    def next_page(self, next_page):
        """Sets the next_page of this PageBeanWebhook.

        If there is another page of results, the URL of the next page.

        :param next_page: The next_page of this PageBeanWebhook.
        :type next_page: str
        """

        self._next_page = next_page

    @property
    def _self(self):
        """Gets the _self of this PageBeanWebhook.

        The URL of the page.

        :return: The _self of this PageBeanWebhook.
        :rtype: str
        """
        return self.__self

    @_self.setter
    def _self(self, _self):
        """Sets the _self of this PageBeanWebhook.

        The URL of the page.

        :param _self: The _self of this PageBeanWebhook.
        :type _self: str
        """

        self.__self = _self

    @property
    def start_at(self):
        """Gets the start_at of this PageBeanWebhook.

        The index of the first item returned.

        :return: The start_at of this PageBeanWebhook.
        :rtype: int
        """
        return self._start_at

    @start_at.setter
    def start_at(self, start_at):
        """Sets the start_at of this PageBeanWebhook.

        The index of the first item returned.

        :param start_at: The start_at of this PageBeanWebhook.
        :type start_at: int
        """

        self._start_at = start_at

    @property
    def total(self):
        """Gets the total of this PageBeanWebhook.

        The number of items returned.

        :return: The total of this PageBeanWebhook.
        :rtype: int
        """
        return self._total

    @total.setter
    def total(self, total):
        """Sets the total of this PageBeanWebhook.

        The number of items returned.

        :param total: The total of this PageBeanWebhook.
        :type total: int
        """

        self._total = total

    @property
    def values(self):
        """Gets the values of this PageBeanWebhook.

        The list of items.

        :return: The values of this PageBeanWebhook.
        :rtype: List[Webhook]
        """
        return self._values

    @values.setter
    def values(self, values):
        """Sets the values of this PageBeanWebhook.

        The list of items.

        :param values: The values of this PageBeanWebhook.
        :type values: List[Webhook]
        """

        self._values = values
