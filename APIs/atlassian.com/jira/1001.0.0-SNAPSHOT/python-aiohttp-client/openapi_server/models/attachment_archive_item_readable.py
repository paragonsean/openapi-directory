# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AttachmentArchiveItemReadable(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, index: int=None, label: str=None, media_type: str=None, path: str=None, size: str=None):
        """AttachmentArchiveItemReadable - a model defined in OpenAPI

        :param index: The index of this AttachmentArchiveItemReadable.
        :param label: The label of this AttachmentArchiveItemReadable.
        :param media_type: The media_type of this AttachmentArchiveItemReadable.
        :param path: The path of this AttachmentArchiveItemReadable.
        :param size: The size of this AttachmentArchiveItemReadable.
        """
        self.openapi_types = {
            'index': int,
            'label': str,
            'media_type': str,
            'path': str,
            'size': str
        }

        self.attribute_map = {
            'index': 'index',
            'label': 'label',
            'media_type': 'mediaType',
            'path': 'path',
            'size': 'size'
        }

        self._index = index
        self._label = label
        self._media_type = media_type
        self._path = path
        self._size = size

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AttachmentArchiveItemReadable':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AttachmentArchiveItemReadable of this AttachmentArchiveItemReadable.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def index(self):
        """Gets the index of this AttachmentArchiveItemReadable.

        The position of the item within the archive.

        :return: The index of this AttachmentArchiveItemReadable.
        :rtype: int
        """
        return self._index

    @index.setter
    def index(self, index):
        """Sets the index of this AttachmentArchiveItemReadable.

        The position of the item within the archive.

        :param index: The index of this AttachmentArchiveItemReadable.
        :type index: int
        """

        self._index = index

    @property
    def label(self):
        """Gets the label of this AttachmentArchiveItemReadable.

        The label for the archive item.

        :return: The label of this AttachmentArchiveItemReadable.
        :rtype: str
        """
        return self._label

    @label.setter
    def label(self, label):
        """Sets the label of this AttachmentArchiveItemReadable.

        The label for the archive item.

        :param label: The label of this AttachmentArchiveItemReadable.
        :type label: str
        """

        self._label = label

    @property
    def media_type(self):
        """Gets the media_type of this AttachmentArchiveItemReadable.

        The MIME type of the archive item.

        :return: The media_type of this AttachmentArchiveItemReadable.
        :rtype: str
        """
        return self._media_type

    @media_type.setter
    def media_type(self, media_type):
        """Sets the media_type of this AttachmentArchiveItemReadable.

        The MIME type of the archive item.

        :param media_type: The media_type of this AttachmentArchiveItemReadable.
        :type media_type: str
        """

        self._media_type = media_type

    @property
    def path(self):
        """Gets the path of this AttachmentArchiveItemReadable.

        The path of the archive item.

        :return: The path of this AttachmentArchiveItemReadable.
        :rtype: str
        """
        return self._path

    @path.setter
    def path(self, path):
        """Sets the path of this AttachmentArchiveItemReadable.

        The path of the archive item.

        :param path: The path of this AttachmentArchiveItemReadable.
        :type path: str
        """

        self._path = path

    @property
    def size(self):
        """Gets the size of this AttachmentArchiveItemReadable.

        The size of the archive item.

        :return: The size of this AttachmentArchiveItemReadable.
        :rtype: str
        """
        return self._size

    @size.setter
    def size(self, size):
        """Sets the size of this AttachmentArchiveItemReadable.

        The size of the archive item.

        :param size: The size of this AttachmentArchiveItemReadable.
        :type size: str
        """

        self._size = size
