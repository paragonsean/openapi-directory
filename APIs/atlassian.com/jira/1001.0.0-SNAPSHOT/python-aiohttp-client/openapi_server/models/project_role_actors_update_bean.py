# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ProjectRoleActorsUpdateBean(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, categorised_actors: Dict[str, List[str]]=None, id: int=None):
        """ProjectRoleActorsUpdateBean - a model defined in OpenAPI

        :param categorised_actors: The categorised_actors of this ProjectRoleActorsUpdateBean.
        :param id: The id of this ProjectRoleActorsUpdateBean.
        """
        self.openapi_types = {
            'categorised_actors': Dict[str, List[str]],
            'id': int
        }

        self.attribute_map = {
            'categorised_actors': 'categorisedActors',
            'id': 'id'
        }

        self._categorised_actors = categorised_actors
        self._id = id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProjectRoleActorsUpdateBean':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ProjectRoleActorsUpdateBean of this ProjectRoleActorsUpdateBean.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def categorised_actors(self):
        """Gets the categorised_actors of this ProjectRoleActorsUpdateBean.

        The actors to add to the project role.  Add groups using:   *  `atlassian-group-role-actor` and a list of group names.  *  `atlassian-group-role-actor-id` and a list of group IDs.  As a group's name can change, use of `atlassian-group-role-actor-id` is recommended. For example, `\"atlassian-group-role-actor-id\":[\"eef79f81-0b89-4fca-a736-4be531a10869\",\"77f6ab39-e755-4570-a6ae-2d7a8df0bcb8\"]`.  Add users using `atlassian-user-role-actor` and a list of account IDs. For example, `\"atlassian-user-role-actor\":[\"12345678-9abc-def1-2345-6789abcdef12\", \"abcdef12-3456-789a-bcde-f123456789ab\"]`.

        :return: The categorised_actors of this ProjectRoleActorsUpdateBean.
        :rtype: Dict[str, List[str]]
        """
        return self._categorised_actors

    @categorised_actors.setter
    def categorised_actors(self, categorised_actors):
        """Sets the categorised_actors of this ProjectRoleActorsUpdateBean.

        The actors to add to the project role.  Add groups using:   *  `atlassian-group-role-actor` and a list of group names.  *  `atlassian-group-role-actor-id` and a list of group IDs.  As a group's name can change, use of `atlassian-group-role-actor-id` is recommended. For example, `\"atlassian-group-role-actor-id\":[\"eef79f81-0b89-4fca-a736-4be531a10869\",\"77f6ab39-e755-4570-a6ae-2d7a8df0bcb8\"]`.  Add users using `atlassian-user-role-actor` and a list of account IDs. For example, `\"atlassian-user-role-actor\":[\"12345678-9abc-def1-2345-6789abcdef12\", \"abcdef12-3456-789a-bcde-f123456789ab\"]`.

        :param categorised_actors: The categorised_actors of this ProjectRoleActorsUpdateBean.
        :type categorised_actors: Dict[str, List[str]]
        """

        self._categorised_actors = categorised_actors

    @property
    def id(self):
        """Gets the id of this ProjectRoleActorsUpdateBean.

        The ID of the project role. Use [Get all project roles](#api-rest-api-3-role-get) to get a list of project role IDs.

        :return: The id of this ProjectRoleActorsUpdateBean.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ProjectRoleActorsUpdateBean.

        The ID of the project role. Use [Get all project roles](#api-rest-api-3-role-get) to get a list of project role IDs.

        :param id: The id of this ProjectRoleActorsUpdateBean.
        :type id: int
        """

        self._id = id
