# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class NotificationSchemeNotificationDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, notification_type: str=None, parameter: str=None):
        """NotificationSchemeNotificationDetails - a model defined in OpenAPI

        :param notification_type: The notification_type of this NotificationSchemeNotificationDetails.
        :param parameter: The parameter of this NotificationSchemeNotificationDetails.
        """
        self.openapi_types = {
            'notification_type': str,
            'parameter': str
        }

        self.attribute_map = {
            'notification_type': 'notificationType',
            'parameter': 'parameter'
        }

        self._notification_type = notification_type
        self._parameter = parameter

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NotificationSchemeNotificationDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The NotificationSchemeNotificationDetails of this NotificationSchemeNotificationDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def notification_type(self):
        """Gets the notification_type of this NotificationSchemeNotificationDetails.

        The notification type, e.g `CurrentAssignee`, `Group`, `EmailAddress`.

        :return: The notification_type of this NotificationSchemeNotificationDetails.
        :rtype: str
        """
        return self._notification_type

    @notification_type.setter
    def notification_type(self, notification_type):
        """Sets the notification_type of this NotificationSchemeNotificationDetails.

        The notification type, e.g `CurrentAssignee`, `Group`, `EmailAddress`.

        :param notification_type: The notification_type of this NotificationSchemeNotificationDetails.
        :type notification_type: str
        """
        if notification_type is None:
            raise ValueError("Invalid value for `notification_type`, must not be `None`")

        self._notification_type = notification_type

    @property
    def parameter(self):
        """Gets the parameter of this NotificationSchemeNotificationDetails.

        The value corresponding to the specified notification type.

        :return: The parameter of this NotificationSchemeNotificationDetails.
        :rtype: str
        """
        return self._parameter

    @parameter.setter
    def parameter(self, parameter):
        """Sets the parameter of this NotificationSchemeNotificationDetails.

        The value corresponding to the specified notification type.

        :param parameter: The parameter of this NotificationSchemeNotificationDetails.
        :type parameter: str
        """

        self._parameter = parameter
