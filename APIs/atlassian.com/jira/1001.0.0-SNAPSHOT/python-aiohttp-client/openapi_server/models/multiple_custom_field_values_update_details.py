# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.multiple_custom_field_values_update import MultipleCustomFieldValuesUpdate
from openapi_server import util


class MultipleCustomFieldValuesUpdateDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, updates: List[MultipleCustomFieldValuesUpdate]=None):
        """MultipleCustomFieldValuesUpdateDetails - a model defined in OpenAPI

        :param updates: The updates of this MultipleCustomFieldValuesUpdateDetails.
        """
        self.openapi_types = {
            'updates': List[MultipleCustomFieldValuesUpdate]
        }

        self.attribute_map = {
            'updates': 'updates'
        }

        self._updates = updates

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MultipleCustomFieldValuesUpdateDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MultipleCustomFieldValuesUpdateDetails of this MultipleCustomFieldValuesUpdateDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def updates(self):
        """Gets the updates of this MultipleCustomFieldValuesUpdateDetails.


        :return: The updates of this MultipleCustomFieldValuesUpdateDetails.
        :rtype: List[MultipleCustomFieldValuesUpdate]
        """
        return self._updates

    @updates.setter
    def updates(self, updates):
        """Sets the updates of this MultipleCustomFieldValuesUpdateDetails.


        :param updates: The updates of this MultipleCustomFieldValuesUpdateDetails.
        :type updates: List[MultipleCustomFieldValuesUpdate]
        """

        self._updates = updates
