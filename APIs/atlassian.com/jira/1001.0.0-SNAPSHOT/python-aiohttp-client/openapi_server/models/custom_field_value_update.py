# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CustomFieldValueUpdate(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, issue_ids: List[int]=None, value: object=None):
        """CustomFieldValueUpdate - a model defined in OpenAPI

        :param issue_ids: The issue_ids of this CustomFieldValueUpdate.
        :param value: The value of this CustomFieldValueUpdate.
        """
        self.openapi_types = {
            'issue_ids': List[int],
            'value': object
        }

        self.attribute_map = {
            'issue_ids': 'issueIds',
            'value': 'value'
        }

        self._issue_ids = issue_ids
        self._value = value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CustomFieldValueUpdate':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CustomFieldValueUpdate of this CustomFieldValueUpdate.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def issue_ids(self):
        """Gets the issue_ids of this CustomFieldValueUpdate.

        The list of issue IDs.

        :return: The issue_ids of this CustomFieldValueUpdate.
        :rtype: List[int]
        """
        return self._issue_ids

    @issue_ids.setter
    def issue_ids(self, issue_ids):
        """Sets the issue_ids of this CustomFieldValueUpdate.

        The list of issue IDs.

        :param issue_ids: The issue_ids of this CustomFieldValueUpdate.
        :type issue_ids: List[int]
        """
        if issue_ids is None:
            raise ValueError("Invalid value for `issue_ids`, must not be `None`")

        self._issue_ids = issue_ids

    @property
    def value(self):
        """Gets the value of this CustomFieldValueUpdate.

        The value for the custom field. The value must be compatible with the [custom field type](https://developer.atlassian.com/platform/forge/manifest-reference/modules/jira-custom-field/#data-types) as follows:   *  `string` the value must be a string.  *  `number` the value must be a number.  *  `datetime` the value must be a string that represents a date in the ISO format or the simplified extended ISO format. For example, `\"2023-01-18T12:00:00-03:00\"` or `\"2023-01-18T12:00:00.000Z\"`. However, the milliseconds part is ignored.  *  `user` the value must be an object that contains the `accountId` field.  *  `group` the value must be an object that contains the group `name` or `groupId` field. Because group names can change, we recommend using `groupId`.  A list of appropriate values must be provided if the field is of the `list` [collection type](https://developer.atlassian.com/platform/forge/manifest-reference/modules/jira-custom-field/#collection-types).

        :return: The value of this CustomFieldValueUpdate.
        :rtype: object
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this CustomFieldValueUpdate.

        The value for the custom field. The value must be compatible with the [custom field type](https://developer.atlassian.com/platform/forge/manifest-reference/modules/jira-custom-field/#data-types) as follows:   *  `string` the value must be a string.  *  `number` the value must be a number.  *  `datetime` the value must be a string that represents a date in the ISO format or the simplified extended ISO format. For example, `\"2023-01-18T12:00:00-03:00\"` or `\"2023-01-18T12:00:00.000Z\"`. However, the milliseconds part is ignored.  *  `user` the value must be an object that contains the `accountId` field.  *  `group` the value must be an object that contains the group `name` or `groupId` field. Because group names can change, we recommend using `groupId`.  A list of appropriate values must be provided if the field is of the `list` [collection type](https://developer.atlassian.com/platform/forge/manifest-reference/modules/jira-custom-field/#collection-types).

        :param value: The value of this CustomFieldValueUpdate.
        :type value: object
        """
        if value is None:
            raise ValueError("Invalid value for `value`, must not be `None`")

        self._value = value
