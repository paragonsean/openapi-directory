# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.security_scheme_level_member_bean import SecuritySchemeLevelMemberBean
from openapi_server import util


class SecuritySchemeLevelBean(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description: str=None, is_default: bool=None, members: List[SecuritySchemeLevelMemberBean]=None, name: str=None):
        """SecuritySchemeLevelBean - a model defined in OpenAPI

        :param description: The description of this SecuritySchemeLevelBean.
        :param is_default: The is_default of this SecuritySchemeLevelBean.
        :param members: The members of this SecuritySchemeLevelBean.
        :param name: The name of this SecuritySchemeLevelBean.
        """
        self.openapi_types = {
            'description': str,
            'is_default': bool,
            'members': List[SecuritySchemeLevelMemberBean],
            'name': str
        }

        self.attribute_map = {
            'description': 'description',
            'is_default': 'isDefault',
            'members': 'members',
            'name': 'name'
        }

        self._description = description
        self._is_default = is_default
        self._members = members
        self._name = name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SecuritySchemeLevelBean':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SecuritySchemeLevelBean of this SecuritySchemeLevelBean.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self):
        """Gets the description of this SecuritySchemeLevelBean.

        The description of the issue security scheme level.

        :return: The description of this SecuritySchemeLevelBean.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this SecuritySchemeLevelBean.

        The description of the issue security scheme level.

        :param description: The description of this SecuritySchemeLevelBean.
        :type description: str
        """
        if description is not None and len(description) > 4000:
            raise ValueError("Invalid value for `description`, length must be less than or equal to `4000`")

        self._description = description

    @property
    def is_default(self):
        """Gets the is_default of this SecuritySchemeLevelBean.

        Specifies whether the level is the default level. False by default.

        :return: The is_default of this SecuritySchemeLevelBean.
        :rtype: bool
        """
        return self._is_default

    @is_default.setter
    def is_default(self, is_default):
        """Sets the is_default of this SecuritySchemeLevelBean.

        Specifies whether the level is the default level. False by default.

        :param is_default: The is_default of this SecuritySchemeLevelBean.
        :type is_default: bool
        """

        self._is_default = is_default

    @property
    def members(self):
        """Gets the members of this SecuritySchemeLevelBean.

        The list of level members which should be added to the issue security scheme level.

        :return: The members of this SecuritySchemeLevelBean.
        :rtype: List[SecuritySchemeLevelMemberBean]
        """
        return self._members

    @members.setter
    def members(self, members):
        """Sets the members of this SecuritySchemeLevelBean.

        The list of level members which should be added to the issue security scheme level.

        :param members: The members of this SecuritySchemeLevelBean.
        :type members: List[SecuritySchemeLevelMemberBean]
        """

        self._members = members

    @property
    def name(self):
        """Gets the name of this SecuritySchemeLevelBean.

        The name of the issue security scheme level. Must be unique.

        :return: The name of this SecuritySchemeLevelBean.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this SecuritySchemeLevelBean.

        The name of the issue security scheme level. Must be unique.

        :param name: The name of this SecuritySchemeLevelBean.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")
        if name is not None and len(name) > 255:
            raise ValueError("Invalid value for `name`, length must be less than or equal to `255`")

        self._name = name
