# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class VersionUsageInCustomField(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, custom_field_id: int=None, field_name: str=None, issue_count_with_version_in_custom_field: int=None):
        """VersionUsageInCustomField - a model defined in OpenAPI

        :param custom_field_id: The custom_field_id of this VersionUsageInCustomField.
        :param field_name: The field_name of this VersionUsageInCustomField.
        :param issue_count_with_version_in_custom_field: The issue_count_with_version_in_custom_field of this VersionUsageInCustomField.
        """
        self.openapi_types = {
            'custom_field_id': int,
            'field_name': str,
            'issue_count_with_version_in_custom_field': int
        }

        self.attribute_map = {
            'custom_field_id': 'customFieldId',
            'field_name': 'fieldName',
            'issue_count_with_version_in_custom_field': 'issueCountWithVersionInCustomField'
        }

        self._custom_field_id = custom_field_id
        self._field_name = field_name
        self._issue_count_with_version_in_custom_field = issue_count_with_version_in_custom_field

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VersionUsageInCustomField':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VersionUsageInCustomField of this VersionUsageInCustomField.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def custom_field_id(self):
        """Gets the custom_field_id of this VersionUsageInCustomField.

        The ID of the custom field.

        :return: The custom_field_id of this VersionUsageInCustomField.
        :rtype: int
        """
        return self._custom_field_id

    @custom_field_id.setter
    def custom_field_id(self, custom_field_id):
        """Sets the custom_field_id of this VersionUsageInCustomField.

        The ID of the custom field.

        :param custom_field_id: The custom_field_id of this VersionUsageInCustomField.
        :type custom_field_id: int
        """

        self._custom_field_id = custom_field_id

    @property
    def field_name(self):
        """Gets the field_name of this VersionUsageInCustomField.

        The name of the custom field.

        :return: The field_name of this VersionUsageInCustomField.
        :rtype: str
        """
        return self._field_name

    @field_name.setter
    def field_name(self, field_name):
        """Sets the field_name of this VersionUsageInCustomField.

        The name of the custom field.

        :param field_name: The field_name of this VersionUsageInCustomField.
        :type field_name: str
        """

        self._field_name = field_name

    @property
    def issue_count_with_version_in_custom_field(self):
        """Gets the issue_count_with_version_in_custom_field of this VersionUsageInCustomField.

        Count of the issues where the custom field contains the version.

        :return: The issue_count_with_version_in_custom_field of this VersionUsageInCustomField.
        :rtype: int
        """
        return self._issue_count_with_version_in_custom_field

    @issue_count_with_version_in_custom_field.setter
    def issue_count_with_version_in_custom_field(self, issue_count_with_version_in_custom_field):
        """Sets the issue_count_with_version_in_custom_field of this VersionUsageInCustomField.

        Count of the issues where the custom field contains the version.

        :param issue_count_with_version_in_custom_field: The issue_count_with_version_in_custom_field of this VersionUsageInCustomField.
        :type issue_count_with_version_in_custom_field: int
        """

        self._issue_count_with_version_in_custom_field = issue_count_with_version_in_custom_field
