# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BulkProjectPermissions(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, issues: list[int]=None, permissions: list[str]=None, projects: list[int]=None):
        """BulkProjectPermissions - a model defined in OpenAPI

        :param issues: The issues of this BulkProjectPermissions.
        :param permissions: The permissions of this BulkProjectPermissions.
        :param projects: The projects of this BulkProjectPermissions.
        """
        self.openapi_types = {
            'issues': list[int],
            'permissions': list[str],
            'projects': list[int]
        }

        self.attribute_map = {
            'issues': 'issues',
            'permissions': 'permissions',
            'projects': 'projects'
        }

        self._issues = issues
        self._permissions = permissions
        self._projects = projects

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BulkProjectPermissions':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BulkProjectPermissions of this BulkProjectPermissions.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def issues(self):
        """Gets the issues of this BulkProjectPermissions.

        List of issue IDs.

        :return: The issues of this BulkProjectPermissions.
        :rtype: list[int]
        """
        return self._issues

    @issues.setter
    def issues(self, issues):
        """Sets the issues of this BulkProjectPermissions.

        List of issue IDs.

        :param issues: The issues of this BulkProjectPermissions.
        :type issues: list[int]
        """

        self._issues = issues

    @property
    def permissions(self):
        """Gets the permissions of this BulkProjectPermissions.

        List of project permissions.

        :return: The permissions of this BulkProjectPermissions.
        :rtype: list[str]
        """
        return self._permissions

    @permissions.setter
    def permissions(self, permissions):
        """Sets the permissions of this BulkProjectPermissions.

        List of project permissions.

        :param permissions: The permissions of this BulkProjectPermissions.
        :type permissions: list[str]
        """
        if permissions is None:
            raise ValueError("Invalid value for `permissions`, must not be `None`")

        self._permissions = permissions

    @property
    def projects(self):
        """Gets the projects of this BulkProjectPermissions.

        List of project IDs.

        :return: The projects of this BulkProjectPermissions.
        :rtype: list[int]
        """
        return self._projects

    @projects.setter
    def projects(self, projects):
        """Sets the projects of this BulkProjectPermissions.

        List of project IDs.

        :param projects: The projects of this BulkProjectPermissions.
        :type projects: list[int]
        """

        self._projects = projects
