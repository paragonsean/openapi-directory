# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DashboardGadgetPosition(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, the_column_position_of_the_gadget_: int=None, the_row_position_of_the_gadget_: int=None):
        """DashboardGadgetPosition - a model defined in OpenAPI

        :param the_column_position_of_the_gadget_: The the_column_position_of_the_gadget_ of this DashboardGadgetPosition.
        :param the_row_position_of_the_gadget_: The the_row_position_of_the_gadget_ of this DashboardGadgetPosition.
        """
        self.openapi_types = {
            'the_column_position_of_the_gadget_': int,
            'the_row_position_of_the_gadget_': int
        }

        self.attribute_map = {
            'the_column_position_of_the_gadget_': 'The column position of the gadget.',
            'the_row_position_of_the_gadget_': 'The row position of the gadget.'
        }

        self._the_column_position_of_the_gadget_ = the_column_position_of_the_gadget_
        self._the_row_position_of_the_gadget_ = the_row_position_of_the_gadget_

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DashboardGadgetPosition':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DashboardGadgetPosition of this DashboardGadgetPosition.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def the_column_position_of_the_gadget_(self):
        """Gets the the_column_position_of_the_gadget_ of this DashboardGadgetPosition.


        :return: The the_column_position_of_the_gadget_ of this DashboardGadgetPosition.
        :rtype: int
        """
        return self._the_column_position_of_the_gadget_

    @the_column_position_of_the_gadget_.setter
    def the_column_position_of_the_gadget_(self, the_column_position_of_the_gadget_):
        """Sets the the_column_position_of_the_gadget_ of this DashboardGadgetPosition.


        :param the_column_position_of_the_gadget_: The the_column_position_of_the_gadget_ of this DashboardGadgetPosition.
        :type the_column_position_of_the_gadget_: int
        """
        if the_column_position_of_the_gadget_ is None:
            raise ValueError("Invalid value for `the_column_position_of_the_gadget_`, must not be `None`")

        self._the_column_position_of_the_gadget_ = the_column_position_of_the_gadget_

    @property
    def the_row_position_of_the_gadget_(self):
        """Gets the the_row_position_of_the_gadget_ of this DashboardGadgetPosition.


        :return: The the_row_position_of_the_gadget_ of this DashboardGadgetPosition.
        :rtype: int
        """
        return self._the_row_position_of_the_gadget_

    @the_row_position_of_the_gadget_.setter
    def the_row_position_of_the_gadget_(self, the_row_position_of_the_gadget_):
        """Sets the the_row_position_of_the_gadget_ of this DashboardGadgetPosition.


        :param the_row_position_of_the_gadget_: The the_row_position_of_the_gadget_ of this DashboardGadgetPosition.
        :type the_row_position_of_the_gadget_: int
        """
        if the_row_position_of_the_gadget_ is None:
            raise ValueError("Invalid value for `the_row_position_of_the_gadget_`, must not be `None`")

        self._the_row_position_of_the_gadget_ = the_row_position_of_the_gadget_
