# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ChangeDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, _field: str=None, field_id: str=None, fieldtype: str=None, _from: str=None, from_string: str=None, to: str=None):
        """ChangeDetails - a model defined in OpenAPI

        :param _field: The _field of this ChangeDetails.
        :param field_id: The field_id of this ChangeDetails.
        :param fieldtype: The fieldtype of this ChangeDetails.
        :param _from: The _from of this ChangeDetails.
        :param from_string: The from_string of this ChangeDetails.
        :param to: The to of this ChangeDetails.
        """
        self.openapi_types = {
            '_field': str,
            'field_id': str,
            'fieldtype': str,
            '_from': str,
            'from_string': str,
            'to': str
        }

        self.attribute_map = {
            '_field': 'field',
            'field_id': 'fieldId',
            'fieldtype': 'fieldtype',
            '_from': 'from',
            'from_string': 'fromString',
            'to': 'to'
        }

        self.__field = _field
        self._field_id = field_id
        self._fieldtype = fieldtype
        self.__from = _from
        self._from_string = from_string
        self._to = to

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ChangeDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ChangeDetails of this ChangeDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def _field(self):
        """Gets the _field of this ChangeDetails.

        The name of the field changed.

        :return: The _field of this ChangeDetails.
        :rtype: str
        """
        return self.__field

    @_field.setter
    def _field(self, _field):
        """Sets the _field of this ChangeDetails.

        The name of the field changed.

        :param _field: The _field of this ChangeDetails.
        :type _field: str
        """

        self.__field = _field

    @property
    def field_id(self):
        """Gets the field_id of this ChangeDetails.

        The ID of the field changed.

        :return: The field_id of this ChangeDetails.
        :rtype: str
        """
        return self._field_id

    @field_id.setter
    def field_id(self, field_id):
        """Sets the field_id of this ChangeDetails.

        The ID of the field changed.

        :param field_id: The field_id of this ChangeDetails.
        :type field_id: str
        """

        self._field_id = field_id

    @property
    def fieldtype(self):
        """Gets the fieldtype of this ChangeDetails.

        The type of the field changed.

        :return: The fieldtype of this ChangeDetails.
        :rtype: str
        """
        return self._fieldtype

    @fieldtype.setter
    def fieldtype(self, fieldtype):
        """Sets the fieldtype of this ChangeDetails.

        The type of the field changed.

        :param fieldtype: The fieldtype of this ChangeDetails.
        :type fieldtype: str
        """

        self._fieldtype = fieldtype

    @property
    def _from(self):
        """Gets the _from of this ChangeDetails.

        The details of the original value.

        :return: The _from of this ChangeDetails.
        :rtype: str
        """
        return self.__from

    @_from.setter
    def _from(self, _from):
        """Sets the _from of this ChangeDetails.

        The details of the original value.

        :param _from: The _from of this ChangeDetails.
        :type _from: str
        """

        self.__from = _from

    @property
    def from_string(self):
        """Gets the from_string of this ChangeDetails.

        The details of the original value as a string.

        :return: The from_string of this ChangeDetails.
        :rtype: str
        """
        return self._from_string

    @from_string.setter
    def from_string(self, from_string):
        """Sets the from_string of this ChangeDetails.

        The details of the original value as a string.

        :param from_string: The from_string of this ChangeDetails.
        :type from_string: str
        """

        self._from_string = from_string

    @property
    def to(self):
        """Gets the to of this ChangeDetails.

        The details of the new value.

        :return: The to of this ChangeDetails.
        :rtype: str
        """
        return self._to

    @to.setter
    def to(self, to):
        """Sets the to of this ChangeDetails.

        The details of the new value.

        :param to: The to of this ChangeDetails.
        :type to: str
        """

        self._to = to
