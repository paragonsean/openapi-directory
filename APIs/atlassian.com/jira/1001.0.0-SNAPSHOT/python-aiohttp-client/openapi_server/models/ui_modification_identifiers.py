# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UiModificationIdentifiers(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, _self: str=None):
        """UiModificationIdentifiers - a model defined in OpenAPI

        :param id: The id of this UiModificationIdentifiers.
        :param _self: The _self of this UiModificationIdentifiers.
        """
        self.openapi_types = {
            'id': str,
            '_self': str
        }

        self.attribute_map = {
            'id': 'id',
            '_self': 'self'
        }

        self._id = id
        self.__self = _self

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UiModificationIdentifiers':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UiModificationIdentifiers of this UiModificationIdentifiers.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this UiModificationIdentifiers.

        The ID of the UI modification.

        :return: The id of this UiModificationIdentifiers.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this UiModificationIdentifiers.

        The ID of the UI modification.

        :param id: The id of this UiModificationIdentifiers.
        :type id: str
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")

        self._id = id

    @property
    def _self(self):
        """Gets the _self of this UiModificationIdentifiers.

        The URL of the UI modification.

        :return: The _self of this UiModificationIdentifiers.
        :rtype: str
        """
        return self.__self

    @_self.setter
    def _self(self, _self):
        """Sets the _self of this UiModificationIdentifiers.

        The URL of the UI modification.

        :param _self: The _self of this UiModificationIdentifiers.
        :type _self: str
        """
        if _self is None:
            raise ValueError("Invalid value for `_self`, must not be `None`")

        self.__self = _self
