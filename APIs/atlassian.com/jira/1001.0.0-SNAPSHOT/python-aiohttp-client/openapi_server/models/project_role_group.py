# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ProjectRoleGroup(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, display_name: str=None, group_id: str=None, name: str=None):
        """ProjectRoleGroup - a model defined in OpenAPI

        :param display_name: The display_name of this ProjectRoleGroup.
        :param group_id: The group_id of this ProjectRoleGroup.
        :param name: The name of this ProjectRoleGroup.
        """
        self.openapi_types = {
            'display_name': str,
            'group_id': str,
            'name': str
        }

        self.attribute_map = {
            'display_name': 'displayName',
            'group_id': 'groupId',
            'name': 'name'
        }

        self._display_name = display_name
        self._group_id = group_id
        self._name = name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProjectRoleGroup':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ProjectRoleGroup of this ProjectRoleGroup.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def display_name(self):
        """Gets the display_name of this ProjectRoleGroup.

        The display name of the group.

        :return: The display_name of this ProjectRoleGroup.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this ProjectRoleGroup.

        The display name of the group.

        :param display_name: The display_name of this ProjectRoleGroup.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def group_id(self):
        """Gets the group_id of this ProjectRoleGroup.

        The ID of the group.

        :return: The group_id of this ProjectRoleGroup.
        :rtype: str
        """
        return self._group_id

    @group_id.setter
    def group_id(self, group_id):
        """Sets the group_id of this ProjectRoleGroup.

        The ID of the group.

        :param group_id: The group_id of this ProjectRoleGroup.
        :type group_id: str
        """

        self._group_id = group_id

    @property
    def name(self):
        """Gets the name of this ProjectRoleGroup.

        The name of the group. As a group's name can change, use of `groupId` is recommended to identify the group.

        :return: The name of this ProjectRoleGroup.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ProjectRoleGroup.

        The name of the group. As a group's name can change, use of `groupId` is recommended to identify the group.

        :param name: The name of this ProjectRoleGroup.
        :type name: str
        """

        self._name = name
