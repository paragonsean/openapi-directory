# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.field_reference_data import FieldReferenceData
from openapi_server.models.function_reference_data import FunctionReferenceData
from openapi_server import util


class JQLReferenceData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, jql_reserved_words: List[str]=None, visible_field_names: List[FieldReferenceData]=None, visible_function_names: List[FunctionReferenceData]=None):
        """JQLReferenceData - a model defined in OpenAPI

        :param jql_reserved_words: The jql_reserved_words of this JQLReferenceData.
        :param visible_field_names: The visible_field_names of this JQLReferenceData.
        :param visible_function_names: The visible_function_names of this JQLReferenceData.
        """
        self.openapi_types = {
            'jql_reserved_words': List[str],
            'visible_field_names': List[FieldReferenceData],
            'visible_function_names': List[FunctionReferenceData]
        }

        self.attribute_map = {
            'jql_reserved_words': 'jqlReservedWords',
            'visible_field_names': 'visibleFieldNames',
            'visible_function_names': 'visibleFunctionNames'
        }

        self._jql_reserved_words = jql_reserved_words
        self._visible_field_names = visible_field_names
        self._visible_function_names = visible_function_names

    @classmethod
    def from_dict(cls, dikt: dict) -> 'JQLReferenceData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The JQLReferenceData of this JQLReferenceData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def jql_reserved_words(self):
        """Gets the jql_reserved_words of this JQLReferenceData.

        List of JQL query reserved words.

        :return: The jql_reserved_words of this JQLReferenceData.
        :rtype: List[str]
        """
        return self._jql_reserved_words

    @jql_reserved_words.setter
    def jql_reserved_words(self, jql_reserved_words):
        """Sets the jql_reserved_words of this JQLReferenceData.

        List of JQL query reserved words.

        :param jql_reserved_words: The jql_reserved_words of this JQLReferenceData.
        :type jql_reserved_words: List[str]
        """

        self._jql_reserved_words = jql_reserved_words

    @property
    def visible_field_names(self):
        """Gets the visible_field_names of this JQLReferenceData.

        List of fields usable in JQL queries.

        :return: The visible_field_names of this JQLReferenceData.
        :rtype: List[FieldReferenceData]
        """
        return self._visible_field_names

    @visible_field_names.setter
    def visible_field_names(self, visible_field_names):
        """Sets the visible_field_names of this JQLReferenceData.

        List of fields usable in JQL queries.

        :param visible_field_names: The visible_field_names of this JQLReferenceData.
        :type visible_field_names: List[FieldReferenceData]
        """

        self._visible_field_names = visible_field_names

    @property
    def visible_function_names(self):
        """Gets the visible_function_names of this JQLReferenceData.

        List of functions usable in JQL queries.

        :return: The visible_function_names of this JQLReferenceData.
        :rtype: List[FunctionReferenceData]
        """
        return self._visible_function_names

    @visible_function_names.setter
    def visible_function_names(self, visible_function_names):
        """Sets the visible_function_names of this JQLReferenceData.

        List of functions usable in JQL queries.

        :param visible_function_names: The visible_function_names of this JQLReferenceData.
        :type visible_function_names: List[FunctionReferenceData]
        """

        self._visible_function_names = visible_function_names
