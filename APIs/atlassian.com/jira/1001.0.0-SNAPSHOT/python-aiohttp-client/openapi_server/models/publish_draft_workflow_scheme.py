# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.status_mapping import StatusMapping
from openapi_server import util


class PublishDraftWorkflowScheme(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, status_mappings: list[StatusMapping]=None):
        """PublishDraftWorkflowScheme - a model defined in OpenAPI

        :param status_mappings: The status_mappings of this PublishDraftWorkflowScheme.
        """
        self.openapi_types = {
            'status_mappings': list[StatusMapping]
        }

        self.attribute_map = {
            'status_mappings': 'statusMappings'
        }

        self._status_mappings = status_mappings

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PublishDraftWorkflowScheme':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PublishDraftWorkflowScheme of this PublishDraftWorkflowScheme.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def status_mappings(self):
        """Gets the status_mappings of this PublishDraftWorkflowScheme.

        Mappings of statuses to new statuses for issue types.

        :return: The status_mappings of this PublishDraftWorkflowScheme.
        :rtype: list[StatusMapping]
        """
        return self._status_mappings

    @status_mappings.setter
    def status_mappings(self, status_mappings):
        """Sets the status_mappings of this PublishDraftWorkflowScheme.

        Mappings of statuses to new statuses for issue types.

        :param status_mappings: The status_mappings of this PublishDraftWorkflowScheme.
        :type status_mappings: list[StatusMapping]
        """

        self._status_mappings = status_mappings
