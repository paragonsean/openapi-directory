# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.issue_type_screen_scheme_mapping import IssueTypeScreenSchemeMapping
from openapi_server import util


class IssueTypeScreenSchemeMappingDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, issue_type_mappings: List[IssueTypeScreenSchemeMapping]=None):
        """IssueTypeScreenSchemeMappingDetails - a model defined in OpenAPI

        :param issue_type_mappings: The issue_type_mappings of this IssueTypeScreenSchemeMappingDetails.
        """
        self.openapi_types = {
            'issue_type_mappings': List[IssueTypeScreenSchemeMapping]
        }

        self.attribute_map = {
            'issue_type_mappings': 'issueTypeMappings'
        }

        self._issue_type_mappings = issue_type_mappings

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IssueTypeScreenSchemeMappingDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The IssueTypeScreenSchemeMappingDetails of this IssueTypeScreenSchemeMappingDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def issue_type_mappings(self):
        """Gets the issue_type_mappings of this IssueTypeScreenSchemeMappingDetails.

        The list of issue type to screen scheme mappings. A *default* entry cannot be specified because a default entry is added when an issue type screen scheme is created.

        :return: The issue_type_mappings of this IssueTypeScreenSchemeMappingDetails.
        :rtype: List[IssueTypeScreenSchemeMapping]
        """
        return self._issue_type_mappings

    @issue_type_mappings.setter
    def issue_type_mappings(self, issue_type_mappings):
        """Sets the issue_type_mappings of this IssueTypeScreenSchemeMappingDetails.

        The list of issue type to screen scheme mappings. A *default* entry cannot be specified because a default entry is added when an issue type screen scheme is created.

        :param issue_type_mappings: The issue_type_mappings of this IssueTypeScreenSchemeMappingDetails.
        :type issue_type_mappings: List[IssueTypeScreenSchemeMapping]
        """
        if issue_type_mappings is None:
            raise ValueError("Invalid value for `issue_type_mappings`, must not be `None`")

        self._issue_type_mappings = issue_type_mappings
