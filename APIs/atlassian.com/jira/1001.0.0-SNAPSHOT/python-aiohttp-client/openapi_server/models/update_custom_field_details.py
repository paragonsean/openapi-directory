# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UpdateCustomFieldDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description: str=None, name: str=None, searcher_key: str=None):
        """UpdateCustomFieldDetails - a model defined in OpenAPI

        :param description: The description of this UpdateCustomFieldDetails.
        :param name: The name of this UpdateCustomFieldDetails.
        :param searcher_key: The searcher_key of this UpdateCustomFieldDetails.
        """
        self.openapi_types = {
            'description': str,
            'name': str,
            'searcher_key': str
        }

        self.attribute_map = {
            'description': 'description',
            'name': 'name',
            'searcher_key': 'searcherKey'
        }

        self._description = description
        self._name = name
        self._searcher_key = searcher_key

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateCustomFieldDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateCustomFieldDetails of this UpdateCustomFieldDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self):
        """Gets the description of this UpdateCustomFieldDetails.

        The description of the custom field. The maximum length is 40000 characters.

        :return: The description of this UpdateCustomFieldDetails.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this UpdateCustomFieldDetails.

        The description of the custom field. The maximum length is 40000 characters.

        :param description: The description of this UpdateCustomFieldDetails.
        :type description: str
        """

        self._description = description

    @property
    def name(self):
        """Gets the name of this UpdateCustomFieldDetails.

        The name of the custom field. It doesn't have to be unique. The maximum length is 255 characters.

        :return: The name of this UpdateCustomFieldDetails.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this UpdateCustomFieldDetails.

        The name of the custom field. It doesn't have to be unique. The maximum length is 255 characters.

        :param name: The name of this UpdateCustomFieldDetails.
        :type name: str
        """

        self._name = name

    @property
    def searcher_key(self):
        """Gets the searcher_key of this UpdateCustomFieldDetails.

        The searcher that defines the way the field is searched in Jira. It can be set to `null`, otherwise you must specify the valid searcher for the field type, as listed below (abbreviated values shown):   *  `cascadingselect`: `cascadingselectsearcher`  *  `datepicker`: `daterange`  *  `datetime`: `datetimerange`  *  `float`: `exactnumber` or `numberrange`  *  `grouppicker`: `grouppickersearcher`  *  `importid`: `exactnumber` or `numberrange`  *  `labels`: `labelsearcher`  *  `multicheckboxes`: `multiselectsearcher`  *  `multigrouppicker`: `multiselectsearcher`  *  `multiselect`: `multiselectsearcher`  *  `multiuserpicker`: `userpickergroupsearcher`  *  `multiversion`: `versionsearcher`  *  `project`: `projectsearcher`  *  `radiobuttons`: `multiselectsearcher`  *  `readonlyfield`: `textsearcher`  *  `select`: `multiselectsearcher`  *  `textarea`: `textsearcher`  *  `textfield`: `textsearcher`  *  `url`: `exacttextsearcher`  *  `userpicker`: `userpickergroupsearcher`  *  `version`: `versionsearcher`

        :return: The searcher_key of this UpdateCustomFieldDetails.
        :rtype: str
        """
        return self._searcher_key

    @searcher_key.setter
    def searcher_key(self, searcher_key):
        """Sets the searcher_key of this UpdateCustomFieldDetails.

        The searcher that defines the way the field is searched in Jira. It can be set to `null`, otherwise you must specify the valid searcher for the field type, as listed below (abbreviated values shown):   *  `cascadingselect`: `cascadingselectsearcher`  *  `datepicker`: `daterange`  *  `datetime`: `datetimerange`  *  `float`: `exactnumber` or `numberrange`  *  `grouppicker`: `grouppickersearcher`  *  `importid`: `exactnumber` or `numberrange`  *  `labels`: `labelsearcher`  *  `multicheckboxes`: `multiselectsearcher`  *  `multigrouppicker`: `multiselectsearcher`  *  `multiselect`: `multiselectsearcher`  *  `multiuserpicker`: `userpickergroupsearcher`  *  `multiversion`: `versionsearcher`  *  `project`: `projectsearcher`  *  `radiobuttons`: `multiselectsearcher`  *  `readonlyfield`: `textsearcher`  *  `select`: `multiselectsearcher`  *  `textarea`: `textsearcher`  *  `textfield`: `textsearcher`  *  `url`: `exacttextsearcher`  *  `userpicker`: `userpickergroupsearcher`  *  `version`: `versionsearcher`

        :param searcher_key: The searcher_key of this UpdateCustomFieldDetails.
        :type searcher_key: str
        """
        allowed_values = ["com.atlassian.jira.plugin.system.customfieldtypes:cascadingselectsearcher", "com.atlassian.jira.plugin.system.customfieldtypes:daterange", "com.atlassian.jira.plugin.system.customfieldtypes:datetimerange", "com.atlassian.jira.plugin.system.customfieldtypes:exactnumber", "com.atlassian.jira.plugin.system.customfieldtypes:exacttextsearcher", "com.atlassian.jira.plugin.system.customfieldtypes:grouppickersearcher", "com.atlassian.jira.plugin.system.customfieldtypes:labelsearcher", "com.atlassian.jira.plugin.system.customfieldtypes:multiselectsearcher", "com.atlassian.jira.plugin.system.customfieldtypes:numberrange", "com.atlassian.jira.plugin.system.customfieldtypes:projectsearcher", "com.atlassian.jira.plugin.system.customfieldtypes:textsearcher", "com.atlassian.jira.plugin.system.customfieldtypes:userpickergroupsearcher", "com.atlassian.jira.plugin.system.customfieldtypes:versionsearcher"]  # noqa: E501
        if searcher_key not in allowed_values:
            raise ValueError(
                "Invalid value for `searcher_key` ({0}), must be one of {1}"
                .format(searcher_key, allowed_values)
            )

        self._searcher_key = searcher_key
