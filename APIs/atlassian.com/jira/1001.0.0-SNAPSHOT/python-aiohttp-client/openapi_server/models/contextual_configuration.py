# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ContextualConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, configuration: object=None, field_context_id: str=None, id: str=None, _schema: object=None):
        """ContextualConfiguration - a model defined in OpenAPI

        :param configuration: The configuration of this ContextualConfiguration.
        :param field_context_id: The field_context_id of this ContextualConfiguration.
        :param id: The id of this ContextualConfiguration.
        :param _schema: The _schema of this ContextualConfiguration.
        """
        self.openapi_types = {
            'configuration': object,
            'field_context_id': str,
            'id': str,
            '_schema': object
        }

        self.attribute_map = {
            'configuration': 'configuration',
            'field_context_id': 'fieldContextId',
            'id': 'id',
            '_schema': 'schema'
        }

        self._configuration = configuration
        self._field_context_id = field_context_id
        self._id = id
        self.__schema = _schema

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ContextualConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ContextualConfiguration of this ContextualConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def configuration(self):
        """Gets the configuration of this ContextualConfiguration.

        The field configuration.

        :return: The configuration of this ContextualConfiguration.
        :rtype: object
        """
        return self._configuration

    @configuration.setter
    def configuration(self, configuration):
        """Sets the configuration of this ContextualConfiguration.

        The field configuration.

        :param configuration: The configuration of this ContextualConfiguration.
        :type configuration: object
        """

        self._configuration = configuration

    @property
    def field_context_id(self):
        """Gets the field_context_id of this ContextualConfiguration.

        The ID of the field context the configuration is associated with.

        :return: The field_context_id of this ContextualConfiguration.
        :rtype: str
        """
        return self._field_context_id

    @field_context_id.setter
    def field_context_id(self, field_context_id):
        """Sets the field_context_id of this ContextualConfiguration.

        The ID of the field context the configuration is associated with.

        :param field_context_id: The field_context_id of this ContextualConfiguration.
        :type field_context_id: str
        """
        if field_context_id is None:
            raise ValueError("Invalid value for `field_context_id`, must not be `None`")

        self._field_context_id = field_context_id

    @property
    def id(self):
        """Gets the id of this ContextualConfiguration.

        The ID of the configuration.

        :return: The id of this ContextualConfiguration.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ContextualConfiguration.

        The ID of the configuration.

        :param id: The id of this ContextualConfiguration.
        :type id: str
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")

        self._id = id

    @property
    def _schema(self):
        """Gets the _schema of this ContextualConfiguration.

        The field value schema.

        :return: The _schema of this ContextualConfiguration.
        :rtype: object
        """
        return self.__schema

    @_schema.setter
    def _schema(self, _schema):
        """Sets the _schema of this ContextualConfiguration.

        The field value schema.

        :param _schema: The _schema of this ContextualConfiguration.
        :type _schema: object
        """

        self.__schema = _schema
