# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.avatar import Avatar
from openapi_server import util


class Avatars(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, custom: List[Avatar]=None, system: List[Avatar]=None):
        """Avatars - a model defined in OpenAPI

        :param custom: The custom of this Avatars.
        :param system: The system of this Avatars.
        """
        self.openapi_types = {
            'custom': List[Avatar],
            'system': List[Avatar]
        }

        self.attribute_map = {
            'custom': 'custom',
            'system': 'system'
        }

        self._custom = custom
        self._system = system

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Avatars':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Avatars of this Avatars.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def custom(self):
        """Gets the custom of this Avatars.

        Custom avatars list.

        :return: The custom of this Avatars.
        :rtype: List[Avatar]
        """
        return self._custom

    @custom.setter
    def custom(self, custom):
        """Sets the custom of this Avatars.

        Custom avatars list.

        :param custom: The custom of this Avatars.
        :type custom: List[Avatar]
        """

        self._custom = custom

    @property
    def system(self):
        """Gets the system of this Avatars.

        System avatars list.

        :return: The system of this Avatars.
        :rtype: List[Avatar]
        """
        return self._system

    @system.setter
    def system(self, system):
        """Sets the system of this Avatars.

        System avatars list.

        :param system: The system of this Avatars.
        :type system: List[Avatar]
        """

        self._system = system
