# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CreateProjectDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, assignee_type: str=None, avatar_id: int=None, category_id: int=None, description: str=None, field_configuration_scheme: int=None, issue_security_scheme: int=None, issue_type_scheme: int=None, issue_type_screen_scheme: int=None, key: str=None, lead: str=None, lead_account_id: str=None, name: str=None, notification_scheme: int=None, permission_scheme: int=None, project_template_key: str=None, project_type_key: str=None, url: str=None, workflow_scheme: int=None):
        """CreateProjectDetails - a model defined in OpenAPI

        :param assignee_type: The assignee_type of this CreateProjectDetails.
        :param avatar_id: The avatar_id of this CreateProjectDetails.
        :param category_id: The category_id of this CreateProjectDetails.
        :param description: The description of this CreateProjectDetails.
        :param field_configuration_scheme: The field_configuration_scheme of this CreateProjectDetails.
        :param issue_security_scheme: The issue_security_scheme of this CreateProjectDetails.
        :param issue_type_scheme: The issue_type_scheme of this CreateProjectDetails.
        :param issue_type_screen_scheme: The issue_type_screen_scheme of this CreateProjectDetails.
        :param key: The key of this CreateProjectDetails.
        :param lead: The lead of this CreateProjectDetails.
        :param lead_account_id: The lead_account_id of this CreateProjectDetails.
        :param name: The name of this CreateProjectDetails.
        :param notification_scheme: The notification_scheme of this CreateProjectDetails.
        :param permission_scheme: The permission_scheme of this CreateProjectDetails.
        :param project_template_key: The project_template_key of this CreateProjectDetails.
        :param project_type_key: The project_type_key of this CreateProjectDetails.
        :param url: The url of this CreateProjectDetails.
        :param workflow_scheme: The workflow_scheme of this CreateProjectDetails.
        """
        self.openapi_types = {
            'assignee_type': str,
            'avatar_id': int,
            'category_id': int,
            'description': str,
            'field_configuration_scheme': int,
            'issue_security_scheme': int,
            'issue_type_scheme': int,
            'issue_type_screen_scheme': int,
            'key': str,
            'lead': str,
            'lead_account_id': str,
            'name': str,
            'notification_scheme': int,
            'permission_scheme': int,
            'project_template_key': str,
            'project_type_key': str,
            'url': str,
            'workflow_scheme': int
        }

        self.attribute_map = {
            'assignee_type': 'assigneeType',
            'avatar_id': 'avatarId',
            'category_id': 'categoryId',
            'description': 'description',
            'field_configuration_scheme': 'fieldConfigurationScheme',
            'issue_security_scheme': 'issueSecurityScheme',
            'issue_type_scheme': 'issueTypeScheme',
            'issue_type_screen_scheme': 'issueTypeScreenScheme',
            'key': 'key',
            'lead': 'lead',
            'lead_account_id': 'leadAccountId',
            'name': 'name',
            'notification_scheme': 'notificationScheme',
            'permission_scheme': 'permissionScheme',
            'project_template_key': 'projectTemplateKey',
            'project_type_key': 'projectTypeKey',
            'url': 'url',
            'workflow_scheme': 'workflowScheme'
        }

        self._assignee_type = assignee_type
        self._avatar_id = avatar_id
        self._category_id = category_id
        self._description = description
        self._field_configuration_scheme = field_configuration_scheme
        self._issue_security_scheme = issue_security_scheme
        self._issue_type_scheme = issue_type_scheme
        self._issue_type_screen_scheme = issue_type_screen_scheme
        self._key = key
        self._lead = lead
        self._lead_account_id = lead_account_id
        self._name = name
        self._notification_scheme = notification_scheme
        self._permission_scheme = permission_scheme
        self._project_template_key = project_template_key
        self._project_type_key = project_type_key
        self._url = url
        self._workflow_scheme = workflow_scheme

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateProjectDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateProjectDetails of this CreateProjectDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def assignee_type(self):
        """Gets the assignee_type of this CreateProjectDetails.

        The default assignee when creating issues for this project.

        :return: The assignee_type of this CreateProjectDetails.
        :rtype: str
        """
        return self._assignee_type

    @assignee_type.setter
    def assignee_type(self, assignee_type):
        """Sets the assignee_type of this CreateProjectDetails.

        The default assignee when creating issues for this project.

        :param assignee_type: The assignee_type of this CreateProjectDetails.
        :type assignee_type: str
        """
        allowed_values = ["PROJECT_LEAD", "UNASSIGNED"]  # noqa: E501
        if assignee_type not in allowed_values:
            raise ValueError(
                "Invalid value for `assignee_type` ({0}), must be one of {1}"
                .format(assignee_type, allowed_values)
            )

        self._assignee_type = assignee_type

    @property
    def avatar_id(self):
        """Gets the avatar_id of this CreateProjectDetails.

        An integer value for the project's avatar.

        :return: The avatar_id of this CreateProjectDetails.
        :rtype: int
        """
        return self._avatar_id

    @avatar_id.setter
    def avatar_id(self, avatar_id):
        """Sets the avatar_id of this CreateProjectDetails.

        An integer value for the project's avatar.

        :param avatar_id: The avatar_id of this CreateProjectDetails.
        :type avatar_id: int
        """

        self._avatar_id = avatar_id

    @property
    def category_id(self):
        """Gets the category_id of this CreateProjectDetails.

        The ID of the project's category. A complete list of category IDs is found using the [Get all project categories](#api-rest-api-3-projectCategory-get) operation.

        :return: The category_id of this CreateProjectDetails.
        :rtype: int
        """
        return self._category_id

    @category_id.setter
    def category_id(self, category_id):
        """Sets the category_id of this CreateProjectDetails.

        The ID of the project's category. A complete list of category IDs is found using the [Get all project categories](#api-rest-api-3-projectCategory-get) operation.

        :param category_id: The category_id of this CreateProjectDetails.
        :type category_id: int
        """

        self._category_id = category_id

    @property
    def description(self):
        """Gets the description of this CreateProjectDetails.

        A brief description of the project.

        :return: The description of this CreateProjectDetails.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this CreateProjectDetails.

        A brief description of the project.

        :param description: The description of this CreateProjectDetails.
        :type description: str
        """

        self._description = description

    @property
    def field_configuration_scheme(self):
        """Gets the field_configuration_scheme of this CreateProjectDetails.

        The ID of the field configuration scheme for the project. Use the [Get all field configuration schemes](#api-rest-api-3-fieldconfigurationscheme-get) operation to get a list of field configuration scheme IDs. If you specify the field configuration scheme you cannot specify the project template key.

        :return: The field_configuration_scheme of this CreateProjectDetails.
        :rtype: int
        """
        return self._field_configuration_scheme

    @field_configuration_scheme.setter
    def field_configuration_scheme(self, field_configuration_scheme):
        """Sets the field_configuration_scheme of this CreateProjectDetails.

        The ID of the field configuration scheme for the project. Use the [Get all field configuration schemes](#api-rest-api-3-fieldconfigurationscheme-get) operation to get a list of field configuration scheme IDs. If you specify the field configuration scheme you cannot specify the project template key.

        :param field_configuration_scheme: The field_configuration_scheme of this CreateProjectDetails.
        :type field_configuration_scheme: int
        """

        self._field_configuration_scheme = field_configuration_scheme

    @property
    def issue_security_scheme(self):
        """Gets the issue_security_scheme of this CreateProjectDetails.

        The ID of the issue security scheme for the project, which enables you to control who can and cannot view issues. Use the [Get issue security schemes](#api-rest-api-3-issuesecurityschemes-get) resource to get all issue security scheme IDs.

        :return: The issue_security_scheme of this CreateProjectDetails.
        :rtype: int
        """
        return self._issue_security_scheme

    @issue_security_scheme.setter
    def issue_security_scheme(self, issue_security_scheme):
        """Sets the issue_security_scheme of this CreateProjectDetails.

        The ID of the issue security scheme for the project, which enables you to control who can and cannot view issues. Use the [Get issue security schemes](#api-rest-api-3-issuesecurityschemes-get) resource to get all issue security scheme IDs.

        :param issue_security_scheme: The issue_security_scheme of this CreateProjectDetails.
        :type issue_security_scheme: int
        """

        self._issue_security_scheme = issue_security_scheme

    @property
    def issue_type_scheme(self):
        """Gets the issue_type_scheme of this CreateProjectDetails.

        The ID of the issue type scheme for the project. Use the [Get all issue type schemes](#api-rest-api-3-issuetypescheme-get) operation to get a list of issue type scheme IDs. If you specify the issue type scheme you cannot specify the project template key.

        :return: The issue_type_scheme of this CreateProjectDetails.
        :rtype: int
        """
        return self._issue_type_scheme

    @issue_type_scheme.setter
    def issue_type_scheme(self, issue_type_scheme):
        """Sets the issue_type_scheme of this CreateProjectDetails.

        The ID of the issue type scheme for the project. Use the [Get all issue type schemes](#api-rest-api-3-issuetypescheme-get) operation to get a list of issue type scheme IDs. If you specify the issue type scheme you cannot specify the project template key.

        :param issue_type_scheme: The issue_type_scheme of this CreateProjectDetails.
        :type issue_type_scheme: int
        """

        self._issue_type_scheme = issue_type_scheme

    @property
    def issue_type_screen_scheme(self):
        """Gets the issue_type_screen_scheme of this CreateProjectDetails.

        The ID of the issue type screen scheme for the project. Use the [Get all issue type screen schemes](#api-rest-api-3-issuetypescreenscheme-get) operation to get a list of issue type screen scheme IDs. If you specify the issue type screen scheme you cannot specify the project template key.

        :return: The issue_type_screen_scheme of this CreateProjectDetails.
        :rtype: int
        """
        return self._issue_type_screen_scheme

    @issue_type_screen_scheme.setter
    def issue_type_screen_scheme(self, issue_type_screen_scheme):
        """Sets the issue_type_screen_scheme of this CreateProjectDetails.

        The ID of the issue type screen scheme for the project. Use the [Get all issue type screen schemes](#api-rest-api-3-issuetypescreenscheme-get) operation to get a list of issue type screen scheme IDs. If you specify the issue type screen scheme you cannot specify the project template key.

        :param issue_type_screen_scheme: The issue_type_screen_scheme of this CreateProjectDetails.
        :type issue_type_screen_scheme: int
        """

        self._issue_type_screen_scheme = issue_type_screen_scheme

    @property
    def key(self):
        """Gets the key of this CreateProjectDetails.

        Project keys must be unique and start with an uppercase letter followed by one or more uppercase alphanumeric characters. The maximum length is 10 characters.

        :return: The key of this CreateProjectDetails.
        :rtype: str
        """
        return self._key

    @key.setter
    def key(self, key):
        """Sets the key of this CreateProjectDetails.

        Project keys must be unique and start with an uppercase letter followed by one or more uppercase alphanumeric characters. The maximum length is 10 characters.

        :param key: The key of this CreateProjectDetails.
        :type key: str
        """
        if key is None:
            raise ValueError("Invalid value for `key`, must not be `None`")

        self._key = key

    @property
    def lead(self):
        """Gets the lead of this CreateProjectDetails.

        This parameter is deprecated because of privacy changes. Use `leadAccountId` instead. See the [migration guide](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details. The user name of the project lead. Either `lead` or `leadAccountId` must be set when creating a project. Cannot be provided with `leadAccountId`.

        :return: The lead of this CreateProjectDetails.
        :rtype: str
        """
        return self._lead

    @lead.setter
    def lead(self, lead):
        """Sets the lead of this CreateProjectDetails.

        This parameter is deprecated because of privacy changes. Use `leadAccountId` instead. See the [migration guide](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details. The user name of the project lead. Either `lead` or `leadAccountId` must be set when creating a project. Cannot be provided with `leadAccountId`.

        :param lead: The lead of this CreateProjectDetails.
        :type lead: str
        """

        self._lead = lead

    @property
    def lead_account_id(self):
        """Gets the lead_account_id of this CreateProjectDetails.

        The account ID of the project lead. Either `lead` or `leadAccountId` must be set when creating a project. Cannot be provided with `lead`.

        :return: The lead_account_id of this CreateProjectDetails.
        :rtype: str
        """
        return self._lead_account_id

    @lead_account_id.setter
    def lead_account_id(self, lead_account_id):
        """Sets the lead_account_id of this CreateProjectDetails.

        The account ID of the project lead. Either `lead` or `leadAccountId` must be set when creating a project. Cannot be provided with `lead`.

        :param lead_account_id: The lead_account_id of this CreateProjectDetails.
        :type lead_account_id: str
        """
        if lead_account_id is not None and len(lead_account_id) > 128:
            raise ValueError("Invalid value for `lead_account_id`, length must be less than or equal to `128`")

        self._lead_account_id = lead_account_id

    @property
    def name(self):
        """Gets the name of this CreateProjectDetails.

        The name of the project.

        :return: The name of this CreateProjectDetails.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this CreateProjectDetails.

        The name of the project.

        :param name: The name of this CreateProjectDetails.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")

        self._name = name

    @property
    def notification_scheme(self):
        """Gets the notification_scheme of this CreateProjectDetails.

        The ID of the notification scheme for the project. Use the [Get notification schemes](#api-rest-api-3-notificationscheme-get) resource to get a list of notification scheme IDs.

        :return: The notification_scheme of this CreateProjectDetails.
        :rtype: int
        """
        return self._notification_scheme

    @notification_scheme.setter
    def notification_scheme(self, notification_scheme):
        """Sets the notification_scheme of this CreateProjectDetails.

        The ID of the notification scheme for the project. Use the [Get notification schemes](#api-rest-api-3-notificationscheme-get) resource to get a list of notification scheme IDs.

        :param notification_scheme: The notification_scheme of this CreateProjectDetails.
        :type notification_scheme: int
        """

        self._notification_scheme = notification_scheme

    @property
    def permission_scheme(self):
        """Gets the permission_scheme of this CreateProjectDetails.

        The ID of the permission scheme for the project. Use the [Get all permission schemes](#api-rest-api-3-permissionscheme-get) resource to see a list of all permission scheme IDs.

        :return: The permission_scheme of this CreateProjectDetails.
        :rtype: int
        """
        return self._permission_scheme

    @permission_scheme.setter
    def permission_scheme(self, permission_scheme):
        """Sets the permission_scheme of this CreateProjectDetails.

        The ID of the permission scheme for the project. Use the [Get all permission schemes](#api-rest-api-3-permissionscheme-get) resource to see a list of all permission scheme IDs.

        :param permission_scheme: The permission_scheme of this CreateProjectDetails.
        :type permission_scheme: int
        """

        self._permission_scheme = permission_scheme

    @property
    def project_template_key(self):
        """Gets the project_template_key of this CreateProjectDetails.

        A predefined configuration for a project. The type of the `projectTemplateKey` must match with the type of the `projectTypeKey`.

        :return: The project_template_key of this CreateProjectDetails.
        :rtype: str
        """
        return self._project_template_key

    @project_template_key.setter
    def project_template_key(self, project_template_key):
        """Sets the project_template_key of this CreateProjectDetails.

        A predefined configuration for a project. The type of the `projectTemplateKey` must match with the type of the `projectTypeKey`.

        :param project_template_key: The project_template_key of this CreateProjectDetails.
        :type project_template_key: str
        """
        allowed_values = ["com.pyxis.greenhopper.jira:gh-simplified-agility-kanban", "com.pyxis.greenhopper.jira:gh-simplified-agility-scrum", "com.pyxis.greenhopper.jira:gh-simplified-basic", "com.pyxis.greenhopper.jira:gh-simplified-kanban-classic", "com.pyxis.greenhopper.jira:gh-simplified-scrum-classic", "com.atlassian.servicedesk:simplified-it-service-management", "com.atlassian.servicedesk:simplified-general-service-desk", "com.atlassian.servicedesk:simplified-general-service-desk-it", "com.atlassian.servicedesk:simplified-general-service-desk-business", "com.atlassian.servicedesk:simplified-internal-service-desk", "com.atlassian.servicedesk:simplified-external-service-desk", "com.atlassian.servicedesk:simplified-hr-service-desk", "com.atlassian.servicedesk:simplified-facilities-service-desk", "com.atlassian.servicedesk:simplified-legal-service-desk", "com.atlassian.servicedesk:simplified-marketing-service-desk", "com.atlassian.servicedesk:simplified-finance-service-desk", "com.atlassian.servicedesk:simplified-analytics-service-desk", "com.atlassian.servicedesk:simplified-design-service-desk", "com.atlassian.servicedesk:simplified-sales-service-desk", "com.atlassian.servicedesk:simplified-halp-service-desk", "com.atlassian.servicedesk:simplified-custom-project-service-desk", "com.atlassian.jira-core-project-templates:jira-core-simplified-content-management", "com.atlassian.jira-core-project-templates:jira-core-simplified-document-approval", "com.atlassian.jira-core-project-templates:jira-core-simplified-lead-tracking", "com.atlassian.jira-core-project-templates:jira-core-simplified-process-control", "com.atlassian.jira-core-project-templates:jira-core-simplified-procurement", "com.atlassian.jira-core-project-templates:jira-core-simplified-project-management", "com.atlassian.jira-core-project-templates:jira-core-simplified-recruitment", "com.atlassian.jira-core-project-templates:jira-core-simplified-task-"]  # noqa: E501
        if project_template_key not in allowed_values:
            raise ValueError(
                "Invalid value for `project_template_key` ({0}), must be one of {1}"
                .format(project_template_key, allowed_values)
            )

        self._project_template_key = project_template_key

    @property
    def project_type_key(self):
        """Gets the project_type_key of this CreateProjectDetails.

        The [project type](https://confluence.atlassian.com/x/GwiiLQ#Jiraapplicationsoverview-Productfeaturesandprojecttypes), which defines the application-specific feature set. If you don't specify the project template you have to specify the project type.

        :return: The project_type_key of this CreateProjectDetails.
        :rtype: str
        """
        return self._project_type_key

    @project_type_key.setter
    def project_type_key(self, project_type_key):
        """Sets the project_type_key of this CreateProjectDetails.

        The [project type](https://confluence.atlassian.com/x/GwiiLQ#Jiraapplicationsoverview-Productfeaturesandprojecttypes), which defines the application-specific feature set. If you don't specify the project template you have to specify the project type.

        :param project_type_key: The project_type_key of this CreateProjectDetails.
        :type project_type_key: str
        """
        allowed_values = ["software", "service_desk", "business"]  # noqa: E501
        if project_type_key not in allowed_values:
            raise ValueError(
                "Invalid value for `project_type_key` ({0}), must be one of {1}"
                .format(project_type_key, allowed_values)
            )

        self._project_type_key = project_type_key

    @property
    def url(self):
        """Gets the url of this CreateProjectDetails.

        A link to information about this project, such as project documentation

        :return: The url of this CreateProjectDetails.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this CreateProjectDetails.

        A link to information about this project, such as project documentation

        :param url: The url of this CreateProjectDetails.
        :type url: str
        """

        self._url = url

    @property
    def workflow_scheme(self):
        """Gets the workflow_scheme of this CreateProjectDetails.

        The ID of the workflow scheme for the project. Use the [Get all workflow schemes](#api-rest-api-3-workflowscheme-get) operation to get a list of workflow scheme IDs. If you specify the workflow scheme you cannot specify the project template key.

        :return: The workflow_scheme of this CreateProjectDetails.
        :rtype: int
        """
        return self._workflow_scheme

    @workflow_scheme.setter
    def workflow_scheme(self, workflow_scheme):
        """Sets the workflow_scheme of this CreateProjectDetails.

        The ID of the workflow scheme for the project. Use the [Get all workflow schemes](#api-rest-api-3-workflowscheme-get) operation to get a list of workflow scheme IDs. If you specify the workflow scheme you cannot specify the project template key.

        :param workflow_scheme: The workflow_scheme of this CreateProjectDetails.
        :type workflow_scheme: int
        """

        self._workflow_scheme = workflow_scheme
