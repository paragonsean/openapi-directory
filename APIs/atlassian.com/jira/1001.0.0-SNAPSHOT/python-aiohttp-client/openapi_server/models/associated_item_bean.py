# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AssociatedItemBean(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, name: str=None, parent_id: str=None, parent_name: str=None, type_name: str=None):
        """AssociatedItemBean - a model defined in OpenAPI

        :param id: The id of this AssociatedItemBean.
        :param name: The name of this AssociatedItemBean.
        :param parent_id: The parent_id of this AssociatedItemBean.
        :param parent_name: The parent_name of this AssociatedItemBean.
        :param type_name: The type_name of this AssociatedItemBean.
        """
        self.openapi_types = {
            'id': str,
            'name': str,
            'parent_id': str,
            'parent_name': str,
            'type_name': str
        }

        self.attribute_map = {
            'id': 'id',
            'name': 'name',
            'parent_id': 'parentId',
            'parent_name': 'parentName',
            'type_name': 'typeName'
        }

        self._id = id
        self._name = name
        self._parent_id = parent_id
        self._parent_name = parent_name
        self._type_name = type_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AssociatedItemBean':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AssociatedItemBean of this AssociatedItemBean.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this AssociatedItemBean.

        The ID of the associated record.

        :return: The id of this AssociatedItemBean.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this AssociatedItemBean.

        The ID of the associated record.

        :param id: The id of this AssociatedItemBean.
        :type id: str
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this AssociatedItemBean.

        The name of the associated record.

        :return: The name of this AssociatedItemBean.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this AssociatedItemBean.

        The name of the associated record.

        :param name: The name of this AssociatedItemBean.
        :type name: str
        """

        self._name = name

    @property
    def parent_id(self):
        """Gets the parent_id of this AssociatedItemBean.

        The ID of the associated parent record.

        :return: The parent_id of this AssociatedItemBean.
        :rtype: str
        """
        return self._parent_id

    @parent_id.setter
    def parent_id(self, parent_id):
        """Sets the parent_id of this AssociatedItemBean.

        The ID of the associated parent record.

        :param parent_id: The parent_id of this AssociatedItemBean.
        :type parent_id: str
        """

        self._parent_id = parent_id

    @property
    def parent_name(self):
        """Gets the parent_name of this AssociatedItemBean.

        The name of the associated parent record.

        :return: The parent_name of this AssociatedItemBean.
        :rtype: str
        """
        return self._parent_name

    @parent_name.setter
    def parent_name(self, parent_name):
        """Sets the parent_name of this AssociatedItemBean.

        The name of the associated parent record.

        :param parent_name: The parent_name of this AssociatedItemBean.
        :type parent_name: str
        """

        self._parent_name = parent_name

    @property
    def type_name(self):
        """Gets the type_name of this AssociatedItemBean.

        The type of the associated record.

        :return: The type_name of this AssociatedItemBean.
        :rtype: str
        """
        return self._type_name

    @type_name.setter
    def type_name(self, type_name):
        """Sets the type_name of this AssociatedItemBean.

        The type of the associated record.

        :param type_name: The type_name of this AssociatedItemBean.
        :type type_name: str
        """

        self._type_name = type_name
