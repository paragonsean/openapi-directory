# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.project_id import ProjectId
from openapi_server import util


class ProjectIssueTypes(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, issue_types: list[str]=None, project: ProjectId=None):
        """ProjectIssueTypes - a model defined in OpenAPI

        :param issue_types: The issue_types of this ProjectIssueTypes.
        :param project: The project of this ProjectIssueTypes.
        """
        self.openapi_types = {
            'issue_types': list[str],
            'project': ProjectId
        }

        self.attribute_map = {
            'issue_types': 'issueTypes',
            'project': 'project'
        }

        self._issue_types = issue_types
        self._project = project

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProjectIssueTypes':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ProjectIssueTypes of this ProjectIssueTypes.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def issue_types(self):
        """Gets the issue_types of this ProjectIssueTypes.

        IDs of the issue types

        :return: The issue_types of this ProjectIssueTypes.
        :rtype: list[str]
        """
        return self._issue_types

    @issue_types.setter
    def issue_types(self, issue_types):
        """Sets the issue_types of this ProjectIssueTypes.

        IDs of the issue types

        :param issue_types: The issue_types of this ProjectIssueTypes.
        :type issue_types: list[str]
        """

        self._issue_types = issue_types

    @property
    def project(self):
        """Gets the project of this ProjectIssueTypes.


        :return: The project of this ProjectIssueTypes.
        :rtype: ProjectId
        """
        return self._project

    @project.setter
    def project(self, project):
        """Sets the project of this ProjectIssueTypes.


        :param project: The project of this ProjectIssueTypes.
        :type project: ProjectId
        """

        self._project = project
