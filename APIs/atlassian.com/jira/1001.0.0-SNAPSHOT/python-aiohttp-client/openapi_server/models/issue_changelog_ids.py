# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class IssueChangelogIds(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, changelog_ids: list[int]=None):
        """IssueChangelogIds - a model defined in OpenAPI

        :param changelog_ids: The changelog_ids of this IssueChangelogIds.
        """
        self.openapi_types = {
            'changelog_ids': list[int]
        }

        self.attribute_map = {
            'changelog_ids': 'changelogIds'
        }

        self._changelog_ids = changelog_ids

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IssueChangelogIds':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The IssueChangelogIds of this IssueChangelogIds.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def changelog_ids(self):
        """Gets the changelog_ids of this IssueChangelogIds.

        The list of changelog IDs.

        :return: The changelog_ids of this IssueChangelogIds.
        :rtype: list[int]
        """
        return self._changelog_ids

    @changelog_ids.setter
    def changelog_ids(self, changelog_ids):
        """Sets the changelog_ids of this IssueChangelogIds.

        The list of changelog IDs.

        :param changelog_ids: The changelog_ids of this IssueChangelogIds.
        :type changelog_ids: list[int]
        """
        if changelog_ids is None:
            raise ValueError("Invalid value for `changelog_ids`, must not be `None`")

        self._changelog_ids = changelog_ids
