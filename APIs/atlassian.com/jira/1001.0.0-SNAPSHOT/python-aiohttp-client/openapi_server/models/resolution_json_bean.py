# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ResolutionJsonBean(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, default: bool=None, description: str=None, icon_url: str=None, id: str=None, name: str=None, _self: str=None):
        """ResolutionJsonBean - a model defined in OpenAPI

        :param default: The default of this ResolutionJsonBean.
        :param description: The description of this ResolutionJsonBean.
        :param icon_url: The icon_url of this ResolutionJsonBean.
        :param id: The id of this ResolutionJsonBean.
        :param name: The name of this ResolutionJsonBean.
        :param _self: The _self of this ResolutionJsonBean.
        """
        self.openapi_types = {
            'default': bool,
            'description': str,
            'icon_url': str,
            'id': str,
            'name': str,
            '_self': str
        }

        self.attribute_map = {
            'default': 'default',
            'description': 'description',
            'icon_url': 'iconUrl',
            'id': 'id',
            'name': 'name',
            '_self': 'self'
        }

        self._default = default
        self._description = description
        self._icon_url = icon_url
        self._id = id
        self._name = name
        self.__self = _self

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ResolutionJsonBean':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ResolutionJsonBean of this ResolutionJsonBean.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def default(self):
        """Gets the default of this ResolutionJsonBean.


        :return: The default of this ResolutionJsonBean.
        :rtype: bool
        """
        return self._default

    @default.setter
    def default(self, default):
        """Sets the default of this ResolutionJsonBean.


        :param default: The default of this ResolutionJsonBean.
        :type default: bool
        """

        self._default = default

    @property
    def description(self):
        """Gets the description of this ResolutionJsonBean.


        :return: The description of this ResolutionJsonBean.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this ResolutionJsonBean.


        :param description: The description of this ResolutionJsonBean.
        :type description: str
        """

        self._description = description

    @property
    def icon_url(self):
        """Gets the icon_url of this ResolutionJsonBean.


        :return: The icon_url of this ResolutionJsonBean.
        :rtype: str
        """
        return self._icon_url

    @icon_url.setter
    def icon_url(self, icon_url):
        """Sets the icon_url of this ResolutionJsonBean.


        :param icon_url: The icon_url of this ResolutionJsonBean.
        :type icon_url: str
        """

        self._icon_url = icon_url

    @property
    def id(self):
        """Gets the id of this ResolutionJsonBean.


        :return: The id of this ResolutionJsonBean.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ResolutionJsonBean.


        :param id: The id of this ResolutionJsonBean.
        :type id: str
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this ResolutionJsonBean.


        :return: The name of this ResolutionJsonBean.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ResolutionJsonBean.


        :param name: The name of this ResolutionJsonBean.
        :type name: str
        """

        self._name = name

    @property
    def _self(self):
        """Gets the _self of this ResolutionJsonBean.


        :return: The _self of this ResolutionJsonBean.
        :rtype: str
        """
        return self.__self

    @_self.setter
    def _self(self, _self):
        """Sets the _self of this ResolutionJsonBean.


        :param _self: The _self of this ResolutionJsonBean.
        :type _self: str
        """

        self.__self = _self
