# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UpdateDefaultScreenScheme(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, screen_scheme_id: str=None):
        """UpdateDefaultScreenScheme - a model defined in OpenAPI

        :param screen_scheme_id: The screen_scheme_id of this UpdateDefaultScreenScheme.
        """
        self.openapi_types = {
            'screen_scheme_id': str
        }

        self.attribute_map = {
            'screen_scheme_id': 'screenSchemeId'
        }

        self._screen_scheme_id = screen_scheme_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateDefaultScreenScheme':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateDefaultScreenScheme of this UpdateDefaultScreenScheme.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def screen_scheme_id(self):
        """Gets the screen_scheme_id of this UpdateDefaultScreenScheme.

        The ID of the screen scheme.

        :return: The screen_scheme_id of this UpdateDefaultScreenScheme.
        :rtype: str
        """
        return self._screen_scheme_id

    @screen_scheme_id.setter
    def screen_scheme_id(self, screen_scheme_id):
        """Sets the screen_scheme_id of this UpdateDefaultScreenScheme.

        The ID of the screen scheme.

        :param screen_scheme_id: The screen_scheme_id of this UpdateDefaultScreenScheme.
        :type screen_scheme_id: str
        """
        if screen_scheme_id is None:
            raise ValueError("Invalid value for `screen_scheme_id`, must not be `None`")

        self._screen_scheme_id = screen_scheme_id
