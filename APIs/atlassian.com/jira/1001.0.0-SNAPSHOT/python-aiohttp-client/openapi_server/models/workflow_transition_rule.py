# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class WorkflowTransitionRule(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, configuration: object=None, type: str=None):
        """WorkflowTransitionRule - a model defined in OpenAPI

        :param configuration: The configuration of this WorkflowTransitionRule.
        :param type: The type of this WorkflowTransitionRule.
        """
        self.openapi_types = {
            'configuration': object,
            'type': str
        }

        self.attribute_map = {
            'configuration': 'configuration',
            'type': 'type'
        }

        self._configuration = configuration
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'WorkflowTransitionRule':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The WorkflowTransitionRule of this WorkflowTransitionRule.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def configuration(self):
        """Gets the configuration of this WorkflowTransitionRule.

        EXPERIMENTAL. The configuration of the transition rule.

        :return: The configuration of this WorkflowTransitionRule.
        :rtype: object
        """
        return self._configuration

    @configuration.setter
    def configuration(self, configuration):
        """Sets the configuration of this WorkflowTransitionRule.

        EXPERIMENTAL. The configuration of the transition rule.

        :param configuration: The configuration of this WorkflowTransitionRule.
        :type configuration: object
        """

        self._configuration = configuration

    @property
    def type(self):
        """Gets the type of this WorkflowTransitionRule.

        The type of the transition rule.

        :return: The type of this WorkflowTransitionRule.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this WorkflowTransitionRule.

        The type of the transition rule.

        :param type: The type of this WorkflowTransitionRule.
        :type type: str
        """
        if type is None:
            raise ValueError("Invalid value for `type`, must not be `None`")

        self._type = type
