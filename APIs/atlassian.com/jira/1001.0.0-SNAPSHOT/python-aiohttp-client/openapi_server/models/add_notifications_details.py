# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.notification_scheme_event_details import NotificationSchemeEventDetails
from openapi_server import util


class AddNotificationsDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, notification_scheme_events: List[NotificationSchemeEventDetails]=None):
        """AddNotificationsDetails - a model defined in OpenAPI

        :param notification_scheme_events: The notification_scheme_events of this AddNotificationsDetails.
        """
        self.openapi_types = {
            'notification_scheme_events': List[NotificationSchemeEventDetails]
        }

        self.attribute_map = {
            'notification_scheme_events': 'notificationSchemeEvents'
        }

        self._notification_scheme_events = notification_scheme_events

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AddNotificationsDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AddNotificationsDetails of this AddNotificationsDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def notification_scheme_events(self):
        """Gets the notification_scheme_events of this AddNotificationsDetails.

        The list of notifications which should be added to the notification scheme.

        :return: The notification_scheme_events of this AddNotificationsDetails.
        :rtype: List[NotificationSchemeEventDetails]
        """
        return self._notification_scheme_events

    @notification_scheme_events.setter
    def notification_scheme_events(self, notification_scheme_events):
        """Sets the notification_scheme_events of this AddNotificationsDetails.

        The list of notifications which should be added to the notification scheme.

        :param notification_scheme_events: The notification_scheme_events of this AddNotificationsDetails.
        :type notification_scheme_events: List[NotificationSchemeEventDetails]
        """
        if notification_scheme_events is None:
            raise ValueError("Invalid value for `notification_scheme_events`, must not be `None`")

        self._notification_scheme_events = notification_scheme_events
