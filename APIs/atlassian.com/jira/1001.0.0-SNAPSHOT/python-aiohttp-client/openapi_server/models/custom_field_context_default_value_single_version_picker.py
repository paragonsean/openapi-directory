# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CustomFieldContextDefaultValueSingleVersionPicker(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, type: str=None, version_id: str=None, version_order: str=None):
        """CustomFieldContextDefaultValueSingleVersionPicker - a model defined in OpenAPI

        :param type: The type of this CustomFieldContextDefaultValueSingleVersionPicker.
        :param version_id: The version_id of this CustomFieldContextDefaultValueSingleVersionPicker.
        :param version_order: The version_order of this CustomFieldContextDefaultValueSingleVersionPicker.
        """
        self.openapi_types = {
            'type': str,
            'version_id': str,
            'version_order': str
        }

        self.attribute_map = {
            'type': 'type',
            'version_id': 'versionId',
            'version_order': 'versionOrder'
        }

        self._type = type
        self._version_id = version_id
        self._version_order = version_order

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CustomFieldContextDefaultValueSingleVersionPicker':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CustomFieldContextDefaultValueSingleVersionPicker of this CustomFieldContextDefaultValueSingleVersionPicker.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def type(self):
        """Gets the type of this CustomFieldContextDefaultValueSingleVersionPicker.


        :return: The type of this CustomFieldContextDefaultValueSingleVersionPicker.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this CustomFieldContextDefaultValueSingleVersionPicker.


        :param type: The type of this CustomFieldContextDefaultValueSingleVersionPicker.
        :type type: str
        """
        if type is None:
            raise ValueError("Invalid value for `type`, must not be `None`")

        self._type = type

    @property
    def version_id(self):
        """Gets the version_id of this CustomFieldContextDefaultValueSingleVersionPicker.

        The ID of the default version.

        :return: The version_id of this CustomFieldContextDefaultValueSingleVersionPicker.
        :rtype: str
        """
        return self._version_id

    @version_id.setter
    def version_id(self, version_id):
        """Sets the version_id of this CustomFieldContextDefaultValueSingleVersionPicker.

        The ID of the default version.

        :param version_id: The version_id of this CustomFieldContextDefaultValueSingleVersionPicker.
        :type version_id: str
        """
        if version_id is None:
            raise ValueError("Invalid value for `version_id`, must not be `None`")

        self._version_id = version_id

    @property
    def version_order(self):
        """Gets the version_order of this CustomFieldContextDefaultValueSingleVersionPicker.

        The order the pickable versions are displayed in. If not provided, the released-first order is used. Available version orders are `\"releasedFirst\"` and `\"unreleasedFirst\"`.

        :return: The version_order of this CustomFieldContextDefaultValueSingleVersionPicker.
        :rtype: str
        """
        return self._version_order

    @version_order.setter
    def version_order(self, version_order):
        """Sets the version_order of this CustomFieldContextDefaultValueSingleVersionPicker.

        The order the pickable versions are displayed in. If not provided, the released-first order is used. Available version orders are `\"releasedFirst\"` and `\"unreleasedFirst\"`.

        :param version_order: The version_order of this CustomFieldContextDefaultValueSingleVersionPicker.
        :type version_order: str
        """

        self._version_order = version_order
