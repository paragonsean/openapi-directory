# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.user_details import UserDetails
from openapi_server import util


class PagedListUserDetailsApplicationUser(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, end_index: int=None, items: List[UserDetails]=None, max_results: int=None, size: int=None, start_index: int=None):
        """PagedListUserDetailsApplicationUser - a model defined in OpenAPI

        :param end_index: The end_index of this PagedListUserDetailsApplicationUser.
        :param items: The items of this PagedListUserDetailsApplicationUser.
        :param max_results: The max_results of this PagedListUserDetailsApplicationUser.
        :param size: The size of this PagedListUserDetailsApplicationUser.
        :param start_index: The start_index of this PagedListUserDetailsApplicationUser.
        """
        self.openapi_types = {
            'end_index': int,
            'items': List[UserDetails],
            'max_results': int,
            'size': int,
            'start_index': int
        }

        self.attribute_map = {
            'end_index': 'end-index',
            'items': 'items',
            'max_results': 'max-results',
            'size': 'size',
            'start_index': 'start-index'
        }

        self._end_index = end_index
        self._items = items
        self._max_results = max_results
        self._size = size
        self._start_index = start_index

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PagedListUserDetailsApplicationUser':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PagedListUserDetailsApplicationUser of this PagedListUserDetailsApplicationUser.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def end_index(self):
        """Gets the end_index of this PagedListUserDetailsApplicationUser.

        The index of the last item returned on the page.

        :return: The end_index of this PagedListUserDetailsApplicationUser.
        :rtype: int
        """
        return self._end_index

    @end_index.setter
    def end_index(self, end_index):
        """Sets the end_index of this PagedListUserDetailsApplicationUser.

        The index of the last item returned on the page.

        :param end_index: The end_index of this PagedListUserDetailsApplicationUser.
        :type end_index: int
        """

        self._end_index = end_index

    @property
    def items(self):
        """Gets the items of this PagedListUserDetailsApplicationUser.

        The list of items.

        :return: The items of this PagedListUserDetailsApplicationUser.
        :rtype: List[UserDetails]
        """
        return self._items

    @items.setter
    def items(self, items):
        """Sets the items of this PagedListUserDetailsApplicationUser.

        The list of items.

        :param items: The items of this PagedListUserDetailsApplicationUser.
        :type items: List[UserDetails]
        """

        self._items = items

    @property
    def max_results(self):
        """Gets the max_results of this PagedListUserDetailsApplicationUser.

        The maximum number of results that could be on the page.

        :return: The max_results of this PagedListUserDetailsApplicationUser.
        :rtype: int
        """
        return self._max_results

    @max_results.setter
    def max_results(self, max_results):
        """Sets the max_results of this PagedListUserDetailsApplicationUser.

        The maximum number of results that could be on the page.

        :param max_results: The max_results of this PagedListUserDetailsApplicationUser.
        :type max_results: int
        """

        self._max_results = max_results

    @property
    def size(self):
        """Gets the size of this PagedListUserDetailsApplicationUser.

        The number of items on the page.

        :return: The size of this PagedListUserDetailsApplicationUser.
        :rtype: int
        """
        return self._size

    @size.setter
    def size(self, size):
        """Sets the size of this PagedListUserDetailsApplicationUser.

        The number of items on the page.

        :param size: The size of this PagedListUserDetailsApplicationUser.
        :type size: int
        """

        self._size = size

    @property
    def start_index(self):
        """Gets the start_index of this PagedListUserDetailsApplicationUser.

        The index of the first item returned on the page.

        :return: The start_index of this PagedListUserDetailsApplicationUser.
        :rtype: int
        """
        return self._start_index

    @start_index.setter
    def start_index(self, start_index):
        """Sets the start_index of this PagedListUserDetailsApplicationUser.

        The index of the first item returned on the page.

        :param start_index: The start_index of this PagedListUserDetailsApplicationUser.
        :type start_index: int
        """

        self._start_index = start_index
