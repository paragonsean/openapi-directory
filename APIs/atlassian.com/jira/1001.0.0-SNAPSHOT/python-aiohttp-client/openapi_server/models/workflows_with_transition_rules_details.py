# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.workflow_transition_rules_details import WorkflowTransitionRulesDetails
from openapi_server import util


class WorkflowsWithTransitionRulesDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, workflows: List[WorkflowTransitionRulesDetails]=None):
        """WorkflowsWithTransitionRulesDetails - a model defined in OpenAPI

        :param workflows: The workflows of this WorkflowsWithTransitionRulesDetails.
        """
        self.openapi_types = {
            'workflows': List[WorkflowTransitionRulesDetails]
        }

        self.attribute_map = {
            'workflows': 'workflows'
        }

        self._workflows = workflows

    @classmethod
    def from_dict(cls, dikt: dict) -> 'WorkflowsWithTransitionRulesDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The WorkflowsWithTransitionRulesDetails of this WorkflowsWithTransitionRulesDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def workflows(self):
        """Gets the workflows of this WorkflowsWithTransitionRulesDetails.

        The list of workflows with transition rules to delete.

        :return: The workflows of this WorkflowsWithTransitionRulesDetails.
        :rtype: List[WorkflowTransitionRulesDetails]
        """
        return self._workflows

    @workflows.setter
    def workflows(self, workflows):
        """Sets the workflows of this WorkflowsWithTransitionRulesDetails.

        The list of workflows with transition rules to delete.

        :param workflows: The workflows of this WorkflowsWithTransitionRulesDetails.
        :type workflows: List[WorkflowTransitionRulesDetails]
        """
        if workflows is None:
            raise ValueError("Invalid value for `workflows`, must not be `None`")

        self._workflows = workflows
