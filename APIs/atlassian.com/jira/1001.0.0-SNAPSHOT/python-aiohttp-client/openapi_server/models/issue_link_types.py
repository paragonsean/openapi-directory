# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.issue_link_type import IssueLinkType
from openapi_server import util


class IssueLinkTypes(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, issue_link_types: List[IssueLinkType]=None):
        """IssueLinkTypes - a model defined in OpenAPI

        :param issue_link_types: The issue_link_types of this IssueLinkTypes.
        """
        self.openapi_types = {
            'issue_link_types': List[IssueLinkType]
        }

        self.attribute_map = {
            'issue_link_types': 'issueLinkTypes'
        }

        self._issue_link_types = issue_link_types

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IssueLinkTypes':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The IssueLinkTypes of this IssueLinkTypes.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def issue_link_types(self):
        """Gets the issue_link_types of this IssueLinkTypes.

        The issue link type bean.

        :return: The issue_link_types of this IssueLinkTypes.
        :rtype: List[IssueLinkType]
        """
        return self._issue_link_types

    @issue_link_types.setter
    def issue_link_types(self, issue_link_types):
        """Sets the issue_link_types of this IssueLinkTypes.

        The issue link type bean.

        :param issue_link_types: The issue_link_types of this IssueLinkTypes.
        :type issue_link_types: List[IssueLinkType]
        """

        self._issue_link_types = issue_link_types
