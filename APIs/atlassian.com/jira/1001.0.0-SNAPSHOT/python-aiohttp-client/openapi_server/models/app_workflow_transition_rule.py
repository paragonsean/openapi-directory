# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.rule_configuration import RuleConfiguration
from openapi_server.models.workflow_transition import WorkflowTransition
from openapi_server import util


class AppWorkflowTransitionRule(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, configuration: RuleConfiguration=None, id: str=None, key: str=None, transition: WorkflowTransition=None):
        """AppWorkflowTransitionRule - a model defined in OpenAPI

        :param configuration: The configuration of this AppWorkflowTransitionRule.
        :param id: The id of this AppWorkflowTransitionRule.
        :param key: The key of this AppWorkflowTransitionRule.
        :param transition: The transition of this AppWorkflowTransitionRule.
        """
        self.openapi_types = {
            'configuration': RuleConfiguration,
            'id': str,
            'key': str,
            'transition': WorkflowTransition
        }

        self.attribute_map = {
            'configuration': 'configuration',
            'id': 'id',
            'key': 'key',
            'transition': 'transition'
        }

        self._configuration = configuration
        self._id = id
        self._key = key
        self._transition = transition

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AppWorkflowTransitionRule':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AppWorkflowTransitionRule of this AppWorkflowTransitionRule.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def configuration(self):
        """Gets the configuration of this AppWorkflowTransitionRule.


        :return: The configuration of this AppWorkflowTransitionRule.
        :rtype: RuleConfiguration
        """
        return self._configuration

    @configuration.setter
    def configuration(self, configuration):
        """Sets the configuration of this AppWorkflowTransitionRule.


        :param configuration: The configuration of this AppWorkflowTransitionRule.
        :type configuration: RuleConfiguration
        """
        if configuration is None:
            raise ValueError("Invalid value for `configuration`, must not be `None`")

        self._configuration = configuration

    @property
    def id(self):
        """Gets the id of this AppWorkflowTransitionRule.

        The ID of the transition rule.

        :return: The id of this AppWorkflowTransitionRule.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this AppWorkflowTransitionRule.

        The ID of the transition rule.

        :param id: The id of this AppWorkflowTransitionRule.
        :type id: str
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")

        self._id = id

    @property
    def key(self):
        """Gets the key of this AppWorkflowTransitionRule.

        The key of the rule, as defined in the Connect or the Forge app descriptor.

        :return: The key of this AppWorkflowTransitionRule.
        :rtype: str
        """
        return self._key

    @key.setter
    def key(self, key):
        """Sets the key of this AppWorkflowTransitionRule.

        The key of the rule, as defined in the Connect or the Forge app descriptor.

        :param key: The key of this AppWorkflowTransitionRule.
        :type key: str
        """
        if key is None:
            raise ValueError("Invalid value for `key`, must not be `None`")

        self._key = key

    @property
    def transition(self):
        """Gets the transition of this AppWorkflowTransitionRule.


        :return: The transition of this AppWorkflowTransitionRule.
        :rtype: WorkflowTransition
        """
        return self._transition

    @transition.setter
    def transition(self, transition):
        """Sets the transition of this AppWorkflowTransitionRule.


        :param transition: The transition of this AppWorkflowTransitionRule.
        :type transition: WorkflowTransition
        """

        self._transition = transition
