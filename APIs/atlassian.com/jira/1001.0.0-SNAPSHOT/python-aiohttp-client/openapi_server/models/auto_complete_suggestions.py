# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.auto_complete_suggestion import AutoCompleteSuggestion
from openapi_server import util


class AutoCompleteSuggestions(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, results: List[AutoCompleteSuggestion]=None):
        """AutoCompleteSuggestions - a model defined in OpenAPI

        :param results: The results of this AutoCompleteSuggestions.
        """
        self.openapi_types = {
            'results': List[AutoCompleteSuggestion]
        }

        self.attribute_map = {
            'results': 'results'
        }

        self._results = results

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AutoCompleteSuggestions':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AutoCompleteSuggestions of this AutoCompleteSuggestions.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def results(self):
        """Gets the results of this AutoCompleteSuggestions.

        The list of suggested item.

        :return: The results of this AutoCompleteSuggestions.
        :rtype: List[AutoCompleteSuggestion]
        """
        return self._results

    @results.setter
    def results(self, results):
        """Sets the results of this AutoCompleteSuggestions.

        The list of suggested item.

        :param results: The results of this AutoCompleteSuggestions.
        :type results: List[AutoCompleteSuggestion]
        """

        self._results = results
