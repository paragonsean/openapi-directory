# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.history_metadata_participant import HistoryMetadataParticipant
from openapi_server import util


class HistoryMetadata(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, activity_description: str=None, activity_description_key: str=None, actor: HistoryMetadataParticipant=None, cause: HistoryMetadataParticipant=None, description: str=None, description_key: str=None, email_description: str=None, email_description_key: str=None, extra_data: Dict[str, str]=None, generator: HistoryMetadataParticipant=None, type: str=None):
        """HistoryMetadata - a model defined in OpenAPI

        :param activity_description: The activity_description of this HistoryMetadata.
        :param activity_description_key: The activity_description_key of this HistoryMetadata.
        :param actor: The actor of this HistoryMetadata.
        :param cause: The cause of this HistoryMetadata.
        :param description: The description of this HistoryMetadata.
        :param description_key: The description_key of this HistoryMetadata.
        :param email_description: The email_description of this HistoryMetadata.
        :param email_description_key: The email_description_key of this HistoryMetadata.
        :param extra_data: The extra_data of this HistoryMetadata.
        :param generator: The generator of this HistoryMetadata.
        :param type: The type of this HistoryMetadata.
        """
        self.openapi_types = {
            'activity_description': str,
            'activity_description_key': str,
            'actor': HistoryMetadataParticipant,
            'cause': HistoryMetadataParticipant,
            'description': str,
            'description_key': str,
            'email_description': str,
            'email_description_key': str,
            'extra_data': Dict[str, str],
            'generator': HistoryMetadataParticipant,
            'type': str
        }

        self.attribute_map = {
            'activity_description': 'activityDescription',
            'activity_description_key': 'activityDescriptionKey',
            'actor': 'actor',
            'cause': 'cause',
            'description': 'description',
            'description_key': 'descriptionKey',
            'email_description': 'emailDescription',
            'email_description_key': 'emailDescriptionKey',
            'extra_data': 'extraData',
            'generator': 'generator',
            'type': 'type'
        }

        self._activity_description = activity_description
        self._activity_description_key = activity_description_key
        self._actor = actor
        self._cause = cause
        self._description = description
        self._description_key = description_key
        self._email_description = email_description
        self._email_description_key = email_description_key
        self._extra_data = extra_data
        self._generator = generator
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'HistoryMetadata':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The HistoryMetadata of this HistoryMetadata.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def activity_description(self):
        """Gets the activity_description of this HistoryMetadata.

        The activity described in the history record.

        :return: The activity_description of this HistoryMetadata.
        :rtype: str
        """
        return self._activity_description

    @activity_description.setter
    def activity_description(self, activity_description):
        """Sets the activity_description of this HistoryMetadata.

        The activity described in the history record.

        :param activity_description: The activity_description of this HistoryMetadata.
        :type activity_description: str
        """

        self._activity_description = activity_description

    @property
    def activity_description_key(self):
        """Gets the activity_description_key of this HistoryMetadata.

        The key of the activity described in the history record.

        :return: The activity_description_key of this HistoryMetadata.
        :rtype: str
        """
        return self._activity_description_key

    @activity_description_key.setter
    def activity_description_key(self, activity_description_key):
        """Sets the activity_description_key of this HistoryMetadata.

        The key of the activity described in the history record.

        :param activity_description_key: The activity_description_key of this HistoryMetadata.
        :type activity_description_key: str
        """

        self._activity_description_key = activity_description_key

    @property
    def actor(self):
        """Gets the actor of this HistoryMetadata.

        Details of the user whose action created the history record.

        :return: The actor of this HistoryMetadata.
        :rtype: HistoryMetadataParticipant
        """
        return self._actor

    @actor.setter
    def actor(self, actor):
        """Sets the actor of this HistoryMetadata.

        Details of the user whose action created the history record.

        :param actor: The actor of this HistoryMetadata.
        :type actor: HistoryMetadataParticipant
        """

        self._actor = actor

    @property
    def cause(self):
        """Gets the cause of this HistoryMetadata.

        Details of the cause that triggered the creation the history record.

        :return: The cause of this HistoryMetadata.
        :rtype: HistoryMetadataParticipant
        """
        return self._cause

    @cause.setter
    def cause(self, cause):
        """Sets the cause of this HistoryMetadata.

        Details of the cause that triggered the creation the history record.

        :param cause: The cause of this HistoryMetadata.
        :type cause: HistoryMetadataParticipant
        """

        self._cause = cause

    @property
    def description(self):
        """Gets the description of this HistoryMetadata.

        The description of the history record.

        :return: The description of this HistoryMetadata.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this HistoryMetadata.

        The description of the history record.

        :param description: The description of this HistoryMetadata.
        :type description: str
        """

        self._description = description

    @property
    def description_key(self):
        """Gets the description_key of this HistoryMetadata.

        The description key of the history record.

        :return: The description_key of this HistoryMetadata.
        :rtype: str
        """
        return self._description_key

    @description_key.setter
    def description_key(self, description_key):
        """Sets the description_key of this HistoryMetadata.

        The description key of the history record.

        :param description_key: The description_key of this HistoryMetadata.
        :type description_key: str
        """

        self._description_key = description_key

    @property
    def email_description(self):
        """Gets the email_description of this HistoryMetadata.

        The description of the email address associated the history record.

        :return: The email_description of this HistoryMetadata.
        :rtype: str
        """
        return self._email_description

    @email_description.setter
    def email_description(self, email_description):
        """Sets the email_description of this HistoryMetadata.

        The description of the email address associated the history record.

        :param email_description: The email_description of this HistoryMetadata.
        :type email_description: str
        """

        self._email_description = email_description

    @property
    def email_description_key(self):
        """Gets the email_description_key of this HistoryMetadata.

        The description key of the email address associated the history record.

        :return: The email_description_key of this HistoryMetadata.
        :rtype: str
        """
        return self._email_description_key

    @email_description_key.setter
    def email_description_key(self, email_description_key):
        """Sets the email_description_key of this HistoryMetadata.

        The description key of the email address associated the history record.

        :param email_description_key: The email_description_key of this HistoryMetadata.
        :type email_description_key: str
        """

        self._email_description_key = email_description_key

    @property
    def extra_data(self):
        """Gets the extra_data of this HistoryMetadata.

        Additional arbitrary information about the history record.

        :return: The extra_data of this HistoryMetadata.
        :rtype: Dict[str, str]
        """
        return self._extra_data

    @extra_data.setter
    def extra_data(self, extra_data):
        """Sets the extra_data of this HistoryMetadata.

        Additional arbitrary information about the history record.

        :param extra_data: The extra_data of this HistoryMetadata.
        :type extra_data: Dict[str, str]
        """

        self._extra_data = extra_data

    @property
    def generator(self):
        """Gets the generator of this HistoryMetadata.

        Details of the system that generated the history record.

        :return: The generator of this HistoryMetadata.
        :rtype: HistoryMetadataParticipant
        """
        return self._generator

    @generator.setter
    def generator(self, generator):
        """Sets the generator of this HistoryMetadata.

        Details of the system that generated the history record.

        :param generator: The generator of this HistoryMetadata.
        :type generator: HistoryMetadataParticipant
        """

        self._generator = generator

    @property
    def type(self):
        """Gets the type of this HistoryMetadata.

        The type of the history record.

        :return: The type of this HistoryMetadata.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this HistoryMetadata.

        The type of the history record.

        :param type: The type of this HistoryMetadata.
        :type type: str
        """

        self._type = type
