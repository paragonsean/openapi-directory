# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class IssueFilterForBulkPropertySet(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, current_value: object=None, entity_ids: list[int]=None, has_property: bool=None):
        """IssueFilterForBulkPropertySet - a model defined in OpenAPI

        :param current_value: The current_value of this IssueFilterForBulkPropertySet.
        :param entity_ids: The entity_ids of this IssueFilterForBulkPropertySet.
        :param has_property: The has_property of this IssueFilterForBulkPropertySet.
        """
        self.openapi_types = {
            'current_value': object,
            'entity_ids': list[int],
            'has_property': bool
        }

        self.attribute_map = {
            'current_value': 'currentValue',
            'entity_ids': 'entityIds',
            'has_property': 'hasProperty'
        }

        self._current_value = current_value
        self._entity_ids = entity_ids
        self._has_property = has_property

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IssueFilterForBulkPropertySet':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The IssueFilterForBulkPropertySet of this IssueFilterForBulkPropertySet.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def current_value(self):
        """Gets the current_value of this IssueFilterForBulkPropertySet.

        The value of properties to perform the bulk operation on.

        :return: The current_value of this IssueFilterForBulkPropertySet.
        :rtype: object
        """
        return self._current_value

    @current_value.setter
    def current_value(self, current_value):
        """Sets the current_value of this IssueFilterForBulkPropertySet.

        The value of properties to perform the bulk operation on.

        :param current_value: The current_value of this IssueFilterForBulkPropertySet.
        :type current_value: object
        """

        self._current_value = current_value

    @property
    def entity_ids(self):
        """Gets the entity_ids of this IssueFilterForBulkPropertySet.

        List of issues to perform the bulk operation on.

        :return: The entity_ids of this IssueFilterForBulkPropertySet.
        :rtype: list[int]
        """
        return self._entity_ids

    @entity_ids.setter
    def entity_ids(self, entity_ids):
        """Sets the entity_ids of this IssueFilterForBulkPropertySet.

        List of issues to perform the bulk operation on.

        :param entity_ids: The entity_ids of this IssueFilterForBulkPropertySet.
        :type entity_ids: list[int]
        """

        self._entity_ids = entity_ids

    @property
    def has_property(self):
        """Gets the has_property of this IssueFilterForBulkPropertySet.

        Whether the bulk operation occurs only when the property is present on or absent from an issue.

        :return: The has_property of this IssueFilterForBulkPropertySet.
        :rtype: bool
        """
        return self._has_property

    @has_property.setter
    def has_property(self, has_property):
        """Sets the has_property of this IssueFilterForBulkPropertySet.

        Whether the bulk operation occurs only when the property is present on or absent from an issue.

        :param has_property: The has_property of this IssueFilterForBulkPropertySet.
        :type has_property: bool
        """

        self._has_property = has_property
