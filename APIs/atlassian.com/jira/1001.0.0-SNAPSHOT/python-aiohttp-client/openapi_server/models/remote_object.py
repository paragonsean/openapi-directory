# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.icon import Icon
from openapi_server.models.status import Status
from openapi_server import util


class RemoteObject(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, icon: Icon=None, status: Status=None, summary: str=None, title: str=None, url: str=None):
        """RemoteObject - a model defined in OpenAPI

        :param icon: The icon of this RemoteObject.
        :param status: The status of this RemoteObject.
        :param summary: The summary of this RemoteObject.
        :param title: The title of this RemoteObject.
        :param url: The url of this RemoteObject.
        """
        self.openapi_types = {
            'icon': Icon,
            'status': Status,
            'summary': str,
            'title': str,
            'url': str
        }

        self.attribute_map = {
            'icon': 'icon',
            'status': 'status',
            'summary': 'summary',
            'title': 'title',
            'url': 'url'
        }

        self._icon = icon
        self._status = status
        self._summary = summary
        self._title = title
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RemoteObject':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RemoteObject of this RemoteObject.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def icon(self):
        """Gets the icon of this RemoteObject.

        Details of the icon for the item. If no icon is defined, the default link icon is used in Jira.

        :return: The icon of this RemoteObject.
        :rtype: Icon
        """
        return self._icon

    @icon.setter
    def icon(self, icon):
        """Sets the icon of this RemoteObject.

        Details of the icon for the item. If no icon is defined, the default link icon is used in Jira.

        :param icon: The icon of this RemoteObject.
        :type icon: Icon
        """

        self._icon = icon

    @property
    def status(self):
        """Gets the status of this RemoteObject.

        The status of the item.

        :return: The status of this RemoteObject.
        :rtype: Status
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this RemoteObject.

        The status of the item.

        :param status: The status of this RemoteObject.
        :type status: Status
        """

        self._status = status

    @property
    def summary(self):
        """Gets the summary of this RemoteObject.

        The summary details of the item.

        :return: The summary of this RemoteObject.
        :rtype: str
        """
        return self._summary

    @summary.setter
    def summary(self, summary):
        """Sets the summary of this RemoteObject.

        The summary details of the item.

        :param summary: The summary of this RemoteObject.
        :type summary: str
        """

        self._summary = summary

    @property
    def title(self):
        """Gets the title of this RemoteObject.

        The title of the item.

        :return: The title of this RemoteObject.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this RemoteObject.

        The title of the item.

        :param title: The title of this RemoteObject.
        :type title: str
        """
        if title is None:
            raise ValueError("Invalid value for `title`, must not be `None`")

        self._title = title

    @property
    def url(self):
        """Gets the url of this RemoteObject.

        The URL of the item.

        :return: The url of this RemoteObject.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this RemoteObject.

        The URL of the item.

        :param url: The url of this RemoteObject.
        :type url: str
        """
        if url is None:
            raise ValueError("Invalid value for `url`, must not be `None`")

        self._url = url
