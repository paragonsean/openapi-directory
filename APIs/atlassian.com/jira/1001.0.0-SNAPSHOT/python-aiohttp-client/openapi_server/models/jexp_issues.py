# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.jexp_jql_issues import JexpJqlIssues
from openapi_server import util


class JexpIssues(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, jql: JexpJqlIssues=None):
        """JexpIssues - a model defined in OpenAPI

        :param jql: The jql of this JexpIssues.
        """
        self.openapi_types = {
            'jql': JexpJqlIssues
        }

        self.attribute_map = {
            'jql': 'jql'
        }

        self._jql = jql

    @classmethod
    def from_dict(cls, dikt: dict) -> 'JexpIssues':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The JexpIssues of this JexpIssues.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def jql(self):
        """Gets the jql of this JexpIssues.

        The JQL query that specifies the set of issues available in the Jira expression.

        :return: The jql of this JexpIssues.
        :rtype: JexpJqlIssues
        """
        return self._jql

    @jql.setter
    def jql(self, jql):
        """Sets the jql of this JexpIssues.

        The JQL query that specifies the set of issues available in the Jira expression.

        :param jql: The jql of this JexpIssues.
        :type jql: JexpJqlIssues
        """

        self._jql = jql
