# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.user_bean_avatar_urls import UserBeanAvatarUrls
from openapi_server import util


class UserBean(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_id: str=None, active: bool=None, avatar_urls: UserBeanAvatarUrls=None, display_name: str=None, key: str=None, name: str=None, _self: str=None):
        """UserBean - a model defined in OpenAPI

        :param account_id: The account_id of this UserBean.
        :param active: The active of this UserBean.
        :param avatar_urls: The avatar_urls of this UserBean.
        :param display_name: The display_name of this UserBean.
        :param key: The key of this UserBean.
        :param name: The name of this UserBean.
        :param _self: The _self of this UserBean.
        """
        self.openapi_types = {
            'account_id': str,
            'active': bool,
            'avatar_urls': UserBeanAvatarUrls,
            'display_name': str,
            'key': str,
            'name': str,
            '_self': str
        }

        self.attribute_map = {
            'account_id': 'accountId',
            'active': 'active',
            'avatar_urls': 'avatarUrls',
            'display_name': 'displayName',
            'key': 'key',
            'name': 'name',
            '_self': 'self'
        }

        self._account_id = account_id
        self._active = active
        self._avatar_urls = avatar_urls
        self._display_name = display_name
        self._key = key
        self._name = name
        self.__self = _self

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UserBean':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UserBean of this UserBean.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_id(self):
        """Gets the account_id of this UserBean.

        The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*.

        :return: The account_id of this UserBean.
        :rtype: str
        """
        return self._account_id

    @account_id.setter
    def account_id(self, account_id):
        """Sets the account_id of this UserBean.

        The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*.

        :param account_id: The account_id of this UserBean.
        :type account_id: str
        """
        if account_id is not None and len(account_id) > 128:
            raise ValueError("Invalid value for `account_id`, length must be less than or equal to `128`")

        self._account_id = account_id

    @property
    def active(self):
        """Gets the active of this UserBean.

        Whether the user is active.

        :return: The active of this UserBean.
        :rtype: bool
        """
        return self._active

    @active.setter
    def active(self, active):
        """Sets the active of this UserBean.

        Whether the user is active.

        :param active: The active of this UserBean.
        :type active: bool
        """

        self._active = active

    @property
    def avatar_urls(self):
        """Gets the avatar_urls of this UserBean.

        The avatars of the user.

        :return: The avatar_urls of this UserBean.
        :rtype: UserBeanAvatarUrls
        """
        return self._avatar_urls

    @avatar_urls.setter
    def avatar_urls(self, avatar_urls):
        """Sets the avatar_urls of this UserBean.

        The avatars of the user.

        :param avatar_urls: The avatar_urls of this UserBean.
        :type avatar_urls: UserBeanAvatarUrls
        """

        self._avatar_urls = avatar_urls

    @property
    def display_name(self):
        """Gets the display_name of this UserBean.

        The display name of the user. Depending on the user’s privacy setting, this may return an alternative value.

        :return: The display_name of this UserBean.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this UserBean.

        The display name of the user. Depending on the user’s privacy setting, this may return an alternative value.

        :param display_name: The display_name of this UserBean.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def key(self):
        """Gets the key of this UserBean.

        This property is deprecated in favor of `accountId` because of privacy changes. See the [migration guide](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.   The key of the user.

        :return: The key of this UserBean.
        :rtype: str
        """
        return self._key

    @key.setter
    def key(self, key):
        """Sets the key of this UserBean.

        This property is deprecated in favor of `accountId` because of privacy changes. See the [migration guide](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.   The key of the user.

        :param key: The key of this UserBean.
        :type key: str
        """

        self._key = key

    @property
    def name(self):
        """Gets the name of this UserBean.

        This property is deprecated in favor of `accountId` because of privacy changes. See the [migration guide](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.   The username of the user.

        :return: The name of this UserBean.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this UserBean.

        This property is deprecated in favor of `accountId` because of privacy changes. See the [migration guide](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.   The username of the user.

        :param name: The name of this UserBean.
        :type name: str
        """

        self._name = name

    @property
    def _self(self):
        """Gets the _self of this UserBean.

        The URL of the user.

        :return: The _self of this UserBean.
        :rtype: str
        """
        return self.__self

    @_self.setter
    def _self(self, _self):
        """Sets the _self of this UserBean.

        The URL of the user.

        :param _self: The _self of this UserBean.
        :type _self: str
        """

        self.__self = _self
