# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.region import Region
from openapi_server import util


class Number(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, national_format: str=None, number: str=None, region: Region=None, send_email_on_create: bool=None, toll_free: bool=None):
        """Number - a model defined in OpenAPI

        :param national_format: The national_format of this Number.
        :param number: The number of this Number.
        :param region: The region of this Number.
        :param send_email_on_create: The send_email_on_create of this Number.
        :param toll_free: The toll_free of this Number.
        """
        self.openapi_types = {
            'national_format': str,
            'number': str,
            'region': Region,
            'send_email_on_create': bool,
            'toll_free': bool
        }

        self.attribute_map = {
            'national_format': 'nationalFormat',
            'number': 'number',
            'region': 'region',
            'send_email_on_create': 'sendEmailOnCreate',
            'toll_free': 'tollFree'
        }

        self._national_format = national_format
        self._number = number
        self._region = region
        self._send_email_on_create = send_email_on_create
        self._toll_free = toll_free

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Number':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Number of this Number.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def national_format(self):
        """Gets the national_format of this Number.

        ~

        :return: The national_format of this Number.
        :rtype: str
        """
        return self._national_format

    @national_format.setter
    def national_format(self, national_format):
        """Sets the national_format of this Number.

        ~

        :param national_format: The national_format of this Number.
        :type national_format: str
        """

        self._national_format = national_format

    @property
    def number(self):
        """Gets the number of this Number.

        ~

        :return: The number of this Number.
        :rtype: str
        """
        return self._number

    @number.setter
    def number(self, number):
        """Sets the number of this Number.

        ~

        :param number: The number of this Number.
        :type number: str
        """

        self._number = number

    @property
    def region(self):
        """Gets the region of this Number.


        :return: The region of this Number.
        :rtype: Region
        """
        return self._region

    @region.setter
    def region(self, region):
        """Sets the region of this Number.


        :param region: The region of this Number.
        :type region: Region
        """

        self._region = region

    @property
    def send_email_on_create(self):
        """Gets the send_email_on_create of this Number.

        ~

        :return: The send_email_on_create of this Number.
        :rtype: bool
        """
        return self._send_email_on_create

    @send_email_on_create.setter
    def send_email_on_create(self, send_email_on_create):
        """Sets the send_email_on_create of this Number.

        ~

        :param send_email_on_create: The send_email_on_create of this Number.
        :type send_email_on_create: bool
        """

        self._send_email_on_create = send_email_on_create

    @property
    def toll_free(self):
        """Gets the toll_free of this Number.

        ~

        :return: The toll_free of this Number.
        :rtype: bool
        """
        return self._toll_free

    @toll_free.setter
    def toll_free(self, toll_free):
        """Sets the toll_free of this Number.

        ~

        :param toll_free: The toll_free of this Number.
        :type toll_free: bool
        """

        self._toll_free = toll_free
