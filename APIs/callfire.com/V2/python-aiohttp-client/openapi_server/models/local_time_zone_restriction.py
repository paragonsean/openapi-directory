# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class LocalTimeZoneRestriction(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, enabled: bool=None, start_time: datetime=None, stop_time: datetime=None):
        """LocalTimeZoneRestriction - a model defined in OpenAPI

        :param enabled: The enabled of this LocalTimeZoneRestriction.
        :param start_time: The start_time of this LocalTimeZoneRestriction.
        :param stop_time: The stop_time of this LocalTimeZoneRestriction.
        """
        self.openapi_types = {
            'enabled': bool,
            'start_time': datetime,
            'stop_time': datetime
        }

        self.attribute_map = {
            'enabled': 'enabled',
            'start_time': 'startTime',
            'stop_time': 'stopTime'
        }

        self._enabled = enabled
        self._start_time = start_time
        self._stop_time = stop_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LocalTimeZoneRestriction':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LocalTimeZoneRestriction of this LocalTimeZoneRestriction.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def enabled(self):
        """Gets the enabled of this LocalTimeZoneRestriction.

        ~

        :return: The enabled of this LocalTimeZoneRestriction.
        :rtype: bool
        """
        return self._enabled

    @enabled.setter
    def enabled(self, enabled):
        """Sets the enabled of this LocalTimeZoneRestriction.

        ~

        :param enabled: The enabled of this LocalTimeZoneRestriction.
        :type enabled: bool
        """

        self._enabled = enabled

    @property
    def start_time(self):
        """Gets the start_time of this LocalTimeZoneRestriction.

        ~

        :return: The start_time of this LocalTimeZoneRestriction.
        :rtype: datetime
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """Sets the start_time of this LocalTimeZoneRestriction.

        ~

        :param start_time: The start_time of this LocalTimeZoneRestriction.
        :type start_time: datetime
        """

        self._start_time = start_time

    @property
    def stop_time(self):
        """Gets the stop_time of this LocalTimeZoneRestriction.

        ~

        :return: The stop_time of this LocalTimeZoneRestriction.
        :rtype: datetime
        """
        return self._stop_time

    @stop_time.setter
    def stop_time(self, stop_time):
        """Sets the stop_time of this LocalTimeZoneRestriction.

        ~

        :param stop_time: The stop_time of this LocalTimeZoneRestriction.
        :type stop_time: datetime
        """

        self._stop_time = stop_time
