# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CallCreateSound(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, to_number: str=None):
        """CallCreateSound - a model defined in OpenAPI

        :param name: The name of this CallCreateSound.
        :param to_number: The to_number of this CallCreateSound.
        """
        self.openapi_types = {
            'name': str,
            'to_number': str
        }

        self.attribute_map = {
            'name': 'name',
            'to_number': 'toNumber'
        }

        self._name = name
        self._to_number = to_number

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CallCreateSound':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CallCreateSound of this CallCreateSound.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this CallCreateSound.

        Name of a sound to create

        :return: The name of this CallCreateSound.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this CallCreateSound.

        Name of a sound to create

        :param name: The name of this CallCreateSound.
        :type name: str
        """

        self._name = name

    @property
    def to_number(self):
        """Gets the to_number of this CallCreateSound.

        Phone number in E.164 11-digit format to call to record a sound.  Example: 12132000384

        :return: The to_number of this CallCreateSound.
        :rtype: str
        """
        return self._to_number

    @to_number.setter
    def to_number(self, to_number):
        """Sets the to_number of this CallCreateSound.

        Phone number in E.164 11-digit format to call to record a sound.  Example: 12132000384

        :param to_number: The to_number of this CallCreateSound.
        :type to_number: str
        """

        self._to_number = to_number
