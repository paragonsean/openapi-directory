# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.call_recording import CallRecording
from openapi_server.models.note import Note
from openapi_server.models.question_response import QuestionResponse
from openapi_server import util


class CallRecord(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, answer_time: int=None, billed_amount: float=None, caller_name: str=None, duration: int=None, finish_time: int=None, id: int=None, labels: list[str]=None, notes: List[Note]=None, originate_time: int=None, question_responses: List[QuestionResponse]=None, recordings: List[CallRecording]=None, result: str=None, switch_id: str=None, to_number: str=None):
        """CallRecord - a model defined in OpenAPI

        :param answer_time: The answer_time of this CallRecord.
        :param billed_amount: The billed_amount of this CallRecord.
        :param caller_name: The caller_name of this CallRecord.
        :param duration: The duration of this CallRecord.
        :param finish_time: The finish_time of this CallRecord.
        :param id: The id of this CallRecord.
        :param labels: The labels of this CallRecord.
        :param notes: The notes of this CallRecord.
        :param originate_time: The originate_time of this CallRecord.
        :param question_responses: The question_responses of this CallRecord.
        :param recordings: The recordings of this CallRecord.
        :param result: The result of this CallRecord.
        :param switch_id: The switch_id of this CallRecord.
        :param to_number: The to_number of this CallRecord.
        """
        self.openapi_types = {
            'answer_time': int,
            'billed_amount': float,
            'caller_name': str,
            'duration': int,
            'finish_time': int,
            'id': int,
            'labels': list[str],
            'notes': List[Note],
            'originate_time': int,
            'question_responses': List[QuestionResponse],
            'recordings': List[CallRecording],
            'result': str,
            'switch_id': str,
            'to_number': str
        }

        self.attribute_map = {
            'answer_time': 'answerTime',
            'billed_amount': 'billedAmount',
            'caller_name': 'callerName',
            'duration': 'duration',
            'finish_time': 'finishTime',
            'id': 'id',
            'labels': 'labels',
            'notes': 'notes',
            'originate_time': 'originateTime',
            'question_responses': 'questionResponses',
            'recordings': 'recordings',
            'result': 'result',
            'switch_id': 'switchId',
            'to_number': 'toNumber'
        }

        self._answer_time = answer_time
        self._billed_amount = billed_amount
        self._caller_name = caller_name
        self._duration = duration
        self._finish_time = finish_time
        self._id = id
        self._labels = labels
        self._notes = notes
        self._originate_time = originate_time
        self._question_responses = question_responses
        self._recordings = recordings
        self._result = result
        self._switch_id = switch_id
        self._to_number = to_number

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CallRecord':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CallRecord of this CallRecord.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def answer_time(self):
        """Gets the answer_time of this CallRecord.

        Timestamp when call was answered, formatted in unix time milliseconds (read only). Example: 1473781817000 for Sat, 05 Jan 1985 14:03:37 GMT

        :return: The answer_time of this CallRecord.
        :rtype: int
        """
        return self._answer_time

    @answer_time.setter
    def answer_time(self, answer_time):
        """Sets the answer_time of this CallRecord.

        Timestamp when call was answered, formatted in unix time milliseconds (read only). Example: 1473781817000 for Sat, 05 Jan 1985 14:03:37 GMT

        :param answer_time: The answer_time of this CallRecord.
        :type answer_time: int
        """

        self._answer_time = answer_time

    @property
    def billed_amount(self):
        """Gets the billed_amount of this CallRecord.

        A cost of the call

        :return: The billed_amount of this CallRecord.
        :rtype: float
        """
        return self._billed_amount

    @billed_amount.setter
    def billed_amount(self, billed_amount):
        """Sets the billed_amount of this CallRecord.

        A cost of the call

        :param billed_amount: The billed_amount of this CallRecord.
        :type billed_amount: float
        """

        self._billed_amount = billed_amount

    @property
    def caller_name(self):
        """Gets the caller_name of this CallRecord.

        ~

        :return: The caller_name of this CallRecord.
        :rtype: str
        """
        return self._caller_name

    @caller_name.setter
    def caller_name(self, caller_name):
        """Sets the caller_name of this CallRecord.

        ~

        :param caller_name: The caller_name of this CallRecord.
        :type caller_name: str
        """

        self._caller_name = caller_name

    @property
    def duration(self):
        """Gets the duration of this CallRecord.

        Duration of the call in seconds

        :return: The duration of this CallRecord.
        :rtype: int
        """
        return self._duration

    @duration.setter
    def duration(self, duration):
        """Sets the duration of this CallRecord.

        Duration of the call in seconds

        :param duration: The duration of this CallRecord.
        :type duration: int
        """

        self._duration = duration

    @property
    def finish_time(self):
        """Gets the finish_time of this CallRecord.

        Timestamp when call was finished, formatted in unix time milliseconds (read only). Example: 1473781817000 for Sat, 05 Jan 1985 14:03:37 GMT

        :return: The finish_time of this CallRecord.
        :rtype: int
        """
        return self._finish_time

    @finish_time.setter
    def finish_time(self, finish_time):
        """Sets the finish_time of this CallRecord.

        Timestamp when call was finished, formatted in unix time milliseconds (read only). Example: 1473781817000 for Sat, 05 Jan 1985 14:03:37 GMT

        :param finish_time: The finish_time of this CallRecord.
        :type finish_time: int
        """

        self._finish_time = finish_time

    @property
    def id(self):
        """Gets the id of this CallRecord.

        An id of a call record

        :return: The id of this CallRecord.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this CallRecord.

        An id of a call record

        :param id: The id of this CallRecord.
        :type id: int
        """

        self._id = id

    @property
    def labels(self):
        """Gets the labels of this CallRecord.

        Labels associated with a call action

        :return: The labels of this CallRecord.
        :rtype: list[str]
        """
        return self._labels

    @labels.setter
    def labels(self, labels):
        """Sets the labels of this CallRecord.

        Labels associated with a call action

        :param labels: The labels of this CallRecord.
        :type labels: list[str]
        """

        self._labels = labels

    @property
    def notes(self):
        """Gets the notes of this CallRecord.

        Notes of call added by agent

        :return: The notes of this CallRecord.
        :rtype: List[Note]
        """
        return self._notes

    @notes.setter
    def notes(self, notes):
        """Sets the notes of this CallRecord.

        Notes of call added by agent

        :param notes: The notes of this CallRecord.
        :type notes: List[Note]
        """

        self._notes = notes

    @property
    def originate_time(self):
        """Gets the originate_time of this CallRecord.

        A date and time (timestamp) when call was originated by CallFire platform and went to downstream provider, formatted in unix time milliseconds (read only). Example: 1473781817000 

        :return: The originate_time of this CallRecord.
        :rtype: int
        """
        return self._originate_time

    @originate_time.setter
    def originate_time(self, originate_time):
        """Sets the originate_time of this CallRecord.

        A date and time (timestamp) when call was originated by CallFire platform and went to downstream provider, formatted in unix time milliseconds (read only). Example: 1473781817000 

        :param originate_time: The originate_time of this CallRecord.
        :type originate_time: int
        """

        self._originate_time = originate_time

    @property
    def question_responses(self):
        """Gets the question_responses of this CallRecord.

        Notes of call added by an agent

        :return: The question_responses of this CallRecord.
        :rtype: List[QuestionResponse]
        """
        return self._question_responses

    @question_responses.setter
    def question_responses(self, question_responses):
        """Sets the question_responses of this CallRecord.

        Notes of call added by an agent

        :param question_responses: The question_responses of this CallRecord.
        :type question_responses: List[QuestionResponse]
        """

        self._question_responses = question_responses

    @property
    def recordings(self):
        """Gets the recordings of this CallRecord.

        A list of voice recordings of the call

        :return: The recordings of this CallRecord.
        :rtype: List[CallRecording]
        """
        return self._recordings

    @recordings.setter
    def recordings(self, recordings):
        """Sets the recordings of this CallRecord.

        A list of voice recordings of the call

        :param recordings: The recordings of this CallRecord.
        :type recordings: List[CallRecording]
        """

        self._recordings = recordings

    @property
    def result(self):
        """Gets the result of this CallRecord.

        ~

        :return: The result of this CallRecord.
        :rtype: str
        """
        return self._result

    @result.setter
    def result(self, result):
        """Sets the result of this CallRecord.

        ~

        :param result: The result of this CallRecord.
        :type result: str
        """
        allowed_values = ["LA", "AM", "BUSY", "DNC", "XFER", "NO_ANS", "XFER_LEG", "INTERNAL_ERROR", "CARRIER_ERROR", "CARRIER_TEMP_ERROR", "UNDIALED", "SD", "POSTPONED", "ABANDONED", "SKIPPED"]  # noqa: E501
        if result not in allowed_values:
            raise ValueError(
                "Invalid value for `result` ({0}), must be one of {1}"
                .format(result, allowed_values)
            )

        self._result = result

    @property
    def switch_id(self):
        """Gets the switch_id of this CallRecord.

        ~

        :return: The switch_id of this CallRecord.
        :rtype: str
        """
        return self._switch_id

    @switch_id.setter
    def switch_id(self, switch_id):
        """Sets the switch_id of this CallRecord.

        ~

        :param switch_id: The switch_id of this CallRecord.
        :type switch_id: str
        """

        self._switch_id = switch_id

    @property
    def to_number(self):
        """Gets the to_number of this CallRecord.

        A phone number to which a call was addressed. Phone number in E.164 format (11-digit). Example: 12132000384

        :return: The to_number of this CallRecord.
        :rtype: str
        """
        return self._to_number

    @to_number.setter
    def to_number(self, to_number):
        """Sets the to_number of this CallRecord.

        A phone number to which a call was addressed. Phone number in E.164 format (11-digit). Example: 12132000384

        :param to_number: The to_number of this CallRecord.
        :type to_number: str
        """

        self._to_number = to_number
