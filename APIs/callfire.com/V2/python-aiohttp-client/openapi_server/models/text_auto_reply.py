# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TextAutoReply(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: int=None, keyword: str=None, match: str=None, message: str=None, number: str=None):
        """TextAutoReply - a model defined in OpenAPI

        :param id: The id of this TextAutoReply.
        :param keyword: The keyword of this TextAutoReply.
        :param match: The match of this TextAutoReply.
        :param message: The message of this TextAutoReply.
        :param number: The number of this TextAutoReply.
        """
        self.openapi_types = {
            'id': int,
            'keyword': str,
            'match': str,
            'message': str,
            'number': str
        }

        self.attribute_map = {
            'id': 'id',
            'keyword': 'keyword',
            'match': 'match',
            'message': 'message',
            'number': 'number'
        }

        self._id = id
        self._keyword = keyword
        self._match = match
        self._message = message
        self._number = number

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TextAutoReply':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TextAutoReply of this TextAutoReply.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this TextAutoReply.

        An id of a text auto reply

        :return: The id of this TextAutoReply.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this TextAutoReply.

        An id of a text auto reply

        :param id: The id of this TextAutoReply.
        :type id: int
        """

        self._id = id

    @property
    def keyword(self):
        """Gets the keyword of this TextAutoReply.

        Setup autoreply for a given keyword

        :return: The keyword of this TextAutoReply.
        :rtype: str
        """
        return self._keyword

    @keyword.setter
    def keyword(self, keyword):
        """Sets the keyword of this TextAutoReply.

        Setup autoreply for a given keyword

        :param keyword: The keyword of this TextAutoReply.
        :type keyword: str
        """

        self._keyword = keyword

    @property
    def match(self):
        """Gets the match of this TextAutoReply.

        Text to match. If it is set then autoreply will be sent to a person who texted message with matched text. Case insensitive, if parameter is not specified then all texts will be matched

        :return: The match of this TextAutoReply.
        :rtype: str
        """
        return self._match

    @match.setter
    def match(self, match):
        """Sets the match of this TextAutoReply.

        Text to match. If it is set then autoreply will be sent to a person who texted message with matched text. Case insensitive, if parameter is not specified then all texts will be matched

        :param match: The match of this TextAutoReply.
        :type match: str
        """

        self._match = match

    @property
    def message(self):
        """Gets the message of this TextAutoReply.

        A text message to return as an auto reply

        :return: The message of this TextAutoReply.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this TextAutoReply.

        A text message to return as an auto reply

        :param message: The message of this TextAutoReply.
        :type message: str
        """

        self._message = message

    @property
    def number(self):
        """Gets the number of this TextAutoReply.

        Setup autoreply for a given phone number, E.164 format (11-digit). Example: 12132000384

        :return: The number of this TextAutoReply.
        :rtype: str
        """
        return self._number

    @number.setter
    def number(self, number):
        """Sets the number of this TextAutoReply.

        Setup autoreply for a given phone number, E.164 format (11-digit). Example: 12132000384

        :param number: The number of this TextAutoReply.
        :type number: str
        """

        self._number = number
