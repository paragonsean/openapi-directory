# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Keyword(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, keyword: str=None, number: str=None, short_code: str=None):
        """Keyword - a model defined in OpenAPI

        :param keyword: The keyword of this Keyword.
        :param number: The number of this Keyword.
        :param short_code: The short_code of this Keyword.
        """
        self.openapi_types = {
            'keyword': str,
            'number': str,
            'short_code': str
        }

        self.attribute_map = {
            'keyword': 'keyword',
            'number': 'number',
            'short_code': 'shortCode'
        }

        self._keyword = keyword
        self._number = number
        self._short_code = short_code

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Keyword':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Keyword of this Keyword.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def keyword(self):
        """Gets the keyword of this Keyword.

        ~

        :return: The keyword of this Keyword.
        :rtype: str
        """
        return self._keyword

    @keyword.setter
    def keyword(self, keyword):
        """Sets the keyword of this Keyword.

        ~

        :param keyword: The keyword of this Keyword.
        :type keyword: str
        """

        self._keyword = keyword

    @property
    def number(self):
        """Gets the number of this Keyword.

        ~

        :return: The number of this Keyword.
        :rtype: str
        """
        return self._number

    @number.setter
    def number(self, number):
        """Sets the number of this Keyword.

        ~

        :param number: The number of this Keyword.
        :type number: str
        """

        self._number = number

    @property
    def short_code(self):
        """Gets the short_code of this Keyword.

        ~

        :return: The short_code of this Keyword.
        :rtype: str
        """
        return self._short_code

    @short_code.setter
    def short_code(self, short_code):
        """Sets the short_code of this Keyword.

        ~

        :param short_code: The short_code of this Keyword.
        :type short_code: str
        """

        self._short_code = short_code
