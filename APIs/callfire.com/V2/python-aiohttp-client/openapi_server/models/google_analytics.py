# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GoogleAnalytics(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, category: str=None, domain: str=None, google_account_id: str=None):
        """GoogleAnalytics - a model defined in OpenAPI

        :param category: The category of this GoogleAnalytics.
        :param domain: The domain of this GoogleAnalytics.
        :param google_account_id: The google_account_id of this GoogleAnalytics.
        """
        self.openapi_types = {
            'category': str,
            'domain': str,
            'google_account_id': str
        }

        self.attribute_map = {
            'category': 'category',
            'domain': 'domain',
            'google_account_id': 'googleAccountId'
        }

        self._category = category
        self._domain = domain
        self._google_account_id = google_account_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GoogleAnalytics':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GoogleAnalytics of this GoogleAnalytics.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def category(self):
        """Gets the category of this GoogleAnalytics.

        A category to group. For example: Sales or Support

        :return: The category of this GoogleAnalytics.
        :rtype: str
        """
        return self._category

    @category.setter
    def category(self, category):
        """Sets the category of this GoogleAnalytics.

        A category to group. For example: Sales or Support

        :param category: The category of this GoogleAnalytics.
        :type category: str
        """

        self._category = category

    @property
    def domain(self):
        """Gets the domain of this GoogleAnalytics.

        A domain name for analytics

        :return: The domain of this GoogleAnalytics.
        :rtype: str
        """
        return self._domain

    @domain.setter
    def domain(self, domain):
        """Sets the domain of this GoogleAnalytics.

        A domain name for analytics

        :param domain: The domain of this GoogleAnalytics.
        :type domain: str
        """

        self._domain = domain

    @property
    def google_account_id(self):
        """Gets the google_account_id of this GoogleAnalytics.

        An id of a Google account, example: UA-XXXXX-2X

        :return: The google_account_id of this GoogleAnalytics.
        :rtype: str
        """
        return self._google_account_id

    @google_account_id.setter
    def google_account_id(self, google_account_id):
        """Sets the google_account_id of this GoogleAnalytics.

        An id of a Google account, example: UA-XXXXX-2X

        :param google_account_id: The google_account_id of this GoogleAnalytics.
        :type google_account_id: str
        """

        self._google_account_id = google_account_id
