# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BillingPlanUsage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, interval_end: int=None, interval_start: int=None, remaining_pay_as_you_go_credits: float=None, remaining_plan_credits: float=None, total_remaining_credits: float=None):
        """BillingPlanUsage - a model defined in OpenAPI

        :param interval_end: The interval_end of this BillingPlanUsage.
        :param interval_start: The interval_start of this BillingPlanUsage.
        :param remaining_pay_as_you_go_credits: The remaining_pay_as_you_go_credits of this BillingPlanUsage.
        :param remaining_plan_credits: The remaining_plan_credits of this BillingPlanUsage.
        :param total_remaining_credits: The total_remaining_credits of this BillingPlanUsage.
        """
        self.openapi_types = {
            'interval_end': int,
            'interval_start': int,
            'remaining_pay_as_you_go_credits': float,
            'remaining_plan_credits': float,
            'total_remaining_credits': float
        }

        self.attribute_map = {
            'interval_end': 'intervalEnd',
            'interval_start': 'intervalStart',
            'remaining_pay_as_you_go_credits': 'remainingPayAsYouGoCredits',
            'remaining_plan_credits': 'remainingPlanCredits',
            'total_remaining_credits': 'totalRemainingCredits'
        }

        self._interval_end = interval_end
        self._interval_start = interval_start
        self._remaining_pay_as_you_go_credits = remaining_pay_as_you_go_credits
        self._remaining_plan_credits = remaining_plan_credits
        self._total_remaining_credits = total_remaining_credits

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BillingPlanUsage':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BillingPlanUsage of this BillingPlanUsage.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def interval_end(self):
        """Gets the interval_end of this BillingPlanUsage.

        End of usage period formatted in unix time milliseconds. Example: 1473781817000 for Sat, 05 Jan 1985 14:03:37 GMT

        :return: The interval_end of this BillingPlanUsage.
        :rtype: int
        """
        return self._interval_end

    @interval_end.setter
    def interval_end(self, interval_end):
        """Sets the interval_end of this BillingPlanUsage.

        End of usage period formatted in unix time milliseconds. Example: 1473781817000 for Sat, 05 Jan 1985 14:03:37 GMT

        :param interval_end: The interval_end of this BillingPlanUsage.
        :type interval_end: int
        """

        self._interval_end = interval_end

    @property
    def interval_start(self):
        """Gets the interval_start of this BillingPlanUsage.

        Start of usage period formatted in unix time milliseconds. Example: 1473781817000 for Sat, 05 Jan 1985 14:03:37 GMT

        :return: The interval_start of this BillingPlanUsage.
        :rtype: int
        """
        return self._interval_start

    @interval_start.setter
    def interval_start(self, interval_start):
        """Sets the interval_start of this BillingPlanUsage.

        Start of usage period formatted in unix time milliseconds. Example: 1473781817000 for Sat, 05 Jan 1985 14:03:37 GMT

        :param interval_start: The interval_start of this BillingPlanUsage.
        :type interval_start: int
        """

        self._interval_start = interval_start

    @property
    def remaining_pay_as_you_go_credits(self):
        """Gets the remaining_pay_as_you_go_credits of this BillingPlanUsage.

        Remaining pay as you go credits are rounded to nearest whole value

        :return: The remaining_pay_as_you_go_credits of this BillingPlanUsage.
        :rtype: float
        """
        return self._remaining_pay_as_you_go_credits

    @remaining_pay_as_you_go_credits.setter
    def remaining_pay_as_you_go_credits(self, remaining_pay_as_you_go_credits):
        """Sets the remaining_pay_as_you_go_credits of this BillingPlanUsage.

        Remaining pay as you go credits are rounded to nearest whole value

        :param remaining_pay_as_you_go_credits: The remaining_pay_as_you_go_credits of this BillingPlanUsage.
        :type remaining_pay_as_you_go_credits: float
        """

        self._remaining_pay_as_you_go_credits = remaining_pay_as_you_go_credits

    @property
    def remaining_plan_credits(self):
        """Gets the remaining_plan_credits of this BillingPlanUsage.

        Remaining credits are rounded to nearest whole value associated with a plan

        :return: The remaining_plan_credits of this BillingPlanUsage.
        :rtype: float
        """
        return self._remaining_plan_credits

    @remaining_plan_credits.setter
    def remaining_plan_credits(self, remaining_plan_credits):
        """Sets the remaining_plan_credits of this BillingPlanUsage.

        Remaining credits are rounded to nearest whole value associated with a plan

        :param remaining_plan_credits: The remaining_plan_credits of this BillingPlanUsage.
        :type remaining_plan_credits: float
        """

        self._remaining_plan_credits = remaining_plan_credits

    @property
    def total_remaining_credits(self):
        """Gets the total_remaining_credits of this BillingPlanUsage.

        Total number of remaining credits (remainingPlanCredits + remainingPayAsYouGoCredits)

        :return: The total_remaining_credits of this BillingPlanUsage.
        :rtype: float
        """
        return self._total_remaining_credits

    @total_remaining_credits.setter
    def total_remaining_credits(self, total_remaining_credits):
        """Sets the total_remaining_credits of this BillingPlanUsage.

        Total number of remaining credits (remainingPlanCredits + remainingPayAsYouGoCredits)

        :param total_remaining_credits: The total_remaining_credits of this BillingPlanUsage.
        :type total_remaining_credits: float
        """

        self._total_remaining_credits = total_remaining_credits
