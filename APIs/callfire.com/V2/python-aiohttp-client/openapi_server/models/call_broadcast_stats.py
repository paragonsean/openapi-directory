# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CallBroadcastStats(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, answering_machine_count: int=None, billed_amount: float=None, billed_duration: int=None, busy_count: int=None, calls_attempted: int=None, calls_awaiting_redial: int=None, calls_duration: int=None, calls_live_answer: int=None, calls_placed: int=None, calls_remaining: int=None, dialed_count: int=None, do_not_call_count: int=None, error_count: int=None, live_count: int=None, misc_count: int=None, no_answer_count: int=None, remaining_outbound_count: int=None, response_rate_percent: int=None, total_count: int=None, total_outbound_count: int=None, transfer_count: int=None):
        """CallBroadcastStats - a model defined in OpenAPI

        :param answering_machine_count: The answering_machine_count of this CallBroadcastStats.
        :param billed_amount: The billed_amount of this CallBroadcastStats.
        :param billed_duration: The billed_duration of this CallBroadcastStats.
        :param busy_count: The busy_count of this CallBroadcastStats.
        :param calls_attempted: The calls_attempted of this CallBroadcastStats.
        :param calls_awaiting_redial: The calls_awaiting_redial of this CallBroadcastStats.
        :param calls_duration: The calls_duration of this CallBroadcastStats.
        :param calls_live_answer: The calls_live_answer of this CallBroadcastStats.
        :param calls_placed: The calls_placed of this CallBroadcastStats.
        :param calls_remaining: The calls_remaining of this CallBroadcastStats.
        :param dialed_count: The dialed_count of this CallBroadcastStats.
        :param do_not_call_count: The do_not_call_count of this CallBroadcastStats.
        :param error_count: The error_count of this CallBroadcastStats.
        :param live_count: The live_count of this CallBroadcastStats.
        :param misc_count: The misc_count of this CallBroadcastStats.
        :param no_answer_count: The no_answer_count of this CallBroadcastStats.
        :param remaining_outbound_count: The remaining_outbound_count of this CallBroadcastStats.
        :param response_rate_percent: The response_rate_percent of this CallBroadcastStats.
        :param total_count: The total_count of this CallBroadcastStats.
        :param total_outbound_count: The total_outbound_count of this CallBroadcastStats.
        :param transfer_count: The transfer_count of this CallBroadcastStats.
        """
        self.openapi_types = {
            'answering_machine_count': int,
            'billed_amount': float,
            'billed_duration': int,
            'busy_count': int,
            'calls_attempted': int,
            'calls_awaiting_redial': int,
            'calls_duration': int,
            'calls_live_answer': int,
            'calls_placed': int,
            'calls_remaining': int,
            'dialed_count': int,
            'do_not_call_count': int,
            'error_count': int,
            'live_count': int,
            'misc_count': int,
            'no_answer_count': int,
            'remaining_outbound_count': int,
            'response_rate_percent': int,
            'total_count': int,
            'total_outbound_count': int,
            'transfer_count': int
        }

        self.attribute_map = {
            'answering_machine_count': 'answeringMachineCount',
            'billed_amount': 'billedAmount',
            'billed_duration': 'billedDuration',
            'busy_count': 'busyCount',
            'calls_attempted': 'callsAttempted',
            'calls_awaiting_redial': 'callsAwaitingRedial',
            'calls_duration': 'callsDuration',
            'calls_live_answer': 'callsLiveAnswer',
            'calls_placed': 'callsPlaced',
            'calls_remaining': 'callsRemaining',
            'dialed_count': 'dialedCount',
            'do_not_call_count': 'doNotCallCount',
            'error_count': 'errorCount',
            'live_count': 'liveCount',
            'misc_count': 'miscCount',
            'no_answer_count': 'noAnswerCount',
            'remaining_outbound_count': 'remainingOutboundCount',
            'response_rate_percent': 'responseRatePercent',
            'total_count': 'totalCount',
            'total_outbound_count': 'totalOutboundCount',
            'transfer_count': 'transferCount'
        }

        self._answering_machine_count = answering_machine_count
        self._billed_amount = billed_amount
        self._billed_duration = billed_duration
        self._busy_count = busy_count
        self._calls_attempted = calls_attempted
        self._calls_awaiting_redial = calls_awaiting_redial
        self._calls_duration = calls_duration
        self._calls_live_answer = calls_live_answer
        self._calls_placed = calls_placed
        self._calls_remaining = calls_remaining
        self._dialed_count = dialed_count
        self._do_not_call_count = do_not_call_count
        self._error_count = error_count
        self._live_count = live_count
        self._misc_count = misc_count
        self._no_answer_count = no_answer_count
        self._remaining_outbound_count = remaining_outbound_count
        self._response_rate_percent = response_rate_percent
        self._total_count = total_count
        self._total_outbound_count = total_outbound_count
        self._transfer_count = transfer_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CallBroadcastStats':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CallBroadcastStats of this CallBroadcastStats.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def answering_machine_count(self):
        """Gets the answering_machine_count of this CallBroadcastStats.

        ~

        :return: The answering_machine_count of this CallBroadcastStats.
        :rtype: int
        """
        return self._answering_machine_count

    @answering_machine_count.setter
    def answering_machine_count(self, answering_machine_count):
        """Sets the answering_machine_count of this CallBroadcastStats.

        ~

        :param answering_machine_count: The answering_machine_count of this CallBroadcastStats.
        :type answering_machine_count: int
        """

        self._answering_machine_count = answering_machine_count

    @property
    def billed_amount(self):
        """Gets the billed_amount of this CallBroadcastStats.

        ~

        :return: The billed_amount of this CallBroadcastStats.
        :rtype: float
        """
        return self._billed_amount

    @billed_amount.setter
    def billed_amount(self, billed_amount):
        """Sets the billed_amount of this CallBroadcastStats.

        ~

        :param billed_amount: The billed_amount of this CallBroadcastStats.
        :type billed_amount: float
        """

        self._billed_amount = billed_amount

    @property
    def billed_duration(self):
        """Gets the billed_duration of this CallBroadcastStats.

        ~

        :return: The billed_duration of this CallBroadcastStats.
        :rtype: int
        """
        return self._billed_duration

    @billed_duration.setter
    def billed_duration(self, billed_duration):
        """Sets the billed_duration of this CallBroadcastStats.

        ~

        :param billed_duration: The billed_duration of this CallBroadcastStats.
        :type billed_duration: int
        """

        self._billed_duration = billed_duration

    @property
    def busy_count(self):
        """Gets the busy_count of this CallBroadcastStats.

        ~

        :return: The busy_count of this CallBroadcastStats.
        :rtype: int
        """
        return self._busy_count

    @busy_count.setter
    def busy_count(self, busy_count):
        """Sets the busy_count of this CallBroadcastStats.

        ~

        :param busy_count: The busy_count of this CallBroadcastStats.
        :type busy_count: int
        """

        self._busy_count = busy_count

    @property
    def calls_attempted(self):
        """Gets the calls_attempted of this CallBroadcastStats.

        ~

        :return: The calls_attempted of this CallBroadcastStats.
        :rtype: int
        """
        return self._calls_attempted

    @calls_attempted.setter
    def calls_attempted(self, calls_attempted):
        """Sets the calls_attempted of this CallBroadcastStats.

        ~

        :param calls_attempted: The calls_attempted of this CallBroadcastStats.
        :type calls_attempted: int
        """

        self._calls_attempted = calls_attempted

    @property
    def calls_awaiting_redial(self):
        """Gets the calls_awaiting_redial of this CallBroadcastStats.

        ~

        :return: The calls_awaiting_redial of this CallBroadcastStats.
        :rtype: int
        """
        return self._calls_awaiting_redial

    @calls_awaiting_redial.setter
    def calls_awaiting_redial(self, calls_awaiting_redial):
        """Sets the calls_awaiting_redial of this CallBroadcastStats.

        ~

        :param calls_awaiting_redial: The calls_awaiting_redial of this CallBroadcastStats.
        :type calls_awaiting_redial: int
        """

        self._calls_awaiting_redial = calls_awaiting_redial

    @property
    def calls_duration(self):
        """Gets the calls_duration of this CallBroadcastStats.

        ~

        :return: The calls_duration of this CallBroadcastStats.
        :rtype: int
        """
        return self._calls_duration

    @calls_duration.setter
    def calls_duration(self, calls_duration):
        """Sets the calls_duration of this CallBroadcastStats.

        ~

        :param calls_duration: The calls_duration of this CallBroadcastStats.
        :type calls_duration: int
        """

        self._calls_duration = calls_duration

    @property
    def calls_live_answer(self):
        """Gets the calls_live_answer of this CallBroadcastStats.

        ~

        :return: The calls_live_answer of this CallBroadcastStats.
        :rtype: int
        """
        return self._calls_live_answer

    @calls_live_answer.setter
    def calls_live_answer(self, calls_live_answer):
        """Sets the calls_live_answer of this CallBroadcastStats.

        ~

        :param calls_live_answer: The calls_live_answer of this CallBroadcastStats.
        :type calls_live_answer: int
        """

        self._calls_live_answer = calls_live_answer

    @property
    def calls_placed(self):
        """Gets the calls_placed of this CallBroadcastStats.

        ~

        :return: The calls_placed of this CallBroadcastStats.
        :rtype: int
        """
        return self._calls_placed

    @calls_placed.setter
    def calls_placed(self, calls_placed):
        """Sets the calls_placed of this CallBroadcastStats.

        ~

        :param calls_placed: The calls_placed of this CallBroadcastStats.
        :type calls_placed: int
        """

        self._calls_placed = calls_placed

    @property
    def calls_remaining(self):
        """Gets the calls_remaining of this CallBroadcastStats.

        ~

        :return: The calls_remaining of this CallBroadcastStats.
        :rtype: int
        """
        return self._calls_remaining

    @calls_remaining.setter
    def calls_remaining(self, calls_remaining):
        """Sets the calls_remaining of this CallBroadcastStats.

        ~

        :param calls_remaining: The calls_remaining of this CallBroadcastStats.
        :type calls_remaining: int
        """

        self._calls_remaining = calls_remaining

    @property
    def dialed_count(self):
        """Gets the dialed_count of this CallBroadcastStats.

        ~

        :return: The dialed_count of this CallBroadcastStats.
        :rtype: int
        """
        return self._dialed_count

    @dialed_count.setter
    def dialed_count(self, dialed_count):
        """Sets the dialed_count of this CallBroadcastStats.

        ~

        :param dialed_count: The dialed_count of this CallBroadcastStats.
        :type dialed_count: int
        """

        self._dialed_count = dialed_count

    @property
    def do_not_call_count(self):
        """Gets the do_not_call_count of this CallBroadcastStats.

        ~

        :return: The do_not_call_count of this CallBroadcastStats.
        :rtype: int
        """
        return self._do_not_call_count

    @do_not_call_count.setter
    def do_not_call_count(self, do_not_call_count):
        """Sets the do_not_call_count of this CallBroadcastStats.

        ~

        :param do_not_call_count: The do_not_call_count of this CallBroadcastStats.
        :type do_not_call_count: int
        """

        self._do_not_call_count = do_not_call_count

    @property
    def error_count(self):
        """Gets the error_count of this CallBroadcastStats.

        ~

        :return: The error_count of this CallBroadcastStats.
        :rtype: int
        """
        return self._error_count

    @error_count.setter
    def error_count(self, error_count):
        """Sets the error_count of this CallBroadcastStats.

        ~

        :param error_count: The error_count of this CallBroadcastStats.
        :type error_count: int
        """

        self._error_count = error_count

    @property
    def live_count(self):
        """Gets the live_count of this CallBroadcastStats.

        ~

        :return: The live_count of this CallBroadcastStats.
        :rtype: int
        """
        return self._live_count

    @live_count.setter
    def live_count(self, live_count):
        """Sets the live_count of this CallBroadcastStats.

        ~

        :param live_count: The live_count of this CallBroadcastStats.
        :type live_count: int
        """

        self._live_count = live_count

    @property
    def misc_count(self):
        """Gets the misc_count of this CallBroadcastStats.

        ~

        :return: The misc_count of this CallBroadcastStats.
        :rtype: int
        """
        return self._misc_count

    @misc_count.setter
    def misc_count(self, misc_count):
        """Sets the misc_count of this CallBroadcastStats.

        ~

        :param misc_count: The misc_count of this CallBroadcastStats.
        :type misc_count: int
        """

        self._misc_count = misc_count

    @property
    def no_answer_count(self):
        """Gets the no_answer_count of this CallBroadcastStats.

        ~

        :return: The no_answer_count of this CallBroadcastStats.
        :rtype: int
        """
        return self._no_answer_count

    @no_answer_count.setter
    def no_answer_count(self, no_answer_count):
        """Sets the no_answer_count of this CallBroadcastStats.

        ~

        :param no_answer_count: The no_answer_count of this CallBroadcastStats.
        :type no_answer_count: int
        """

        self._no_answer_count = no_answer_count

    @property
    def remaining_outbound_count(self):
        """Gets the remaining_outbound_count of this CallBroadcastStats.

        ~

        :return: The remaining_outbound_count of this CallBroadcastStats.
        :rtype: int
        """
        return self._remaining_outbound_count

    @remaining_outbound_count.setter
    def remaining_outbound_count(self, remaining_outbound_count):
        """Sets the remaining_outbound_count of this CallBroadcastStats.

        ~

        :param remaining_outbound_count: The remaining_outbound_count of this CallBroadcastStats.
        :type remaining_outbound_count: int
        """

        self._remaining_outbound_count = remaining_outbound_count

    @property
    def response_rate_percent(self):
        """Gets the response_rate_percent of this CallBroadcastStats.

        ~

        :return: The response_rate_percent of this CallBroadcastStats.
        :rtype: int
        """
        return self._response_rate_percent

    @response_rate_percent.setter
    def response_rate_percent(self, response_rate_percent):
        """Sets the response_rate_percent of this CallBroadcastStats.

        ~

        :param response_rate_percent: The response_rate_percent of this CallBroadcastStats.
        :type response_rate_percent: int
        """

        self._response_rate_percent = response_rate_percent

    @property
    def total_count(self):
        """Gets the total_count of this CallBroadcastStats.

        ~

        :return: The total_count of this CallBroadcastStats.
        :rtype: int
        """
        return self._total_count

    @total_count.setter
    def total_count(self, total_count):
        """Sets the total_count of this CallBroadcastStats.

        ~

        :param total_count: The total_count of this CallBroadcastStats.
        :type total_count: int
        """

        self._total_count = total_count

    @property
    def total_outbound_count(self):
        """Gets the total_outbound_count of this CallBroadcastStats.

        ~

        :return: The total_outbound_count of this CallBroadcastStats.
        :rtype: int
        """
        return self._total_outbound_count

    @total_outbound_count.setter
    def total_outbound_count(self, total_outbound_count):
        """Sets the total_outbound_count of this CallBroadcastStats.

        ~

        :param total_outbound_count: The total_outbound_count of this CallBroadcastStats.
        :type total_outbound_count: int
        """

        self._total_outbound_count = total_outbound_count

    @property
    def transfer_count(self):
        """Gets the transfer_count of this CallBroadcastStats.

        ~

        :return: The transfer_count of this CallBroadcastStats.
        :rtype: int
        """
        return self._transfer_count

    @transfer_count.setter
    def transfer_count(self, transfer_count):
        """Sets the transfer_count of this CallBroadcastStats.

        ~

        :param transfer_count: The transfer_count of this CallBroadcastStats.
        :type transfer_count: int
        """

        self._transfer_count = transfer_count
