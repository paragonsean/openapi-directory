# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class LocalTimeRestriction(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, begin_hour: int=None, begin_minute: int=None, enabled: bool=None, end_hour: int=None, end_minute: int=None):
        """LocalTimeRestriction - a model defined in OpenAPI

        :param begin_hour: The begin_hour of this LocalTimeRestriction.
        :param begin_minute: The begin_minute of this LocalTimeRestriction.
        :param enabled: The enabled of this LocalTimeRestriction.
        :param end_hour: The end_hour of this LocalTimeRestriction.
        :param end_minute: The end_minute of this LocalTimeRestriction.
        """
        self.openapi_types = {
            'begin_hour': int,
            'begin_minute': int,
            'enabled': bool,
            'end_hour': int,
            'end_minute': int
        }

        self.attribute_map = {
            'begin_hour': 'beginHour',
            'begin_minute': 'beginMinute',
            'enabled': 'enabled',
            'end_hour': 'endHour',
            'end_minute': 'endMinute'
        }

        self._begin_hour = begin_hour
        self._begin_minute = begin_minute
        self._enabled = enabled
        self._end_hour = end_hour
        self._end_minute = end_minute

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LocalTimeRestriction':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LocalTimeRestriction of this LocalTimeRestriction.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def begin_hour(self):
        """Gets the begin_hour of this LocalTimeRestriction.

        An hour of restriction start

        :return: The begin_hour of this LocalTimeRestriction.
        :rtype: int
        """
        return self._begin_hour

    @begin_hour.setter
    def begin_hour(self, begin_hour):
        """Sets the begin_hour of this LocalTimeRestriction.

        An hour of restriction start

        :param begin_hour: The begin_hour of this LocalTimeRestriction.
        :type begin_hour: int
        """

        self._begin_hour = begin_hour

    @property
    def begin_minute(self):
        """Gets the begin_minute of this LocalTimeRestriction.

        The minutes to start a restriction

        :return: The begin_minute of this LocalTimeRestriction.
        :rtype: int
        """
        return self._begin_minute

    @begin_minute.setter
    def begin_minute(self, begin_minute):
        """Sets the begin_minute of this LocalTimeRestriction.

        The minutes to start a restriction

        :param begin_minute: The begin_minute of this LocalTimeRestriction.
        :type begin_minute: int
        """

        self._begin_minute = begin_minute

    @property
    def enabled(self):
        """Gets the enabled of this LocalTimeRestriction.

        A restriction enabled

        :return: The enabled of this LocalTimeRestriction.
        :rtype: bool
        """
        return self._enabled

    @enabled.setter
    def enabled(self, enabled):
        """Sets the enabled of this LocalTimeRestriction.

        A restriction enabled

        :param enabled: The enabled of this LocalTimeRestriction.
        :type enabled: bool
        """

        self._enabled = enabled

    @property
    def end_hour(self):
        """Gets the end_hour of this LocalTimeRestriction.

        An hour of restriction end

        :return: The end_hour of this LocalTimeRestriction.
        :rtype: int
        """
        return self._end_hour

    @end_hour.setter
    def end_hour(self, end_hour):
        """Sets the end_hour of this LocalTimeRestriction.

        An hour of restriction end

        :param end_hour: The end_hour of this LocalTimeRestriction.
        :type end_hour: int
        """

        self._end_hour = end_hour

    @property
    def end_minute(self):
        """Gets the end_minute of this LocalTimeRestriction.

        The minutes of restriction end

        :return: The end_minute of this LocalTimeRestriction.
        :rtype: int
        """
        return self._end_minute

    @end_minute.setter
    def end_minute(self, end_minute):
        """Sets the end_minute of this LocalTimeRestriction.

        The minutes of restriction end

        :param end_minute: The end_minute of this LocalTimeRestriction.
        :type end_minute: int
        """

        self._end_minute = end_minute
