# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.media import Media
from openapi_server import util


class TextRecipient(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, attributes: Dict[str, str]=None, contact_id: int=None, from_number: str=None, media: List[Media]=None, message: str=None, phone_number: str=None):
        """TextRecipient - a model defined in OpenAPI

        :param attributes: The attributes of this TextRecipient.
        :param contact_id: The contact_id of this TextRecipient.
        :param from_number: The from_number of this TextRecipient.
        :param media: The media of this TextRecipient.
        :param message: The message of this TextRecipient.
        :param phone_number: The phone_number of this TextRecipient.
        """
        self.openapi_types = {
            'attributes': Dict[str, str],
            'contact_id': int,
            'from_number': str,
            'media': List[Media],
            'message': str,
            'phone_number': str
        }

        self.attribute_map = {
            'attributes': 'attributes',
            'contact_id': 'contactId',
            'from_number': 'fromNumber',
            'media': 'media',
            'message': 'message',
            'phone_number': 'phoneNumber'
        }

        self._attributes = attributes
        self._contact_id = contact_id
        self._from_number = from_number
        self._media = media
        self._message = message
        self._phone_number = phone_number

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TextRecipient':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TextRecipient of this TextRecipient.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def attributes(self):
        """Gets the attributes of this TextRecipient.

        A map of string attributes associated with a recipient

        :return: The attributes of this TextRecipient.
        :rtype: Dict[str, str]
        """
        return self._attributes

    @attributes.setter
    def attributes(self, attributes):
        """Sets the attributes of this TextRecipient.

        A map of string attributes associated with a recipient

        :param attributes: The attributes of this TextRecipient.
        :type attributes: Dict[str, str]
        """

        self._attributes = attributes

    @property
    def contact_id(self):
        """Gets the contact_id of this TextRecipient.

        An id of existing contact in account

        :return: The contact_id of this TextRecipient.
        :rtype: int
        """
        return self._contact_id

    @contact_id.setter
    def contact_id(self, contact_id):
        """Sets the contact_id of this TextRecipient.

        An id of existing contact in account

        :param contact_id: The contact_id of this TextRecipient.
        :type contact_id: int
        """

        self._contact_id = contact_id

    @property
    def from_number(self):
        """Gets the from_number of this TextRecipient.

        ~

        :return: The from_number of this TextRecipient.
        :rtype: str
        """
        return self._from_number

    @from_number.setter
    def from_number(self, from_number):
        """Sets the from_number of this TextRecipient.

        ~

        :param from_number: The from_number of this TextRecipient.
        :type from_number: str
        """

        self._from_number = from_number

    @property
    def media(self):
        """Gets the media of this TextRecipient.

        A list of media objects' ids associated with a text message

        :return: The media of this TextRecipient.
        :rtype: List[Media]
        """
        return self._media

    @media.setter
    def media(self, media):
        """Sets the media of this TextRecipient.

        A list of media objects' ids associated with a text message

        :param media: The media of this TextRecipient.
        :type media: List[Media]
        """

        self._media = media

    @property
    def message(self):
        """Gets the message of this TextRecipient.

        A text message

        :return: The message of this TextRecipient.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this TextRecipient.

        A text message

        :param message: The message of this TextRecipient.
        :type message: str
        """

        self._message = message

    @property
    def phone_number(self):
        """Gets the phone_number of this TextRecipient.

        Phone number in E.164 format (11-digit) or short code. Example: 12132000384, 67076

        :return: The phone_number of this TextRecipient.
        :rtype: str
        """
        return self._phone_number

    @phone_number.setter
    def phone_number(self, phone_number):
        """Sets the phone_number of this TextRecipient.

        Phone number in E.164 format (11-digit) or short code. Example: 12132000384, 67076

        :param phone_number: The phone_number of this TextRecipient.
        :type phone_number: str
        """

        self._phone_number = phone_number
