# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.call import Call
from openapi_server.models.text import Text
from openapi_server import util


class ContactHistory(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, calls: List[Call]=None, id: int=None, texts: List[Text]=None):
        """ContactHistory - a model defined in OpenAPI

        :param calls: The calls of this ContactHistory.
        :param id: The id of this ContactHistory.
        :param texts: The texts of this ContactHistory.
        """
        self.openapi_types = {
            'calls': List[Call],
            'id': int,
            'texts': List[Text]
        }

        self.attribute_map = {
            'calls': 'calls',
            'id': 'id',
            'texts': 'texts'
        }

        self._calls = calls
        self._id = id
        self._texts = texts

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ContactHistory':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ContactHistory of this ContactHistory.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def calls(self):
        """Gets the calls of this ContactHistory.

        List of Call objects addressed to a given contact

        :return: The calls of this ContactHistory.
        :rtype: List[Call]
        """
        return self._calls

    @calls.setter
    def calls(self, calls):
        """Sets the calls of this ContactHistory.

        List of Call objects addressed to a given contact

        :param calls: The calls of this ContactHistory.
        :type calls: List[Call]
        """

        self._calls = calls

    @property
    def id(self):
        """Gets the id of this ContactHistory.

        An id of a contact

        :return: The id of this ContactHistory.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ContactHistory.

        An id of a contact

        :param id: The id of this ContactHistory.
        :type id: int
        """

        self._id = id

    @property
    def texts(self):
        """Gets the texts of this ContactHistory.

        List of Text objects addressed to a given contact

        :return: The texts of this ContactHistory.
        :rtype: List[Text]
        """
        return self._texts

    @texts.setter
    def texts(self, texts):
        """Sets the texts of this ContactHistory.

        List of Text objects addressed to a given contact

        :param texts: The texts of this ContactHistory.
        :type texts: List[Text]
        """

        self._texts = texts
