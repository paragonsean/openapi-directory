# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class WebhookResource(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, resource: str=None, supported_events: list[str]=None):
        """WebhookResource - a model defined in OpenAPI

        :param resource: The resource of this WebhookResource.
        :param supported_events: The supported_events of this WebhookResource.
        """
        self.openapi_types = {
            'resource': str,
            'supported_events': list[str]
        }

        self.attribute_map = {
            'resource': 'resource',
            'supported_events': 'supportedEvents'
        }

        self._resource = resource
        self._supported_events = supported_events

    @classmethod
    def from_dict(cls, dikt: dict) -> 'WebhookResource':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The WebhookResource of this WebhookResource.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def resource(self):
        """Gets the resource of this WebhookResource.

        A name of a webhook resource (ex: InboundCall, OutboundCall, InboundText, OutboundText, CallBroadcast, TextBroadcast, etc...)

        :return: The resource of this WebhookResource.
        :rtype: str
        """
        return self._resource

    @resource.setter
    def resource(self, resource):
        """Sets the resource of this WebhookResource.

        A name of a webhook resource (ex: InboundCall, OutboundCall, InboundText, OutboundText, CallBroadcast, TextBroadcast, etc...)

        :param resource: The resource of this WebhookResource.
        :type resource: str
        """

        self._resource = resource

    @property
    def supported_events(self):
        """Gets the supported_events of this WebhookResource.

        A list of event names which are supported by webhook resource (ex: Started, Stopped, Finished, etc.)

        :return: The supported_events of this WebhookResource.
        :rtype: list[str]
        """
        return self._supported_events

    @supported_events.setter
    def supported_events(self, supported_events):
        """Sets the supported_events of this WebhookResource.

        A list of event names which are supported by webhook resource (ex: Started, Stopped, Finished, etc.)

        :param supported_events: The supported_events of this WebhookResource.
        :type supported_events: list[str]
        """

        self._supported_events = supported_events
