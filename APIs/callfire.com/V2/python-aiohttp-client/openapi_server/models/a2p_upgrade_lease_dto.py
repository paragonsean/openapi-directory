# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class A2pUpgradeLeaseDto(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, blocked: datetime=None, canceled: bool=None, created_at: datetime=None, deleted: bool=None, id: int=None, invoice_id: int=None, next_billing: datetime=None, packaged: bool=None, prepaid_discount_id: int=None, price: float=None, type: str=None, updated_at: datetime=None):
        """A2pUpgradeLeaseDto - a model defined in OpenAPI

        :param blocked: The blocked of this A2pUpgradeLeaseDto.
        :param canceled: The canceled of this A2pUpgradeLeaseDto.
        :param created_at: The created_at of this A2pUpgradeLeaseDto.
        :param deleted: The deleted of this A2pUpgradeLeaseDto.
        :param id: The id of this A2pUpgradeLeaseDto.
        :param invoice_id: The invoice_id of this A2pUpgradeLeaseDto.
        :param next_billing: The next_billing of this A2pUpgradeLeaseDto.
        :param packaged: The packaged of this A2pUpgradeLeaseDto.
        :param prepaid_discount_id: The prepaid_discount_id of this A2pUpgradeLeaseDto.
        :param price: The price of this A2pUpgradeLeaseDto.
        :param type: The type of this A2pUpgradeLeaseDto.
        :param updated_at: The updated_at of this A2pUpgradeLeaseDto.
        """
        self.openapi_types = {
            'blocked': datetime,
            'canceled': bool,
            'created_at': datetime,
            'deleted': bool,
            'id': int,
            'invoice_id': int,
            'next_billing': datetime,
            'packaged': bool,
            'prepaid_discount_id': int,
            'price': float,
            'type': str,
            'updated_at': datetime
        }

        self.attribute_map = {
            'blocked': 'blocked',
            'canceled': 'canceled',
            'created_at': 'createdAt',
            'deleted': 'deleted',
            'id': 'id',
            'invoice_id': 'invoiceId',
            'next_billing': 'nextBilling',
            'packaged': 'packaged',
            'prepaid_discount_id': 'prepaidDiscountId',
            'price': 'price',
            'type': 'type',
            'updated_at': 'updatedAt'
        }

        self._blocked = blocked
        self._canceled = canceled
        self._created_at = created_at
        self._deleted = deleted
        self._id = id
        self._invoice_id = invoice_id
        self._next_billing = next_billing
        self._packaged = packaged
        self._prepaid_discount_id = prepaid_discount_id
        self._price = price
        self._type = type
        self._updated_at = updated_at

    @classmethod
    def from_dict(cls, dikt: dict) -> 'A2pUpgradeLeaseDto':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The A2pUpgradeLeaseDto of this A2pUpgradeLeaseDto.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def blocked(self):
        """Gets the blocked of this A2pUpgradeLeaseDto.

        ~

        :return: The blocked of this A2pUpgradeLeaseDto.
        :rtype: datetime
        """
        return self._blocked

    @blocked.setter
    def blocked(self, blocked):
        """Sets the blocked of this A2pUpgradeLeaseDto.

        ~

        :param blocked: The blocked of this A2pUpgradeLeaseDto.
        :type blocked: datetime
        """

        self._blocked = blocked

    @property
    def canceled(self):
        """Gets the canceled of this A2pUpgradeLeaseDto.

        ~

        :return: The canceled of this A2pUpgradeLeaseDto.
        :rtype: bool
        """
        return self._canceled

    @canceled.setter
    def canceled(self, canceled):
        """Sets the canceled of this A2pUpgradeLeaseDto.

        ~

        :param canceled: The canceled of this A2pUpgradeLeaseDto.
        :type canceled: bool
        """

        self._canceled = canceled

    @property
    def created_at(self):
        """Gets the created_at of this A2pUpgradeLeaseDto.

        ~

        :return: The created_at of this A2pUpgradeLeaseDto.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this A2pUpgradeLeaseDto.

        ~

        :param created_at: The created_at of this A2pUpgradeLeaseDto.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def deleted(self):
        """Gets the deleted of this A2pUpgradeLeaseDto.

        ~

        :return: The deleted of this A2pUpgradeLeaseDto.
        :rtype: bool
        """
        return self._deleted

    @deleted.setter
    def deleted(self, deleted):
        """Sets the deleted of this A2pUpgradeLeaseDto.

        ~

        :param deleted: The deleted of this A2pUpgradeLeaseDto.
        :type deleted: bool
        """

        self._deleted = deleted

    @property
    def id(self):
        """Gets the id of this A2pUpgradeLeaseDto.

        ~

        :return: The id of this A2pUpgradeLeaseDto.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this A2pUpgradeLeaseDto.

        ~

        :param id: The id of this A2pUpgradeLeaseDto.
        :type id: int
        """

        self._id = id

    @property
    def invoice_id(self):
        """Gets the invoice_id of this A2pUpgradeLeaseDto.

        ~

        :return: The invoice_id of this A2pUpgradeLeaseDto.
        :rtype: int
        """
        return self._invoice_id

    @invoice_id.setter
    def invoice_id(self, invoice_id):
        """Sets the invoice_id of this A2pUpgradeLeaseDto.

        ~

        :param invoice_id: The invoice_id of this A2pUpgradeLeaseDto.
        :type invoice_id: int
        """

        self._invoice_id = invoice_id

    @property
    def next_billing(self):
        """Gets the next_billing of this A2pUpgradeLeaseDto.

        ~

        :return: The next_billing of this A2pUpgradeLeaseDto.
        :rtype: datetime
        """
        return self._next_billing

    @next_billing.setter
    def next_billing(self, next_billing):
        """Sets the next_billing of this A2pUpgradeLeaseDto.

        ~

        :param next_billing: The next_billing of this A2pUpgradeLeaseDto.
        :type next_billing: datetime
        """

        self._next_billing = next_billing

    @property
    def packaged(self):
        """Gets the packaged of this A2pUpgradeLeaseDto.

        ~

        :return: The packaged of this A2pUpgradeLeaseDto.
        :rtype: bool
        """
        return self._packaged

    @packaged.setter
    def packaged(self, packaged):
        """Sets the packaged of this A2pUpgradeLeaseDto.

        ~

        :param packaged: The packaged of this A2pUpgradeLeaseDto.
        :type packaged: bool
        """

        self._packaged = packaged

    @property
    def prepaid_discount_id(self):
        """Gets the prepaid_discount_id of this A2pUpgradeLeaseDto.

        ~

        :return: The prepaid_discount_id of this A2pUpgradeLeaseDto.
        :rtype: int
        """
        return self._prepaid_discount_id

    @prepaid_discount_id.setter
    def prepaid_discount_id(self, prepaid_discount_id):
        """Sets the prepaid_discount_id of this A2pUpgradeLeaseDto.

        ~

        :param prepaid_discount_id: The prepaid_discount_id of this A2pUpgradeLeaseDto.
        :type prepaid_discount_id: int
        """

        self._prepaid_discount_id = prepaid_discount_id

    @property
    def price(self):
        """Gets the price of this A2pUpgradeLeaseDto.

        ~

        :return: The price of this A2pUpgradeLeaseDto.
        :rtype: float
        """
        return self._price

    @price.setter
    def price(self, price):
        """Sets the price of this A2pUpgradeLeaseDto.

        ~

        :param price: The price of this A2pUpgradeLeaseDto.
        :type price: float
        """

        self._price = price

    @property
    def type(self):
        """Gets the type of this A2pUpgradeLeaseDto.

        ~

        :return: The type of this A2pUpgradeLeaseDto.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this A2pUpgradeLeaseDto.

        ~

        :param type: The type of this A2pUpgradeLeaseDto.
        :type type: str
        """
        allowed_values = ["PLAN", "EXTRA"]  # noqa: E501
        if type not in allowed_values:
            raise ValueError(
                "Invalid value for `type` ({0}), must be one of {1}"
                .format(type, allowed_values)
            )

        self._type = type

    @property
    def updated_at(self):
        """Gets the updated_at of this A2pUpgradeLeaseDto.

        ~

        :return: The updated_at of this A2pUpgradeLeaseDto.
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this A2pUpgradeLeaseDto.

        ~

        :param updated_at: The updated_at of this A2pUpgradeLeaseDto.
        :type updated_at: datetime
        """

        self._updated_at = updated_at
