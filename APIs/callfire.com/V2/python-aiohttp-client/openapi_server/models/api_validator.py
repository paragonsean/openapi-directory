# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ApiValidator(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, exception_handler: object=None):
        """ApiValidator - a model defined in OpenAPI

        :param exception_handler: The exception_handler of this ApiValidator.
        """
        self.openapi_types = {
            'exception_handler': object
        }

        self.attribute_map = {
            'exception_handler': 'exceptionHandler'
        }

        self._exception_handler = exception_handler

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApiValidator':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ApiValidator of this ApiValidator.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def exception_handler(self):
        """Gets the exception_handler of this ApiValidator.

        ~

        :return: The exception_handler of this ApiValidator.
        :rtype: object
        """
        return self._exception_handler

    @exception_handler.setter
    def exception_handler(self, exception_handler):
        """Sets the exception_handler of this ApiValidator.

        ~

        :param exception_handler: The exception_handler of this ApiValidator.
        :type exception_handler: object
        """

        self._exception_handler = exception_handler
