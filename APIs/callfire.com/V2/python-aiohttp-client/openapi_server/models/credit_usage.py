# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CreditUsage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, calls_duration_minutes: int=None, credits_used: float=None, interval_begin: int=None, interval_end: int=None, texts_sent: int=None):
        """CreditUsage - a model defined in OpenAPI

        :param calls_duration_minutes: The calls_duration_minutes of this CreditUsage.
        :param credits_used: The credits_used of this CreditUsage.
        :param interval_begin: The interval_begin of this CreditUsage.
        :param interval_end: The interval_end of this CreditUsage.
        :param texts_sent: The texts_sent of this CreditUsage.
        """
        self.openapi_types = {
            'calls_duration_minutes': int,
            'credits_used': float,
            'interval_begin': int,
            'interval_end': int,
            'texts_sent': int
        }

        self.attribute_map = {
            'calls_duration_minutes': 'callsDurationMinutes',
            'credits_used': 'creditsUsed',
            'interval_begin': 'intervalBegin',
            'interval_end': 'intervalEnd',
            'texts_sent': 'textsSent'
        }

        self._calls_duration_minutes = calls_duration_minutes
        self._credits_used = credits_used
        self._interval_begin = interval_begin
        self._interval_end = interval_end
        self._texts_sent = texts_sent

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreditUsage':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreditUsage of this CreditUsage.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def calls_duration_minutes(self):
        """Gets the calls_duration_minutes of this CreditUsage.

        Sum of calls duration rounded to nearest whole minute

        :return: The calls_duration_minutes of this CreditUsage.
        :rtype: int
        """
        return self._calls_duration_minutes

    @calls_duration_minutes.setter
    def calls_duration_minutes(self, calls_duration_minutes):
        """Sets the calls_duration_minutes of this CreditUsage.

        Sum of calls duration rounded to nearest whole minute

        :param calls_duration_minutes: The calls_duration_minutes of this CreditUsage.
        :type calls_duration_minutes: int
        """

        self._calls_duration_minutes = calls_duration_minutes

    @property
    def credits_used(self):
        """Gets the credits_used of this CreditUsage.

        Total credits used calls and texts.

        :return: The credits_used of this CreditUsage.
        :rtype: float
        """
        return self._credits_used

    @credits_used.setter
    def credits_used(self, credits_used):
        """Sets the credits_used of this CreditUsage.

        Total credits used calls and texts.

        :param credits_used: The credits_used of this CreditUsage.
        :type credits_used: float
        """

        self._credits_used = credits_used

    @property
    def interval_begin(self):
        """Gets the interval_begin of this CreditUsage.

        Start of usage period formatted in unix time milliseconds. Example: 1473781817000 for Sat, 05 Jan 1985 14:03:37 GMT

        :return: The interval_begin of this CreditUsage.
        :rtype: int
        """
        return self._interval_begin

    @interval_begin.setter
    def interval_begin(self, interval_begin):
        """Sets the interval_begin of this CreditUsage.

        Start of usage period formatted in unix time milliseconds. Example: 1473781817000 for Sat, 05 Jan 1985 14:03:37 GMT

        :param interval_begin: The interval_begin of this CreditUsage.
        :type interval_begin: int
        """

        self._interval_begin = interval_begin

    @property
    def interval_end(self):
        """Gets the interval_end of this CreditUsage.

        End of usage period formatted in unix time milliseconds. Example: 1473781817000 for Sat, 05 Jan 1985 14:03:37 GMT

        :return: The interval_end of this CreditUsage.
        :rtype: int
        """
        return self._interval_end

    @interval_end.setter
    def interval_end(self, interval_end):
        """Sets the interval_end of this CreditUsage.

        End of usage period formatted in unix time milliseconds. Example: 1473781817000 for Sat, 05 Jan 1985 14:03:37 GMT

        :param interval_end: The interval_end of this CreditUsage.
        :type interval_end: int
        """

        self._interval_end = interval_end

    @property
    def texts_sent(self):
        """Gets the texts_sent of this CreditUsage.

        Number of texts sent

        :return: The texts_sent of this CreditUsage.
        :rtype: int
        """
        return self._texts_sent

    @texts_sent.setter
    def texts_sent(self, texts_sent):
        """Sets the texts_sent of this CreditUsage.

        Number of texts sent

        :param texts_sent: The texts_sent of this CreditUsage.
        :type texts_sent: int
        """

        self._texts_sent = texts_sent
