# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.local_time import LocalTime
from openapi_server import util


class WeeklySchedule(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, days_of_week: list[str]=None, start_time_of_day: LocalTime=None, stop_time_of_day: LocalTime=None, time_zone: str=None):
        """WeeklySchedule - a model defined in OpenAPI

        :param days_of_week: The days_of_week of this WeeklySchedule.
        :param start_time_of_day: The start_time_of_day of this WeeklySchedule.
        :param stop_time_of_day: The stop_time_of_day of this WeeklySchedule.
        :param time_zone: The time_zone of this WeeklySchedule.
        """
        self.openapi_types = {
            'days_of_week': list[str],
            'start_time_of_day': LocalTime,
            'stop_time_of_day': LocalTime,
            'time_zone': str
        }

        self.attribute_map = {
            'days_of_week': 'daysOfWeek',
            'start_time_of_day': 'startTimeOfDay',
            'stop_time_of_day': 'stopTimeOfDay',
            'time_zone': 'timeZone'
        }

        self._days_of_week = days_of_week
        self._start_time_of_day = start_time_of_day
        self._stop_time_of_day = stop_time_of_day
        self._time_zone = time_zone

    @classmethod
    def from_dict(cls, dikt: dict) -> 'WeeklySchedule':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The WeeklySchedule of this WeeklySchedule.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def days_of_week(self):
        """Gets the days_of_week of this WeeklySchedule.

        A scheduled days when operation will trigger

        :return: The days_of_week of this WeeklySchedule.
        :rtype: list[str]
        """
        return self._days_of_week

    @days_of_week.setter
    def days_of_week(self, days_of_week):
        """Sets the days_of_week of this WeeklySchedule.

        A scheduled days when operation will trigger

        :param days_of_week: The days_of_week of this WeeklySchedule.
        :type days_of_week: list[str]
        """

        self._days_of_week = days_of_week

    @property
    def start_time_of_day(self):
        """Gets the start_time_of_day of this WeeklySchedule.


        :return: The start_time_of_day of this WeeklySchedule.
        :rtype: LocalTime
        """
        return self._start_time_of_day

    @start_time_of_day.setter
    def start_time_of_day(self, start_time_of_day):
        """Sets the start_time_of_day of this WeeklySchedule.


        :param start_time_of_day: The start_time_of_day of this WeeklySchedule.
        :type start_time_of_day: LocalTime
        """

        self._start_time_of_day = start_time_of_day

    @property
    def stop_time_of_day(self):
        """Gets the stop_time_of_day of this WeeklySchedule.


        :return: The stop_time_of_day of this WeeklySchedule.
        :rtype: LocalTime
        """
        return self._stop_time_of_day

    @stop_time_of_day.setter
    def stop_time_of_day(self, stop_time_of_day):
        """Sets the stop_time_of_day of this WeeklySchedule.


        :param stop_time_of_day: The stop_time_of_day of this WeeklySchedule.
        :type stop_time_of_day: LocalTime
        """

        self._stop_time_of_day = stop_time_of_day

    @property
    def time_zone(self):
        """Gets the time_zone of this WeeklySchedule.

        A user's timezone

        :return: The time_zone of this WeeklySchedule.
        :rtype: str
        """
        return self._time_zone

    @time_zone.setter
    def time_zone(self, time_zone):
        """Sets the time_zone of this WeeklySchedule.

        A user's timezone

        :param time_zone: The time_zone of this WeeklySchedule.
        :type time_zone: str
        """

        self._time_zone = time_zone
