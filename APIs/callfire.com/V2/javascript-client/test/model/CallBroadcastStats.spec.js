/**
 * CallFire API Documentation
 * CallFire
 *
 * The version of the OpenAPI document: V2
 * Contact: support@callfire.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CallFireApiDocumentation);
  }
}(this, function(expect, CallFireApiDocumentation) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CallFireApiDocumentation.CallBroadcastStats();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CallBroadcastStats', function() {
    it('should create an instance of CallBroadcastStats', function() {
      // uncomment below and update the code to test CallBroadcastStats
      //var instance = new CallFireApiDocumentation.CallBroadcastStats();
      //expect(instance).to.be.a(CallFireApiDocumentation.CallBroadcastStats);
    });

    it('should have the property answeringMachineCount (base name: "answeringMachineCount")', function() {
      // uncomment below and update the code to test the property answeringMachineCount
      //var instance = new CallFireApiDocumentation.CallBroadcastStats();
      //expect(instance).to.be();
    });

    it('should have the property billedAmount (base name: "billedAmount")', function() {
      // uncomment below and update the code to test the property billedAmount
      //var instance = new CallFireApiDocumentation.CallBroadcastStats();
      //expect(instance).to.be();
    });

    it('should have the property billedDuration (base name: "billedDuration")', function() {
      // uncomment below and update the code to test the property billedDuration
      //var instance = new CallFireApiDocumentation.CallBroadcastStats();
      //expect(instance).to.be();
    });

    it('should have the property busyCount (base name: "busyCount")', function() {
      // uncomment below and update the code to test the property busyCount
      //var instance = new CallFireApiDocumentation.CallBroadcastStats();
      //expect(instance).to.be();
    });

    it('should have the property callsAttempted (base name: "callsAttempted")', function() {
      // uncomment below and update the code to test the property callsAttempted
      //var instance = new CallFireApiDocumentation.CallBroadcastStats();
      //expect(instance).to.be();
    });

    it('should have the property callsAwaitingRedial (base name: "callsAwaitingRedial")', function() {
      // uncomment below and update the code to test the property callsAwaitingRedial
      //var instance = new CallFireApiDocumentation.CallBroadcastStats();
      //expect(instance).to.be();
    });

    it('should have the property callsDuration (base name: "callsDuration")', function() {
      // uncomment below and update the code to test the property callsDuration
      //var instance = new CallFireApiDocumentation.CallBroadcastStats();
      //expect(instance).to.be();
    });

    it('should have the property callsLiveAnswer (base name: "callsLiveAnswer")', function() {
      // uncomment below and update the code to test the property callsLiveAnswer
      //var instance = new CallFireApiDocumentation.CallBroadcastStats();
      //expect(instance).to.be();
    });

    it('should have the property callsPlaced (base name: "callsPlaced")', function() {
      // uncomment below and update the code to test the property callsPlaced
      //var instance = new CallFireApiDocumentation.CallBroadcastStats();
      //expect(instance).to.be();
    });

    it('should have the property callsRemaining (base name: "callsRemaining")', function() {
      // uncomment below and update the code to test the property callsRemaining
      //var instance = new CallFireApiDocumentation.CallBroadcastStats();
      //expect(instance).to.be();
    });

    it('should have the property dialedCount (base name: "dialedCount")', function() {
      // uncomment below and update the code to test the property dialedCount
      //var instance = new CallFireApiDocumentation.CallBroadcastStats();
      //expect(instance).to.be();
    });

    it('should have the property doNotCallCount (base name: "doNotCallCount")', function() {
      // uncomment below and update the code to test the property doNotCallCount
      //var instance = new CallFireApiDocumentation.CallBroadcastStats();
      //expect(instance).to.be();
    });

    it('should have the property errorCount (base name: "errorCount")', function() {
      // uncomment below and update the code to test the property errorCount
      //var instance = new CallFireApiDocumentation.CallBroadcastStats();
      //expect(instance).to.be();
    });

    it('should have the property liveCount (base name: "liveCount")', function() {
      // uncomment below and update the code to test the property liveCount
      //var instance = new CallFireApiDocumentation.CallBroadcastStats();
      //expect(instance).to.be();
    });

    it('should have the property miscCount (base name: "miscCount")', function() {
      // uncomment below and update the code to test the property miscCount
      //var instance = new CallFireApiDocumentation.CallBroadcastStats();
      //expect(instance).to.be();
    });

    it('should have the property noAnswerCount (base name: "noAnswerCount")', function() {
      // uncomment below and update the code to test the property noAnswerCount
      //var instance = new CallFireApiDocumentation.CallBroadcastStats();
      //expect(instance).to.be();
    });

    it('should have the property remainingOutboundCount (base name: "remainingOutboundCount")', function() {
      // uncomment below and update the code to test the property remainingOutboundCount
      //var instance = new CallFireApiDocumentation.CallBroadcastStats();
      //expect(instance).to.be();
    });

    it('should have the property responseRatePercent (base name: "responseRatePercent")', function() {
      // uncomment below and update the code to test the property responseRatePercent
      //var instance = new CallFireApiDocumentation.CallBroadcastStats();
      //expect(instance).to.be();
    });

    it('should have the property totalCount (base name: "totalCount")', function() {
      // uncomment below and update the code to test the property totalCount
      //var instance = new CallFireApiDocumentation.CallBroadcastStats();
      //expect(instance).to.be();
    });

    it('should have the property totalOutboundCount (base name: "totalOutboundCount")', function() {
      // uncomment below and update the code to test the property totalOutboundCount
      //var instance = new CallFireApiDocumentation.CallBroadcastStats();
      //expect(instance).to.be();
    });

    it('should have the property transferCount (base name: "transferCount")', function() {
      // uncomment below and update the code to test the property transferCount
      //var instance = new CallFireApiDocumentation.CallBroadcastStats();
      //expect(instance).to.be();
    });

  });

}));
