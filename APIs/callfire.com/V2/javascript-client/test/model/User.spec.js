/**
 * CallFire API Documentation
 * CallFire
 *
 * The version of the OpenAPI document: V2
 * Contact: support@callfire.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CallFireApiDocumentation);
  }
}(this, function(expect, CallFireApiDocumentation) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CallFireApiDocumentation.User();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('User', function() {
    it('should create an instance of User', function() {
      // uncomment below and update the code to test User
      //var instance = new CallFireApiDocumentation.User();
      //expect(instance).to.be.a(CallFireApiDocumentation.User);
    });

    it('should have the property account (base name: "account")', function() {
      // uncomment below and update the code to test the property account
      //var instance = new CallFireApiDocumentation.User();
      //expect(instance).to.be();
    });

    it('should have the property accountHolder (base name: "accountHolder")', function() {
      // uncomment below and update the code to test the property accountHolder
      //var instance = new CallFireApiDocumentation.User();
      //expect(instance).to.be();
    });

    it('should have the property accountId (base name: "accountId")', function() {
      // uncomment below and update the code to test the property accountId
      //var instance = new CallFireApiDocumentation.User();
      //expect(instance).to.be();
    });

    it('should have the property active (base name: "active")', function() {
      // uncomment below and update the code to test the property active
      //var instance = new CallFireApiDocumentation.User();
      //expect(instance).to.be();
    });

    it('should have the property apiPasswordLastFour (base name: "apiPasswordLastFour")', function() {
      // uncomment below and update the code to test the property apiPasswordLastFour
      //var instance = new CallFireApiDocumentation.User();
      //expect(instance).to.be();
    });

    it('should have the property brand (base name: "brand")', function() {
      // uncomment below and update the code to test the property brand
      //var instance = new CallFireApiDocumentation.User();
      //expect(instance).to.be();
    });

    it('should have the property cccAgent (base name: "cccAgent")', function() {
      // uncomment below and update the code to test the property cccAgent
      //var instance = new CallFireApiDocumentation.User();
      //expect(instance).to.be();
    });

    it('should have the property created (base name: "created")', function() {
      // uncomment below and update the code to test the property created
      //var instance = new CallFireApiDocumentation.User();
      //expect(instance).to.be();
    });

    it('should have the property dateOfBirth (base name: "dateOfBirth")', function() {
      // uncomment below and update the code to test the property dateOfBirth
      //var instance = new CallFireApiDocumentation.User();
      //expect(instance).to.be();
    });

    it('should have the property disabled (base name: "disabled")', function() {
      // uncomment below and update the code to test the property disabled
      //var instance = new CallFireApiDocumentation.User();
      //expect(instance).to.be();
    });

    it('should have the property firstName (base name: "firstName")', function() {
      // uncomment below and update the code to test the property firstName
      //var instance = new CallFireApiDocumentation.User();
      //expect(instance).to.be();
    });

    it('should have the property fullName (base name: "fullName")', function() {
      // uncomment below and update the code to test the property fullName
      //var instance = new CallFireApiDocumentation.User();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new CallFireApiDocumentation.User();
      //expect(instance).to.be();
    });

    it('should have the property industryName (base name: "industryName")', function() {
      // uncomment below and update the code to test the property industryName
      //var instance = new CallFireApiDocumentation.User();
      //expect(instance).to.be();
    });

    it('should have the property lastName (base name: "lastName")', function() {
      // uncomment below and update the code to test the property lastName
      //var instance = new CallFireApiDocumentation.User();
      //expect(instance).to.be();
    });

    it('should have the property musicOnHold (base name: "musicOnHold")', function() {
      // uncomment below and update the code to test the property musicOnHold
      //var instance = new CallFireApiDocumentation.User();
      //expect(instance).to.be();
    });

    it('should have the property notificationSoundEnabled (base name: "notificationSoundEnabled")', function() {
      // uncomment below and update the code to test the property notificationSoundEnabled
      //var instance = new CallFireApiDocumentation.User();
      //expect(instance).to.be();
    });

    it('should have the property optIn (base name: "optIn")', function() {
      // uncomment below and update the code to test the property optIn
      //var instance = new CallFireApiDocumentation.User();
      //expect(instance).to.be();
    });

    it('should have the property optInNumber (base name: "optInNumber")', function() {
      // uncomment below and update the code to test the property optInNumber
      //var instance = new CallFireApiDocumentation.User();
      //expect(instance).to.be();
    });

    it('should have the property permissions (base name: "permissions")', function() {
      // uncomment below and update the code to test the property permissions
      //var instance = new CallFireApiDocumentation.User();
      //expect(instance).to.be();
    });

    it('should have the property phoneNumber (base name: "phoneNumber")', function() {
      // uncomment below and update the code to test the property phoneNumber
      //var instance = new CallFireApiDocumentation.User();
      //expect(instance).to.be();
    });

    it('should have the property phoneNumberExtension (base name: "phoneNumberExtension")', function() {
      // uncomment below and update the code to test the property phoneNumberExtension
      //var instance = new CallFireApiDocumentation.User();
      //expect(instance).to.be();
    });

    it('should have the property phoneNumberExtensionDelaySec (base name: "phoneNumberExtensionDelaySec")', function() {
      // uncomment below and update the code to test the property phoneNumberExtensionDelaySec
      //var instance = new CallFireApiDocumentation.User();
      //expect(instance).to.be();
    });

    it('should have the property phoneNumberForDisplay (base name: "phoneNumberForDisplay")', function() {
      // uncomment below and update the code to test the property phoneNumberForDisplay
      //var instance = new CallFireApiDocumentation.User();
      //expect(instance).to.be();
    });

    it('should have the property phoneNumberVerified (base name: "phoneNumberVerified")', function() {
      // uncomment below and update the code to test the property phoneNumberVerified
      //var instance = new CallFireApiDocumentation.User();
      //expect(instance).to.be();
    });

    it('should have the property profileEmail (base name: "profileEmail")', function() {
      // uncomment below and update the code to test the property profileEmail
      //var instance = new CallFireApiDocumentation.User();
      //expect(instance).to.be();
    });

    it('should have the property signupComplete (base name: "signupComplete")', function() {
      // uncomment below and update the code to test the property signupComplete
      //var instance = new CallFireApiDocumentation.User();
      //expect(instance).to.be();
    });

    it('should have the property soaUser (base name: "soaUser")', function() {
      // uncomment below and update the code to test the property soaUser
      //var instance = new CallFireApiDocumentation.User();
      //expect(instance).to.be();
    });

    it('should have the property teamSeat (base name: "teamSeat")', function() {
      // uncomment below and update the code to test the property teamSeat
      //var instance = new CallFireApiDocumentation.User();
      //expect(instance).to.be();
    });

    it('should have the property userState (base name: "userState")', function() {
      // uncomment below and update the code to test the property userState
      //var instance = new CallFireApiDocumentation.User();
      //expect(instance).to.be();
    });

    it('should have the property userStatePending (base name: "userStatePending")', function() {
      // uncomment below and update the code to test the property userStatePending
      //var instance = new CallFireApiDocumentation.User();
      //expect(instance).to.be();
    });

    it('should have the property visible (base name: "visible")', function() {
      // uncomment below and update the code to test the property visible
      //var instance = new CallFireApiDocumentation.User();
      //expect(instance).to.be();
    });

  });

}));
