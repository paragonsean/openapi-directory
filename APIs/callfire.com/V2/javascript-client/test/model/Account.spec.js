/**
 * CallFire API Documentation
 * CallFire
 *
 * The version of the OpenAPI document: V2
 * Contact: support@callfire.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CallFireApiDocumentation);
  }
}(this, function(expect, CallFireApiDocumentation) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CallFireApiDocumentation.Account();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Account', function() {
    it('should create an instance of Account', function() {
      // uncomment below and update the code to test Account
      //var instance = new CallFireApiDocumentation.Account();
      //expect(instance).to.be.a(CallFireApiDocumentation.Account);
    });

    it('should have the property active (base name: "active")', function() {
      // uncomment below and update the code to test the property active
      //var instance = new CallFireApiDocumentation.Account();
      //expect(instance).to.be();
    });

    it('should have the property address (base name: "address")', function() {
      // uncomment below and update the code to test the property address
      //var instance = new CallFireApiDocumentation.Account();
      //expect(instance).to.be();
    });

    it('should have the property age (base name: "age")', function() {
      // uncomment below and update the code to test the property age
      //var instance = new CallFireApiDocumentation.Account();
      //expect(instance).to.be();
    });

    it('should have the property agencyManagedAccounts (base name: "agencyManagedAccounts")', function() {
      // uncomment below and update the code to test the property agencyManagedAccounts
      //var instance = new CallFireApiDocumentation.Account();
      //expect(instance).to.be();
    });

    it('should have the property allowedToCreateCampaign (base name: "allowedToCreateCampaign")', function() {
      // uncomment below and update the code to test the property allowedToCreateCampaign
      //var instance = new CallFireApiDocumentation.Account();
      //expect(instance).to.be();
    });

    it('should have the property apiCallLimit (base name: "apiCallLimit")', function() {
      // uncomment below and update the code to test the property apiCallLimit
      //var instance = new CallFireApiDocumentation.Account();
      //expect(instance).to.be();
    });

    it('should have the property archived (base name: "archived")', function() {
      // uncomment below and update the code to test the property archived
      //var instance = new CallFireApiDocumentation.Account();
      //expect(instance).to.be();
    });

    it('should have the property autoAddDoNotContact (base name: "autoAddDoNotContact")', function() {
      // uncomment below and update the code to test the property autoAddDoNotContact
      //var instance = new CallFireApiDocumentation.Account();
      //expect(instance).to.be();
    });

    it('should have the property brand (base name: "brand")', function() {
      // uncomment below and update the code to test the property brand
      //var instance = new CallFireApiDocumentation.Account();
      //expect(instance).to.be();
    });

    it('should have the property canceled (base name: "canceled")', function() {
      // uncomment below and update the code to test the property canceled
      //var instance = new CallFireApiDocumentation.Account();
      //expect(instance).to.be();
    });

    it('should have the property canceledOrArchived (base name: "canceledOrArchived")', function() {
      // uncomment below and update the code to test the property canceledOrArchived
      //var instance = new CallFireApiDocumentation.Account();
      //expect(instance).to.be();
    });

    it('should have the property city (base name: "city")', function() {
      // uncomment below and update the code to test the property city
      //var instance = new CallFireApiDocumentation.Account();
      //expect(instance).to.be();
    });

    it('should have the property companyName (base name: "companyName")', function() {
      // uncomment below and update the code to test the property companyName
      //var instance = new CallFireApiDocumentation.Account();
      //expect(instance).to.be();
    });

    it('should have the property country (base name: "country")', function() {
      // uncomment below and update the code to test the property country
      //var instance = new CallFireApiDocumentation.Account();
      //expect(instance).to.be();
    });

    it('should have the property countryOrDefault (base name: "countryOrDefault")', function() {
      // uncomment below and update the code to test the property countryOrDefault
      //var instance = new CallFireApiDocumentation.Account();
      //expect(instance).to.be();
    });

    it('should have the property created (base name: "created")', function() {
      // uncomment below and update the code to test the property created
      //var instance = new CallFireApiDocumentation.Account();
      //expect(instance).to.be();
    });

    it('should have the property dateTimeZone (base name: "dateTimeZone")', function() {
      // uncomment below and update the code to test the property dateTimeZone
      //var instance = new CallFireApiDocumentation.Account();
      //expect(instance).to.be();
    });

    it('should have the property defaultNotificationTtlMillis (base name: "defaultNotificationTtlMillis")', function() {
      // uncomment below and update the code to test the property defaultNotificationTtlMillis
      //var instance = new CallFireApiDocumentation.Account();
      //expect(instance).to.be();
    });

    it('should have the property defaultNumberId (base name: "defaultNumberId")', function() {
      // uncomment below and update the code to test the property defaultNumberId
      //var instance = new CallFireApiDocumentation.Account();
      //expect(instance).to.be();
    });

    it('should have the property ein (base name: "ein")', function() {
      // uncomment below and update the code to test the property ein
      //var instance = new CallFireApiDocumentation.Account();
      //expect(instance).to.be();
    });

    it('should have the property entityType (base name: "entityType")', function() {
      // uncomment below and update the code to test the property entityType
      //var instance = new CallFireApiDocumentation.Account();
      //expect(instance).to.be();
    });

    it('should have the property ez (base name: "ez")', function() {
      // uncomment below and update the code to test the property ez
      //var instance = new CallFireApiDocumentation.Account();
      //expect(instance).to.be();
    });

    it('should have the property failedVerificationAttempts (base name: "failedVerificationAttempts")', function() {
      // uncomment below and update the code to test the property failedVerificationAttempts
      //var instance = new CallFireApiDocumentation.Account();
      //expect(instance).to.be();
    });

    it('should have the property fromNumberPool (base name: "fromNumberPool")', function() {
      // uncomment below and update the code to test the property fromNumberPool
      //var instance = new CallFireApiDocumentation.Account();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new CallFireApiDocumentation.Account();
      //expect(instance).to.be();
    });

    it('should have the property industry (base name: "industry")', function() {
      // uncomment below and update the code to test the property industry
      //var instance = new CallFireApiDocumentation.Account();
      //expect(instance).to.be();
    });

    it('should have the property industryName (base name: "industryName")', function() {
      // uncomment below and update the code to test the property industryName
      //var instance = new CallFireApiDocumentation.Account();
      //expect(instance).to.be();
    });

    it('should have the property key (base name: "key")', function() {
      // uncomment below and update the code to test the property key
      //var instance = new CallFireApiDocumentation.Account();
      //expect(instance).to.be();
    });

    it('should have the property localTimeZoneRestriction (base name: "localTimeZoneRestriction")', function() {
      // uncomment below and update the code to test the property localTimeZoneRestriction
      //var instance = new CallFireApiDocumentation.Account();
      //expect(instance).to.be();
    });

    it('should have the property locale (base name: "locale")', function() {
      // uncomment below and update the code to test the property locale
      //var instance = new CallFireApiDocumentation.Account();
      //expect(instance).to.be();
    });

    it('should have the property maxAgents (base name: "maxAgents")', function() {
      // uncomment below and update the code to test the property maxAgents
      //var instance = new CallFireApiDocumentation.Account();
      //expect(instance).to.be();
    });

    it('should have the property messageClass (base name: "messageClass")', function() {
      // uncomment below and update the code to test the property messageClass
      //var instance = new CallFireApiDocumentation.Account();
      //expect(instance).to.be();
    });

    it('should have the property messageFlows (base name: "messageFlows")', function() {
      // uncomment below and update the code to test the property messageFlows
      //var instance = new CallFireApiDocumentation.Account();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new CallFireApiDocumentation.Account();
      //expect(instance).to.be();
    });

    it('should have the property outboundThreshold (base name: "outboundThreshold")', function() {
      // uncomment below and update the code to test the property outboundThreshold
      //var instance = new CallFireApiDocumentation.Account();
      //expect(instance).to.be();
    });

    it('should have the property receiverPeriodCall (base name: "receiverPeriodCall")', function() {
      // uncomment below and update the code to test the property receiverPeriodCall
      //var instance = new CallFireApiDocumentation.Account();
      //expect(instance).to.be();
    });

    it('should have the property receiverPeriodEnabled (base name: "receiverPeriodEnabled")', function() {
      // uncomment below and update the code to test the property receiverPeriodEnabled
      //var instance = new CallFireApiDocumentation.Account();
      //expect(instance).to.be();
    });

    it('should have the property receiverPeriodGlobal (base name: "receiverPeriodGlobal")', function() {
      // uncomment below and update the code to test the property receiverPeriodGlobal
      //var instance = new CallFireApiDocumentation.Account();
      //expect(instance).to.be();
    });

    it('should have the property receiverPeriodText (base name: "receiverPeriodText")', function() {
      // uncomment below and update the code to test the property receiverPeriodText
      //var instance = new CallFireApiDocumentation.Account();
      //expect(instance).to.be();
    });

    it('should have the property receiverPeriodTimeUnit (base name: "receiverPeriodTimeUnit")', function() {
      // uncomment below and update the code to test the property receiverPeriodTimeUnit
      //var instance = new CallFireApiDocumentation.Account();
      //expect(instance).to.be();
    });

    it('should have the property retainOnlyMetadata (base name: "retainOnlyMetadata")', function() {
      // uncomment below and update the code to test the property retainOnlyMetadata
      //var instance = new CallFireApiDocumentation.Account();
      //expect(instance).to.be();
    });

    it('should have the property retainOnlyMetadataLastDetailRecordId (base name: "retainOnlyMetadataLastDetailRecordId")', function() {
      // uncomment below and update the code to test the property retainOnlyMetadataLastDetailRecordId
      //var instance = new CallFireApiDocumentation.Account();
      //expect(instance).to.be();
    });

    it('should have the property retainOnlyMetadataLastModified (base name: "retainOnlyMetadataLastModified")', function() {
      // uncomment below and update the code to test the property retainOnlyMetadataLastModified
      //var instance = new CallFireApiDocumentation.Account();
      //expect(instance).to.be();
    });

    it('should have the property scrub (base name: "scrub")', function() {
      // uncomment below and update the code to test the property scrub
      //var instance = new CallFireApiDocumentation.Account();
      //expect(instance).to.be();
    });

    it('should have the property sharedShortCodeAllowed (base name: "sharedShortCodeAllowed")', function() {
      // uncomment below and update the code to test the property sharedShortCodeAllowed
      //var instance = new CallFireApiDocumentation.Account();
      //expect(instance).to.be();
    });

    it('should have the property sharedShortCodeId (base name: "sharedShortCodeId")', function() {
      // uncomment below and update the code to test the property sharedShortCodeId
      //var instance = new CallFireApiDocumentation.Account();
      //expect(instance).to.be();
    });

    it('should have the property soaAccount (base name: "soaAccount")', function() {
      // uncomment below and update the code to test the property soaAccount
      //var instance = new CallFireApiDocumentation.Account();
      //expect(instance).to.be();
    });

    it('should have the property startCapable (base name: "startCapable")', function() {
      // uncomment below and update the code to test the property startCapable
      //var instance = new CallFireApiDocumentation.Account();
      //expect(instance).to.be();
    });

    it('should have the property state (base name: "state")', function() {
      // uncomment below and update the code to test the property state
      //var instance = new CallFireApiDocumentation.Account();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new CallFireApiDocumentation.Account();
      //expect(instance).to.be();
    });

    it('should have the property textOutboundThreshold (base name: "textOutboundThreshold")', function() {
      // uncomment below and update the code to test the property textOutboundThreshold
      //var instance = new CallFireApiDocumentation.Account();
      //expect(instance).to.be();
    });

    it('should have the property timeZone (base name: "timeZone")', function() {
      // uncomment below and update the code to test the property timeZone
      //var instance = new CallFireApiDocumentation.Account();
      //expect(instance).to.be();
    });

    it('should have the property timeZoneId (base name: "timeZoneId")', function() {
      // uncomment below and update the code to test the property timeZoneId
      //var instance = new CallFireApiDocumentation.Account();
      //expect(instance).to.be();
    });

    it('should have the property trustLevel (base name: "trustLevel")', function() {
      // uncomment below and update the code to test the property trustLevel
      //var instance = new CallFireApiDocumentation.Account();
      //expect(instance).to.be();
    });

    it('should have the property tsrAgreement (base name: "tsrAgreement")', function() {
      // uncomment below and update the code to test the property tsrAgreement
      //var instance = new CallFireApiDocumentation.Account();
      //expect(instance).to.be();
    });

    it('should have the property tsrInitials (base name: "tsrInitials")', function() {
      // uncomment below and update the code to test the property tsrInitials
      //var instance = new CallFireApiDocumentation.Account();
      //expect(instance).to.be();
    });

    it('should have the property uiContext (base name: "uiContext")', function() {
      // uncomment below and update the code to test the property uiContext
      //var instance = new CallFireApiDocumentation.Account();
      //expect(instance).to.be();
    });

    it('should have the property universal (base name: "universal")', function() {
      // uncomment below and update the code to test the property universal
      //var instance = new CallFireApiDocumentation.Account();
      //expect(instance).to.be();
    });

    it('should have the property website (base name: "website")', function() {
      // uncomment below and update the code to test the property website
      //var instance = new CallFireApiDocumentation.Account();
      //expect(instance).to.be();
    });

    it('should have the property zipcode (base name: "zipcode")', function() {
      // uncomment below and update the code to test the property zipcode
      //var instance = new CallFireApiDocumentation.Account();
      //expect(instance).to.be();
    });

  });

}));
