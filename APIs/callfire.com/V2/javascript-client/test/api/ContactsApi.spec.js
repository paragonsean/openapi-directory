/**
 * CallFire API Documentation
 * CallFire
 *
 * The version of the OpenAPI document: V2
 * Contact: support@callfire.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CallFireApiDocumentation);
  }
}(this, function(expect, CallFireApiDocumentation) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CallFireApiDocumentation.ContactsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ContactsApi', function() {
    describe('addContactListItems', function() {
      it('should call addContactListItems successfully', function(done) {
        //uncomment below and update the code to test addContactListItems
        //instance.addContactListItems(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('addDoNotContacts', function() {
      it('should call addDoNotContacts successfully', function(done) {
        //uncomment below and update the code to test addDoNotContacts
        //instance.addDoNotContacts(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createContactList', function() {
      it('should call createContactList successfully', function(done) {
        //uncomment below and update the code to test createContactList
        //instance.createContactList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createContactListFromFile', function() {
      it('should call createContactListFromFile successfully', function(done) {
        //uncomment below and update the code to test createContactListFromFile
        //instance.createContactListFromFile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createContacts', function() {
      it('should call createContacts successfully', function(done) {
        //uncomment below and update the code to test createContacts
        //instance.createContacts(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteContact', function() {
      it('should call deleteContact successfully', function(done) {
        //uncomment below and update the code to test deleteContact
        //instance.deleteContact(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteContactList', function() {
      it('should call deleteContactList successfully', function(done) {
        //uncomment below and update the code to test deleteContactList
        //instance.deleteContactList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteDoNotContact', function() {
      it('should call deleteDoNotContact successfully', function(done) {
        //uncomment below and update the code to test deleteDoNotContact
        //instance.deleteDoNotContact(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteDoNotContactsBySource', function() {
      it('should call deleteDoNotContactsBySource successfully', function(done) {
        //uncomment below and update the code to test deleteDoNotContactsBySource
        //instance.deleteDoNotContactsBySource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('findContactLists', function() {
      it('should call findContactLists successfully', function(done) {
        //uncomment below and update the code to test findContactLists
        //instance.findContactLists(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('findContacts', function() {
      it('should call findContacts successfully', function(done) {
        //uncomment below and update the code to test findContacts
        //instance.findContacts(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('findDoNotContacts', function() {
      it('should call findDoNotContacts successfully', function(done) {
        //uncomment below and update the code to test findDoNotContacts
        //instance.findDoNotContacts(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getContact', function() {
      it('should call getContact successfully', function(done) {
        //uncomment below and update the code to test getContact
        //instance.getContact(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getContactHistory', function() {
      it('should call getContactHistory successfully', function(done) {
        //uncomment below and update the code to test getContactHistory
        //instance.getContactHistory(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getContactList', function() {
      it('should call getContactList successfully', function(done) {
        //uncomment below and update the code to test getContactList
        //instance.getContactList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getContactListItems', function() {
      it('should call getContactListItems successfully', function(done) {
        //uncomment below and update the code to test getContactListItems
        //instance.getContactListItems(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDoNotContact', function() {
      it('should call getDoNotContact successfully', function(done) {
        //uncomment below and update the code to test getDoNotContact
        //instance.getDoNotContact(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getUniversalDoNotContacts', function() {
      it('should call getUniversalDoNotContacts successfully', function(done) {
        //uncomment below and update the code to test getUniversalDoNotContacts
        //instance.getUniversalDoNotContacts(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('removeContactListItem', function() {
      it('should call removeContactListItem successfully', function(done) {
        //uncomment below and update the code to test removeContactListItem
        //instance.removeContactListItem(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('removeContactListItems', function() {
      it('should call removeContactListItems successfully', function(done) {
        //uncomment below and update the code to test removeContactListItems
        //instance.removeContactListItems(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateContact', function() {
      it('should call updateContact successfully', function(done) {
        //uncomment below and update the code to test updateContact
        //instance.updateContact(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateContactList', function() {
      it('should call updateContactList successfully', function(done) {
        //uncomment below and update the code to test updateContactList
        //instance.updateContactList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateDoNotContact', function() {
      it('should call updateDoNotContact successfully', function(done) {
        //uncomment below and update the code to test updateDoNotContact
        //instance.updateDoNotContact(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
