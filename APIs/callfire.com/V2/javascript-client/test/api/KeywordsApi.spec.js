/**
 * CallFire API Documentation
 * CallFire
 *
 * The version of the OpenAPI document: V2
 * Contact: support@callfire.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CallFireApiDocumentation);
  }
}(this, function(expect, CallFireApiDocumentation) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CallFireApiDocumentation.KeywordsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('KeywordsApi', function() {
    describe('findKeywordLeaseConfigs', function() {
      it('should call findKeywordLeaseConfigs successfully', function(done) {
        //uncomment below and update the code to test findKeywordLeaseConfigs
        //instance.findKeywordLeaseConfigs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('findKeywordLeases', function() {
      it('should call findKeywordLeases successfully', function(done) {
        //uncomment below and update the code to test findKeywordLeases
        //instance.findKeywordLeases(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('findKeywords', function() {
      it('should call findKeywords successfully', function(done) {
        //uncomment below and update the code to test findKeywords
        //instance.findKeywords(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getKeywordLease', function() {
      it('should call getKeywordLease successfully', function(done) {
        //uncomment below and update the code to test getKeywordLease
        //instance.getKeywordLease(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getKeywordLeaseById', function() {
      it('should call getKeywordLeaseById successfully', function(done) {
        //uncomment below and update the code to test getKeywordLeaseById
        //instance.getKeywordLeaseById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getKeywordLeaseConfig', function() {
      it('should call getKeywordLeaseConfig successfully', function(done) {
        //uncomment below and update the code to test getKeywordLeaseConfig
        //instance.getKeywordLeaseConfig(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('isKeywordAvailable', function() {
      it('should call isKeywordAvailable successfully', function(done) {
        //uncomment below and update the code to test isKeywordAvailable
        //instance.isKeywordAvailable(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateKeywordLease', function() {
      it('should call updateKeywordLease successfully', function(done) {
        //uncomment below and update the code to test updateKeywordLease
        //instance.updateKeywordLease(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateKeywordLeaseConfig', function() {
      it('should call updateKeywordLeaseConfig successfully', function(done) {
        //uncomment below and update the code to test updateKeywordLeaseConfig
        //instance.updateKeywordLeaseConfig(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
