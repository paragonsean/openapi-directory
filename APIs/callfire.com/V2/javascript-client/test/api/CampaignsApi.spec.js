/**
 * CallFire API Documentation
 * CallFire
 *
 * The version of the OpenAPI document: V2
 * Contact: support@callfire.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CallFireApiDocumentation);
  }
}(this, function(expect, CallFireApiDocumentation) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CallFireApiDocumentation.CampaignsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CampaignsApi', function() {
    describe('deleteCampaignSound', function() {
      it('should call deleteCampaignSound successfully', function(done) {
        //uncomment below and update the code to test deleteCampaignSound
        //instance.deleteCampaignSound(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('findCampaignSounds', function() {
      it('should call findCampaignSounds successfully', function(done) {
        //uncomment below and update the code to test findCampaignSounds
        //instance.findCampaignSounds(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCampaignBatch', function() {
      it('should call getCampaignBatch successfully', function(done) {
        //uncomment below and update the code to test getCampaignBatch
        //instance.getCampaignBatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCampaignSound', function() {
      it('should call getCampaignSound successfully', function(done) {
        //uncomment below and update the code to test getCampaignSound
        //instance.getCampaignSound(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCampaignSoundDataMp3', function() {
      it('should call getCampaignSoundDataMp3 successfully', function(done) {
        //uncomment below and update the code to test getCampaignSoundDataMp3
        //instance.getCampaignSoundDataMp3(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCampaignSoundDataWav', function() {
      it('should call getCampaignSoundDataWav successfully', function(done) {
        //uncomment below and update the code to test getCampaignSoundDataWav
        //instance.getCampaignSoundDataWav(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postCallCampaignSound', function() {
      it('should call postCallCampaignSound successfully', function(done) {
        //uncomment below and update the code to test postCallCampaignSound
        //instance.postCallCampaignSound(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postFileCampaignSound', function() {
      it('should call postFileCampaignSound successfully', function(done) {
        //uncomment below and update the code to test postFileCampaignSound
        //instance.postFileCampaignSound(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postTTSCampaignSound', function() {
      it('should call postTTSCampaignSound successfully', function(done) {
        //uncomment below and update the code to test postTTSCampaignSound
        //instance.postTTSCampaignSound(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateCampaignBatch', function() {
      it('should call updateCampaignBatch successfully', function(done) {
        //uncomment below and update the code to test updateCampaignBatch
        //instance.updateCampaignBatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
