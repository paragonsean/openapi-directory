/**
 * CallFire API Documentation
 * CallFire
 *
 * The version of the OpenAPI document: V2
 * Contact: support@callfire.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CallFireApiDocumentation);
  }
}(this, function(expect, CallFireApiDocumentation) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CallFireApiDocumentation.MeApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('MeApi', function() {
    describe('createApiCredential', function() {
      it('should call createApiCredential successfully', function(done) {
        //uncomment below and update the code to test createApiCredential
        //instance.createApiCredential(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteApiCredential', function() {
      it('should call deleteApiCredential successfully', function(done) {
        //uncomment below and update the code to test deleteApiCredential
        //instance.deleteApiCredential(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('disableApiCredentials', function() {
      it('should call disableApiCredentials successfully', function(done) {
        //uncomment below and update the code to test disableApiCredentials
        //instance.disableApiCredentials(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('enableApiCredentials', function() {
      it('should call enableApiCredentials successfully', function(done) {
        //uncomment below and update the code to test enableApiCredentials
        //instance.enableApiCredentials(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('findApiCredentials', function() {
      it('should call findApiCredentials successfully', function(done) {
        //uncomment below and update the code to test findApiCredentials
        //instance.findApiCredentials(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAccount', function() {
      it('should call getAccount successfully', function(done) {
        //uncomment below and update the code to test getAccount
        //instance.getAccount(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getApiCredential', function() {
      it('should call getApiCredential successfully', function(done) {
        //uncomment below and update the code to test getApiCredential
        //instance.getApiCredential(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getBillingPlanUsage', function() {
      it('should call getBillingPlanUsage successfully', function(done) {
        //uncomment below and update the code to test getBillingPlanUsage
        //instance.getBillingPlanUsage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCallerIds', function() {
      it('should call getCallerIds successfully', function(done) {
        //uncomment below and update the code to test getCallerIds
        //instance.getCallerIds(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCreditUsage', function() {
      it('should call getCreditUsage successfully', function(done) {
        //uncomment below and update the code to test getCreditUsage
        //instance.getCreditUsage(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sendVerificationCodeToCallerId', function() {
      it('should call sendVerificationCodeToCallerId successfully', function(done) {
        //uncomment below and update the code to test sendVerificationCodeToCallerId
        //instance.sendVerificationCodeToCallerId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('verifyCallerId', function() {
      it('should call verifyCallerId successfully', function(done) {
        //uncomment below and update the code to test verifyCallerId
        //instance.verifyCallerId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
