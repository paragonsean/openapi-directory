/**
 * CallFire API Documentation
 * CallFire
 *
 * The version of the OpenAPI document: V2
 * Contact: support@callfire.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ErrorResponse from '../model/ErrorResponse';
import NumberConfig from '../model/NumberConfig';
import NumberConfigPage from '../model/NumberConfigPage';
import NumberLease from '../model/NumberLease';
import NumberLeasePage from '../model/NumberLeasePage';
import NumberList from '../model/NumberList';
import RegionPage from '../model/RegionPage';

/**
* Numbers service.
* @module api/NumbersApi
* @version V2
*/
export default class NumbersApi {

    /**
    * Constructs a new NumbersApi. 
    * @alias module:api/NumbersApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the findNumberLeaseConfigs operation.
     * @callback module:api/NumbersApi~findNumberLeaseConfigsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/NumberConfigPage} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Find lease configs
     * Searches for all number lease configs for the user. Returns a paged list of NumberConfig
     * @param {Object} opts Optional parameters
     * @param {Number} [limit = 100)] To set the maximum number of records to return in a paged list response. The default is 100
     * @param {Number} [offset = 0)] Offset to the start of a given page. The default is 0. Check [pagination](https://developers.callfire.com/docs.html#pagination) page for more information about pagination in CallFire API.
     * @param {String} [prefix] A 4-7 digit prefix
     * @param {String} [city] A city name
     * @param {String} [state] A two-letter state code. Example: CA, IL, etc.
     * @param {String} [zipcode] A five-digit Zipcode
     * @param {String} [labelName] A label name
     * @param {String} [fields] Limit fields received in response. E.g. fields: id, name or fields items (id, name), see more at [partial response](https://developers.callfire.com/docs.html#partial-response) page.
     * @param {module:api/NumbersApi~findNumberLeaseConfigsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/NumberConfigPage}
     */
    findNumberLeaseConfigs(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'limit': opts['limit'],
        'offset': opts['offset'],
        'prefix': opts['prefix'],
        'city': opts['city'],
        'state': opts['state'],
        'zipcode': opts['zipcode'],
        'labelName': opts['labelName'],
        'fields': opts['fields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = NumberConfigPage;
      return this.apiClient.callApi(
        '/numbers/leases/configs', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the findNumberLeases operation.
     * @callback module:api/NumbersApi~findNumberLeasesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/NumberLeasePage} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Find leases
     * Searches for all numbers leased by account user. This API is useful for finding all numbers currently owned by the user. Returns a paged list of number leases.
     * @param {Object} opts Optional parameters
     * @param {Number} [limit = 100)] To set the maximum number of records to return in a paged list response. The default is 100
     * @param {Number} [offset = 0)] Offset to the start of a given page. The default is 0. Check [pagination](https://developers.callfire.com/docs.html#pagination) page for more information about pagination in CallFire API.
     * @param {String} [prefix] A 4-7 digit prefix
     * @param {String} [city] A city name
     * @param {String} [state] A two-letter state code. Example: CA, IL, etc.
     * @param {String} [zipcode] A five-digit Zipcode
     * @param {String} [labelName] A label name
     * @param {Boolean} [tollFree] ~
     * @param {String} [fields] Limit fields received in response. E.g. fields: id, name or fields items (id, name), see more at [partial response](https://developers.callfire.com/docs.html#partial-response) page.
     * @param {module:api/NumbersApi~findNumberLeasesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/NumberLeasePage}
     */
    findNumberLeases(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'limit': opts['limit'],
        'offset': opts['offset'],
        'prefix': opts['prefix'],
        'city': opts['city'],
        'state': opts['state'],
        'zipcode': opts['zipcode'],
        'labelName': opts['labelName'],
        'tollFree': opts['tollFree'],
        'fields': opts['fields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = NumberLeasePage;
      return this.apiClient.callApi(
        '/numbers/leases', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the findNumberRegions operation.
     * @callback module:api/NumbersApi~findNumberRegionsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RegionPage} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Find number regions
     * Searches for region information. Use this API to obtain detailed region information that can be used to query for more specific phone numbers than a general query.
     * @param {Object} opts Optional parameters
     * @param {Number} [limit = 100)] To set the maximum number of records to return in a paged list response. The default is 100
     * @param {Number} [offset = 0)] Offset to the start of a given page. The default is 0. Check [pagination](https://developers.callfire.com/docs.html#pagination) page for more information about pagination in CallFire API.
     * @param {String} [prefix] A 4-7 digit prefix
     * @param {String} [city] A city name
     * @param {String} [cityPrefix] ~
     * @param {String} [state] A two-letter state code. Example: CA, IL, etc.
     * @param {String} [zipcode] A five-digit Zipcode
     * @param {String} [country] ~
     * @param {String} [fields] Limit fields received in response. E.g. fields: id, name or fields items (id, name), see more at [partial response](https://developers.callfire.com/docs.html#partial-response) page.
     * @param {module:api/NumbersApi~findNumberRegionsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RegionPage}
     */
    findNumberRegions(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'limit': opts['limit'],
        'offset': opts['offset'],
        'prefix': opts['prefix'],
        'city': opts['city'],
        'cityPrefix': opts['cityPrefix'],
        'state': opts['state'],
        'zipcode': opts['zipcode'],
        'country': opts['country'],
        'fields': opts['fields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = RegionPage;
      return this.apiClient.callApi(
        '/numbers/regions', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the findNumbersLocal operation.
     * @callback module:api/NumbersApi~findNumbersLocalCallback
     * @param {String} error Error message, if any.
     * @param {module:model/NumberList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Find local numbers
     * Searches for numbers available for purchase in CallFire local numbers catalog . At least one additional parameter is required. User may filter local numbers by their region information. If all numbers with desirable zip code is already busy search will return available numbers with nearest zip code.
     * @param {Object} opts Optional parameters
     * @param {Number} [limit = 100)] To set the maximum number of records to return in a paged list response. The default is 100
     * @param {String} [prefix] A 4-7 digit prefix
     * @param {String} [city] A city name
     * @param {String} [state] A two-letter state code. Example: CA, IL, etc.
     * @param {String} [zipcode] A five-digit Zipcode
     * @param {String} [fields] Limit fields received in response. E.g. fields: id, name or fields items (id, name), see more at [partial response](https://developers.callfire.com/docs.html#partial-response) page.
     * @param {module:api/NumbersApi~findNumbersLocalCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/NumberList}
     */
    findNumbersLocal(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'limit': opts['limit'],
        'prefix': opts['prefix'],
        'city': opts['city'],
        'state': opts['state'],
        'zipcode': opts['zipcode'],
        'fields': opts['fields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = NumberList;
      return this.apiClient.callApi(
        '/numbers/local', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the findNumbersTollfree operation.
     * @callback module:api/NumbersApi~findNumbersTollfreeCallback
     * @param {String} error Error message, if any.
     * @param {module:model/NumberList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Find tollfree numbers
     * Searches for the toll free numbers which are available for purchase in the CallFire catalog
     * @param {Object} opts Optional parameters
     * @param {String} [pattern] Filter toll free numbers by prefix, pattern must be 3 char long and should end with '*'. Examples: 8**, 85*, 87* (but 855 will fail because pattern must end with '*').
     * @param {Number} [limit = 100)] To set the maximum number of records to return in a paged list response. The default is 100
     * @param {String} [fields] Limit fields received in response. E.g. fields: id, name or fields items (id, name), see more at [partial response](https://developers.callfire.com/docs.html#partial-response) page.
     * @param {module:api/NumbersApi~findNumbersTollfreeCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/NumberList}
     */
    findNumbersTollfree(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'pattern': opts['pattern'],
        'limit': opts['limit'],
        'fields': opts['fields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = NumberList;
      return this.apiClient.callApi(
        '/numbers/tollfree', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getNumberLease operation.
     * @callback module:api/NumbersApi~getNumberLeaseCallback
     * @param {String} error Error message, if any.
     * @param {module:model/NumberLease} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Find a specific lease
     * Returns a single NumberLease instance for a given number
     * @param {String} number A phone number in E.164 format (11-digit). Example: 12132000384
     * @param {Object} opts Optional parameters
     * @param {String} [fields] Limit fields received in response. E.g. fields: id, name or fields items (id, name), see more at [partial response](https://developers.callfire.com/docs.html#partial-response) page.
     * @param {module:api/NumbersApi~getNumberLeaseCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/NumberLease}
     */
    getNumberLease(number, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'number' is set
      if (number === undefined || number === null) {
        throw new Error("Missing the required parameter 'number' when calling getNumberLease");
      }

      let pathParams = {
        'number': number
      };
      let queryParams = {
        'fields': opts['fields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = NumberLease;
      return this.apiClient.callApi(
        '/numbers/leases/{number}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getNumberLeaseConfig operation.
     * @callback module:api/NumbersApi~getNumberLeaseConfigCallback
     * @param {String} error Error message, if any.
     * @param {module:model/NumberConfig} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Find a specific lease config
     * Returns a single NumberConfig instance for a given number lease
     * @param {String} number A phone number in E.164 format (11-digit). Example: 12132000384
     * @param {Object} opts Optional parameters
     * @param {String} [fields] Limit fields received in response. E.g. fields: id, name or fields items (id, name), see more at [partial response](https://developers.callfire.com/docs.html#partial-response) page.
     * @param {module:api/NumbersApi~getNumberLeaseConfigCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/NumberConfig}
     */
    getNumberLeaseConfig(number, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'number' is set
      if (number === undefined || number === null) {
        throw new Error("Missing the required parameter 'number' when calling getNumberLeaseConfig");
      }

      let pathParams = {
        'number': number
      };
      let queryParams = {
        'fields': opts['fields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = NumberConfig;
      return this.apiClient.callApi(
        '/numbers/leases/configs/{number}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateNumberLease operation.
     * @callback module:api/NumbersApi~updateNumberLeaseCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update a lease
     * Updates a number lease instance. Ability to turn on/off autoRenew and toggle call/text features for a particular number
     * @param {String} number A phone number in E.164 format (11-digit). Example: 12132000384
     * @param {Object} opts Optional parameters
     * @param {module:model/NumberLease} [numberLease] A NumberLease object to update
     * @param {module:api/NumbersApi~updateNumberLeaseCallback} callback The callback function, accepting three arguments: error, data, response
     */
    updateNumberLease(number, opts, callback) {
      opts = opts || {};
      let postBody = opts['numberLease'];
      // verify the required parameter 'number' is set
      if (number === undefined || number === null) {
        throw new Error("Missing the required parameter 'number' when calling updateNumberLease");
      }

      let pathParams = {
        'number': number
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/numbers/leases/{number}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateNumberLeaseConfig operation.
     * @callback module:api/NumbersApi~updateNumberLeaseConfigCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update a lease config
     * Updates a phone number lease configuration. Use this API endpoint to add an Inbound IVR or Call Tracking feature to a CallFire phone number. Call tracking configuration allows you to track the incoming calls, to analyze and to respond customers using sms or voice replies. For more information see [call tracking page](https://www.callfire.com/products/call-tracking)
     * @param {String} number A phone number in E.164 format (11-digit) which needs to be verified. Example: 12132000384
     * @param {Object} opts Optional parameters
     * @param {module:model/NumberConfig} [numberConfig] The configuration of a number lease object. There are two available types of configuration: IVR, TRACKING 
     * @param {module:api/NumbersApi~updateNumberLeaseConfigCallback} callback The callback function, accepting three arguments: error, data, response
     */
    updateNumberLeaseConfig(number, opts, callback) {
      opts = opts || {};
      let postBody = opts['numberConfig'];
      // verify the required parameter 'number' is set
      if (number === undefined || number === null) {
        throw new Error("Missing the required parameter 'number' when calling updateNumberLeaseConfig");
      }

      let pathParams = {
        'number': number
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/numbers/leases/configs/{number}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
