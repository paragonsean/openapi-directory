/**
 * CallFire API Documentation
 * CallFire
 *
 * The version of the OpenAPI document: V2
 * Contact: support@callfire.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ErrorResponse from '../model/ErrorResponse';
import KeywordPurchaseRequest from '../model/KeywordPurchaseRequest';
import NumberOrder from '../model/NumberOrder';
import NumberPurchaseRequest from '../model/NumberPurchaseRequest';
import PageNumberOrder from '../model/PageNumberOrder';
import ResourceId from '../model/ResourceId';

/**
* Orders service.
* @module api/OrdersApi
* @version V2
*/
export default class OrdersApi {

    /**
    * Constructs a new OrdersApi. 
    * @alias module:api/OrdersApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the findOrders operation.
     * @callback module:api/OrdersApi~findOrdersCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PageNumberOrder} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Find orders
     * Searches for account orders
     * @param {Object} opts Optional parameters
     * @param {Number} [limit = 20)] To set the maximum number of records to return in a paged list response. The default is 100
     * @param {Number} [offset = 0)] Offset to the start of a given page. The default is 0. Check [pagination](https://developers.callfire.com/docs.html#pagination) page for more information about pagination in CallFire API.
     * @param {String} [fields] Limit fields received in response. E.g. fields: id, name or fields items (id, name), see more at [partial response](https://developers.callfire.com/docs.html#partial-response) page.
     * @param {Array.<String>} [status] Filter by order status, accepts multiple values in comma separated string, available values: [PROCESSING, FINISHED, PAYMENT_ERROR, VOID, WAIT_FOR_PAYMENT, PARTIALLY_ADJUSTED, ADJUSTED]
     * @param {Number} [intervalBegin] Start of the find time interval, formatted in unix time milliseconds. Example: 1473781817000
     * @param {Number} [intervalEnd] End of the find time interval, formatted in unix time milliseconds. Example: 1473781817000
     * @param {module:api/OrdersApi~findOrdersCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PageNumberOrder}
     */
    findOrders(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'limit': opts['limit'],
        'offset': opts['offset'],
        'fields': opts['fields'],
        'status': this.apiClient.buildCollectionParam(opts['status'], 'multi'),
        'intervalBegin': opts['intervalBegin'],
        'intervalEnd': opts['intervalEnd']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PageNumberOrder;
      return this.apiClient.callApi(
        '/orders', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getOrder operation.
     * @callback module:api/OrdersApi~getOrderCallback
     * @param {String} error Error message, if any.
     * @param {module:model/NumberOrder} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Find a specific order
     * Returns a single NumberOrder instance for a given order id. Order contains information about purchased keywords, local, toll-free numbers
     * @param {Number} id An id of an order
     * @param {Object} opts Optional parameters
     * @param {String} [fields] Limit fields received in response. E.g. fields: id, name or fields items (id, name), see more at [partial response](https://developers.callfire.com/docs.html#partial-response) page.
     * @param {module:api/OrdersApi~getOrderCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/NumberOrder}
     */
    getOrder(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling getOrder");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'fields': opts['fields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = NumberOrder;
      return this.apiClient.callApi(
        '/orders/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the orderKeywords operation.
     * @callback module:api/OrdersApi~orderKeywordsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ResourceId} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Purchase keywords
     * Purchase keywords. Send a list of available keywords into this API to purchase them using CallFire credits. Make sure the account has enough credits before trying to purchase the keywords. Keyword should only consist of uppercase and lowercase letters and numbers. Number of characters must be greater than 2, but less than 65.
     * @param {Object} opts Optional parameters
     * @param {String} [fields] Limit fields received in response. E.g. fields: id, name or fields items (id, name), see more at [partial response](https://developers.callfire.com/docs.html#partial-response) page.
     * @param {module:model/KeywordPurchaseRequest} [keywordPurchaseRequest] Request object which contains a list of keywords to buy
     * @param {module:api/OrdersApi~orderKeywordsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ResourceId}
     */
    orderKeywords(opts, callback) {
      opts = opts || {};
      let postBody = opts['keywordPurchaseRequest'];

      let pathParams = {
      };
      let queryParams = {
        'fields': opts['fields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ResourceId;
      return this.apiClient.callApi(
        '/orders/keywords', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the orderNumbers operation.
     * @callback module:api/OrdersApi~orderNumbersCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ResourceId} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Purchase numbers
     * Purchase numbers. There are many ways to purchase a number. Set either 'tollFreeCount' or 'localCount' along with some querying fields to purchase numbers by bulk query. Set the list of numbers to purchase by list. Available numbers will be purchased using CallFire credits owned by the user. Make sure the account has enough credits before trying to purchase
     * @param {Object} opts Optional parameters
     * @param {String} [fields] Limit fields received in response. E.g. fields: id, name or fields items (id, name), see more at [partial response](https://developers.callfire.com/docs.html#partial-response) page.
     * @param {module:model/NumberPurchaseRequest} [numberPurchaseRequest] Request object contains a list of numbers to buy, you can filter the numbers by their region information: city, state, zipcode, etc
     * @param {module:api/OrdersApi~orderNumbersCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ResourceId}
     */
    orderNumbers(opts, callback) {
      opts = opts || {};
      let postBody = opts['numberPurchaseRequest'];

      let pathParams = {
      };
      let queryParams = {
        'fields': opts['fields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['basicAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ResourceId;
      return this.apiClient.callApi(
        '/orders/numbers', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
