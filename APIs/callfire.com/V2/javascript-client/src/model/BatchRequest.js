/**
 * CallFire API Documentation
 * CallFire
 *
 * The version of the OpenAPI document: V2
 * Contact: support@callfire.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Recipient from './Recipient';

/**
 * The BatchRequest model module.
 * @module model/BatchRequest
 * @version V2
 */
class BatchRequest {
    /**
     * Constructs a new <code>BatchRequest</code>.
     * Request object is used for adding new batch to an existing broadcast
     * @alias module:model/BatchRequest
     */
    constructor() { 
        
        BatchRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BatchRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BatchRequest} obj Optional instance to populate.
     * @return {module:model/BatchRequest} The populated <code>BatchRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BatchRequest();

            if (data.hasOwnProperty('contactListId')) {
                obj['contactListId'] = ApiClient.convertToType(data['contactListId'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('recipients')) {
                obj['recipients'] = ApiClient.convertToType(data['recipients'], [Recipient]);
            }
            if (data.hasOwnProperty('scrubDuplicates')) {
                obj['scrubDuplicates'] = ApiClient.convertToType(data['scrubDuplicates'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BatchRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BatchRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        if (data['recipients']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['recipients'])) {
                throw new Error("Expected the field `recipients` to be an array in the JSON data but got " + data['recipients']);
            }
            // validate the optional field `recipients` (array)
            for (const item of data['recipients']) {
                Recipient.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * An id of existing contact list
 * @member {Number} contactListId
 */
BatchRequest.prototype['contactListId'] = undefined;

/**
 * A name of batch
 * @member {String} name
 */
BatchRequest.prototype['name'] = undefined;

/**
 * A list of Recipient objects. For each recipient you can set its phone number or existing contact id to use contact which already exists in account
 * @member {Array.<module:model/Recipient>} recipients
 */
BatchRequest.prototype['recipients'] = undefined;

/**
 * Removes duplicate recipients from batch if true
 * @member {Boolean} scrubDuplicates
 */
BatchRequest.prototype['scrubDuplicates'] = undefined;






export default BatchRequest;

