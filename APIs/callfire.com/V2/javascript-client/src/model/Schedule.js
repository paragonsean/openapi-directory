/**
 * CallFire API Documentation
 * CallFire
 *
 * The version of the OpenAPI document: V2
 * Contact: support@callfire.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import LocalDate from './LocalDate';
import LocalTime from './LocalTime';

/**
 * The Schedule model module.
 * @module model/Schedule
 * @version V2
 */
class Schedule {
    /**
     * Constructs a new <code>Schedule</code>.
     * A campaign schedule
     * @alias module:model/Schedule
     */
    constructor() { 
        
        Schedule.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Schedule</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Schedule} obj Optional instance to populate.
     * @return {module:model/Schedule} The populated <code>Schedule</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Schedule();

            if (data.hasOwnProperty('campaignId')) {
                obj['campaignId'] = ApiClient.convertToType(data['campaignId'], 'Number');
            }
            if (data.hasOwnProperty('daysOfWeek')) {
                obj['daysOfWeek'] = ApiClient.convertToType(data['daysOfWeek'], ['String']);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('startDate')) {
                obj['startDate'] = LocalDate.constructFromObject(data['startDate']);
            }
            if (data.hasOwnProperty('startTimeOfDay')) {
                obj['startTimeOfDay'] = LocalTime.constructFromObject(data['startTimeOfDay']);
            }
            if (data.hasOwnProperty('stopDate')) {
                obj['stopDate'] = LocalDate.constructFromObject(data['stopDate']);
            }
            if (data.hasOwnProperty('stopTimeOfDay')) {
                obj['stopTimeOfDay'] = LocalTime.constructFromObject(data['stopTimeOfDay']);
            }
            if (data.hasOwnProperty('timeZone')) {
                obj['timeZone'] = ApiClient.convertToType(data['timeZone'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Schedule</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Schedule</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['daysOfWeek'])) {
            throw new Error("Expected the field `daysOfWeek` to be an array in the JSON data but got " + data['daysOfWeek']);
        }
        // validate the optional field `startDate`
        if (data['startDate']) { // data not null
          LocalDate.validateJSON(data['startDate']);
        }
        // validate the optional field `startTimeOfDay`
        if (data['startTimeOfDay']) { // data not null
          LocalTime.validateJSON(data['startTimeOfDay']);
        }
        // validate the optional field `stopDate`
        if (data['stopDate']) { // data not null
          LocalDate.validateJSON(data['stopDate']);
        }
        // validate the optional field `stopTimeOfDay`
        if (data['stopTimeOfDay']) { // data not null
          LocalTime.validateJSON(data['stopTimeOfDay']);
        }
        // ensure the json data is a string
        if (data['timeZone'] && !(typeof data['timeZone'] === 'string' || data['timeZone'] instanceof String)) {
            throw new Error("Expected the field `timeZone` to be a primitive type in the JSON string but got " + data['timeZone']);
        }

        return true;
    }


}



/**
 * ~
 * @member {Number} campaignId
 */
Schedule.prototype['campaignId'] = undefined;

/**
 * ~
 * @member {Array.<String>} daysOfWeek
 */
Schedule.prototype['daysOfWeek'] = undefined;

/**
 * ~
 * @member {Number} id
 */
Schedule.prototype['id'] = undefined;

/**
 * @member {module:model/LocalDate} startDate
 */
Schedule.prototype['startDate'] = undefined;

/**
 * @member {module:model/LocalTime} startTimeOfDay
 */
Schedule.prototype['startTimeOfDay'] = undefined;

/**
 * @member {module:model/LocalDate} stopDate
 */
Schedule.prototype['stopDate'] = undefined;

/**
 * @member {module:model/LocalTime} stopTimeOfDay
 */
Schedule.prototype['stopTimeOfDay'] = undefined;

/**
 * ~
 * @member {String} timeZone
 */
Schedule.prototype['timeZone'] = undefined;






export default Schedule;

