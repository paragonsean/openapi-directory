/**
 * CallFire API Documentation
 * CallFire
 *
 * The version of the OpenAPI document: V2
 * Contact: support@callfire.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GoogleAnalytics from './GoogleAnalytics';
import WeeklySchedule from './WeeklySchedule';

/**
 * The CallTrackingConfig model module.
 * @module model/CallTrackingConfig
 * @version V2
 */
class CallTrackingConfig {
    /**
     * Constructs a new <code>CallTrackingConfig</code>.
     * Call tracking configuration allows you track incoming calls, analyze, respond to customers using sms or voice replies. For more information see [call tracking page](https://www.callfire.com/products/call-tracking)
     * @alias module:model/CallTrackingConfig
     */
    constructor() { 
        
        CallTrackingConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CallTrackingConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CallTrackingConfig} obj Optional instance to populate.
     * @return {module:model/CallTrackingConfig} The populated <code>CallTrackingConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CallTrackingConfig();

            if (data.hasOwnProperty('failedTransferSoundId')) {
                obj['failedTransferSoundId'] = ApiClient.convertToType(data['failedTransferSoundId'], 'Number');
            }
            if (data.hasOwnProperty('googleAnalytics')) {
                obj['googleAnalytics'] = GoogleAnalytics.constructFromObject(data['googleAnalytics']);
            }
            if (data.hasOwnProperty('introSoundId')) {
                obj['introSoundId'] = ApiClient.convertToType(data['introSoundId'], 'Number');
            }
            if (data.hasOwnProperty('recorded')) {
                obj['recorded'] = ApiClient.convertToType(data['recorded'], 'Boolean');
            }
            if (data.hasOwnProperty('screen')) {
                obj['screen'] = ApiClient.convertToType(data['screen'], 'Boolean');
            }
            if (data.hasOwnProperty('transferNumbers')) {
                obj['transferNumbers'] = ApiClient.convertToType(data['transferNumbers'], ['String']);
            }
            if (data.hasOwnProperty('voicemail')) {
                obj['voicemail'] = ApiClient.convertToType(data['voicemail'], 'Boolean');
            }
            if (data.hasOwnProperty('voicemailSoundId')) {
                obj['voicemailSoundId'] = ApiClient.convertToType(data['voicemailSoundId'], 'Number');
            }
            if (data.hasOwnProperty('weeklySchedule')) {
                obj['weeklySchedule'] = WeeklySchedule.constructFromObject(data['weeklySchedule']);
            }
            if (data.hasOwnProperty('whisperSoundId')) {
                obj['whisperSoundId'] = ApiClient.convertToType(data['whisperSoundId'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CallTrackingConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CallTrackingConfig</code>.
     */
    static validateJSON(data) {
        // validate the optional field `googleAnalytics`
        if (data['googleAnalytics']) { // data not null
          GoogleAnalytics.validateJSON(data['googleAnalytics']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['transferNumbers'])) {
            throw new Error("Expected the field `transferNumbers` to be an array in the JSON data but got " + data['transferNumbers']);
        }
        // validate the optional field `weeklySchedule`
        if (data['weeklySchedule']) { // data not null
          WeeklySchedule.validateJSON(data['weeklySchedule']);
        }

        return true;
    }


}



/**
 * An id of sound file, played if caller can not be connected to transfer number for any reason
 * @member {Number} failedTransferSoundId
 */
CallTrackingConfig.prototype['failedTransferSoundId'] = undefined;

/**
 * @member {module:model/GoogleAnalytics} googleAnalytics
 */
CallTrackingConfig.prototype['googleAnalytics'] = undefined;

/**
 * An id of sound file, played if call is answered
 * @member {Number} introSoundId
 */
CallTrackingConfig.prototype['introSoundId'] = undefined;

/**
 * Records all inbound calls
 * @member {Boolean} recorded
 */
CallTrackingConfig.prototype['recorded'] = undefined;

/**
 * Screens the incoming calls
 * @member {Boolean} screen
 */
CallTrackingConfig.prototype['screen'] = undefined;

/**
 * List of phone numbers in E.164 format (11-digit) are used for transfer. Example: 12132000384
 * @member {Array.<String>} transferNumbers
 */
CallTrackingConfig.prototype['transferNumbers'] = undefined;

/**
 * Enables voicemail if call is not transferred
 * @member {Boolean} voicemail
 */
CallTrackingConfig.prototype['voicemail'] = undefined;

/**
 * An id of sound file, played if voicemail is enabled and a call isn't transferred
 * @member {Number} voicemailSoundId
 */
CallTrackingConfig.prototype['voicemailSoundId'] = undefined;

/**
 * @member {module:model/WeeklySchedule} weeklySchedule
 */
CallTrackingConfig.prototype['weeklySchedule'] = undefined;

/**
 * An id of sound file, played if call is screened
 * @member {Number} whisperSoundId
 */
CallTrackingConfig.prototype['whisperSoundId'] = undefined;






export default CallTrackingConfig;

