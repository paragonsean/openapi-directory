/**
 * CallFire API Documentation
 * CallFire
 *
 * The version of the OpenAPI document: V2
 * Contact: support@callfire.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The TextAutoReply model module.
 * @module model/TextAutoReply
 * @version V2
 */
class TextAutoReply {
    /**
     * Constructs a new <code>TextAutoReply</code>.
     * CallFire allows you to set up auto reply messages for your numbers CallFire allows you to set up auto reply messages for your numbers and keywords. You can set a general auto reply for anyone who texts your number (keyword). Also you can include a text to match, so that the auto reply would be sent only to those recipients whose texts the matched text
     * @alias module:model/TextAutoReply
     */
    constructor() { 
        
        TextAutoReply.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TextAutoReply</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TextAutoReply} obj Optional instance to populate.
     * @return {module:model/TextAutoReply} The populated <code>TextAutoReply</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TextAutoReply();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('keyword')) {
                obj['keyword'] = ApiClient.convertToType(data['keyword'], 'String');
            }
            if (data.hasOwnProperty('match')) {
                obj['match'] = ApiClient.convertToType(data['match'], 'String');
            }
            if (data.hasOwnProperty('message')) {
                obj['message'] = ApiClient.convertToType(data['message'], 'String');
            }
            if (data.hasOwnProperty('number')) {
                obj['number'] = ApiClient.convertToType(data['number'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TextAutoReply</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TextAutoReply</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['keyword'] && !(typeof data['keyword'] === 'string' || data['keyword'] instanceof String)) {
            throw new Error("Expected the field `keyword` to be a primitive type in the JSON string but got " + data['keyword']);
        }
        // ensure the json data is a string
        if (data['match'] && !(typeof data['match'] === 'string' || data['match'] instanceof String)) {
            throw new Error("Expected the field `match` to be a primitive type in the JSON string but got " + data['match']);
        }
        // ensure the json data is a string
        if (data['message'] && !(typeof data['message'] === 'string' || data['message'] instanceof String)) {
            throw new Error("Expected the field `message` to be a primitive type in the JSON string but got " + data['message']);
        }
        // ensure the json data is a string
        if (data['number'] && !(typeof data['number'] === 'string' || data['number'] instanceof String)) {
            throw new Error("Expected the field `number` to be a primitive type in the JSON string but got " + data['number']);
        }

        return true;
    }


}



/**
 * An id of a text auto reply
 * @member {Number} id
 */
TextAutoReply.prototype['id'] = undefined;

/**
 * Setup autoreply for a given keyword
 * @member {String} keyword
 */
TextAutoReply.prototype['keyword'] = undefined;

/**
 * Text to match. If it is set then autoreply will be sent to a person who texted message with matched text. Case insensitive, if parameter is not specified then all texts will be matched
 * @member {String} match
 */
TextAutoReply.prototype['match'] = undefined;

/**
 * A text message to return as an auto reply
 * @member {String} message
 */
TextAutoReply.prototype['message'] = undefined;

/**
 * Setup autoreply for a given phone number, E.164 format (11-digit). Example: 12132000384
 * @member {String} number
 */
TextAutoReply.prototype['number'] = undefined;






export default TextAutoReply;

