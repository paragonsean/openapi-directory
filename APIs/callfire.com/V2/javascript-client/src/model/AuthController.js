/**
 * CallFire API Documentation
 * CallFire
 *
 * The version of the OpenAPI document: V2
 * Contact: support@callfire.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AuthToken from './AuthToken';

/**
 * The AuthController model module.
 * @module model/AuthController
 * @version V2
 */
class AuthController {
    /**
     * Constructs a new <code>AuthController</code>.
     * ~
     * @alias module:model/AuthController
     */
    constructor() { 
        
        AuthController.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AuthController</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AuthController} obj Optional instance to populate.
     * @return {module:model/AuthController} The populated <code>AuthController</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AuthController();

            if (data.hasOwnProperty('admin')) {
                obj['admin'] = ApiClient.convertToType(data['admin'], 'Boolean');
            }
            if (data.hasOwnProperty('authBrand')) {
                obj['authBrand'] = ApiClient.convertToType(data['authBrand'], 'String');
            }
            if (data.hasOwnProperty('authToken')) {
                obj['authToken'] = AuthToken.constructFromObject(data['authToken']);
            }
            if (data.hasOwnProperty('migration')) {
                obj['migration'] = ApiClient.convertToType(data['migration'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AuthController</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AuthController</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['authBrand'] && !(typeof data['authBrand'] === 'string' || data['authBrand'] instanceof String)) {
            throw new Error("Expected the field `authBrand` to be a primitive type in the JSON string but got " + data['authBrand']);
        }
        // validate the optional field `authToken`
        if (data['authToken']) { // data not null
          AuthToken.validateJSON(data['authToken']);
        }

        return true;
    }


}



/**
 * ~
 * @member {Boolean} admin
 */
AuthController.prototype['admin'] = undefined;

/**
 * ~
 * @member {module:model/AuthController.AuthBrandEnum} authBrand
 */
AuthController.prototype['authBrand'] = undefined;

/**
 * @member {module:model/AuthToken} authToken
 */
AuthController.prototype['authToken'] = undefined;

/**
 * ~
 * @member {Boolean} migration
 */
AuthController.prototype['migration'] = undefined;





/**
 * Allowed values for the <code>authBrand</code> property.
 * @enum {String}
 * @readonly
 */
AuthController['AuthBrandEnum'] = {

    /**
     * value: "EZTEXTING"
     * @const
     */
    "EZTEXTING": "EZTEXTING",

    /**
     * value: "CLUBTEXTING"
     * @const
     */
    "CLUBTEXTING": "CLUBTEXTING",

    /**
     * value: "GROUPTEXTING"
     * @const
     */
    "GROUPTEXTING": "GROUPTEXTING",

    /**
     * value: "TELLMYCELL"
     * @const
     */
    "TELLMYCELL": "TELLMYCELL",

    /**
     * value: "EZ"
     * @const
     */
    "EZ": "EZ",

    /**
     * value: "CALLFIRE"
     * @const
     */
    "CALLFIRE": "CALLFIRE",

    /**
     * value: "TESLA"
     * @const
     */
    "TESLA": "TESLA"
};



export default AuthController;

