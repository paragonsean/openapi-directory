/**
 * CallFire API Documentation
 * CallFire
 *
 * The version of the OpenAPI document: V2
 * Contact: support@callfire.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The A2pUpgradeLeaseDto model module.
 * @module model/A2pUpgradeLeaseDto
 * @version V2
 */
class A2pUpgradeLeaseDto {
    /**
     * Constructs a new <code>A2pUpgradeLeaseDto</code>.
     * ~
     * @alias module:model/A2pUpgradeLeaseDto
     */
    constructor() { 
        
        A2pUpgradeLeaseDto.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>A2pUpgradeLeaseDto</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/A2pUpgradeLeaseDto} obj Optional instance to populate.
     * @return {module:model/A2pUpgradeLeaseDto} The populated <code>A2pUpgradeLeaseDto</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new A2pUpgradeLeaseDto();

            if (data.hasOwnProperty('blocked')) {
                obj['blocked'] = ApiClient.convertToType(data['blocked'], 'Date');
            }
            if (data.hasOwnProperty('canceled')) {
                obj['canceled'] = ApiClient.convertToType(data['canceled'], 'Boolean');
            }
            if (data.hasOwnProperty('createdAt')) {
                obj['createdAt'] = ApiClient.convertToType(data['createdAt'], 'Date');
            }
            if (data.hasOwnProperty('deleted')) {
                obj['deleted'] = ApiClient.convertToType(data['deleted'], 'Boolean');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('invoiceId')) {
                obj['invoiceId'] = ApiClient.convertToType(data['invoiceId'], 'Number');
            }
            if (data.hasOwnProperty('nextBilling')) {
                obj['nextBilling'] = ApiClient.convertToType(data['nextBilling'], 'Date');
            }
            if (data.hasOwnProperty('packaged')) {
                obj['packaged'] = ApiClient.convertToType(data['packaged'], 'Boolean');
            }
            if (data.hasOwnProperty('prepaidDiscountId')) {
                obj['prepaidDiscountId'] = ApiClient.convertToType(data['prepaidDiscountId'], 'Number');
            }
            if (data.hasOwnProperty('price')) {
                obj['price'] = ApiClient.convertToType(data['price'], 'Number');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('updatedAt')) {
                obj['updatedAt'] = ApiClient.convertToType(data['updatedAt'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>A2pUpgradeLeaseDto</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>A2pUpgradeLeaseDto</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}



/**
 * ~
 * @member {Date} blocked
 */
A2pUpgradeLeaseDto.prototype['blocked'] = undefined;

/**
 * ~
 * @member {Boolean} canceled
 */
A2pUpgradeLeaseDto.prototype['canceled'] = undefined;

/**
 * ~
 * @member {Date} createdAt
 */
A2pUpgradeLeaseDto.prototype['createdAt'] = undefined;

/**
 * ~
 * @member {Boolean} deleted
 */
A2pUpgradeLeaseDto.prototype['deleted'] = undefined;

/**
 * ~
 * @member {Number} id
 */
A2pUpgradeLeaseDto.prototype['id'] = undefined;

/**
 * ~
 * @member {Number} invoiceId
 */
A2pUpgradeLeaseDto.prototype['invoiceId'] = undefined;

/**
 * ~
 * @member {Date} nextBilling
 */
A2pUpgradeLeaseDto.prototype['nextBilling'] = undefined;

/**
 * ~
 * @member {Boolean} packaged
 */
A2pUpgradeLeaseDto.prototype['packaged'] = undefined;

/**
 * ~
 * @member {Number} prepaidDiscountId
 */
A2pUpgradeLeaseDto.prototype['prepaidDiscountId'] = undefined;

/**
 * ~
 * @member {Number} price
 */
A2pUpgradeLeaseDto.prototype['price'] = undefined;

/**
 * ~
 * @member {module:model/A2pUpgradeLeaseDto.TypeEnum} type
 */
A2pUpgradeLeaseDto.prototype['type'] = undefined;

/**
 * ~
 * @member {Date} updatedAt
 */
A2pUpgradeLeaseDto.prototype['updatedAt'] = undefined;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
A2pUpgradeLeaseDto['TypeEnum'] = {

    /**
     * value: "PLAN"
     * @const
     */
    "PLAN": "PLAN",

    /**
     * value: "EXTRA"
     * @const
     */
    "EXTRA": "EXTRA"
};



export default A2pUpgradeLeaseDto;

