/**
 * CallFire API Documentation
 * CallFire
 *
 * The version of the OpenAPI document: V2
 * Contact: support@callfire.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The LocalDate model module.
 * @module model/LocalDate
 * @version V2
 */
class LocalDate {
    /**
     * Constructs a new <code>LocalDate</code>.
     * Represents a date object (without time part)
     * @alias module:model/LocalDate
     */
    constructor() { 
        
        LocalDate.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LocalDate</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LocalDate} obj Optional instance to populate.
     * @return {module:model/LocalDate} The populated <code>LocalDate</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LocalDate();

            if (data.hasOwnProperty('day')) {
                obj['day'] = ApiClient.convertToType(data['day'], 'Number');
            }
            if (data.hasOwnProperty('month')) {
                obj['month'] = ApiClient.convertToType(data['month'], 'Number');
            }
            if (data.hasOwnProperty('year')) {
                obj['year'] = ApiClient.convertToType(data['year'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LocalDate</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LocalDate</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * A day of the month. Available values: 1-31
 * @member {Number} day
 */
LocalDate.prototype['day'] = undefined;

/**
 * A month of the year. Available values: 1-12
 * @member {Number} month
 */
LocalDate.prototype['month'] = undefined;

/**
 * A year. Example: 2020
 * @member {Number} year
 */
LocalDate.prototype['year'] = undefined;






export default LocalDate;

