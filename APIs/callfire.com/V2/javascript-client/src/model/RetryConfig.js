/**
 * CallFire API Documentation
 * CallFire
 *
 * The version of the OpenAPI document: V2
 * Contact: support@callfire.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The RetryConfig model module.
 * @module model/RetryConfig
 * @version V2
 */
class RetryConfig {
    /**
     * Constructs a new <code>RetryConfig</code>.
     * Retry configuration will help you to resend a call or text if it was not delivered first time
     * @alias module:model/RetryConfig
     */
    constructor() { 
        
        RetryConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RetryConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RetryConfig} obj Optional instance to populate.
     * @return {module:model/RetryConfig} The populated <code>RetryConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RetryConfig();

            if (data.hasOwnProperty('maxAttempts')) {
                obj['maxAttempts'] = ApiClient.convertToType(data['maxAttempts'], 'Number');
            }
            if (data.hasOwnProperty('minutesBetweenAttempts')) {
                obj['minutesBetweenAttempts'] = ApiClient.convertToType(data['minutesBetweenAttempts'], 'Number');
            }
            if (data.hasOwnProperty('retryPhoneTypes')) {
                obj['retryPhoneTypes'] = ApiClient.convertToType(data['retryPhoneTypes'], ['String']);
            }
            if (data.hasOwnProperty('retryResults')) {
                obj['retryResults'] = ApiClient.convertToType(data['retryResults'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RetryConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RetryConfig</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['retryPhoneTypes'])) {
            throw new Error("Expected the field `retryPhoneTypes` to be an array in the JSON data but got " + data['retryPhoneTypes']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['retryResults'])) {
            throw new Error("Expected the field `retryResults` to be an array in the JSON data but got " + data['retryResults']);
        }

        return true;
    }


}



/**
 * Maximum number of retry attempts. Default value: 1
 * @member {Number} maxAttempts
 */
RetryConfig.prototype['maxAttempts'] = undefined;

/**
 * A number of minutes between retry attempts. Default value: 60
 * @member {Number} minutesBetweenAttempts
 */
RetryConfig.prototype['minutesBetweenAttempts'] = undefined;

/**
 * A list of phone number types to retry. Available values: FIRST_NUMBER, HOME_PHONE, WORK_PHONE, MOBILE_PHONE
 * @member {Array.<String>} retryPhoneTypes
 */
RetryConfig.prototype['retryPhoneTypes'] = undefined;

/**
 * List of result states when a call/text should be addressed to this contact again. Supports any combination of result statuses. Available values: LA, BUSY, AM, NO_ANS, SENT, RECEIVED, etc. See [call/text states and results](https://developers.callfire.com/results-responses-errors.html)
 * @member {Array.<String>} retryResults
 */
RetryConfig.prototype['retryResults'] = undefined;






export default RetryConfig;

