/**
 * CallFire API Documentation
 * CallFire
 *
 * The version of the OpenAPI document: V2
 * Contact: support@callfire.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CampaignSound model module.
 * @module model/CampaignSound
 * @version V2
 */
class CampaignSound {
    /**
     * Constructs a new <code>CampaignSound</code>.
     * Represents a sound recording from account&#39;s sound library which can be used in different API operations
     * @alias module:model/CampaignSound
     */
    constructor() { 
        
        CampaignSound.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CampaignSound</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CampaignSound} obj Optional instance to populate.
     * @return {module:model/CampaignSound} The populated <code>CampaignSound</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CampaignSound();

            if (data.hasOwnProperty('created')) {
                obj['created'] = ApiClient.convertToType(data['created'], 'Number');
            }
            if (data.hasOwnProperty('duplicate')) {
                obj['duplicate'] = ApiClient.convertToType(data['duplicate'], 'Boolean');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('lengthInSeconds')) {
                obj['lengthInSeconds'] = ApiClient.convertToType(data['lengthInSeconds'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CampaignSound</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CampaignSound</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }

        return true;
    }


}



/**
 * The time when the given resource was created, formatted in unix time milliseconds (read only). Example: 1473781817000 for Sat, 05 Jan 1985 14:03:37 GMT
 * @member {Number} created
 */
CampaignSound.prototype['created'] = undefined;

/**
 * True if the same sound file exists in a sound library of account
 * @member {Boolean} duplicate
 */
CampaignSound.prototype['duplicate'] = undefined;

/**
 * An id of a sound file
 * @member {Number} id
 */
CampaignSound.prototype['id'] = undefined;

/**
 * Length of a sound in seconds
 * @member {Number} lengthInSeconds
 */
CampaignSound.prototype['lengthInSeconds'] = undefined;

/**
 * A name of a sound file
 * @member {String} name
 */
CampaignSound.prototype['name'] = undefined;

/**
 * A current status of a sound, available values: UPLOAD - uploading is in progress, RECORDING - recording of sound is in progress, ACTIVE - sound is ready, FAILED, ARCHIVED - sound was archived, SCRUBBED - sound was scrubbed 
 * @member {module:model/CampaignSound.StatusEnum} status
 */
CampaignSound.prototype['status'] = undefined;





/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
CampaignSound['StatusEnum'] = {

    /**
     * value: "UPLOAD"
     * @const
     */
    "UPLOAD": "UPLOAD",

    /**
     * value: "RECORDING"
     * @const
     */
    "RECORDING": "RECORDING",

    /**
     * value: "ACTIVE"
     * @const
     */
    "ACTIVE": "ACTIVE",

    /**
     * value: "ACTIVE_SYSTEM"
     * @const
     */
    "ACTIVE_SYSTEM": "ACTIVE_SYSTEM",

    /**
     * value: "FAILED"
     * @const
     */
    "FAILED": "FAILED",

    /**
     * value: "ARCHIVED"
     * @const
     */
    "ARCHIVED": "ARCHIVED",

    /**
     * value: "SCRUBBED"
     * @const
     */
    "SCRUBBED": "SCRUBBED"
};



export default CampaignSound;

