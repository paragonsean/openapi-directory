/*
 * CallFire API Documentation
 * CallFire
 *
 * The version of the OpenAPI document: V2
 * Contact: support@callfire.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ErrorResponse;
import org.openapitools.client.model.NumberConfig;
import org.openapitools.client.model.NumberConfigPage;
import org.openapitools.client.model.NumberLease;
import org.openapitools.client.model.NumberLeasePage;
import org.openapitools.client.model.NumberList;
import org.openapitools.client.model.RegionPage;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for NumbersApi
 */
@Disabled
public class NumbersApiTest {

    private final NumbersApi api = new NumbersApi();

    /**
     * Find lease configs
     *
     * Searches for all number lease configs for the user. Returns a paged list of NumberConfig
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void findNumberLeaseConfigsTest() throws ApiException {
        Integer limit = null;
        Integer offset = null;
        String prefix = null;
        String city = null;
        String state = null;
        String zipcode = null;
        String labelName = null;
        String fields = null;
        NumberConfigPage response = api.findNumberLeaseConfigs(limit, offset, prefix, city, state, zipcode, labelName, fields);
        // TODO: test validations
    }

    /**
     * Find leases
     *
     * Searches for all numbers leased by account user. This API is useful for finding all numbers currently owned by the user. Returns a paged list of number leases.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void findNumberLeasesTest() throws ApiException {
        Integer limit = null;
        Integer offset = null;
        String prefix = null;
        String city = null;
        String state = null;
        String zipcode = null;
        String labelName = null;
        Boolean tollFree = null;
        String fields = null;
        NumberLeasePage response = api.findNumberLeases(limit, offset, prefix, city, state, zipcode, labelName, tollFree, fields);
        // TODO: test validations
    }

    /**
     * Find number regions
     *
     * Searches for region information. Use this API to obtain detailed region information that can be used to query for more specific phone numbers than a general query.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void findNumberRegionsTest() throws ApiException {
        Integer limit = null;
        Integer offset = null;
        String prefix = null;
        String city = null;
        String cityPrefix = null;
        String state = null;
        String zipcode = null;
        String country = null;
        String fields = null;
        RegionPage response = api.findNumberRegions(limit, offset, prefix, city, cityPrefix, state, zipcode, country, fields);
        // TODO: test validations
    }

    /**
     * Find local numbers
     *
     * Searches for numbers available for purchase in CallFire local numbers catalog . At least one additional parameter is required. User may filter local numbers by their region information. If all numbers with desirable zip code is already busy search will return available numbers with nearest zip code.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void findNumbersLocalTest() throws ApiException {
        Integer limit = null;
        String prefix = null;
        String city = null;
        String state = null;
        String zipcode = null;
        String fields = null;
        NumberList response = api.findNumbersLocal(limit, prefix, city, state, zipcode, fields);
        // TODO: test validations
    }

    /**
     * Find tollfree numbers
     *
     * Searches for the toll free numbers which are available for purchase in the CallFire catalog
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void findNumbersTollfreeTest() throws ApiException {
        String pattern = null;
        Integer limit = null;
        String fields = null;
        NumberList response = api.findNumbersTollfree(pattern, limit, fields);
        // TODO: test validations
    }

    /**
     * Find a specific lease
     *
     * Returns a single NumberLease instance for a given number
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getNumberLeaseTest() throws ApiException {
        String number = null;
        String fields = null;
        NumberLease response = api.getNumberLease(number, fields);
        // TODO: test validations
    }

    /**
     * Find a specific lease config
     *
     * Returns a single NumberConfig instance for a given number lease
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getNumberLeaseConfigTest() throws ApiException {
        String number = null;
        String fields = null;
        NumberConfig response = api.getNumberLeaseConfig(number, fields);
        // TODO: test validations
    }

    /**
     * Update a lease
     *
     * Updates a number lease instance. Ability to turn on/off autoRenew and toggle call/text features for a particular number
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateNumberLeaseTest() throws ApiException {
        String number = null;
        NumberLease numberLease = null;
        api.updateNumberLease(number, numberLease);
        // TODO: test validations
    }

    /**
     * Update a lease config
     *
     * Updates a phone number lease configuration. Use this API endpoint to add an Inbound IVR or Call Tracking feature to a CallFire phone number. Call tracking configuration allows you to track the incoming calls, to analyze and to respond customers using sms or voice replies. For more information see [call tracking page](https://www.callfire.com/products/call-tracking)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateNumberLeaseConfigTest() throws ApiException {
        String number = null;
        NumberConfig numberConfig = null;
        api.updateNumberLeaseConfig(number, numberConfig);
        // TODO: test validations
    }

}
