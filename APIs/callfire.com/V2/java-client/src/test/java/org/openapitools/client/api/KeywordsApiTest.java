/*
 * CallFire API Documentation
 * CallFire
 *
 * The version of the OpenAPI document: V2
 * Contact: support@callfire.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ErrorResponse;
import org.openapitools.client.model.KeywordConfig;
import org.openapitools.client.model.KeywordLease;
import org.openapitools.client.model.KeywordLeasePage;
import org.openapitools.client.model.KeywordList;
import org.openapitools.client.model.Page;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for KeywordsApi
 */
@Disabled
public class KeywordsApiTest {

    private final KeywordsApi api = new KeywordsApi();

    /**
     * Find keyword lease configs
     *
     * Searches for all keyword lease configs for the user. Returns a paged list of KeywordConfig
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void findKeywordLeaseConfigsTest() throws ApiException {
        Integer limit = null;
        Integer offset = null;
        String filter = null;
        String labelName = null;
        String fields = null;
        Page response = api.findKeywordLeaseConfigs(limit, offset, filter, labelName, fields);
        // TODO: test validations
    }

    /**
     * Find keyword leases
     *
     * Searches for all keywords owned by user. A keyword lease is the ownership information involving a keyword
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void findKeywordLeasesTest() throws ApiException {
        Integer limit = null;
        Integer offset = null;
        String filter = null;
        String labelName = null;
        String fields = null;
        KeywordLeasePage response = api.findKeywordLeases(limit, offset, filter, labelName, fields);
        // TODO: test validations
    }

    /**
     * Find keywords
     *
     * Searches for all keywords available for purchase on the CallFire platform. If a keyword appears in the response, it is available for purchase. List the &#39;keywords&#39; in a query parameter to search for multiple keywords (at least one keyword should be sent in request). Keyword should only consist of uppercase and lowercase letters and numbers. Number of characters must be greater than 2, but less than 65.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void findKeywordsTest() throws ApiException {
        List<String> keywords = null;
        KeywordList response = api.findKeywords(keywords);
        // TODO: test validations
    }

    /**
     * Find a specific lease
     *
     * Searches for all keywords owned by user
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getKeywordLeaseTest() throws ApiException {
        String keyword = null;
        String fields = null;
        KeywordLease response = api.getKeywordLease(keyword, fields);
        // TODO: test validations
    }

    /**
     * Find a keyword by id
     *
     * Get keyword by id
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getKeywordLeaseByIdTest() throws ApiException {
        Long id = null;
        String fields = null;
        KeywordLease response = api.getKeywordLeaseById(id, fields);
        // TODO: test validations
    }

    /**
     * Find a specific keyword lease config
     *
     * Returns a single KeywordConfig instance for a given keyword lease
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getKeywordLeaseConfigTest() throws ApiException {
        String keyword = null;
        String fields = null;
        KeywordConfig response = api.getKeywordLeaseConfig(keyword, fields);
        // TODO: test validations
    }

    /**
     * Check for a specific keyword
     *
     * Searches for the specific keyword to purchase on the CallFire platform. Returns &#39;true&#39; if keyword is available. Keyword should only consist of uppercase and lowercase letters and numbers. Number of characters must be greater than 2, but less than 65.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void isKeywordAvailableTest() throws ApiException {
        String keyword = null;
        Boolean response = api.isKeywordAvailable(keyword);
        // TODO: test validations
    }

    /**
     * Update a lease
     *
     * Updates a keyword lease. Turns the autoRenew on/off. Configure double opt in feature. Add/remove contact list from keyword.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateKeywordLeaseTest() throws ApiException {
        String keyword = null;
        KeywordLease keywordLease = null;
        api.updateKeywordLease(keyword, keywordLease);
        // TODO: test validations
    }

    /**
     * Update a keyword lease config
     *
     * Updates a keyword lease configuration. Use this API endpoint to enable/disable inbound SMS forwarding, set forward number. Forward number must be in E.164 format)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateKeywordLeaseConfigTest() throws ApiException {
        String keyword = null;
        KeywordConfig keywordConfig = null;
        api.updateKeywordLeaseConfig(keyword, keywordConfig);
        // TODO: test validations
    }

}
