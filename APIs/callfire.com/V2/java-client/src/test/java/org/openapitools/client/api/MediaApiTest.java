/*
 * CallFire API Documentation
 * CallFire
 *
 * The version of the OpenAPI document: V2
 * Contact: support@callfire.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ErrorResponse;
import java.io.File;
import org.openapitools.client.model.Media;
import org.openapitools.client.model.MediaPage;
import org.openapitools.client.model.ResourceId;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for MediaApi
 */
@Disabled
public class MediaApiTest {

    private final MediaApi api = new MediaApi();

    /**
     * Create media
     *
     * Uploads media file to account, acceptable media formats: bmp, gif, jpg, m4a, mp3, mp4, png, wav
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createMediaTest() throws ApiException {
        File _file = null;
        String name = null;
        ResourceId response = api.createMedia(_file, name);
        // TODO: test validations
    }

    /**
     * Find media
     *
     * Find media files created by user
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void findMediaTest() throws ApiException {
        Integer limit = null;
        Integer offset = null;
        String filter = null;
        String fields = null;
        MediaPage response = api.findMedia(limit, offset, filter, fields);
        // TODO: test validations
    }

    /**
     * Get a specific media
     *
     * Get media resource by id
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getMediaTest() throws ApiException {
        Long id = null;
        String fields = null;
        Media response = api.getMedia(id, fields);
        // TODO: test validations
    }

    /**
     * Download media by extension
     *
     * Download a media file. Available types of files: bmp, gif, jpg, m4a, mp3, mp4, png, wav. Content type in response depends on &#39;extension&#39; parameter, e.g. image/jpeg, image/png, audio/mp3, etc
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getMediaDataTest() throws ApiException {
        Long id = null;
        String extension = null;
        Object response = api.getMediaData(id, extension);
        // TODO: test validations
    }

    /**
     * Download a MP3 media
     *
     * Download a MP3 media, endpoint returns application/binary content-type
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getMediaDataBinaryTest() throws ApiException {
        Long id = null;
        Object response = api.getMediaDataBinary(id);
        // TODO: test validations
    }

    /**
     * Download media by extension
     *
     * Download a media file. Available types of files: bmp, gif, jpg, m4a, mp3, mp4, png, wav. Content type in response depends on &#39;extension&#39; parameter, e.g. image/jpeg, image/png, audio/mp3, etc
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getMediaDataByKeyTest() throws ApiException {
        String key = null;
        String extension = null;
        Object response = api.getMediaDataByKey(key, extension);
        // TODO: test validations
    }

}
