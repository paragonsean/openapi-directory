/*
 * CallFire API Documentation
 * CallFire
 *
 * The version of the OpenAPI document: V2
 * Contact: support@callfire.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.BatchPage;
import org.openapitools.client.model.BatchRequest;
import org.openapitools.client.model.ErrorResponse;
import org.openapitools.client.model.Recipient;
import org.openapitools.client.model.ResourceId;
import org.openapitools.client.model.Text;
import org.openapitools.client.model.TextAutoReply;
import org.openapitools.client.model.TextAutoReplyPage;
import org.openapitools.client.model.TextBroadcast;
import org.openapitools.client.model.TextBroadcastCreateResponse;
import org.openapitools.client.model.TextBroadcastPage;
import org.openapitools.client.model.TextBroadcastStatsDto;
import org.openapitools.client.model.TextList;
import org.openapitools.client.model.TextPage;
import org.openapitools.client.model.TextRecipient;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TextsApi
 */
@Disabled
public class TextsApiTest {

    private final TextsApi api = new TextsApi();

    /**
     * Add batches to a text broadcast
     *
     * Allows adding an extra batches to an already created text broadcast campaign. The batches which being  added pass the CallFire validation process (unlike in the recipients version of this API). That is why using of a scrubDuplicates flag remove duplicates from your batch. Batches may be added as a contact list id, a list of contact ids, or a list of numbers
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addTextBroadcastBatchTest() throws ApiException {
        Long id = null;
        Boolean strictValidation = null;
        BatchRequest batchRequest = null;
        ResourceId response = api.addTextBroadcastBatch(id, strictValidation, batchRequest);
        // TODO: test validations
    }

    /**
     * Add recipients to a text broadcast
     *
     * Use this API to add recipients to a text broadcast which is already created. Post a list of Recipient objects to be immediately added to the text broadcast campaign. These contacts will not go through validation process, and will be acted upon as they are added. Recipients may be added as a list of contact ids, or list of numbers
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addTextBroadcastRecipientsTest() throws ApiException {
        Long id = null;
        String fields = null;
        Boolean strictValidation = null;
        List<TextRecipient> textRecipient = null;
        TextList response = api.addTextBroadcastRecipients(id, fields, strictValidation, textRecipient);
        // TODO: test validations
    }

    /**
     * Archive text broadcast
     *
     * Archives a text broadcast (and hides it in the search results)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void archiveTextBroadcastTest() throws ApiException {
        Long id = null;
        api.archiveTextBroadcast(id);
        // TODO: test validations
    }

    /**
     * Create an auto reply
     *
     * CallFire gives you possibility to set up auto reply messages for your numbers and keywords. You can set a general auto reply for anyone who texts your number, keyword, and/or include a text to match, so that the auto reply would be sent only to those who text the matched text
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createTextAutoReplyTest() throws ApiException {
        TextAutoReply textAutoReply = null;
        ResourceId response = api.createTextAutoReply(textAutoReply);
        // TODO: test validations
    }

    /**
     * Create a text broadcast
     *
     * Creates a text broadcast campaign using the Text Broadcast API. Send a TextBroadcast object in the message body to detail a text broadcast campaign. A campaign can be created without contacts and with bare minimum configuration, but contacts have to be added further on to use the campaign. It supports scheduling, retry logic, pattern-based messages.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createTextBroadcastTest() throws ApiException {
        Boolean start = null;
        Boolean strictValidation = null;
        TextBroadcast textBroadcast = null;
        ResourceId response = api.createTextBroadcast(start, strictValidation, textBroadcast);
        // TODO: test validations
    }

    /**
     * Delete an auto reply
     *
     * Deletes a text auto reply and removes the configuration. Can not delete a TextAutoReply which is currently active for a campaign
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteTextAutoReplyTest() throws ApiException {
        Long id = null;
        api.deleteTextAutoReply(id);
        // TODO: test validations
    }

    /**
     * Find auto replies
     *
     * Find all text autoreplies created by user. Returns a paged list of TextAutoReply
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void findTextAutoReplysTest() throws ApiException {
        String fields = null;
        Integer limit = null;
        Integer offset = null;
        String number = null;
        TextAutoReplyPage response = api.findTextAutoReplys(fields, limit, offset, number);
        // TODO: test validations
    }

    /**
     * Find text broadcasts
     *
     * Searches for all text broadcasts created by user. Can query on label, name, and the current running status of the campaign. Returns a paged list of text broadcasts
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void findTextBroadcastsTest() throws ApiException {
        String name = null;
        String label = null;
        Boolean running = null;
        Boolean scheduled = null;
        Long intervalBegin = null;
        Long intervalEnd = null;
        Integer limit = null;
        Integer offset = null;
        String fields = null;
        TextBroadcastPage response = api.findTextBroadcasts(name, label, running, scheduled, intervalBegin, intervalEnd, limit, offset, fields);
        // TODO: test validations
    }

    /**
     * Find texts
     *
     * Searches for texts sent or received by user. Use \&quot;campaignId&#x3D;0\&quot; parameter to query for all texts sent through the POST /texts API. See [call states and results](https://developers.callfire.com/results-responses-errors.html)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void findTextsTest() throws ApiException {
        List<Long> id = null;
        Long campaignId = null;
        Long batchId = null;
        String fromNumber = null;
        String toNumber = null;
        String label = null;
        String states = null;
        String results = null;
        Boolean inbound = null;
        Long intervalBegin = null;
        Long intervalEnd = null;
        Integer limit = null;
        Integer offset = null;
        String fields = null;
        TextPage response = api.findTexts(id, campaignId, batchId, fromNumber, toNumber, label, states, results, inbound, intervalBegin, intervalEnd, limit, offset, fields);
        // TODO: test validations
    }

    /**
     * Find a specific text
     *
     * Returns a single Text instance for a given text id
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getTextTest() throws ApiException {
        Long id = null;
        String fields = null;
        Text response = api.getText(id, fields);
        // TODO: test validations
    }

    /**
     * Find a specific auto reply
     *
     * Returns a single TextAutoReply instance for a given text auto reply id
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getTextAutoReplyTest() throws ApiException {
        Long id = null;
        String fields = null;
        TextAutoReply response = api.getTextAutoReply(id, fields);
        // TODO: test validations
    }

    /**
     * Find a specific text broadcast
     *
     * Returns a single TextBroadcast instance for a given text broadcast id
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getTextBroadcastTest() throws ApiException {
        Long id = null;
        String fields = null;
        TextBroadcast response = api.getTextBroadcast(id, fields);
        // TODO: test validations
    }

    /**
     * Find batches in a text broadcast
     *
     * This endpoint will enable the user to page through all of the batches for a particular text broadcast campaign
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getTextBroadcastBatchesTest() throws ApiException {
        Long id = null;
        String fields = null;
        Integer limit = null;
        Integer offset = null;
        BatchPage response = api.getTextBroadcastBatches(id, fields, limit, offset);
        // TODO: test validations
    }

    /**
     * Get statistics on text broadcast
     *
     * Returns the broadcast statistics. Example: total number of the sent/received actions, total cost, number of remaining outbound actions, error count, etc
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getTextBroadcastStatsTest() throws ApiException {
        Long id = null;
        String fields = null;
        Long begin = null;
        Long end = null;
        TextBroadcastStatsDto response = api.getTextBroadcastStats(id, fields, begin, end);
        // TODO: test validations
    }

    /**
     * Find texts in a text broadcast
     *
     * This endpoint will enable the user to page through all of the texts for a particular text broadcast campaign
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getTextBroadcastTextsTest() throws ApiException {
        Long id = null;
        Long batchId = null;
        String fields = null;
        Integer limit = null;
        Integer offset = null;
        TextPage response = api.getTextBroadcastTexts(id, batchId, fields, limit, offset);
        // TODO: test validations
    }

    /**
     * Send texts
     *
     * Use the /texts API to send individual texts quickly. By default all texts are going out from CallFire&#39;s dedicated short code. Example: 67076, 818818 etc
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void sendTextsTest() throws ApiException {
        String fields = null;
        Long campaignId = null;
        String defaultMessage = null;
        Boolean strictValidation = null;
        List<TextRecipient> textRecipient = null;
        TextList response = api.sendTexts(fields, campaignId, defaultMessage, strictValidation, textRecipient);
        // TODO: test validations
    }

    /**
     * Start text broadcast
     *
     * Starts a text broadcast
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void startTextBroadcastTest() throws ApiException {
        Long id = null;
        api.startTextBroadcast(id);
        // TODO: test validations
    }

    /**
     * Stop text broadcast
     *
     * Stops a text broadcast
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void stopTextBroadcastTest() throws ApiException {
        Long id = null;
        api.stopTextBroadcast(id);
        // TODO: test validations
    }

    /**
     * Disable/enable undialed recipients in broadcast
     *
     * This operation lets the user to disable/enable undialed contacts in created broadcast
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void toggleTextBroadcastRecipientsStatusTest() throws ApiException {
        Long id = null;
        Boolean enable = null;
        List<Recipient> recipient = null;
        api.toggleTextBroadcastRecipientsStatus(id, enable, recipient);
        // TODO: test validations
    }

    /**
     * Update a text broadcast
     *
     * Allows modifying the configuration of existing text broadcast campaign. See TextBroadcast for more information on what can/can&#39;t be updated on this API
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateTextBroadcastTest() throws ApiException {
        Long id = null;
        Boolean strictValidation = null;
        TextBroadcast textBroadcast = null;
        TextBroadcastCreateResponse response = api.updateTextBroadcast(id, strictValidation, textBroadcast);
        // TODO: test validations
    }

}
