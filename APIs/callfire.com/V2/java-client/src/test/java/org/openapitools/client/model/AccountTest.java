/*
 * CallFire API Documentation
 * CallFire
 *
 * The version of the OpenAPI document: V2
 * Contact: support@callfire.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.LinkedHashSet;
import java.util.Set;
import org.openapitools.client.model.DateTimeZone;
import org.openapitools.client.model.Duration;
import org.openapitools.client.model.LocalTimeZoneRestriction;
import org.openapitools.client.model.Locale;
import org.openapitools.client.model.TimeZone;
import org.openapitools.client.model.ZoneId;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Account
 */
public class AccountTest {
    private final Account model = new Account();

    /**
     * Model tests for Account
     */
    @Test
    public void testAccount() {
        // TODO: test Account
    }

    /**
     * Test the property 'active'
     */
    @Test
    public void activeTest() {
        // TODO: test active
    }

    /**
     * Test the property 'address'
     */
    @Test
    public void addressTest() {
        // TODO: test address
    }

    /**
     * Test the property 'age'
     */
    @Test
    public void ageTest() {
        // TODO: test age
    }

    /**
     * Test the property 'agencyManagedAccounts'
     */
    @Test
    public void agencyManagedAccountsTest() {
        // TODO: test agencyManagedAccounts
    }

    /**
     * Test the property 'allowedToCreateCampaign'
     */
    @Test
    public void allowedToCreateCampaignTest() {
        // TODO: test allowedToCreateCampaign
    }

    /**
     * Test the property 'apiCallLimit'
     */
    @Test
    public void apiCallLimitTest() {
        // TODO: test apiCallLimit
    }

    /**
     * Test the property 'archived'
     */
    @Test
    public void archivedTest() {
        // TODO: test archived
    }

    /**
     * Test the property 'autoAddDoNotContact'
     */
    @Test
    public void autoAddDoNotContactTest() {
        // TODO: test autoAddDoNotContact
    }

    /**
     * Test the property 'brand'
     */
    @Test
    public void brandTest() {
        // TODO: test brand
    }

    /**
     * Test the property 'canceled'
     */
    @Test
    public void canceledTest() {
        // TODO: test canceled
    }

    /**
     * Test the property 'canceledOrArchived'
     */
    @Test
    public void canceledOrArchivedTest() {
        // TODO: test canceledOrArchived
    }

    /**
     * Test the property 'city'
     */
    @Test
    public void cityTest() {
        // TODO: test city
    }

    /**
     * Test the property 'companyName'
     */
    @Test
    public void companyNameTest() {
        // TODO: test companyName
    }

    /**
     * Test the property 'country'
     */
    @Test
    public void countryTest() {
        // TODO: test country
    }

    /**
     * Test the property 'countryOrDefault'
     */
    @Test
    public void countryOrDefaultTest() {
        // TODO: test countryOrDefault
    }

    /**
     * Test the property 'created'
     */
    @Test
    public void createdTest() {
        // TODO: test created
    }

    /**
     * Test the property 'dateTimeZone'
     */
    @Test
    public void dateTimeZoneTest() {
        // TODO: test dateTimeZone
    }

    /**
     * Test the property 'defaultNotificationTtlMillis'
     */
    @Test
    public void defaultNotificationTtlMillisTest() {
        // TODO: test defaultNotificationTtlMillis
    }

    /**
     * Test the property 'defaultNumberId'
     */
    @Test
    public void defaultNumberIdTest() {
        // TODO: test defaultNumberId
    }

    /**
     * Test the property 'ein'
     */
    @Test
    public void einTest() {
        // TODO: test ein
    }

    /**
     * Test the property 'entityType'
     */
    @Test
    public void entityTypeTest() {
        // TODO: test entityType
    }

    /**
     * Test the property 'ez'
     */
    @Test
    public void ezTest() {
        // TODO: test ez
    }

    /**
     * Test the property 'failedVerificationAttempts'
     */
    @Test
    public void failedVerificationAttemptsTest() {
        // TODO: test failedVerificationAttempts
    }

    /**
     * Test the property 'fromNumberPool'
     */
    @Test
    public void fromNumberPoolTest() {
        // TODO: test fromNumberPool
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'industry'
     */
    @Test
    public void industryTest() {
        // TODO: test industry
    }

    /**
     * Test the property 'industryName'
     */
    @Test
    public void industryNameTest() {
        // TODO: test industryName
    }

    /**
     * Test the property 'key'
     */
    @Test
    public void keyTest() {
        // TODO: test key
    }

    /**
     * Test the property 'localTimeZoneRestriction'
     */
    @Test
    public void localTimeZoneRestrictionTest() {
        // TODO: test localTimeZoneRestriction
    }

    /**
     * Test the property 'locale'
     */
    @Test
    public void localeTest() {
        // TODO: test locale
    }

    /**
     * Test the property 'maxAgents'
     */
    @Test
    public void maxAgentsTest() {
        // TODO: test maxAgents
    }

    /**
     * Test the property 'messageClass'
     */
    @Test
    public void messageClassTest() {
        // TODO: test messageClass
    }

    /**
     * Test the property 'messageFlows'
     */
    @Test
    public void messageFlowsTest() {
        // TODO: test messageFlows
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'outboundThreshold'
     */
    @Test
    public void outboundThresholdTest() {
        // TODO: test outboundThreshold
    }

    /**
     * Test the property 'receiverPeriodCall'
     */
    @Test
    public void receiverPeriodCallTest() {
        // TODO: test receiverPeriodCall
    }

    /**
     * Test the property 'receiverPeriodEnabled'
     */
    @Test
    public void receiverPeriodEnabledTest() {
        // TODO: test receiverPeriodEnabled
    }

    /**
     * Test the property 'receiverPeriodGlobal'
     */
    @Test
    public void receiverPeriodGlobalTest() {
        // TODO: test receiverPeriodGlobal
    }

    /**
     * Test the property 'receiverPeriodText'
     */
    @Test
    public void receiverPeriodTextTest() {
        // TODO: test receiverPeriodText
    }

    /**
     * Test the property 'receiverPeriodTimeUnit'
     */
    @Test
    public void receiverPeriodTimeUnitTest() {
        // TODO: test receiverPeriodTimeUnit
    }

    /**
     * Test the property 'retainOnlyMetadata'
     */
    @Test
    public void retainOnlyMetadataTest() {
        // TODO: test retainOnlyMetadata
    }

    /**
     * Test the property 'retainOnlyMetadataLastDetailRecordId'
     */
    @Test
    public void retainOnlyMetadataLastDetailRecordIdTest() {
        // TODO: test retainOnlyMetadataLastDetailRecordId
    }

    /**
     * Test the property 'retainOnlyMetadataLastModified'
     */
    @Test
    public void retainOnlyMetadataLastModifiedTest() {
        // TODO: test retainOnlyMetadataLastModified
    }

    /**
     * Test the property 'scrub'
     */
    @Test
    public void scrubTest() {
        // TODO: test scrub
    }

    /**
     * Test the property 'sharedShortCodeAllowed'
     */
    @Test
    public void sharedShortCodeAllowedTest() {
        // TODO: test sharedShortCodeAllowed
    }

    /**
     * Test the property 'sharedShortCodeId'
     */
    @Test
    public void sharedShortCodeIdTest() {
        // TODO: test sharedShortCodeId
    }

    /**
     * Test the property 'soaAccount'
     */
    @Test
    public void soaAccountTest() {
        // TODO: test soaAccount
    }

    /**
     * Test the property 'startCapable'
     */
    @Test
    public void startCapableTest() {
        // TODO: test startCapable
    }

    /**
     * Test the property 'state'
     */
    @Test
    public void stateTest() {
        // TODO: test state
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        // TODO: test status
    }

    /**
     * Test the property 'textOutboundThreshold'
     */
    @Test
    public void textOutboundThresholdTest() {
        // TODO: test textOutboundThreshold
    }

    /**
     * Test the property 'timeZone'
     */
    @Test
    public void timeZoneTest() {
        // TODO: test timeZone
    }

    /**
     * Test the property 'timeZoneId'
     */
    @Test
    public void timeZoneIdTest() {
        // TODO: test timeZoneId
    }

    /**
     * Test the property 'trustLevel'
     */
    @Test
    public void trustLevelTest() {
        // TODO: test trustLevel
    }

    /**
     * Test the property 'tsrAgreement'
     */
    @Test
    public void tsrAgreementTest() {
        // TODO: test tsrAgreement
    }

    /**
     * Test the property 'tsrInitials'
     */
    @Test
    public void tsrInitialsTest() {
        // TODO: test tsrInitials
    }

    /**
     * Test the property 'uiContext'
     */
    @Test
    public void uiContextTest() {
        // TODO: test uiContext
    }

    /**
     * Test the property 'universal'
     */
    @Test
    public void universalTest() {
        // TODO: test universal
    }

    /**
     * Test the property 'website'
     */
    @Test
    public void websiteTest() {
        // TODO: test website
    }

    /**
     * Test the property 'zipcode'
     */
    @Test
    public void zipcodeTest() {
        // TODO: test zipcode
    }

}
