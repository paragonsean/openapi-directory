/*
 * CallFire API Documentation
 * CallFire
 *
 * The version of the OpenAPI document: V2
 * Contact: support@callfire.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Batch;
import org.openapitools.client.model.CallCreateSound;
import org.openapitools.client.model.CampaignSound;
import org.openapitools.client.model.CampaignSoundPage;
import org.openapitools.client.model.ErrorResponse;
import java.io.File;
import org.openapitools.client.model.TextToSpeech;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CampaignsApi
 */
@Disabled
public class CampaignsApiTest {

    private final CampaignsApi api = new CampaignsApi();

    /**
     * Delete a specific sound
     *
     * Deletes a single campaign sound instance for a specific campaign sound id, this operation does not delete sound completely, it sets sound status to ARCHIVED which means that sound will no longer appear in &#39;find&#39; operation results, but still accessible via &#39;get&#39; operation
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteCampaignSoundTest() throws ApiException {
        Long id = null;
        api.deleteCampaignSound(id);
        // TODO: test validations
    }

    /**
     * Find sounds
     *
     * To find all campaign sounds which were created by user. Returns all sounds available to be used in campaigns
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void findCampaignSoundsTest() throws ApiException {
        Integer limit = null;
        Integer offset = null;
        String filter = null;
        Boolean includeArchived = null;
        Boolean includePending = null;
        Boolean includeScrubbed = null;
        String fields = null;
        CampaignSoundPage response = api.findCampaignSounds(limit, offset, filter, includeArchived, includePending, includeScrubbed, fields);
        // TODO: test validations
    }

    /**
     * Find a specific batch
     *
     * Returns a single Batch instance for a given batch id. This API is useful for determining the state of a validating batch
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCampaignBatchTest() throws ApiException {
        Long id = null;
        String fields = null;
        Batch response = api.getCampaignBatch(id, fields);
        // TODO: test validations
    }

    /**
     * Find a specific sound
     *
     * Returns a single CampaignSound instance for a given sound id in campaign. This is a meta data to the sounds. No audio data is returned from this API
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCampaignSoundTest() throws ApiException {
        Long id = null;
        String fields = null;
        CampaignSound response = api.getCampaignSound(id, fields);
        // TODO: test validations
    }

    /**
     * Download a MP3 sound
     *
     * Download the MP3 version of a hosted file. This is an audio data endpoint. Returns binary response of the &#39;audio/mpeg&#39; content type
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCampaignSoundDataMp3Test() throws ApiException {
        Long id = null;
        Object response = api.getCampaignSoundDataMp3(id);
        // TODO: test validations
    }

    /**
     * Download a WAV sound
     *
     * Download the WAV version of the hosted file. This is an audio data endpoint. Returns binary response of the &#39;audio/mpeg&#39; content type
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCampaignSoundDataWavTest() throws ApiException {
        Long id = null;
        Object response = api.getCampaignSoundDataWav(id);
        // TODO: test validations
    }

    /**
     * Add sound via call
     *
     * Use this API to create a sound via a phone call. Provide the required phone number in the CallCreateSound object inside the request, and user will receive a call shortly after with instructions on how to record a sound over the phone.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postCallCampaignSoundTest() throws ApiException {
        String fields = null;
        CallCreateSound callCreateSound = null;
        CampaignSound response = api.postCallCampaignSound(fields, callCreateSound);
        // TODO: test validations
    }

    /**
     * Add sound via file
     *
     * Create a campaign sound file via a supplied .mp3 or .wav file
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postFileCampaignSoundTest() throws ApiException {
        File _file = null;
        String fields = null;
        String name = null;
        CampaignSound response = api.postFileCampaignSound(_file, fields, name);
        // TODO: test validations
    }

    /**
     * Add sound via text-to-speech
     *
     * Use this API to create a sound file via a supplied string of text. Add a text in the TextToSpeech.message field, and pick a voice in the TextToSpeech.voice field. Available voices are: MALE1, FEMALE1, FEMALE2, SPANISH1, FRENCHCANADIAN1
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postTTSCampaignSoundTest() throws ApiException {
        String fields = null;
        TextToSpeech textToSpeech = null;
        CampaignSound response = api.postTTSCampaignSound(fields, textToSpeech);
        // TODO: test validations
    }

    /**
     * Update a batch
     *
     * Updates a single Batch instance, currently batch can only be turned \&quot;on/off\&quot;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateCampaignBatchTest() throws ApiException {
        Long id = null;
        Batch batch = null;
        api.updateCampaignBatch(id, batch);
        // TODO: test validations
    }

}
