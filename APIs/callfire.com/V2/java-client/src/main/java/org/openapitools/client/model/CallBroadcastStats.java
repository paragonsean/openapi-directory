/*
 * CallFire API Documentation
 * CallFire
 *
 * The version of the OpenAPI document: V2
 * Contact: support@callfire.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ~
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T09:59:09.684594-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CallBroadcastStats {
  public static final String SERIALIZED_NAME_ANSWERING_MACHINE_COUNT = "answeringMachineCount";
  @SerializedName(SERIALIZED_NAME_ANSWERING_MACHINE_COUNT)
  private Integer answeringMachineCount;

  public static final String SERIALIZED_NAME_BILLED_AMOUNT = "billedAmount";
  @SerializedName(SERIALIZED_NAME_BILLED_AMOUNT)
  private BigDecimal billedAmount;

  public static final String SERIALIZED_NAME_BILLED_DURATION = "billedDuration";
  @SerializedName(SERIALIZED_NAME_BILLED_DURATION)
  private Integer billedDuration;

  public static final String SERIALIZED_NAME_BUSY_COUNT = "busyCount";
  @SerializedName(SERIALIZED_NAME_BUSY_COUNT)
  private Integer busyCount;

  public static final String SERIALIZED_NAME_CALLS_ATTEMPTED = "callsAttempted";
  @SerializedName(SERIALIZED_NAME_CALLS_ATTEMPTED)
  private Integer callsAttempted;

  public static final String SERIALIZED_NAME_CALLS_AWAITING_REDIAL = "callsAwaitingRedial";
  @SerializedName(SERIALIZED_NAME_CALLS_AWAITING_REDIAL)
  private Integer callsAwaitingRedial;

  public static final String SERIALIZED_NAME_CALLS_DURATION = "callsDuration";
  @SerializedName(SERIALIZED_NAME_CALLS_DURATION)
  private Integer callsDuration;

  public static final String SERIALIZED_NAME_CALLS_LIVE_ANSWER = "callsLiveAnswer";
  @SerializedName(SERIALIZED_NAME_CALLS_LIVE_ANSWER)
  private Integer callsLiveAnswer;

  public static final String SERIALIZED_NAME_CALLS_PLACED = "callsPlaced";
  @SerializedName(SERIALIZED_NAME_CALLS_PLACED)
  private Integer callsPlaced;

  public static final String SERIALIZED_NAME_CALLS_REMAINING = "callsRemaining";
  @SerializedName(SERIALIZED_NAME_CALLS_REMAINING)
  private Integer callsRemaining;

  public static final String SERIALIZED_NAME_DIALED_COUNT = "dialedCount";
  @SerializedName(SERIALIZED_NAME_DIALED_COUNT)
  private Integer dialedCount;

  public static final String SERIALIZED_NAME_DO_NOT_CALL_COUNT = "doNotCallCount";
  @SerializedName(SERIALIZED_NAME_DO_NOT_CALL_COUNT)
  private Integer doNotCallCount;

  public static final String SERIALIZED_NAME_ERROR_COUNT = "errorCount";
  @SerializedName(SERIALIZED_NAME_ERROR_COUNT)
  private Integer errorCount;

  public static final String SERIALIZED_NAME_LIVE_COUNT = "liveCount";
  @SerializedName(SERIALIZED_NAME_LIVE_COUNT)
  private Integer liveCount;

  public static final String SERIALIZED_NAME_MISC_COUNT = "miscCount";
  @SerializedName(SERIALIZED_NAME_MISC_COUNT)
  private Integer miscCount;

  public static final String SERIALIZED_NAME_NO_ANSWER_COUNT = "noAnswerCount";
  @SerializedName(SERIALIZED_NAME_NO_ANSWER_COUNT)
  private Integer noAnswerCount;

  public static final String SERIALIZED_NAME_REMAINING_OUTBOUND_COUNT = "remainingOutboundCount";
  @SerializedName(SERIALIZED_NAME_REMAINING_OUTBOUND_COUNT)
  private Integer remainingOutboundCount;

  public static final String SERIALIZED_NAME_RESPONSE_RATE_PERCENT = "responseRatePercent";
  @SerializedName(SERIALIZED_NAME_RESPONSE_RATE_PERCENT)
  private Integer responseRatePercent;

  public static final String SERIALIZED_NAME_TOTAL_COUNT = "totalCount";
  @SerializedName(SERIALIZED_NAME_TOTAL_COUNT)
  private Integer totalCount;

  public static final String SERIALIZED_NAME_TOTAL_OUTBOUND_COUNT = "totalOutboundCount";
  @SerializedName(SERIALIZED_NAME_TOTAL_OUTBOUND_COUNT)
  private Integer totalOutboundCount;

  public static final String SERIALIZED_NAME_TRANSFER_COUNT = "transferCount";
  @SerializedName(SERIALIZED_NAME_TRANSFER_COUNT)
  private Integer transferCount;

  public CallBroadcastStats() {
  }

  public CallBroadcastStats answeringMachineCount(Integer answeringMachineCount) {
    this.answeringMachineCount = answeringMachineCount;
    return this;
  }

  /**
   * ~
   * @return answeringMachineCount
   */
  @javax.annotation.Nullable
  public Integer getAnsweringMachineCount() {
    return answeringMachineCount;
  }

  public void setAnsweringMachineCount(Integer answeringMachineCount) {
    this.answeringMachineCount = answeringMachineCount;
  }


  public CallBroadcastStats billedAmount(BigDecimal billedAmount) {
    this.billedAmount = billedAmount;
    return this;
  }

  /**
   * ~
   * @return billedAmount
   */
  @javax.annotation.Nullable
  public BigDecimal getBilledAmount() {
    return billedAmount;
  }

  public void setBilledAmount(BigDecimal billedAmount) {
    this.billedAmount = billedAmount;
  }


  public CallBroadcastStats billedDuration(Integer billedDuration) {
    this.billedDuration = billedDuration;
    return this;
  }

  /**
   * ~
   * @return billedDuration
   */
  @javax.annotation.Nullable
  public Integer getBilledDuration() {
    return billedDuration;
  }

  public void setBilledDuration(Integer billedDuration) {
    this.billedDuration = billedDuration;
  }


  public CallBroadcastStats busyCount(Integer busyCount) {
    this.busyCount = busyCount;
    return this;
  }

  /**
   * ~
   * @return busyCount
   */
  @javax.annotation.Nullable
  public Integer getBusyCount() {
    return busyCount;
  }

  public void setBusyCount(Integer busyCount) {
    this.busyCount = busyCount;
  }


  public CallBroadcastStats callsAttempted(Integer callsAttempted) {
    this.callsAttempted = callsAttempted;
    return this;
  }

  /**
   * ~
   * @return callsAttempted
   */
  @javax.annotation.Nullable
  public Integer getCallsAttempted() {
    return callsAttempted;
  }

  public void setCallsAttempted(Integer callsAttempted) {
    this.callsAttempted = callsAttempted;
  }


  public CallBroadcastStats callsAwaitingRedial(Integer callsAwaitingRedial) {
    this.callsAwaitingRedial = callsAwaitingRedial;
    return this;
  }

  /**
   * ~
   * @return callsAwaitingRedial
   */
  @javax.annotation.Nullable
  public Integer getCallsAwaitingRedial() {
    return callsAwaitingRedial;
  }

  public void setCallsAwaitingRedial(Integer callsAwaitingRedial) {
    this.callsAwaitingRedial = callsAwaitingRedial;
  }


  public CallBroadcastStats callsDuration(Integer callsDuration) {
    this.callsDuration = callsDuration;
    return this;
  }

  /**
   * ~
   * @return callsDuration
   */
  @javax.annotation.Nullable
  public Integer getCallsDuration() {
    return callsDuration;
  }

  public void setCallsDuration(Integer callsDuration) {
    this.callsDuration = callsDuration;
  }


  public CallBroadcastStats callsLiveAnswer(Integer callsLiveAnswer) {
    this.callsLiveAnswer = callsLiveAnswer;
    return this;
  }

  /**
   * ~
   * @return callsLiveAnswer
   */
  @javax.annotation.Nullable
  public Integer getCallsLiveAnswer() {
    return callsLiveAnswer;
  }

  public void setCallsLiveAnswer(Integer callsLiveAnswer) {
    this.callsLiveAnswer = callsLiveAnswer;
  }


  public CallBroadcastStats callsPlaced(Integer callsPlaced) {
    this.callsPlaced = callsPlaced;
    return this;
  }

  /**
   * ~
   * @return callsPlaced
   */
  @javax.annotation.Nullable
  public Integer getCallsPlaced() {
    return callsPlaced;
  }

  public void setCallsPlaced(Integer callsPlaced) {
    this.callsPlaced = callsPlaced;
  }


  public CallBroadcastStats callsRemaining(Integer callsRemaining) {
    this.callsRemaining = callsRemaining;
    return this;
  }

  /**
   * ~
   * @return callsRemaining
   */
  @javax.annotation.Nullable
  public Integer getCallsRemaining() {
    return callsRemaining;
  }

  public void setCallsRemaining(Integer callsRemaining) {
    this.callsRemaining = callsRemaining;
  }


  public CallBroadcastStats dialedCount(Integer dialedCount) {
    this.dialedCount = dialedCount;
    return this;
  }

  /**
   * ~
   * @return dialedCount
   */
  @javax.annotation.Nullable
  public Integer getDialedCount() {
    return dialedCount;
  }

  public void setDialedCount(Integer dialedCount) {
    this.dialedCount = dialedCount;
  }


  public CallBroadcastStats doNotCallCount(Integer doNotCallCount) {
    this.doNotCallCount = doNotCallCount;
    return this;
  }

  /**
   * ~
   * @return doNotCallCount
   */
  @javax.annotation.Nullable
  public Integer getDoNotCallCount() {
    return doNotCallCount;
  }

  public void setDoNotCallCount(Integer doNotCallCount) {
    this.doNotCallCount = doNotCallCount;
  }


  public CallBroadcastStats errorCount(Integer errorCount) {
    this.errorCount = errorCount;
    return this;
  }

  /**
   * ~
   * @return errorCount
   */
  @javax.annotation.Nullable
  public Integer getErrorCount() {
    return errorCount;
  }

  public void setErrorCount(Integer errorCount) {
    this.errorCount = errorCount;
  }


  public CallBroadcastStats liveCount(Integer liveCount) {
    this.liveCount = liveCount;
    return this;
  }

  /**
   * ~
   * @return liveCount
   */
  @javax.annotation.Nullable
  public Integer getLiveCount() {
    return liveCount;
  }

  public void setLiveCount(Integer liveCount) {
    this.liveCount = liveCount;
  }


  public CallBroadcastStats miscCount(Integer miscCount) {
    this.miscCount = miscCount;
    return this;
  }

  /**
   * ~
   * @return miscCount
   */
  @javax.annotation.Nullable
  public Integer getMiscCount() {
    return miscCount;
  }

  public void setMiscCount(Integer miscCount) {
    this.miscCount = miscCount;
  }


  public CallBroadcastStats noAnswerCount(Integer noAnswerCount) {
    this.noAnswerCount = noAnswerCount;
    return this;
  }

  /**
   * ~
   * @return noAnswerCount
   */
  @javax.annotation.Nullable
  public Integer getNoAnswerCount() {
    return noAnswerCount;
  }

  public void setNoAnswerCount(Integer noAnswerCount) {
    this.noAnswerCount = noAnswerCount;
  }


  public CallBroadcastStats remainingOutboundCount(Integer remainingOutboundCount) {
    this.remainingOutboundCount = remainingOutboundCount;
    return this;
  }

  /**
   * ~
   * @return remainingOutboundCount
   */
  @javax.annotation.Nullable
  public Integer getRemainingOutboundCount() {
    return remainingOutboundCount;
  }

  public void setRemainingOutboundCount(Integer remainingOutboundCount) {
    this.remainingOutboundCount = remainingOutboundCount;
  }


  public CallBroadcastStats responseRatePercent(Integer responseRatePercent) {
    this.responseRatePercent = responseRatePercent;
    return this;
  }

  /**
   * ~
   * @return responseRatePercent
   */
  @javax.annotation.Nullable
  public Integer getResponseRatePercent() {
    return responseRatePercent;
  }

  public void setResponseRatePercent(Integer responseRatePercent) {
    this.responseRatePercent = responseRatePercent;
  }


  public CallBroadcastStats totalCount(Integer totalCount) {
    this.totalCount = totalCount;
    return this;
  }

  /**
   * ~
   * @return totalCount
   */
  @javax.annotation.Nullable
  public Integer getTotalCount() {
    return totalCount;
  }

  public void setTotalCount(Integer totalCount) {
    this.totalCount = totalCount;
  }


  public CallBroadcastStats totalOutboundCount(Integer totalOutboundCount) {
    this.totalOutboundCount = totalOutboundCount;
    return this;
  }

  /**
   * ~
   * @return totalOutboundCount
   */
  @javax.annotation.Nullable
  public Integer getTotalOutboundCount() {
    return totalOutboundCount;
  }

  public void setTotalOutboundCount(Integer totalOutboundCount) {
    this.totalOutboundCount = totalOutboundCount;
  }


  public CallBroadcastStats transferCount(Integer transferCount) {
    this.transferCount = transferCount;
    return this;
  }

  /**
   * ~
   * @return transferCount
   */
  @javax.annotation.Nullable
  public Integer getTransferCount() {
    return transferCount;
  }

  public void setTransferCount(Integer transferCount) {
    this.transferCount = transferCount;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CallBroadcastStats callBroadcastStats = (CallBroadcastStats) o;
    return Objects.equals(this.answeringMachineCount, callBroadcastStats.answeringMachineCount) &&
        Objects.equals(this.billedAmount, callBroadcastStats.billedAmount) &&
        Objects.equals(this.billedDuration, callBroadcastStats.billedDuration) &&
        Objects.equals(this.busyCount, callBroadcastStats.busyCount) &&
        Objects.equals(this.callsAttempted, callBroadcastStats.callsAttempted) &&
        Objects.equals(this.callsAwaitingRedial, callBroadcastStats.callsAwaitingRedial) &&
        Objects.equals(this.callsDuration, callBroadcastStats.callsDuration) &&
        Objects.equals(this.callsLiveAnswer, callBroadcastStats.callsLiveAnswer) &&
        Objects.equals(this.callsPlaced, callBroadcastStats.callsPlaced) &&
        Objects.equals(this.callsRemaining, callBroadcastStats.callsRemaining) &&
        Objects.equals(this.dialedCount, callBroadcastStats.dialedCount) &&
        Objects.equals(this.doNotCallCount, callBroadcastStats.doNotCallCount) &&
        Objects.equals(this.errorCount, callBroadcastStats.errorCount) &&
        Objects.equals(this.liveCount, callBroadcastStats.liveCount) &&
        Objects.equals(this.miscCount, callBroadcastStats.miscCount) &&
        Objects.equals(this.noAnswerCount, callBroadcastStats.noAnswerCount) &&
        Objects.equals(this.remainingOutboundCount, callBroadcastStats.remainingOutboundCount) &&
        Objects.equals(this.responseRatePercent, callBroadcastStats.responseRatePercent) &&
        Objects.equals(this.totalCount, callBroadcastStats.totalCount) &&
        Objects.equals(this.totalOutboundCount, callBroadcastStats.totalOutboundCount) &&
        Objects.equals(this.transferCount, callBroadcastStats.transferCount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(answeringMachineCount, billedAmount, billedDuration, busyCount, callsAttempted, callsAwaitingRedial, callsDuration, callsLiveAnswer, callsPlaced, callsRemaining, dialedCount, doNotCallCount, errorCount, liveCount, miscCount, noAnswerCount, remainingOutboundCount, responseRatePercent, totalCount, totalOutboundCount, transferCount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CallBroadcastStats {\n");
    sb.append("    answeringMachineCount: ").append(toIndentedString(answeringMachineCount)).append("\n");
    sb.append("    billedAmount: ").append(toIndentedString(billedAmount)).append("\n");
    sb.append("    billedDuration: ").append(toIndentedString(billedDuration)).append("\n");
    sb.append("    busyCount: ").append(toIndentedString(busyCount)).append("\n");
    sb.append("    callsAttempted: ").append(toIndentedString(callsAttempted)).append("\n");
    sb.append("    callsAwaitingRedial: ").append(toIndentedString(callsAwaitingRedial)).append("\n");
    sb.append("    callsDuration: ").append(toIndentedString(callsDuration)).append("\n");
    sb.append("    callsLiveAnswer: ").append(toIndentedString(callsLiveAnswer)).append("\n");
    sb.append("    callsPlaced: ").append(toIndentedString(callsPlaced)).append("\n");
    sb.append("    callsRemaining: ").append(toIndentedString(callsRemaining)).append("\n");
    sb.append("    dialedCount: ").append(toIndentedString(dialedCount)).append("\n");
    sb.append("    doNotCallCount: ").append(toIndentedString(doNotCallCount)).append("\n");
    sb.append("    errorCount: ").append(toIndentedString(errorCount)).append("\n");
    sb.append("    liveCount: ").append(toIndentedString(liveCount)).append("\n");
    sb.append("    miscCount: ").append(toIndentedString(miscCount)).append("\n");
    sb.append("    noAnswerCount: ").append(toIndentedString(noAnswerCount)).append("\n");
    sb.append("    remainingOutboundCount: ").append(toIndentedString(remainingOutboundCount)).append("\n");
    sb.append("    responseRatePercent: ").append(toIndentedString(responseRatePercent)).append("\n");
    sb.append("    totalCount: ").append(toIndentedString(totalCount)).append("\n");
    sb.append("    totalOutboundCount: ").append(toIndentedString(totalOutboundCount)).append("\n");
    sb.append("    transferCount: ").append(toIndentedString(transferCount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("answeringMachineCount");
    openapiFields.add("billedAmount");
    openapiFields.add("billedDuration");
    openapiFields.add("busyCount");
    openapiFields.add("callsAttempted");
    openapiFields.add("callsAwaitingRedial");
    openapiFields.add("callsDuration");
    openapiFields.add("callsLiveAnswer");
    openapiFields.add("callsPlaced");
    openapiFields.add("callsRemaining");
    openapiFields.add("dialedCount");
    openapiFields.add("doNotCallCount");
    openapiFields.add("errorCount");
    openapiFields.add("liveCount");
    openapiFields.add("miscCount");
    openapiFields.add("noAnswerCount");
    openapiFields.add("remainingOutboundCount");
    openapiFields.add("responseRatePercent");
    openapiFields.add("totalCount");
    openapiFields.add("totalOutboundCount");
    openapiFields.add("transferCount");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CallBroadcastStats
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CallBroadcastStats.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CallBroadcastStats is not found in the empty JSON string", CallBroadcastStats.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CallBroadcastStats.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CallBroadcastStats` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CallBroadcastStats.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CallBroadcastStats' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CallBroadcastStats> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CallBroadcastStats.class));

       return (TypeAdapter<T>) new TypeAdapter<CallBroadcastStats>() {
           @Override
           public void write(JsonWriter out, CallBroadcastStats value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CallBroadcastStats read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CallBroadcastStats given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CallBroadcastStats
   * @throws IOException if the JSON string is invalid with respect to CallBroadcastStats
   */
  public static CallBroadcastStats fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CallBroadcastStats.class);
  }

  /**
   * Convert an instance of CallBroadcastStats to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

