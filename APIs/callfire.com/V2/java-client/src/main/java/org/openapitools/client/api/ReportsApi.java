/*
 * CallFire API Documentation
 * CallFire
 *
 * The version of the OpenAPI document: V2
 * Contact: support@callfire.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.ErrorResponse;
import org.openapitools.client.model.PageDeliveryReport;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ReportsApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public ReportsApi() {
        this(Configuration.getDefaultApiClient());
    }

    public ReportsApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for getDeliveryReports
     * @param startDate ~ (optional)
     * @param endDate ~ (optional)
     * @param limit To set the maximum number of records to return in a paged list response. The default is 100 (optional, default to 100)
     * @param offset Offset to the start of a given page. The default is 0. Check [pagination](https://developers.callfire.com/docs.html#pagination) page for more information about pagination in CallFire API. (optional, default to 0)
     * @param campaignId ~ (optional)
     * @param fromNumber ~ (optional)
     * @param toNumber ~ (optional)
     * @param deliveryCategory ~ (optional)
     * @param deliveryState ~ (optional)
     * @param carrier ~ (optional)
     * @param messageText ~ (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> successful operation </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad request </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Unauthorized </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Forbidden </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not found </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getDeliveryReportsCall(String startDate, String endDate, Integer limit, Integer offset, Long campaignId, String fromNumber, String toNumber, String deliveryCategory, String deliveryState, String carrier, String messageText, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/reports/delivery";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (startDate != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("startDate", startDate));
        }

        if (endDate != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("endDate", endDate));
        }

        if (limit != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("limit", limit));
        }

        if (offset != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("offset", offset));
        }

        if (campaignId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("campaignId", campaignId));
        }

        if (fromNumber != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("fromNumber", fromNumber));
        }

        if (toNumber != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("toNumber", toNumber));
        }

        if (deliveryCategory != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("deliveryCategory", deliveryCategory));
        }

        if (deliveryState != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("deliveryState", deliveryState));
        }

        if (carrier != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("carrier", carrier));
        }

        if (messageText != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("messageText", messageText));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "basicAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getDeliveryReportsValidateBeforeCall(String startDate, String endDate, Integer limit, Integer offset, Long campaignId, String fromNumber, String toNumber, String deliveryCategory, String deliveryState, String carrier, String messageText, final ApiCallback _callback) throws ApiException {
        return getDeliveryReportsCall(startDate, endDate, limit, offset, campaignId, fromNumber, toNumber, deliveryCategory, deliveryState, carrier, messageText, _callback);

    }

    /**
     * Get delivery reports by ad hoc criteria
     * Get delivery reports
     * @param startDate ~ (optional)
     * @param endDate ~ (optional)
     * @param limit To set the maximum number of records to return in a paged list response. The default is 100 (optional, default to 100)
     * @param offset Offset to the start of a given page. The default is 0. Check [pagination](https://developers.callfire.com/docs.html#pagination) page for more information about pagination in CallFire API. (optional, default to 0)
     * @param campaignId ~ (optional)
     * @param fromNumber ~ (optional)
     * @param toNumber ~ (optional)
     * @param deliveryCategory ~ (optional)
     * @param deliveryState ~ (optional)
     * @param carrier ~ (optional)
     * @param messageText ~ (optional)
     * @return PageDeliveryReport
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> successful operation </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad request </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Unauthorized </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Forbidden </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not found </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error </td><td>  -  </td></tr>
     </table>
     */
    public PageDeliveryReport getDeliveryReports(String startDate, String endDate, Integer limit, Integer offset, Long campaignId, String fromNumber, String toNumber, String deliveryCategory, String deliveryState, String carrier, String messageText) throws ApiException {
        ApiResponse<PageDeliveryReport> localVarResp = getDeliveryReportsWithHttpInfo(startDate, endDate, limit, offset, campaignId, fromNumber, toNumber, deliveryCategory, deliveryState, carrier, messageText);
        return localVarResp.getData();
    }

    /**
     * Get delivery reports by ad hoc criteria
     * Get delivery reports
     * @param startDate ~ (optional)
     * @param endDate ~ (optional)
     * @param limit To set the maximum number of records to return in a paged list response. The default is 100 (optional, default to 100)
     * @param offset Offset to the start of a given page. The default is 0. Check [pagination](https://developers.callfire.com/docs.html#pagination) page for more information about pagination in CallFire API. (optional, default to 0)
     * @param campaignId ~ (optional)
     * @param fromNumber ~ (optional)
     * @param toNumber ~ (optional)
     * @param deliveryCategory ~ (optional)
     * @param deliveryState ~ (optional)
     * @param carrier ~ (optional)
     * @param messageText ~ (optional)
     * @return ApiResponse&lt;PageDeliveryReport&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> successful operation </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad request </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Unauthorized </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Forbidden </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not found </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<PageDeliveryReport> getDeliveryReportsWithHttpInfo(String startDate, String endDate, Integer limit, Integer offset, Long campaignId, String fromNumber, String toNumber, String deliveryCategory, String deliveryState, String carrier, String messageText) throws ApiException {
        okhttp3.Call localVarCall = getDeliveryReportsValidateBeforeCall(startDate, endDate, limit, offset, campaignId, fromNumber, toNumber, deliveryCategory, deliveryState, carrier, messageText, null);
        Type localVarReturnType = new TypeToken<PageDeliveryReport>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Get delivery reports by ad hoc criteria (asynchronously)
     * Get delivery reports
     * @param startDate ~ (optional)
     * @param endDate ~ (optional)
     * @param limit To set the maximum number of records to return in a paged list response. The default is 100 (optional, default to 100)
     * @param offset Offset to the start of a given page. The default is 0. Check [pagination](https://developers.callfire.com/docs.html#pagination) page for more information about pagination in CallFire API. (optional, default to 0)
     * @param campaignId ~ (optional)
     * @param fromNumber ~ (optional)
     * @param toNumber ~ (optional)
     * @param deliveryCategory ~ (optional)
     * @param deliveryState ~ (optional)
     * @param carrier ~ (optional)
     * @param messageText ~ (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> successful operation </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad request </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Unauthorized </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Forbidden </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not found </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getDeliveryReportsAsync(String startDate, String endDate, Integer limit, Integer offset, Long campaignId, String fromNumber, String toNumber, String deliveryCategory, String deliveryState, String carrier, String messageText, final ApiCallback<PageDeliveryReport> _callback) throws ApiException {

        okhttp3.Call localVarCall = getDeliveryReportsValidateBeforeCall(startDate, endDate, limit, offset, campaignId, fromNumber, toNumber, deliveryCategory, deliveryState, carrier, messageText, _callback);
        Type localVarReturnType = new TypeToken<PageDeliveryReport>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
