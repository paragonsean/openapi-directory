/**
 * CallFire API Documentation
 * CallFire
 *
 * The version of the OpenAPI document: V2
 * Contact: support@callfire.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAddContactListContactsRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAddContactListContactsRequest::OAIAddContactListContactsRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAddContactListContactsRequest::OAIAddContactListContactsRequest() {
    this->initializeModel();
}

OAIAddContactListContactsRequest::~OAIAddContactListContactsRequest() {}

void OAIAddContactListContactsRequest::initializeModel() {

    m_contact_ids_isSet = false;
    m_contact_ids_isValid = false;

    m_contact_numbers_isSet = false;
    m_contact_numbers_isValid = false;

    m_contact_numbers_field_isSet = false;
    m_contact_numbers_field_isValid = false;

    m_contacts_isSet = false;
    m_contacts_isValid = false;

    m_use_custom_fields_isSet = false;
    m_use_custom_fields_isValid = false;
}

void OAIAddContactListContactsRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAddContactListContactsRequest::fromJsonObject(QJsonObject json) {

    m_contact_ids_isValid = ::OpenAPI::fromJsonValue(m_contact_ids, json[QString("contactIds")]);
    m_contact_ids_isSet = !json[QString("contactIds")].isNull() && m_contact_ids_isValid;

    m_contact_numbers_isValid = ::OpenAPI::fromJsonValue(m_contact_numbers, json[QString("contactNumbers")]);
    m_contact_numbers_isSet = !json[QString("contactNumbers")].isNull() && m_contact_numbers_isValid;

    m_contact_numbers_field_isValid = ::OpenAPI::fromJsonValue(m_contact_numbers_field, json[QString("contactNumbersField")]);
    m_contact_numbers_field_isSet = !json[QString("contactNumbersField")].isNull() && m_contact_numbers_field_isValid;

    m_contacts_isValid = ::OpenAPI::fromJsonValue(m_contacts, json[QString("contacts")]);
    m_contacts_isSet = !json[QString("contacts")].isNull() && m_contacts_isValid;

    m_use_custom_fields_isValid = ::OpenAPI::fromJsonValue(m_use_custom_fields, json[QString("useCustomFields")]);
    m_use_custom_fields_isSet = !json[QString("useCustomFields")].isNull() && m_use_custom_fields_isValid;
}

QString OAIAddContactListContactsRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAddContactListContactsRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_contact_ids.size() > 0) {
        obj.insert(QString("contactIds"), ::OpenAPI::toJsonValue(m_contact_ids));
    }
    if (m_contact_numbers.size() > 0) {
        obj.insert(QString("contactNumbers"), ::OpenAPI::toJsonValue(m_contact_numbers));
    }
    if (m_contact_numbers_field_isSet) {
        obj.insert(QString("contactNumbersField"), ::OpenAPI::toJsonValue(m_contact_numbers_field));
    }
    if (m_contacts.size() > 0) {
        obj.insert(QString("contacts"), ::OpenAPI::toJsonValue(m_contacts));
    }
    if (m_use_custom_fields_isSet) {
        obj.insert(QString("useCustomFields"), ::OpenAPI::toJsonValue(m_use_custom_fields));
    }
    return obj;
}

QList<qint64> OAIAddContactListContactsRequest::getContactIds() const {
    return m_contact_ids;
}
void OAIAddContactListContactsRequest::setContactIds(const QList<qint64> &contact_ids) {
    m_contact_ids = contact_ids;
    m_contact_ids_isSet = true;
}

bool OAIAddContactListContactsRequest::is_contact_ids_Set() const{
    return m_contact_ids_isSet;
}

bool OAIAddContactListContactsRequest::is_contact_ids_Valid() const{
    return m_contact_ids_isValid;
}

QList<QString> OAIAddContactListContactsRequest::getContactNumbers() const {
    return m_contact_numbers;
}
void OAIAddContactListContactsRequest::setContactNumbers(const QList<QString> &contact_numbers) {
    m_contact_numbers = contact_numbers;
    m_contact_numbers_isSet = true;
}

bool OAIAddContactListContactsRequest::is_contact_numbers_Set() const{
    return m_contact_numbers_isSet;
}

bool OAIAddContactListContactsRequest::is_contact_numbers_Valid() const{
    return m_contact_numbers_isValid;
}

QString OAIAddContactListContactsRequest::getContactNumbersField() const {
    return m_contact_numbers_field;
}
void OAIAddContactListContactsRequest::setContactNumbersField(const QString &contact_numbers_field) {
    m_contact_numbers_field = contact_numbers_field;
    m_contact_numbers_field_isSet = true;
}

bool OAIAddContactListContactsRequest::is_contact_numbers_field_Set() const{
    return m_contact_numbers_field_isSet;
}

bool OAIAddContactListContactsRequest::is_contact_numbers_field_Valid() const{
    return m_contact_numbers_field_isValid;
}

QList<OAIContact> OAIAddContactListContactsRequest::getContacts() const {
    return m_contacts;
}
void OAIAddContactListContactsRequest::setContacts(const QList<OAIContact> &contacts) {
    m_contacts = contacts;
    m_contacts_isSet = true;
}

bool OAIAddContactListContactsRequest::is_contacts_Set() const{
    return m_contacts_isSet;
}

bool OAIAddContactListContactsRequest::is_contacts_Valid() const{
    return m_contacts_isValid;
}

bool OAIAddContactListContactsRequest::isUseCustomFields() const {
    return m_use_custom_fields;
}
void OAIAddContactListContactsRequest::setUseCustomFields(const bool &use_custom_fields) {
    m_use_custom_fields = use_custom_fields;
    m_use_custom_fields_isSet = true;
}

bool OAIAddContactListContactsRequest::is_use_custom_fields_Set() const{
    return m_use_custom_fields_isSet;
}

bool OAIAddContactListContactsRequest::is_use_custom_fields_Valid() const{
    return m_use_custom_fields_isValid;
}

bool OAIAddContactListContactsRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_contact_ids.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_contact_numbers.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_contact_numbers_field_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_contacts.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_use_custom_fields_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAddContactListContactsRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
