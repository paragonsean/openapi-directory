/**
 * CallFire API Documentation
 * CallFire
 *
 * The version of the OpenAPI document: V2
 * Contact: support@callfire.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIKeyword.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIKeyword::OAIKeyword(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIKeyword::OAIKeyword() {
    this->initializeModel();
}

OAIKeyword::~OAIKeyword() {}

void OAIKeyword::initializeModel() {

    m_keyword_isSet = false;
    m_keyword_isValid = false;

    m_number_isSet = false;
    m_number_isValid = false;

    m_short_code_isSet = false;
    m_short_code_isValid = false;
}

void OAIKeyword::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIKeyword::fromJsonObject(QJsonObject json) {

    m_keyword_isValid = ::OpenAPI::fromJsonValue(m_keyword, json[QString("keyword")]);
    m_keyword_isSet = !json[QString("keyword")].isNull() && m_keyword_isValid;

    m_number_isValid = ::OpenAPI::fromJsonValue(m_number, json[QString("number")]);
    m_number_isSet = !json[QString("number")].isNull() && m_number_isValid;

    m_short_code_isValid = ::OpenAPI::fromJsonValue(m_short_code, json[QString("shortCode")]);
    m_short_code_isSet = !json[QString("shortCode")].isNull() && m_short_code_isValid;
}

QString OAIKeyword::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIKeyword::asJsonObject() const {
    QJsonObject obj;
    if (m_keyword_isSet) {
        obj.insert(QString("keyword"), ::OpenAPI::toJsonValue(m_keyword));
    }
    if (m_number_isSet) {
        obj.insert(QString("number"), ::OpenAPI::toJsonValue(m_number));
    }
    if (m_short_code_isSet) {
        obj.insert(QString("shortCode"), ::OpenAPI::toJsonValue(m_short_code));
    }
    return obj;
}

QString OAIKeyword::getKeyword() const {
    return m_keyword;
}
void OAIKeyword::setKeyword(const QString &keyword) {
    m_keyword = keyword;
    m_keyword_isSet = true;
}

bool OAIKeyword::is_keyword_Set() const{
    return m_keyword_isSet;
}

bool OAIKeyword::is_keyword_Valid() const{
    return m_keyword_isValid;
}

QString OAIKeyword::getNumber() const {
    return m_number;
}
void OAIKeyword::setNumber(const QString &number) {
    m_number = number;
    m_number_isSet = true;
}

bool OAIKeyword::is_number_Set() const{
    return m_number_isSet;
}

bool OAIKeyword::is_number_Valid() const{
    return m_number_isValid;
}

QString OAIKeyword::getShortCode() const {
    return m_short_code;
}
void OAIKeyword::setShortCode(const QString &short_code) {
    m_short_code = short_code;
    m_short_code_isSet = true;
}

bool OAIKeyword::is_short_code_Set() const{
    return m_short_code_isSet;
}

bool OAIKeyword::is_short_code_Valid() const{
    return m_short_code_isValid;
}

bool OAIKeyword::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_keyword_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_short_code_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIKeyword::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
