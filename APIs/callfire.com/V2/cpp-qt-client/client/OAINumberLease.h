/**
 * CallFire API Documentation
 * CallFire
 *
 * The version of the OpenAPI document: V2
 * Contact: support@callfire.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAINumberLease.h
 *
 * Represents a lease object for a given phone number
 */

#ifndef OAINumberLease_H
#define OAINumberLease_H

#include <QJsonObject>

#include "OAIRegion.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIRegion;

class OAINumberLease : public OAIObject {
public:
    OAINumberLease();
    OAINumberLease(QString json);
    ~OAINumberLease() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isAutoRenew() const;
    void setAutoRenew(const bool &auto_renew);
    bool is_auto_renew_Set() const;
    bool is_auto_renew_Valid() const;

    QString getCallFeatureStatus() const;
    void setCallFeatureStatus(const QString &call_feature_status);
    bool is_call_feature_status_Set() const;
    bool is_call_feature_status_Valid() const;

    QList<QString> getLabels() const;
    void setLabels(const QList<QString> &labels);
    bool is_labels_Set() const;
    bool is_labels_Valid() const;

    qint64 getLeaseBegin() const;
    void setLeaseBegin(const qint64 &lease_begin);
    bool is_lease_begin_Set() const;
    bool is_lease_begin_Valid() const;

    qint64 getLeaseEnd() const;
    void setLeaseEnd(const qint64 &lease_end);
    bool is_lease_end_Set() const;
    bool is_lease_end_Valid() const;

    QString getNationalFormat() const;
    void setNationalFormat(const QString &national_format);
    bool is_national_format_Set() const;
    bool is_national_format_Valid() const;

    QString getNumber() const;
    void setNumber(const QString &number);
    bool is_number_Set() const;
    bool is_number_Valid() const;

    OAIRegion getRegion() const;
    void setRegion(const OAIRegion &region);
    bool is_region_Set() const;
    bool is_region_Valid() const;

    bool isSendEmailOnCreate() const;
    void setSendEmailOnCreate(const bool &send_email_on_create);
    bool is_send_email_on_create_Set() const;
    bool is_send_email_on_create_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getTextFeatureStatus() const;
    void setTextFeatureStatus(const QString &text_feature_status);
    bool is_text_feature_status_Set() const;
    bool is_text_feature_status_Valid() const;

    bool isTollFree() const;
    void setTollFree(const bool &toll_free);
    bool is_toll_free_Set() const;
    bool is_toll_free_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_auto_renew;
    bool m_auto_renew_isSet;
    bool m_auto_renew_isValid;

    QString m_call_feature_status;
    bool m_call_feature_status_isSet;
    bool m_call_feature_status_isValid;

    QList<QString> m_labels;
    bool m_labels_isSet;
    bool m_labels_isValid;

    qint64 m_lease_begin;
    bool m_lease_begin_isSet;
    bool m_lease_begin_isValid;

    qint64 m_lease_end;
    bool m_lease_end_isSet;
    bool m_lease_end_isValid;

    QString m_national_format;
    bool m_national_format_isSet;
    bool m_national_format_isValid;

    QString m_number;
    bool m_number_isSet;
    bool m_number_isValid;

    OAIRegion m_region;
    bool m_region_isSet;
    bool m_region_isValid;

    bool m_send_email_on_create;
    bool m_send_email_on_create_isSet;
    bool m_send_email_on_create_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_text_feature_status;
    bool m_text_feature_status_isSet;
    bool m_text_feature_status_isValid;

    bool m_toll_free;
    bool m_toll_free_isSet;
    bool m_toll_free_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINumberLease)

#endif // OAINumberLease_H
