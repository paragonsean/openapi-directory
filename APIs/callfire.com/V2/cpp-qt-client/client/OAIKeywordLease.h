/**
 * CallFire API Documentation
 * CallFire
 *
 * The version of the OpenAPI document: V2
 * Contact: support@callfire.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIKeywordLease.h
 *
 * Represents a lease object for a given keyword
 */

#ifndef OAIKeywordLease_H
#define OAIKeywordLease_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIKeywordLease : public OAIObject {
public:
    OAIKeywordLease();
    OAIKeywordLease(QString json);
    ~OAIKeywordLease() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isAutoRenew() const;
    void setAutoRenew(const bool &auto_renew);
    bool is_auto_renew_Set() const;
    bool is_auto_renew_Valid() const;

    qint64 getContactListId() const;
    void setContactListId(const qint64 &contact_list_id);
    bool is_contact_list_id_Set() const;
    bool is_contact_list_id_Valid() const;

    bool isDoubleOptInEnabled() const;
    void setDoubleOptInEnabled(const bool &double_opt_in_enabled);
    bool is_double_opt_in_enabled_Set() const;
    bool is_double_opt_in_enabled_Valid() const;

    QString getKeyword() const;
    void setKeyword(const QString &keyword);
    bool is_keyword_Set() const;
    bool is_keyword_Valid() const;

    QList<QString> getLabels() const;
    void setLabels(const QList<QString> &labels);
    bool is_labels_Set() const;
    bool is_labels_Valid() const;

    qint64 getLeaseBegin() const;
    void setLeaseBegin(const qint64 &lease_begin);
    bool is_lease_begin_Set() const;
    bool is_lease_begin_Valid() const;

    qint64 getLeaseEnd() const;
    void setLeaseEnd(const qint64 &lease_end);
    bool is_lease_end_Set() const;
    bool is_lease_end_Valid() const;

    QString getNumber() const;
    void setNumber(const QString &number);
    bool is_number_Set() const;
    bool is_number_Valid() const;

    QString getOptInConfirmationMessage() const;
    void setOptInConfirmationMessage(const QString &opt_in_confirmation_message);
    bool is_opt_in_confirmation_message_Set() const;
    bool is_opt_in_confirmation_message_Valid() const;

    QString getShortCode() const;
    void setShortCode(const QString &short_code);
    bool is_short_code_Set() const;
    bool is_short_code_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_auto_renew;
    bool m_auto_renew_isSet;
    bool m_auto_renew_isValid;

    qint64 m_contact_list_id;
    bool m_contact_list_id_isSet;
    bool m_contact_list_id_isValid;

    bool m_double_opt_in_enabled;
    bool m_double_opt_in_enabled_isSet;
    bool m_double_opt_in_enabled_isValid;

    QString m_keyword;
    bool m_keyword_isSet;
    bool m_keyword_isValid;

    QList<QString> m_labels;
    bool m_labels_isSet;
    bool m_labels_isValid;

    qint64 m_lease_begin;
    bool m_lease_begin_isSet;
    bool m_lease_begin_isValid;

    qint64 m_lease_end;
    bool m_lease_end_isSet;
    bool m_lease_end_isValid;

    QString m_number;
    bool m_number_isSet;
    bool m_number_isValid;

    QString m_opt_in_confirmation_message;
    bool m_opt_in_confirmation_message_isSet;
    bool m_opt_in_confirmation_message_isValid;

    QString m_short_code;
    bool m_short_code_isSet;
    bool m_short_code_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIKeywordLease)

#endif // OAIKeywordLease_H
