/**
 * CallFire API Documentation
 * CallFire
 *
 * The version of the OpenAPI document: V2
 * Contact: support@callfire.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIContact.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIContact::OAIContact(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIContact::OAIContact() {
    this->initializeModel();
}

OAIContact::~OAIContact() {}

void OAIContact::initializeModel() {

    m_deleted_isSet = false;
    m_deleted_isValid = false;

    m_external_id_isSet = false;
    m_external_id_isValid = false;

    m_external_system_isSet = false;
    m_external_system_isValid = false;

    m_extra_phone1_isSet = false;
    m_extra_phone1_isValid = false;

    m_extra_phone2_isSet = false;
    m_extra_phone2_isValid = false;

    m_extra_phone3_isSet = false;
    m_extra_phone3_isValid = false;

    m_first_name_isSet = false;
    m_first_name_isValid = false;

    m_home_phone_isSet = false;
    m_home_phone_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_last_name_isSet = false;
    m_last_name_isValid = false;

    m_mobile_phone_isSet = false;
    m_mobile_phone_isValid = false;

    m_properties_isSet = false;
    m_properties_isValid = false;

    m_work_phone_isSet = false;
    m_work_phone_isValid = false;

    m_zipcode_isSet = false;
    m_zipcode_isValid = false;
}

void OAIContact::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIContact::fromJsonObject(QJsonObject json) {

    m_deleted_isValid = ::OpenAPI::fromJsonValue(m_deleted, json[QString("deleted")]);
    m_deleted_isSet = !json[QString("deleted")].isNull() && m_deleted_isValid;

    m_external_id_isValid = ::OpenAPI::fromJsonValue(m_external_id, json[QString("externalId")]);
    m_external_id_isSet = !json[QString("externalId")].isNull() && m_external_id_isValid;

    m_external_system_isValid = ::OpenAPI::fromJsonValue(m_external_system, json[QString("externalSystem")]);
    m_external_system_isSet = !json[QString("externalSystem")].isNull() && m_external_system_isValid;

    m_extra_phone1_isValid = ::OpenAPI::fromJsonValue(m_extra_phone1, json[QString("extraPhone1")]);
    m_extra_phone1_isSet = !json[QString("extraPhone1")].isNull() && m_extra_phone1_isValid;

    m_extra_phone2_isValid = ::OpenAPI::fromJsonValue(m_extra_phone2, json[QString("extraPhone2")]);
    m_extra_phone2_isSet = !json[QString("extraPhone2")].isNull() && m_extra_phone2_isValid;

    m_extra_phone3_isValid = ::OpenAPI::fromJsonValue(m_extra_phone3, json[QString("extraPhone3")]);
    m_extra_phone3_isSet = !json[QString("extraPhone3")].isNull() && m_extra_phone3_isValid;

    m_first_name_isValid = ::OpenAPI::fromJsonValue(m_first_name, json[QString("firstName")]);
    m_first_name_isSet = !json[QString("firstName")].isNull() && m_first_name_isValid;

    m_home_phone_isValid = ::OpenAPI::fromJsonValue(m_home_phone, json[QString("homePhone")]);
    m_home_phone_isSet = !json[QString("homePhone")].isNull() && m_home_phone_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_last_name_isValid = ::OpenAPI::fromJsonValue(m_last_name, json[QString("lastName")]);
    m_last_name_isSet = !json[QString("lastName")].isNull() && m_last_name_isValid;

    m_mobile_phone_isValid = ::OpenAPI::fromJsonValue(m_mobile_phone, json[QString("mobilePhone")]);
    m_mobile_phone_isSet = !json[QString("mobilePhone")].isNull() && m_mobile_phone_isValid;

    m_properties_isValid = ::OpenAPI::fromJsonValue(m_properties, json[QString("properties")]);
    m_properties_isSet = !json[QString("properties")].isNull() && m_properties_isValid;

    m_work_phone_isValid = ::OpenAPI::fromJsonValue(m_work_phone, json[QString("workPhone")]);
    m_work_phone_isSet = !json[QString("workPhone")].isNull() && m_work_phone_isValid;

    m_zipcode_isValid = ::OpenAPI::fromJsonValue(m_zipcode, json[QString("zipcode")]);
    m_zipcode_isSet = !json[QString("zipcode")].isNull() && m_zipcode_isValid;
}

QString OAIContact::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIContact::asJsonObject() const {
    QJsonObject obj;
    if (m_deleted_isSet) {
        obj.insert(QString("deleted"), ::OpenAPI::toJsonValue(m_deleted));
    }
    if (m_external_id_isSet) {
        obj.insert(QString("externalId"), ::OpenAPI::toJsonValue(m_external_id));
    }
    if (m_external_system_isSet) {
        obj.insert(QString("externalSystem"), ::OpenAPI::toJsonValue(m_external_system));
    }
    if (m_extra_phone1_isSet) {
        obj.insert(QString("extraPhone1"), ::OpenAPI::toJsonValue(m_extra_phone1));
    }
    if (m_extra_phone2_isSet) {
        obj.insert(QString("extraPhone2"), ::OpenAPI::toJsonValue(m_extra_phone2));
    }
    if (m_extra_phone3_isSet) {
        obj.insert(QString("extraPhone3"), ::OpenAPI::toJsonValue(m_extra_phone3));
    }
    if (m_first_name_isSet) {
        obj.insert(QString("firstName"), ::OpenAPI::toJsonValue(m_first_name));
    }
    if (m_home_phone_isSet) {
        obj.insert(QString("homePhone"), ::OpenAPI::toJsonValue(m_home_phone));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_last_name_isSet) {
        obj.insert(QString("lastName"), ::OpenAPI::toJsonValue(m_last_name));
    }
    if (m_mobile_phone_isSet) {
        obj.insert(QString("mobilePhone"), ::OpenAPI::toJsonValue(m_mobile_phone));
    }
    if (m_properties.size() > 0) {
        obj.insert(QString("properties"), ::OpenAPI::toJsonValue(m_properties));
    }
    if (m_work_phone_isSet) {
        obj.insert(QString("workPhone"), ::OpenAPI::toJsonValue(m_work_phone));
    }
    if (m_zipcode_isSet) {
        obj.insert(QString("zipcode"), ::OpenAPI::toJsonValue(m_zipcode));
    }
    return obj;
}

bool OAIContact::isDeleted() const {
    return m_deleted;
}
void OAIContact::setDeleted(const bool &deleted) {
    m_deleted = deleted;
    m_deleted_isSet = true;
}

bool OAIContact::is_deleted_Set() const{
    return m_deleted_isSet;
}

bool OAIContact::is_deleted_Valid() const{
    return m_deleted_isValid;
}

QString OAIContact::getExternalId() const {
    return m_external_id;
}
void OAIContact::setExternalId(const QString &external_id) {
    m_external_id = external_id;
    m_external_id_isSet = true;
}

bool OAIContact::is_external_id_Set() const{
    return m_external_id_isSet;
}

bool OAIContact::is_external_id_Valid() const{
    return m_external_id_isValid;
}

QString OAIContact::getExternalSystem() const {
    return m_external_system;
}
void OAIContact::setExternalSystem(const QString &external_system) {
    m_external_system = external_system;
    m_external_system_isSet = true;
}

bool OAIContact::is_external_system_Set() const{
    return m_external_system_isSet;
}

bool OAIContact::is_external_system_Valid() const{
    return m_external_system_isValid;
}

QString OAIContact::getExtraPhone1() const {
    return m_extra_phone1;
}
void OAIContact::setExtraPhone1(const QString &extra_phone1) {
    m_extra_phone1 = extra_phone1;
    m_extra_phone1_isSet = true;
}

bool OAIContact::is_extra_phone1_Set() const{
    return m_extra_phone1_isSet;
}

bool OAIContact::is_extra_phone1_Valid() const{
    return m_extra_phone1_isValid;
}

QString OAIContact::getExtraPhone2() const {
    return m_extra_phone2;
}
void OAIContact::setExtraPhone2(const QString &extra_phone2) {
    m_extra_phone2 = extra_phone2;
    m_extra_phone2_isSet = true;
}

bool OAIContact::is_extra_phone2_Set() const{
    return m_extra_phone2_isSet;
}

bool OAIContact::is_extra_phone2_Valid() const{
    return m_extra_phone2_isValid;
}

QString OAIContact::getExtraPhone3() const {
    return m_extra_phone3;
}
void OAIContact::setExtraPhone3(const QString &extra_phone3) {
    m_extra_phone3 = extra_phone3;
    m_extra_phone3_isSet = true;
}

bool OAIContact::is_extra_phone3_Set() const{
    return m_extra_phone3_isSet;
}

bool OAIContact::is_extra_phone3_Valid() const{
    return m_extra_phone3_isValid;
}

QString OAIContact::getFirstName() const {
    return m_first_name;
}
void OAIContact::setFirstName(const QString &first_name) {
    m_first_name = first_name;
    m_first_name_isSet = true;
}

bool OAIContact::is_first_name_Set() const{
    return m_first_name_isSet;
}

bool OAIContact::is_first_name_Valid() const{
    return m_first_name_isValid;
}

QString OAIContact::getHomePhone() const {
    return m_home_phone;
}
void OAIContact::setHomePhone(const QString &home_phone) {
    m_home_phone = home_phone;
    m_home_phone_isSet = true;
}

bool OAIContact::is_home_phone_Set() const{
    return m_home_phone_isSet;
}

bool OAIContact::is_home_phone_Valid() const{
    return m_home_phone_isValid;
}

qint64 OAIContact::getId() const {
    return m_id;
}
void OAIContact::setId(const qint64 &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIContact::is_id_Set() const{
    return m_id_isSet;
}

bool OAIContact::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIContact::getLastName() const {
    return m_last_name;
}
void OAIContact::setLastName(const QString &last_name) {
    m_last_name = last_name;
    m_last_name_isSet = true;
}

bool OAIContact::is_last_name_Set() const{
    return m_last_name_isSet;
}

bool OAIContact::is_last_name_Valid() const{
    return m_last_name_isValid;
}

QString OAIContact::getMobilePhone() const {
    return m_mobile_phone;
}
void OAIContact::setMobilePhone(const QString &mobile_phone) {
    m_mobile_phone = mobile_phone;
    m_mobile_phone_isSet = true;
}

bool OAIContact::is_mobile_phone_Set() const{
    return m_mobile_phone_isSet;
}

bool OAIContact::is_mobile_phone_Valid() const{
    return m_mobile_phone_isValid;
}

QMap<QString, QString> OAIContact::getProperties() const {
    return m_properties;
}
void OAIContact::setProperties(const QMap<QString, QString> &properties) {
    m_properties = properties;
    m_properties_isSet = true;
}

bool OAIContact::is_properties_Set() const{
    return m_properties_isSet;
}

bool OAIContact::is_properties_Valid() const{
    return m_properties_isValid;
}

QString OAIContact::getWorkPhone() const {
    return m_work_phone;
}
void OAIContact::setWorkPhone(const QString &work_phone) {
    m_work_phone = work_phone;
    m_work_phone_isSet = true;
}

bool OAIContact::is_work_phone_Set() const{
    return m_work_phone_isSet;
}

bool OAIContact::is_work_phone_Valid() const{
    return m_work_phone_isValid;
}

QString OAIContact::getZipcode() const {
    return m_zipcode;
}
void OAIContact::setZipcode(const QString &zipcode) {
    m_zipcode = zipcode;
    m_zipcode_isSet = true;
}

bool OAIContact::is_zipcode_Set() const{
    return m_zipcode_isSet;
}

bool OAIContact::is_zipcode_Valid() const{
    return m_zipcode_isValid;
}

bool OAIContact::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_deleted_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_external_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_external_system_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_extra_phone1_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_extra_phone2_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_extra_phone3_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_first_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_home_phone_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mobile_phone_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_properties.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_work_phone_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_zipcode_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIContact::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
