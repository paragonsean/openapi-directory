/**
 * CallFire API Documentation
 * CallFire
 *
 * The version of the OpenAPI document: V2
 * Contact: support@callfire.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITextBroadcastStatsDto.h
 *
 * ~
 */

#ifndef OAITextBroadcastStatsDto_H
#define OAITextBroadcastStatsDto_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAITextBroadcastStatsDto : public OAIObject {
public:
    OAITextBroadcastStatsDto();
    OAITextBroadcastStatsDto(QString json);
    ~OAITextBroadcastStatsDto() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getBilledAmount() const;
    void setBilledAmount(const double &billed_amount);
    bool is_billed_amount_Set() const;
    bool is_billed_amount_Valid() const;

    qint32 getDoNotTextCount() const;
    void setDoNotTextCount(const qint32 &do_not_text_count);
    bool is_do_not_text_count_Set() const;
    bool is_do_not_text_count_Valid() const;

    qint32 getErrorCount() const;
    void setErrorCount(const qint32 &error_count);
    bool is_error_count_Set() const;
    bool is_error_count_Valid() const;

    qint32 getRecievedCount() const;
    void setRecievedCount(const qint32 &recieved_count);
    bool is_recieved_count_Set() const;
    bool is_recieved_count_Valid() const;

    qint32 getRemainingOutboundCount() const;
    void setRemainingOutboundCount(const qint32 &remaining_outbound_count);
    bool is_remaining_outbound_count_Set() const;
    bool is_remaining_outbound_count_Valid() const;

    qint32 getSentCount() const;
    void setSentCount(const qint32 &sent_count);
    bool is_sent_count_Set() const;
    bool is_sent_count_Valid() const;

    qint32 getTooBigCount() const;
    void setTooBigCount(const qint32 &too_big_count);
    bool is_too_big_count_Set() const;
    bool is_too_big_count_Valid() const;

    qint32 getTotalOutboundCount() const;
    void setTotalOutboundCount(const qint32 &total_outbound_count);
    bool is_total_outbound_count_Set() const;
    bool is_total_outbound_count_Valid() const;

    qint32 getUnsentCount() const;
    void setUnsentCount(const qint32 &unsent_count);
    bool is_unsent_count_Set() const;
    bool is_unsent_count_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_billed_amount;
    bool m_billed_amount_isSet;
    bool m_billed_amount_isValid;

    qint32 m_do_not_text_count;
    bool m_do_not_text_count_isSet;
    bool m_do_not_text_count_isValid;

    qint32 m_error_count;
    bool m_error_count_isSet;
    bool m_error_count_isValid;

    qint32 m_recieved_count;
    bool m_recieved_count_isSet;
    bool m_recieved_count_isValid;

    qint32 m_remaining_outbound_count;
    bool m_remaining_outbound_count_isSet;
    bool m_remaining_outbound_count_isValid;

    qint32 m_sent_count;
    bool m_sent_count_isSet;
    bool m_sent_count_isValid;

    qint32 m_too_big_count;
    bool m_too_big_count_isSet;
    bool m_too_big_count_isValid;

    qint32 m_total_outbound_count;
    bool m_total_outbound_count_isSet;
    bool m_total_outbound_count_isValid;

    qint32 m_unsent_count;
    bool m_unsent_count_isSet;
    bool m_unsent_count_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITextBroadcastStatsDto)

#endif // OAITextBroadcastStatsDto_H
