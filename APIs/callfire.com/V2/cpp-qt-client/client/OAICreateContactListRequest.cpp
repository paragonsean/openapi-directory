/**
 * CallFire API Documentation
 * CallFire
 *
 * The version of the OpenAPI document: V2
 * Contact: support@callfire.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateContactListRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateContactListRequest::OAICreateContactListRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateContactListRequest::OAICreateContactListRequest() {
    this->initializeModel();
}

OAICreateContactListRequest::~OAICreateContactListRequest() {}

void OAICreateContactListRequest::initializeModel() {

    m_contact_ids_isSet = false;
    m_contact_ids_isValid = false;

    m_contact_numbers_isSet = false;
    m_contact_numbers_isValid = false;

    m_contact_numbers_field_isSet = false;
    m_contact_numbers_field_isValid = false;

    m_contacts_isSet = false;
    m_contacts_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_use_custom_fields_isSet = false;
    m_use_custom_fields_isValid = false;
}

void OAICreateContactListRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateContactListRequest::fromJsonObject(QJsonObject json) {

    m_contact_ids_isValid = ::OpenAPI::fromJsonValue(m_contact_ids, json[QString("contactIds")]);
    m_contact_ids_isSet = !json[QString("contactIds")].isNull() && m_contact_ids_isValid;

    m_contact_numbers_isValid = ::OpenAPI::fromJsonValue(m_contact_numbers, json[QString("contactNumbers")]);
    m_contact_numbers_isSet = !json[QString("contactNumbers")].isNull() && m_contact_numbers_isValid;

    m_contact_numbers_field_isValid = ::OpenAPI::fromJsonValue(m_contact_numbers_field, json[QString("contactNumbersField")]);
    m_contact_numbers_field_isSet = !json[QString("contactNumbersField")].isNull() && m_contact_numbers_field_isValid;

    m_contacts_isValid = ::OpenAPI::fromJsonValue(m_contacts, json[QString("contacts")]);
    m_contacts_isSet = !json[QString("contacts")].isNull() && m_contacts_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_use_custom_fields_isValid = ::OpenAPI::fromJsonValue(m_use_custom_fields, json[QString("useCustomFields")]);
    m_use_custom_fields_isSet = !json[QString("useCustomFields")].isNull() && m_use_custom_fields_isValid;
}

QString OAICreateContactListRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateContactListRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_contact_ids.size() > 0) {
        obj.insert(QString("contactIds"), ::OpenAPI::toJsonValue(m_contact_ids));
    }
    if (m_contact_numbers.size() > 0) {
        obj.insert(QString("contactNumbers"), ::OpenAPI::toJsonValue(m_contact_numbers));
    }
    if (m_contact_numbers_field_isSet) {
        obj.insert(QString("contactNumbersField"), ::OpenAPI::toJsonValue(m_contact_numbers_field));
    }
    if (m_contacts.size() > 0) {
        obj.insert(QString("contacts"), ::OpenAPI::toJsonValue(m_contacts));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_use_custom_fields_isSet) {
        obj.insert(QString("useCustomFields"), ::OpenAPI::toJsonValue(m_use_custom_fields));
    }
    return obj;
}

QList<qint64> OAICreateContactListRequest::getContactIds() const {
    return m_contact_ids;
}
void OAICreateContactListRequest::setContactIds(const QList<qint64> &contact_ids) {
    m_contact_ids = contact_ids;
    m_contact_ids_isSet = true;
}

bool OAICreateContactListRequest::is_contact_ids_Set() const{
    return m_contact_ids_isSet;
}

bool OAICreateContactListRequest::is_contact_ids_Valid() const{
    return m_contact_ids_isValid;
}

QList<QString> OAICreateContactListRequest::getContactNumbers() const {
    return m_contact_numbers;
}
void OAICreateContactListRequest::setContactNumbers(const QList<QString> &contact_numbers) {
    m_contact_numbers = contact_numbers;
    m_contact_numbers_isSet = true;
}

bool OAICreateContactListRequest::is_contact_numbers_Set() const{
    return m_contact_numbers_isSet;
}

bool OAICreateContactListRequest::is_contact_numbers_Valid() const{
    return m_contact_numbers_isValid;
}

QString OAICreateContactListRequest::getContactNumbersField() const {
    return m_contact_numbers_field;
}
void OAICreateContactListRequest::setContactNumbersField(const QString &contact_numbers_field) {
    m_contact_numbers_field = contact_numbers_field;
    m_contact_numbers_field_isSet = true;
}

bool OAICreateContactListRequest::is_contact_numbers_field_Set() const{
    return m_contact_numbers_field_isSet;
}

bool OAICreateContactListRequest::is_contact_numbers_field_Valid() const{
    return m_contact_numbers_field_isValid;
}

QList<OAIContact> OAICreateContactListRequest::getContacts() const {
    return m_contacts;
}
void OAICreateContactListRequest::setContacts(const QList<OAIContact> &contacts) {
    m_contacts = contacts;
    m_contacts_isSet = true;
}

bool OAICreateContactListRequest::is_contacts_Set() const{
    return m_contacts_isSet;
}

bool OAICreateContactListRequest::is_contacts_Valid() const{
    return m_contacts_isValid;
}

QString OAICreateContactListRequest::getName() const {
    return m_name;
}
void OAICreateContactListRequest::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAICreateContactListRequest::is_name_Set() const{
    return m_name_isSet;
}

bool OAICreateContactListRequest::is_name_Valid() const{
    return m_name_isValid;
}

bool OAICreateContactListRequest::isUseCustomFields() const {
    return m_use_custom_fields;
}
void OAICreateContactListRequest::setUseCustomFields(const bool &use_custom_fields) {
    m_use_custom_fields = use_custom_fields;
    m_use_custom_fields_isSet = true;
}

bool OAICreateContactListRequest::is_use_custom_fields_Set() const{
    return m_use_custom_fields_isSet;
}

bool OAICreateContactListRequest::is_use_custom_fields_Valid() const{
    return m_use_custom_fields_isValid;
}

bool OAICreateContactListRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_contact_ids.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_contact_numbers.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_contact_numbers_field_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_contacts.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_use_custom_fields_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateContactListRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
