/**
 * CallFire API Documentation
 * CallFire
 *
 * The version of the OpenAPI document: V2
 * Contact: support@callfire.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIWebhook.h
 *
 * Webhook is a user-defined callback, which can be maintained via API. CallFire will send POST request to a client&#39;s endpoint defined in webhook once one of assigned events is triggered. See [webhooks guide](https://developers.callfire.com/webhooks-guide.html) for more information about CallFire Webhooks API.
 */

#ifndef OAIWebhook_H
#define OAIWebhook_H

#include <QJsonObject>

#include <QSet>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIWebhook : public OAIObject {
public:
    OAIWebhook();
    OAIWebhook(QString json);
    ~OAIWebhook() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCallback() const;
    void setCallback(const QString &callback);
    bool is_callback_Set() const;
    bool is_callback_Valid() const;

    qint64 getCreatedAt() const;
    void setCreatedAt(const qint64 &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    bool isEnabled() const;
    void setEnabled(const bool &enabled);
    bool is_enabled_Set() const;
    bool is_enabled_Valid() const;

    QSet<QString> getEvents() const;
    void setEvents(const QSet<QString> &events);
    bool is_events_Set() const;
    bool is_events_Valid() const;

    qint64 getExpiresAt() const;
    void setExpiresAt(const qint64 &expires_at);
    bool is_expires_at_Set() const;
    bool is_expires_at_Valid() const;

    QString getFields() const;
    void setFields(const QString &fields);
    bool is_fields_Set() const;
    bool is_fields_Valid() const;

    qint64 getId() const;
    void setId(const qint64 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    bool isNonStrictSsl() const;
    void setNonStrictSsl(const bool &non_strict_ssl);
    bool is_non_strict_ssl_Set() const;
    bool is_non_strict_ssl_Valid() const;

    QString getResource() const;
    void setResource(const QString &resource);
    bool is_resource_Set() const;
    bool is_resource_Valid() const;

    QString getSecret() const;
    void setSecret(const QString &secret);
    bool is_secret_Set() const;
    bool is_secret_Valid() const;

    bool isSingleUse() const;
    void setSingleUse(const bool &single_use);
    bool is_single_use_Set() const;
    bool is_single_use_Valid() const;

    qint64 getUpdatedAt() const;
    void setUpdatedAt(const qint64 &updated_at);
    bool is_updated_at_Set() const;
    bool is_updated_at_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_callback;
    bool m_callback_isSet;
    bool m_callback_isValid;

    qint64 m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    bool m_enabled;
    bool m_enabled_isSet;
    bool m_enabled_isValid;

    QSet<QString> m_events;
    bool m_events_isSet;
    bool m_events_isValid;

    qint64 m_expires_at;
    bool m_expires_at_isSet;
    bool m_expires_at_isValid;

    QString m_fields;
    bool m_fields_isSet;
    bool m_fields_isValid;

    qint64 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    bool m_non_strict_ssl;
    bool m_non_strict_ssl_isSet;
    bool m_non_strict_ssl_isValid;

    QString m_resource;
    bool m_resource_isSet;
    bool m_resource_isValid;

    QString m_secret;
    bool m_secret_isSet;
    bool m_secret_isValid;

    bool m_single_use;
    bool m_single_use_isSet;
    bool m_single_use_isValid;

    qint64 m_updated_at;
    bool m_updated_at_isSet;
    bool m_updated_at_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIWebhook)

#endif // OAIWebhook_H
