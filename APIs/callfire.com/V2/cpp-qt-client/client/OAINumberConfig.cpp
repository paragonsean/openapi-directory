/**
 * CallFire API Documentation
 * CallFire
 *
 * The version of the OpenAPI document: V2
 * Contact: support@callfire.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAINumberConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAINumberConfig::OAINumberConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAINumberConfig::OAINumberConfig() {
    this->initializeModel();
}

OAINumberConfig::~OAINumberConfig() {}

void OAINumberConfig::initializeModel() {

    m_call_tracking_config_isSet = false;
    m_call_tracking_config_isValid = false;

    m_config_type_isSet = false;
    m_config_type_isValid = false;

    m_ivr_inbound_config_isSet = false;
    m_ivr_inbound_config_isValid = false;

    m_number_isSet = false;
    m_number_isValid = false;

    m_text_inbound_config_isSet = false;
    m_text_inbound_config_isValid = false;
}

void OAINumberConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAINumberConfig::fromJsonObject(QJsonObject json) {

    m_call_tracking_config_isValid = ::OpenAPI::fromJsonValue(m_call_tracking_config, json[QString("callTrackingConfig")]);
    m_call_tracking_config_isSet = !json[QString("callTrackingConfig")].isNull() && m_call_tracking_config_isValid;

    m_config_type_isValid = ::OpenAPI::fromJsonValue(m_config_type, json[QString("configType")]);
    m_config_type_isSet = !json[QString("configType")].isNull() && m_config_type_isValid;

    m_ivr_inbound_config_isValid = ::OpenAPI::fromJsonValue(m_ivr_inbound_config, json[QString("ivrInboundConfig")]);
    m_ivr_inbound_config_isSet = !json[QString("ivrInboundConfig")].isNull() && m_ivr_inbound_config_isValid;

    m_number_isValid = ::OpenAPI::fromJsonValue(m_number, json[QString("number")]);
    m_number_isSet = !json[QString("number")].isNull() && m_number_isValid;

    m_text_inbound_config_isValid = ::OpenAPI::fromJsonValue(m_text_inbound_config, json[QString("textInboundConfig")]);
    m_text_inbound_config_isSet = !json[QString("textInboundConfig")].isNull() && m_text_inbound_config_isValid;
}

QString OAINumberConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAINumberConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_call_tracking_config.isSet()) {
        obj.insert(QString("callTrackingConfig"), ::OpenAPI::toJsonValue(m_call_tracking_config));
    }
    if (m_config_type_isSet) {
        obj.insert(QString("configType"), ::OpenAPI::toJsonValue(m_config_type));
    }
    if (m_ivr_inbound_config.isSet()) {
        obj.insert(QString("ivrInboundConfig"), ::OpenAPI::toJsonValue(m_ivr_inbound_config));
    }
    if (m_number_isSet) {
        obj.insert(QString("number"), ::OpenAPI::toJsonValue(m_number));
    }
    if (m_text_inbound_config.isSet()) {
        obj.insert(QString("textInboundConfig"), ::OpenAPI::toJsonValue(m_text_inbound_config));
    }
    return obj;
}

OAICallTrackingConfig OAINumberConfig::getCallTrackingConfig() const {
    return m_call_tracking_config;
}
void OAINumberConfig::setCallTrackingConfig(const OAICallTrackingConfig &call_tracking_config) {
    m_call_tracking_config = call_tracking_config;
    m_call_tracking_config_isSet = true;
}

bool OAINumberConfig::is_call_tracking_config_Set() const{
    return m_call_tracking_config_isSet;
}

bool OAINumberConfig::is_call_tracking_config_Valid() const{
    return m_call_tracking_config_isValid;
}

QString OAINumberConfig::getConfigType() const {
    return m_config_type;
}
void OAINumberConfig::setConfigType(const QString &config_type) {
    m_config_type = config_type;
    m_config_type_isSet = true;
}

bool OAINumberConfig::is_config_type_Set() const{
    return m_config_type_isSet;
}

bool OAINumberConfig::is_config_type_Valid() const{
    return m_config_type_isValid;
}

OAIIvrInboundConfig OAINumberConfig::getIvrInboundConfig() const {
    return m_ivr_inbound_config;
}
void OAINumberConfig::setIvrInboundConfig(const OAIIvrInboundConfig &ivr_inbound_config) {
    m_ivr_inbound_config = ivr_inbound_config;
    m_ivr_inbound_config_isSet = true;
}

bool OAINumberConfig::is_ivr_inbound_config_Set() const{
    return m_ivr_inbound_config_isSet;
}

bool OAINumberConfig::is_ivr_inbound_config_Valid() const{
    return m_ivr_inbound_config_isValid;
}

QString OAINumberConfig::getNumber() const {
    return m_number;
}
void OAINumberConfig::setNumber(const QString &number) {
    m_number = number;
    m_number_isSet = true;
}

bool OAINumberConfig::is_number_Set() const{
    return m_number_isSet;
}

bool OAINumberConfig::is_number_Valid() const{
    return m_number_isValid;
}

OAITextInboundConfig OAINumberConfig::getTextInboundConfig() const {
    return m_text_inbound_config;
}
void OAINumberConfig::setTextInboundConfig(const OAITextInboundConfig &text_inbound_config) {
    m_text_inbound_config = text_inbound_config;
    m_text_inbound_config_isSet = true;
}

bool OAINumberConfig::is_text_inbound_config_Set() const{
    return m_text_inbound_config_isSet;
}

bool OAINumberConfig::is_text_inbound_config_Valid() const{
    return m_text_inbound_config_isValid;
}

bool OAINumberConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_call_tracking_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_config_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ivr_inbound_config.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_text_inbound_config.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAINumberConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
