/**
 * CallFire API Documentation
 * CallFire
 *
 * The version of the OpenAPI document: V2
 * Contact: support@callfire.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBillingPlanUsage.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBillingPlanUsage::OAIBillingPlanUsage(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBillingPlanUsage::OAIBillingPlanUsage() {
    this->initializeModel();
}

OAIBillingPlanUsage::~OAIBillingPlanUsage() {}

void OAIBillingPlanUsage::initializeModel() {

    m_interval_end_isSet = false;
    m_interval_end_isValid = false;

    m_interval_start_isSet = false;
    m_interval_start_isValid = false;

    m_remaining_pay_as_you_go_credits_isSet = false;
    m_remaining_pay_as_you_go_credits_isValid = false;

    m_remaining_plan_credits_isSet = false;
    m_remaining_plan_credits_isValid = false;

    m_total_remaining_credits_isSet = false;
    m_total_remaining_credits_isValid = false;
}

void OAIBillingPlanUsage::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBillingPlanUsage::fromJsonObject(QJsonObject json) {

    m_interval_end_isValid = ::OpenAPI::fromJsonValue(m_interval_end, json[QString("intervalEnd")]);
    m_interval_end_isSet = !json[QString("intervalEnd")].isNull() && m_interval_end_isValid;

    m_interval_start_isValid = ::OpenAPI::fromJsonValue(m_interval_start, json[QString("intervalStart")]);
    m_interval_start_isSet = !json[QString("intervalStart")].isNull() && m_interval_start_isValid;

    m_remaining_pay_as_you_go_credits_isValid = ::OpenAPI::fromJsonValue(m_remaining_pay_as_you_go_credits, json[QString("remainingPayAsYouGoCredits")]);
    m_remaining_pay_as_you_go_credits_isSet = !json[QString("remainingPayAsYouGoCredits")].isNull() && m_remaining_pay_as_you_go_credits_isValid;

    m_remaining_plan_credits_isValid = ::OpenAPI::fromJsonValue(m_remaining_plan_credits, json[QString("remainingPlanCredits")]);
    m_remaining_plan_credits_isSet = !json[QString("remainingPlanCredits")].isNull() && m_remaining_plan_credits_isValid;

    m_total_remaining_credits_isValid = ::OpenAPI::fromJsonValue(m_total_remaining_credits, json[QString("totalRemainingCredits")]);
    m_total_remaining_credits_isSet = !json[QString("totalRemainingCredits")].isNull() && m_total_remaining_credits_isValid;
}

QString OAIBillingPlanUsage::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBillingPlanUsage::asJsonObject() const {
    QJsonObject obj;
    if (m_interval_end_isSet) {
        obj.insert(QString("intervalEnd"), ::OpenAPI::toJsonValue(m_interval_end));
    }
    if (m_interval_start_isSet) {
        obj.insert(QString("intervalStart"), ::OpenAPI::toJsonValue(m_interval_start));
    }
    if (m_remaining_pay_as_you_go_credits_isSet) {
        obj.insert(QString("remainingPayAsYouGoCredits"), ::OpenAPI::toJsonValue(m_remaining_pay_as_you_go_credits));
    }
    if (m_remaining_plan_credits_isSet) {
        obj.insert(QString("remainingPlanCredits"), ::OpenAPI::toJsonValue(m_remaining_plan_credits));
    }
    if (m_total_remaining_credits_isSet) {
        obj.insert(QString("totalRemainingCredits"), ::OpenAPI::toJsonValue(m_total_remaining_credits));
    }
    return obj;
}

qint64 OAIBillingPlanUsage::getIntervalEnd() const {
    return m_interval_end;
}
void OAIBillingPlanUsage::setIntervalEnd(const qint64 &interval_end) {
    m_interval_end = interval_end;
    m_interval_end_isSet = true;
}

bool OAIBillingPlanUsage::is_interval_end_Set() const{
    return m_interval_end_isSet;
}

bool OAIBillingPlanUsage::is_interval_end_Valid() const{
    return m_interval_end_isValid;
}

qint64 OAIBillingPlanUsage::getIntervalStart() const {
    return m_interval_start;
}
void OAIBillingPlanUsage::setIntervalStart(const qint64 &interval_start) {
    m_interval_start = interval_start;
    m_interval_start_isSet = true;
}

bool OAIBillingPlanUsage::is_interval_start_Set() const{
    return m_interval_start_isSet;
}

bool OAIBillingPlanUsage::is_interval_start_Valid() const{
    return m_interval_start_isValid;
}

double OAIBillingPlanUsage::getRemainingPayAsYouGoCredits() const {
    return m_remaining_pay_as_you_go_credits;
}
void OAIBillingPlanUsage::setRemainingPayAsYouGoCredits(const double &remaining_pay_as_you_go_credits) {
    m_remaining_pay_as_you_go_credits = remaining_pay_as_you_go_credits;
    m_remaining_pay_as_you_go_credits_isSet = true;
}

bool OAIBillingPlanUsage::is_remaining_pay_as_you_go_credits_Set() const{
    return m_remaining_pay_as_you_go_credits_isSet;
}

bool OAIBillingPlanUsage::is_remaining_pay_as_you_go_credits_Valid() const{
    return m_remaining_pay_as_you_go_credits_isValid;
}

double OAIBillingPlanUsage::getRemainingPlanCredits() const {
    return m_remaining_plan_credits;
}
void OAIBillingPlanUsage::setRemainingPlanCredits(const double &remaining_plan_credits) {
    m_remaining_plan_credits = remaining_plan_credits;
    m_remaining_plan_credits_isSet = true;
}

bool OAIBillingPlanUsage::is_remaining_plan_credits_Set() const{
    return m_remaining_plan_credits_isSet;
}

bool OAIBillingPlanUsage::is_remaining_plan_credits_Valid() const{
    return m_remaining_plan_credits_isValid;
}

double OAIBillingPlanUsage::getTotalRemainingCredits() const {
    return m_total_remaining_credits;
}
void OAIBillingPlanUsage::setTotalRemainingCredits(const double &total_remaining_credits) {
    m_total_remaining_credits = total_remaining_credits;
    m_total_remaining_credits_isSet = true;
}

bool OAIBillingPlanUsage::is_total_remaining_credits_Set() const{
    return m_total_remaining_credits_isSet;
}

bool OAIBillingPlanUsage::is_total_remaining_credits_Valid() const{
    return m_total_remaining_credits_isValid;
}

bool OAIBillingPlanUsage::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_interval_end_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_interval_start_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_remaining_pay_as_you_go_credits_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_remaining_plan_credits_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_remaining_credits_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBillingPlanUsage::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
