/**
 * CallFire API Documentation
 * CallFire
 *
 * The version of the OpenAPI document: V2
 * Contact: support@callfire.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDuration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDuration::OAIDuration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDuration::OAIDuration() {
    this->initializeModel();
}

OAIDuration::~OAIDuration() {}

void OAIDuration::initializeModel() {

    m_millis_isSet = false;
    m_millis_isValid = false;

    m_standard_days_isSet = false;
    m_standard_days_isValid = false;

    m_standard_hours_isSet = false;
    m_standard_hours_isValid = false;

    m_standard_minutes_isSet = false;
    m_standard_minutes_isValid = false;

    m_standard_seconds_isSet = false;
    m_standard_seconds_isValid = false;
}

void OAIDuration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDuration::fromJsonObject(QJsonObject json) {

    m_millis_isValid = ::OpenAPI::fromJsonValue(m_millis, json[QString("millis")]);
    m_millis_isSet = !json[QString("millis")].isNull() && m_millis_isValid;

    m_standard_days_isValid = ::OpenAPI::fromJsonValue(m_standard_days, json[QString("standardDays")]);
    m_standard_days_isSet = !json[QString("standardDays")].isNull() && m_standard_days_isValid;

    m_standard_hours_isValid = ::OpenAPI::fromJsonValue(m_standard_hours, json[QString("standardHours")]);
    m_standard_hours_isSet = !json[QString("standardHours")].isNull() && m_standard_hours_isValid;

    m_standard_minutes_isValid = ::OpenAPI::fromJsonValue(m_standard_minutes, json[QString("standardMinutes")]);
    m_standard_minutes_isSet = !json[QString("standardMinutes")].isNull() && m_standard_minutes_isValid;

    m_standard_seconds_isValid = ::OpenAPI::fromJsonValue(m_standard_seconds, json[QString("standardSeconds")]);
    m_standard_seconds_isSet = !json[QString("standardSeconds")].isNull() && m_standard_seconds_isValid;
}

QString OAIDuration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDuration::asJsonObject() const {
    QJsonObject obj;
    if (m_millis_isSet) {
        obj.insert(QString("millis"), ::OpenAPI::toJsonValue(m_millis));
    }
    if (m_standard_days_isSet) {
        obj.insert(QString("standardDays"), ::OpenAPI::toJsonValue(m_standard_days));
    }
    if (m_standard_hours_isSet) {
        obj.insert(QString("standardHours"), ::OpenAPI::toJsonValue(m_standard_hours));
    }
    if (m_standard_minutes_isSet) {
        obj.insert(QString("standardMinutes"), ::OpenAPI::toJsonValue(m_standard_minutes));
    }
    if (m_standard_seconds_isSet) {
        obj.insert(QString("standardSeconds"), ::OpenAPI::toJsonValue(m_standard_seconds));
    }
    return obj;
}

qint64 OAIDuration::getMillis() const {
    return m_millis;
}
void OAIDuration::setMillis(const qint64 &millis) {
    m_millis = millis;
    m_millis_isSet = true;
}

bool OAIDuration::is_millis_Set() const{
    return m_millis_isSet;
}

bool OAIDuration::is_millis_Valid() const{
    return m_millis_isValid;
}

qint64 OAIDuration::getStandardDays() const {
    return m_standard_days;
}
void OAIDuration::setStandardDays(const qint64 &standard_days) {
    m_standard_days = standard_days;
    m_standard_days_isSet = true;
}

bool OAIDuration::is_standard_days_Set() const{
    return m_standard_days_isSet;
}

bool OAIDuration::is_standard_days_Valid() const{
    return m_standard_days_isValid;
}

qint64 OAIDuration::getStandardHours() const {
    return m_standard_hours;
}
void OAIDuration::setStandardHours(const qint64 &standard_hours) {
    m_standard_hours = standard_hours;
    m_standard_hours_isSet = true;
}

bool OAIDuration::is_standard_hours_Set() const{
    return m_standard_hours_isSet;
}

bool OAIDuration::is_standard_hours_Valid() const{
    return m_standard_hours_isValid;
}

qint64 OAIDuration::getStandardMinutes() const {
    return m_standard_minutes;
}
void OAIDuration::setStandardMinutes(const qint64 &standard_minutes) {
    m_standard_minutes = standard_minutes;
    m_standard_minutes_isSet = true;
}

bool OAIDuration::is_standard_minutes_Set() const{
    return m_standard_minutes_isSet;
}

bool OAIDuration::is_standard_minutes_Valid() const{
    return m_standard_minutes_isValid;
}

qint64 OAIDuration::getStandardSeconds() const {
    return m_standard_seconds;
}
void OAIDuration::setStandardSeconds(const qint64 &standard_seconds) {
    m_standard_seconds = standard_seconds;
    m_standard_seconds_isSet = true;
}

bool OAIDuration::is_standard_seconds_Set() const{
    return m_standard_seconds_isSet;
}

bool OAIDuration::is_standard_seconds_Valid() const{
    return m_standard_seconds_isValid;
}

bool OAIDuration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_millis_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_standard_days_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_standard_hours_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_standard_minutes_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_standard_seconds_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDuration::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
