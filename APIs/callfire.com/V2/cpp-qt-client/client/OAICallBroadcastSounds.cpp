/**
 * CallFire API Documentation
 * CallFire
 *
 * The version of the OpenAPI document: V2
 * Contact: support@callfire.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICallBroadcastSounds.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICallBroadcastSounds::OAICallBroadcastSounds(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICallBroadcastSounds::OAICallBroadcastSounds() {
    this->initializeModel();
}

OAICallBroadcastSounds::~OAICallBroadcastSounds() {}

void OAICallBroadcastSounds::initializeModel() {

    m_dnc_digit_isSet = false;
    m_dnc_digit_isValid = false;

    m_dnc_sound_id_isSet = false;
    m_dnc_sound_id_isValid = false;

    m_dnc_sound_text_isSet = false;
    m_dnc_sound_text_isValid = false;

    m_dnc_sound_text_voice_isSet = false;
    m_dnc_sound_text_voice_isValid = false;

    m_live_sound_id_isSet = false;
    m_live_sound_id_isValid = false;

    m_live_sound_text_isSet = false;
    m_live_sound_text_isValid = false;

    m_live_sound_text_voice_isSet = false;
    m_live_sound_text_voice_isValid = false;

    m_machine_sound_id_isSet = false;
    m_machine_sound_id_isValid = false;

    m_machine_sound_text_isSet = false;
    m_machine_sound_text_isValid = false;

    m_machine_sound_text_voice_isSet = false;
    m_machine_sound_text_voice_isValid = false;

    m_transfer_digit_isSet = false;
    m_transfer_digit_isValid = false;

    m_transfer_number_isSet = false;
    m_transfer_number_isValid = false;

    m_transfer_sound_id_isSet = false;
    m_transfer_sound_id_isValid = false;

    m_transfer_sound_text_isSet = false;
    m_transfer_sound_text_isValid = false;

    m_transfer_sound_text_voice_isSet = false;
    m_transfer_sound_text_voice_isValid = false;
}

void OAICallBroadcastSounds::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICallBroadcastSounds::fromJsonObject(QJsonObject json) {

    m_dnc_digit_isValid = ::OpenAPI::fromJsonValue(m_dnc_digit, json[QString("dncDigit")]);
    m_dnc_digit_isSet = !json[QString("dncDigit")].isNull() && m_dnc_digit_isValid;

    m_dnc_sound_id_isValid = ::OpenAPI::fromJsonValue(m_dnc_sound_id, json[QString("dncSoundId")]);
    m_dnc_sound_id_isSet = !json[QString("dncSoundId")].isNull() && m_dnc_sound_id_isValid;

    m_dnc_sound_text_isValid = ::OpenAPI::fromJsonValue(m_dnc_sound_text, json[QString("dncSoundText")]);
    m_dnc_sound_text_isSet = !json[QString("dncSoundText")].isNull() && m_dnc_sound_text_isValid;

    m_dnc_sound_text_voice_isValid = ::OpenAPI::fromJsonValue(m_dnc_sound_text_voice, json[QString("dncSoundTextVoice")]);
    m_dnc_sound_text_voice_isSet = !json[QString("dncSoundTextVoice")].isNull() && m_dnc_sound_text_voice_isValid;

    m_live_sound_id_isValid = ::OpenAPI::fromJsonValue(m_live_sound_id, json[QString("liveSoundId")]);
    m_live_sound_id_isSet = !json[QString("liveSoundId")].isNull() && m_live_sound_id_isValid;

    m_live_sound_text_isValid = ::OpenAPI::fromJsonValue(m_live_sound_text, json[QString("liveSoundText")]);
    m_live_sound_text_isSet = !json[QString("liveSoundText")].isNull() && m_live_sound_text_isValid;

    m_live_sound_text_voice_isValid = ::OpenAPI::fromJsonValue(m_live_sound_text_voice, json[QString("liveSoundTextVoice")]);
    m_live_sound_text_voice_isSet = !json[QString("liveSoundTextVoice")].isNull() && m_live_sound_text_voice_isValid;

    m_machine_sound_id_isValid = ::OpenAPI::fromJsonValue(m_machine_sound_id, json[QString("machineSoundId")]);
    m_machine_sound_id_isSet = !json[QString("machineSoundId")].isNull() && m_machine_sound_id_isValid;

    m_machine_sound_text_isValid = ::OpenAPI::fromJsonValue(m_machine_sound_text, json[QString("machineSoundText")]);
    m_machine_sound_text_isSet = !json[QString("machineSoundText")].isNull() && m_machine_sound_text_isValid;

    m_machine_sound_text_voice_isValid = ::OpenAPI::fromJsonValue(m_machine_sound_text_voice, json[QString("machineSoundTextVoice")]);
    m_machine_sound_text_voice_isSet = !json[QString("machineSoundTextVoice")].isNull() && m_machine_sound_text_voice_isValid;

    m_transfer_digit_isValid = ::OpenAPI::fromJsonValue(m_transfer_digit, json[QString("transferDigit")]);
    m_transfer_digit_isSet = !json[QString("transferDigit")].isNull() && m_transfer_digit_isValid;

    m_transfer_number_isValid = ::OpenAPI::fromJsonValue(m_transfer_number, json[QString("transferNumber")]);
    m_transfer_number_isSet = !json[QString("transferNumber")].isNull() && m_transfer_number_isValid;

    m_transfer_sound_id_isValid = ::OpenAPI::fromJsonValue(m_transfer_sound_id, json[QString("transferSoundId")]);
    m_transfer_sound_id_isSet = !json[QString("transferSoundId")].isNull() && m_transfer_sound_id_isValid;

    m_transfer_sound_text_isValid = ::OpenAPI::fromJsonValue(m_transfer_sound_text, json[QString("transferSoundText")]);
    m_transfer_sound_text_isSet = !json[QString("transferSoundText")].isNull() && m_transfer_sound_text_isValid;

    m_transfer_sound_text_voice_isValid = ::OpenAPI::fromJsonValue(m_transfer_sound_text_voice, json[QString("transferSoundTextVoice")]);
    m_transfer_sound_text_voice_isSet = !json[QString("transferSoundTextVoice")].isNull() && m_transfer_sound_text_voice_isValid;
}

QString OAICallBroadcastSounds::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICallBroadcastSounds::asJsonObject() const {
    QJsonObject obj;
    if (m_dnc_digit_isSet) {
        obj.insert(QString("dncDigit"), ::OpenAPI::toJsonValue(m_dnc_digit));
    }
    if (m_dnc_sound_id_isSet) {
        obj.insert(QString("dncSoundId"), ::OpenAPI::toJsonValue(m_dnc_sound_id));
    }
    if (m_dnc_sound_text_isSet) {
        obj.insert(QString("dncSoundText"), ::OpenAPI::toJsonValue(m_dnc_sound_text));
    }
    if (m_dnc_sound_text_voice_isSet) {
        obj.insert(QString("dncSoundTextVoice"), ::OpenAPI::toJsonValue(m_dnc_sound_text_voice));
    }
    if (m_live_sound_id_isSet) {
        obj.insert(QString("liveSoundId"), ::OpenAPI::toJsonValue(m_live_sound_id));
    }
    if (m_live_sound_text_isSet) {
        obj.insert(QString("liveSoundText"), ::OpenAPI::toJsonValue(m_live_sound_text));
    }
    if (m_live_sound_text_voice_isSet) {
        obj.insert(QString("liveSoundTextVoice"), ::OpenAPI::toJsonValue(m_live_sound_text_voice));
    }
    if (m_machine_sound_id_isSet) {
        obj.insert(QString("machineSoundId"), ::OpenAPI::toJsonValue(m_machine_sound_id));
    }
    if (m_machine_sound_text_isSet) {
        obj.insert(QString("machineSoundText"), ::OpenAPI::toJsonValue(m_machine_sound_text));
    }
    if (m_machine_sound_text_voice_isSet) {
        obj.insert(QString("machineSoundTextVoice"), ::OpenAPI::toJsonValue(m_machine_sound_text_voice));
    }
    if (m_transfer_digit_isSet) {
        obj.insert(QString("transferDigit"), ::OpenAPI::toJsonValue(m_transfer_digit));
    }
    if (m_transfer_number_isSet) {
        obj.insert(QString("transferNumber"), ::OpenAPI::toJsonValue(m_transfer_number));
    }
    if (m_transfer_sound_id_isSet) {
        obj.insert(QString("transferSoundId"), ::OpenAPI::toJsonValue(m_transfer_sound_id));
    }
    if (m_transfer_sound_text_isSet) {
        obj.insert(QString("transferSoundText"), ::OpenAPI::toJsonValue(m_transfer_sound_text));
    }
    if (m_transfer_sound_text_voice_isSet) {
        obj.insert(QString("transferSoundTextVoice"), ::OpenAPI::toJsonValue(m_transfer_sound_text_voice));
    }
    return obj;
}

QString OAICallBroadcastSounds::getDncDigit() const {
    return m_dnc_digit;
}
void OAICallBroadcastSounds::setDncDigit(const QString &dnc_digit) {
    m_dnc_digit = dnc_digit;
    m_dnc_digit_isSet = true;
}

bool OAICallBroadcastSounds::is_dnc_digit_Set() const{
    return m_dnc_digit_isSet;
}

bool OAICallBroadcastSounds::is_dnc_digit_Valid() const{
    return m_dnc_digit_isValid;
}

qint64 OAICallBroadcastSounds::getDncSoundId() const {
    return m_dnc_sound_id;
}
void OAICallBroadcastSounds::setDncSoundId(const qint64 &dnc_sound_id) {
    m_dnc_sound_id = dnc_sound_id;
    m_dnc_sound_id_isSet = true;
}

bool OAICallBroadcastSounds::is_dnc_sound_id_Set() const{
    return m_dnc_sound_id_isSet;
}

bool OAICallBroadcastSounds::is_dnc_sound_id_Valid() const{
    return m_dnc_sound_id_isValid;
}

QString OAICallBroadcastSounds::getDncSoundText() const {
    return m_dnc_sound_text;
}
void OAICallBroadcastSounds::setDncSoundText(const QString &dnc_sound_text) {
    m_dnc_sound_text = dnc_sound_text;
    m_dnc_sound_text_isSet = true;
}

bool OAICallBroadcastSounds::is_dnc_sound_text_Set() const{
    return m_dnc_sound_text_isSet;
}

bool OAICallBroadcastSounds::is_dnc_sound_text_Valid() const{
    return m_dnc_sound_text_isValid;
}

QString OAICallBroadcastSounds::getDncSoundTextVoice() const {
    return m_dnc_sound_text_voice;
}
void OAICallBroadcastSounds::setDncSoundTextVoice(const QString &dnc_sound_text_voice) {
    m_dnc_sound_text_voice = dnc_sound_text_voice;
    m_dnc_sound_text_voice_isSet = true;
}

bool OAICallBroadcastSounds::is_dnc_sound_text_voice_Set() const{
    return m_dnc_sound_text_voice_isSet;
}

bool OAICallBroadcastSounds::is_dnc_sound_text_voice_Valid() const{
    return m_dnc_sound_text_voice_isValid;
}

qint64 OAICallBroadcastSounds::getLiveSoundId() const {
    return m_live_sound_id;
}
void OAICallBroadcastSounds::setLiveSoundId(const qint64 &live_sound_id) {
    m_live_sound_id = live_sound_id;
    m_live_sound_id_isSet = true;
}

bool OAICallBroadcastSounds::is_live_sound_id_Set() const{
    return m_live_sound_id_isSet;
}

bool OAICallBroadcastSounds::is_live_sound_id_Valid() const{
    return m_live_sound_id_isValid;
}

QString OAICallBroadcastSounds::getLiveSoundText() const {
    return m_live_sound_text;
}
void OAICallBroadcastSounds::setLiveSoundText(const QString &live_sound_text) {
    m_live_sound_text = live_sound_text;
    m_live_sound_text_isSet = true;
}

bool OAICallBroadcastSounds::is_live_sound_text_Set() const{
    return m_live_sound_text_isSet;
}

bool OAICallBroadcastSounds::is_live_sound_text_Valid() const{
    return m_live_sound_text_isValid;
}

QString OAICallBroadcastSounds::getLiveSoundTextVoice() const {
    return m_live_sound_text_voice;
}
void OAICallBroadcastSounds::setLiveSoundTextVoice(const QString &live_sound_text_voice) {
    m_live_sound_text_voice = live_sound_text_voice;
    m_live_sound_text_voice_isSet = true;
}

bool OAICallBroadcastSounds::is_live_sound_text_voice_Set() const{
    return m_live_sound_text_voice_isSet;
}

bool OAICallBroadcastSounds::is_live_sound_text_voice_Valid() const{
    return m_live_sound_text_voice_isValid;
}

qint64 OAICallBroadcastSounds::getMachineSoundId() const {
    return m_machine_sound_id;
}
void OAICallBroadcastSounds::setMachineSoundId(const qint64 &machine_sound_id) {
    m_machine_sound_id = machine_sound_id;
    m_machine_sound_id_isSet = true;
}

bool OAICallBroadcastSounds::is_machine_sound_id_Set() const{
    return m_machine_sound_id_isSet;
}

bool OAICallBroadcastSounds::is_machine_sound_id_Valid() const{
    return m_machine_sound_id_isValid;
}

QString OAICallBroadcastSounds::getMachineSoundText() const {
    return m_machine_sound_text;
}
void OAICallBroadcastSounds::setMachineSoundText(const QString &machine_sound_text) {
    m_machine_sound_text = machine_sound_text;
    m_machine_sound_text_isSet = true;
}

bool OAICallBroadcastSounds::is_machine_sound_text_Set() const{
    return m_machine_sound_text_isSet;
}

bool OAICallBroadcastSounds::is_machine_sound_text_Valid() const{
    return m_machine_sound_text_isValid;
}

QString OAICallBroadcastSounds::getMachineSoundTextVoice() const {
    return m_machine_sound_text_voice;
}
void OAICallBroadcastSounds::setMachineSoundTextVoice(const QString &machine_sound_text_voice) {
    m_machine_sound_text_voice = machine_sound_text_voice;
    m_machine_sound_text_voice_isSet = true;
}

bool OAICallBroadcastSounds::is_machine_sound_text_voice_Set() const{
    return m_machine_sound_text_voice_isSet;
}

bool OAICallBroadcastSounds::is_machine_sound_text_voice_Valid() const{
    return m_machine_sound_text_voice_isValid;
}

QString OAICallBroadcastSounds::getTransferDigit() const {
    return m_transfer_digit;
}
void OAICallBroadcastSounds::setTransferDigit(const QString &transfer_digit) {
    m_transfer_digit = transfer_digit;
    m_transfer_digit_isSet = true;
}

bool OAICallBroadcastSounds::is_transfer_digit_Set() const{
    return m_transfer_digit_isSet;
}

bool OAICallBroadcastSounds::is_transfer_digit_Valid() const{
    return m_transfer_digit_isValid;
}

QString OAICallBroadcastSounds::getTransferNumber() const {
    return m_transfer_number;
}
void OAICallBroadcastSounds::setTransferNumber(const QString &transfer_number) {
    m_transfer_number = transfer_number;
    m_transfer_number_isSet = true;
}

bool OAICallBroadcastSounds::is_transfer_number_Set() const{
    return m_transfer_number_isSet;
}

bool OAICallBroadcastSounds::is_transfer_number_Valid() const{
    return m_transfer_number_isValid;
}

qint64 OAICallBroadcastSounds::getTransferSoundId() const {
    return m_transfer_sound_id;
}
void OAICallBroadcastSounds::setTransferSoundId(const qint64 &transfer_sound_id) {
    m_transfer_sound_id = transfer_sound_id;
    m_transfer_sound_id_isSet = true;
}

bool OAICallBroadcastSounds::is_transfer_sound_id_Set() const{
    return m_transfer_sound_id_isSet;
}

bool OAICallBroadcastSounds::is_transfer_sound_id_Valid() const{
    return m_transfer_sound_id_isValid;
}

QString OAICallBroadcastSounds::getTransferSoundText() const {
    return m_transfer_sound_text;
}
void OAICallBroadcastSounds::setTransferSoundText(const QString &transfer_sound_text) {
    m_transfer_sound_text = transfer_sound_text;
    m_transfer_sound_text_isSet = true;
}

bool OAICallBroadcastSounds::is_transfer_sound_text_Set() const{
    return m_transfer_sound_text_isSet;
}

bool OAICallBroadcastSounds::is_transfer_sound_text_Valid() const{
    return m_transfer_sound_text_isValid;
}

QString OAICallBroadcastSounds::getTransferSoundTextVoice() const {
    return m_transfer_sound_text_voice;
}
void OAICallBroadcastSounds::setTransferSoundTextVoice(const QString &transfer_sound_text_voice) {
    m_transfer_sound_text_voice = transfer_sound_text_voice;
    m_transfer_sound_text_voice_isSet = true;
}

bool OAICallBroadcastSounds::is_transfer_sound_text_voice_Set() const{
    return m_transfer_sound_text_voice_isSet;
}

bool OAICallBroadcastSounds::is_transfer_sound_text_voice_Valid() const{
    return m_transfer_sound_text_voice_isValid;
}

bool OAICallBroadcastSounds::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_dnc_digit_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_dnc_sound_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_dnc_sound_text_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_dnc_sound_text_voice_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_live_sound_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_live_sound_text_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_live_sound_text_voice_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_machine_sound_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_machine_sound_text_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_machine_sound_text_voice_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_transfer_digit_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_transfer_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_transfer_sound_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_transfer_sound_text_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_transfer_sound_text_voice_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICallBroadcastSounds::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
