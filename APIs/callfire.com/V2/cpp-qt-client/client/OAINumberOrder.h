/**
 * CallFire API Documentation
 * CallFire
 *
 * The version of the OpenAPI document: V2
 * Contact: support@callfire.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAINumberOrder.h
 *
 * Represents an order created on the CallFire platform
 */

#ifndef OAINumberOrder_H
#define OAINumberOrder_H

#include <QJsonObject>

#include "OAINumberOrderItem.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAINumberOrderItem;

class OAINumberOrder : public OAIObject {
public:
    OAINumberOrder();
    OAINumberOrder(QString json);
    ~OAINumberOrder() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint64 getCreated() const;
    void setCreated(const qint64 &created);
    bool is_created_Set() const;
    bool is_created_Valid() const;

    qint64 getId() const;
    void setId(const qint64 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    OAINumberOrderItem getKeywords() const;
    void setKeywords(const OAINumberOrderItem &keywords);
    bool is_keywords_Set() const;
    bool is_keywords_Valid() const;

    OAINumberOrderItem getLocalNumbers() const;
    void setLocalNumbers(const OAINumberOrderItem &local_numbers);
    bool is_local_numbers_Set() const;
    bool is_local_numbers_Valid() const;

    float getSalesTax() const;
    void setSalesTax(const float &sales_tax);
    bool is_sales_tax_Set() const;
    bool is_sales_tax_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    float getSummary() const;
    void setSummary(const float &summary);
    bool is_summary_Set() const;
    bool is_summary_Valid() const;

    OAINumberOrderItem getTollFreeNumbers() const;
    void setTollFreeNumbers(const OAINumberOrderItem &toll_free_numbers);
    bool is_toll_free_numbers_Set() const;
    bool is_toll_free_numbers_Valid() const;

    float getTotal() const;
    void setTotal(const float &total);
    bool is_total_Set() const;
    bool is_total_Valid() const;

    float getTotalCost() const;
    void setTotalCost(const float &total_cost);
    bool is_total_cost_Set() const;
    bool is_total_cost_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint64 m_created;
    bool m_created_isSet;
    bool m_created_isValid;

    qint64 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    OAINumberOrderItem m_keywords;
    bool m_keywords_isSet;
    bool m_keywords_isValid;

    OAINumberOrderItem m_local_numbers;
    bool m_local_numbers_isSet;
    bool m_local_numbers_isValid;

    float m_sales_tax;
    bool m_sales_tax_isSet;
    bool m_sales_tax_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    float m_summary;
    bool m_summary_isSet;
    bool m_summary_isValid;

    OAINumberOrderItem m_toll_free_numbers;
    bool m_toll_free_numbers_isSet;
    bool m_toll_free_numbers_isValid;

    float m_total;
    bool m_total_isSet;
    bool m_total_isValid;

    float m_total_cost;
    bool m_total_cost_isSet;
    bool m_total_cost_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINumberOrder)

#endif // OAINumberOrder_H
