/**
 * CallFire API Documentation
 * CallFire
 *
 * The version of the OpenAPI document: V2
 * Contact: support@callfire.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICallTrackingConfig.h
 *
 * Call tracking configuration allows you track incoming calls, analyze, respond to customers using sms or voice replies. For more information see [call tracking page](https://www.callfire.com/products/call-tracking)
 */

#ifndef OAICallTrackingConfig_H
#define OAICallTrackingConfig_H

#include <QJsonObject>

#include "OAIGoogleAnalytics.h"
#include "OAIWeeklySchedule.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGoogleAnalytics;
class OAIWeeklySchedule;

class OAICallTrackingConfig : public OAIObject {
public:
    OAICallTrackingConfig();
    OAICallTrackingConfig(QString json);
    ~OAICallTrackingConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint64 getFailedTransferSoundId() const;
    void setFailedTransferSoundId(const qint64 &failed_transfer_sound_id);
    bool is_failed_transfer_sound_id_Set() const;
    bool is_failed_transfer_sound_id_Valid() const;

    OAIGoogleAnalytics getGoogleAnalytics() const;
    void setGoogleAnalytics(const OAIGoogleAnalytics &google_analytics);
    bool is_google_analytics_Set() const;
    bool is_google_analytics_Valid() const;

    qint64 getIntroSoundId() const;
    void setIntroSoundId(const qint64 &intro_sound_id);
    bool is_intro_sound_id_Set() const;
    bool is_intro_sound_id_Valid() const;

    bool isRecorded() const;
    void setRecorded(const bool &recorded);
    bool is_recorded_Set() const;
    bool is_recorded_Valid() const;

    bool isScreen() const;
    void setScreen(const bool &screen);
    bool is_screen_Set() const;
    bool is_screen_Valid() const;

    QList<QString> getTransferNumbers() const;
    void setTransferNumbers(const QList<QString> &transfer_numbers);
    bool is_transfer_numbers_Set() const;
    bool is_transfer_numbers_Valid() const;

    bool isVoicemail() const;
    void setVoicemail(const bool &voicemail);
    bool is_voicemail_Set() const;
    bool is_voicemail_Valid() const;

    qint64 getVoicemailSoundId() const;
    void setVoicemailSoundId(const qint64 &voicemail_sound_id);
    bool is_voicemail_sound_id_Set() const;
    bool is_voicemail_sound_id_Valid() const;

    OAIWeeklySchedule getWeeklySchedule() const;
    void setWeeklySchedule(const OAIWeeklySchedule &weekly_schedule);
    bool is_weekly_schedule_Set() const;
    bool is_weekly_schedule_Valid() const;

    qint64 getWhisperSoundId() const;
    void setWhisperSoundId(const qint64 &whisper_sound_id);
    bool is_whisper_sound_id_Set() const;
    bool is_whisper_sound_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint64 m_failed_transfer_sound_id;
    bool m_failed_transfer_sound_id_isSet;
    bool m_failed_transfer_sound_id_isValid;

    OAIGoogleAnalytics m_google_analytics;
    bool m_google_analytics_isSet;
    bool m_google_analytics_isValid;

    qint64 m_intro_sound_id;
    bool m_intro_sound_id_isSet;
    bool m_intro_sound_id_isValid;

    bool m_recorded;
    bool m_recorded_isSet;
    bool m_recorded_isValid;

    bool m_screen;
    bool m_screen_isSet;
    bool m_screen_isValid;

    QList<QString> m_transfer_numbers;
    bool m_transfer_numbers_isSet;
    bool m_transfer_numbers_isValid;

    bool m_voicemail;
    bool m_voicemail_isSet;
    bool m_voicemail_isValid;

    qint64 m_voicemail_sound_id;
    bool m_voicemail_sound_id_isSet;
    bool m_voicemail_sound_id_isValid;

    OAIWeeklySchedule m_weekly_schedule;
    bool m_weekly_schedule_isSet;
    bool m_weekly_schedule_isValid;

    qint64 m_whisper_sound_id;
    bool m_whisper_sound_id_isSet;
    bool m_whisper_sound_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICallTrackingConfig)

#endif // OAICallTrackingConfig_H
