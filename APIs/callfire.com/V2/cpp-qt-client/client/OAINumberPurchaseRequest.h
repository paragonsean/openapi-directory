/**
 * CallFire API Documentation
 * CallFire
 *
 * The version of the OpenAPI document: V2
 * Contact: support@callfire.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAINumberPurchaseRequest.h
 *
 * Request object is used to order a local or toll-free numbers
 */

#ifndef OAINumberPurchaseRequest_H
#define OAINumberPurchaseRequest_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAINumberPurchaseRequest : public OAIObject {
public:
    OAINumberPurchaseRequest();
    OAINumberPurchaseRequest(QString json);
    ~OAINumberPurchaseRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCity() const;
    void setCity(const QString &city);
    bool is_city_Set() const;
    bool is_city_Valid() const;

    qint32 getLocalCount() const;
    void setLocalCount(const qint32 &local_count);
    bool is_local_count_Set() const;
    bool is_local_count_Valid() const;

    QList<QString> getNumbers() const;
    void setNumbers(const QList<QString> &numbers);
    bool is_numbers_Set() const;
    bool is_numbers_Valid() const;

    QString getPrefix() const;
    void setPrefix(const QString &prefix);
    bool is_prefix_Set() const;
    bool is_prefix_Valid() const;

    QString getPromo() const;
    void setPromo(const QString &promo);
    bool is_promo_Set() const;
    bool is_promo_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    qint32 getTollFreeCount() const;
    void setTollFreeCount(const qint32 &toll_free_count);
    bool is_toll_free_count_Set() const;
    bool is_toll_free_count_Valid() const;

    QString getZipcode() const;
    void setZipcode(const QString &zipcode);
    bool is_zipcode_Set() const;
    bool is_zipcode_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_city;
    bool m_city_isSet;
    bool m_city_isValid;

    qint32 m_local_count;
    bool m_local_count_isSet;
    bool m_local_count_isValid;

    QList<QString> m_numbers;
    bool m_numbers_isSet;
    bool m_numbers_isValid;

    QString m_prefix;
    bool m_prefix_isSet;
    bool m_prefix_isValid;

    QString m_promo;
    bool m_promo_isSet;
    bool m_promo_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    qint32 m_toll_free_count;
    bool m_toll_free_count_isSet;
    bool m_toll_free_count_isValid;

    QString m_zipcode;
    bool m_zipcode_isSet;
    bool m_zipcode_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINumberPurchaseRequest)

#endif // OAINumberPurchaseRequest_H
