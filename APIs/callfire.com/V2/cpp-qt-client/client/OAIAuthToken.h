/**
 * CallFire API Documentation
 * CallFire
 *
 * The version of the OpenAPI document: V2
 * Contact: support@callfire.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAuthToken.h
 *
 * ~
 */

#ifndef OAIAuthToken_H
#define OAIAuthToken_H

#include <QJsonObject>

#include "OAIOAuthSession.h"
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIOAuthSession;

class OAIAuthToken : public OAIObject {
public:
    OAIAuthToken();
    OAIAuthToken(QString json);
    ~OAIAuthToken() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint64 getAccountId() const;
    void setAccountId(const qint64 &account_id);
    bool is_account_id_Set() const;
    bool is_account_id_Valid() const;

    bool isAdminClient() const;
    void setAdminClient(const bool &admin_client);
    bool is_admin_client_Set() const;
    bool is_admin_client_Valid() const;

    OAIAuthToken getAdminToken() const;
    void setAdminToken(const OAIAuthToken &admin_token);
    bool is_admin_token_Set() const;
    bool is_admin_token_Valid() const;

    QMap<QString, QString> getAttributes() const;
    void setAttributes(const QMap<QString, QString> &attributes);
    bool is_attributes_Set() const;
    bool is_attributes_Valid() const;

    QString getBrand() const;
    void setBrand(const QString &brand);
    bool is_brand_Set() const;
    bool is_brand_Valid() const;

    bool isEzSpaClient() const;
    void setEzSpaClient(const bool &ez_spa_client);
    bool is_ez_spa_client_Set() const;
    bool is_ez_spa_client_Valid() const;

    bool isMigration() const;
    void setMigration(const bool &migration);
    bool is_migration_Set() const;
    bool is_migration_Valid() const;

    OAIOAuthSession getSession() const;
    void setSession(const OAIOAuthSession &session);
    bool is_session_Set() const;
    bool is_session_Valid() const;

    QString getSessionId() const;
    void setSessionId(const QString &session_id);
    bool is_session_id_Set() const;
    bool is_session_id_Valid() const;

    qint64 getUserId() const;
    void setUserId(const qint64 &user_id);
    bool is_user_id_Set() const;
    bool is_user_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint64 m_account_id;
    bool m_account_id_isSet;
    bool m_account_id_isValid;

    bool m_admin_client;
    bool m_admin_client_isSet;
    bool m_admin_client_isValid;

    OAIAuthToken m_admin_token;
    bool m_admin_token_isSet;
    bool m_admin_token_isValid;

    QMap<QString, QString> m_attributes;
    bool m_attributes_isSet;
    bool m_attributes_isValid;

    QString m_brand;
    bool m_brand_isSet;
    bool m_brand_isValid;

    bool m_ez_spa_client;
    bool m_ez_spa_client_isSet;
    bool m_ez_spa_client_isValid;

    bool m_migration;
    bool m_migration_isSet;
    bool m_migration_isValid;

    OAIOAuthSession m_session;
    bool m_session_isSet;
    bool m_session_isValid;

    QString m_session_id;
    bool m_session_id_isSet;
    bool m_session_id_isValid;

    qint64 m_user_id;
    bool m_user_id_isSet;
    bool m_user_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAuthToken)

#endif // OAIAuthToken_H
