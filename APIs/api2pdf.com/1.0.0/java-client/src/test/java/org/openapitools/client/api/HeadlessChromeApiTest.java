/*
 * Api2Pdf - PDF Generation, Powered by AWS Lambda
 *  # Introduction [Api2Pdf](https://www.api2pdf.com) is a powerful PDF generation API with no rate limits or file size constraints. Api2Pdf runs on AWS Lambda, a serverless architecture powered by Amazon to scale to millions of requests while being up to 90% cheaper than alternatives. **Supports wkhtmltopdf, Headless Chrome, LibreOffice, and PDF Merge.** You can also generate barcodes with ZXING (Zebra Crossing). # SDKs & Client Libraries We've made a number of open source libraries available for the API - Python: [https://github.com/api2pdf/api2pdf.python](https://github.com/api2pdf/api2pdf.python) - .NET: [https://github.com/api2pdf/api2pdf.dotnet](https://github.com/api2pdf/api2pdf.dotnet) - Nodejs: [https://github.com/api2pdf/api2pdf.node](https://github.com/api2pdf/api2pdf.node) - PHP: [https://github.com/Api2Pdf/api2pdf.php](https://github.com/Api2Pdf/api2pdf.php) - Ruby: (Coming soon) # Authorization Create an account at [portal.api2pdf.com](https://portal.api2pdf.com/register) to get an API key.  **Authorize your API calls** - GET requests, include apikey=YOUR-API-KEY as a query string parameter - POST requests, add **Authorization** to your header. ``` Authorization: YOUR-API-KEY ```  # Quickstart If you are looking for just a quick call to grab PDFs of a URL, you can do a GET request like: ``` https://v2018.api2pdf.com/chrome/url?url={UrlToConvert}&apikey={YourApiKey} ```  For more advanced usage and settings, see the API specification below. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@api2pdf.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ApiResponseFailure;
import org.openapitools.client.model.ApiResponseSuccess;
import org.openapitools.client.model.ChromeHtmlToPdfRequest;
import org.openapitools.client.model.ChromeUrlToPdfRequest;
import java.io.File;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for HeadlessChromeApi
 */
@Disabled
public class HeadlessChromeApiTest {

    private final HeadlessChromeApi api = new HeadlessChromeApi();

    /**
     * Convert raw HTML to PDF
     *
     * Convert HTML to a PDF using Headless Chrome on AWS Lambda. ### Authorize via Header of Request **Authorization: YOUR-API-KEY**
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void chromeFromHtmlPostTest() throws ApiException {
        ChromeHtmlToPdfRequest chromeHtmlToPdfRequest = null;
        ApiResponseSuccess response = api.chromeFromHtmlPost(chromeHtmlToPdfRequest);
        // TODO: test validations
    }

    /**
     * Convert URL to PDF
     *
     * Convert a URL or Web Page to PDF using Headless Chrome on AWS Lambda. This GET request is for convenience and does not support advanced options. Use the POST request for more flexibility. ### Authorize via Query String Parameter **apikey&#x3D;YOUR-API-KEY** ### Example &#x60;&#x60;&#x60; https://v2018.api2pdf.com/chrome/url?url&#x3D;{UrlToConvert}&amp;apikey&#x3D;{YourApiKey} &#x60;&#x60;&#x60; 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void chromeFromUrlGETTest() throws ApiException {
        String url = null;
        String output = null;
        ApiResponseSuccess response = api.chromeFromUrlGET(url, output);
        // TODO: test validations
    }

    /**
     * Convert URL to PDF
     *
     * Convert a URL or Web Page to PDF using Headless Chrome on AWS Lambda.. ### Authorize via Header of Request **Authorization: YOUR-API-KEY**
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void chromeFromUrlPostTest() throws ApiException {
        ChromeUrlToPdfRequest chromeUrlToPdfRequest = null;
        ApiResponseSuccess response = api.chromeFromUrlPost(chromeUrlToPdfRequest);
        // TODO: test validations
    }

}
