# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ChromeAdvancedOptions(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, landscape: str=None, print_background: bool=None):
        """ChromeAdvancedOptions - a model defined in OpenAPI

        :param landscape: The landscape of this ChromeAdvancedOptions.
        :param print_background: The print_background of this ChromeAdvancedOptions.
        """
        self.openapi_types = {
            'landscape': str,
            'print_background': bool
        }

        self.attribute_map = {
            'landscape': 'landscape',
            'print_background': 'printBackground'
        }

        self._landscape = landscape
        self._print_background = print_background

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ChromeAdvancedOptions':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ChromeAdvancedOptions of this ChromeAdvancedOptions.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def landscape(self):
        """Gets the landscape of this ChromeAdvancedOptions.


        :return: The landscape of this ChromeAdvancedOptions.
        :rtype: str
        """
        return self._landscape

    @landscape.setter
    def landscape(self, landscape):
        """Sets the landscape of this ChromeAdvancedOptions.


        :param landscape: The landscape of this ChromeAdvancedOptions.
        :type landscape: str
        """

        self._landscape = landscape

    @property
    def print_background(self):
        """Gets the print_background of this ChromeAdvancedOptions.


        :return: The print_background of this ChromeAdvancedOptions.
        :rtype: bool
        """
        return self._print_background

    @print_background.setter
    def print_background(self, print_background):
        """Sets the print_background of this ChromeAdvancedOptions.


        :param print_background: The print_background of this ChromeAdvancedOptions.
        :type print_background: bool
        """

        self._print_background = print_background
