/**
 * Api2Pdf - PDF Generation, Powered by AWS Lambda
 *  # Introduction [Api2Pdf](https://www.api2pdf.com) is a powerful PDF generation API with no rate limits or file size constraints. Api2Pdf runs on AWS Lambda, a serverless architecture powered by Amazon to scale to millions of requests while being up to 90% cheaper than alternatives. **Supports wkhtmltopdf, Headless Chrome, LibreOffice, and PDF Merge.** You can also generate barcodes with ZXING (Zebra Crossing). # SDKs & Client Libraries We've made a number of open source libraries available for the API - Python: [https://github.com/api2pdf/api2pdf.python](https://github.com/api2pdf/api2pdf.python) - .NET: [https://github.com/api2pdf/api2pdf.dotnet](https://github.com/api2pdf/api2pdf.dotnet) - Nodejs: [https://github.com/api2pdf/api2pdf.node](https://github.com/api2pdf/api2pdf.node) - PHP: [https://github.com/Api2Pdf/api2pdf.php](https://github.com/Api2Pdf/api2pdf.php) - Ruby: (Coming soon) # Authorization Create an account at [portal.api2pdf.com](https://portal.api2pdf.com/register) to get an API key.  **Authorize your API calls** - GET requests, include apikey=YOUR-API-KEY as a query string parameter - POST requests, add **Authorization** to your header. ``` Authorization: YOUR-API-KEY ```  # Quickstart If you are looking for just a quick call to grab PDFs of a URL, you can do a GET request like: ``` https://v2018.api2pdf.com/chrome/url?url={UrlToConvert}&apikey={YourApiKey} ```  For more advanced usage and settings, see the API specification below. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@api2pdf.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ChromeAdvancedOptions model module.
 * @module model/ChromeAdvancedOptions
 * @version 1.0.0
 */
class ChromeAdvancedOptions {
    /**
     * Constructs a new <code>ChromeAdvancedOptions</code>.
     * @alias module:model/ChromeAdvancedOptions
     */
    constructor() { 
        
        ChromeAdvancedOptions.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ChromeAdvancedOptions</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ChromeAdvancedOptions} obj Optional instance to populate.
     * @return {module:model/ChromeAdvancedOptions} The populated <code>ChromeAdvancedOptions</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ChromeAdvancedOptions();

            if (data.hasOwnProperty('landscape')) {
                obj['landscape'] = ApiClient.convertToType(data['landscape'], 'String');
            }
            if (data.hasOwnProperty('printBackground')) {
                obj['printBackground'] = ApiClient.convertToType(data['printBackground'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ChromeAdvancedOptions</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ChromeAdvancedOptions</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['landscape'] && !(typeof data['landscape'] === 'string' || data['landscape'] instanceof String)) {
            throw new Error("Expected the field `landscape` to be a primitive type in the JSON string but got " + data['landscape']);
        }

        return true;
    }


}



/**
 * @member {String} landscape
 */
ChromeAdvancedOptions.prototype['landscape'] = undefined;

/**
 * @member {Boolean} printBackground
 */
ChromeAdvancedOptions.prototype['printBackground'] = undefined;






export default ChromeAdvancedOptions;

