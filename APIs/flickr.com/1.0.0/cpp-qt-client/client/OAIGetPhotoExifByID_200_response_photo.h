/**
 * Flickr API Schema
 * A subset of Flickr's API defined in Swagger format.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetPhotoExifByID_200_response_photo.h
 *
 * 
 */

#ifndef OAIGetPhotoExifByID_200_response_photo_H
#define OAIGetPhotoExifByID_200_response_photo_H

#include <QJsonObject>

#include "OAIGetPhotoExifByID_200_response_photo_exif_inner.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGetPhotoExifByID_200_response_photo_exif_inner;

class OAIGetPhotoExifByID_200_response_photo : public OAIObject {
public:
    OAIGetPhotoExifByID_200_response_photo();
    OAIGetPhotoExifByID_200_response_photo(QString json);
    ~OAIGetPhotoExifByID_200_response_photo() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCamera() const;
    void setCamera(const QString &camera);
    bool is_camera_Set() const;
    bool is_camera_Valid() const;

    QList<OAIGetPhotoExifByID_200_response_photo_exif_inner> getExif() const;
    void setExif(const QList<OAIGetPhotoExifByID_200_response_photo_exif_inner> &exif);
    bool is_exif_Set() const;
    bool is_exif_Valid() const;

    QString getFarm() const;
    void setFarm(const QString &farm);
    bool is_farm_Set() const;
    bool is_farm_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getSecret() const;
    void setSecret(const QString &secret);
    bool is_secret_Set() const;
    bool is_secret_Valid() const;

    QString getServer() const;
    void setServer(const QString &server);
    bool is_server_Set() const;
    bool is_server_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_camera;
    bool m_camera_isSet;
    bool m_camera_isValid;

    QList<OAIGetPhotoExifByID_200_response_photo_exif_inner> m_exif;
    bool m_exif_isSet;
    bool m_exif_isValid;

    QString m_farm;
    bool m_farm_isSet;
    bool m_farm_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_secret;
    bool m_secret_isSet;
    bool m_secret_isValid;

    QString m_server;
    bool m_server_isSet;
    bool m_server_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetPhotoExifByID_200_response_photo)

#endif // OAIGetPhotoExifByID_200_response_photo_H
