/**
 * Flickr API Schema
 * A subset of Flickr's API defined in Swagger format.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetPhotoExifByID_200_response_photo_exif_inner.h
 *
 * 
 */

#ifndef OAIGetPhotoExifByID_200_response_photo_exif_inner_H
#define OAIGetPhotoExifByID_200_response_photo_exif_inner_H

#include <QJsonObject>

#include "OAIGetFavoritesContextByID_200_response_count.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGetFavoritesContextByID_200_response_count;

class OAIGetPhotoExifByID_200_response_photo_exif_inner : public OAIObject {
public:
    OAIGetPhotoExifByID_200_response_photo_exif_inner();
    OAIGetPhotoExifByID_200_response_photo_exif_inner(QString json);
    ~OAIGetPhotoExifByID_200_response_photo_exif_inner() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getLabel() const;
    void setLabel(const QString &label);
    bool is_label_Set() const;
    bool is_label_Valid() const;

    OAIGetFavoritesContextByID_200_response_count getRaw() const;
    void setRaw(const OAIGetFavoritesContextByID_200_response_count &raw);
    bool is_raw_Set() const;
    bool is_raw_Valid() const;

    QString getTag() const;
    void setTag(const QString &tag);
    bool is_tag_Set() const;
    bool is_tag_Valid() const;

    QString getTagspace() const;
    void setTagspace(const QString &tagspace);
    bool is_tagspace_Set() const;
    bool is_tagspace_Valid() const;

    QString getTagspaceid() const;
    void setTagspaceid(const QString &tagspaceid);
    bool is_tagspaceid_Set() const;
    bool is_tagspaceid_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_label;
    bool m_label_isSet;
    bool m_label_isValid;

    OAIGetFavoritesContextByID_200_response_count m_raw;
    bool m_raw_isSet;
    bool m_raw_isValid;

    QString m_tag;
    bool m_tag_isSet;
    bool m_tag_isValid;

    QString m_tagspace;
    bool m_tagspace_isSet;
    bool m_tagspace_isValid;

    QString m_tagspaceid;
    bool m_tagspaceid_isSet;
    bool m_tagspaceid_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetPhotoExifByID_200_response_photo_exif_inner)

#endif // OAIGetPhotoExifByID_200_response_photo_exif_inner_H
