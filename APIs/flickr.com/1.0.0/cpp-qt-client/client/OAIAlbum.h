/**
 * Flickr API Schema
 * A subset of Flickr's API defined in Swagger format.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAlbum.h
 *
 * 
 */

#ifndef OAIAlbum_H
#define OAIAlbum_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAlbum : public OAIObject {
public:
    OAIAlbum();
    OAIAlbum(QString json);
    ~OAIAlbum() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isCanComment() const;
    void setCanComment(const bool &can_comment);
    bool is_can_comment_Set() const;
    bool is_can_comment_Valid() const;

    double getCountComments() const;
    void setCountComments(const double &count_comments);
    bool is_count_comments_Set() const;
    bool is_count_comments_Valid() const;

    double getCountViews() const;
    void setCountViews(const double &count_views);
    bool is_count_views_Set() const;
    bool is_count_views_Valid() const;

    double getDateCreate() const;
    void setDateCreate(const double &date_create);
    bool is_date_create_Set() const;
    bool is_date_create_Valid() const;

    double getDateUpdate() const;
    void setDateUpdate(const double &date_update);
    bool is_date_update_Set() const;
    bool is_date_update_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getFarm() const;
    void setFarm(const QString &farm);
    bool is_farm_Set() const;
    bool is_farm_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    double getPhotos() const;
    void setPhotos(const double &photos);
    bool is_photos_Set() const;
    bool is_photos_Valid() const;

    QString getPrimary() const;
    void setPrimary(const QString &primary);
    bool is_primary_Set() const;
    bool is_primary_Valid() const;

    QString getSecret() const;
    void setSecret(const QString &secret);
    bool is_secret_Set() const;
    bool is_secret_Valid() const;

    QString getServer() const;
    void setServer(const QString &server);
    bool is_server_Set() const;
    bool is_server_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    double getVideos() const;
    void setVideos(const double &videos);
    bool is_videos_Set() const;
    bool is_videos_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_can_comment;
    bool m_can_comment_isSet;
    bool m_can_comment_isValid;

    double m_count_comments;
    bool m_count_comments_isSet;
    bool m_count_comments_isValid;

    double m_count_views;
    bool m_count_views_isSet;
    bool m_count_views_isValid;

    double m_date_create;
    bool m_date_create_isSet;
    bool m_date_create_isValid;

    double m_date_update;
    bool m_date_update_isSet;
    bool m_date_update_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_farm;
    bool m_farm_isSet;
    bool m_farm_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    double m_photos;
    bool m_photos_isSet;
    bool m_photos_isValid;

    QString m_primary;
    bool m_primary_isSet;
    bool m_primary_isValid;

    QString m_secret;
    bool m_secret_isSet;
    bool m_secret_isValid;

    QString m_server;
    bool m_server_isSet;
    bool m_server_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;

    double m_videos;
    bool m_videos_isSet;
    bool m_videos_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAlbum)

#endif // OAIAlbum_H
