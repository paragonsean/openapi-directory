/**
 * Flickr API Schema
 * A subset of Flickr's API defined in Swagger format.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPhoto.h
 *
 * 
 */

#ifndef OAIPhoto_H
#define OAIPhoto_H

#include <QJsonObject>

#include "OAIGetFavoritesContextByID_200_response_count.h"
#include "OAIOwner.h"
#include "OAIPhoto_dates.h"
#include "OAIPhoto_editability.h"
#include "OAIPhoto_notes.h"
#include "OAIPhoto_people.h"
#include "OAIPhoto_permissions.h"
#include "OAIPhoto_tags.h"
#include "OAIPhoto_urls.h"
#include "OAIPhoto_usage.h"
#include "OAIPhoto_visibility.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGetFavoritesContextByID_200_response_count;
class OAIPhoto_dates;
class OAIPhoto_editability;
class OAIPhoto_notes;
class OAIOwner;
class OAIPhoto_people;
class OAIPhoto_permissions;
class OAIPhoto_tags;
class OAIPhoto_urls;
class OAIPhoto_usage;
class OAIPhoto_visibility;

class OAIPhoto : public OAIObject {
public:
    OAIPhoto();
    OAIPhoto(QString json);
    ~OAIPhoto() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIGetFavoritesContextByID_200_response_count getComments() const;
    void setComments(const OAIGetFavoritesContextByID_200_response_count &comments);
    bool is_comments_Set() const;
    bool is_comments_Valid() const;

    OAIPhoto_dates getDates() const;
    void setDates(const OAIPhoto_dates &dates);
    bool is_dates_Set() const;
    bool is_dates_Valid() const;

    QString getDateuploaded() const;
    void setDateuploaded(const QString &dateuploaded);
    bool is_dateuploaded_Set() const;
    bool is_dateuploaded_Valid() const;

    OAIGetFavoritesContextByID_200_response_count getDescription() const;
    void setDescription(const OAIGetFavoritesContextByID_200_response_count &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    OAIPhoto_editability getEditability() const;
    void setEditability(const OAIPhoto_editability &editability);
    bool is_editability_Set() const;
    bool is_editability_Valid() const;

    QString getFarm() const;
    void setFarm(const QString &farm);
    bool is_farm_Set() const;
    bool is_farm_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    bool isIsfavorite() const;
    void setIsfavorite(const bool &isfavorite);
    bool is_isfavorite_Set() const;
    bool is_isfavorite_Valid() const;

    QString getLicense() const;
    void setLicense(const QString &license);
    bool is_license_Set() const;
    bool is_license_Valid() const;

    QString getMedia() const;
    void setMedia(const QString &media);
    bool is_media_Set() const;
    bool is_media_Valid() const;

    OAIPhoto_notes getNotes() const;
    void setNotes(const OAIPhoto_notes &notes);
    bool is_notes_Set() const;
    bool is_notes_Valid() const;

    QString getOriginalsecret() const;
    void setOriginalsecret(const QString &originalsecret);
    bool is_originalsecret_Set() const;
    bool is_originalsecret_Valid() const;

    OAIOwner getOwner() const;
    void setOwner(const OAIOwner &owner);
    bool is_owner_Set() const;
    bool is_owner_Valid() const;

    OAIPhoto_people getPeople() const;
    void setPeople(const OAIPhoto_people &people);
    bool is_people_Set() const;
    bool is_people_Valid() const;

    OAIPhoto_permissions getPermissions() const;
    void setPermissions(const OAIPhoto_permissions &permissions);
    bool is_permissions_Set() const;
    bool is_permissions_Valid() const;

    OAIPhoto_editability getPubliceditability() const;
    void setPubliceditability(const OAIPhoto_editability &publiceditability);
    bool is_publiceditability_Set() const;
    bool is_publiceditability_Valid() const;

    QString getRotation() const;
    void setRotation(const QString &rotation);
    bool is_rotation_Set() const;
    bool is_rotation_Valid() const;

    bool isSafe() const;
    void setSafe(const bool &safe);
    bool is_safe_Set() const;
    bool is_safe_Valid() const;

    QString getSafetyLevel() const;
    void setSafetyLevel(const QString &safety_level);
    bool is_safety_level_Set() const;
    bool is_safety_level_Valid() const;

    QString getSecret() const;
    void setSecret(const QString &secret);
    bool is_secret_Set() const;
    bool is_secret_Valid() const;

    QString getServer() const;
    void setServer(const QString &server);
    bool is_server_Set() const;
    bool is_server_Valid() const;

    OAIPhoto_tags getTags() const;
    void setTags(const OAIPhoto_tags &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    OAIGetFavoritesContextByID_200_response_count getTitle() const;
    void setTitle(const OAIGetFavoritesContextByID_200_response_count &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    OAIPhoto_urls getUrls() const;
    void setUrls(const OAIPhoto_urls &urls);
    bool is_urls_Set() const;
    bool is_urls_Valid() const;

    OAIPhoto_usage getUsage() const;
    void setUsage(const OAIPhoto_usage &usage);
    bool is_usage_Set() const;
    bool is_usage_Valid() const;

    QString getViews() const;
    void setViews(const QString &views);
    bool is_views_Set() const;
    bool is_views_Valid() const;

    OAIPhoto_visibility getVisibility() const;
    void setVisibility(const OAIPhoto_visibility &visibility);
    bool is_visibility_Set() const;
    bool is_visibility_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIGetFavoritesContextByID_200_response_count m_comments;
    bool m_comments_isSet;
    bool m_comments_isValid;

    OAIPhoto_dates m_dates;
    bool m_dates_isSet;
    bool m_dates_isValid;

    QString m_dateuploaded;
    bool m_dateuploaded_isSet;
    bool m_dateuploaded_isValid;

    OAIGetFavoritesContextByID_200_response_count m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    OAIPhoto_editability m_editability;
    bool m_editability_isSet;
    bool m_editability_isValid;

    QString m_farm;
    bool m_farm_isSet;
    bool m_farm_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    bool m_isfavorite;
    bool m_isfavorite_isSet;
    bool m_isfavorite_isValid;

    QString m_license;
    bool m_license_isSet;
    bool m_license_isValid;

    QString m_media;
    bool m_media_isSet;
    bool m_media_isValid;

    OAIPhoto_notes m_notes;
    bool m_notes_isSet;
    bool m_notes_isValid;

    QString m_originalsecret;
    bool m_originalsecret_isSet;
    bool m_originalsecret_isValid;

    OAIOwner m_owner;
    bool m_owner_isSet;
    bool m_owner_isValid;

    OAIPhoto_people m_people;
    bool m_people_isSet;
    bool m_people_isValid;

    OAIPhoto_permissions m_permissions;
    bool m_permissions_isSet;
    bool m_permissions_isValid;

    OAIPhoto_editability m_publiceditability;
    bool m_publiceditability_isSet;
    bool m_publiceditability_isValid;

    QString m_rotation;
    bool m_rotation_isSet;
    bool m_rotation_isValid;

    bool m_safe;
    bool m_safe_isSet;
    bool m_safe_isValid;

    QString m_safety_level;
    bool m_safety_level_isSet;
    bool m_safety_level_isValid;

    QString m_secret;
    bool m_secret_isSet;
    bool m_secret_isValid;

    QString m_server;
    bool m_server_isSet;
    bool m_server_isValid;

    OAIPhoto_tags m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    OAIGetFavoritesContextByID_200_response_count m_title;
    bool m_title_isSet;
    bool m_title_isValid;

    OAIPhoto_urls m_urls;
    bool m_urls_isSet;
    bool m_urls_isValid;

    OAIPhoto_usage m_usage;
    bool m_usage_isSet;
    bool m_usage_isValid;

    QString m_views;
    bool m_views_isSet;
    bool m_views_isValid;

    OAIPhoto_visibility m_visibility;
    bool m_visibility_isSet;
    bool m_visibility_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPhoto)

#endif // OAIPhoto_H
