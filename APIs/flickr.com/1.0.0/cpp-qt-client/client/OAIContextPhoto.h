/**
 * Flickr API Schema
 * A subset of Flickr's API defined in Swagger format.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIContextPhoto.h
 *
 * 
 */

#ifndef OAIContextPhoto_H
#define OAIContextPhoto_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIContextPhoto : public OAIObject {
public:
    OAIContextPhoto();
    OAIContextPhoto(QString json);
    ~OAIContextPhoto() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getFarm() const;
    void setFarm(const QString &farm);
    bool is_farm_Set() const;
    bool is_farm_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    bool isIsFaved() const;
    void setIsFaved(const bool &is_faved);
    bool is_is_faved_Set() const;
    bool is_is_faved_Valid() const;

    qint32 getLicense() const;
    void setLicense(const qint32 &license);
    bool is_license_Set() const;
    bool is_license_Valid() const;

    QString getMedia() const;
    void setMedia(const QString &media);
    bool is_media_Set() const;
    bool is_media_Valid() const;

    QString getOwner() const;
    void setOwner(const QString &owner);
    bool is_owner_Set() const;
    bool is_owner_Valid() const;

    bool isSafe() const;
    void setSafe(const bool &safe);
    bool is_safe_Set() const;
    bool is_safe_Valid() const;

    QString getSecret() const;
    void setSecret(const QString &secret);
    bool is_secret_Set() const;
    bool is_secret_Valid() const;

    QString getServer() const;
    void setServer(const QString &server);
    bool is_server_Set() const;
    bool is_server_Valid() const;

    QString getThumb() const;
    void setThumb(const QString &thumb);
    bool is_thumb_Set() const;
    bool is_thumb_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_farm;
    bool m_farm_isSet;
    bool m_farm_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    bool m_is_faved;
    bool m_is_faved_isSet;
    bool m_is_faved_isValid;

    qint32 m_license;
    bool m_license_isSet;
    bool m_license_isValid;

    QString m_media;
    bool m_media_isSet;
    bool m_media_isValid;

    QString m_owner;
    bool m_owner_isSet;
    bool m_owner_isValid;

    bool m_safe;
    bool m_safe_isSet;
    bool m_safe_isValid;

    QString m_secret;
    bool m_secret_isSet;
    bool m_secret_isValid;

    QString m_server;
    bool m_server_isSet;
    bool m_server_isValid;

    QString m_thumb;
    bool m_thumb_isSet;
    bool m_thumb_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIContextPhoto)

#endif // OAIContextPhoto_H
