/**
 * Flickr API Schema
 * A subset of Flickr's API defined in Swagger format.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPerson_photos.h
 *
 * 
 */

#ifndef OAIPerson_photos_H
#define OAIPerson_photos_H

#include <QJsonObject>

#include "OAIGetFavoritesContextByID_200_response_count.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGetFavoritesContextByID_200_response_count;

class OAIPerson_photos : public OAIObject {
public:
    OAIPerson_photos();
    OAIPerson_photos(QString json);
    ~OAIPerson_photos() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIGetFavoritesContextByID_200_response_count getCount() const;
    void setCount(const OAIGetFavoritesContextByID_200_response_count &count);
    bool is_count_Set() const;
    bool is_count_Valid() const;

    OAIGetFavoritesContextByID_200_response_count getFirstdate() const;
    void setFirstdate(const OAIGetFavoritesContextByID_200_response_count &firstdate);
    bool is_firstdate_Set() const;
    bool is_firstdate_Valid() const;

    OAIGetFavoritesContextByID_200_response_count getFirstdatetaken() const;
    void setFirstdatetaken(const OAIGetFavoritesContextByID_200_response_count &firstdatetaken);
    bool is_firstdatetaken_Set() const;
    bool is_firstdatetaken_Valid() const;

    OAIGetFavoritesContextByID_200_response_count getViews() const;
    void setViews(const OAIGetFavoritesContextByID_200_response_count &views);
    bool is_views_Set() const;
    bool is_views_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIGetFavoritesContextByID_200_response_count m_count;
    bool m_count_isSet;
    bool m_count_isValid;

    OAIGetFavoritesContextByID_200_response_count m_firstdate;
    bool m_firstdate_isSet;
    bool m_firstdate_isValid;

    OAIGetFavoritesContextByID_200_response_count m_firstdatetaken;
    bool m_firstdatetaken_isSet;
    bool m_firstdatetaken_isValid;

    OAIGetFavoritesContextByID_200_response_count m_views;
    bool m_views_isSet;
    bool m_views_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPerson_photos)

#endif // OAIPerson_photos_H
