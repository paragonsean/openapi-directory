/**
 * Flickr API Schema
 * A subset of Flickr's API defined in Swagger format.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPhoto_people.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPhoto_people::OAIPhoto_people(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPhoto_people::OAIPhoto_people() {
    this->initializeModel();
}

OAIPhoto_people::~OAIPhoto_people() {}

void OAIPhoto_people::initializeModel() {

    m_haspeople_isSet = false;
    m_haspeople_isValid = false;
}

void OAIPhoto_people::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPhoto_people::fromJsonObject(QJsonObject json) {

    m_haspeople_isValid = ::OpenAPI::fromJsonValue(m_haspeople, json[QString("haspeople")]);
    m_haspeople_isSet = !json[QString("haspeople")].isNull() && m_haspeople_isValid;
}

QString OAIPhoto_people::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPhoto_people::asJsonObject() const {
    QJsonObject obj;
    if (m_haspeople_isSet) {
        obj.insert(QString("haspeople"), ::OpenAPI::toJsonValue(m_haspeople));
    }
    return obj;
}

bool OAIPhoto_people::isHaspeople() const {
    return m_haspeople;
}
void OAIPhoto_people::setHaspeople(const bool &haspeople) {
    m_haspeople = haspeople;
    m_haspeople_isSet = true;
}

bool OAIPhoto_people::is_haspeople_Set() const{
    return m_haspeople_isSet;
}

bool OAIPhoto_people::is_haspeople_Valid() const{
    return m_haspeople_isValid;
}

bool OAIPhoto_people::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_haspeople_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPhoto_people::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
