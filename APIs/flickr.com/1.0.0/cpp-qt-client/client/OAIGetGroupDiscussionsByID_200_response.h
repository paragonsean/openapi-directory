/**
 * Flickr API Schema
 * A subset of Flickr's API defined in Swagger format.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetGroupDiscussionsByID_200_response.h
 *
 * 
 */

#ifndef OAIGetGroupDiscussionsByID_200_response_H
#define OAIGetGroupDiscussionsByID_200_response_H

#include <QJsonObject>

#include "OAITopic.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITopic;

class OAIGetGroupDiscussionsByID_200_response : public OAIObject {
public:
    OAIGetGroupDiscussionsByID_200_response();
    OAIGetGroupDiscussionsByID_200_response(QString json);
    ~OAIGetGroupDiscussionsByID_200_response() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getIconfarm() const;
    void setIconfarm(const double &iconfarm);
    bool is_iconfarm_Set() const;
    bool is_iconfarm_Valid() const;

    double getIconserver() const;
    void setIconserver(const double &iconserver);
    bool is_iconserver_Set() const;
    bool is_iconserver_Valid() const;

    bool isIspoolmoderated() const;
    void setIspoolmoderated(const bool &ispoolmoderated);
    bool is_ispoolmoderated_Set() const;
    bool is_ispoolmoderated_Valid() const;

    QString getLang() const;
    void setLang(const QString &lang);
    bool is_lang_Set() const;
    bool is_lang_Valid() const;

    double getMembers() const;
    void setMembers(const double &members);
    bool is_members_Set() const;
    bool is_members_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    double getPage() const;
    void setPage(const double &page);
    bool is_page_Set() const;
    bool is_page_Valid() const;

    double getPages() const;
    void setPages(const double &pages);
    bool is_pages_Set() const;
    bool is_pages_Valid() const;

    double getPerPage() const;
    void setPerPage(const double &per_page);
    bool is_per_page_Set() const;
    bool is_per_page_Valid() const;

    double getPrivacy() const;
    void setPrivacy(const double &privacy);
    bool is_privacy_Set() const;
    bool is_privacy_Valid() const;

    QList<OAITopic> getTopics() const;
    void setTopics(const QList<OAITopic> &topics);
    bool is_topics_Set() const;
    bool is_topics_Valid() const;

    double getTotal() const;
    void setTotal(const double &total);
    bool is_total_Set() const;
    bool is_total_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_iconfarm;
    bool m_iconfarm_isSet;
    bool m_iconfarm_isValid;

    double m_iconserver;
    bool m_iconserver_isSet;
    bool m_iconserver_isValid;

    bool m_ispoolmoderated;
    bool m_ispoolmoderated_isSet;
    bool m_ispoolmoderated_isValid;

    QString m_lang;
    bool m_lang_isSet;
    bool m_lang_isValid;

    double m_members;
    bool m_members_isSet;
    bool m_members_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    double m_page;
    bool m_page_isSet;
    bool m_page_isValid;

    double m_pages;
    bool m_pages_isSet;
    bool m_pages_isValid;

    double m_per_page;
    bool m_per_page_isSet;
    bool m_per_page_isValid;

    double m_privacy;
    bool m_privacy_isSet;
    bool m_privacy_isValid;

    QList<OAITopic> m_topics;
    bool m_topics_isSet;
    bool m_topics_isValid;

    double m_total;
    bool m_total_isSet;
    bool m_total_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetGroupDiscussionsByID_200_response)

#endif // OAIGetGroupDiscussionsByID_200_response_H
