/**
 * Flickr API Schema
 * A subset of Flickr's API defined in Swagger format.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetFavoritesByPersonID_200_response.h
 *
 * 
 */

#ifndef OAIGetFavoritesByPersonID_200_response_H
#define OAIGetFavoritesByPersonID_200_response_H

#include <QJsonObject>

#include "OAIPhoto.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPhoto;

class OAIGetFavoritesByPersonID_200_response : public OAIObject {
public:
    OAIGetFavoritesByPersonID_200_response();
    OAIGetFavoritesByPersonID_200_response(QString json);
    ~OAIGetFavoritesByPersonID_200_response() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getPage() const;
    void setPage(const double &page);
    bool is_page_Set() const;
    bool is_page_Valid() const;

    double getPages() const;
    void setPages(const double &pages);
    bool is_pages_Set() const;
    bool is_pages_Valid() const;

    double getPerpage() const;
    void setPerpage(const double &perpage);
    bool is_perpage_Set() const;
    bool is_perpage_Valid() const;

    QList<OAIPhoto> getPhotos() const;
    void setPhotos(const QList<OAIPhoto> &photos);
    bool is_photos_Set() const;
    bool is_photos_Valid() const;

    double getTotal() const;
    void setTotal(const double &total);
    bool is_total_Set() const;
    bool is_total_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_page;
    bool m_page_isSet;
    bool m_page_isValid;

    double m_pages;
    bool m_pages_isSet;
    bool m_pages_isValid;

    double m_perpage;
    bool m_perpage_isSet;
    bool m_perpage_isValid;

    QList<OAIPhoto> m_photos;
    bool m_photos_isSet;
    bool m_photos_isValid;

    double m_total;
    bool m_total_isSet;
    bool m_total_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetFavoritesByPersonID_200_response)

#endif // OAIGetFavoritesByPersonID_200_response_H
