/**
 * Flickr API Schema
 * A subset of Flickr's API defined in Swagger format.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGroup.h
 *
 * 
 */

#ifndef OAIGroup_H
#define OAIGroup_H

#include <QJsonObject>

#include "OAICover.h"
#include "OAIGetFavoritesContextByID_200_response_count.h"
#include "OAIGroup_blast.h"
#include "OAIGroup_restrictions.h"
#include "OAIGroup_roles.h"
#include "OAIGroup_throttle.h"
#include "OAIPhotoURLs.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGroup_blast;
class OAICover;
class OAIPhotoURLs;
class OAIGetFavoritesContextByID_200_response_count;
class OAIGroup_restrictions;
class OAIGroup_roles;
class OAIGroup_throttle;

class OAIGroup : public OAIObject {
public:
    OAIGroup();
    OAIGroup(QString json);
    ~OAIGroup() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIGroup_blast getBlast() const;
    void setBlast(const OAIGroup_blast &blast);
    bool is_blast_Set() const;
    bool is_blast_Valid() const;

    OAICover getCover() const;
    void setCover(const OAICover &cover);
    bool is_cover_Set() const;
    bool is_cover_Valid() const;

    QString getCoverphotoFarm() const;
    void setCoverphotoFarm(const QString &coverphoto_farm);
    bool is_coverphoto_farm_Set() const;
    bool is_coverphoto_farm_Valid() const;

    QString getCoverphotoServer() const;
    void setCoverphotoServer(const QString &coverphoto_server);
    bool is_coverphoto_server_Set() const;
    bool is_coverphoto_server_Valid() const;

    OAIPhotoURLs getCoverphotoUrl() const;
    void setCoverphotoUrl(const OAIPhotoURLs &coverphoto_url);
    bool is_coverphoto_url_Set() const;
    bool is_coverphoto_url_Valid() const;

    OAIGetFavoritesContextByID_200_response_count getDescription() const;
    void setDescription(const OAIGetFavoritesContextByID_200_response_count &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getIconfarm() const;
    void setIconfarm(const QString &iconfarm);
    bool is_iconfarm_Set() const;
    bool is_iconfarm_Valid() const;

    QString getIconserver() const;
    void setIconserver(const QString &iconserver);
    bool is_iconserver_Set() const;
    bool is_iconserver_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    bool isIsAdmin() const;
    void setIsAdmin(const bool &is_admin);
    bool is_is_admin_Set() const;
    bool is_is_admin_Valid() const;

    bool isIsMember() const;
    void setIsMember(const bool &is_member);
    bool is_is_member_Set() const;
    bool is_is_member_Valid() const;

    bool isIsModerator() const;
    void setIsModerator(const bool &is_moderator);
    bool is_is_moderator_Set() const;
    bool is_is_moderator_Valid() const;

    bool isIspoolmoderated() const;
    void setIspoolmoderated(const bool &ispoolmoderated);
    bool is_ispoolmoderated_Set() const;
    bool is_ispoolmoderated_Valid() const;

    QString getLang() const;
    void setLang(const QString &lang);
    bool is_lang_Set() const;
    bool is_lang_Valid() const;

    OAIGetFavoritesContextByID_200_response_count getMembers() const;
    void setMembers(const OAIGetFavoritesContextByID_200_response_count &members);
    bool is_members_Set() const;
    bool is_members_Valid() const;

    OAIGetFavoritesContextByID_200_response_count getName() const;
    void setName(const OAIGetFavoritesContextByID_200_response_count &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getPathAlias() const;
    void setPathAlias(const QString &path_alias);
    bool is_path_alias_Set() const;
    bool is_path_alias_Valid() const;

    OAIGetFavoritesContextByID_200_response_count getPoolCount() const;
    void setPoolCount(const OAIGetFavoritesContextByID_200_response_count &pool_count);
    bool is_pool_count_Set() const;
    bool is_pool_count_Valid() const;

    qint32 getPoolRows() const;
    void setPoolRows(const qint32 &pool_rows);
    bool is_pool_rows_Set() const;
    bool is_pool_rows_Valid() const;

    OAIGetFavoritesContextByID_200_response_count getPrivacy() const;
    void setPrivacy(const OAIGetFavoritesContextByID_200_response_count &privacy);
    bool is_privacy_Set() const;
    bool is_privacy_Valid() const;

    OAIGroup_restrictions getRestrictions() const;
    void setRestrictions(const OAIGroup_restrictions &restrictions);
    bool is_restrictions_Set() const;
    bool is_restrictions_Valid() const;

    OAIGroup_roles getRoles() const;
    void setRoles(const OAIGroup_roles &roles);
    bool is_roles_Set() const;
    bool is_roles_Valid() const;

    OAIGetFavoritesContextByID_200_response_count getRules() const;
    void setRules(const OAIGetFavoritesContextByID_200_response_count &rules);
    bool is_rules_Set() const;
    bool is_rules_Valid() const;

    OAIGroup_throttle getThrottle() const;
    void setThrottle(const OAIGroup_throttle &throttle);
    bool is_throttle_Set() const;
    bool is_throttle_Valid() const;

    OAIGetFavoritesContextByID_200_response_count getTopicCount() const;
    void setTopicCount(const OAIGetFavoritesContextByID_200_response_count &topic_count);
    bool is_topic_count_Set() const;
    bool is_topic_count_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIGroup_blast m_blast;
    bool m_blast_isSet;
    bool m_blast_isValid;

    OAICover m_cover;
    bool m_cover_isSet;
    bool m_cover_isValid;

    QString m_coverphoto_farm;
    bool m_coverphoto_farm_isSet;
    bool m_coverphoto_farm_isValid;

    QString m_coverphoto_server;
    bool m_coverphoto_server_isSet;
    bool m_coverphoto_server_isValid;

    OAIPhotoURLs m_coverphoto_url;
    bool m_coverphoto_url_isSet;
    bool m_coverphoto_url_isValid;

    OAIGetFavoritesContextByID_200_response_count m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_iconfarm;
    bool m_iconfarm_isSet;
    bool m_iconfarm_isValid;

    QString m_iconserver;
    bool m_iconserver_isSet;
    bool m_iconserver_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    bool m_is_admin;
    bool m_is_admin_isSet;
    bool m_is_admin_isValid;

    bool m_is_member;
    bool m_is_member_isSet;
    bool m_is_member_isValid;

    bool m_is_moderator;
    bool m_is_moderator_isSet;
    bool m_is_moderator_isValid;

    bool m_ispoolmoderated;
    bool m_ispoolmoderated_isSet;
    bool m_ispoolmoderated_isValid;

    QString m_lang;
    bool m_lang_isSet;
    bool m_lang_isValid;

    OAIGetFavoritesContextByID_200_response_count m_members;
    bool m_members_isSet;
    bool m_members_isValid;

    OAIGetFavoritesContextByID_200_response_count m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_path_alias;
    bool m_path_alias_isSet;
    bool m_path_alias_isValid;

    OAIGetFavoritesContextByID_200_response_count m_pool_count;
    bool m_pool_count_isSet;
    bool m_pool_count_isValid;

    qint32 m_pool_rows;
    bool m_pool_rows_isSet;
    bool m_pool_rows_isValid;

    OAIGetFavoritesContextByID_200_response_count m_privacy;
    bool m_privacy_isSet;
    bool m_privacy_isValid;

    OAIGroup_restrictions m_restrictions;
    bool m_restrictions_isSet;
    bool m_restrictions_isValid;

    OAIGroup_roles m_roles;
    bool m_roles_isSet;
    bool m_roles_isValid;

    OAIGetFavoritesContextByID_200_response_count m_rules;
    bool m_rules_isSet;
    bool m_rules_isValid;

    OAIGroup_throttle m_throttle;
    bool m_throttle_isSet;
    bool m_throttle_isValid;

    OAIGetFavoritesContextByID_200_response_count m_topic_count;
    bool m_topic_count_isSet;
    bool m_topic_count_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGroup)

#endif // OAIGroup_H
