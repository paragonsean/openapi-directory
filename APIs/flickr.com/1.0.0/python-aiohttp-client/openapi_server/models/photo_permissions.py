# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PhotoPermissions(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, permaddmeta: str=None, permcomment: str=None):
        """PhotoPermissions - a model defined in OpenAPI

        :param permaddmeta: The permaddmeta of this PhotoPermissions.
        :param permcomment: The permcomment of this PhotoPermissions.
        """
        self.openapi_types = {
            'permaddmeta': str,
            'permcomment': str
        }

        self.attribute_map = {
            'permaddmeta': 'permaddmeta',
            'permcomment': 'permcomment'
        }

        self._permaddmeta = permaddmeta
        self._permcomment = permcomment

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PhotoPermissions':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Photo_permissions of this PhotoPermissions.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def permaddmeta(self):
        """Gets the permaddmeta of this PhotoPermissions.


        :return: The permaddmeta of this PhotoPermissions.
        :rtype: str
        """
        return self._permaddmeta

    @permaddmeta.setter
    def permaddmeta(self, permaddmeta):
        """Sets the permaddmeta of this PhotoPermissions.


        :param permaddmeta: The permaddmeta of this PhotoPermissions.
        :type permaddmeta: str
        """

        self._permaddmeta = permaddmeta

    @property
    def permcomment(self):
        """Gets the permcomment of this PhotoPermissions.


        :return: The permcomment of this PhotoPermissions.
        :rtype: str
        """
        return self._permcomment

    @permcomment.setter
    def permcomment(self, permcomment):
        """Sets the permcomment of this PhotoPermissions.


        :param permcomment: The permcomment of this PhotoPermissions.
        :type permcomment: str
        """

        self._permcomment = permcomment
