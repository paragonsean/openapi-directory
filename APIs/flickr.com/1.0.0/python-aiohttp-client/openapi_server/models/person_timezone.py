# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PersonTimezone(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, label: str=None, offset: str=None, timezone_id: str=None):
        """PersonTimezone - a model defined in OpenAPI

        :param label: The label of this PersonTimezone.
        :param offset: The offset of this PersonTimezone.
        :param timezone_id: The timezone_id of this PersonTimezone.
        """
        self.openapi_types = {
            'label': str,
            'offset': str,
            'timezone_id': str
        }

        self.attribute_map = {
            'label': 'label',
            'offset': 'offset',
            'timezone_id': 'timezone_id'
        }

        self._label = label
        self._offset = offset
        self._timezone_id = timezone_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PersonTimezone':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Person_timezone of this PersonTimezone.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def label(self):
        """Gets the label of this PersonTimezone.


        :return: The label of this PersonTimezone.
        :rtype: str
        """
        return self._label

    @label.setter
    def label(self, label):
        """Sets the label of this PersonTimezone.


        :param label: The label of this PersonTimezone.
        :type label: str
        """

        self._label = label

    @property
    def offset(self):
        """Gets the offset of this PersonTimezone.


        :return: The offset of this PersonTimezone.
        :rtype: str
        """
        return self._offset

    @offset.setter
    def offset(self, offset):
        """Sets the offset of this PersonTimezone.


        :param offset: The offset of this PersonTimezone.
        :type offset: str
        """

        self._offset = offset

    @property
    def timezone_id(self):
        """Gets the timezone_id of this PersonTimezone.


        :return: The timezone_id of this PersonTimezone.
        :rtype: str
        """
        return self._timezone_id

    @timezone_id.setter
    def timezone_id(self, timezone_id):
        """Sets the timezone_id of this PersonTimezone.


        :param timezone_id: The timezone_id of this PersonTimezone.
        :type timezone_id: str
        """

        self._timezone_id = timezone_id
