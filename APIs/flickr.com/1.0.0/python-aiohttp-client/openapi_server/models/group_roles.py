# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GroupRoles(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, admin: str=None, member: str=None, moderator: str=None):
        """GroupRoles - a model defined in OpenAPI

        :param admin: The admin of this GroupRoles.
        :param member: The member of this GroupRoles.
        :param moderator: The moderator of this GroupRoles.
        """
        self.openapi_types = {
            'admin': str,
            'member': str,
            'moderator': str
        }

        self.attribute_map = {
            'admin': 'admin',
            'member': 'member',
            'moderator': 'moderator'
        }

        self._admin = admin
        self._member = member
        self._moderator = moderator

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GroupRoles':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Group_roles of this GroupRoles.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def admin(self):
        """Gets the admin of this GroupRoles.


        :return: The admin of this GroupRoles.
        :rtype: str
        """
        return self._admin

    @admin.setter
    def admin(self, admin):
        """Sets the admin of this GroupRoles.


        :param admin: The admin of this GroupRoles.
        :type admin: str
        """

        self._admin = admin

    @property
    def member(self):
        """Gets the member of this GroupRoles.


        :return: The member of this GroupRoles.
        :rtype: str
        """
        return self._member

    @member.setter
    def member(self, member):
        """Sets the member of this GroupRoles.


        :param member: The member of this GroupRoles.
        :type member: str
        """

        self._member = member

    @property
    def moderator(self):
        """Gets the moderator of this GroupRoles.


        :return: The moderator of this GroupRoles.
        :rtype: str
        """
        return self._moderator

    @moderator.setter
    def moderator(self, moderator):
        """Sets the moderator of this GroupRoles.


        :param moderator: The moderator of this GroupRoles.
        :type moderator: str
        """

        self._moderator = moderator
