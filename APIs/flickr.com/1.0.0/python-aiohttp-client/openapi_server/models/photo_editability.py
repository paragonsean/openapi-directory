# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PhotoEditability(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, canaddmeta: bool=None, cancomment: bool=None):
        """PhotoEditability - a model defined in OpenAPI

        :param canaddmeta: The canaddmeta of this PhotoEditability.
        :param cancomment: The cancomment of this PhotoEditability.
        """
        self.openapi_types = {
            'canaddmeta': bool,
            'cancomment': bool
        }

        self.attribute_map = {
            'canaddmeta': 'canaddmeta',
            'cancomment': 'cancomment'
        }

        self._canaddmeta = canaddmeta
        self._cancomment = cancomment

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PhotoEditability':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Photo_editability of this PhotoEditability.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def canaddmeta(self):
        """Gets the canaddmeta of this PhotoEditability.


        :return: The canaddmeta of this PhotoEditability.
        :rtype: bool
        """
        return self._canaddmeta

    @canaddmeta.setter
    def canaddmeta(self, canaddmeta):
        """Sets the canaddmeta of this PhotoEditability.


        :param canaddmeta: The canaddmeta of this PhotoEditability.
        :type canaddmeta: bool
        """

        self._canaddmeta = canaddmeta

    @property
    def cancomment(self):
        """Gets the cancomment of this PhotoEditability.


        :return: The cancomment of this PhotoEditability.
        :rtype: bool
        """
        return self._cancomment

    @cancomment.setter
    def cancomment(self, cancomment):
        """Sets the cancomment of this PhotoEditability.


        :param cancomment: The cancomment of this PhotoEditability.
        :type cancomment: bool
        """

        self._cancomment = cancomment
