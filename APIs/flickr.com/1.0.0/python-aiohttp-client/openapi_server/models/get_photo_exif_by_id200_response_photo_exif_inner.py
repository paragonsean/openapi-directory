# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_favorites_context_by_id200_response_count import GetFavoritesContextByID200ResponseCount
from openapi_server import util


class GetPhotoExifByID200ResponsePhotoExifInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, label: str=None, raw: GetFavoritesContextByID200ResponseCount=None, tag: str=None, tagspace: str=None, tagspaceid: str=None):
        """GetPhotoExifByID200ResponsePhotoExifInner - a model defined in OpenAPI

        :param label: The label of this GetPhotoExifByID200ResponsePhotoExifInner.
        :param raw: The raw of this GetPhotoExifByID200ResponsePhotoExifInner.
        :param tag: The tag of this GetPhotoExifByID200ResponsePhotoExifInner.
        :param tagspace: The tagspace of this GetPhotoExifByID200ResponsePhotoExifInner.
        :param tagspaceid: The tagspaceid of this GetPhotoExifByID200ResponsePhotoExifInner.
        """
        self.openapi_types = {
            'label': str,
            'raw': GetFavoritesContextByID200ResponseCount,
            'tag': str,
            'tagspace': str,
            'tagspaceid': str
        }

        self.attribute_map = {
            'label': 'label',
            'raw': 'raw',
            'tag': 'tag',
            'tagspace': 'tagspace',
            'tagspaceid': 'tagspaceid'
        }

        self._label = label
        self._raw = raw
        self._tag = tag
        self._tagspace = tagspace
        self._tagspaceid = tagspaceid

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetPhotoExifByID200ResponsePhotoExifInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The getPhotoExifByID_200_response_photo_exif_inner of this GetPhotoExifByID200ResponsePhotoExifInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def label(self):
        """Gets the label of this GetPhotoExifByID200ResponsePhotoExifInner.


        :return: The label of this GetPhotoExifByID200ResponsePhotoExifInner.
        :rtype: str
        """
        return self._label

    @label.setter
    def label(self, label):
        """Sets the label of this GetPhotoExifByID200ResponsePhotoExifInner.


        :param label: The label of this GetPhotoExifByID200ResponsePhotoExifInner.
        :type label: str
        """

        self._label = label

    @property
    def raw(self):
        """Gets the raw of this GetPhotoExifByID200ResponsePhotoExifInner.


        :return: The raw of this GetPhotoExifByID200ResponsePhotoExifInner.
        :rtype: GetFavoritesContextByID200ResponseCount
        """
        return self._raw

    @raw.setter
    def raw(self, raw):
        """Sets the raw of this GetPhotoExifByID200ResponsePhotoExifInner.


        :param raw: The raw of this GetPhotoExifByID200ResponsePhotoExifInner.
        :type raw: GetFavoritesContextByID200ResponseCount
        """

        self._raw = raw

    @property
    def tag(self):
        """Gets the tag of this GetPhotoExifByID200ResponsePhotoExifInner.


        :return: The tag of this GetPhotoExifByID200ResponsePhotoExifInner.
        :rtype: str
        """
        return self._tag

    @tag.setter
    def tag(self, tag):
        """Sets the tag of this GetPhotoExifByID200ResponsePhotoExifInner.


        :param tag: The tag of this GetPhotoExifByID200ResponsePhotoExifInner.
        :type tag: str
        """

        self._tag = tag

    @property
    def tagspace(self):
        """Gets the tagspace of this GetPhotoExifByID200ResponsePhotoExifInner.


        :return: The tagspace of this GetPhotoExifByID200ResponsePhotoExifInner.
        :rtype: str
        """
        return self._tagspace

    @tagspace.setter
    def tagspace(self, tagspace):
        """Sets the tagspace of this GetPhotoExifByID200ResponsePhotoExifInner.


        :param tagspace: The tagspace of this GetPhotoExifByID200ResponsePhotoExifInner.
        :type tagspace: str
        """

        self._tagspace = tagspace

    @property
    def tagspaceid(self):
        """Gets the tagspaceid of this GetPhotoExifByID200ResponsePhotoExifInner.


        :return: The tagspaceid of this GetPhotoExifByID200ResponsePhotoExifInner.
        :rtype: str
        """
        return self._tagspaceid

    @tagspaceid.setter
    def tagspaceid(self, tagspaceid):
        """Sets the tagspaceid of this GetPhotoExifByID200ResponsePhotoExifInner.


        :param tagspaceid: The tagspaceid of this GetPhotoExifByID200ResponsePhotoExifInner.
        :type tagspaceid: str
        """

        self._tagspaceid = tagspaceid
