# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_license_by_id200_response_licenses_license_inner import GetLicenseByID200ResponseLicensesLicenseInner
from openapi_server import util


class GetLicenseByID200ResponseLicenses(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, license: List[GetLicenseByID200ResponseLicensesLicenseInner]=None):
        """GetLicenseByID200ResponseLicenses - a model defined in OpenAPI

        :param license: The license of this GetLicenseByID200ResponseLicenses.
        """
        self.openapi_types = {
            'license': List[GetLicenseByID200ResponseLicensesLicenseInner]
        }

        self.attribute_map = {
            'license': 'license'
        }

        self._license = license

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetLicenseByID200ResponseLicenses':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The getLicenseByID_200_response_licenses of this GetLicenseByID200ResponseLicenses.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def license(self):
        """Gets the license of this GetLicenseByID200ResponseLicenses.


        :return: The license of this GetLicenseByID200ResponseLicenses.
        :rtype: List[GetLicenseByID200ResponseLicensesLicenseInner]
        """
        return self._license

    @license.setter
    def license(self, license):
        """Sets the license of this GetLicenseByID200ResponseLicenses.


        :param license: The license of this GetLicenseByID200ResponseLicenses.
        :type license: List[GetLicenseByID200ResponseLicensesLicenseInner]
        """

        self._license = license
