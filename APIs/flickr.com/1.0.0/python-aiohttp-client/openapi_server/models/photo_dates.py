# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PhotoDates(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, lastupdate: str=None, posted: str=None, taken: str=None, takengranularity: str=None, takenunknown: bool=None):
        """PhotoDates - a model defined in OpenAPI

        :param lastupdate: The lastupdate of this PhotoDates.
        :param posted: The posted of this PhotoDates.
        :param taken: The taken of this PhotoDates.
        :param takengranularity: The takengranularity of this PhotoDates.
        :param takenunknown: The takenunknown of this PhotoDates.
        """
        self.openapi_types = {
            'lastupdate': str,
            'posted': str,
            'taken': str,
            'takengranularity': str,
            'takenunknown': bool
        }

        self.attribute_map = {
            'lastupdate': 'lastupdate',
            'posted': 'posted',
            'taken': 'taken',
            'takengranularity': 'takengranularity',
            'takenunknown': 'takenunknown'
        }

        self._lastupdate = lastupdate
        self._posted = posted
        self._taken = taken
        self._takengranularity = takengranularity
        self._takenunknown = takenunknown

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PhotoDates':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Photo_dates of this PhotoDates.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def lastupdate(self):
        """Gets the lastupdate of this PhotoDates.


        :return: The lastupdate of this PhotoDates.
        :rtype: str
        """
        return self._lastupdate

    @lastupdate.setter
    def lastupdate(self, lastupdate):
        """Sets the lastupdate of this PhotoDates.


        :param lastupdate: The lastupdate of this PhotoDates.
        :type lastupdate: str
        """

        self._lastupdate = lastupdate

    @property
    def posted(self):
        """Gets the posted of this PhotoDates.


        :return: The posted of this PhotoDates.
        :rtype: str
        """
        return self._posted

    @posted.setter
    def posted(self, posted):
        """Sets the posted of this PhotoDates.


        :param posted: The posted of this PhotoDates.
        :type posted: str
        """

        self._posted = posted

    @property
    def taken(self):
        """Gets the taken of this PhotoDates.


        :return: The taken of this PhotoDates.
        :rtype: str
        """
        return self._taken

    @taken.setter
    def taken(self, taken):
        """Sets the taken of this PhotoDates.


        :param taken: The taken of this PhotoDates.
        :type taken: str
        """

        self._taken = taken

    @property
    def takengranularity(self):
        """Gets the takengranularity of this PhotoDates.


        :return: The takengranularity of this PhotoDates.
        :rtype: str
        """
        return self._takengranularity

    @takengranularity.setter
    def takengranularity(self, takengranularity):
        """Sets the takengranularity of this PhotoDates.


        :param takengranularity: The takengranularity of this PhotoDates.
        :type takengranularity: str
        """

        self._takengranularity = takengranularity

    @property
    def takenunknown(self):
        """Gets the takenunknown of this PhotoDates.


        :return: The takenunknown of this PhotoDates.
        :rtype: bool
        """
        return self._takenunknown

    @takenunknown.setter
    def takenunknown(self, takenunknown):
        """Sets the takenunknown of this PhotoDates.


        :param takenunknown: The takenunknown of this PhotoDates.
        :type takenunknown: bool
        """

        self._takenunknown = takenunknown
