# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PhotoUsage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, canblog: bool=None, candownload: bool=None, canprint: bool=None, canshare: bool=None):
        """PhotoUsage - a model defined in OpenAPI

        :param canblog: The canblog of this PhotoUsage.
        :param candownload: The candownload of this PhotoUsage.
        :param canprint: The canprint of this PhotoUsage.
        :param canshare: The canshare of this PhotoUsage.
        """
        self.openapi_types = {
            'canblog': bool,
            'candownload': bool,
            'canprint': bool,
            'canshare': bool
        }

        self.attribute_map = {
            'canblog': 'canblog',
            'candownload': 'candownload',
            'canprint': 'canprint',
            'canshare': 'canshare'
        }

        self._canblog = canblog
        self._candownload = candownload
        self._canprint = canprint
        self._canshare = canshare

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PhotoUsage':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Photo_usage of this PhotoUsage.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def canblog(self):
        """Gets the canblog of this PhotoUsage.


        :return: The canblog of this PhotoUsage.
        :rtype: bool
        """
        return self._canblog

    @canblog.setter
    def canblog(self, canblog):
        """Sets the canblog of this PhotoUsage.


        :param canblog: The canblog of this PhotoUsage.
        :type canblog: bool
        """

        self._canblog = canblog

    @property
    def candownload(self):
        """Gets the candownload of this PhotoUsage.


        :return: The candownload of this PhotoUsage.
        :rtype: bool
        """
        return self._candownload

    @candownload.setter
    def candownload(self, candownload):
        """Sets the candownload of this PhotoUsage.


        :param candownload: The candownload of this PhotoUsage.
        :type candownload: bool
        """

        self._candownload = candownload

    @property
    def canprint(self):
        """Gets the canprint of this PhotoUsage.


        :return: The canprint of this PhotoUsage.
        :rtype: bool
        """
        return self._canprint

    @canprint.setter
    def canprint(self, canprint):
        """Sets the canprint of this PhotoUsage.


        :param canprint: The canprint of this PhotoUsage.
        :type canprint: bool
        """

        self._canprint = canprint

    @property
    def canshare(self):
        """Gets the canshare of this PhotoUsage.


        :return: The canshare of this PhotoUsage.
        :rtype: bool
        """
        return self._canshare

    @canshare.setter
    def canshare(self, canshare):
        """Sets the canshare of this PhotoUsage.


        :param canshare: The canshare of this PhotoUsage.
        :type canshare: bool
        """

        self._canshare = canshare
