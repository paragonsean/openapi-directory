openapi: 3.0.0
info:
  contact:
    x-twitter: Flickr
  description: A subset of Flickr's API defined in Swagger format.
  termsOfService: https://www.flickr.com/services/api/tos/
  title: Flickr API Schema
  version: 1.0.0
  x-apisguru-categories:
  - media
  x-logo:
    url: https://twitter.com/Flickr/profile_image?size=original
  x-origin:
  - format: openapi
    url: https://raw.githubusercontent.com/flickr/flickr-api-swagger/master/dist/schema.json
    version: "3.0"
  x-providerName: flickr.com
servers:
- url: https://api.flickr.com/services
paths:
  /oauth/access_token:
    get:
      description: Returns an access token
      operationId: getAccessToken
      parameters:
      - explode: true
        in: query
        name: oauth_consumer_key
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: oauth_nonce
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: oauth_timestamp
        required: true
        schema:
          pattern: "^[0-9]+$"
          type: string
        style: form
      - explode: true
        in: query
        name: oauth_signature_method
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: oauth_version
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: oauth_signature
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: oauth_verifier
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: oauth_token
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK
      tags:
      - Public
      x-accepts:
      - application/json
  /oauth/request_token:
    get:
      description: Returns an oauth token and oauth token secret
      operationId: getRequestToken
      parameters:
      - explode: true
        in: query
        name: oauth_consumer_key
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: oauth_nonce
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: oauth_timestamp
        required: true
        schema:
          pattern: "^[0-9]+$"
          type: string
        style: form
      - explode: true
        in: query
        name: oauth_signature_method
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: oauth_version
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: oauth_signature
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: oauth_callback
        required: true
        schema:
          pattern: ^http.*$
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK
      tags:
      - Public
      x-accepts:
      - application/json
  /rest?method=flickr.favorites.getContext:
    get:
      description: Returns next and previous favorites for a photo in a user's favorites
      operationId: getFavoritesContextByID
      parameters:
      - explode: true
        in: query
        name: api_key
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: photo_id
        required: true
        schema:
          pattern: "^[0-9]+$"
          type: string
        style: form
      - explode: true
        in: query
        name: user_id
        required: false
        schema:
          pattern: "^([0-9]+@N[0-9]+)|([0-9a-zA-Z-_]+)$"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getFavoritesContextByID_200_response'
          description: OK
      tags:
      - Public
      x-accepts:
      - application/json
  /rest?method=flickr.favorites.getList:
    get:
      description: Returns a list of the user's favorite photos. Only photos which
        the calling user has permission to see are returned.
      operationId: getFavoritesByPersonID
      parameters:
      - explode: true
        in: query
        name: api_key
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: user_id
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: min_fave_date
        required: false
        schema:
          type: number
        style: form
      - explode: true
        in: query
        name: max_fave_date
        required: false
        schema:
          type: number
        style: form
      - explode: true
        in: query
        name: page
        required: false
        schema:
          type: number
        style: form
      - explode: true
        in: query
        name: per_page
        required: false
        schema:
          type: number
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getFavoritesByPersonID_200_response'
          description: OK
      tags:
      - Public
      x-accepts:
      - application/json
  /rest?method=flickr.galleries.getPhotos:
    get:
      description: Returns a list of photos in a gallery.
      operationId: getGalleryPhotosByID
      parameters:
      - explode: true
        in: query
        name: api_key
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: gallery_id
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getGalleryPhotosByID_200_response'
          description: OK
      tags:
      - Public
      x-accepts:
      - application/json
  /rest?method=flickr.groups.discuss.replies.getInfo:
    get:
      description: Get information on a group topic reply
      operationId: getGroupTopicRepliesByID
      parameters:
      - explode: true
        in: query
        name: api_key
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: group_id
        required: false
        schema:
          pattern: "^([0-9]+@N[0-9]+)|([0-9a-zA-Z-_]+)$"
          type: string
        style: form
      - explode: true
        in: query
        name: topic_id
        required: true
        schema:
          pattern: "^[0-9]+$"
          type: string
        style: form
      - explode: true
        in: query
        name: reply_id
        required: true
        schema:
          pattern: "^[0-9]+$"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getGroupTopicRepliesByID_200_response'
          description: OK
      tags:
      - Public
      x-accepts:
      - application/json
  /rest?method=flickr.groups.discuss.topics.getInfo:
    get:
      description: Get information about a group discussion topic
      operationId: getGroupTopicByID
      parameters:
      - explode: true
        in: query
        name: api_key
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: group_id
        required: false
        schema:
          pattern: "^([0-9]+@N[0-9]+)|([0-9a-zA-Z-_]+)$"
          type: string
        style: form
      - explode: true
        in: query
        name: topic_id
        required: true
        schema:
          pattern: "^[0-9]+$"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getGroupTopicByID_200_response'
          description: OK
      tags:
      - Public
      x-accepts:
      - application/json
  /rest?method=flickr.groups.discuss.topics.getList:
    get:
      description: Get a list of discussion topics in a group.
      operationId: getGroupDiscussionsByID
      parameters:
      - explode: true
        in: query
        name: api_key
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: group_id
        required: false
        schema:
          pattern: "^([0-9]+@N[0-9]+)|([0-9a-zA-Z-_]+)$"
          type: string
        style: form
      - explode: true
        in: query
        name: page
        required: false
        schema:
          type: number
        style: form
      - explode: true
        in: query
        name: per_page
        required: false
        schema:
          type: number
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getGroupDiscussionsByID_200_response'
          description: OK
      tags:
      - Public
      x-accepts:
      - application/json
  /rest?method=flickr.groups.getInfo:
    get:
      description: Get information about a group
      operationId: getGroupByID
      parameters:
      - explode: true
        in: query
        name: api_key
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: group_id
        required: false
        schema:
          pattern: "^([0-9]+@N[0-9]+)|([0-9a-zA-Z-_]+)$"
          type: string
        style: form
      - explode: true
        in: query
        name: group_path_alias
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: lang
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getGroupByID_200_response'
          description: OK
      tags:
      - Public
      x-accepts:
      - application/json
  /rest?method=flickr.groups.pools.getContext:
    get:
      description: Returns next and previous photos for a photo in a group pool
      parameters:
      - explode: true
        in: query
        name: api_key
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: photo_id
        required: true
        schema:
          pattern: "^[0-9]+$"
          type: string
        style: form
      - explode: true
        in: query
        name: group_id
        required: false
        schema:
          pattern: "^([0-9]+@N[0-9]+)|([0-9a-zA-Z-_]+)$"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getFavoritesContextByID_200_response'
          description: OK
      tags:
      - Public
      x-accepts:
      - application/json
  /rest?method=flickr.groups.pools.getPhotos:
    get:
      description: Returns a list of pool photos for a given group
      operationId: getGroupPhotosByID
      parameters:
      - explode: true
        in: query
        name: api_key
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: group_id
        required: false
        schema:
          pattern: "^([0-9]+@N[0-9]+)|([0-9a-zA-Z-_]+)$"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getGalleryPhotosByID_200_response'
          description: OK
      tags:
      - Public
      x-accepts:
      - application/json
  /rest?method=flickr.people.getInfo:
    get:
      description: Returns a person
      operationId: getPersonByID
      parameters:
      - explode: true
        in: query
        name: api_key
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: user_id
        required: false
        schema:
          pattern: "^([0-9]+@N[0-9]+)|([0-9a-zA-Z-_]+)$"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getPersonByID_200_response'
          description: OK
      tags:
      - Public
      x-accepts:
      - application/json
  /rest?method=flickr.people.getPhotos:
    get:
      description: Return photos from the given user's photostream
      operationId: getMediaByPersonID
      parameters:
      - explode: true
        in: query
        name: api_key
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: user_id
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: safe_search
        required: false
        schema:
          type: number
        style: form
      - explode: true
        in: query
        name: min_upload_date
        required: false
        schema:
          type: number
        style: form
      - explode: true
        in: query
        name: max_upload_date
        required: false
        schema:
          type: number
        style: form
      - explode: true
        in: query
        name: min_taken_date
        required: false
        schema:
          type: number
        style: form
      - explode: true
        in: query
        name: max_taken_date
        required: false
        schema:
          type: number
        style: form
      - explode: true
        in: query
        name: content_type
        required: false
        schema:
          type: number
        style: form
      - explode: true
        in: query
        name: privacy_filter
        required: false
        schema:
          type: number
        style: form
      - explode: true
        in: query
        name: page
        required: false
        schema:
          type: number
        style: form
      - explode: true
        in: query
        name: per_page
        required: false
        schema:
          type: number
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getFavoritesByPersonID_200_response'
          description: OK
      tags:
      - Public
      x-accepts:
      - application/json
  /rest?method=flickr.photolist.getContext:
    get:
      description: Returns next and previous photos in a photo list
      operationId: getPhotolistContextByID
      parameters:
      - explode: true
        in: query
        name: api_key
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: photo_id
        required: true
        schema:
          pattern: "^[0-9]+$"
          type: string
        style: form
      - explode: true
        in: query
        name: photolist_id
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getFavoritesContextByID_200_response'
          description: OK
      tags:
      - Public
      x-accepts:
      - application/json
  /rest?method=flickr.photos.getContext:
    get:
      description: Returns next and previous photos for a photo in a photostream
      operationId: getPhotostreamContextByID
      parameters:
      - explode: true
        in: query
        name: api_key
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: photo_id
        required: true
        schema:
          pattern: "^[0-9]+$"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getFavoritesContextByID_200_response'
          description: OK
      tags:
      - Public
      x-accepts:
      - application/json
  /rest?method=flickr.photos.getExif:
    get:
      description: Retrieves a list of EXIF/TIFF/GPS tags for a given photo. The calling
        user must have permission to view the photo.
      operationId: getPhotoExifByID
      parameters:
      - explode: true
        in: query
        name: api_key
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: photo_id
        required: true
        schema:
          pattern: "^[0-9]+$"
          type: string
        style: form
      - explode: true
        in: query
        name: secret
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getPhotoExifByID_200_response'
          description: OK
      tags:
      - Public
      x-accepts:
      - application/json
  /rest?method=flickr.photos.getInfo:
    get:
      description: Returns a photo
      operationId: getPhotoByID
      parameters:
      - explode: true
        in: query
        name: api_key
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: photo_id
        required: true
        schema:
          pattern: "^[0-9]+$"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getPhotoByID_200_response'
          description: a photo
      tags:
      - Public
      x-accepts:
      - application/json
  /rest?method=flickr.photos.getSizes:
    get:
      description: Returns photo sizes
      operationId: getPhotoSizesByID
      parameters:
      - explode: true
        in: query
        name: api_key
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: photo_id
        required: true
        schema:
          pattern: "^[0-9]+$"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getPhotoSizesByID_200_response'
          description: Photo sizes
      tags:
      - Public
      x-accepts:
      - application/json
  /rest?method=flickr.photos.licenses.getInfo:
    get:
      description: Fetches a list of available photo licenses for Flickr
      operationId: getLicenseByID
      parameters:
      - explode: true
        in: query
        name: api_key
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getLicenseByID_200_response'
          description: OK
      tags:
      - Public
      x-accepts:
      - application/json
  /rest?method=flickr.photos.search:
    get:
      description: Return a list of photos matching some criteria.
      operationId: getMediaBySearch
      parameters:
      - explode: true
        in: query
        name: api_key
        required: true
        schema:
          type: string
        style: form
      - description: "A free text search. Photos who's title, description or tags\
          \ contain the text will be returned. You can exclude results that match\
          \ a term by prepending it with a - character."
        explode: true
        in: query
        name: text
        required: false
        schema:
          type: string
        style: form
      - description: A comma-delimited list of tags. Photos with one or more of the
          tags listed will be returned. You can exclude results that match a term
          by prepending it with a - character.
        explode: true
        in: query
        name: tags
        required: false
        schema:
          type: string
        style: form
      - description: The NSID of the user who's photo to search. If this parameter
          isn't passed then everybody's public photos will be searched. A value of
          "me" will search against the calling user's photos for authenticated calls.
        explode: true
        in: query
        name: user_id
        required: false
        schema:
          type: string
        style: form
      - description: Minimum upload date. Photos with an upload date greater than
          or equal to this value will be returned. The date can be in the form of
          a unix timestamp or mysql datetime.
        explode: true
        in: query
        name: min_upload_date
        required: false
        schema:
          type: string
        style: form
      - description: Maximum upload date. Photos with an upload date less than or
          equal to this value will be returned. The date can be in the form of a unix
          timestamp or mysql datetime.
        explode: true
        in: query
        name: max_upload_date
        required: false
        schema:
          type: string
        style: form
      - description: Minimum taken date. Photos with an taken date greater than or
          equal to this value will be returned. The date can be in the form of a mysql
          datetime or unix timestamp.
        explode: true
        in: query
        name: min_taken_date
        required: false
        schema:
          type: string
        style: form
      - description: Maximum taken date. Photos with an taken date less than or equal
          to this value will be returned. The date can be in the form of a mysql datetime
          or unix timestamp.
        explode: true
        in: query
        name: max_taken_date
        required: false
        schema:
          type: string
        style: form
      - description: The license id for photos (for possible values see the flickr.photos.licenses.getInfo
          method). Multiple licenses may be comma-separated.
        explode: true
        in: query
        name: license
        required: false
        schema:
          type: string
        style: form
      - description: |
          The order in which to sort returned photos. Deafults to date-posted-desc (unless you are doing a radial geo query, in which case the default sorting is by ascending distance from the point specified). The possible values are:
            date-posted-asc,
            date-posted-desc,
            date-taken-asc,
            date-taken-desc,
            interestingness-desc,
            interestingness-asc, and
            relevance.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: |
          Return photos only matching a certain privacy level. This only applies when making an authenticated call to view photos you own. Valid values are:,
            1: public photos,
            2: private photos visible to friends,
            3: private photos visible to family,
            4: private photos visible to friends & family,
            5: completely private photos
        explode: true
        in: query
        name: privacy_filter
        required: false
        schema:
          type: number
        style: form
      - description: A comma-delimited list of 4 values defining the Bounding Box
          of the area that will be searched.
        explode: true
        in: query
        name: bbox
        required: false
        schema:
          type: string
        style: form
      - description: |
          Recorded accuracy level of the location information. Current range is 1-16:
            World level is 1
            Country is ~3
            Region is ~6
            City is ~11
            Street is ~16
        explode: true
        in: query
        name: accuracy
        required: false
        schema:
          type: string
        style: form
      - description: |
          Safe search setting:
            1: for safe,
            2: for moderate,
            3: for restricted
        explode: true
        in: query
        name: safe_search
        required: false
        schema:
          type: number
        style: form
      - description: |
          Content Type setting:
            1: photos only.
            2: screenshots only.
            3: 'other' only.
            4: photos and screenshots.
            5: screenshots and 'other'.
            6: photos and 'other'.
            7: photos, screenshots, and 'other' (all).
        explode: true
        in: query
        name: content_type
        required: false
        schema:
          type: number
        style: form
      - description: |
          Aside from passing in a fully formed machine tag, there is a special syntax for searching on specific properties : Find photos using the 'dc' namespace : "machine_tags" => "dc:" Find photos with a title in the 'dc' namespace : "machine_tags" => "dc:title=" Find photos titled "mr. camera" in the 'dc' namespace : "machine_tags" => "dc:title=\"mr. camera\" Find photos whose value is "mr. camera" : "machine_tags" => "*:*=\"mr. camera\"" Find photos that have a title, in any namespace : "machine_tags" => "*:title=" Find photos that have a title, in any namespace, whose value is "mr. camera" : "machine_tags" => "*:title=\"mr. camera\"" Find photos, in the 'dc' namespace whose value is "mr. camera" : "machine_tags" => "dc:*=\"mr. camera\"" Multiple machine tags may be queried by passing a comma-separated list. The number of machine tags you can pass in a single query depends on the tag mode (AND or OR) that you are querying with. "AND" queries are limited to (16) machine tags. "OR" queries are limited to (8).
        explode: true
        in: query
        name: machine_tags
        required: false
        schema:
          type: string
        style: form
      - description: "Either 'any' for an OR combination of tags, or 'all' for an\
          \ AND combination. Defaults to 'any' if not specified."
        explode: true
        in: query
        name: machine_tag_mode
        required: false
        schema:
          type: string
        style: form
      - description: "The id of a group who's pool to search. If specified, only matching\
          \ photos posted to the group's pool will be returned."
        explode: true
        in: query
        name: group_id
        required: false
        schema:
          type: string
        style: form
      - description: Search your contacts. Either 'all' or 'ff' for just friends and
          family. (Experimental)
        explode: true
        in: query
        name: contacts
        required: false
        schema:
          type: string
        style: form
      - description: A 32-bit identifier that uniquely represents spatial entities.
          (not used if bbox argument is present).
        explode: true
        in: query
        name: woe_id
        required: false
        schema:
          type: string
        style: form
      - description: |
          A Flickr place id. (not used if bbox argument is present). Geo queries require some sort of limiting agent in order to prevent the database from crying. This is basically like the check against "parameterless searches" for queries without a geo component. A tag, for instance, is considered a limiting agent as are user defined min_date_taken and min_date_upload parameters — If no limiting factor is passed we return only photos added in the last 12 hours (though we may extend the limit in the future).
        explode: true
        in: query
        name: place_id
        required: false
        schema:
          type: string
        style: form
      - description: "Filter results by media type. Possible values are all (default),\
          \ photos or videos"
        explode: true
        in: query
        name: media
        required: false
        schema:
          type: string
        style: form
      - description: |
          Any photo that has been geotagged, or if the value is "0" any photo that has not been geotagged. Geo queries require some sort of limiting agent in order to prevent the database from crying. This is basically like the check against "parameterless searches" for queries without a geo component. A tag, for instance, is considered a limiting agent as are user defined min_date_taken and min_date_upload parameters — If no limiting factor is passed we return only photos added in the last 12 hours (though we may extend the limit in the future).
        explode: true
        in: query
        name: has_geo
        required: false
        schema:
          type: string
        style: form
      - description: |
          Geo context is a numeric value representing the photo's geotagginess beyond latitude and longitude. For example, you may wish to search for photos that were taken "indoors" or "outdoors". The current list of context IDs is: 0, not defined. 1, indoors. 2, outdoors. Geo queries require some sort of limiting agent in order to prevent the database from crying. This is basically like the check against "parameterless searches" for queries without a geo component. A tag, for instance, is considered a limiting agent as are user defined min_date_taken and min_date_upload parameters — If no limiting factor is passed we return only photos added in the last 12 hours (though we may extend the limit in the future).
        explode: true
        in: query
        name: geo_context
        required: false
        schema:
          type: string
        style: form
      - description: |
          A valid latitude, in decimal format, for doing radial geo queries. Geo queries require some sort of limiting agent in order to prevent the database from crying. This is basically like the check against "parameterless searches" for queries without a geo component. A tag, for instance, is considered a limiting agent as are user defined min_date_taken and min_date_upload parameters — If no limiting factor is passed we return only photos added in the last 12 hours (though we may extend the limit in the future).
        explode: true
        in: query
        name: lat
        required: false
        schema:
          type: string
        style: form
      - description: |
          A valid longitude, in decimal format, for doing radial geo queries. Geo queries require some sort of limiting agent in order to prevent the database from crying. This is basically like the check against "parameterless searches" for queries without a geo component. A tag, for instance, is considered a limiting agent as are user defined min_date_taken and min_date_upload parameters — If no limiting factor is passed we return only photos added in the last 12 hours (though we may extend the limit in the future).
        explode: true
        in: query
        name: lon
        required: false
        schema:
          type: string
        style: form
      - description: "A valid radius used for geo queries, greater than zero and less\
          \ than 20 miles (or 32 kilometers), for use with point-based geo queries.\
          \ The default value is 5 (km)."
        explode: true
        in: query
        name: radius
        required: false
        schema:
          type: number
        style: form
      - description: The unit of measure when doing radial geo queries. Valid options
          are "mi" (miles) and "km" (kilometers). The default is "km".
        explode: true
        in: query
        name: radius_units
        required: false
        schema:
          type: string
        style: form
      - description: Limit the scope of the search to only photos that are part of
          the Flickr Commons project. Default is false.
        explode: true
        in: query
        name: is_commons
        required: false
        schema:
          type: boolean
        style: form
      - description: "Limit the scope of the search to only photos that are in a gallery?\
          \ Default is false, search all photos."
        explode: true
        in: query
        name: in_gallery
        required: false
        schema:
          type: boolean
        style: form
      - description: Limit the scope of the search to only photos that are for sale
          on Getty. Default is false.
        explode: true
        in: query
        name: is_getty
        required: false
        schema:
          type: boolean
        style: form
      - description: "Number of photos to return per page. If this argument is omitted,\
          \ it defaults to 100. The maximum allowed value is 500."
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          type: number
        style: form
      - description: "The page of results to return. If this argument is omitted,\
          \ it defaults to 1."
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: number
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getFavoritesByPersonID_200_response'
          description: OK
      tags:
      - Public
      x-accepts:
      - application/json
  /rest?method=flickr.photosets.getContext:
    get:
      description: Returns next and previous photos for a photo in a set
      operationId: getAlbumContextByID
      parameters:
      - explode: true
        in: query
        name: api_key
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: photo_id
        required: true
        schema:
          pattern: "^[0-9]+$"
          type: string
        style: form
      - explode: true
        in: query
        name: photoset_id
        required: false
        schema:
          pattern: "^[0-9]+$"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getFavoritesContextByID_200_response'
          description: OK
      tags:
      - Public
      x-accepts:
      - application/json
  /rest?method=flickr.photosets.getList:
    get:
      description: Returns the albums belonging to the specified user
      operationId: getAlbumsByPersonID
      parameters:
      - explode: true
        in: query
        name: api_key
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: user_id
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: page
        required: false
        schema:
          type: number
        style: form
      - explode: true
        in: query
        name: per_page
        required: false
        schema:
          type: number
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAlbumsByPersonID_200_response'
          description: OK
      tags:
      - Public
      x-accepts:
      - application/json
  /rest?method=flickr.photosets.getPhotos:
    get:
      description: Returns a list of photos in an album.
      operationId: getAlbumByID
      parameters:
      - explode: true
        in: query
        name: api_key
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: photoset_id
        required: true
        schema:
          pattern: "^[0-9]+$"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAlbumByID_200_response'
          description: OK
      tags:
      - Public
      x-accepts:
      - application/json
  /rest?method=flickr.test.echo:
    get:
      description: Echos the input parameters back in the response
      operationId: echo
      parameters:
      - explode: true
        in: query
        name: api_key
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: echo
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/echo_200_response'
          description: OK
      tags:
      - Public
      x-accepts:
      - application/json
  /upload:
    post:
      description: Uploads a new photo to Flickr
      operationId: uploadPhoto
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/uploadPhoto_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: OK
      tags:
      - Public
      x-content-type: multipart/form-data
      x-accepts:
      - application/json
components:
  schemas:
    Album:
      example:
        server: server
        date_update: 7.061401241503109
        description: description
        count_comments: 5.962133916683182
        videos: 3.616076749251911
        secret: secret
        title: title
        photos: 9.301444243932576
        count_views: 5.637376656633329
        can_comment: true
        date_create: 2.3021358869347655
        farm: farm
        id: id
        primary: primary
      properties:
        can_comment:
          type: boolean
        count_comments:
          type: number
        count_views:
          type: number
        date_create:
          type: number
        date_update:
          type: number
        description:
          type: string
        farm:
          type: string
        id:
          type: string
        photos:
          type: number
        primary:
          type: string
        secret:
          type: string
        server:
          type: string
        title:
          type: string
        videos:
          type: number
      type: object
    ContextPhoto:
      example:
        owner: owner
        license: 0
        server: server
        thumb: thumb
        safe: true
        farm: farm
        is_faved: true
        id: id
        media: media
        secret: secret
        title: title
        url: url
      properties:
        farm:
          type: string
        id:
          type: string
        is_faved:
          type: boolean
        license:
          type: integer
        media:
          type: string
        owner:
          type: string
        safe:
          type: boolean
        secret:
          type: string
        server:
          type: string
        thumb:
          type: string
        title:
          type: string
        url:
          type: string
      type: object
    ContextPhotos:
      properties:
        photos:
          items:
            $ref: '#/components/schemas/ContextPhoto'
          type: array
      type: object
    Cover:
      example:
        owner: owner
        server: server
        isfriend: true
        ispublic: true
        farm: farm
        "y": "y"
        id: id
        secret: secret
        title: title
        isfamily: true
      properties:
        farm:
          type: string
        id:
          type: string
        isfamily:
          type: boolean
        isfriend:
          type: boolean
        ispublic:
          type: boolean
        owner:
          type: string
        secret:
          type: string
        server:
          type: string
        title:
          type: string
        "y":
          type: string
      type: object
    Group:
      example:
        throttle:
          mode: mode
          count: 6
          remaining: remaining
        roles:
          moderator: moderator
          member: member
          admin: admin
        description:
          _content: _content
        privacy:
          _content: _content
        rules:
          _content: _content
        cover:
          owner: owner
          server: server
          isfriend: true
          ispublic: true
          farm: farm
          "y": "y"
          id: id
          secret: secret
          title: title
          isfamily: true
        is_admin: true
        coverphoto_url:
          s: s
          t: t
          h: h
          l: l
        iconserver: iconserver
        coverphoto_farm: coverphoto_farm
        members:
          _content: _content
        ispoolmoderated: true
        coverphoto_server: coverphoto_server
        id: id
        lang: lang
        iconfarm: iconfarm
        is_member: true
        restrictions:
          moderate_ok: true
          restricted_ok: true
          safe_ok: true
          videos_ok: true
          has_geo: true
          images_ok: true
          photos_ok: true
          screens_ok: true
          art_ok: true
        is_moderator: true
        topic_count:
          _content: _content
        blast:
          date_blast_added: date_blast_added
          user_id: user_id
          _content: _content
        path_alias: path_alias
        name:
          _content: _content
        pool_count:
          _content: _content
        pool_rows: 0
      properties:
        blast:
          $ref: '#/components/schemas/Group_blast'
        cover:
          $ref: '#/components/schemas/Cover'
        coverphoto_farm:
          type: string
        coverphoto_server:
          type: string
        coverphoto_url:
          $ref: '#/components/schemas/PhotoURLs'
        description:
          $ref: '#/components/schemas/getFavoritesContextByID_200_response_count'
        iconfarm:
          type: string
        iconserver:
          type: string
        id:
          type: string
        is_admin:
          type: boolean
        is_member:
          type: boolean
        is_moderator:
          type: boolean
        ispoolmoderated:
          type: boolean
        lang:
          type: string
        members:
          $ref: '#/components/schemas/getFavoritesContextByID_200_response_count'
        name:
          $ref: '#/components/schemas/getFavoritesContextByID_200_response_count'
        path_alias:
          type: string
        pool_count:
          $ref: '#/components/schemas/getFavoritesContextByID_200_response_count'
        pool_rows:
          type: integer
        privacy:
          $ref: '#/components/schemas/getFavoritesContextByID_200_response_count'
        restrictions:
          $ref: '#/components/schemas/Group_restrictions'
        roles:
          $ref: '#/components/schemas/Group_roles'
        rules:
          $ref: '#/components/schemas/getFavoritesContextByID_200_response_count'
        throttle:
          $ref: '#/components/schemas/Group_throttle'
        topic_count:
          $ref: '#/components/schemas/getFavoritesContextByID_200_response_count'
      type: object
    Note:
      example:
        description: description
      properties:
        description:
          type: string
      type: object
    Owner:
      example:
        iconfarm: iconfarm
        nsid: nsid
        path_alias: path_alias
        iconserver: iconserver
        noindexfollow: true
        location: location
        is_ad_free: true
        ispro: true
        realname: realname
        username: username
      properties:
        iconfarm:
          type: string
        iconserver:
          type: string
        is_ad_free:
          type: boolean
        ispro:
          type: boolean
        location:
          type: string
        noindexfollow:
          type: boolean
        nsid:
          type: string
        path_alias:
          type: string
        realname:
          type: string
        username:
          type: string
      type: object
    Person:
      example:
        timezone:
          offset: offset
          timezone_id: timezone_id
          label: label
        has_stats: true
        description:
          _content: _content
        is_ad_free: true
        photosurl:
          _content: _content
        yintl: yintl
        coverphoto:
          s: s
          t: t
          h: h
          l: l
        photos:
          count:
            _content: _content
          firstdate:
            _content: _content
          firstdatetaken:
            _content: _content
          views:
            _content: _content
        cover:
          owner: owner
          server: server
          isfriend: true
          ispublic: true
          farm: farm
          "y": "y"
          id: id
          secret: secret
          title: title
          isfamily: true
        user_secret: user_secret
        nsid: nsid
        iconserver: iconserver
        coverphoto_farm: coverphoto_farm
        can_buy_pro: true
        disable_keyboard_shortcuts:
          _content: _content
        mbox_sha1sum:
          _content: _content
        coverphoto_server: coverphoto_server
        id: id
        profileurl:
          _content: _content
        iconfarm: iconfarm
        unread_messages:
          _content: _content
        realname:
          _content: _content
        path_alias: path_alias
        expire: true
        location:
          _content: _content
        mobileurl:
          _content: _content
        ispro: true
        username:
          _content: _content
      properties:
        can_buy_pro:
          type: boolean
        cover:
          $ref: '#/components/schemas/Cover'
        coverphoto:
          $ref: '#/components/schemas/PhotoURLs'
        coverphoto_farm:
          type: string
        coverphoto_server:
          type: string
        description:
          $ref: '#/components/schemas/getFavoritesContextByID_200_response_count'
        disable_keyboard_shortcuts:
          $ref: '#/components/schemas/getFavoritesContextByID_200_response_count'
        expire:
          type: boolean
        has_stats:
          type: boolean
        iconfarm:
          type: string
        iconserver:
          type: string
        id:
          type: string
        is_ad_free:
          type: boolean
        ispro:
          type: boolean
        location:
          $ref: '#/components/schemas/getFavoritesContextByID_200_response_count'
        mbox_sha1sum:
          $ref: '#/components/schemas/getFavoritesContextByID_200_response_count'
        mobileurl:
          $ref: '#/components/schemas/getFavoritesContextByID_200_response_count'
        nsid:
          type: string
        path_alias:
          type: string
        photos:
          $ref: '#/components/schemas/Person_photos'
        photosurl:
          $ref: '#/components/schemas/getFavoritesContextByID_200_response_count'
        profileurl:
          $ref: '#/components/schemas/getFavoritesContextByID_200_response_count'
        realname:
          $ref: '#/components/schemas/getFavoritesContextByID_200_response_count'
        timezone:
          $ref: '#/components/schemas/Person_timezone'
        unread_messages:
          $ref: '#/components/schemas/getFavoritesContextByID_200_response_count'
        user_secret:
          type: string
        username:
          $ref: '#/components/schemas/getFavoritesContextByID_200_response_count'
        yintl:
          type: string
      type: object
    Photo:
      example:
        server: server
        dateuploaded: dateuploaded
        notes:
          note:
          - description: description
          - description: description
        safety_level: safety_level
        usage:
          canshare: true
          canprint: true
          canblog: true
          candownload: true
        description:
          _content: _content
        media: media
        secret: secret
        title:
          _content: _content
        urls:
          url:
          - _content: _content
            type: type
          - _content: _content
            type: type
        editability:
          cancomment: true
          canaddmeta: true
        permissions:
          permaddmeta: permaddmeta
          permcomment: permcomment
        originalsecret: originalsecret
        farm: farm
        id: id
        views: views
        owner:
          iconfarm: iconfarm
          nsid: nsid
          path_alias: path_alias
          iconserver: iconserver
          noindexfollow: true
          location: location
          is_ad_free: true
          ispro: true
          realname: realname
          username: username
        comments:
          _content: _content
        visibility:
          isfriend: true
          ispublic: true
          isfamily: true
        publiceditability:
          cancomment: true
          canaddmeta: true
        rotation: rotation
        dates:
          taken: taken
          takengranularity: takengranularity
          lastupdate: lastupdate
          takenunknown: true
          posted: posted
        people:
          haspeople: true
        tags:
          tag:
          - author: author
            machine_tag: true
            authorname: authorname
            raw: raw
            id: id
            _content: _content
          - author: author
            machine_tag: true
            authorname: authorname
            raw: raw
            id: id
            _content: _content
        license: license
        safe: true
        isfavorite: true
      properties:
        comments:
          $ref: '#/components/schemas/getFavoritesContextByID_200_response_count'
        dates:
          $ref: '#/components/schemas/Photo_dates'
        dateuploaded:
          type: string
        description:
          $ref: '#/components/schemas/getFavoritesContextByID_200_response_count'
        editability:
          $ref: '#/components/schemas/Photo_editability'
        farm:
          type: string
        id:
          type: string
        isfavorite:
          type: boolean
        license:
          type: string
        media:
          type: string
        notes:
          $ref: '#/components/schemas/Photo_notes'
        originalsecret:
          type: string
        owner:
          $ref: '#/components/schemas/Owner'
        people:
          $ref: '#/components/schemas/Photo_people'
        permissions:
          $ref: '#/components/schemas/Photo_permissions'
        publiceditability:
          $ref: '#/components/schemas/Photo_editability'
        rotation:
          type: string
        safe:
          type: boolean
        safety_level:
          type: string
        secret:
          type: string
        server:
          type: string
        tags:
          $ref: '#/components/schemas/Photo_tags'
        title:
          $ref: '#/components/schemas/getFavoritesContextByID_200_response_count'
        urls:
          $ref: '#/components/schemas/Photo_urls'
        usage:
          $ref: '#/components/schemas/Photo_usage'
        views:
          type: string
        visibility:
          $ref: '#/components/schemas/Photo_visibility'
      type: object
    PhotoURLs:
      example:
        s: s
        t: t
        h: h
        l: l
      properties:
        h:
          type: string
        l:
          type: string
        s:
          type: string
        t:
          type: string
      type: object
    Size:
      example:
        width: 5.637376656633329
        label: label
        media: media
        source: source
        url: url
        height: 5.962133916683182
      properties:
        height:
          type: number
        label:
          type: string
        media:
          type: string
        source:
          type: string
        url:
          type: string
        width:
          type: number
      type: object
    Stat:
      type: string
    Tag:
      example:
        author: author
        machine_tag: true
        authorname: authorname
        raw: raw
        id: id
        _content: _content
      properties:
        _content:
          type: string
        author:
          type: string
        authorname:
          type: string
        id:
          type: string
        machine_tag:
          type: boolean
        raw:
          type: string
      type: object
    Topic:
      example:
        is_locked: true
        iconfarm: iconfarm
        role: role
        author: author
        subject: subject
        datelastpost: datelastpost
        is_sticky: true
        can_edit: true
        lastedit: lastedit
        datecreate: datecreate
        message:
          _content: _content
        count_replies: 0
        can_reply: true
        iconserver: iconserver
        author_is_deleted: true
        can_delete: true
        is_pro: true
        author_path_alias: author_path_alias
        last_reply: last_reply
        authorname: authorname
        id: id
      properties:
        author:
          type: string
        author_is_deleted:
          type: boolean
        author_path_alias:
          type: string
        authorname:
          type: string
        can_delete:
          type: boolean
        can_edit:
          type: boolean
        can_reply:
          type: boolean
        count_replies:
          type: integer
        datecreate:
          type: string
        datelastpost:
          type: string
        iconfarm:
          type: string
        iconserver:
          type: string
        id:
          type: string
        is_locked:
          type: boolean
        is_pro:
          type: boolean
        is_sticky:
          type: boolean
        last_reply:
          type: string
        lastedit:
          type: string
        message:
          $ref: '#/components/schemas/getFavoritesContextByID_200_response_count'
        role:
          type: string
        subject:
          type: string
      type: object
    TopicReply:
      example:
        iconfarm: iconfarm
        author: author
        can_edit: true
        lastedit: lastedit
        datecreate: datecreate
        message:
          _content: _content
        iconserver: iconserver
        author_is_deleted: true
        can_delete: true
        is_pro: true
        author_path_alias: author_path_alias
        authorname: authorname
        id: id
      properties:
        author:
          type: string
        author_is_deleted:
          type: boolean
        author_path_alias:
          type: string
        authorname:
          type: string
        can_delete:
          type: boolean
        can_edit:
          type: boolean
        datecreate:
          type: string
        iconfarm:
          type: string
        iconserver:
          type: string
        id:
          type: string
        is_pro:
          type: boolean
        lastedit:
          type: string
        message:
          $ref: '#/components/schemas/getFavoritesContextByID_200_response_count'
      type: object
    URL:
      example:
        _content: _content
        type: type
      properties:
        _content:
          type: string
        type:
          type: string
      type: object
    getFavoritesContextByID_200_response_count:
      example:
        _content: _content
      properties:
        _content:
          type: string
      type: object
    getFavoritesContextByID_200_response:
      example:
        stat: stat
        count:
          _content: _content
        nextphoto:
          owner: owner
          license: 0
          server: server
          thumb: thumb
          safe: true
          farm: farm
          is_faved: true
          id: id
          media: media
          secret: secret
          title: title
          url: url
        prevphoto:
          owner: owner
          license: 0
          server: server
          thumb: thumb
          safe: true
          farm: farm
          is_faved: true
          id: id
          media: media
          secret: secret
          title: title
          url: url
      properties:
        count:
          $ref: '#/components/schemas/getFavoritesContextByID_200_response_count'
        nextphoto:
          $ref: '#/components/schemas/ContextPhoto'
        prevphoto:
          $ref: '#/components/schemas/ContextPhoto'
        stat:
          type: string
      type: object
    getFavoritesByPersonID_200_response:
      example:
        perpage: 1.4658129805029452
        total: 5.962133916683182
        pages: 6.027456183070403
        page: 0.8008281904610115
        photos:
        - server: server
          dateuploaded: dateuploaded
          notes:
            note:
            - description: description
            - description: description
          safety_level: safety_level
          usage:
            canshare: true
            canprint: true
            canblog: true
            candownload: true
          description:
            _content: _content
          media: media
          secret: secret
          title:
            _content: _content
          urls:
            url:
            - _content: _content
              type: type
            - _content: _content
              type: type
          editability:
            cancomment: true
            canaddmeta: true
          permissions:
            permaddmeta: permaddmeta
            permcomment: permcomment
          originalsecret: originalsecret
          farm: farm
          id: id
          views: views
          owner:
            iconfarm: iconfarm
            nsid: nsid
            path_alias: path_alias
            iconserver: iconserver
            noindexfollow: true
            location: location
            is_ad_free: true
            ispro: true
            realname: realname
            username: username
          comments:
            _content: _content
          visibility:
            isfriend: true
            ispublic: true
            isfamily: true
          publiceditability:
            cancomment: true
            canaddmeta: true
          rotation: rotation
          dates:
            taken: taken
            takengranularity: takengranularity
            lastupdate: lastupdate
            takenunknown: true
            posted: posted
          people:
            haspeople: true
          tags:
            tag:
            - author: author
              machine_tag: true
              authorname: authorname
              raw: raw
              id: id
              _content: _content
            - author: author
              machine_tag: true
              authorname: authorname
              raw: raw
              id: id
              _content: _content
          license: license
          safe: true
          isfavorite: true
        - server: server
          dateuploaded: dateuploaded
          notes:
            note:
            - description: description
            - description: description
          safety_level: safety_level
          usage:
            canshare: true
            canprint: true
            canblog: true
            candownload: true
          description:
            _content: _content
          media: media
          secret: secret
          title:
            _content: _content
          urls:
            url:
            - _content: _content
              type: type
            - _content: _content
              type: type
          editability:
            cancomment: true
            canaddmeta: true
          permissions:
            permaddmeta: permaddmeta
            permcomment: permcomment
          originalsecret: originalsecret
          farm: farm
          id: id
          views: views
          owner:
            iconfarm: iconfarm
            nsid: nsid
            path_alias: path_alias
            iconserver: iconserver
            noindexfollow: true
            location: location
            is_ad_free: true
            ispro: true
            realname: realname
            username: username
          comments:
            _content: _content
          visibility:
            isfriend: true
            ispublic: true
            isfamily: true
          publiceditability:
            cancomment: true
            canaddmeta: true
          rotation: rotation
          dates:
            taken: taken
            takengranularity: takengranularity
            lastupdate: lastupdate
            takenunknown: true
            posted: posted
          people:
            haspeople: true
          tags:
            tag:
            - author: author
              machine_tag: true
              authorname: authorname
              raw: raw
              id: id
              _content: _content
            - author: author
              machine_tag: true
              authorname: authorname
              raw: raw
              id: id
              _content: _content
          license: license
          safe: true
          isfavorite: true
      properties:
        page:
          type: number
        pages:
          type: number
        perpage:
          type: number
        photos:
          items:
            $ref: '#/components/schemas/Photo'
          type: array
        total:
          type: number
      type: object
    getGalleryPhotosByID_200_response:
      example:
        photos:
        - server: server
          dateuploaded: dateuploaded
          notes:
            note:
            - description: description
            - description: description
          safety_level: safety_level
          usage:
            canshare: true
            canprint: true
            canblog: true
            candownload: true
          description:
            _content: _content
          media: media
          secret: secret
          title:
            _content: _content
          urls:
            url:
            - _content: _content
              type: type
            - _content: _content
              type: type
          editability:
            cancomment: true
            canaddmeta: true
          permissions:
            permaddmeta: permaddmeta
            permcomment: permcomment
          originalsecret: originalsecret
          farm: farm
          id: id
          views: views
          owner:
            iconfarm: iconfarm
            nsid: nsid
            path_alias: path_alias
            iconserver: iconserver
            noindexfollow: true
            location: location
            is_ad_free: true
            ispro: true
            realname: realname
            username: username
          comments:
            _content: _content
          visibility:
            isfriend: true
            ispublic: true
            isfamily: true
          publiceditability:
            cancomment: true
            canaddmeta: true
          rotation: rotation
          dates:
            taken: taken
            takengranularity: takengranularity
            lastupdate: lastupdate
            takenunknown: true
            posted: posted
          people:
            haspeople: true
          tags:
            tag:
            - author: author
              machine_tag: true
              authorname: authorname
              raw: raw
              id: id
              _content: _content
            - author: author
              machine_tag: true
              authorname: authorname
              raw: raw
              id: id
              _content: _content
          license: license
          safe: true
          isfavorite: true
        - server: server
          dateuploaded: dateuploaded
          notes:
            note:
            - description: description
            - description: description
          safety_level: safety_level
          usage:
            canshare: true
            canprint: true
            canblog: true
            candownload: true
          description:
            _content: _content
          media: media
          secret: secret
          title:
            _content: _content
          urls:
            url:
            - _content: _content
              type: type
            - _content: _content
              type: type
          editability:
            cancomment: true
            canaddmeta: true
          permissions:
            permaddmeta: permaddmeta
            permcomment: permcomment
          originalsecret: originalsecret
          farm: farm
          id: id
          views: views
          owner:
            iconfarm: iconfarm
            nsid: nsid
            path_alias: path_alias
            iconserver: iconserver
            noindexfollow: true
            location: location
            is_ad_free: true
            ispro: true
            realname: realname
            username: username
          comments:
            _content: _content
          visibility:
            isfriend: true
            ispublic: true
            isfamily: true
          publiceditability:
            cancomment: true
            canaddmeta: true
          rotation: rotation
          dates:
            taken: taken
            takengranularity: takengranularity
            lastupdate: lastupdate
            takenunknown: true
            posted: posted
          people:
            haspeople: true
          tags:
            tag:
            - author: author
              machine_tag: true
              authorname: authorname
              raw: raw
              id: id
              _content: _content
            - author: author
              machine_tag: true
              authorname: authorname
              raw: raw
              id: id
              _content: _content
          license: license
          safe: true
          isfavorite: true
      properties:
        photos:
          items:
            $ref: '#/components/schemas/Photo'
          type: array
      type: object
    getGroupTopicRepliesByID_200_response:
      example:
        stat: stat
        reply:
          iconfarm: iconfarm
          author: author
          can_edit: true
          lastedit: lastedit
          datecreate: datecreate
          message:
            _content: _content
          iconserver: iconserver
          author_is_deleted: true
          can_delete: true
          is_pro: true
          author_path_alias: author_path_alias
          authorname: authorname
          id: id
      properties:
        reply:
          $ref: '#/components/schemas/TopicReply'
        stat:
          type: string
      type: object
    getGroupTopicByID_200_response:
      example:
        stat: stat
        topic:
          is_locked: true
          iconfarm: iconfarm
          role: role
          author: author
          subject: subject
          datelastpost: datelastpost
          is_sticky: true
          can_edit: true
          lastedit: lastedit
          datecreate: datecreate
          message:
            _content: _content
          count_replies: 0
          can_reply: true
          iconserver: iconserver
          author_is_deleted: true
          can_delete: true
          is_pro: true
          author_path_alias: author_path_alias
          last_reply: last_reply
          authorname: authorname
          id: id
      properties:
        stat:
          type: string
        topic:
          $ref: '#/components/schemas/Topic'
      type: object
    getGroupDiscussionsByID_200_response:
      example:
        per_page: 2.3021358869347655
        total: 9.301444243932576
        iconfarm: 0.8008281904610115
        pages: 5.637376656633329
        iconserver: 6.027456183070403
        topics:
        - is_locked: true
          iconfarm: iconfarm
          role: role
          author: author
          subject: subject
          datelastpost: datelastpost
          is_sticky: true
          can_edit: true
          lastedit: lastedit
          datecreate: datecreate
          message:
            _content: _content
          count_replies: 0
          can_reply: true
          iconserver: iconserver
          author_is_deleted: true
          can_delete: true
          is_pro: true
          author_path_alias: author_path_alias
          last_reply: last_reply
          authorname: authorname
          id: id
        - is_locked: true
          iconfarm: iconfarm
          role: role
          author: author
          subject: subject
          datelastpost: datelastpost
          is_sticky: true
          can_edit: true
          lastedit: lastedit
          datecreate: datecreate
          message:
            _content: _content
          count_replies: 0
          can_reply: true
          iconserver: iconserver
          author_is_deleted: true
          can_delete: true
          is_pro: true
          author_path_alias: author_path_alias
          last_reply: last_reply
          authorname: authorname
          id: id
        members: 1.4658129805029452
        name: name
        privacy: 7.061401241503109
        ispoolmoderated: true
        page: 5.962133916683182
        lang: lang
      properties:
        iconfarm:
          type: number
        iconserver:
          type: number
        ispoolmoderated:
          type: boolean
        lang:
          type: string
        members:
          type: number
        name:
          type: string
        page:
          type: number
        pages:
          type: number
        per_page:
          type: number
        privacy:
          type: number
        topics:
          items:
            $ref: '#/components/schemas/Topic'
          type: array
        total:
          type: number
      type: object
    getGroupByID_200_response:
      example:
        stat: stat
        group:
          throttle:
            mode: mode
            count: 6
            remaining: remaining
          roles:
            moderator: moderator
            member: member
            admin: admin
          description:
            _content: _content
          privacy:
            _content: _content
          rules:
            _content: _content
          cover:
            owner: owner
            server: server
            isfriend: true
            ispublic: true
            farm: farm
            "y": "y"
            id: id
            secret: secret
            title: title
            isfamily: true
          is_admin: true
          coverphoto_url:
            s: s
            t: t
            h: h
            l: l
          iconserver: iconserver
          coverphoto_farm: coverphoto_farm
          members:
            _content: _content
          ispoolmoderated: true
          coverphoto_server: coverphoto_server
          id: id
          lang: lang
          iconfarm: iconfarm
          is_member: true
          restrictions:
            moderate_ok: true
            restricted_ok: true
            safe_ok: true
            videos_ok: true
            has_geo: true
            images_ok: true
            photos_ok: true
            screens_ok: true
            art_ok: true
          is_moderator: true
          topic_count:
            _content: _content
          blast:
            date_blast_added: date_blast_added
            user_id: user_id
            _content: _content
          path_alias: path_alias
          name:
            _content: _content
          pool_count:
            _content: _content
          pool_rows: 0
      properties:
        group:
          $ref: '#/components/schemas/Group'
        stat:
          type: string
      type: object
    getPersonByID_200_response:
      example:
        stat: stat
        person:
          timezone:
            offset: offset
            timezone_id: timezone_id
            label: label
          has_stats: true
          description:
            _content: _content
          is_ad_free: true
          photosurl:
            _content: _content
          yintl: yintl
          coverphoto:
            s: s
            t: t
            h: h
            l: l
          photos:
            count:
              _content: _content
            firstdate:
              _content: _content
            firstdatetaken:
              _content: _content
            views:
              _content: _content
          cover:
            owner: owner
            server: server
            isfriend: true
            ispublic: true
            farm: farm
            "y": "y"
            id: id
            secret: secret
            title: title
            isfamily: true
          user_secret: user_secret
          nsid: nsid
          iconserver: iconserver
          coverphoto_farm: coverphoto_farm
          can_buy_pro: true
          disable_keyboard_shortcuts:
            _content: _content
          mbox_sha1sum:
            _content: _content
          coverphoto_server: coverphoto_server
          id: id
          profileurl:
            _content: _content
          iconfarm: iconfarm
          unread_messages:
            _content: _content
          realname:
            _content: _content
          path_alias: path_alias
          expire: true
          location:
            _content: _content
          mobileurl:
            _content: _content
          ispro: true
          username:
            _content: _content
      properties:
        person:
          $ref: '#/components/schemas/Person'
        stat:
          type: string
      type: object
    getPhotoExifByID_200_response_photo_exif_inner:
      example:
        tagspaceid: tagspaceid
        raw:
          _content: _content
        label: label
        tag: tag
        tagspace: tagspace
      properties:
        label:
          type: string
        raw:
          $ref: '#/components/schemas/getFavoritesContextByID_200_response_count'
        tag:
          type: string
        tagspace:
          type: string
        tagspaceid:
          type: string
      type: object
    getPhotoExifByID_200_response_photo:
      example:
        server: server
        farm: farm
        id: id
        secret: secret
        camera: camera
        exif:
        - tagspaceid: tagspaceid
          raw:
            _content: _content
          label: label
          tag: tag
          tagspace: tagspace
        - tagspaceid: tagspaceid
          raw:
            _content: _content
          label: label
          tag: tag
          tagspace: tagspace
      properties:
        camera:
          type: string
        exif:
          items:
            $ref: '#/components/schemas/getPhotoExifByID_200_response_photo_exif_inner'
          type: array
        farm:
          type: string
        id:
          type: string
        secret:
          type: string
        server:
          type: string
      type: object
    getPhotoExifByID_200_response:
      example:
        stat: stat
        photo:
          server: server
          farm: farm
          id: id
          secret: secret
          camera: camera
          exif:
          - tagspaceid: tagspaceid
            raw:
              _content: _content
            label: label
            tag: tag
            tagspace: tagspace
          - tagspaceid: tagspaceid
            raw:
              _content: _content
            label: label
            tag: tag
            tagspace: tagspace
      properties:
        photo:
          $ref: '#/components/schemas/getPhotoExifByID_200_response_photo'
        stat:
          type: string
      type: object
    getPhotoByID_200_response:
      example:
        stat: stat
        photo:
          server: server
          dateuploaded: dateuploaded
          notes:
            note:
            - description: description
            - description: description
          safety_level: safety_level
          usage:
            canshare: true
            canprint: true
            canblog: true
            candownload: true
          description:
            _content: _content
          media: media
          secret: secret
          title:
            _content: _content
          urls:
            url:
            - _content: _content
              type: type
            - _content: _content
              type: type
          editability:
            cancomment: true
            canaddmeta: true
          permissions:
            permaddmeta: permaddmeta
            permcomment: permcomment
          originalsecret: originalsecret
          farm: farm
          id: id
          views: views
          owner:
            iconfarm: iconfarm
            nsid: nsid
            path_alias: path_alias
            iconserver: iconserver
            noindexfollow: true
            location: location
            is_ad_free: true
            ispro: true
            realname: realname
            username: username
          comments:
            _content: _content
          visibility:
            isfriend: true
            ispublic: true
            isfamily: true
          publiceditability:
            cancomment: true
            canaddmeta: true
          rotation: rotation
          dates:
            taken: taken
            takengranularity: takengranularity
            lastupdate: lastupdate
            takenunknown: true
            posted: posted
          people:
            haspeople: true
          tags:
            tag:
            - author: author
              machine_tag: true
              authorname: authorname
              raw: raw
              id: id
              _content: _content
            - author: author
              machine_tag: true
              authorname: authorname
              raw: raw
              id: id
              _content: _content
          license: license
          safe: true
          isfavorite: true
      properties:
        photo:
          $ref: '#/components/schemas/Photo'
        stat:
          type: string
      type: object
    getPhotoSizesByID_200_response_sizes:
      example:
        sizes:
        - width: 5.637376656633329
          label: label
          media: media
          source: source
          url: url
          height: 5.962133916683182
        - width: 5.637376656633329
          label: label
          media: media
          source: source
          url: url
          height: 5.962133916683182
        canprint: 1.4658129805029452
        canblog: 0.8008281904610115
        candownload: 6.027456183070403
      properties:
        canblog:
          type: number
        candownload:
          type: number
        canprint:
          type: number
        sizes:
          items:
            $ref: '#/components/schemas/Size'
          type: array
      type: object
    getPhotoSizesByID_200_response:
      example:
        stat: stat
        sizes:
          sizes:
          - width: 5.637376656633329
            label: label
            media: media
            source: source
            url: url
            height: 5.962133916683182
          - width: 5.637376656633329
            label: label
            media: media
            source: source
            url: url
            height: 5.962133916683182
          canprint: 1.4658129805029452
          canblog: 0.8008281904610115
          candownload: 6.027456183070403
      properties:
        sizes:
          $ref: '#/components/schemas/getPhotoSizesByID_200_response_sizes'
        stat:
          type: string
      type: object
    getLicenseByID_200_response_licenses_license_inner:
      example:
        name: name
        id: 0
        url: url
      properties:
        id:
          type: integer
        name:
          type: string
        url:
          type: string
      type: object
    getLicenseByID_200_response_licenses:
      example:
        license:
        - name: name
          id: 0
          url: url
        - name: name
          id: 0
          url: url
      properties:
        license:
          items:
            $ref: '#/components/schemas/getLicenseByID_200_response_licenses_license_inner'
          type: array
      type: object
    getLicenseByID_200_response:
      example:
        licenses:
          license:
          - name: name
            id: 0
            url: url
          - name: name
            id: 0
            url: url
        stat: stat
      properties:
        licenses:
          $ref: '#/components/schemas/getLicenseByID_200_response_licenses'
        stat:
          type: string
      type: object
    getAlbumsByPersonID_200_response:
      example:
        photosets:
        - server: server
          date_update: 7.061401241503109
          description: description
          count_comments: 5.962133916683182
          videos: 3.616076749251911
          secret: secret
          title: title
          photos: 9.301444243932576
          count_views: 5.637376656633329
          can_comment: true
          date_create: 2.3021358869347655
          farm: farm
          id: id
          primary: primary
        - server: server
          date_update: 7.061401241503109
          description: description
          count_comments: 5.962133916683182
          videos: 3.616076749251911
          secret: secret
          title: title
          photos: 9.301444243932576
          count_views: 5.637376656633329
          can_comment: true
          date_create: 2.3021358869347655
          farm: farm
          id: id
          primary: primary
        perpage: 1.4658129805029452
        total: 2.027123023002322
        pages: 6.027456183070403
        page: 0.8008281904610115
      properties:
        page:
          type: number
        pages:
          type: number
        perpage:
          type: number
        photosets:
          items:
            $ref: '#/components/schemas/Album'
          type: array
        total:
          type: number
      type: object
    getAlbumByID_200_response:
      example:
        photoset:
        - server: server
          dateuploaded: dateuploaded
          notes:
            note:
            - description: description
            - description: description
          safety_level: safety_level
          usage:
            canshare: true
            canprint: true
            canblog: true
            candownload: true
          description:
            _content: _content
          media: media
          secret: secret
          title:
            _content: _content
          urls:
            url:
            - _content: _content
              type: type
            - _content: _content
              type: type
          editability:
            cancomment: true
            canaddmeta: true
          permissions:
            permaddmeta: permaddmeta
            permcomment: permcomment
          originalsecret: originalsecret
          farm: farm
          id: id
          views: views
          owner:
            iconfarm: iconfarm
            nsid: nsid
            path_alias: path_alias
            iconserver: iconserver
            noindexfollow: true
            location: location
            is_ad_free: true
            ispro: true
            realname: realname
            username: username
          comments:
            _content: _content
          visibility:
            isfriend: true
            ispublic: true
            isfamily: true
          publiceditability:
            cancomment: true
            canaddmeta: true
          rotation: rotation
          dates:
            taken: taken
            takengranularity: takengranularity
            lastupdate: lastupdate
            takenunknown: true
            posted: posted
          people:
            haspeople: true
          tags:
            tag:
            - author: author
              machine_tag: true
              authorname: authorname
              raw: raw
              id: id
              _content: _content
            - author: author
              machine_tag: true
              authorname: authorname
              raw: raw
              id: id
              _content: _content
          license: license
          safe: true
          isfavorite: true
        - server: server
          dateuploaded: dateuploaded
          notes:
            note:
            - description: description
            - description: description
          safety_level: safety_level
          usage:
            canshare: true
            canprint: true
            canblog: true
            candownload: true
          description:
            _content: _content
          media: media
          secret: secret
          title:
            _content: _content
          urls:
            url:
            - _content: _content
              type: type
            - _content: _content
              type: type
          editability:
            cancomment: true
            canaddmeta: true
          permissions:
            permaddmeta: permaddmeta
            permcomment: permcomment
          originalsecret: originalsecret
          farm: farm
          id: id
          views: views
          owner:
            iconfarm: iconfarm
            nsid: nsid
            path_alias: path_alias
            iconserver: iconserver
            noindexfollow: true
            location: location
            is_ad_free: true
            ispro: true
            realname: realname
            username: username
          comments:
            _content: _content
          visibility:
            isfriend: true
            ispublic: true
            isfamily: true
          publiceditability:
            cancomment: true
            canaddmeta: true
          rotation: rotation
          dates:
            taken: taken
            takengranularity: takengranularity
            lastupdate: lastupdate
            takenunknown: true
            posted: posted
          people:
            haspeople: true
          tags:
            tag:
            - author: author
              machine_tag: true
              authorname: authorname
              raw: raw
              id: id
              _content: _content
            - author: author
              machine_tag: true
              authorname: authorname
              raw: raw
              id: id
              _content: _content
          license: license
          safe: true
          isfavorite: true
      properties:
        photoset:
          items:
            $ref: '#/components/schemas/Photo'
          type: array
      type: object
    echo_200_response:
      example:
        echo:
          _content: _content
      properties:
        echo:
          $ref: '#/components/schemas/getFavoritesContextByID_200_response_count'
      type: object
    uploadPhoto_request:
      properties:
        api_key:
          type: string
        content_type:
          enum:
          - "1"
          - "2"
          - "3"
          type: string
        description:
          type: string
        hidden:
          enum:
          - "1"
          - "2"
          type: string
        is_family:
          enum:
          - "0"
          - "1"
          type: string
        is_friend:
          enum:
          - "0"
          - "1"
          type: string
        is_public:
          enum:
          - "0"
          - "1"
          type: string
        photo:
          format: binary
          type: string
        safety_level:
          enum:
          - "1"
          - "2"
          - "3"
          type: string
        tags:
          type: string
        title:
          type: string
      required:
      - api_key
      - photo
      type: object
    Group_blast:
      example:
        date_blast_added: date_blast_added
        user_id: user_id
        _content: _content
      properties:
        _content:
          type: string
        date_blast_added:
          type: string
        user_id:
          type: string
      type: object
    Group_restrictions:
      example:
        moderate_ok: true
        restricted_ok: true
        safe_ok: true
        videos_ok: true
        has_geo: true
        images_ok: true
        photos_ok: true
        screens_ok: true
        art_ok: true
      properties:
        art_ok:
          type: boolean
        has_geo:
          type: boolean
        images_ok:
          type: boolean
        moderate_ok:
          type: boolean
        photos_ok:
          type: boolean
        restricted_ok:
          type: boolean
        safe_ok:
          type: boolean
        screens_ok:
          type: boolean
        videos_ok:
          type: boolean
      type: object
    Group_roles:
      example:
        moderator: moderator
        member: member
        admin: admin
      properties:
        admin:
          type: string
        member:
          type: string
        moderator:
          type: string
      type: object
    Group_throttle:
      example:
        mode: mode
        count: 6
        remaining: remaining
      properties:
        count:
          type: integer
        mode:
          type: string
        remaining:
          type: string
      type: object
    Person_photos:
      example:
        count:
          _content: _content
        firstdate:
          _content: _content
        firstdatetaken:
          _content: _content
        views:
          _content: _content
      properties:
        count:
          $ref: '#/components/schemas/getFavoritesContextByID_200_response_count'
        firstdate:
          $ref: '#/components/schemas/getFavoritesContextByID_200_response_count'
        firstdatetaken:
          $ref: '#/components/schemas/getFavoritesContextByID_200_response_count'
        views:
          $ref: '#/components/schemas/getFavoritesContextByID_200_response_count'
      type: object
    Person_timezone:
      example:
        offset: offset
        timezone_id: timezone_id
        label: label
      properties:
        label:
          type: string
        offset:
          type: string
        timezone_id:
          type: string
      type: object
    Photo_dates:
      example:
        taken: taken
        takengranularity: takengranularity
        lastupdate: lastupdate
        takenunknown: true
        posted: posted
      properties:
        lastupdate:
          type: string
        posted:
          type: string
        taken:
          type: string
        takengranularity:
          type: string
        takenunknown:
          type: boolean
      type: object
    Photo_editability:
      example:
        cancomment: true
        canaddmeta: true
      properties:
        canaddmeta:
          type: boolean
        cancomment:
          type: boolean
      type: object
    Photo_notes:
      example:
        note:
        - description: description
        - description: description
      properties:
        note:
          items:
            $ref: '#/components/schemas/Note'
          type: array
      type: object
    Photo_people:
      example:
        haspeople: true
      properties:
        haspeople:
          type: boolean
      type: object
    Photo_permissions:
      example:
        permaddmeta: permaddmeta
        permcomment: permcomment
      properties:
        permaddmeta:
          type: string
        permcomment:
          type: string
      type: object
    Photo_tags:
      example:
        tag:
        - author: author
          machine_tag: true
          authorname: authorname
          raw: raw
          id: id
          _content: _content
        - author: author
          machine_tag: true
          authorname: authorname
          raw: raw
          id: id
          _content: _content
      properties:
        tag:
          items:
            $ref: '#/components/schemas/Tag'
          type: array
      type: object
    Photo_urls:
      example:
        url:
        - _content: _content
          type: type
        - _content: _content
          type: type
      properties:
        url:
          items:
            $ref: '#/components/schemas/URL'
          type: array
      type: object
    Photo_usage:
      example:
        canshare: true
        canprint: true
        canblog: true
        candownload: true
      properties:
        canblog:
          type: boolean
        candownload:
          type: boolean
        canprint:
          type: boolean
        canshare:
          type: boolean
      type: object
    Photo_visibility:
      example:
        isfriend: true
        ispublic: true
        isfamily: true
      properties:
        isfamily:
          type: boolean
        isfriend:
          type: boolean
        ispublic:
          type: boolean
      type: object

