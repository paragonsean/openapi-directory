/*
 * Flickr API Schema
 * A subset of Flickr's API defined in Swagger format.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.GetFavoritesContextByID200ResponseCount;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Topic
 */
public class TopicTest {
    private final Topic model = new Topic();

    /**
     * Model tests for Topic
     */
    @Test
    public void testTopic() {
        // TODO: test Topic
    }

    /**
     * Test the property 'author'
     */
    @Test
    public void authorTest() {
        // TODO: test author
    }

    /**
     * Test the property 'authorIsDeleted'
     */
    @Test
    public void authorIsDeletedTest() {
        // TODO: test authorIsDeleted
    }

    /**
     * Test the property 'authorPathAlias'
     */
    @Test
    public void authorPathAliasTest() {
        // TODO: test authorPathAlias
    }

    /**
     * Test the property 'authorname'
     */
    @Test
    public void authornameTest() {
        // TODO: test authorname
    }

    /**
     * Test the property 'canDelete'
     */
    @Test
    public void canDeleteTest() {
        // TODO: test canDelete
    }

    /**
     * Test the property 'canEdit'
     */
    @Test
    public void canEditTest() {
        // TODO: test canEdit
    }

    /**
     * Test the property 'canReply'
     */
    @Test
    public void canReplyTest() {
        // TODO: test canReply
    }

    /**
     * Test the property 'countReplies'
     */
    @Test
    public void countRepliesTest() {
        // TODO: test countReplies
    }

    /**
     * Test the property 'datecreate'
     */
    @Test
    public void datecreateTest() {
        // TODO: test datecreate
    }

    /**
     * Test the property 'datelastpost'
     */
    @Test
    public void datelastpostTest() {
        // TODO: test datelastpost
    }

    /**
     * Test the property 'iconfarm'
     */
    @Test
    public void iconfarmTest() {
        // TODO: test iconfarm
    }

    /**
     * Test the property 'iconserver'
     */
    @Test
    public void iconserverTest() {
        // TODO: test iconserver
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'isLocked'
     */
    @Test
    public void isLockedTest() {
        // TODO: test isLocked
    }

    /**
     * Test the property 'isPro'
     */
    @Test
    public void isProTest() {
        // TODO: test isPro
    }

    /**
     * Test the property 'isSticky'
     */
    @Test
    public void isStickyTest() {
        // TODO: test isSticky
    }

    /**
     * Test the property 'lastReply'
     */
    @Test
    public void lastReplyTest() {
        // TODO: test lastReply
    }

    /**
     * Test the property 'lastedit'
     */
    @Test
    public void lasteditTest() {
        // TODO: test lastedit
    }

    /**
     * Test the property 'message'
     */
    @Test
    public void messageTest() {
        // TODO: test message
    }

    /**
     * Test the property 'role'
     */
    @Test
    public void roleTest() {
        // TODO: test role
    }

    /**
     * Test the property 'subject'
     */
    @Test
    public void subjectTest() {
        // TODO: test subject
    }

}
