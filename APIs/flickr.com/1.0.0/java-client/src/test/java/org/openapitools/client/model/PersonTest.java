/*
 * Flickr API Schema
 * A subset of Flickr's API defined in Swagger format.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.Cover;
import org.openapitools.client.model.GetFavoritesContextByID200ResponseCount;
import org.openapitools.client.model.PersonPhotos;
import org.openapitools.client.model.PersonTimezone;
import org.openapitools.client.model.PhotoURLs;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Person
 */
public class PersonTest {
    private final Person model = new Person();

    /**
     * Model tests for Person
     */
    @Test
    public void testPerson() {
        // TODO: test Person
    }

    /**
     * Test the property 'canBuyPro'
     */
    @Test
    public void canBuyProTest() {
        // TODO: test canBuyPro
    }

    /**
     * Test the property 'cover'
     */
    @Test
    public void coverTest() {
        // TODO: test cover
    }

    /**
     * Test the property 'coverphoto'
     */
    @Test
    public void coverphotoTest() {
        // TODO: test coverphoto
    }

    /**
     * Test the property 'coverphotoFarm'
     */
    @Test
    public void coverphotoFarmTest() {
        // TODO: test coverphotoFarm
    }

    /**
     * Test the property 'coverphotoServer'
     */
    @Test
    public void coverphotoServerTest() {
        // TODO: test coverphotoServer
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'disableKeyboardShortcuts'
     */
    @Test
    public void disableKeyboardShortcutsTest() {
        // TODO: test disableKeyboardShortcuts
    }

    /**
     * Test the property 'expire'
     */
    @Test
    public void expireTest() {
        // TODO: test expire
    }

    /**
     * Test the property 'hasStats'
     */
    @Test
    public void hasStatsTest() {
        // TODO: test hasStats
    }

    /**
     * Test the property 'iconfarm'
     */
    @Test
    public void iconfarmTest() {
        // TODO: test iconfarm
    }

    /**
     * Test the property 'iconserver'
     */
    @Test
    public void iconserverTest() {
        // TODO: test iconserver
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'isAdFree'
     */
    @Test
    public void isAdFreeTest() {
        // TODO: test isAdFree
    }

    /**
     * Test the property 'ispro'
     */
    @Test
    public void isproTest() {
        // TODO: test ispro
    }

    /**
     * Test the property 'location'
     */
    @Test
    public void locationTest() {
        // TODO: test location
    }

    /**
     * Test the property 'mboxSha1sum'
     */
    @Test
    public void mboxSha1sumTest() {
        // TODO: test mboxSha1sum
    }

    /**
     * Test the property 'mobileurl'
     */
    @Test
    public void mobileurlTest() {
        // TODO: test mobileurl
    }

    /**
     * Test the property 'nsid'
     */
    @Test
    public void nsidTest() {
        // TODO: test nsid
    }

    /**
     * Test the property 'pathAlias'
     */
    @Test
    public void pathAliasTest() {
        // TODO: test pathAlias
    }

    /**
     * Test the property 'photos'
     */
    @Test
    public void photosTest() {
        // TODO: test photos
    }

    /**
     * Test the property 'photosurl'
     */
    @Test
    public void photosurlTest() {
        // TODO: test photosurl
    }

    /**
     * Test the property 'profileurl'
     */
    @Test
    public void profileurlTest() {
        // TODO: test profileurl
    }

    /**
     * Test the property 'realname'
     */
    @Test
    public void realnameTest() {
        // TODO: test realname
    }

    /**
     * Test the property 'timezone'
     */
    @Test
    public void timezoneTest() {
        // TODO: test timezone
    }

    /**
     * Test the property 'unreadMessages'
     */
    @Test
    public void unreadMessagesTest() {
        // TODO: test unreadMessages
    }

    /**
     * Test the property 'userSecret'
     */
    @Test
    public void userSecretTest() {
        // TODO: test userSecret
    }

    /**
     * Test the property 'username'
     */
    @Test
    public void usernameTest() {
        // TODO: test username
    }

    /**
     * Test the property 'yintl'
     */
    @Test
    public void yintlTest() {
        // TODO: test yintl
    }

}
