/**
 * Flickr API Schema
 * A subset of Flickr's API defined in Swagger format.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.FlickrApiSchema);
  }
}(this, function(expect, FlickrApiSchema) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new FlickrApiSchema.PublicApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('PublicApi', function() {
    describe('echo', function() {
      it('should call echo successfully', function(done) {
        //uncomment below and update the code to test echo
        //instance.echo(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAccessToken', function() {
      it('should call getAccessToken successfully', function(done) {
        //uncomment below and update the code to test getAccessToken
        //instance.getAccessToken(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAlbumByID', function() {
      it('should call getAlbumByID successfully', function(done) {
        //uncomment below and update the code to test getAlbumByID
        //instance.getAlbumByID(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAlbumContextByID', function() {
      it('should call getAlbumContextByID successfully', function(done) {
        //uncomment below and update the code to test getAlbumContextByID
        //instance.getAlbumContextByID(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAlbumsByPersonID', function() {
      it('should call getAlbumsByPersonID successfully', function(done) {
        //uncomment below and update the code to test getAlbumsByPersonID
        //instance.getAlbumsByPersonID(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getFavoritesByPersonID', function() {
      it('should call getFavoritesByPersonID successfully', function(done) {
        //uncomment below and update the code to test getFavoritesByPersonID
        //instance.getFavoritesByPersonID(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getFavoritesContextByID', function() {
      it('should call getFavoritesContextByID successfully', function(done) {
        //uncomment below and update the code to test getFavoritesContextByID
        //instance.getFavoritesContextByID(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getGalleryPhotosByID', function() {
      it('should call getGalleryPhotosByID successfully', function(done) {
        //uncomment below and update the code to test getGalleryPhotosByID
        //instance.getGalleryPhotosByID(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getGroupByID', function() {
      it('should call getGroupByID successfully', function(done) {
        //uncomment below and update the code to test getGroupByID
        //instance.getGroupByID(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getGroupDiscussionsByID', function() {
      it('should call getGroupDiscussionsByID successfully', function(done) {
        //uncomment below and update the code to test getGroupDiscussionsByID
        //instance.getGroupDiscussionsByID(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getGroupPhotosByID', function() {
      it('should call getGroupPhotosByID successfully', function(done) {
        //uncomment below and update the code to test getGroupPhotosByID
        //instance.getGroupPhotosByID(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getGroupTopicByID', function() {
      it('should call getGroupTopicByID successfully', function(done) {
        //uncomment below and update the code to test getGroupTopicByID
        //instance.getGroupTopicByID(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getGroupTopicRepliesByID', function() {
      it('should call getGroupTopicRepliesByID successfully', function(done) {
        //uncomment below and update the code to test getGroupTopicRepliesByID
        //instance.getGroupTopicRepliesByID(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getLicenseByID', function() {
      it('should call getLicenseByID successfully', function(done) {
        //uncomment below and update the code to test getLicenseByID
        //instance.getLicenseByID(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getMediaByPersonID', function() {
      it('should call getMediaByPersonID successfully', function(done) {
        //uncomment below and update the code to test getMediaByPersonID
        //instance.getMediaByPersonID(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getMediaBySearch', function() {
      it('should call getMediaBySearch successfully', function(done) {
        //uncomment below and update the code to test getMediaBySearch
        //instance.getMediaBySearch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPersonByID', function() {
      it('should call getPersonByID successfully', function(done) {
        //uncomment below and update the code to test getPersonByID
        //instance.getPersonByID(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPhotoByID', function() {
      it('should call getPhotoByID successfully', function(done) {
        //uncomment below and update the code to test getPhotoByID
        //instance.getPhotoByID(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPhotoExifByID', function() {
      it('should call getPhotoExifByID successfully', function(done) {
        //uncomment below and update the code to test getPhotoExifByID
        //instance.getPhotoExifByID(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPhotoSizesByID', function() {
      it('should call getPhotoSizesByID successfully', function(done) {
        //uncomment below and update the code to test getPhotoSizesByID
        //instance.getPhotoSizesByID(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPhotolistContextByID', function() {
      it('should call getPhotolistContextByID successfully', function(done) {
        //uncomment below and update the code to test getPhotolistContextByID
        //instance.getPhotolistContextByID(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPhotostreamContextByID', function() {
      it('should call getPhotostreamContextByID successfully', function(done) {
        //uncomment below and update the code to test getPhotostreamContextByID
        //instance.getPhotostreamContextByID(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getRequestToken', function() {
      it('should call getRequestToken successfully', function(done) {
        //uncomment below and update the code to test getRequestToken
        //instance.getRequestToken(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('restmethodflickrGroupsPoolsGetContextGet', function() {
      it('should call restmethodflickrGroupsPoolsGetContextGet successfully', function(done) {
        //uncomment below and update the code to test restmethodflickrGroupsPoolsGetContextGet
        //instance.restmethodflickrGroupsPoolsGetContextGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('uploadPhoto', function() {
      it('should call uploadPhoto successfully', function(done) {
        //uncomment below and update the code to test uploadPhoto
        //instance.uploadPhoto(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
