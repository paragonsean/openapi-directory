/**
 * Flickr API Schema
 * A subset of Flickr's API defined in Swagger format.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Cover from './Cover';
import GetFavoritesContextByID200ResponseCount from './GetFavoritesContextByID200ResponseCount';
import GroupBlast from './GroupBlast';
import GroupRestrictions from './GroupRestrictions';
import GroupRoles from './GroupRoles';
import GroupThrottle from './GroupThrottle';
import PhotoURLs from './PhotoURLs';

/**
 * The Group model module.
 * @module model/Group
 * @version 1.0.0
 */
class Group {
    /**
     * Constructs a new <code>Group</code>.
     * @alias module:model/Group
     */
    constructor() { 
        
        Group.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Group</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Group} obj Optional instance to populate.
     * @return {module:model/Group} The populated <code>Group</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Group();

            if (data.hasOwnProperty('blast')) {
                obj['blast'] = GroupBlast.constructFromObject(data['blast']);
            }
            if (data.hasOwnProperty('cover')) {
                obj['cover'] = Cover.constructFromObject(data['cover']);
            }
            if (data.hasOwnProperty('coverphoto_farm')) {
                obj['coverphoto_farm'] = ApiClient.convertToType(data['coverphoto_farm'], 'String');
            }
            if (data.hasOwnProperty('coverphoto_server')) {
                obj['coverphoto_server'] = ApiClient.convertToType(data['coverphoto_server'], 'String');
            }
            if (data.hasOwnProperty('coverphoto_url')) {
                obj['coverphoto_url'] = PhotoURLs.constructFromObject(data['coverphoto_url']);
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = GetFavoritesContextByID200ResponseCount.constructFromObject(data['description']);
            }
            if (data.hasOwnProperty('iconfarm')) {
                obj['iconfarm'] = ApiClient.convertToType(data['iconfarm'], 'String');
            }
            if (data.hasOwnProperty('iconserver')) {
                obj['iconserver'] = ApiClient.convertToType(data['iconserver'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('is_admin')) {
                obj['is_admin'] = ApiClient.convertToType(data['is_admin'], 'Boolean');
            }
            if (data.hasOwnProperty('is_member')) {
                obj['is_member'] = ApiClient.convertToType(data['is_member'], 'Boolean');
            }
            if (data.hasOwnProperty('is_moderator')) {
                obj['is_moderator'] = ApiClient.convertToType(data['is_moderator'], 'Boolean');
            }
            if (data.hasOwnProperty('ispoolmoderated')) {
                obj['ispoolmoderated'] = ApiClient.convertToType(data['ispoolmoderated'], 'Boolean');
            }
            if (data.hasOwnProperty('lang')) {
                obj['lang'] = ApiClient.convertToType(data['lang'], 'String');
            }
            if (data.hasOwnProperty('members')) {
                obj['members'] = GetFavoritesContextByID200ResponseCount.constructFromObject(data['members']);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = GetFavoritesContextByID200ResponseCount.constructFromObject(data['name']);
            }
            if (data.hasOwnProperty('path_alias')) {
                obj['path_alias'] = ApiClient.convertToType(data['path_alias'], 'String');
            }
            if (data.hasOwnProperty('pool_count')) {
                obj['pool_count'] = GetFavoritesContextByID200ResponseCount.constructFromObject(data['pool_count']);
            }
            if (data.hasOwnProperty('pool_rows')) {
                obj['pool_rows'] = ApiClient.convertToType(data['pool_rows'], 'Number');
            }
            if (data.hasOwnProperty('privacy')) {
                obj['privacy'] = GetFavoritesContextByID200ResponseCount.constructFromObject(data['privacy']);
            }
            if (data.hasOwnProperty('restrictions')) {
                obj['restrictions'] = GroupRestrictions.constructFromObject(data['restrictions']);
            }
            if (data.hasOwnProperty('roles')) {
                obj['roles'] = GroupRoles.constructFromObject(data['roles']);
            }
            if (data.hasOwnProperty('rules')) {
                obj['rules'] = GetFavoritesContextByID200ResponseCount.constructFromObject(data['rules']);
            }
            if (data.hasOwnProperty('throttle')) {
                obj['throttle'] = GroupThrottle.constructFromObject(data['throttle']);
            }
            if (data.hasOwnProperty('topic_count')) {
                obj['topic_count'] = GetFavoritesContextByID200ResponseCount.constructFromObject(data['topic_count']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Group</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Group</code>.
     */
    static validateJSON(data) {
        // validate the optional field `blast`
        if (data['blast']) { // data not null
          GroupBlast.validateJSON(data['blast']);
        }
        // validate the optional field `cover`
        if (data['cover']) { // data not null
          Cover.validateJSON(data['cover']);
        }
        // ensure the json data is a string
        if (data['coverphoto_farm'] && !(typeof data['coverphoto_farm'] === 'string' || data['coverphoto_farm'] instanceof String)) {
            throw new Error("Expected the field `coverphoto_farm` to be a primitive type in the JSON string but got " + data['coverphoto_farm']);
        }
        // ensure the json data is a string
        if (data['coverphoto_server'] && !(typeof data['coverphoto_server'] === 'string' || data['coverphoto_server'] instanceof String)) {
            throw new Error("Expected the field `coverphoto_server` to be a primitive type in the JSON string but got " + data['coverphoto_server']);
        }
        // validate the optional field `coverphoto_url`
        if (data['coverphoto_url']) { // data not null
          PhotoURLs.validateJSON(data['coverphoto_url']);
        }
        // validate the optional field `description`
        if (data['description']) { // data not null
          GetFavoritesContextByID200ResponseCount.validateJSON(data['description']);
        }
        // ensure the json data is a string
        if (data['iconfarm'] && !(typeof data['iconfarm'] === 'string' || data['iconfarm'] instanceof String)) {
            throw new Error("Expected the field `iconfarm` to be a primitive type in the JSON string but got " + data['iconfarm']);
        }
        // ensure the json data is a string
        if (data['iconserver'] && !(typeof data['iconserver'] === 'string' || data['iconserver'] instanceof String)) {
            throw new Error("Expected the field `iconserver` to be a primitive type in the JSON string but got " + data['iconserver']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['lang'] && !(typeof data['lang'] === 'string' || data['lang'] instanceof String)) {
            throw new Error("Expected the field `lang` to be a primitive type in the JSON string but got " + data['lang']);
        }
        // validate the optional field `members`
        if (data['members']) { // data not null
          GetFavoritesContextByID200ResponseCount.validateJSON(data['members']);
        }
        // validate the optional field `name`
        if (data['name']) { // data not null
          GetFavoritesContextByID200ResponseCount.validateJSON(data['name']);
        }
        // ensure the json data is a string
        if (data['path_alias'] && !(typeof data['path_alias'] === 'string' || data['path_alias'] instanceof String)) {
            throw new Error("Expected the field `path_alias` to be a primitive type in the JSON string but got " + data['path_alias']);
        }
        // validate the optional field `pool_count`
        if (data['pool_count']) { // data not null
          GetFavoritesContextByID200ResponseCount.validateJSON(data['pool_count']);
        }
        // validate the optional field `privacy`
        if (data['privacy']) { // data not null
          GetFavoritesContextByID200ResponseCount.validateJSON(data['privacy']);
        }
        // validate the optional field `restrictions`
        if (data['restrictions']) { // data not null
          GroupRestrictions.validateJSON(data['restrictions']);
        }
        // validate the optional field `roles`
        if (data['roles']) { // data not null
          GroupRoles.validateJSON(data['roles']);
        }
        // validate the optional field `rules`
        if (data['rules']) { // data not null
          GetFavoritesContextByID200ResponseCount.validateJSON(data['rules']);
        }
        // validate the optional field `throttle`
        if (data['throttle']) { // data not null
          GroupThrottle.validateJSON(data['throttle']);
        }
        // validate the optional field `topic_count`
        if (data['topic_count']) { // data not null
          GetFavoritesContextByID200ResponseCount.validateJSON(data['topic_count']);
        }

        return true;
    }


}



/**
 * @member {module:model/GroupBlast} blast
 */
Group.prototype['blast'] = undefined;

/**
 * @member {module:model/Cover} cover
 */
Group.prototype['cover'] = undefined;

/**
 * @member {String} coverphoto_farm
 */
Group.prototype['coverphoto_farm'] = undefined;

/**
 * @member {String} coverphoto_server
 */
Group.prototype['coverphoto_server'] = undefined;

/**
 * @member {module:model/PhotoURLs} coverphoto_url
 */
Group.prototype['coverphoto_url'] = undefined;

/**
 * @member {module:model/GetFavoritesContextByID200ResponseCount} description
 */
Group.prototype['description'] = undefined;

/**
 * @member {String} iconfarm
 */
Group.prototype['iconfarm'] = undefined;

/**
 * @member {String} iconserver
 */
Group.prototype['iconserver'] = undefined;

/**
 * @member {String} id
 */
Group.prototype['id'] = undefined;

/**
 * @member {Boolean} is_admin
 */
Group.prototype['is_admin'] = undefined;

/**
 * @member {Boolean} is_member
 */
Group.prototype['is_member'] = undefined;

/**
 * @member {Boolean} is_moderator
 */
Group.prototype['is_moderator'] = undefined;

/**
 * @member {Boolean} ispoolmoderated
 */
Group.prototype['ispoolmoderated'] = undefined;

/**
 * @member {String} lang
 */
Group.prototype['lang'] = undefined;

/**
 * @member {module:model/GetFavoritesContextByID200ResponseCount} members
 */
Group.prototype['members'] = undefined;

/**
 * @member {module:model/GetFavoritesContextByID200ResponseCount} name
 */
Group.prototype['name'] = undefined;

/**
 * @member {String} path_alias
 */
Group.prototype['path_alias'] = undefined;

/**
 * @member {module:model/GetFavoritesContextByID200ResponseCount} pool_count
 */
Group.prototype['pool_count'] = undefined;

/**
 * @member {Number} pool_rows
 */
Group.prototype['pool_rows'] = undefined;

/**
 * @member {module:model/GetFavoritesContextByID200ResponseCount} privacy
 */
Group.prototype['privacy'] = undefined;

/**
 * @member {module:model/GroupRestrictions} restrictions
 */
Group.prototype['restrictions'] = undefined;

/**
 * @member {module:model/GroupRoles} roles
 */
Group.prototype['roles'] = undefined;

/**
 * @member {module:model/GetFavoritesContextByID200ResponseCount} rules
 */
Group.prototype['rules'] = undefined;

/**
 * @member {module:model/GroupThrottle} throttle
 */
Group.prototype['throttle'] = undefined;

/**
 * @member {module:model/GetFavoritesContextByID200ResponseCount} topic_count
 */
Group.prototype['topic_count'] = undefined;






export default Group;

