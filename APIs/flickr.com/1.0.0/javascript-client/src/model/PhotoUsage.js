/**
 * Flickr API Schema
 * A subset of Flickr's API defined in Swagger format.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PhotoUsage model module.
 * @module model/PhotoUsage
 * @version 1.0.0
 */
class PhotoUsage {
    /**
     * Constructs a new <code>PhotoUsage</code>.
     * @alias module:model/PhotoUsage
     */
    constructor() { 
        
        PhotoUsage.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PhotoUsage</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PhotoUsage} obj Optional instance to populate.
     * @return {module:model/PhotoUsage} The populated <code>PhotoUsage</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PhotoUsage();

            if (data.hasOwnProperty('canblog')) {
                obj['canblog'] = ApiClient.convertToType(data['canblog'], 'Boolean');
            }
            if (data.hasOwnProperty('candownload')) {
                obj['candownload'] = ApiClient.convertToType(data['candownload'], 'Boolean');
            }
            if (data.hasOwnProperty('canprint')) {
                obj['canprint'] = ApiClient.convertToType(data['canprint'], 'Boolean');
            }
            if (data.hasOwnProperty('canshare')) {
                obj['canshare'] = ApiClient.convertToType(data['canshare'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PhotoUsage</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PhotoUsage</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * @member {Boolean} canblog
 */
PhotoUsage.prototype['canblog'] = undefined;

/**
 * @member {Boolean} candownload
 */
PhotoUsage.prototype['candownload'] = undefined;

/**
 * @member {Boolean} canprint
 */
PhotoUsage.prototype['canprint'] = undefined;

/**
 * @member {Boolean} canshare
 */
PhotoUsage.prototype['canshare'] = undefined;






export default PhotoUsage;

