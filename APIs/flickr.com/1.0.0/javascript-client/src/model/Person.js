/**
 * Flickr API Schema
 * A subset of Flickr's API defined in Swagger format.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Cover from './Cover';
import GetFavoritesContextByID200ResponseCount from './GetFavoritesContextByID200ResponseCount';
import PersonPhotos from './PersonPhotos';
import PersonTimezone from './PersonTimezone';
import PhotoURLs from './PhotoURLs';

/**
 * The Person model module.
 * @module model/Person
 * @version 1.0.0
 */
class Person {
    /**
     * Constructs a new <code>Person</code>.
     * @alias module:model/Person
     */
    constructor() { 
        
        Person.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Person</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Person} obj Optional instance to populate.
     * @return {module:model/Person} The populated <code>Person</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Person();

            if (data.hasOwnProperty('can_buy_pro')) {
                obj['can_buy_pro'] = ApiClient.convertToType(data['can_buy_pro'], 'Boolean');
            }
            if (data.hasOwnProperty('cover')) {
                obj['cover'] = Cover.constructFromObject(data['cover']);
            }
            if (data.hasOwnProperty('coverphoto')) {
                obj['coverphoto'] = PhotoURLs.constructFromObject(data['coverphoto']);
            }
            if (data.hasOwnProperty('coverphoto_farm')) {
                obj['coverphoto_farm'] = ApiClient.convertToType(data['coverphoto_farm'], 'String');
            }
            if (data.hasOwnProperty('coverphoto_server')) {
                obj['coverphoto_server'] = ApiClient.convertToType(data['coverphoto_server'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = GetFavoritesContextByID200ResponseCount.constructFromObject(data['description']);
            }
            if (data.hasOwnProperty('disable_keyboard_shortcuts')) {
                obj['disable_keyboard_shortcuts'] = GetFavoritesContextByID200ResponseCount.constructFromObject(data['disable_keyboard_shortcuts']);
            }
            if (data.hasOwnProperty('expire')) {
                obj['expire'] = ApiClient.convertToType(data['expire'], 'Boolean');
            }
            if (data.hasOwnProperty('has_stats')) {
                obj['has_stats'] = ApiClient.convertToType(data['has_stats'], 'Boolean');
            }
            if (data.hasOwnProperty('iconfarm')) {
                obj['iconfarm'] = ApiClient.convertToType(data['iconfarm'], 'String');
            }
            if (data.hasOwnProperty('iconserver')) {
                obj['iconserver'] = ApiClient.convertToType(data['iconserver'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('is_ad_free')) {
                obj['is_ad_free'] = ApiClient.convertToType(data['is_ad_free'], 'Boolean');
            }
            if (data.hasOwnProperty('ispro')) {
                obj['ispro'] = ApiClient.convertToType(data['ispro'], 'Boolean');
            }
            if (data.hasOwnProperty('location')) {
                obj['location'] = GetFavoritesContextByID200ResponseCount.constructFromObject(data['location']);
            }
            if (data.hasOwnProperty('mbox_sha1sum')) {
                obj['mbox_sha1sum'] = GetFavoritesContextByID200ResponseCount.constructFromObject(data['mbox_sha1sum']);
            }
            if (data.hasOwnProperty('mobileurl')) {
                obj['mobileurl'] = GetFavoritesContextByID200ResponseCount.constructFromObject(data['mobileurl']);
            }
            if (data.hasOwnProperty('nsid')) {
                obj['nsid'] = ApiClient.convertToType(data['nsid'], 'String');
            }
            if (data.hasOwnProperty('path_alias')) {
                obj['path_alias'] = ApiClient.convertToType(data['path_alias'], 'String');
            }
            if (data.hasOwnProperty('photos')) {
                obj['photos'] = PersonPhotos.constructFromObject(data['photos']);
            }
            if (data.hasOwnProperty('photosurl')) {
                obj['photosurl'] = GetFavoritesContextByID200ResponseCount.constructFromObject(data['photosurl']);
            }
            if (data.hasOwnProperty('profileurl')) {
                obj['profileurl'] = GetFavoritesContextByID200ResponseCount.constructFromObject(data['profileurl']);
            }
            if (data.hasOwnProperty('realname')) {
                obj['realname'] = GetFavoritesContextByID200ResponseCount.constructFromObject(data['realname']);
            }
            if (data.hasOwnProperty('timezone')) {
                obj['timezone'] = PersonTimezone.constructFromObject(data['timezone']);
            }
            if (data.hasOwnProperty('unread_messages')) {
                obj['unread_messages'] = GetFavoritesContextByID200ResponseCount.constructFromObject(data['unread_messages']);
            }
            if (data.hasOwnProperty('user_secret')) {
                obj['user_secret'] = ApiClient.convertToType(data['user_secret'], 'String');
            }
            if (data.hasOwnProperty('username')) {
                obj['username'] = GetFavoritesContextByID200ResponseCount.constructFromObject(data['username']);
            }
            if (data.hasOwnProperty('yintl')) {
                obj['yintl'] = ApiClient.convertToType(data['yintl'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Person</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Person</code>.
     */
    static validateJSON(data) {
        // validate the optional field `cover`
        if (data['cover']) { // data not null
          Cover.validateJSON(data['cover']);
        }
        // validate the optional field `coverphoto`
        if (data['coverphoto']) { // data not null
          PhotoURLs.validateJSON(data['coverphoto']);
        }
        // ensure the json data is a string
        if (data['coverphoto_farm'] && !(typeof data['coverphoto_farm'] === 'string' || data['coverphoto_farm'] instanceof String)) {
            throw new Error("Expected the field `coverphoto_farm` to be a primitive type in the JSON string but got " + data['coverphoto_farm']);
        }
        // ensure the json data is a string
        if (data['coverphoto_server'] && !(typeof data['coverphoto_server'] === 'string' || data['coverphoto_server'] instanceof String)) {
            throw new Error("Expected the field `coverphoto_server` to be a primitive type in the JSON string but got " + data['coverphoto_server']);
        }
        // validate the optional field `description`
        if (data['description']) { // data not null
          GetFavoritesContextByID200ResponseCount.validateJSON(data['description']);
        }
        // validate the optional field `disable_keyboard_shortcuts`
        if (data['disable_keyboard_shortcuts']) { // data not null
          GetFavoritesContextByID200ResponseCount.validateJSON(data['disable_keyboard_shortcuts']);
        }
        // ensure the json data is a string
        if (data['iconfarm'] && !(typeof data['iconfarm'] === 'string' || data['iconfarm'] instanceof String)) {
            throw new Error("Expected the field `iconfarm` to be a primitive type in the JSON string but got " + data['iconfarm']);
        }
        // ensure the json data is a string
        if (data['iconserver'] && !(typeof data['iconserver'] === 'string' || data['iconserver'] instanceof String)) {
            throw new Error("Expected the field `iconserver` to be a primitive type in the JSON string but got " + data['iconserver']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // validate the optional field `location`
        if (data['location']) { // data not null
          GetFavoritesContextByID200ResponseCount.validateJSON(data['location']);
        }
        // validate the optional field `mbox_sha1sum`
        if (data['mbox_sha1sum']) { // data not null
          GetFavoritesContextByID200ResponseCount.validateJSON(data['mbox_sha1sum']);
        }
        // validate the optional field `mobileurl`
        if (data['mobileurl']) { // data not null
          GetFavoritesContextByID200ResponseCount.validateJSON(data['mobileurl']);
        }
        // ensure the json data is a string
        if (data['nsid'] && !(typeof data['nsid'] === 'string' || data['nsid'] instanceof String)) {
            throw new Error("Expected the field `nsid` to be a primitive type in the JSON string but got " + data['nsid']);
        }
        // ensure the json data is a string
        if (data['path_alias'] && !(typeof data['path_alias'] === 'string' || data['path_alias'] instanceof String)) {
            throw new Error("Expected the field `path_alias` to be a primitive type in the JSON string but got " + data['path_alias']);
        }
        // validate the optional field `photos`
        if (data['photos']) { // data not null
          PersonPhotos.validateJSON(data['photos']);
        }
        // validate the optional field `photosurl`
        if (data['photosurl']) { // data not null
          GetFavoritesContextByID200ResponseCount.validateJSON(data['photosurl']);
        }
        // validate the optional field `profileurl`
        if (data['profileurl']) { // data not null
          GetFavoritesContextByID200ResponseCount.validateJSON(data['profileurl']);
        }
        // validate the optional field `realname`
        if (data['realname']) { // data not null
          GetFavoritesContextByID200ResponseCount.validateJSON(data['realname']);
        }
        // validate the optional field `timezone`
        if (data['timezone']) { // data not null
          PersonTimezone.validateJSON(data['timezone']);
        }
        // validate the optional field `unread_messages`
        if (data['unread_messages']) { // data not null
          GetFavoritesContextByID200ResponseCount.validateJSON(data['unread_messages']);
        }
        // ensure the json data is a string
        if (data['user_secret'] && !(typeof data['user_secret'] === 'string' || data['user_secret'] instanceof String)) {
            throw new Error("Expected the field `user_secret` to be a primitive type in the JSON string but got " + data['user_secret']);
        }
        // validate the optional field `username`
        if (data['username']) { // data not null
          GetFavoritesContextByID200ResponseCount.validateJSON(data['username']);
        }
        // ensure the json data is a string
        if (data['yintl'] && !(typeof data['yintl'] === 'string' || data['yintl'] instanceof String)) {
            throw new Error("Expected the field `yintl` to be a primitive type in the JSON string but got " + data['yintl']);
        }

        return true;
    }


}



/**
 * @member {Boolean} can_buy_pro
 */
Person.prototype['can_buy_pro'] = undefined;

/**
 * @member {module:model/Cover} cover
 */
Person.prototype['cover'] = undefined;

/**
 * @member {module:model/PhotoURLs} coverphoto
 */
Person.prototype['coverphoto'] = undefined;

/**
 * @member {String} coverphoto_farm
 */
Person.prototype['coverphoto_farm'] = undefined;

/**
 * @member {String} coverphoto_server
 */
Person.prototype['coverphoto_server'] = undefined;

/**
 * @member {module:model/GetFavoritesContextByID200ResponseCount} description
 */
Person.prototype['description'] = undefined;

/**
 * @member {module:model/GetFavoritesContextByID200ResponseCount} disable_keyboard_shortcuts
 */
Person.prototype['disable_keyboard_shortcuts'] = undefined;

/**
 * @member {Boolean} expire
 */
Person.prototype['expire'] = undefined;

/**
 * @member {Boolean} has_stats
 */
Person.prototype['has_stats'] = undefined;

/**
 * @member {String} iconfarm
 */
Person.prototype['iconfarm'] = undefined;

/**
 * @member {String} iconserver
 */
Person.prototype['iconserver'] = undefined;

/**
 * @member {String} id
 */
Person.prototype['id'] = undefined;

/**
 * @member {Boolean} is_ad_free
 */
Person.prototype['is_ad_free'] = undefined;

/**
 * @member {Boolean} ispro
 */
Person.prototype['ispro'] = undefined;

/**
 * @member {module:model/GetFavoritesContextByID200ResponseCount} location
 */
Person.prototype['location'] = undefined;

/**
 * @member {module:model/GetFavoritesContextByID200ResponseCount} mbox_sha1sum
 */
Person.prototype['mbox_sha1sum'] = undefined;

/**
 * @member {module:model/GetFavoritesContextByID200ResponseCount} mobileurl
 */
Person.prototype['mobileurl'] = undefined;

/**
 * @member {String} nsid
 */
Person.prototype['nsid'] = undefined;

/**
 * @member {String} path_alias
 */
Person.prototype['path_alias'] = undefined;

/**
 * @member {module:model/PersonPhotos} photos
 */
Person.prototype['photos'] = undefined;

/**
 * @member {module:model/GetFavoritesContextByID200ResponseCount} photosurl
 */
Person.prototype['photosurl'] = undefined;

/**
 * @member {module:model/GetFavoritesContextByID200ResponseCount} profileurl
 */
Person.prototype['profileurl'] = undefined;

/**
 * @member {module:model/GetFavoritesContextByID200ResponseCount} realname
 */
Person.prototype['realname'] = undefined;

/**
 * @member {module:model/PersonTimezone} timezone
 */
Person.prototype['timezone'] = undefined;

/**
 * @member {module:model/GetFavoritesContextByID200ResponseCount} unread_messages
 */
Person.prototype['unread_messages'] = undefined;

/**
 * @member {String} user_secret
 */
Person.prototype['user_secret'] = undefined;

/**
 * @member {module:model/GetFavoritesContextByID200ResponseCount} username
 */
Person.prototype['username'] = undefined;

/**
 * @member {String} yintl
 */
Person.prototype['yintl'] = undefined;






export default Person;

