/**
 * Flickr API Schema
 * A subset of Flickr's API defined in Swagger format.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PhotoDates model module.
 * @module model/PhotoDates
 * @version 1.0.0
 */
class PhotoDates {
    /**
     * Constructs a new <code>PhotoDates</code>.
     * @alias module:model/PhotoDates
     */
    constructor() { 
        
        PhotoDates.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PhotoDates</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PhotoDates} obj Optional instance to populate.
     * @return {module:model/PhotoDates} The populated <code>PhotoDates</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PhotoDates();

            if (data.hasOwnProperty('lastupdate')) {
                obj['lastupdate'] = ApiClient.convertToType(data['lastupdate'], 'String');
            }
            if (data.hasOwnProperty('posted')) {
                obj['posted'] = ApiClient.convertToType(data['posted'], 'String');
            }
            if (data.hasOwnProperty('taken')) {
                obj['taken'] = ApiClient.convertToType(data['taken'], 'String');
            }
            if (data.hasOwnProperty('takengranularity')) {
                obj['takengranularity'] = ApiClient.convertToType(data['takengranularity'], 'String');
            }
            if (data.hasOwnProperty('takenunknown')) {
                obj['takenunknown'] = ApiClient.convertToType(data['takenunknown'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PhotoDates</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PhotoDates</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['lastupdate'] && !(typeof data['lastupdate'] === 'string' || data['lastupdate'] instanceof String)) {
            throw new Error("Expected the field `lastupdate` to be a primitive type in the JSON string but got " + data['lastupdate']);
        }
        // ensure the json data is a string
        if (data['posted'] && !(typeof data['posted'] === 'string' || data['posted'] instanceof String)) {
            throw new Error("Expected the field `posted` to be a primitive type in the JSON string but got " + data['posted']);
        }
        // ensure the json data is a string
        if (data['taken'] && !(typeof data['taken'] === 'string' || data['taken'] instanceof String)) {
            throw new Error("Expected the field `taken` to be a primitive type in the JSON string but got " + data['taken']);
        }
        // ensure the json data is a string
        if (data['takengranularity'] && !(typeof data['takengranularity'] === 'string' || data['takengranularity'] instanceof String)) {
            throw new Error("Expected the field `takengranularity` to be a primitive type in the JSON string but got " + data['takengranularity']);
        }

        return true;
    }


}



/**
 * @member {String} lastupdate
 */
PhotoDates.prototype['lastupdate'] = undefined;

/**
 * @member {String} posted
 */
PhotoDates.prototype['posted'] = undefined;

/**
 * @member {String} taken
 */
PhotoDates.prototype['taken'] = undefined;

/**
 * @member {String} takengranularity
 */
PhotoDates.prototype['takengranularity'] = undefined;

/**
 * @member {Boolean} takenunknown
 */
PhotoDates.prototype['takenunknown'] = undefined;






export default PhotoDates;

