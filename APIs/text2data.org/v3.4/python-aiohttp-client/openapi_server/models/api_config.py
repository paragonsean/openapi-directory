# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ApiConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, api_private_key: str=None, api_secret: str=None, blacklisted_words: List[str]=None, error_message: str=None, is_request_status_ok: bool=None):
        """ApiConfig - a model defined in OpenAPI

        :param api_private_key: The api_private_key of this ApiConfig.
        :param api_secret: The api_secret of this ApiConfig.
        :param blacklisted_words: The blacklisted_words of this ApiConfig.
        :param error_message: The error_message of this ApiConfig.
        :param is_request_status_ok: The is_request_status_ok of this ApiConfig.
        """
        self.openapi_types = {
            'api_private_key': str,
            'api_secret': str,
            'blacklisted_words': List[str],
            'error_message': str,
            'is_request_status_ok': bool
        }

        self.attribute_map = {
            'api_private_key': 'APIPrivateKey',
            'api_secret': 'APISecret',
            'blacklisted_words': 'BlacklistedWords',
            'error_message': 'ErrorMessage',
            'is_request_status_ok': 'IsRequestStatusOK'
        }

        self._api_private_key = api_private_key
        self._api_secret = api_secret
        self._blacklisted_words = blacklisted_words
        self._error_message = error_message
        self._is_request_status_ok = is_request_status_ok

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApiConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ApiConfig of this ApiConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def api_private_key(self):
        """Gets the api_private_key of this ApiConfig.


        :return: The api_private_key of this ApiConfig.
        :rtype: str
        """
        return self._api_private_key

    @api_private_key.setter
    def api_private_key(self, api_private_key):
        """Sets the api_private_key of this ApiConfig.


        :param api_private_key: The api_private_key of this ApiConfig.
        :type api_private_key: str
        """

        self._api_private_key = api_private_key

    @property
    def api_secret(self):
        """Gets the api_secret of this ApiConfig.


        :return: The api_secret of this ApiConfig.
        :rtype: str
        """
        return self._api_secret

    @api_secret.setter
    def api_secret(self, api_secret):
        """Sets the api_secret of this ApiConfig.


        :param api_secret: The api_secret of this ApiConfig.
        :type api_secret: str
        """

        self._api_secret = api_secret

    @property
    def blacklisted_words(self):
        """Gets the blacklisted_words of this ApiConfig.


        :return: The blacklisted_words of this ApiConfig.
        :rtype: List[str]
        """
        return self._blacklisted_words

    @blacklisted_words.setter
    def blacklisted_words(self, blacklisted_words):
        """Sets the blacklisted_words of this ApiConfig.


        :param blacklisted_words: The blacklisted_words of this ApiConfig.
        :type blacklisted_words: List[str]
        """

        self._blacklisted_words = blacklisted_words

    @property
    def error_message(self):
        """Gets the error_message of this ApiConfig.


        :return: The error_message of this ApiConfig.
        :rtype: str
        """
        return self._error_message

    @error_message.setter
    def error_message(self, error_message):
        """Sets the error_message of this ApiConfig.


        :param error_message: The error_message of this ApiConfig.
        :type error_message: str
        """

        self._error_message = error_message

    @property
    def is_request_status_ok(self):
        """Gets the is_request_status_ok of this ApiConfig.


        :return: The is_request_status_ok of this ApiConfig.
        :rtype: bool
        """
        return self._is_request_status_ok

    @is_request_status_ok.setter
    def is_request_status_ok(self, is_request_status_ok):
        """Sets the is_request_status_ok of this ApiConfig.


        :param is_request_status_ok: The is_request_status_ok of this ApiConfig.
        :type is_request_status_ok: bool
        """

        self._is_request_status_ok = is_request_status_ok
