# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SlangWord(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, slang_word_text: str=None, slang_word_translation: str=None):
        """SlangWord - a model defined in OpenAPI

        :param slang_word_text: The slang_word_text of this SlangWord.
        :param slang_word_translation: The slang_word_translation of this SlangWord.
        """
        self.openapi_types = {
            'slang_word_text': str,
            'slang_word_translation': str
        }

        self.attribute_map = {
            'slang_word_text': 'SlangWordText',
            'slang_word_translation': 'SlangWordTranslation'
        }

        self._slang_word_text = slang_word_text
        self._slang_word_translation = slang_word_translation

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SlangWord':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SlangWord of this SlangWord.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def slang_word_text(self):
        """Gets the slang_word_text of this SlangWord.


        :return: The slang_word_text of this SlangWord.
        :rtype: str
        """
        return self._slang_word_text

    @slang_word_text.setter
    def slang_word_text(self, slang_word_text):
        """Sets the slang_word_text of this SlangWord.


        :param slang_word_text: The slang_word_text of this SlangWord.
        :type slang_word_text: str
        """

        self._slang_word_text = slang_word_text

    @property
    def slang_word_translation(self):
        """Gets the slang_word_translation of this SlangWord.


        :return: The slang_word_translation of this SlangWord.
        :rtype: str
        """
        return self._slang_word_translation

    @slang_word_translation.setter
    def slang_word_translation(self, slang_word_translation):
        """Sets the slang_word_translation of this SlangWord.


        :param slang_word_translation: The slang_word_translation of this SlangWord.
        :type slang_word_translation: str
        """

        self._slang_word_translation = slang_word_translation
