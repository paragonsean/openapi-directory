# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class StorageInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, create_date: datetime=None, document_text: str=None, ip: str=None, is_excel: bool=None, is_gs_excel: bool=None, is_twitter_mode: bool=None, private_key: str=None, request_identifier: str=None, user_category_model_name: str=None):
        """StorageInfo - a model defined in OpenAPI

        :param create_date: The create_date of this StorageInfo.
        :param document_text: The document_text of this StorageInfo.
        :param ip: The ip of this StorageInfo.
        :param is_excel: The is_excel of this StorageInfo.
        :param is_gs_excel: The is_gs_excel of this StorageInfo.
        :param is_twitter_mode: The is_twitter_mode of this StorageInfo.
        :param private_key: The private_key of this StorageInfo.
        :param request_identifier: The request_identifier of this StorageInfo.
        :param user_category_model_name: The user_category_model_name of this StorageInfo.
        """
        self.openapi_types = {
            'create_date': datetime,
            'document_text': str,
            'ip': str,
            'is_excel': bool,
            'is_gs_excel': bool,
            'is_twitter_mode': bool,
            'private_key': str,
            'request_identifier': str,
            'user_category_model_name': str
        }

        self.attribute_map = {
            'create_date': 'CreateDate',
            'document_text': 'DocumentText',
            'ip': 'IP',
            'is_excel': 'IsExcel',
            'is_gs_excel': 'IsGSExcel',
            'is_twitter_mode': 'IsTwitterMode',
            'private_key': 'PrivateKey',
            'request_identifier': 'RequestIdentifier',
            'user_category_model_name': 'UserCategoryModelName'
        }

        self._create_date = create_date
        self._document_text = document_text
        self._ip = ip
        self._is_excel = is_excel
        self._is_gs_excel = is_gs_excel
        self._is_twitter_mode = is_twitter_mode
        self._private_key = private_key
        self._request_identifier = request_identifier
        self._user_category_model_name = user_category_model_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StorageInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StorageInfo of this StorageInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def create_date(self):
        """Gets the create_date of this StorageInfo.


        :return: The create_date of this StorageInfo.
        :rtype: datetime
        """
        return self._create_date

    @create_date.setter
    def create_date(self, create_date):
        """Sets the create_date of this StorageInfo.


        :param create_date: The create_date of this StorageInfo.
        :type create_date: datetime
        """

        self._create_date = create_date

    @property
    def document_text(self):
        """Gets the document_text of this StorageInfo.


        :return: The document_text of this StorageInfo.
        :rtype: str
        """
        return self._document_text

    @document_text.setter
    def document_text(self, document_text):
        """Sets the document_text of this StorageInfo.


        :param document_text: The document_text of this StorageInfo.
        :type document_text: str
        """

        self._document_text = document_text

    @property
    def ip(self):
        """Gets the ip of this StorageInfo.


        :return: The ip of this StorageInfo.
        :rtype: str
        """
        return self._ip

    @ip.setter
    def ip(self, ip):
        """Sets the ip of this StorageInfo.


        :param ip: The ip of this StorageInfo.
        :type ip: str
        """

        self._ip = ip

    @property
    def is_excel(self):
        """Gets the is_excel of this StorageInfo.


        :return: The is_excel of this StorageInfo.
        :rtype: bool
        """
        return self._is_excel

    @is_excel.setter
    def is_excel(self, is_excel):
        """Sets the is_excel of this StorageInfo.


        :param is_excel: The is_excel of this StorageInfo.
        :type is_excel: bool
        """

        self._is_excel = is_excel

    @property
    def is_gs_excel(self):
        """Gets the is_gs_excel of this StorageInfo.


        :return: The is_gs_excel of this StorageInfo.
        :rtype: bool
        """
        return self._is_gs_excel

    @is_gs_excel.setter
    def is_gs_excel(self, is_gs_excel):
        """Sets the is_gs_excel of this StorageInfo.


        :param is_gs_excel: The is_gs_excel of this StorageInfo.
        :type is_gs_excel: bool
        """

        self._is_gs_excel = is_gs_excel

    @property
    def is_twitter_mode(self):
        """Gets the is_twitter_mode of this StorageInfo.


        :return: The is_twitter_mode of this StorageInfo.
        :rtype: bool
        """
        return self._is_twitter_mode

    @is_twitter_mode.setter
    def is_twitter_mode(self, is_twitter_mode):
        """Sets the is_twitter_mode of this StorageInfo.


        :param is_twitter_mode: The is_twitter_mode of this StorageInfo.
        :type is_twitter_mode: bool
        """

        self._is_twitter_mode = is_twitter_mode

    @property
    def private_key(self):
        """Gets the private_key of this StorageInfo.


        :return: The private_key of this StorageInfo.
        :rtype: str
        """
        return self._private_key

    @private_key.setter
    def private_key(self, private_key):
        """Sets the private_key of this StorageInfo.


        :param private_key: The private_key of this StorageInfo.
        :type private_key: str
        """

        self._private_key = private_key

    @property
    def request_identifier(self):
        """Gets the request_identifier of this StorageInfo.


        :return: The request_identifier of this StorageInfo.
        :rtype: str
        """
        return self._request_identifier

    @request_identifier.setter
    def request_identifier(self, request_identifier):
        """Sets the request_identifier of this StorageInfo.


        :param request_identifier: The request_identifier of this StorageInfo.
        :type request_identifier: str
        """

        self._request_identifier = request_identifier

    @property
    def user_category_model_name(self):
        """Gets the user_category_model_name of this StorageInfo.


        :return: The user_category_model_name of this StorageInfo.
        :rtype: str
        """
        return self._user_category_model_name

    @user_category_model_name.setter
    def user_category_model_name(self, user_category_model_name):
        """Sets the user_category_model_name of this StorageInfo.


        :param user_category_model_name: The user_category_model_name of this StorageInfo.
        :type user_category_model_name: str
        """

        self._user_category_model_name = user_category_model_name
