/**
 * Text Analytics & Sentiment Analysis API | api.text2data.com
 * <p>The current api version is <b>v3.4</b></p><br><br><p>The api methods listed below can be called directly from this page to test the output. You might set the api_key to pre-authenticate all requests on this page (this will work if your secret is blank).</p><br><br> API endpoint URL: http://{apiName}.text2data.com/v3/ {method}<br><br>The api can be consumed directly or using our SDK. Our Excel Add-In and Google Sheets Add-on are also using this api to process the data.
 *
 * The version of the OpenAPI document: v3.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIApiConfig.h
 *
 * 
 */

#ifndef OAIApiConfig_H
#define OAIApiConfig_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIApiConfig : public OAIObject {
public:
    OAIApiConfig();
    OAIApiConfig(QString json);
    ~OAIApiConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getApiPrivateKey() const;
    void setApiPrivateKey(const QString &api_private_key);
    bool is_api_private_key_Set() const;
    bool is_api_private_key_Valid() const;

    QString getApiSecret() const;
    void setApiSecret(const QString &api_secret);
    bool is_api_secret_Set() const;
    bool is_api_secret_Valid() const;

    QList<QString> getBlacklistedWords() const;
    void setBlacklistedWords(const QList<QString> &blacklisted_words);
    bool is_blacklisted_words_Set() const;
    bool is_blacklisted_words_Valid() const;

    QString getErrorMessage() const;
    void setErrorMessage(const QString &error_message);
    bool is_error_message_Set() const;
    bool is_error_message_Valid() const;

    bool isIsRequestStatusOk() const;
    void setIsRequestStatusOk(const bool &is_request_status_ok);
    bool is_is_request_status_ok_Set() const;
    bool is_is_request_status_ok_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_api_private_key;
    bool m_api_private_key_isSet;
    bool m_api_private_key_isValid;

    QString m_api_secret;
    bool m_api_secret_isSet;
    bool m_api_secret_isValid;

    QList<QString> m_blacklisted_words;
    bool m_blacklisted_words_isSet;
    bool m_blacklisted_words_isValid;

    QString m_error_message;
    bool m_error_message_isSet;
    bool m_error_message_isValid;

    bool m_is_request_status_ok;
    bool m_is_request_status_ok_isSet;
    bool m_is_request_status_ok_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIApiConfig)

#endif // OAIApiConfig_H
