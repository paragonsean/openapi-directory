/**
 * Text Analytics & Sentiment Analysis API | api.text2data.com
 * <p>The current api version is <b>v3.4</b></p><br><br><p>The api methods listed below can be called directly from this page to test the output. You might set the api_key to pre-authenticate all requests on this page (this will work if your secret is blank).</p><br><br> API endpoint URL: http://{apiName}.text2data.com/v3/ {method}<br><br>The api can be consumed directly or using our SDK. Our Excel Add-In and Google Sheets Add-on are also using this api to process the data.
 *
 * The version of the OpenAPI document: v3.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPartOfSpeech.h
 *
 * 
 */

#ifndef OAIPartOfSpeech_H
#define OAIPartOfSpeech_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPartOfSpeech : public OAIObject {
public:
    OAIPartOfSpeech();
    OAIPartOfSpeech(QString json);
    ~OAIPartOfSpeech() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAction() const;
    void setAction(const QString &action);
    bool is_action_Set() const;
    bool is_action_Valid() const;

    QString getObject() const;
    void setObject(const QString &object);
    bool is_object_Set() const;
    bool is_object_Valid() const;

    QString getObjectSentimentPolarity() const;
    void setObjectSentimentPolarity(const QString &object_sentiment_polarity);
    bool is_object_sentiment_polarity_Set() const;
    bool is_object_sentiment_polarity_Valid() const;

    QString getObjectSentimentResultString() const;
    void setObjectSentimentResultString(const QString &object_sentiment_result_string);
    bool is_object_sentiment_result_string_Set() const;
    bool is_object_sentiment_result_string_Valid() const;

    double getObjectSentimentValue() const;
    void setObjectSentimentValue(const double &object_sentiment_value);
    bool is_object_sentiment_value_Set() const;
    bool is_object_sentiment_value_Valid() const;

    QString getSubject() const;
    void setSubject(const QString &subject);
    bool is_subject_Set() const;
    bool is_subject_Valid() const;

    QString getText() const;
    void setText(const QString &text);
    bool is_text_Set() const;
    bool is_text_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_action;
    bool m_action_isSet;
    bool m_action_isValid;

    QString m_object;
    bool m_object_isSet;
    bool m_object_isValid;

    QString m_object_sentiment_polarity;
    bool m_object_sentiment_polarity_isSet;
    bool m_object_sentiment_polarity_isValid;

    QString m_object_sentiment_result_string;
    bool m_object_sentiment_result_string_isSet;
    bool m_object_sentiment_result_string_isValid;

    double m_object_sentiment_value;
    bool m_object_sentiment_value_isSet;
    bool m_object_sentiment_value_isValid;

    QString m_subject;
    bool m_subject_isSet;
    bool m_subject_isValid;

    QString m_text;
    bool m_text_isSet;
    bool m_text_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPartOfSpeech)

#endif // OAIPartOfSpeech_H
