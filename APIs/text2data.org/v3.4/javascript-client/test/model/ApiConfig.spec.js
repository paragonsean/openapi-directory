/**
 * Text Analytics & Sentiment Analysis API | api.text2data.com
 * <p>The current api version is <b>v3.4</b></p><br><br><p>The api methods listed below can be called directly from this page to test the output. You might set the api_key to pre-authenticate all requests on this page (this will work if your secret is blank).</p><br><br> API endpoint URL: http://{apiName}.text2data.com/v3/ {method}<br><br>The api can be consumed directly or using our SDK. Our Excel Add-In and Google Sheets Add-on are also using this api to process the data.
 *
 * The version of the OpenAPI document: v3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.TextAnalyticsSentimentAnalysisApiApiText2dataCom);
  }
}(this, function(expect, TextAnalyticsSentimentAnalysisApiApiText2dataCom) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new TextAnalyticsSentimentAnalysisApiApiText2dataCom.ApiConfig();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ApiConfig', function() {
    it('should create an instance of ApiConfig', function() {
      // uncomment below and update the code to test ApiConfig
      //var instance = new TextAnalyticsSentimentAnalysisApiApiText2dataCom.ApiConfig();
      //expect(instance).to.be.a(TextAnalyticsSentimentAnalysisApiApiText2dataCom.ApiConfig);
    });

    it('should have the property aPIPrivateKey (base name: "APIPrivateKey")', function() {
      // uncomment below and update the code to test the property aPIPrivateKey
      //var instance = new TextAnalyticsSentimentAnalysisApiApiText2dataCom.ApiConfig();
      //expect(instance).to.be();
    });

    it('should have the property aPISecret (base name: "APISecret")', function() {
      // uncomment below and update the code to test the property aPISecret
      //var instance = new TextAnalyticsSentimentAnalysisApiApiText2dataCom.ApiConfig();
      //expect(instance).to.be();
    });

    it('should have the property blacklistedWords (base name: "BlacklistedWords")', function() {
      // uncomment below and update the code to test the property blacklistedWords
      //var instance = new TextAnalyticsSentimentAnalysisApiApiText2dataCom.ApiConfig();
      //expect(instance).to.be();
    });

    it('should have the property errorMessage (base name: "ErrorMessage")', function() {
      // uncomment below and update the code to test the property errorMessage
      //var instance = new TextAnalyticsSentimentAnalysisApiApiText2dataCom.ApiConfig();
      //expect(instance).to.be();
    });

    it('should have the property isRequestStatusOK (base name: "IsRequestStatusOK")', function() {
      // uncomment below and update the code to test the property isRequestStatusOK
      //var instance = new TextAnalyticsSentimentAnalysisApiApiText2dataCom.ApiConfig();
      //expect(instance).to.be();
    });

  });

}));
