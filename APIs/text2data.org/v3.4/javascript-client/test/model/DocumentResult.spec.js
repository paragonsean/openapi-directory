/**
 * Text Analytics & Sentiment Analysis API | api.text2data.com
 * <p>The current api version is <b>v3.4</b></p><br><br><p>The api methods listed below can be called directly from this page to test the output. You might set the api_key to pre-authenticate all requests on this page (this will work if your secret is blank).</p><br><br> API endpoint URL: http://{apiName}.text2data.com/v3/ {method}<br><br>The api can be consumed directly or using our SDK. Our Excel Add-In and Google Sheets Add-on are also using this api to process the data.
 *
 * The version of the OpenAPI document: v3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.TextAnalyticsSentimentAnalysisApiApiText2dataCom);
  }
}(this, function(expect, TextAnalyticsSentimentAnalysisApiApiText2dataCom) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new TextAnalyticsSentimentAnalysisApiApiText2dataCom.DocumentResult();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DocumentResult', function() {
    it('should create an instance of DocumentResult', function() {
      // uncomment below and update the code to test DocumentResult
      //var instance = new TextAnalyticsSentimentAnalysisApiApiText2dataCom.DocumentResult();
      //expect(instance).to.be.a(TextAnalyticsSentimentAnalysisApiApiText2dataCom.DocumentResult);
    });

    it('should have the property autoCategories (base name: "AutoCategories")', function() {
      // uncomment below and update the code to test the property autoCategories
      //var instance = new TextAnalyticsSentimentAnalysisApiApiText2dataCom.DocumentResult();
      //expect(instance).to.be();
    });

    it('should have the property citations (base name: "Citations")', function() {
      // uncomment below and update the code to test the property citations
      //var instance = new TextAnalyticsSentimentAnalysisApiApiText2dataCom.DocumentResult();
      //expect(instance).to.be();
    });

    it('should have the property cloudTagHTML (base name: "CloudTagHTML")', function() {
      // uncomment below and update the code to test the property cloudTagHTML
      //var instance = new TextAnalyticsSentimentAnalysisApiApiText2dataCom.DocumentResult();
      //expect(instance).to.be();
    });

    it('should have the property coreSentences (base name: "CoreSentences")', function() {
      // uncomment below and update the code to test the property coreSentences
      //var instance = new TextAnalyticsSentimentAnalysisApiApiText2dataCom.DocumentResult();
      //expect(instance).to.be();
    });

    it('should have the property detectedLanguage (base name: "DetectedLanguage")', function() {
      // uncomment below and update the code to test the property detectedLanguage
      //var instance = new TextAnalyticsSentimentAnalysisApiApiText2dataCom.DocumentResult();
      //expect(instance).to.be();
    });

    it('should have the property docSentimentPolarity (base name: "DocSentimentPolarity")', function() {
      // uncomment below and update the code to test the property docSentimentPolarity
      //var instance = new TextAnalyticsSentimentAnalysisApiApiText2dataCom.DocumentResult();
      //expect(instance).to.be();
    });

    it('should have the property docSentimentResultString (base name: "DocSentimentResultString")', function() {
      // uncomment below and update the code to test the property docSentimentResultString
      //var instance = new TextAnalyticsSentimentAnalysisApiApiText2dataCom.DocumentResult();
      //expect(instance).to.be();
    });

    it('should have the property docSentimentValue (base name: "DocSentimentValue")', function() {
      // uncomment below and update the code to test the property docSentimentValue
      //var instance = new TextAnalyticsSentimentAnalysisApiApiText2dataCom.DocumentResult();
      //expect(instance).to.be();
    });

    it('should have the property entities (base name: "Entities")', function() {
      // uncomment below and update the code to test the property entities
      //var instance = new TextAnalyticsSentimentAnalysisApiApiText2dataCom.DocumentResult();
      //expect(instance).to.be();
    });

    it('should have the property errorMessage (base name: "ErrorMessage")', function() {
      // uncomment below and update the code to test the property errorMessage
      //var instance = new TextAnalyticsSentimentAnalysisApiApiText2dataCom.DocumentResult();
      //expect(instance).to.be();
    });

    it('should have the property keywords (base name: "Keywords")', function() {
      // uncomment below and update the code to test the property keywords
      //var instance = new TextAnalyticsSentimentAnalysisApiApiText2dataCom.DocumentResult();
      //expect(instance).to.be();
    });

    it('should have the property magnitude (base name: "Magnitude")', function() {
      // uncomment below and update the code to test the property magnitude
      //var instance = new TextAnalyticsSentimentAnalysisApiApiText2dataCom.DocumentResult();
      //expect(instance).to.be();
    });

    it('should have the property partsOfSpeech (base name: "PartsOfSpeech")', function() {
      // uncomment below and update the code to test the property partsOfSpeech
      //var instance = new TextAnalyticsSentimentAnalysisApiApiText2dataCom.DocumentResult();
      //expect(instance).to.be();
    });

    it('should have the property resultTextHtml (base name: "ResultTextHtml")', function() {
      // uncomment below and update the code to test the property resultTextHtml
      //var instance = new TextAnalyticsSentimentAnalysisApiApiText2dataCom.DocumentResult();
      //expect(instance).to.be();
    });

    it('should have the property slangWords (base name: "SlangWords")', function() {
      // uncomment below and update the code to test the property slangWords
      //var instance = new TextAnalyticsSentimentAnalysisApiApiText2dataCom.DocumentResult();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "Status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new TextAnalyticsSentimentAnalysisApiApiText2dataCom.DocumentResult();
      //expect(instance).to.be();
    });

    it('should have the property storageInfo (base name: "StorageInfo")', function() {
      // uncomment below and update the code to test the property storageInfo
      //var instance = new TextAnalyticsSentimentAnalysisApiApiText2dataCom.DocumentResult();
      //expect(instance).to.be();
    });

    it('should have the property subjectivity (base name: "Subjectivity")', function() {
      // uncomment below and update the code to test the property subjectivity
      //var instance = new TextAnalyticsSentimentAnalysisApiApiText2dataCom.DocumentResult();
      //expect(instance).to.be();
    });

    it('should have the property swearWords (base name: "SwearWords")', function() {
      // uncomment below and update the code to test the property swearWords
      //var instance = new TextAnalyticsSentimentAnalysisApiApiText2dataCom.DocumentResult();
      //expect(instance).to.be();
    });

    it('should have the property themes (base name: "Themes")', function() {
      // uncomment below and update the code to test the property themes
      //var instance = new TextAnalyticsSentimentAnalysisApiApiText2dataCom.DocumentResult();
      //expect(instance).to.be();
    });

    it('should have the property timestamp (base name: "Timestamp")', function() {
      // uncomment below and update the code to test the property timestamp
      //var instance = new TextAnalyticsSentimentAnalysisApiApiText2dataCom.DocumentResult();
      //expect(instance).to.be();
    });

    it('should have the property transactionCurrentDay (base name: "TransactionCurrentDay")', function() {
      // uncomment below and update the code to test the property transactionCurrentDay
      //var instance = new TextAnalyticsSentimentAnalysisApiApiText2dataCom.DocumentResult();
      //expect(instance).to.be();
    });

    it('should have the property transactionDailyLimit (base name: "TransactionDailyLimit")', function() {
      // uncomment below and update the code to test the property transactionDailyLimit
      //var instance = new TextAnalyticsSentimentAnalysisApiApiText2dataCom.DocumentResult();
      //expect(instance).to.be();
    });

    it('should have the property transactionTotalCreditsLeft (base name: "TransactionTotalCreditsLeft")', function() {
      // uncomment below and update the code to test the property transactionTotalCreditsLeft
      //var instance = new TextAnalyticsSentimentAnalysisApiApiText2dataCom.DocumentResult();
      //expect(instance).to.be();
    });

    it('should have the property transactionUseByDate (base name: "TransactionUseByDate")', function() {
      // uncomment below and update the code to test the property transactionUseByDate
      //var instance = new TextAnalyticsSentimentAnalysisApiApiText2dataCom.DocumentResult();
      //expect(instance).to.be();
    });

    it('should have the property userCategories (base name: "UserCategories")', function() {
      // uncomment below and update the code to test the property userCategories
      //var instance = new TextAnalyticsSentimentAnalysisApiApiText2dataCom.DocumentResult();
      //expect(instance).to.be();
    });

  });

}));
