/**
 * Text Analytics & Sentiment Analysis API | api.text2data.com
 * <p>The current api version is <b>v3.4</b></p><br><br><p>The api methods listed below can be called directly from this page to test the output. You might set the api_key to pre-authenticate all requests on this page (this will work if your secret is blank).</p><br><br> API endpoint URL: http://{apiName}.text2data.com/v3/ {method}<br><br>The api can be consumed directly or using our SDK. Our Excel Add-In and Google Sheets Add-on are also using this api to process the data.
 *
 * The version of the OpenAPI document: v3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Document from '../model/Document';
import DocumentResult from '../model/DocumentResult';

/**
* Analyze service.
* @module api/AnalyzeApi
* @version v3.4
*/
export default class AnalyzeApi {

    /**
    * Constructs a new AnalyzeApi. 
    * @alias module:api/AnalyzeApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the analyzeGet operation.
     * @callback module:api/AnalyzeApi~analyzeGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DocumentResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Test api response without api key
     * @param {module:api/AnalyzeApi~analyzeGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DocumentResult}
     */
    analyzeGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json', 'application/xml', 'text/xml'];
      let returnType = DocumentResult;
      return this.apiClient.callApi(
        '/v3/Analyze', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the analyzePost operation.
     * @callback module:api/AnalyzeApi~analyzePostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DocumentResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Sentiment analysis service
     * Sample request:                    POST /Analyze      {         \"DocumentText\": \"Excellent location, opposite a very large mall with wide variety of shops, restaurants and more.\",         \"PrivateKey\": \"your_api_key\",         \"Secret\": \"\"      }
     * @param {module:model/Document} requestDoc 
     * @param {module:api/AnalyzeApi~analyzePostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DocumentResult}
     */
    analyzePost(requestDoc, callback) {
      let postBody = requestDoc;
      // verify the required parameter 'requestDoc' is set
      if (requestDoc === undefined || requestDoc === null) {
        throw new Error("Missing the required parameter 'requestDoc' when calling analyzePost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json', 'text/json', 'application/xml', 'text/xml', 'application/x-www-form-urlencoded'];
      let accepts = ['application/json', 'text/json', 'application/xml', 'text/xml'];
      let returnType = DocumentResult;
      return this.apiClient.callApi(
        '/v3/Analyze', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
