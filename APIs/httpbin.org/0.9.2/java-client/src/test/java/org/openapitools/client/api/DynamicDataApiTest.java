/*
 * httpbin.org
 * A simple HTTP Request & Response Service.<br/> <br/> <b>Run locally: </b> <code>$ docker run -p 80:80 kennethreitz/httpbin</code>
 *
 * The version of the OpenAPI document: 0.9.2
 * Contact: me@kennethreitz.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import java.math.BigDecimal;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DynamicDataApi
 */
@Disabled
public class DynamicDataApiTest {

    private final DynamicDataApi api = new DynamicDataApi();

    /**
     * Decodes base64url-encoded string.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void base64ValueGetTest() throws ApiException {
        String value = null;
        api.base64ValueGet(value);
        // TODO: test validations
    }

    /**
     * Returns n random bytes generated with given seed
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void bytesNGetTest() throws ApiException {
        Integer n = null;
        api.bytesNGet(n);
        // TODO: test validations
    }

    /**
     * Returns a delayed response (max of 10 seconds).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void delayDelayDeleteTest() throws ApiException {
        Integer delay = null;
        api.delayDelayDelete(delay);
        // TODO: test validations
    }

    /**
     * Returns a delayed response (max of 10 seconds).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void delayDelayGetTest() throws ApiException {
        Integer delay = null;
        api.delayDelayGet(delay);
        // TODO: test validations
    }

    /**
     * Returns a delayed response (max of 10 seconds).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void delayDelayPatchTest() throws ApiException {
        Integer delay = null;
        api.delayDelayPatch(delay);
        // TODO: test validations
    }

    /**
     * Returns a delayed response (max of 10 seconds).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void delayDelayPostTest() throws ApiException {
        Integer delay = null;
        api.delayDelayPost(delay);
        // TODO: test validations
    }

    /**
     * Returns a delayed response (max of 10 seconds).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void delayDelayPutTest() throws ApiException {
        Integer delay = null;
        api.delayDelayPut(delay);
        // TODO: test validations
    }

    /**
     * Returns a delayed response (max of 10 seconds).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void delayDelayTraceTest() throws ApiException {
        Integer delay = null;
        api.delayDelayTrace(delay);
        // TODO: test validations
    }

    /**
     * Drips data over a duration after an optional initial delay.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dripGetTest() throws ApiException {
        BigDecimal duration = null;
        Integer numbytes = null;
        Integer code = null;
        BigDecimal delay = null;
        api.dripGet(duration, numbytes, code, delay);
        // TODO: test validations
    }

    /**
     * Generate a page containing n links to other pages which do the same.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void linksNOffsetGetTest() throws ApiException {
        Integer n = null;
        Integer offset = null;
        api.linksNOffsetGet(n, offset);
        // TODO: test validations
    }

    /**
     * Streams n random bytes generated with given seed, at given chunk size per packet.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void rangeNumbytesGetTest() throws ApiException {
        Integer numbytes = null;
        api.rangeNumbytesGet(numbytes);
        // TODO: test validations
    }

    /**
     * Streams n random bytes generated with given seed, at given chunk size per packet.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void streamBytesNGetTest() throws ApiException {
        Integer n = null;
        api.streamBytesNGet(n);
        // TODO: test validations
    }

    /**
     * Stream n JSON responses
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void streamNGetTest() throws ApiException {
        Integer n = null;
        api.streamNGet(n);
        // TODO: test validations
    }

    /**
     * Return a UUID4.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void uuidGetTest() throws ApiException {
        api.uuidGet();
        // TODO: test validations
    }

}
