/**
 * httpbin.org
 * A simple HTTP Request & Response Service.<br/> <br/> <b>Run locally: </b> <code>$ docker run -p 80:80 kennethreitz/httpbin</code>
 *
 * The version of the OpenAPI document: 0.9.2
 * Contact: me@kennethreitz.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";

/**
* Anything service.
* @module api/AnythingApi
* @version 0.9.2
*/
export default class AnythingApi {

    /**
    * Constructs a new AnythingApi. 
    * @alias module:api/AnythingApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the anythingAnythingDelete operation.
     * @callback module:api/AnythingApi~anythingAnythingDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns anything passed in request data.
     * @param {String} anything Automatically added
     * @param {module:api/AnythingApi~anythingAnythingDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    anythingAnythingDelete(anything, callback) {
      let postBody = null;
      // verify the required parameter 'anything' is set
      if (anything === undefined || anything === null) {
        throw new Error("Missing the required parameter 'anything' when calling anythingAnythingDelete");
      }

      let pathParams = {
        'anything': anything
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/anything/{anything}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the anythingAnythingGet operation.
     * @callback module:api/AnythingApi~anythingAnythingGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns anything passed in request data.
     * @param {String} anything Automatically added
     * @param {module:api/AnythingApi~anythingAnythingGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    anythingAnythingGet(anything, callback) {
      let postBody = null;
      // verify the required parameter 'anything' is set
      if (anything === undefined || anything === null) {
        throw new Error("Missing the required parameter 'anything' when calling anythingAnythingGet");
      }

      let pathParams = {
        'anything': anything
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/anything/{anything}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the anythingAnythingPatch operation.
     * @callback module:api/AnythingApi~anythingAnythingPatchCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns anything passed in request data.
     * @param {String} anything Automatically added
     * @param {module:api/AnythingApi~anythingAnythingPatchCallback} callback The callback function, accepting three arguments: error, data, response
     */
    anythingAnythingPatch(anything, callback) {
      let postBody = null;
      // verify the required parameter 'anything' is set
      if (anything === undefined || anything === null) {
        throw new Error("Missing the required parameter 'anything' when calling anythingAnythingPatch");
      }

      let pathParams = {
        'anything': anything
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/anything/{anything}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the anythingAnythingPost operation.
     * @callback module:api/AnythingApi~anythingAnythingPostCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns anything passed in request data.
     * @param {String} anything Automatically added
     * @param {module:api/AnythingApi~anythingAnythingPostCallback} callback The callback function, accepting three arguments: error, data, response
     */
    anythingAnythingPost(anything, callback) {
      let postBody = null;
      // verify the required parameter 'anything' is set
      if (anything === undefined || anything === null) {
        throw new Error("Missing the required parameter 'anything' when calling anythingAnythingPost");
      }

      let pathParams = {
        'anything': anything
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/anything/{anything}', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the anythingAnythingPut operation.
     * @callback module:api/AnythingApi~anythingAnythingPutCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns anything passed in request data.
     * @param {String} anything Automatically added
     * @param {module:api/AnythingApi~anythingAnythingPutCallback} callback The callback function, accepting three arguments: error, data, response
     */
    anythingAnythingPut(anything, callback) {
      let postBody = null;
      // verify the required parameter 'anything' is set
      if (anything === undefined || anything === null) {
        throw new Error("Missing the required parameter 'anything' when calling anythingAnythingPut");
      }

      let pathParams = {
        'anything': anything
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/anything/{anything}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the anythingAnythingTrace operation.
     * @callback module:api/AnythingApi~anythingAnythingTraceCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns anything passed in request data.
     * @param {String} anything Automatically added
     * @param {module:api/AnythingApi~anythingAnythingTraceCallback} callback The callback function, accepting three arguments: error, data, response
     */
    anythingAnythingTrace(anything, callback) {
      let postBody = null;
      // verify the required parameter 'anything' is set
      if (anything === undefined || anything === null) {
        throw new Error("Missing the required parameter 'anything' when calling anythingAnythingTrace");
      }

      let pathParams = {
        'anything': anything
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/anything/{anything}', 'TRACE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the anythingDelete operation.
     * @callback module:api/AnythingApi~anythingDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns anything passed in request data.
     * @param {module:api/AnythingApi~anythingDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    anythingDelete(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/anything', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the anythingGet operation.
     * @callback module:api/AnythingApi~anythingGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns anything passed in request data.
     * @param {module:api/AnythingApi~anythingGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    anythingGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/anything', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the anythingPatch operation.
     * @callback module:api/AnythingApi~anythingPatchCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns anything passed in request data.
     * @param {module:api/AnythingApi~anythingPatchCallback} callback The callback function, accepting three arguments: error, data, response
     */
    anythingPatch(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/anything', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the anythingPost operation.
     * @callback module:api/AnythingApi~anythingPostCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns anything passed in request data.
     * @param {module:api/AnythingApi~anythingPostCallback} callback The callback function, accepting three arguments: error, data, response
     */
    anythingPost(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/anything', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the anythingPut operation.
     * @callback module:api/AnythingApi~anythingPutCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns anything passed in request data.
     * @param {module:api/AnythingApi~anythingPutCallback} callback The callback function, accepting three arguments: error, data, response
     */
    anythingPut(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/anything', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the anythingTrace operation.
     * @callback module:api/AnythingApi~anythingTraceCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns anything passed in request data.
     * @param {module:api/AnythingApi~anythingTraceCallback} callback The callback function, accepting three arguments: error, data, response
     */
    anythingTrace(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/anything', 'TRACE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
