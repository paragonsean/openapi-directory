# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Account(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, remaining_api_calls: int=None, remaining_concurrency: int=None, resets_at: int=None):
        """Account - a model defined in OpenAPI

        :param remaining_api_calls: The remaining_api_calls of this Account.
        :param remaining_concurrency: The remaining_concurrency of this Account.
        :param resets_at: The resets_at of this Account.
        """
        self.openapi_types = {
            'remaining_api_calls': int,
            'remaining_concurrency': int,
            'resets_at': int
        }

        self.attribute_map = {
            'remaining_api_calls': 'remaining_api_calls',
            'remaining_concurrency': 'remaining_concurrency',
            'resets_at': 'resets_at'
        }

        self._remaining_api_calls = remaining_api_calls
        self._remaining_concurrency = remaining_concurrency
        self._resets_at = resets_at

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Account':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Account of this Account.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def remaining_api_calls(self):
        """Gets the remaining_api_calls of this Account.

        Remaining API calls quota

        :return: The remaining_api_calls of this Account.
        :rtype: int
        """
        return self._remaining_api_calls

    @remaining_api_calls.setter
    def remaining_api_calls(self, remaining_api_calls):
        """Sets the remaining_api_calls of this Account.

        Remaining API calls quota

        :param remaining_api_calls: The remaining_api_calls of this Account.
        :type remaining_api_calls: int
        """

        self._remaining_api_calls = remaining_api_calls

    @property
    def remaining_concurrency(self):
        """Gets the remaining_concurrency of this Account.

        Remaining concurrent requests

        :return: The remaining_concurrency of this Account.
        :rtype: int
        """
        return self._remaining_concurrency

    @remaining_concurrency.setter
    def remaining_concurrency(self, remaining_concurrency):
        """Sets the remaining_concurrency of this Account.

        Remaining concurrent requests

        :param remaining_concurrency: The remaining_concurrency of this Account.
        :type remaining_concurrency: int
        """

        self._remaining_concurrency = remaining_concurrency

    @property
    def resets_at(self):
        """Gets the resets_at of this Account.

        Next billing cycle start time (UNIX timestamp)

        :return: The resets_at of this Account.
        :rtype: int
        """
        return self._resets_at

    @resets_at.setter
    def resets_at(self, resets_at):
        """Sets the resets_at of this Account.

        Next billing cycle start time (UNIX timestamp)

        :param resets_at: The resets_at of this Account.
        :type resets_at: int
        """

        self._resets_at = resets_at
