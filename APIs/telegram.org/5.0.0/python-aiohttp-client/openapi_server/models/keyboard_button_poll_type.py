# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class KeyboardButtonPollType(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, type: str=None):
        """KeyboardButtonPollType - a model defined in OpenAPI

        :param type: The type of this KeyboardButtonPollType.
        """
        self.openapi_types = {
            'type': str
        }

        self.attribute_map = {
            'type': 'type'
        }

        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'KeyboardButtonPollType':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The KeyboardButtonPollType of this KeyboardButtonPollType.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def type(self):
        """Gets the type of this KeyboardButtonPollType.

        *Optional*. If *quiz* is passed, the user will be allowed to create only polls in the quiz mode. If *regular* is passed, only regular polls will be allowed. Otherwise, the user will be allowed to create a poll of any type.

        :return: The type of this KeyboardButtonPollType.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this KeyboardButtonPollType.

        *Optional*. If *quiz* is passed, the user will be allowed to create only polls in the quiz mode. If *regular* is passed, only regular polls will be allowed. Otherwise, the user will be allowed to create a poll of any type.

        :param type: The type of this KeyboardButtonPollType.
        :type type: str
        """

        self._type = type
