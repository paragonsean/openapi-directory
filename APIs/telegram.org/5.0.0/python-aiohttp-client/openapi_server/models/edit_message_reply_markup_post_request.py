# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.edit_message_caption_post_request_chat_id import EditMessageCaptionPostRequestChatId
from openapi_server.models.inline_keyboard_markup import InlineKeyboardMarkup
from openapi_server import util


class EditMessageReplyMarkupPostRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, chat_id: EditMessageCaptionPostRequestChatId=None, inline_message_id: str=None, message_id: int=None, reply_markup: InlineKeyboardMarkup=None):
        """EditMessageReplyMarkupPostRequest - a model defined in OpenAPI

        :param chat_id: The chat_id of this EditMessageReplyMarkupPostRequest.
        :param inline_message_id: The inline_message_id of this EditMessageReplyMarkupPostRequest.
        :param message_id: The message_id of this EditMessageReplyMarkupPostRequest.
        :param reply_markup: The reply_markup of this EditMessageReplyMarkupPostRequest.
        """
        self.openapi_types = {
            'chat_id': EditMessageCaptionPostRequestChatId,
            'inline_message_id': str,
            'message_id': int,
            'reply_markup': InlineKeyboardMarkup
        }

        self.attribute_map = {
            'chat_id': 'chat_id',
            'inline_message_id': 'inline_message_id',
            'message_id': 'message_id',
            'reply_markup': 'reply_markup'
        }

        self._chat_id = chat_id
        self._inline_message_id = inline_message_id
        self._message_id = message_id
        self._reply_markup = reply_markup

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EditMessageReplyMarkupPostRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The _editMessageReplyMarkup_post_request of this EditMessageReplyMarkupPostRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def chat_id(self):
        """Gets the chat_id of this EditMessageReplyMarkupPostRequest.


        :return: The chat_id of this EditMessageReplyMarkupPostRequest.
        :rtype: EditMessageCaptionPostRequestChatId
        """
        return self._chat_id

    @chat_id.setter
    def chat_id(self, chat_id):
        """Sets the chat_id of this EditMessageReplyMarkupPostRequest.


        :param chat_id: The chat_id of this EditMessageReplyMarkupPostRequest.
        :type chat_id: EditMessageCaptionPostRequestChatId
        """

        self._chat_id = chat_id

    @property
    def inline_message_id(self):
        """Gets the inline_message_id of this EditMessageReplyMarkupPostRequest.

        Required if *chat\\_id* and *message\\_id* are not specified. Identifier of the inline message

        :return: The inline_message_id of this EditMessageReplyMarkupPostRequest.
        :rtype: str
        """
        return self._inline_message_id

    @inline_message_id.setter
    def inline_message_id(self, inline_message_id):
        """Sets the inline_message_id of this EditMessageReplyMarkupPostRequest.

        Required if *chat\\_id* and *message\\_id* are not specified. Identifier of the inline message

        :param inline_message_id: The inline_message_id of this EditMessageReplyMarkupPostRequest.
        :type inline_message_id: str
        """

        self._inline_message_id = inline_message_id

    @property
    def message_id(self):
        """Gets the message_id of this EditMessageReplyMarkupPostRequest.

        Required if *inline\\_message\\_id* is not specified. Identifier of the message to edit

        :return: The message_id of this EditMessageReplyMarkupPostRequest.
        :rtype: int
        """
        return self._message_id

    @message_id.setter
    def message_id(self, message_id):
        """Sets the message_id of this EditMessageReplyMarkupPostRequest.

        Required if *inline\\_message\\_id* is not specified. Identifier of the message to edit

        :param message_id: The message_id of this EditMessageReplyMarkupPostRequest.
        :type message_id: int
        """

        self._message_id = message_id

    @property
    def reply_markup(self):
        """Gets the reply_markup of this EditMessageReplyMarkupPostRequest.


        :return: The reply_markup of this EditMessageReplyMarkupPostRequest.
        :rtype: InlineKeyboardMarkup
        """
        return self._reply_markup

    @reply_markup.setter
    def reply_markup(self, reply_markup):
        """Sets the reply_markup of this EditMessageReplyMarkupPostRequest.


        :param reply_markup: The reply_markup of this EditMessageReplyMarkupPostRequest.
        :type reply_markup: InlineKeyboardMarkup
        """

        self._reply_markup = reply_markup
