# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.inline_keyboard_markup import InlineKeyboardMarkup
from openapi_server.models.input_message_content import InputMessageContent
from openapi_server import util


class InlineQueryResultContact(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, first_name: str=None, id: str=None, input_message_content: InputMessageContent=None, last_name: str=None, phone_number: str=None, reply_markup: InlineKeyboardMarkup=None, thumb_height: int=None, thumb_url: str=None, thumb_width: int=None, type: str=None, vcard: str=None):
        """InlineQueryResultContact - a model defined in OpenAPI

        :param first_name: The first_name of this InlineQueryResultContact.
        :param id: The id of this InlineQueryResultContact.
        :param input_message_content: The input_message_content of this InlineQueryResultContact.
        :param last_name: The last_name of this InlineQueryResultContact.
        :param phone_number: The phone_number of this InlineQueryResultContact.
        :param reply_markup: The reply_markup of this InlineQueryResultContact.
        :param thumb_height: The thumb_height of this InlineQueryResultContact.
        :param thumb_url: The thumb_url of this InlineQueryResultContact.
        :param thumb_width: The thumb_width of this InlineQueryResultContact.
        :param type: The type of this InlineQueryResultContact.
        :param vcard: The vcard of this InlineQueryResultContact.
        """
        self.openapi_types = {
            'first_name': str,
            'id': str,
            'input_message_content': InputMessageContent,
            'last_name': str,
            'phone_number': str,
            'reply_markup': InlineKeyboardMarkup,
            'thumb_height': int,
            'thumb_url': str,
            'thumb_width': int,
            'type': str,
            'vcard': str
        }

        self.attribute_map = {
            'first_name': 'first_name',
            'id': 'id',
            'input_message_content': 'input_message_content',
            'last_name': 'last_name',
            'phone_number': 'phone_number',
            'reply_markup': 'reply_markup',
            'thumb_height': 'thumb_height',
            'thumb_url': 'thumb_url',
            'thumb_width': 'thumb_width',
            'type': 'type',
            'vcard': 'vcard'
        }

        self._first_name = first_name
        self._id = id
        self._input_message_content = input_message_content
        self._last_name = last_name
        self._phone_number = phone_number
        self._reply_markup = reply_markup
        self._thumb_height = thumb_height
        self._thumb_url = thumb_url
        self._thumb_width = thumb_width
        self._type = type
        self._vcard = vcard

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InlineQueryResultContact':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The InlineQueryResultContact of this InlineQueryResultContact.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def first_name(self):
        """Gets the first_name of this InlineQueryResultContact.

        Contact's first name

        :return: The first_name of this InlineQueryResultContact.
        :rtype: str
        """
        return self._first_name

    @first_name.setter
    def first_name(self, first_name):
        """Sets the first_name of this InlineQueryResultContact.

        Contact's first name

        :param first_name: The first_name of this InlineQueryResultContact.
        :type first_name: str
        """
        if first_name is None:
            raise ValueError("Invalid value for `first_name`, must not be `None`")

        self._first_name = first_name

    @property
    def id(self):
        """Gets the id of this InlineQueryResultContact.

        Unique identifier for this result, 1-64 Bytes

        :return: The id of this InlineQueryResultContact.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this InlineQueryResultContact.

        Unique identifier for this result, 1-64 Bytes

        :param id: The id of this InlineQueryResultContact.
        :type id: str
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")

        self._id = id

    @property
    def input_message_content(self):
        """Gets the input_message_content of this InlineQueryResultContact.


        :return: The input_message_content of this InlineQueryResultContact.
        :rtype: InputMessageContent
        """
        return self._input_message_content

    @input_message_content.setter
    def input_message_content(self, input_message_content):
        """Sets the input_message_content of this InlineQueryResultContact.


        :param input_message_content: The input_message_content of this InlineQueryResultContact.
        :type input_message_content: InputMessageContent
        """

        self._input_message_content = input_message_content

    @property
    def last_name(self):
        """Gets the last_name of this InlineQueryResultContact.

        *Optional*. Contact's last name

        :return: The last_name of this InlineQueryResultContact.
        :rtype: str
        """
        return self._last_name

    @last_name.setter
    def last_name(self, last_name):
        """Sets the last_name of this InlineQueryResultContact.

        *Optional*. Contact's last name

        :param last_name: The last_name of this InlineQueryResultContact.
        :type last_name: str
        """

        self._last_name = last_name

    @property
    def phone_number(self):
        """Gets the phone_number of this InlineQueryResultContact.

        Contact's phone number

        :return: The phone_number of this InlineQueryResultContact.
        :rtype: str
        """
        return self._phone_number

    @phone_number.setter
    def phone_number(self, phone_number):
        """Sets the phone_number of this InlineQueryResultContact.

        Contact's phone number

        :param phone_number: The phone_number of this InlineQueryResultContact.
        :type phone_number: str
        """
        if phone_number is None:
            raise ValueError("Invalid value for `phone_number`, must not be `None`")

        self._phone_number = phone_number

    @property
    def reply_markup(self):
        """Gets the reply_markup of this InlineQueryResultContact.


        :return: The reply_markup of this InlineQueryResultContact.
        :rtype: InlineKeyboardMarkup
        """
        return self._reply_markup

    @reply_markup.setter
    def reply_markup(self, reply_markup):
        """Sets the reply_markup of this InlineQueryResultContact.


        :param reply_markup: The reply_markup of this InlineQueryResultContact.
        :type reply_markup: InlineKeyboardMarkup
        """

        self._reply_markup = reply_markup

    @property
    def thumb_height(self):
        """Gets the thumb_height of this InlineQueryResultContact.

        *Optional*. Thumbnail height

        :return: The thumb_height of this InlineQueryResultContact.
        :rtype: int
        """
        return self._thumb_height

    @thumb_height.setter
    def thumb_height(self, thumb_height):
        """Sets the thumb_height of this InlineQueryResultContact.

        *Optional*. Thumbnail height

        :param thumb_height: The thumb_height of this InlineQueryResultContact.
        :type thumb_height: int
        """

        self._thumb_height = thumb_height

    @property
    def thumb_url(self):
        """Gets the thumb_url of this InlineQueryResultContact.

        *Optional*. Url of the thumbnail for the result

        :return: The thumb_url of this InlineQueryResultContact.
        :rtype: str
        """
        return self._thumb_url

    @thumb_url.setter
    def thumb_url(self, thumb_url):
        """Sets the thumb_url of this InlineQueryResultContact.

        *Optional*. Url of the thumbnail for the result

        :param thumb_url: The thumb_url of this InlineQueryResultContact.
        :type thumb_url: str
        """

        self._thumb_url = thumb_url

    @property
    def thumb_width(self):
        """Gets the thumb_width of this InlineQueryResultContact.

        *Optional*. Thumbnail width

        :return: The thumb_width of this InlineQueryResultContact.
        :rtype: int
        """
        return self._thumb_width

    @thumb_width.setter
    def thumb_width(self, thumb_width):
        """Sets the thumb_width of this InlineQueryResultContact.

        *Optional*. Thumbnail width

        :param thumb_width: The thumb_width of this InlineQueryResultContact.
        :type thumb_width: int
        """

        self._thumb_width = thumb_width

    @property
    def type(self):
        """Gets the type of this InlineQueryResultContact.

        Type of the result, must be *contact*

        :return: The type of this InlineQueryResultContact.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this InlineQueryResultContact.

        Type of the result, must be *contact*

        :param type: The type of this InlineQueryResultContact.
        :type type: str
        """
        if type is None:
            raise ValueError("Invalid value for `type`, must not be `None`")

        self._type = type

    @property
    def vcard(self):
        """Gets the vcard of this InlineQueryResultContact.

        *Optional*. Additional data about the contact in the form of a [vCard](https://en.wikipedia.org/wiki/VCard), 0-2048 bytes

        :return: The vcard of this InlineQueryResultContact.
        :rtype: str
        """
        return self._vcard

    @vcard.setter
    def vcard(self, vcard):
        """Sets the vcard of this InlineQueryResultContact.

        *Optional*. Additional data about the contact in the form of a [vCard](https://en.wikipedia.org/wiki/VCard), 0-2048 bytes

        :param vcard: The vcard of this InlineQueryResultContact.
        :type vcard: str
        """

        self._vcard = vcard
