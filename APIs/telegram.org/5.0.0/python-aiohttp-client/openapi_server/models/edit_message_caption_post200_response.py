# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.edit_message_caption_post200_response_result import EditMessageCaptionPost200ResponseResult
from openapi_server import util


class EditMessageCaptionPost200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ok: bool=True, result: EditMessageCaptionPost200ResponseResult=None):
        """EditMessageCaptionPost200Response - a model defined in OpenAPI

        :param ok: The ok of this EditMessageCaptionPost200Response.
        :param result: The result of this EditMessageCaptionPost200Response.
        """
        self.openapi_types = {
            'ok': bool,
            'result': EditMessageCaptionPost200ResponseResult
        }

        self.attribute_map = {
            'ok': 'ok',
            'result': 'result'
        }

        self._ok = ok
        self._result = result

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EditMessageCaptionPost200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The _editMessageCaption_post_200_response of this EditMessageCaptionPost200Response.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ok(self):
        """Gets the ok of this EditMessageCaptionPost200Response.


        :return: The ok of this EditMessageCaptionPost200Response.
        :rtype: bool
        """
        return self._ok

    @ok.setter
    def ok(self, ok):
        """Sets the ok of this EditMessageCaptionPost200Response.


        :param ok: The ok of this EditMessageCaptionPost200Response.
        :type ok: bool
        """
        if ok is None:
            raise ValueError("Invalid value for `ok`, must not be `None`")

        self._ok = ok

    @property
    def result(self):
        """Gets the result of this EditMessageCaptionPost200Response.


        :return: The result of this EditMessageCaptionPost200Response.
        :rtype: EditMessageCaptionPost200ResponseResult
        """
        return self._result

    @result.setter
    def result(self, result):
        """Sets the result of this EditMessageCaptionPost200Response.


        :param result: The result of this EditMessageCaptionPost200Response.
        :type result: EditMessageCaptionPost200ResponseResult
        """
        if result is None:
            raise ValueError("Invalid value for `result`, must not be `None`")

        self._result = result
