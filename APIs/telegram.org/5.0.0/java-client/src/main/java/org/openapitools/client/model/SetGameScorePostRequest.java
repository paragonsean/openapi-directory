/*
 * Telegram Bot API
 * Auto-generated OpenAPI schema
 *
 * The version of the OpenAPI document: 5.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * SetGameScorePostRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:56:27.961160-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class SetGameScorePostRequest {
  public static final String SERIALIZED_NAME_CHAT_ID = "chat_id";
  @SerializedName(SERIALIZED_NAME_CHAT_ID)
  private Integer chatId;

  public static final String SERIALIZED_NAME_DISABLE_EDIT_MESSAGE = "disable_edit_message";
  @SerializedName(SERIALIZED_NAME_DISABLE_EDIT_MESSAGE)
  private Boolean disableEditMessage;

  public static final String SERIALIZED_NAME_FORCE = "force";
  @SerializedName(SERIALIZED_NAME_FORCE)
  private Boolean force;

  public static final String SERIALIZED_NAME_INLINE_MESSAGE_ID = "inline_message_id";
  @SerializedName(SERIALIZED_NAME_INLINE_MESSAGE_ID)
  private String inlineMessageId;

  public static final String SERIALIZED_NAME_MESSAGE_ID = "message_id";
  @SerializedName(SERIALIZED_NAME_MESSAGE_ID)
  private Integer messageId;

  public static final String SERIALIZED_NAME_SCORE = "score";
  @SerializedName(SERIALIZED_NAME_SCORE)
  private Integer score;

  public static final String SERIALIZED_NAME_USER_ID = "user_id";
  @SerializedName(SERIALIZED_NAME_USER_ID)
  private Integer userId;

  public SetGameScorePostRequest() {
  }

  public SetGameScorePostRequest chatId(Integer chatId) {
    this.chatId = chatId;
    return this;
  }

  /**
   * Required if *inline\\_message\\_id* is not specified. Unique identifier for the target chat
   * @return chatId
   */
  @javax.annotation.Nullable
  public Integer getChatId() {
    return chatId;
  }

  public void setChatId(Integer chatId) {
    this.chatId = chatId;
  }


  public SetGameScorePostRequest disableEditMessage(Boolean disableEditMessage) {
    this.disableEditMessage = disableEditMessage;
    return this;
  }

  /**
   * Pass True, if the game message should not be automatically edited to include the current scoreboard
   * @return disableEditMessage
   */
  @javax.annotation.Nullable
  public Boolean getDisableEditMessage() {
    return disableEditMessage;
  }

  public void setDisableEditMessage(Boolean disableEditMessage) {
    this.disableEditMessage = disableEditMessage;
  }


  public SetGameScorePostRequest force(Boolean force) {
    this.force = force;
    return this;
  }

  /**
   * Pass True, if the high score is allowed to decrease. This can be useful when fixing mistakes or banning cheaters
   * @return force
   */
  @javax.annotation.Nullable
  public Boolean getForce() {
    return force;
  }

  public void setForce(Boolean force) {
    this.force = force;
  }


  public SetGameScorePostRequest inlineMessageId(String inlineMessageId) {
    this.inlineMessageId = inlineMessageId;
    return this;
  }

  /**
   * Required if *chat\\_id* and *message\\_id* are not specified. Identifier of the inline message
   * @return inlineMessageId
   */
  @javax.annotation.Nullable
  public String getInlineMessageId() {
    return inlineMessageId;
  }

  public void setInlineMessageId(String inlineMessageId) {
    this.inlineMessageId = inlineMessageId;
  }


  public SetGameScorePostRequest messageId(Integer messageId) {
    this.messageId = messageId;
    return this;
  }

  /**
   * Required if *inline\\_message\\_id* is not specified. Identifier of the sent message
   * @return messageId
   */
  @javax.annotation.Nullable
  public Integer getMessageId() {
    return messageId;
  }

  public void setMessageId(Integer messageId) {
    this.messageId = messageId;
  }


  public SetGameScorePostRequest score(Integer score) {
    this.score = score;
    return this;
  }

  /**
   * New score, must be non-negative
   * @return score
   */
  @javax.annotation.Nonnull
  public Integer getScore() {
    return score;
  }

  public void setScore(Integer score) {
    this.score = score;
  }


  public SetGameScorePostRequest userId(Integer userId) {
    this.userId = userId;
    return this;
  }

  /**
   * User identifier
   * @return userId
   */
  @javax.annotation.Nonnull
  public Integer getUserId() {
    return userId;
  }

  public void setUserId(Integer userId) {
    this.userId = userId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SetGameScorePostRequest setGameScorePostRequest = (SetGameScorePostRequest) o;
    return Objects.equals(this.chatId, setGameScorePostRequest.chatId) &&
        Objects.equals(this.disableEditMessage, setGameScorePostRequest.disableEditMessage) &&
        Objects.equals(this.force, setGameScorePostRequest.force) &&
        Objects.equals(this.inlineMessageId, setGameScorePostRequest.inlineMessageId) &&
        Objects.equals(this.messageId, setGameScorePostRequest.messageId) &&
        Objects.equals(this.score, setGameScorePostRequest.score) &&
        Objects.equals(this.userId, setGameScorePostRequest.userId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(chatId, disableEditMessage, force, inlineMessageId, messageId, score, userId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SetGameScorePostRequest {\n");
    sb.append("    chatId: ").append(toIndentedString(chatId)).append("\n");
    sb.append("    disableEditMessage: ").append(toIndentedString(disableEditMessage)).append("\n");
    sb.append("    force: ").append(toIndentedString(force)).append("\n");
    sb.append("    inlineMessageId: ").append(toIndentedString(inlineMessageId)).append("\n");
    sb.append("    messageId: ").append(toIndentedString(messageId)).append("\n");
    sb.append("    score: ").append(toIndentedString(score)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("chat_id");
    openapiFields.add("disable_edit_message");
    openapiFields.add("force");
    openapiFields.add("inline_message_id");
    openapiFields.add("message_id");
    openapiFields.add("score");
    openapiFields.add("user_id");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("score");
    openapiRequiredFields.add("user_id");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to SetGameScorePostRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!SetGameScorePostRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in SetGameScorePostRequest is not found in the empty JSON string", SetGameScorePostRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!SetGameScorePostRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `SetGameScorePostRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : SetGameScorePostRequest.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("inline_message_id") != null && !jsonObj.get("inline_message_id").isJsonNull()) && !jsonObj.get("inline_message_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `inline_message_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("inline_message_id").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SetGameScorePostRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SetGameScorePostRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SetGameScorePostRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SetGameScorePostRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<SetGameScorePostRequest>() {
           @Override
           public void write(JsonWriter out, SetGameScorePostRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public SetGameScorePostRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of SetGameScorePostRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of SetGameScorePostRequest
   * @throws IOException if the JSON string is invalid with respect to SetGameScorePostRequest
   */
  public static SetGameScorePostRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SetGameScorePostRequest.class);
  }

  /**
   * Convert an instance of SetGameScorePostRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

