/*
 * Telegram Bot API
 * Auto-generated OpenAPI schema
 *
 * The version of the OpenAPI document: 5.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.Arrays;
import org.openapitools.client.model.EditMessageCaptionPostRequestChatId;
import org.openapitools.client.model.InlineKeyboardMarkup;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * EditMessageLiveLocationPostRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:56:27.961160-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class EditMessageLiveLocationPostRequest {
  public static final String SERIALIZED_NAME_CHAT_ID = "chat_id";
  @SerializedName(SERIALIZED_NAME_CHAT_ID)
  private EditMessageCaptionPostRequestChatId chatId;

  public static final String SERIALIZED_NAME_HEADING = "heading";
  @SerializedName(SERIALIZED_NAME_HEADING)
  private Integer heading;

  public static final String SERIALIZED_NAME_HORIZONTAL_ACCURACY = "horizontal_accuracy";
  @SerializedName(SERIALIZED_NAME_HORIZONTAL_ACCURACY)
  private BigDecimal horizontalAccuracy;

  public static final String SERIALIZED_NAME_INLINE_MESSAGE_ID = "inline_message_id";
  @SerializedName(SERIALIZED_NAME_INLINE_MESSAGE_ID)
  private String inlineMessageId;

  public static final String SERIALIZED_NAME_LATITUDE = "latitude";
  @SerializedName(SERIALIZED_NAME_LATITUDE)
  private BigDecimal latitude;

  public static final String SERIALIZED_NAME_LONGITUDE = "longitude";
  @SerializedName(SERIALIZED_NAME_LONGITUDE)
  private BigDecimal longitude;

  public static final String SERIALIZED_NAME_MESSAGE_ID = "message_id";
  @SerializedName(SERIALIZED_NAME_MESSAGE_ID)
  private Integer messageId;

  public static final String SERIALIZED_NAME_PROXIMITY_ALERT_RADIUS = "proximity_alert_radius";
  @SerializedName(SERIALIZED_NAME_PROXIMITY_ALERT_RADIUS)
  private Integer proximityAlertRadius;

  public static final String SERIALIZED_NAME_REPLY_MARKUP = "reply_markup";
  @SerializedName(SERIALIZED_NAME_REPLY_MARKUP)
  private InlineKeyboardMarkup replyMarkup;

  public EditMessageLiveLocationPostRequest() {
  }

  public EditMessageLiveLocationPostRequest chatId(EditMessageCaptionPostRequestChatId chatId) {
    this.chatId = chatId;
    return this;
  }

  /**
   * Get chatId
   * @return chatId
   */
  @javax.annotation.Nullable
  public EditMessageCaptionPostRequestChatId getChatId() {
    return chatId;
  }

  public void setChatId(EditMessageCaptionPostRequestChatId chatId) {
    this.chatId = chatId;
  }


  public EditMessageLiveLocationPostRequest heading(Integer heading) {
    this.heading = heading;
    return this;
  }

  /**
   * Direction in which the user is moving, in degrees. Must be between 1 and 360 if specified.
   * @return heading
   */
  @javax.annotation.Nullable
  public Integer getHeading() {
    return heading;
  }

  public void setHeading(Integer heading) {
    this.heading = heading;
  }


  public EditMessageLiveLocationPostRequest horizontalAccuracy(BigDecimal horizontalAccuracy) {
    this.horizontalAccuracy = horizontalAccuracy;
    return this;
  }

  /**
   * The radius of uncertainty for the location, measured in meters; 0-1500
   * @return horizontalAccuracy
   */
  @javax.annotation.Nullable
  public BigDecimal getHorizontalAccuracy() {
    return horizontalAccuracy;
  }

  public void setHorizontalAccuracy(BigDecimal horizontalAccuracy) {
    this.horizontalAccuracy = horizontalAccuracy;
  }


  public EditMessageLiveLocationPostRequest inlineMessageId(String inlineMessageId) {
    this.inlineMessageId = inlineMessageId;
    return this;
  }

  /**
   * Required if *chat\\_id* and *message\\_id* are not specified. Identifier of the inline message
   * @return inlineMessageId
   */
  @javax.annotation.Nullable
  public String getInlineMessageId() {
    return inlineMessageId;
  }

  public void setInlineMessageId(String inlineMessageId) {
    this.inlineMessageId = inlineMessageId;
  }


  public EditMessageLiveLocationPostRequest latitude(BigDecimal latitude) {
    this.latitude = latitude;
    return this;
  }

  /**
   * Latitude of new location
   * @return latitude
   */
  @javax.annotation.Nonnull
  public BigDecimal getLatitude() {
    return latitude;
  }

  public void setLatitude(BigDecimal latitude) {
    this.latitude = latitude;
  }


  public EditMessageLiveLocationPostRequest longitude(BigDecimal longitude) {
    this.longitude = longitude;
    return this;
  }

  /**
   * Longitude of new location
   * @return longitude
   */
  @javax.annotation.Nonnull
  public BigDecimal getLongitude() {
    return longitude;
  }

  public void setLongitude(BigDecimal longitude) {
    this.longitude = longitude;
  }


  public EditMessageLiveLocationPostRequest messageId(Integer messageId) {
    this.messageId = messageId;
    return this;
  }

  /**
   * Required if *inline\\_message\\_id* is not specified. Identifier of the message to edit
   * @return messageId
   */
  @javax.annotation.Nullable
  public Integer getMessageId() {
    return messageId;
  }

  public void setMessageId(Integer messageId) {
    this.messageId = messageId;
  }


  public EditMessageLiveLocationPostRequest proximityAlertRadius(Integer proximityAlertRadius) {
    this.proximityAlertRadius = proximityAlertRadius;
    return this;
  }

  /**
   * Maximum distance for proximity alerts about approaching another chat member, in meters. Must be between 1 and 100000 if specified.
   * @return proximityAlertRadius
   */
  @javax.annotation.Nullable
  public Integer getProximityAlertRadius() {
    return proximityAlertRadius;
  }

  public void setProximityAlertRadius(Integer proximityAlertRadius) {
    this.proximityAlertRadius = proximityAlertRadius;
  }


  public EditMessageLiveLocationPostRequest replyMarkup(InlineKeyboardMarkup replyMarkup) {
    this.replyMarkup = replyMarkup;
    return this;
  }

  /**
   * Get replyMarkup
   * @return replyMarkup
   */
  @javax.annotation.Nullable
  public InlineKeyboardMarkup getReplyMarkup() {
    return replyMarkup;
  }

  public void setReplyMarkup(InlineKeyboardMarkup replyMarkup) {
    this.replyMarkup = replyMarkup;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EditMessageLiveLocationPostRequest editMessageLiveLocationPostRequest = (EditMessageLiveLocationPostRequest) o;
    return Objects.equals(this.chatId, editMessageLiveLocationPostRequest.chatId) &&
        Objects.equals(this.heading, editMessageLiveLocationPostRequest.heading) &&
        Objects.equals(this.horizontalAccuracy, editMessageLiveLocationPostRequest.horizontalAccuracy) &&
        Objects.equals(this.inlineMessageId, editMessageLiveLocationPostRequest.inlineMessageId) &&
        Objects.equals(this.latitude, editMessageLiveLocationPostRequest.latitude) &&
        Objects.equals(this.longitude, editMessageLiveLocationPostRequest.longitude) &&
        Objects.equals(this.messageId, editMessageLiveLocationPostRequest.messageId) &&
        Objects.equals(this.proximityAlertRadius, editMessageLiveLocationPostRequest.proximityAlertRadius) &&
        Objects.equals(this.replyMarkup, editMessageLiveLocationPostRequest.replyMarkup);
  }

  @Override
  public int hashCode() {
    return Objects.hash(chatId, heading, horizontalAccuracy, inlineMessageId, latitude, longitude, messageId, proximityAlertRadius, replyMarkup);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EditMessageLiveLocationPostRequest {\n");
    sb.append("    chatId: ").append(toIndentedString(chatId)).append("\n");
    sb.append("    heading: ").append(toIndentedString(heading)).append("\n");
    sb.append("    horizontalAccuracy: ").append(toIndentedString(horizontalAccuracy)).append("\n");
    sb.append("    inlineMessageId: ").append(toIndentedString(inlineMessageId)).append("\n");
    sb.append("    latitude: ").append(toIndentedString(latitude)).append("\n");
    sb.append("    longitude: ").append(toIndentedString(longitude)).append("\n");
    sb.append("    messageId: ").append(toIndentedString(messageId)).append("\n");
    sb.append("    proximityAlertRadius: ").append(toIndentedString(proximityAlertRadius)).append("\n");
    sb.append("    replyMarkup: ").append(toIndentedString(replyMarkup)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("chat_id");
    openapiFields.add("heading");
    openapiFields.add("horizontal_accuracy");
    openapiFields.add("inline_message_id");
    openapiFields.add("latitude");
    openapiFields.add("longitude");
    openapiFields.add("message_id");
    openapiFields.add("proximity_alert_radius");
    openapiFields.add("reply_markup");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("latitude");
    openapiRequiredFields.add("longitude");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to EditMessageLiveLocationPostRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!EditMessageLiveLocationPostRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in EditMessageLiveLocationPostRequest is not found in the empty JSON string", EditMessageLiveLocationPostRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!EditMessageLiveLocationPostRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `EditMessageLiveLocationPostRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : EditMessageLiveLocationPostRequest.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `chat_id`
      if (jsonObj.get("chat_id") != null && !jsonObj.get("chat_id").isJsonNull()) {
        EditMessageCaptionPostRequestChatId.validateJsonElement(jsonObj.get("chat_id"));
      }
      if ((jsonObj.get("inline_message_id") != null && !jsonObj.get("inline_message_id").isJsonNull()) && !jsonObj.get("inline_message_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `inline_message_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("inline_message_id").toString()));
      }
      // validate the optional field `reply_markup`
      if (jsonObj.get("reply_markup") != null && !jsonObj.get("reply_markup").isJsonNull()) {
        InlineKeyboardMarkup.validateJsonElement(jsonObj.get("reply_markup"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!EditMessageLiveLocationPostRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'EditMessageLiveLocationPostRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<EditMessageLiveLocationPostRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(EditMessageLiveLocationPostRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<EditMessageLiveLocationPostRequest>() {
           @Override
           public void write(JsonWriter out, EditMessageLiveLocationPostRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public EditMessageLiveLocationPostRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of EditMessageLiveLocationPostRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of EditMessageLiveLocationPostRequest
   * @throws IOException if the JSON string is invalid with respect to EditMessageLiveLocationPostRequest
   */
  public static EditMessageLiveLocationPostRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, EditMessageLiveLocationPostRequest.class);
  }

  /**
   * Convert an instance of EditMessageLiveLocationPostRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

