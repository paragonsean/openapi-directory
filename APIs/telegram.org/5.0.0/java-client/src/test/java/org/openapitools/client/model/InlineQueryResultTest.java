/*
 * Telegram Bot API
 * Auto-generated OpenAPI schema
 *
 * The version of the OpenAPI document: 5.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.InlineKeyboardMarkup;
import org.openapitools.client.model.InlineQueryResultArticle;
import org.openapitools.client.model.InlineQueryResultAudio;
import org.openapitools.client.model.InlineQueryResultCachedAudio;
import org.openapitools.client.model.InlineQueryResultCachedDocument;
import org.openapitools.client.model.InlineQueryResultCachedGif;
import org.openapitools.client.model.InlineQueryResultCachedMpeg4Gif;
import org.openapitools.client.model.InlineQueryResultCachedPhoto;
import org.openapitools.client.model.InlineQueryResultCachedSticker;
import org.openapitools.client.model.InlineQueryResultCachedVideo;
import org.openapitools.client.model.InlineQueryResultCachedVoice;
import org.openapitools.client.model.InlineQueryResultContact;
import org.openapitools.client.model.InlineQueryResultDocument;
import org.openapitools.client.model.InlineQueryResultGame;
import org.openapitools.client.model.InlineQueryResultGif;
import org.openapitools.client.model.InlineQueryResultLocation;
import org.openapitools.client.model.InlineQueryResultMpeg4Gif;
import org.openapitools.client.model.InlineQueryResultPhoto;
import org.openapitools.client.model.InlineQueryResultVenue;
import org.openapitools.client.model.InlineQueryResultVideo;
import org.openapitools.client.model.InlineQueryResultVoice;
import org.openapitools.client.model.InputMessageContent;
import org.openapitools.client.model.MessageEntity;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for InlineQueryResult
 */
public class InlineQueryResultTest {
    private final InlineQueryResult model = new InlineQueryResult();

    /**
     * Model tests for InlineQueryResult
     */
    @Test
    public void testInlineQueryResult() {
        // TODO: test InlineQueryResult
    }

    /**
     * Test the property 'audioFileId'
     */
    @Test
    public void audioFileIdTest() {
        // TODO: test audioFileId
    }

    /**
     * Test the property 'caption'
     */
    @Test
    public void captionTest() {
        // TODO: test caption
    }

    /**
     * Test the property 'captionEntities'
     */
    @Test
    public void captionEntitiesTest() {
        // TODO: test captionEntities
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'inputMessageContent'
     */
    @Test
    public void inputMessageContentTest() {
        // TODO: test inputMessageContent
    }

    /**
     * Test the property 'parseMode'
     */
    @Test
    public void parseModeTest() {
        // TODO: test parseMode
    }

    /**
     * Test the property 'replyMarkup'
     */
    @Test
    public void replyMarkupTest() {
        // TODO: test replyMarkup
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'documentFileId'
     */
    @Test
    public void documentFileIdTest() {
        // TODO: test documentFileId
    }

    /**
     * Test the property 'title'
     */
    @Test
    public void titleTest() {
        // TODO: test title
    }

    /**
     * Test the property 'gifFileId'
     */
    @Test
    public void gifFileIdTest() {
        // TODO: test gifFileId
    }

    /**
     * Test the property 'mpeg4FileId'
     */
    @Test
    public void mpeg4FileIdTest() {
        // TODO: test mpeg4FileId
    }

    /**
     * Test the property 'photoFileId'
     */
    @Test
    public void photoFileIdTest() {
        // TODO: test photoFileId
    }

    /**
     * Test the property 'stickerFileId'
     */
    @Test
    public void stickerFileIdTest() {
        // TODO: test stickerFileId
    }

    /**
     * Test the property 'videoFileId'
     */
    @Test
    public void videoFileIdTest() {
        // TODO: test videoFileId
    }

    /**
     * Test the property 'voiceFileId'
     */
    @Test
    public void voiceFileIdTest() {
        // TODO: test voiceFileId
    }

    /**
     * Test the property 'hideUrl'
     */
    @Test
    public void hideUrlTest() {
        // TODO: test hideUrl
    }

    /**
     * Test the property 'thumbHeight'
     */
    @Test
    public void thumbHeightTest() {
        // TODO: test thumbHeight
    }

    /**
     * Test the property 'thumbUrl'
     */
    @Test
    public void thumbUrlTest() {
        // TODO: test thumbUrl
    }

    /**
     * Test the property 'thumbWidth'
     */
    @Test
    public void thumbWidthTest() {
        // TODO: test thumbWidth
    }

    /**
     * Test the property 'url'
     */
    @Test
    public void urlTest() {
        // TODO: test url
    }

    /**
     * Test the property 'audioDuration'
     */
    @Test
    public void audioDurationTest() {
        // TODO: test audioDuration
    }

    /**
     * Test the property 'audioUrl'
     */
    @Test
    public void audioUrlTest() {
        // TODO: test audioUrl
    }

    /**
     * Test the property 'performer'
     */
    @Test
    public void performerTest() {
        // TODO: test performer
    }

    /**
     * Test the property 'firstName'
     */
    @Test
    public void firstNameTest() {
        // TODO: test firstName
    }

    /**
     * Test the property 'lastName'
     */
    @Test
    public void lastNameTest() {
        // TODO: test lastName
    }

    /**
     * Test the property 'phoneNumber'
     */
    @Test
    public void phoneNumberTest() {
        // TODO: test phoneNumber
    }

    /**
     * Test the property 'vcard'
     */
    @Test
    public void vcardTest() {
        // TODO: test vcard
    }

    /**
     * Test the property 'gameShortName'
     */
    @Test
    public void gameShortNameTest() {
        // TODO: test gameShortName
    }

    /**
     * Test the property 'documentUrl'
     */
    @Test
    public void documentUrlTest() {
        // TODO: test documentUrl
    }

    /**
     * Test the property 'mimeType'
     */
    @Test
    public void mimeTypeTest() {
        // TODO: test mimeType
    }

    /**
     * Test the property 'gifDuration'
     */
    @Test
    public void gifDurationTest() {
        // TODO: test gifDuration
    }

    /**
     * Test the property 'gifHeight'
     */
    @Test
    public void gifHeightTest() {
        // TODO: test gifHeight
    }

    /**
     * Test the property 'gifUrl'
     */
    @Test
    public void gifUrlTest() {
        // TODO: test gifUrl
    }

    /**
     * Test the property 'gifWidth'
     */
    @Test
    public void gifWidthTest() {
        // TODO: test gifWidth
    }

    /**
     * Test the property 'thumbMimeType'
     */
    @Test
    public void thumbMimeTypeTest() {
        // TODO: test thumbMimeType
    }

    /**
     * Test the property 'heading'
     */
    @Test
    public void headingTest() {
        // TODO: test heading
    }

    /**
     * Test the property 'horizontalAccuracy'
     */
    @Test
    public void horizontalAccuracyTest() {
        // TODO: test horizontalAccuracy
    }

    /**
     * Test the property 'latitude'
     */
    @Test
    public void latitudeTest() {
        // TODO: test latitude
    }

    /**
     * Test the property 'livePeriod'
     */
    @Test
    public void livePeriodTest() {
        // TODO: test livePeriod
    }

    /**
     * Test the property 'longitude'
     */
    @Test
    public void longitudeTest() {
        // TODO: test longitude
    }

    /**
     * Test the property 'proximityAlertRadius'
     */
    @Test
    public void proximityAlertRadiusTest() {
        // TODO: test proximityAlertRadius
    }

    /**
     * Test the property 'mpeg4Duration'
     */
    @Test
    public void mpeg4DurationTest() {
        // TODO: test mpeg4Duration
    }

    /**
     * Test the property 'mpeg4Height'
     */
    @Test
    public void mpeg4HeightTest() {
        // TODO: test mpeg4Height
    }

    /**
     * Test the property 'mpeg4Url'
     */
    @Test
    public void mpeg4UrlTest() {
        // TODO: test mpeg4Url
    }

    /**
     * Test the property 'mpeg4Width'
     */
    @Test
    public void mpeg4WidthTest() {
        // TODO: test mpeg4Width
    }

    /**
     * Test the property 'photoHeight'
     */
    @Test
    public void photoHeightTest() {
        // TODO: test photoHeight
    }

    /**
     * Test the property 'photoUrl'
     */
    @Test
    public void photoUrlTest() {
        // TODO: test photoUrl
    }

    /**
     * Test the property 'photoWidth'
     */
    @Test
    public void photoWidthTest() {
        // TODO: test photoWidth
    }

    /**
     * Test the property 'address'
     */
    @Test
    public void addressTest() {
        // TODO: test address
    }

    /**
     * Test the property 'foursquareId'
     */
    @Test
    public void foursquareIdTest() {
        // TODO: test foursquareId
    }

    /**
     * Test the property 'foursquareType'
     */
    @Test
    public void foursquareTypeTest() {
        // TODO: test foursquareType
    }

    /**
     * Test the property 'googlePlaceId'
     */
    @Test
    public void googlePlaceIdTest() {
        // TODO: test googlePlaceId
    }

    /**
     * Test the property 'googlePlaceType'
     */
    @Test
    public void googlePlaceTypeTest() {
        // TODO: test googlePlaceType
    }

    /**
     * Test the property 'videoDuration'
     */
    @Test
    public void videoDurationTest() {
        // TODO: test videoDuration
    }

    /**
     * Test the property 'videoHeight'
     */
    @Test
    public void videoHeightTest() {
        // TODO: test videoHeight
    }

    /**
     * Test the property 'videoUrl'
     */
    @Test
    public void videoUrlTest() {
        // TODO: test videoUrl
    }

    /**
     * Test the property 'videoWidth'
     */
    @Test
    public void videoWidthTest() {
        // TODO: test videoWidth
    }

    /**
     * Test the property 'voiceDuration'
     */
    @Test
    public void voiceDurationTest() {
        // TODO: test voiceDuration
    }

    /**
     * Test the property 'voiceUrl'
     */
    @Test
    public void voiceUrlTest() {
        // TODO: test voiceUrl
    }

}
