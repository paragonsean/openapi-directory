/*
 * Telegram Bot API
 * Auto-generated OpenAPI schema
 *
 * The version of the OpenAPI document: 5.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CopyMessagePostRequestChatId;
import org.openapitools.client.model.CopyMessagePostRequestReplyMarkup;
import org.openapitools.client.model.MessageEntity;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for SendPollPostRequest
 */
public class SendPollPostRequestTest {
    private final SendPollPostRequest model = new SendPollPostRequest();

    /**
     * Model tests for SendPollPostRequest
     */
    @Test
    public void testSendPollPostRequest() {
        // TODO: test SendPollPostRequest
    }

    /**
     * Test the property 'allowSendingWithoutReply'
     */
    @Test
    public void allowSendingWithoutReplyTest() {
        // TODO: test allowSendingWithoutReply
    }

    /**
     * Test the property 'allowsMultipleAnswers'
     */
    @Test
    public void allowsMultipleAnswersTest() {
        // TODO: test allowsMultipleAnswers
    }

    /**
     * Test the property 'chatId'
     */
    @Test
    public void chatIdTest() {
        // TODO: test chatId
    }

    /**
     * Test the property 'closeDate'
     */
    @Test
    public void closeDateTest() {
        // TODO: test closeDate
    }

    /**
     * Test the property 'correctOptionId'
     */
    @Test
    public void correctOptionIdTest() {
        // TODO: test correctOptionId
    }

    /**
     * Test the property 'disableNotification'
     */
    @Test
    public void disableNotificationTest() {
        // TODO: test disableNotification
    }

    /**
     * Test the property 'explanation'
     */
    @Test
    public void explanationTest() {
        // TODO: test explanation
    }

    /**
     * Test the property 'explanationEntities'
     */
    @Test
    public void explanationEntitiesTest() {
        // TODO: test explanationEntities
    }

    /**
     * Test the property 'explanationParseMode'
     */
    @Test
    public void explanationParseModeTest() {
        // TODO: test explanationParseMode
    }

    /**
     * Test the property 'isAnonymous'
     */
    @Test
    public void isAnonymousTest() {
        // TODO: test isAnonymous
    }

    /**
     * Test the property 'isClosed'
     */
    @Test
    public void isClosedTest() {
        // TODO: test isClosed
    }

    /**
     * Test the property 'openPeriod'
     */
    @Test
    public void openPeriodTest() {
        // TODO: test openPeriod
    }

    /**
     * Test the property 'options'
     */
    @Test
    public void optionsTest() {
        // TODO: test options
    }

    /**
     * Test the property 'question'
     */
    @Test
    public void questionTest() {
        // TODO: test question
    }

    /**
     * Test the property 'replyMarkup'
     */
    @Test
    public void replyMarkupTest() {
        // TODO: test replyMarkup
    }

    /**
     * Test the property 'replyToMessageId'
     */
    @Test
    public void replyToMessageIdTest() {
        // TODO: test replyToMessageId
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

}
