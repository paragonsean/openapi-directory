/**
 * Telegram Bot API
 * Auto-generated OpenAPI schema
 *
 * The version of the OpenAPI document: 5.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.TelegramBotApi);
  }
}(this, function(expect, TelegramBotApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new TelegramBotApi.Message();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Message', function() {
    it('should create an instance of Message', function() {
      // uncomment below and update the code to test Message
      //var instance = new TelegramBotApi.Message();
      //expect(instance).to.be.a(TelegramBotApi.Message);
    });

    it('should have the property animation (base name: "animation")', function() {
      // uncomment below and update the code to test the property animation
      //var instance = new TelegramBotApi.Message();
      //expect(instance).to.be();
    });

    it('should have the property audio (base name: "audio")', function() {
      // uncomment below and update the code to test the property audio
      //var instance = new TelegramBotApi.Message();
      //expect(instance).to.be();
    });

    it('should have the property authorSignature (base name: "author_signature")', function() {
      // uncomment below and update the code to test the property authorSignature
      //var instance = new TelegramBotApi.Message();
      //expect(instance).to.be();
    });

    it('should have the property caption (base name: "caption")', function() {
      // uncomment below and update the code to test the property caption
      //var instance = new TelegramBotApi.Message();
      //expect(instance).to.be();
    });

    it('should have the property captionEntities (base name: "caption_entities")', function() {
      // uncomment below and update the code to test the property captionEntities
      //var instance = new TelegramBotApi.Message();
      //expect(instance).to.be();
    });

    it('should have the property channelChatCreated (base name: "channel_chat_created")', function() {
      // uncomment below and update the code to test the property channelChatCreated
      //var instance = new TelegramBotApi.Message();
      //expect(instance).to.be();
    });

    it('should have the property chat (base name: "chat")', function() {
      // uncomment below and update the code to test the property chat
      //var instance = new TelegramBotApi.Message();
      //expect(instance).to.be();
    });

    it('should have the property connectedWebsite (base name: "connected_website")', function() {
      // uncomment below and update the code to test the property connectedWebsite
      //var instance = new TelegramBotApi.Message();
      //expect(instance).to.be();
    });

    it('should have the property contact (base name: "contact")', function() {
      // uncomment below and update the code to test the property contact
      //var instance = new TelegramBotApi.Message();
      //expect(instance).to.be();
    });

    it('should have the property date (base name: "date")', function() {
      // uncomment below and update the code to test the property date
      //var instance = new TelegramBotApi.Message();
      //expect(instance).to.be();
    });

    it('should have the property deleteChatPhoto (base name: "delete_chat_photo")', function() {
      // uncomment below and update the code to test the property deleteChatPhoto
      //var instance = new TelegramBotApi.Message();
      //expect(instance).to.be();
    });

    it('should have the property dice (base name: "dice")', function() {
      // uncomment below and update the code to test the property dice
      //var instance = new TelegramBotApi.Message();
      //expect(instance).to.be();
    });

    it('should have the property document (base name: "document")', function() {
      // uncomment below and update the code to test the property document
      //var instance = new TelegramBotApi.Message();
      //expect(instance).to.be();
    });

    it('should have the property editDate (base name: "edit_date")', function() {
      // uncomment below and update the code to test the property editDate
      //var instance = new TelegramBotApi.Message();
      //expect(instance).to.be();
    });

    it('should have the property entities (base name: "entities")', function() {
      // uncomment below and update the code to test the property entities
      //var instance = new TelegramBotApi.Message();
      //expect(instance).to.be();
    });

    it('should have the property forwardDate (base name: "forward_date")', function() {
      // uncomment below and update the code to test the property forwardDate
      //var instance = new TelegramBotApi.Message();
      //expect(instance).to.be();
    });

    it('should have the property forwardFrom (base name: "forward_from")', function() {
      // uncomment below and update the code to test the property forwardFrom
      //var instance = new TelegramBotApi.Message();
      //expect(instance).to.be();
    });

    it('should have the property forwardFromChat (base name: "forward_from_chat")', function() {
      // uncomment below and update the code to test the property forwardFromChat
      //var instance = new TelegramBotApi.Message();
      //expect(instance).to.be();
    });

    it('should have the property forwardFromMessageId (base name: "forward_from_message_id")', function() {
      // uncomment below and update the code to test the property forwardFromMessageId
      //var instance = new TelegramBotApi.Message();
      //expect(instance).to.be();
    });

    it('should have the property forwardSenderName (base name: "forward_sender_name")', function() {
      // uncomment below and update the code to test the property forwardSenderName
      //var instance = new TelegramBotApi.Message();
      //expect(instance).to.be();
    });

    it('should have the property forwardSignature (base name: "forward_signature")', function() {
      // uncomment below and update the code to test the property forwardSignature
      //var instance = new TelegramBotApi.Message();
      //expect(instance).to.be();
    });

    it('should have the property from (base name: "from")', function() {
      // uncomment below and update the code to test the property from
      //var instance = new TelegramBotApi.Message();
      //expect(instance).to.be();
    });

    it('should have the property game (base name: "game")', function() {
      // uncomment below and update the code to test the property game
      //var instance = new TelegramBotApi.Message();
      //expect(instance).to.be();
    });

    it('should have the property groupChatCreated (base name: "group_chat_created")', function() {
      // uncomment below and update the code to test the property groupChatCreated
      //var instance = new TelegramBotApi.Message();
      //expect(instance).to.be();
    });

    it('should have the property invoice (base name: "invoice")', function() {
      // uncomment below and update the code to test the property invoice
      //var instance = new TelegramBotApi.Message();
      //expect(instance).to.be();
    });

    it('should have the property leftChatMember (base name: "left_chat_member")', function() {
      // uncomment below and update the code to test the property leftChatMember
      //var instance = new TelegramBotApi.Message();
      //expect(instance).to.be();
    });

    it('should have the property location (base name: "location")', function() {
      // uncomment below and update the code to test the property location
      //var instance = new TelegramBotApi.Message();
      //expect(instance).to.be();
    });

    it('should have the property mediaGroupId (base name: "media_group_id")', function() {
      // uncomment below and update the code to test the property mediaGroupId
      //var instance = new TelegramBotApi.Message();
      //expect(instance).to.be();
    });

    it('should have the property messageId (base name: "message_id")', function() {
      // uncomment below and update the code to test the property messageId
      //var instance = new TelegramBotApi.Message();
      //expect(instance).to.be();
    });

    it('should have the property migrateFromChatId (base name: "migrate_from_chat_id")', function() {
      // uncomment below and update the code to test the property migrateFromChatId
      //var instance = new TelegramBotApi.Message();
      //expect(instance).to.be();
    });

    it('should have the property migrateToChatId (base name: "migrate_to_chat_id")', function() {
      // uncomment below and update the code to test the property migrateToChatId
      //var instance = new TelegramBotApi.Message();
      //expect(instance).to.be();
    });

    it('should have the property newChatMembers (base name: "new_chat_members")', function() {
      // uncomment below and update the code to test the property newChatMembers
      //var instance = new TelegramBotApi.Message();
      //expect(instance).to.be();
    });

    it('should have the property newChatPhoto (base name: "new_chat_photo")', function() {
      // uncomment below and update the code to test the property newChatPhoto
      //var instance = new TelegramBotApi.Message();
      //expect(instance).to.be();
    });

    it('should have the property newChatTitle (base name: "new_chat_title")', function() {
      // uncomment below and update the code to test the property newChatTitle
      //var instance = new TelegramBotApi.Message();
      //expect(instance).to.be();
    });

    it('should have the property passportData (base name: "passport_data")', function() {
      // uncomment below and update the code to test the property passportData
      //var instance = new TelegramBotApi.Message();
      //expect(instance).to.be();
    });

    it('should have the property photo (base name: "photo")', function() {
      // uncomment below and update the code to test the property photo
      //var instance = new TelegramBotApi.Message();
      //expect(instance).to.be();
    });

    it('should have the property pinnedMessage (base name: "pinned_message")', function() {
      // uncomment below and update the code to test the property pinnedMessage
      //var instance = new TelegramBotApi.Message();
      //expect(instance).to.be();
    });

    it('should have the property poll (base name: "poll")', function() {
      // uncomment below and update the code to test the property poll
      //var instance = new TelegramBotApi.Message();
      //expect(instance).to.be();
    });

    it('should have the property proximityAlertTriggered (base name: "proximity_alert_triggered")', function() {
      // uncomment below and update the code to test the property proximityAlertTriggered
      //var instance = new TelegramBotApi.Message();
      //expect(instance).to.be();
    });

    it('should have the property replyMarkup (base name: "reply_markup")', function() {
      // uncomment below and update the code to test the property replyMarkup
      //var instance = new TelegramBotApi.Message();
      //expect(instance).to.be();
    });

    it('should have the property replyToMessage (base name: "reply_to_message")', function() {
      // uncomment below and update the code to test the property replyToMessage
      //var instance = new TelegramBotApi.Message();
      //expect(instance).to.be();
    });

    it('should have the property senderChat (base name: "sender_chat")', function() {
      // uncomment below and update the code to test the property senderChat
      //var instance = new TelegramBotApi.Message();
      //expect(instance).to.be();
    });

    it('should have the property sticker (base name: "sticker")', function() {
      // uncomment below and update the code to test the property sticker
      //var instance = new TelegramBotApi.Message();
      //expect(instance).to.be();
    });

    it('should have the property successfulPayment (base name: "successful_payment")', function() {
      // uncomment below and update the code to test the property successfulPayment
      //var instance = new TelegramBotApi.Message();
      //expect(instance).to.be();
    });

    it('should have the property supergroupChatCreated (base name: "supergroup_chat_created")', function() {
      // uncomment below and update the code to test the property supergroupChatCreated
      //var instance = new TelegramBotApi.Message();
      //expect(instance).to.be();
    });

    it('should have the property text (base name: "text")', function() {
      // uncomment below and update the code to test the property text
      //var instance = new TelegramBotApi.Message();
      //expect(instance).to.be();
    });

    it('should have the property venue (base name: "venue")', function() {
      // uncomment below and update the code to test the property venue
      //var instance = new TelegramBotApi.Message();
      //expect(instance).to.be();
    });

    it('should have the property viaBot (base name: "via_bot")', function() {
      // uncomment below and update the code to test the property viaBot
      //var instance = new TelegramBotApi.Message();
      //expect(instance).to.be();
    });

    it('should have the property video (base name: "video")', function() {
      // uncomment below and update the code to test the property video
      //var instance = new TelegramBotApi.Message();
      //expect(instance).to.be();
    });

    it('should have the property videoNote (base name: "video_note")', function() {
      // uncomment below and update the code to test the property videoNote
      //var instance = new TelegramBotApi.Message();
      //expect(instance).to.be();
    });

    it('should have the property voice (base name: "voice")', function() {
      // uncomment below and update the code to test the property voice
      //var instance = new TelegramBotApi.Message();
      //expect(instance).to.be();
    });

  });

}));
