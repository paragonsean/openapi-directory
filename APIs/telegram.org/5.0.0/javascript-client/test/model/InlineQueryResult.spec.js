/**
 * Telegram Bot API
 * Auto-generated OpenAPI schema
 *
 * The version of the OpenAPI document: 5.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.TelegramBotApi);
  }
}(this, function(expect, TelegramBotApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new TelegramBotApi.InlineQueryResult();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('InlineQueryResult', function() {
    it('should create an instance of InlineQueryResult', function() {
      // uncomment below and update the code to test InlineQueryResult
      //var instance = new TelegramBotApi.InlineQueryResult();
      //expect(instance).to.be.a(TelegramBotApi.InlineQueryResult);
    });

    it('should have the property audioFileId (base name: "audio_file_id")', function() {
      // uncomment below and update the code to test the property audioFileId
      //var instance = new TelegramBotApi.InlineQueryResult();
      //expect(instance).to.be();
    });

    it('should have the property caption (base name: "caption")', function() {
      // uncomment below and update the code to test the property caption
      //var instance = new TelegramBotApi.InlineQueryResult();
      //expect(instance).to.be();
    });

    it('should have the property captionEntities (base name: "caption_entities")', function() {
      // uncomment below and update the code to test the property captionEntities
      //var instance = new TelegramBotApi.InlineQueryResult();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new TelegramBotApi.InlineQueryResult();
      //expect(instance).to.be();
    });

    it('should have the property inputMessageContent (base name: "input_message_content")', function() {
      // uncomment below and update the code to test the property inputMessageContent
      //var instance = new TelegramBotApi.InlineQueryResult();
      //expect(instance).to.be();
    });

    it('should have the property parseMode (base name: "parse_mode")', function() {
      // uncomment below and update the code to test the property parseMode
      //var instance = new TelegramBotApi.InlineQueryResult();
      //expect(instance).to.be();
    });

    it('should have the property replyMarkup (base name: "reply_markup")', function() {
      // uncomment below and update the code to test the property replyMarkup
      //var instance = new TelegramBotApi.InlineQueryResult();
      //expect(instance).to.be();
    });

    it('should have the property type (base name: "type")', function() {
      // uncomment below and update the code to test the property type
      //var instance = new TelegramBotApi.InlineQueryResult();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new TelegramBotApi.InlineQueryResult();
      //expect(instance).to.be();
    });

    it('should have the property documentFileId (base name: "document_file_id")', function() {
      // uncomment below and update the code to test the property documentFileId
      //var instance = new TelegramBotApi.InlineQueryResult();
      //expect(instance).to.be();
    });

    it('should have the property title (base name: "title")', function() {
      // uncomment below and update the code to test the property title
      //var instance = new TelegramBotApi.InlineQueryResult();
      //expect(instance).to.be();
    });

    it('should have the property gifFileId (base name: "gif_file_id")', function() {
      // uncomment below and update the code to test the property gifFileId
      //var instance = new TelegramBotApi.InlineQueryResult();
      //expect(instance).to.be();
    });

    it('should have the property mpeg4FileId (base name: "mpeg4_file_id")', function() {
      // uncomment below and update the code to test the property mpeg4FileId
      //var instance = new TelegramBotApi.InlineQueryResult();
      //expect(instance).to.be();
    });

    it('should have the property photoFileId (base name: "photo_file_id")', function() {
      // uncomment below and update the code to test the property photoFileId
      //var instance = new TelegramBotApi.InlineQueryResult();
      //expect(instance).to.be();
    });

    it('should have the property stickerFileId (base name: "sticker_file_id")', function() {
      // uncomment below and update the code to test the property stickerFileId
      //var instance = new TelegramBotApi.InlineQueryResult();
      //expect(instance).to.be();
    });

    it('should have the property videoFileId (base name: "video_file_id")', function() {
      // uncomment below and update the code to test the property videoFileId
      //var instance = new TelegramBotApi.InlineQueryResult();
      //expect(instance).to.be();
    });

    it('should have the property voiceFileId (base name: "voice_file_id")', function() {
      // uncomment below and update the code to test the property voiceFileId
      //var instance = new TelegramBotApi.InlineQueryResult();
      //expect(instance).to.be();
    });

    it('should have the property hideUrl (base name: "hide_url")', function() {
      // uncomment below and update the code to test the property hideUrl
      //var instance = new TelegramBotApi.InlineQueryResult();
      //expect(instance).to.be();
    });

    it('should have the property thumbHeight (base name: "thumb_height")', function() {
      // uncomment below and update the code to test the property thumbHeight
      //var instance = new TelegramBotApi.InlineQueryResult();
      //expect(instance).to.be();
    });

    it('should have the property thumbUrl (base name: "thumb_url")', function() {
      // uncomment below and update the code to test the property thumbUrl
      //var instance = new TelegramBotApi.InlineQueryResult();
      //expect(instance).to.be();
    });

    it('should have the property thumbWidth (base name: "thumb_width")', function() {
      // uncomment below and update the code to test the property thumbWidth
      //var instance = new TelegramBotApi.InlineQueryResult();
      //expect(instance).to.be();
    });

    it('should have the property url (base name: "url")', function() {
      // uncomment below and update the code to test the property url
      //var instance = new TelegramBotApi.InlineQueryResult();
      //expect(instance).to.be();
    });

    it('should have the property audioDuration (base name: "audio_duration")', function() {
      // uncomment below and update the code to test the property audioDuration
      //var instance = new TelegramBotApi.InlineQueryResult();
      //expect(instance).to.be();
    });

    it('should have the property audioUrl (base name: "audio_url")', function() {
      // uncomment below and update the code to test the property audioUrl
      //var instance = new TelegramBotApi.InlineQueryResult();
      //expect(instance).to.be();
    });

    it('should have the property performer (base name: "performer")', function() {
      // uncomment below and update the code to test the property performer
      //var instance = new TelegramBotApi.InlineQueryResult();
      //expect(instance).to.be();
    });

    it('should have the property firstName (base name: "first_name")', function() {
      // uncomment below and update the code to test the property firstName
      //var instance = new TelegramBotApi.InlineQueryResult();
      //expect(instance).to.be();
    });

    it('should have the property lastName (base name: "last_name")', function() {
      // uncomment below and update the code to test the property lastName
      //var instance = new TelegramBotApi.InlineQueryResult();
      //expect(instance).to.be();
    });

    it('should have the property phoneNumber (base name: "phone_number")', function() {
      // uncomment below and update the code to test the property phoneNumber
      //var instance = new TelegramBotApi.InlineQueryResult();
      //expect(instance).to.be();
    });

    it('should have the property vcard (base name: "vcard")', function() {
      // uncomment below and update the code to test the property vcard
      //var instance = new TelegramBotApi.InlineQueryResult();
      //expect(instance).to.be();
    });

    it('should have the property gameShortName (base name: "game_short_name")', function() {
      // uncomment below and update the code to test the property gameShortName
      //var instance = new TelegramBotApi.InlineQueryResult();
      //expect(instance).to.be();
    });

    it('should have the property documentUrl (base name: "document_url")', function() {
      // uncomment below and update the code to test the property documentUrl
      //var instance = new TelegramBotApi.InlineQueryResult();
      //expect(instance).to.be();
    });

    it('should have the property mimeType (base name: "mime_type")', function() {
      // uncomment below and update the code to test the property mimeType
      //var instance = new TelegramBotApi.InlineQueryResult();
      //expect(instance).to.be();
    });

    it('should have the property gifDuration (base name: "gif_duration")', function() {
      // uncomment below and update the code to test the property gifDuration
      //var instance = new TelegramBotApi.InlineQueryResult();
      //expect(instance).to.be();
    });

    it('should have the property gifHeight (base name: "gif_height")', function() {
      // uncomment below and update the code to test the property gifHeight
      //var instance = new TelegramBotApi.InlineQueryResult();
      //expect(instance).to.be();
    });

    it('should have the property gifUrl (base name: "gif_url")', function() {
      // uncomment below and update the code to test the property gifUrl
      //var instance = new TelegramBotApi.InlineQueryResult();
      //expect(instance).to.be();
    });

    it('should have the property gifWidth (base name: "gif_width")', function() {
      // uncomment below and update the code to test the property gifWidth
      //var instance = new TelegramBotApi.InlineQueryResult();
      //expect(instance).to.be();
    });

    it('should have the property thumbMimeType (base name: "thumb_mime_type")', function() {
      // uncomment below and update the code to test the property thumbMimeType
      //var instance = new TelegramBotApi.InlineQueryResult();
      //expect(instance).to.be();
    });

    it('should have the property heading (base name: "heading")', function() {
      // uncomment below and update the code to test the property heading
      //var instance = new TelegramBotApi.InlineQueryResult();
      //expect(instance).to.be();
    });

    it('should have the property horizontalAccuracy (base name: "horizontal_accuracy")', function() {
      // uncomment below and update the code to test the property horizontalAccuracy
      //var instance = new TelegramBotApi.InlineQueryResult();
      //expect(instance).to.be();
    });

    it('should have the property latitude (base name: "latitude")', function() {
      // uncomment below and update the code to test the property latitude
      //var instance = new TelegramBotApi.InlineQueryResult();
      //expect(instance).to.be();
    });

    it('should have the property livePeriod (base name: "live_period")', function() {
      // uncomment below and update the code to test the property livePeriod
      //var instance = new TelegramBotApi.InlineQueryResult();
      //expect(instance).to.be();
    });

    it('should have the property longitude (base name: "longitude")', function() {
      // uncomment below and update the code to test the property longitude
      //var instance = new TelegramBotApi.InlineQueryResult();
      //expect(instance).to.be();
    });

    it('should have the property proximityAlertRadius (base name: "proximity_alert_radius")', function() {
      // uncomment below and update the code to test the property proximityAlertRadius
      //var instance = new TelegramBotApi.InlineQueryResult();
      //expect(instance).to.be();
    });

    it('should have the property mpeg4Duration (base name: "mpeg4_duration")', function() {
      // uncomment below and update the code to test the property mpeg4Duration
      //var instance = new TelegramBotApi.InlineQueryResult();
      //expect(instance).to.be();
    });

    it('should have the property mpeg4Height (base name: "mpeg4_height")', function() {
      // uncomment below and update the code to test the property mpeg4Height
      //var instance = new TelegramBotApi.InlineQueryResult();
      //expect(instance).to.be();
    });

    it('should have the property mpeg4Url (base name: "mpeg4_url")', function() {
      // uncomment below and update the code to test the property mpeg4Url
      //var instance = new TelegramBotApi.InlineQueryResult();
      //expect(instance).to.be();
    });

    it('should have the property mpeg4Width (base name: "mpeg4_width")', function() {
      // uncomment below and update the code to test the property mpeg4Width
      //var instance = new TelegramBotApi.InlineQueryResult();
      //expect(instance).to.be();
    });

    it('should have the property photoHeight (base name: "photo_height")', function() {
      // uncomment below and update the code to test the property photoHeight
      //var instance = new TelegramBotApi.InlineQueryResult();
      //expect(instance).to.be();
    });

    it('should have the property photoUrl (base name: "photo_url")', function() {
      // uncomment below and update the code to test the property photoUrl
      //var instance = new TelegramBotApi.InlineQueryResult();
      //expect(instance).to.be();
    });

    it('should have the property photoWidth (base name: "photo_width")', function() {
      // uncomment below and update the code to test the property photoWidth
      //var instance = new TelegramBotApi.InlineQueryResult();
      //expect(instance).to.be();
    });

    it('should have the property address (base name: "address")', function() {
      // uncomment below and update the code to test the property address
      //var instance = new TelegramBotApi.InlineQueryResult();
      //expect(instance).to.be();
    });

    it('should have the property foursquareId (base name: "foursquare_id")', function() {
      // uncomment below and update the code to test the property foursquareId
      //var instance = new TelegramBotApi.InlineQueryResult();
      //expect(instance).to.be();
    });

    it('should have the property foursquareType (base name: "foursquare_type")', function() {
      // uncomment below and update the code to test the property foursquareType
      //var instance = new TelegramBotApi.InlineQueryResult();
      //expect(instance).to.be();
    });

    it('should have the property googlePlaceId (base name: "google_place_id")', function() {
      // uncomment below and update the code to test the property googlePlaceId
      //var instance = new TelegramBotApi.InlineQueryResult();
      //expect(instance).to.be();
    });

    it('should have the property googlePlaceType (base name: "google_place_type")', function() {
      // uncomment below and update the code to test the property googlePlaceType
      //var instance = new TelegramBotApi.InlineQueryResult();
      //expect(instance).to.be();
    });

    it('should have the property videoDuration (base name: "video_duration")', function() {
      // uncomment below and update the code to test the property videoDuration
      //var instance = new TelegramBotApi.InlineQueryResult();
      //expect(instance).to.be();
    });

    it('should have the property videoHeight (base name: "video_height")', function() {
      // uncomment below and update the code to test the property videoHeight
      //var instance = new TelegramBotApi.InlineQueryResult();
      //expect(instance).to.be();
    });

    it('should have the property videoUrl (base name: "video_url")', function() {
      // uncomment below and update the code to test the property videoUrl
      //var instance = new TelegramBotApi.InlineQueryResult();
      //expect(instance).to.be();
    });

    it('should have the property videoWidth (base name: "video_width")', function() {
      // uncomment below and update the code to test the property videoWidth
      //var instance = new TelegramBotApi.InlineQueryResult();
      //expect(instance).to.be();
    });

    it('should have the property voiceDuration (base name: "voice_duration")', function() {
      // uncomment below and update the code to test the property voiceDuration
      //var instance = new TelegramBotApi.InlineQueryResult();
      //expect(instance).to.be();
    });

    it('should have the property voiceUrl (base name: "voice_url")', function() {
      // uncomment below and update the code to test the property voiceUrl
      //var instance = new TelegramBotApi.InlineQueryResult();
      //expect(instance).to.be();
    });

  });

}));
