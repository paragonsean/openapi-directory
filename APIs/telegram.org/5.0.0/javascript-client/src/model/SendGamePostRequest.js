/**
 * Telegram Bot API
 * Auto-generated OpenAPI schema
 *
 * The version of the OpenAPI document: 5.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import InlineKeyboardMarkup from './InlineKeyboardMarkup';

/**
 * The SendGamePostRequest model module.
 * @module model/SendGamePostRequest
 * @version 5.0.0
 */
class SendGamePostRequest {
    /**
     * Constructs a new <code>SendGamePostRequest</code>.
     * @alias module:model/SendGamePostRequest
     * @param chatId {Number} Unique identifier for the target chat
     * @param gameShortName {String} Short name of the game, serves as the unique identifier for the game. Set up your games via [Botfather](https://t.me/botfather).
     */
    constructor(chatId, gameShortName) { 
        
        SendGamePostRequest.initialize(this, chatId, gameShortName);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, chatId, gameShortName) { 
        obj['chat_id'] = chatId;
        obj['game_short_name'] = gameShortName;
    }

    /**
     * Constructs a <code>SendGamePostRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SendGamePostRequest} obj Optional instance to populate.
     * @return {module:model/SendGamePostRequest} The populated <code>SendGamePostRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SendGamePostRequest();

            if (data.hasOwnProperty('allow_sending_without_reply')) {
                obj['allow_sending_without_reply'] = ApiClient.convertToType(data['allow_sending_without_reply'], 'Boolean');
            }
            if (data.hasOwnProperty('chat_id')) {
                obj['chat_id'] = ApiClient.convertToType(data['chat_id'], 'Number');
            }
            if (data.hasOwnProperty('disable_notification')) {
                obj['disable_notification'] = ApiClient.convertToType(data['disable_notification'], 'Boolean');
            }
            if (data.hasOwnProperty('game_short_name')) {
                obj['game_short_name'] = ApiClient.convertToType(data['game_short_name'], 'String');
            }
            if (data.hasOwnProperty('reply_markup')) {
                obj['reply_markup'] = InlineKeyboardMarkup.constructFromObject(data['reply_markup']);
            }
            if (data.hasOwnProperty('reply_to_message_id')) {
                obj['reply_to_message_id'] = ApiClient.convertToType(data['reply_to_message_id'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SendGamePostRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SendGamePostRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of SendGamePostRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['game_short_name'] && !(typeof data['game_short_name'] === 'string' || data['game_short_name'] instanceof String)) {
            throw new Error("Expected the field `game_short_name` to be a primitive type in the JSON string but got " + data['game_short_name']);
        }
        // validate the optional field `reply_markup`
        if (data['reply_markup']) { // data not null
          InlineKeyboardMarkup.validateJSON(data['reply_markup']);
        }

        return true;
    }


}

SendGamePostRequest.RequiredProperties = ["chat_id", "game_short_name"];

/**
 * Pass *True*, if the message should be sent even if the specified replied-to message is not found
 * @member {Boolean} allow_sending_without_reply
 */
SendGamePostRequest.prototype['allow_sending_without_reply'] = undefined;

/**
 * Unique identifier for the target chat
 * @member {Number} chat_id
 */
SendGamePostRequest.prototype['chat_id'] = undefined;

/**
 * Sends the message [silently](https://telegram.org/blog/channels-2-0#silent-messages). Users will receive a notification with no sound.
 * @member {Boolean} disable_notification
 */
SendGamePostRequest.prototype['disable_notification'] = undefined;

/**
 * Short name of the game, serves as the unique identifier for the game. Set up your games via [Botfather](https://t.me/botfather).
 * @member {String} game_short_name
 */
SendGamePostRequest.prototype['game_short_name'] = undefined;

/**
 * @member {module:model/InlineKeyboardMarkup} reply_markup
 */
SendGamePostRequest.prototype['reply_markup'] = undefined;

/**
 * If the message is a reply, ID of the original message
 * @member {Number} reply_to_message_id
 */
SendGamePostRequest.prototype['reply_to_message_id'] = undefined;






export default SendGamePostRequest;

