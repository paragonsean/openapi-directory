/**
 * Telegram Bot API
 * Auto-generated OpenAPI schema
 *
 * The version of the OpenAPI document: 5.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The InputContactMessageContent model module.
 * @module model/InputContactMessageContent
 * @version 5.0.0
 */
class InputContactMessageContent {
    /**
     * Constructs a new <code>InputContactMessageContent</code>.
     * Represents the [content](https://core.telegram.org/bots/api/#inputmessagecontent) of a contact message to be sent as the result of an inline query.
     * @alias module:model/InputContactMessageContent
     * @param firstName {String} Contact's first name
     * @param phoneNumber {String} Contact's phone number
     */
    constructor(firstName, phoneNumber) { 
        
        InputContactMessageContent.initialize(this, firstName, phoneNumber);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, firstName, phoneNumber) { 
        obj['first_name'] = firstName;
        obj['phone_number'] = phoneNumber;
    }

    /**
     * Constructs a <code>InputContactMessageContent</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InputContactMessageContent} obj Optional instance to populate.
     * @return {module:model/InputContactMessageContent} The populated <code>InputContactMessageContent</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InputContactMessageContent();

            if (data.hasOwnProperty('first_name')) {
                obj['first_name'] = ApiClient.convertToType(data['first_name'], 'String');
            }
            if (data.hasOwnProperty('last_name')) {
                obj['last_name'] = ApiClient.convertToType(data['last_name'], 'String');
            }
            if (data.hasOwnProperty('phone_number')) {
                obj['phone_number'] = ApiClient.convertToType(data['phone_number'], 'String');
            }
            if (data.hasOwnProperty('vcard')) {
                obj['vcard'] = ApiClient.convertToType(data['vcard'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>InputContactMessageContent</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>InputContactMessageContent</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of InputContactMessageContent.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['first_name'] && !(typeof data['first_name'] === 'string' || data['first_name'] instanceof String)) {
            throw new Error("Expected the field `first_name` to be a primitive type in the JSON string but got " + data['first_name']);
        }
        // ensure the json data is a string
        if (data['last_name'] && !(typeof data['last_name'] === 'string' || data['last_name'] instanceof String)) {
            throw new Error("Expected the field `last_name` to be a primitive type in the JSON string but got " + data['last_name']);
        }
        // ensure the json data is a string
        if (data['phone_number'] && !(typeof data['phone_number'] === 'string' || data['phone_number'] instanceof String)) {
            throw new Error("Expected the field `phone_number` to be a primitive type in the JSON string but got " + data['phone_number']);
        }
        // ensure the json data is a string
        if (data['vcard'] && !(typeof data['vcard'] === 'string' || data['vcard'] instanceof String)) {
            throw new Error("Expected the field `vcard` to be a primitive type in the JSON string but got " + data['vcard']);
        }

        return true;
    }


}

InputContactMessageContent.RequiredProperties = ["first_name", "phone_number"];

/**
 * Contact's first name
 * @member {String} first_name
 */
InputContactMessageContent.prototype['first_name'] = undefined;

/**
 * *Optional*. Contact's last name
 * @member {String} last_name
 */
InputContactMessageContent.prototype['last_name'] = undefined;

/**
 * Contact's phone number
 * @member {String} phone_number
 */
InputContactMessageContent.prototype['phone_number'] = undefined;

/**
 * *Optional*. Additional data about the contact in the form of a [vCard](https://en.wikipedia.org/wiki/VCard), 0-2048 bytes
 * @member {String} vcard
 */
InputContactMessageContent.prototype['vcard'] = undefined;






export default InputContactMessageContent;

