/**
 * Telegram Bot API
 * Auto-generated OpenAPI schema
 *
 * The version of the OpenAPI document: 5.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ReplyKeyboardRemove model module.
 * @module model/ReplyKeyboardRemove
 * @version 5.0.0
 */
class ReplyKeyboardRemove {
    /**
     * Constructs a new <code>ReplyKeyboardRemove</code>.
     * Upon receiving a message with this object, Telegram clients will remove the current custom keyboard and display the default letter-keyboard. By default, custom keyboards are displayed until a new keyboard is sent by a bot. An exception is made for one-time keyboards that are hidden immediately after the user presses a button (see [ReplyKeyboardMarkup](https://core.telegram.org/bots/api/#replykeyboardmarkup)).
     * @alias module:model/ReplyKeyboardRemove
     * @param removeKeyboard {Boolean} Requests clients to remove the custom keyboard (user will not be able to summon this keyboard; if you want to hide the keyboard from sight but keep it accessible, use *one\\_time\\_keyboard* in [ReplyKeyboardMarkup](https://core.telegram.org/bots/api/#replykeyboardmarkup))
     */
    constructor(removeKeyboard) { 
        
        ReplyKeyboardRemove.initialize(this, removeKeyboard);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, removeKeyboard) { 
        obj['remove_keyboard'] = removeKeyboard;
    }

    /**
     * Constructs a <code>ReplyKeyboardRemove</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ReplyKeyboardRemove} obj Optional instance to populate.
     * @return {module:model/ReplyKeyboardRemove} The populated <code>ReplyKeyboardRemove</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ReplyKeyboardRemove();

            if (data.hasOwnProperty('remove_keyboard')) {
                obj['remove_keyboard'] = ApiClient.convertToType(data['remove_keyboard'], 'Boolean');
            }
            if (data.hasOwnProperty('selective')) {
                obj['selective'] = ApiClient.convertToType(data['selective'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ReplyKeyboardRemove</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ReplyKeyboardRemove</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ReplyKeyboardRemove.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }

        return true;
    }


}

ReplyKeyboardRemove.RequiredProperties = ["remove_keyboard"];

/**
 * Requests clients to remove the custom keyboard (user will not be able to summon this keyboard; if you want to hide the keyboard from sight but keep it accessible, use *one\\_time\\_keyboard* in [ReplyKeyboardMarkup](https://core.telegram.org/bots/api/#replykeyboardmarkup))
 * @member {Boolean} remove_keyboard
 */
ReplyKeyboardRemove.prototype['remove_keyboard'] = undefined;

/**
 * *Optional*. Use this parameter if you want to remove the keyboard for specific users only. Targets: 1) users that are @mentioned in the *text* of the [Message](https://core.telegram.org/bots/api/#message) object; 2) if the bot's message is a reply (has *reply\\_to\\_message\\_id*), sender of the original message.    *Example:* A user votes in a poll, bot returns confirmation message in reply to the vote and removes the keyboard for that user, while still showing the keyboard with poll options to users who haven't voted yet.
 * @member {Boolean} selective
 */
ReplyKeyboardRemove.prototype['selective'] = undefined;






export default ReplyKeyboardRemove;

