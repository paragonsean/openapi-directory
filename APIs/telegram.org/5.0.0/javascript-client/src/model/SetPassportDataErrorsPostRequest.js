/**
 * Telegram Bot API
 * Auto-generated OpenAPI schema
 *
 * The version of the OpenAPI document: 5.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PassportElementError from './PassportElementError';

/**
 * The SetPassportDataErrorsPostRequest model module.
 * @module model/SetPassportDataErrorsPostRequest
 * @version 5.0.0
 */
class SetPassportDataErrorsPostRequest {
    /**
     * Constructs a new <code>SetPassportDataErrorsPostRequest</code>.
     * @alias module:model/SetPassportDataErrorsPostRequest
     * @param errors {Array.<module:model/PassportElementError>} A JSON-serialized array describing the errors
     * @param userId {Number} User identifier
     */
    constructor(errors, userId) { 
        
        SetPassportDataErrorsPostRequest.initialize(this, errors, userId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, errors, userId) { 
        obj['errors'] = errors;
        obj['user_id'] = userId;
    }

    /**
     * Constructs a <code>SetPassportDataErrorsPostRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SetPassportDataErrorsPostRequest} obj Optional instance to populate.
     * @return {module:model/SetPassportDataErrorsPostRequest} The populated <code>SetPassportDataErrorsPostRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SetPassportDataErrorsPostRequest();

            if (data.hasOwnProperty('errors')) {
                obj['errors'] = ApiClient.convertToType(data['errors'], [PassportElementError]);
            }
            if (data.hasOwnProperty('user_id')) {
                obj['user_id'] = ApiClient.convertToType(data['user_id'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SetPassportDataErrorsPostRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SetPassportDataErrorsPostRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of SetPassportDataErrorsPostRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['errors']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['errors'])) {
                throw new Error("Expected the field `errors` to be an array in the JSON data but got " + data['errors']);
            }
            // validate the optional field `errors` (array)
            for (const item of data['errors']) {
                PassportElementError.validateJSON(item);
            };
        }

        return true;
    }


}

SetPassportDataErrorsPostRequest.RequiredProperties = ["errors", "user_id"];

/**
 * A JSON-serialized array describing the errors
 * @member {Array.<module:model/PassportElementError>} errors
 */
SetPassportDataErrorsPostRequest.prototype['errors'] = undefined;

/**
 * User identifier
 * @member {Number} user_id
 */
SetPassportDataErrorsPostRequest.prototype['user_id'] = undefined;






export default SetPassportDataErrorsPostRequest;

