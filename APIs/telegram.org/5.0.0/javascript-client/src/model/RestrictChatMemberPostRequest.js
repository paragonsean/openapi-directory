/**
 * Telegram Bot API
 * Auto-generated OpenAPI schema
 *
 * The version of the OpenAPI document: 5.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ChatPermissions from './ChatPermissions';
import DeleteChatStickerSetPostRequestChatId from './DeleteChatStickerSetPostRequestChatId';

/**
 * The RestrictChatMemberPostRequest model module.
 * @module model/RestrictChatMemberPostRequest
 * @version 5.0.0
 */
class RestrictChatMemberPostRequest {
    /**
     * Constructs a new <code>RestrictChatMemberPostRequest</code>.
     * @alias module:model/RestrictChatMemberPostRequest
     * @param chatId {module:model/DeleteChatStickerSetPostRequestChatId} 
     * @param permissions {module:model/ChatPermissions} 
     * @param userId {Number} Unique identifier of the target user
     */
    constructor(chatId, permissions, userId) { 
        
        RestrictChatMemberPostRequest.initialize(this, chatId, permissions, userId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, chatId, permissions, userId) { 
        obj['chat_id'] = chatId;
        obj['permissions'] = permissions;
        obj['user_id'] = userId;
    }

    /**
     * Constructs a <code>RestrictChatMemberPostRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RestrictChatMemberPostRequest} obj Optional instance to populate.
     * @return {module:model/RestrictChatMemberPostRequest} The populated <code>RestrictChatMemberPostRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RestrictChatMemberPostRequest();

            if (data.hasOwnProperty('chat_id')) {
                obj['chat_id'] = DeleteChatStickerSetPostRequestChatId.constructFromObject(data['chat_id']);
            }
            if (data.hasOwnProperty('permissions')) {
                obj['permissions'] = ChatPermissions.constructFromObject(data['permissions']);
            }
            if (data.hasOwnProperty('until_date')) {
                obj['until_date'] = ApiClient.convertToType(data['until_date'], 'Number');
            }
            if (data.hasOwnProperty('user_id')) {
                obj['user_id'] = ApiClient.convertToType(data['user_id'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RestrictChatMemberPostRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RestrictChatMemberPostRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of RestrictChatMemberPostRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `chat_id`
        if (data['chat_id']) { // data not null
          DeleteChatStickerSetPostRequestChatId.validateJSON(data['chat_id']);
        }
        // validate the optional field `permissions`
        if (data['permissions']) { // data not null
          ChatPermissions.validateJSON(data['permissions']);
        }

        return true;
    }


}

RestrictChatMemberPostRequest.RequiredProperties = ["chat_id", "permissions", "user_id"];

/**
 * @member {module:model/DeleteChatStickerSetPostRequestChatId} chat_id
 */
RestrictChatMemberPostRequest.prototype['chat_id'] = undefined;

/**
 * @member {module:model/ChatPermissions} permissions
 */
RestrictChatMemberPostRequest.prototype['permissions'] = undefined;

/**
 * Date when restrictions will be lifted for the user, unix time. If user is restricted for more than 366 days or less than 30 seconds from the current time, they are considered to be restricted forever
 * @member {Number} until_date
 */
RestrictChatMemberPostRequest.prototype['until_date'] = undefined;

/**
 * Unique identifier of the target user
 * @member {Number} user_id
 */
RestrictChatMemberPostRequest.prototype['user_id'] = undefined;






export default RestrictChatMemberPostRequest;

