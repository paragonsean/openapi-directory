/**
 * Telegram Bot API
 * Auto-generated OpenAPI schema
 *
 * The version of the OpenAPI document: 5.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AnswerCallbackQueryPostRequest model module.
 * @module model/AnswerCallbackQueryPostRequest
 * @version 5.0.0
 */
class AnswerCallbackQueryPostRequest {
    /**
     * Constructs a new <code>AnswerCallbackQueryPostRequest</code>.
     * @alias module:model/AnswerCallbackQueryPostRequest
     * @param callbackQueryId {String} Unique identifier for the query to be answered
     */
    constructor(callbackQueryId) { 
        
        AnswerCallbackQueryPostRequest.initialize(this, callbackQueryId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, callbackQueryId) { 
        obj['cache_time'] = 0;
        obj['callback_query_id'] = callbackQueryId;
        obj['show_alert'] = false;
    }

    /**
     * Constructs a <code>AnswerCallbackQueryPostRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AnswerCallbackQueryPostRequest} obj Optional instance to populate.
     * @return {module:model/AnswerCallbackQueryPostRequest} The populated <code>AnswerCallbackQueryPostRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AnswerCallbackQueryPostRequest();

            if (data.hasOwnProperty('cache_time')) {
                obj['cache_time'] = ApiClient.convertToType(data['cache_time'], 'Number');
            }
            if (data.hasOwnProperty('callback_query_id')) {
                obj['callback_query_id'] = ApiClient.convertToType(data['callback_query_id'], 'String');
            }
            if (data.hasOwnProperty('show_alert')) {
                obj['show_alert'] = ApiClient.convertToType(data['show_alert'], 'Boolean');
            }
            if (data.hasOwnProperty('text')) {
                obj['text'] = ApiClient.convertToType(data['text'], 'String');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AnswerCallbackQueryPostRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AnswerCallbackQueryPostRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AnswerCallbackQueryPostRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['callback_query_id'] && !(typeof data['callback_query_id'] === 'string' || data['callback_query_id'] instanceof String)) {
            throw new Error("Expected the field `callback_query_id` to be a primitive type in the JSON string but got " + data['callback_query_id']);
        }
        // ensure the json data is a string
        if (data['text'] && !(typeof data['text'] === 'string' || data['text'] instanceof String)) {
            throw new Error("Expected the field `text` to be a primitive type in the JSON string but got " + data['text']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }

        return true;
    }


}

AnswerCallbackQueryPostRequest.RequiredProperties = ["callback_query_id"];

/**
 * The maximum amount of time in seconds that the result of the callback query may be cached client-side. Telegram apps will support caching starting in version 3.14. Defaults to 0.
 * @member {Number} cache_time
 * @default 0
 */
AnswerCallbackQueryPostRequest.prototype['cache_time'] = 0;

/**
 * Unique identifier for the query to be answered
 * @member {String} callback_query_id
 */
AnswerCallbackQueryPostRequest.prototype['callback_query_id'] = undefined;

/**
 * If *true*, an alert will be shown by the client instead of a notification at the top of the chat screen. Defaults to *false*.
 * @member {Boolean} show_alert
 * @default false
 */
AnswerCallbackQueryPostRequest.prototype['show_alert'] = false;

/**
 * Text of the notification. If not specified, nothing will be shown to the user, 0-200 characters
 * @member {String} text
 */
AnswerCallbackQueryPostRequest.prototype['text'] = undefined;

/**
 * URL that will be opened by the user's client. If you have created a [Game](https://core.telegram.org/bots/api/#game) and accepted the conditions via [@Botfather](https://t.me/botfather), specify the URL that opens your game â€” note that this will only work if the query comes from a [*callback\\_game*](https://core.telegram.org/bots/api/#inlinekeyboardbutton) button.    Otherwise, you may use links like `t.me/your_bot?start=XXXX` that open your bot with a parameter.
 * @member {String} url
 */
AnswerCallbackQueryPostRequest.prototype['url'] = undefined;






export default AnswerCallbackQueryPostRequest;

