/**
 * Telegram Bot API
 * Auto-generated OpenAPI schema
 *
 * The version of the OpenAPI document: 5.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import KickChatMemberPostRequestChatId from './KickChatMemberPostRequestChatId';

/**
 * The KickChatMemberPostRequest model module.
 * @module model/KickChatMemberPostRequest
 * @version 5.0.0
 */
class KickChatMemberPostRequest {
    /**
     * Constructs a new <code>KickChatMemberPostRequest</code>.
     * @alias module:model/KickChatMemberPostRequest
     * @param chatId {module:model/KickChatMemberPostRequestChatId} 
     * @param userId {Number} Unique identifier of the target user
     */
    constructor(chatId, userId) { 
        
        KickChatMemberPostRequest.initialize(this, chatId, userId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, chatId, userId) { 
        obj['chat_id'] = chatId;
        obj['user_id'] = userId;
    }

    /**
     * Constructs a <code>KickChatMemberPostRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/KickChatMemberPostRequest} obj Optional instance to populate.
     * @return {module:model/KickChatMemberPostRequest} The populated <code>KickChatMemberPostRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new KickChatMemberPostRequest();

            if (data.hasOwnProperty('chat_id')) {
                obj['chat_id'] = KickChatMemberPostRequestChatId.constructFromObject(data['chat_id']);
            }
            if (data.hasOwnProperty('until_date')) {
                obj['until_date'] = ApiClient.convertToType(data['until_date'], 'Number');
            }
            if (data.hasOwnProperty('user_id')) {
                obj['user_id'] = ApiClient.convertToType(data['user_id'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>KickChatMemberPostRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>KickChatMemberPostRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of KickChatMemberPostRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `chat_id`
        if (data['chat_id']) { // data not null
          KickChatMemberPostRequestChatId.validateJSON(data['chat_id']);
        }

        return true;
    }


}

KickChatMemberPostRequest.RequiredProperties = ["chat_id", "user_id"];

/**
 * @member {module:model/KickChatMemberPostRequestChatId} chat_id
 */
KickChatMemberPostRequest.prototype['chat_id'] = undefined;

/**
 * Date when the user will be unbanned, unix time. If user is banned for more than 366 days or less than 30 seconds from the current time they are considered to be banned forever
 * @member {Number} until_date
 */
KickChatMemberPostRequest.prototype['until_date'] = undefined;

/**
 * Unique identifier of the target user
 * @member {Number} user_id
 */
KickChatMemberPostRequest.prototype['user_id'] = undefined;






export default KickChatMemberPostRequest;

