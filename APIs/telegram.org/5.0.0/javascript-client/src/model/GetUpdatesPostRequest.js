/**
 * Telegram Bot API
 * Auto-generated OpenAPI schema
 *
 * The version of the OpenAPI document: 5.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GetUpdatesPostRequest model module.
 * @module model/GetUpdatesPostRequest
 * @version 5.0.0
 */
class GetUpdatesPostRequest {
    /**
     * Constructs a new <code>GetUpdatesPostRequest</code>.
     * @alias module:model/GetUpdatesPostRequest
     */
    constructor() { 
        
        GetUpdatesPostRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
        obj['limit'] = 100;
        obj['timeout'] = 0;
    }

    /**
     * Constructs a <code>GetUpdatesPostRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetUpdatesPostRequest} obj Optional instance to populate.
     * @return {module:model/GetUpdatesPostRequest} The populated <code>GetUpdatesPostRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetUpdatesPostRequest();

            if (data.hasOwnProperty('allowed_updates')) {
                obj['allowed_updates'] = ApiClient.convertToType(data['allowed_updates'], ['String']);
            }
            if (data.hasOwnProperty('limit')) {
                obj['limit'] = ApiClient.convertToType(data['limit'], 'Number');
            }
            if (data.hasOwnProperty('offset')) {
                obj['offset'] = ApiClient.convertToType(data['offset'], 'Number');
            }
            if (data.hasOwnProperty('timeout')) {
                obj['timeout'] = ApiClient.convertToType(data['timeout'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetUpdatesPostRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetUpdatesPostRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['allowed_updates'])) {
            throw new Error("Expected the field `allowed_updates` to be an array in the JSON data but got " + data['allowed_updates']);
        }

        return true;
    }


}



/**
 * A JSON-serialized list of the update types you want your bot to receive. For example, specify [“message”, “edited\\_channel\\_post”, “callback\\_query”] to only receive updates of these types. See [Update](https://core.telegram.org/bots/api/#update) for a complete list of available update types. Specify an empty list to receive all updates regardless of type (default). If not specified, the previous setting will be used.    Please note that this parameter doesn't affect updates created before the call to the getUpdates, so unwanted updates may be received for a short period of time.
 * @member {Array.<String>} allowed_updates
 */
GetUpdatesPostRequest.prototype['allowed_updates'] = undefined;

/**
 * Limits the number of updates to be retrieved. Values between 1-100 are accepted. Defaults to 100.
 * @member {Number} limit
 * @default 100
 */
GetUpdatesPostRequest.prototype['limit'] = 100;

/**
 * Identifier of the first update to be returned. Must be greater by one than the highest among the identifiers of previously received updates. By default, updates starting with the earliest unconfirmed update are returned. An update is considered confirmed as soon as [getUpdates](https://core.telegram.org/bots/api/#getupdates) is called with an *offset* higher than its *update\\_id*. The negative offset can be specified to retrieve updates starting from *-offset* update from the end of the updates queue. All previous updates will forgotten.
 * @member {Number} offset
 */
GetUpdatesPostRequest.prototype['offset'] = undefined;

/**
 * Timeout in seconds for long polling. Defaults to 0, i.e. usual short polling. Should be positive, short polling should be used for testing purposes only.
 * @member {Number} timeout
 * @default 0
 */
GetUpdatesPostRequest.prototype['timeout'] = 0;






export default GetUpdatesPostRequest;

