/**
 * Telegram Bot API
 * Auto-generated OpenAPI schema
 *
 * The version of the OpenAPI document: 5.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CopyMessagePostRequestChatId from './CopyMessagePostRequestChatId';
import CopyMessagePostRequestReplyMarkup from './CopyMessagePostRequestReplyMarkup';

/**
 * The SendDicePostRequest model module.
 * @module model/SendDicePostRequest
 * @version 5.0.0
 */
class SendDicePostRequest {
    /**
     * Constructs a new <code>SendDicePostRequest</code>.
     * @alias module:model/SendDicePostRequest
     * @param chatId {module:model/CopyMessagePostRequestChatId} 
     */
    constructor(chatId) { 
        
        SendDicePostRequest.initialize(this, chatId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, chatId) { 
        obj['chat_id'] = chatId;
        obj['emoji'] = 'üé≤';
    }

    /**
     * Constructs a <code>SendDicePostRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SendDicePostRequest} obj Optional instance to populate.
     * @return {module:model/SendDicePostRequest} The populated <code>SendDicePostRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SendDicePostRequest();

            if (data.hasOwnProperty('allow_sending_without_reply')) {
                obj['allow_sending_without_reply'] = ApiClient.convertToType(data['allow_sending_without_reply'], 'Boolean');
            }
            if (data.hasOwnProperty('chat_id')) {
                obj['chat_id'] = CopyMessagePostRequestChatId.constructFromObject(data['chat_id']);
            }
            if (data.hasOwnProperty('disable_notification')) {
                obj['disable_notification'] = ApiClient.convertToType(data['disable_notification'], 'Boolean');
            }
            if (data.hasOwnProperty('emoji')) {
                obj['emoji'] = ApiClient.convertToType(data['emoji'], 'String');
            }
            if (data.hasOwnProperty('reply_markup')) {
                obj['reply_markup'] = CopyMessagePostRequestReplyMarkup.constructFromObject(data['reply_markup']);
            }
            if (data.hasOwnProperty('reply_to_message_id')) {
                obj['reply_to_message_id'] = ApiClient.convertToType(data['reply_to_message_id'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SendDicePostRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SendDicePostRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of SendDicePostRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `chat_id`
        if (data['chat_id']) { // data not null
          CopyMessagePostRequestChatId.validateJSON(data['chat_id']);
        }
        // ensure the json data is a string
        if (data['emoji'] && !(typeof data['emoji'] === 'string' || data['emoji'] instanceof String)) {
            throw new Error("Expected the field `emoji` to be a primitive type in the JSON string but got " + data['emoji']);
        }
        // validate the optional field `reply_markup`
        if (data['reply_markup']) { // data not null
          CopyMessagePostRequestReplyMarkup.validateJSON(data['reply_markup']);
        }

        return true;
    }


}

SendDicePostRequest.RequiredProperties = ["chat_id"];

/**
 * Pass *True*, if the message should be sent even if the specified replied-to message is not found
 * @member {Boolean} allow_sending_without_reply
 */
SendDicePostRequest.prototype['allow_sending_without_reply'] = undefined;

/**
 * @member {module:model/CopyMessagePostRequestChatId} chat_id
 */
SendDicePostRequest.prototype['chat_id'] = undefined;

/**
 * Sends the message [silently](https://telegram.org/blog/channels-2-0#silent-messages). Users will receive a notification with no sound.
 * @member {Boolean} disable_notification
 */
SendDicePostRequest.prototype['disable_notification'] = undefined;

/**
 * Emoji on which the dice throw animation is based. Currently, must be one of ‚Äú<img alt=\"üé≤\" src=\"//telegram.org/img/emoji/40/F09F8EB2.png\" height=\"20\" width=\"20\" />‚Äù, ‚Äú<img alt=\"üéØ\" src=\"//telegram.org/img/emoji/40/F09F8EAF.png\" height=\"20\" width=\"20\" />‚Äù, ‚Äú<img alt=\"üèÄ\" src=\"//telegram.org/img/emoji/40/F09F8F80.png\" height=\"20\" width=\"20\" />‚Äù, ‚Äú<img alt=\"‚öΩ\" src=\"//telegram.org/img/emoji/40/E29ABD.png\" height=\"20\" width=\"20\" />‚Äù, or ‚Äú<img alt=\"üé∞\" src=\"//telegram.org/img/emoji/40/F09F8EB0.png\" height=\"20\" width=\"20\" />‚Äù. Dice can have values 1-6 for ‚Äú<img alt=\"üé≤\" src=\"//telegram.org/img/emoji/40/F09F8EB2.png\" height=\"20\" width=\"20\" />‚Äù and ‚Äú<img alt=\"üéØ\" src=\"//telegram.org/img/emoji/40/F09F8EAF.png\" height=\"20\" width=\"20\" />‚Äù, values 1-5 for ‚Äú<img alt=\"üèÄ\" src=\"//telegram.org/img/emoji/40/F09F8F80.png\" height=\"20\" width=\"20\" />‚Äù and ‚Äú<img alt=\"‚öΩ\" src=\"//telegram.org/img/emoji/40/E29ABD.png\" height=\"20\" width=\"20\" />‚Äù, and values 1-64 for ‚Äú<img alt=\"üé∞\" src=\"//telegram.org/img/emoji/40/F09F8EB0.png\" height=\"20\" width=\"20\" />‚Äù. Defaults to ‚Äú<img alt=\"üé≤\" src=\"//telegram.org/img/emoji/40/F09F8EB2.png\" height=\"20\" width=\"20\" />‚Äù
 * @member {module:model/SendDicePostRequest.EmojiEnum} emoji
 * @default 'üé≤'
 */
SendDicePostRequest.prototype['emoji'] = 'üé≤';

/**
 * @member {module:model/CopyMessagePostRequestReplyMarkup} reply_markup
 */
SendDicePostRequest.prototype['reply_markup'] = undefined;

/**
 * If the message is a reply, ID of the original message
 * @member {Number} reply_to_message_id
 */
SendDicePostRequest.prototype['reply_to_message_id'] = undefined;





/**
 * Allowed values for the <code>emoji</code> property.
 * @enum {String}
 * @readonly
 */
SendDicePostRequest['EmojiEnum'] = {

    /**
     * value: "üé≤"
     * @const
     */
    "üé≤": "üé≤",

    /**
     * value: "üéØ"
     * @const
     */
    "üéØ": "üéØ",

    /**
     * value: "üèÄ"
     * @const
     */
    "üèÄ": "üèÄ",

    /**
     * value: "‚öΩ"
     * @const
     */
    "‚öΩ": "‚öΩ",

    /**
     * value: "üé∞"
     * @const
     */
    "üé∞": "üé∞"
};



export default SendDicePostRequest;

