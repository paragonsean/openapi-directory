/**
 * Telegram Bot API
 * Auto-generated OpenAPI schema
 *
 * The version of the OpenAPI document: 5.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import InlineQueryResult from './InlineQueryResult';

/**
 * The AnswerInlineQueryPostRequest model module.
 * @module model/AnswerInlineQueryPostRequest
 * @version 5.0.0
 */
class AnswerInlineQueryPostRequest {
    /**
     * Constructs a new <code>AnswerInlineQueryPostRequest</code>.
     * @alias module:model/AnswerInlineQueryPostRequest
     * @param inlineQueryId {String} Unique identifier for the answered query
     * @param results {Array.<module:model/InlineQueryResult>} A JSON-serialized array of results for the inline query
     */
    constructor(inlineQueryId, results) { 
        
        AnswerInlineQueryPostRequest.initialize(this, inlineQueryId, results);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, inlineQueryId, results) { 
        obj['cache_time'] = 300;
        obj['inline_query_id'] = inlineQueryId;
        obj['results'] = results;
    }

    /**
     * Constructs a <code>AnswerInlineQueryPostRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AnswerInlineQueryPostRequest} obj Optional instance to populate.
     * @return {module:model/AnswerInlineQueryPostRequest} The populated <code>AnswerInlineQueryPostRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AnswerInlineQueryPostRequest();

            if (data.hasOwnProperty('cache_time')) {
                obj['cache_time'] = ApiClient.convertToType(data['cache_time'], 'Number');
            }
            if (data.hasOwnProperty('inline_query_id')) {
                obj['inline_query_id'] = ApiClient.convertToType(data['inline_query_id'], 'String');
            }
            if (data.hasOwnProperty('is_personal')) {
                obj['is_personal'] = ApiClient.convertToType(data['is_personal'], 'Boolean');
            }
            if (data.hasOwnProperty('next_offset')) {
                obj['next_offset'] = ApiClient.convertToType(data['next_offset'], 'String');
            }
            if (data.hasOwnProperty('results')) {
                obj['results'] = ApiClient.convertToType(data['results'], [InlineQueryResult]);
            }
            if (data.hasOwnProperty('switch_pm_parameter')) {
                obj['switch_pm_parameter'] = ApiClient.convertToType(data['switch_pm_parameter'], 'String');
            }
            if (data.hasOwnProperty('switch_pm_text')) {
                obj['switch_pm_text'] = ApiClient.convertToType(data['switch_pm_text'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AnswerInlineQueryPostRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AnswerInlineQueryPostRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AnswerInlineQueryPostRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['inline_query_id'] && !(typeof data['inline_query_id'] === 'string' || data['inline_query_id'] instanceof String)) {
            throw new Error("Expected the field `inline_query_id` to be a primitive type in the JSON string but got " + data['inline_query_id']);
        }
        // ensure the json data is a string
        if (data['next_offset'] && !(typeof data['next_offset'] === 'string' || data['next_offset'] instanceof String)) {
            throw new Error("Expected the field `next_offset` to be a primitive type in the JSON string but got " + data['next_offset']);
        }
        if (data['results']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['results'])) {
                throw new Error("Expected the field `results` to be an array in the JSON data but got " + data['results']);
            }
            // validate the optional field `results` (array)
            for (const item of data['results']) {
                InlineQueryResult.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['switch_pm_parameter'] && !(typeof data['switch_pm_parameter'] === 'string' || data['switch_pm_parameter'] instanceof String)) {
            throw new Error("Expected the field `switch_pm_parameter` to be a primitive type in the JSON string but got " + data['switch_pm_parameter']);
        }
        // ensure the json data is a string
        if (data['switch_pm_text'] && !(typeof data['switch_pm_text'] === 'string' || data['switch_pm_text'] instanceof String)) {
            throw new Error("Expected the field `switch_pm_text` to be a primitive type in the JSON string but got " + data['switch_pm_text']);
        }

        return true;
    }


}

AnswerInlineQueryPostRequest.RequiredProperties = ["inline_query_id", "results"];

/**
 * The maximum amount of time in seconds that the result of the inline query may be cached on the server. Defaults to 300.
 * @member {Number} cache_time
 * @default 300
 */
AnswerInlineQueryPostRequest.prototype['cache_time'] = 300;

/**
 * Unique identifier for the answered query
 * @member {String} inline_query_id
 */
AnswerInlineQueryPostRequest.prototype['inline_query_id'] = undefined;

/**
 * Pass *True*, if results may be cached on the server side only for the user that sent the query. By default, results may be returned to any user who sends the same query
 * @member {Boolean} is_personal
 */
AnswerInlineQueryPostRequest.prototype['is_personal'] = undefined;

/**
 * Pass the offset that a client should send in the next query with the same text to receive more results. Pass an empty string if there are no more results or if you don't support pagination. Offset length can't exceed 64 bytes.
 * @member {String} next_offset
 */
AnswerInlineQueryPostRequest.prototype['next_offset'] = undefined;

/**
 * A JSON-serialized array of results for the inline query
 * @member {Array.<module:model/InlineQueryResult>} results
 */
AnswerInlineQueryPostRequest.prototype['results'] = undefined;

/**
 * [Deep-linking](/bots#deep-linking) parameter for the /start message sent to the bot when user presses the switch button. 1-64 characters, only `A-Z`, `a-z`, `0-9`, `_` and `-` are allowed.    *Example:* An inline bot that sends YouTube videos can ask the user to connect the bot to their YouTube account to adapt search results accordingly. To do this, it displays a 'Connect your YouTube account' button above the results, or even before showing any. The user presses the button, switches to a private chat with the bot and, in doing so, passes a start parameter that instructs the bot to return an oauth link. Once done, the bot can offer a [*switch\\_inline*](https://core.telegram.org/bots/api/#inlinekeyboardmarkup) button so that the user can easily return to the chat where they wanted to use the bot's inline capabilities.
 * @member {String} switch_pm_parameter
 */
AnswerInlineQueryPostRequest.prototype['switch_pm_parameter'] = undefined;

/**
 * If passed, clients will display a button with specified text that switches the user to a private chat with the bot and sends the bot a start message with the parameter *switch\\_pm\\_parameter*
 * @member {String} switch_pm_text
 */
AnswerInlineQueryPostRequest.prototype['switch_pm_text'] = undefined;






export default AnswerInlineQueryPostRequest;

