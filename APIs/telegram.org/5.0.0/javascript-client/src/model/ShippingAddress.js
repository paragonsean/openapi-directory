/**
 * Telegram Bot API
 * Auto-generated OpenAPI schema
 *
 * The version of the OpenAPI document: 5.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ShippingAddress model module.
 * @module model/ShippingAddress
 * @version 5.0.0
 */
class ShippingAddress {
    /**
     * Constructs a new <code>ShippingAddress</code>.
     * This object represents a shipping address.
     * @alias module:model/ShippingAddress
     * @param city {String} City
     * @param countryCode {String} ISO 3166-1 alpha-2 country code
     * @param postCode {String} Address post code
     * @param state {String} State, if applicable
     * @param streetLine1 {String} First line for the address
     * @param streetLine2 {String} Second line for the address
     */
    constructor(city, countryCode, postCode, state, streetLine1, streetLine2) { 
        
        ShippingAddress.initialize(this, city, countryCode, postCode, state, streetLine1, streetLine2);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, city, countryCode, postCode, state, streetLine1, streetLine2) { 
        obj['city'] = city;
        obj['country_code'] = countryCode;
        obj['post_code'] = postCode;
        obj['state'] = state;
        obj['street_line1'] = streetLine1;
        obj['street_line2'] = streetLine2;
    }

    /**
     * Constructs a <code>ShippingAddress</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ShippingAddress} obj Optional instance to populate.
     * @return {module:model/ShippingAddress} The populated <code>ShippingAddress</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ShippingAddress();

            if (data.hasOwnProperty('city')) {
                obj['city'] = ApiClient.convertToType(data['city'], 'String');
            }
            if (data.hasOwnProperty('country_code')) {
                obj['country_code'] = ApiClient.convertToType(data['country_code'], 'String');
            }
            if (data.hasOwnProperty('post_code')) {
                obj['post_code'] = ApiClient.convertToType(data['post_code'], 'String');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
            if (data.hasOwnProperty('street_line1')) {
                obj['street_line1'] = ApiClient.convertToType(data['street_line1'], 'String');
            }
            if (data.hasOwnProperty('street_line2')) {
                obj['street_line2'] = ApiClient.convertToType(data['street_line2'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ShippingAddress</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ShippingAddress</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ShippingAddress.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['city'] && !(typeof data['city'] === 'string' || data['city'] instanceof String)) {
            throw new Error("Expected the field `city` to be a primitive type in the JSON string but got " + data['city']);
        }
        // ensure the json data is a string
        if (data['country_code'] && !(typeof data['country_code'] === 'string' || data['country_code'] instanceof String)) {
            throw new Error("Expected the field `country_code` to be a primitive type in the JSON string but got " + data['country_code']);
        }
        // ensure the json data is a string
        if (data['post_code'] && !(typeof data['post_code'] === 'string' || data['post_code'] instanceof String)) {
            throw new Error("Expected the field `post_code` to be a primitive type in the JSON string but got " + data['post_code']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }
        // ensure the json data is a string
        if (data['street_line1'] && !(typeof data['street_line1'] === 'string' || data['street_line1'] instanceof String)) {
            throw new Error("Expected the field `street_line1` to be a primitive type in the JSON string but got " + data['street_line1']);
        }
        // ensure the json data is a string
        if (data['street_line2'] && !(typeof data['street_line2'] === 'string' || data['street_line2'] instanceof String)) {
            throw new Error("Expected the field `street_line2` to be a primitive type in the JSON string but got " + data['street_line2']);
        }

        return true;
    }


}

ShippingAddress.RequiredProperties = ["city", "country_code", "post_code", "state", "street_line1", "street_line2"];

/**
 * City
 * @member {String} city
 */
ShippingAddress.prototype['city'] = undefined;

/**
 * ISO 3166-1 alpha-2 country code
 * @member {String} country_code
 */
ShippingAddress.prototype['country_code'] = undefined;

/**
 * Address post code
 * @member {String} post_code
 */
ShippingAddress.prototype['post_code'] = undefined;

/**
 * State, if applicable
 * @member {String} state
 */
ShippingAddress.prototype['state'] = undefined;

/**
 * First line for the address
 * @member {String} street_line1
 */
ShippingAddress.prototype['street_line1'] = undefined;

/**
 * Second line for the address
 * @member {String} street_line2
 */
ShippingAddress.prototype['street_line2'] = undefined;






export default ShippingAddress;

