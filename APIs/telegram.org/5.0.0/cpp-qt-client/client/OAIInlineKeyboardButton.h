/**
 * Telegram Bot API
 * Auto-generated OpenAPI schema
 *
 * The version of the OpenAPI document: 5.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIInlineKeyboardButton.h
 *
 * This object represents one button of an inline keyboard. You **must** use exactly one of the optional fields.
 */

#ifndef OAIInlineKeyboardButton_H
#define OAIInlineKeyboardButton_H

#include <QJsonObject>

#include "OAILoginUrl.h"
#include <QJsonValue>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAILoginUrl;

class OAIInlineKeyboardButton : public OAIObject {
public:
    OAIInlineKeyboardButton();
    OAIInlineKeyboardButton(QString json);
    ~OAIInlineKeyboardButton() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCallbackData() const;
    void setCallbackData(const QString &callback_data);
    bool is_callback_data_Set() const;
    bool is_callback_data_Valid() const;

    QJsonValue getCallbackGame() const;
    void setCallbackGame(const QJsonValue &callback_game);
    bool is_callback_game_Set() const;
    bool is_callback_game_Valid() const;

    OAILoginUrl getLoginUrl() const;
    void setLoginUrl(const OAILoginUrl &login_url);
    bool is_login_url_Set() const;
    bool is_login_url_Valid() const;

    bool isPay() const;
    void setPay(const bool &pay);
    bool is_pay_Set() const;
    bool is_pay_Valid() const;

    QString getSwitchInlineQuery() const;
    void setSwitchInlineQuery(const QString &switch_inline_query);
    bool is_switch_inline_query_Set() const;
    bool is_switch_inline_query_Valid() const;

    QString getSwitchInlineQueryCurrentChat() const;
    void setSwitchInlineQueryCurrentChat(const QString &switch_inline_query_current_chat);
    bool is_switch_inline_query_current_chat_Set() const;
    bool is_switch_inline_query_current_chat_Valid() const;

    QString getText() const;
    void setText(const QString &text);
    bool is_text_Set() const;
    bool is_text_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_callback_data;
    bool m_callback_data_isSet;
    bool m_callback_data_isValid;

    QJsonValue m_callback_game;
    bool m_callback_game_isSet;
    bool m_callback_game_isValid;

    OAILoginUrl m_login_url;
    bool m_login_url_isSet;
    bool m_login_url_isValid;

    bool m_pay;
    bool m_pay_isSet;
    bool m_pay_isValid;

    QString m_switch_inline_query;
    bool m_switch_inline_query_isSet;
    bool m_switch_inline_query_isValid;

    QString m_switch_inline_query_current_chat;
    bool m_switch_inline_query_current_chat_isSet;
    bool m_switch_inline_query_current_chat_isValid;

    QString m_text;
    bool m_text_isSet;
    bool m_text_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIInlineKeyboardButton)

#endif // OAIInlineKeyboardButton_H
