/**
 * Telegram Bot API
 * Auto-generated OpenAPI schema
 *
 * The version of the OpenAPI document: 5.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIWebhookInfo.h
 *
 * Contains information about the current status of a webhook.
 */

#ifndef OAIWebhookInfo_H
#define OAIWebhookInfo_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIWebhookInfo : public OAIObject {
public:
    OAIWebhookInfo();
    OAIWebhookInfo(QString json);
    ~OAIWebhookInfo() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getAllowedUpdates() const;
    void setAllowedUpdates(const QList<QString> &allowed_updates);
    bool is_allowed_updates_Set() const;
    bool is_allowed_updates_Valid() const;

    bool isHasCustomCertificate() const;
    void setHasCustomCertificate(const bool &has_custom_certificate);
    bool is_has_custom_certificate_Set() const;
    bool is_has_custom_certificate_Valid() const;

    QString getIpAddress() const;
    void setIpAddress(const QString &ip_address);
    bool is_ip_address_Set() const;
    bool is_ip_address_Valid() const;

    qint32 getLastErrorDate() const;
    void setLastErrorDate(const qint32 &last_error_date);
    bool is_last_error_date_Set() const;
    bool is_last_error_date_Valid() const;

    QString getLastErrorMessage() const;
    void setLastErrorMessage(const QString &last_error_message);
    bool is_last_error_message_Set() const;
    bool is_last_error_message_Valid() const;

    qint32 getMaxConnections() const;
    void setMaxConnections(const qint32 &max_connections);
    bool is_max_connections_Set() const;
    bool is_max_connections_Valid() const;

    qint32 getPendingUpdateCount() const;
    void setPendingUpdateCount(const qint32 &pending_update_count);
    bool is_pending_update_count_Set() const;
    bool is_pending_update_count_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_allowed_updates;
    bool m_allowed_updates_isSet;
    bool m_allowed_updates_isValid;

    bool m_has_custom_certificate;
    bool m_has_custom_certificate_isSet;
    bool m_has_custom_certificate_isValid;

    QString m_ip_address;
    bool m_ip_address_isSet;
    bool m_ip_address_isValid;

    qint32 m_last_error_date;
    bool m_last_error_date_isSet;
    bool m_last_error_date_isValid;

    QString m_last_error_message;
    bool m_last_error_message_isSet;
    bool m_last_error_message_isValid;

    qint32 m_max_connections;
    bool m_max_connections_isSet;
    bool m_max_connections_isValid;

    qint32 m_pending_update_count;
    bool m_pending_update_count_isSet;
    bool m_pending_update_count_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIWebhookInfo)

#endif // OAIWebhookInfo_H
