/**
 * Telegram Bot API
 * Auto-generated OpenAPI schema
 *
 * The version of the OpenAPI document: 5.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAI_sendLocation_post_request.h
 *
 * 
 */

#ifndef OAI_sendLocation_post_request_H
#define OAI_sendLocation_post_request_H

#include <QJsonObject>

#include "OAI_copyMessage_post_request_chat_id.h"
#include "OAI_copyMessage_post_request_reply_markup.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAI_copyMessage_post_request_reply_markup;

class OAI_sendLocation_post_request : public OAIObject {
public:
    OAI_sendLocation_post_request();
    OAI_sendLocation_post_request(QString json);
    ~OAI_sendLocation_post_request() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isAllowSendingWithoutReply() const;
    void setAllowSendingWithoutReply(const bool &allow_sending_without_reply);
    bool is_allow_sending_without_reply_Set() const;
    bool is_allow_sending_without_reply_Valid() const;

    OAI_copyMessage_post_request_chat_id getChatId() const;
    void setChatId(const OAI_copyMessage_post_request_chat_id &chat_id);
    bool is_chat_id_Set() const;
    bool is_chat_id_Valid() const;

    bool isDisableNotification() const;
    void setDisableNotification(const bool &disable_notification);
    bool is_disable_notification_Set() const;
    bool is_disable_notification_Valid() const;

    qint32 getHeading() const;
    void setHeading(const qint32 &heading);
    bool is_heading_Set() const;
    bool is_heading_Valid() const;

    double getHorizontalAccuracy() const;
    void setHorizontalAccuracy(const double &horizontal_accuracy);
    bool is_horizontal_accuracy_Set() const;
    bool is_horizontal_accuracy_Valid() const;

    double getLatitude() const;
    void setLatitude(const double &latitude);
    bool is_latitude_Set() const;
    bool is_latitude_Valid() const;

    qint32 getLivePeriod() const;
    void setLivePeriod(const qint32 &live_period);
    bool is_live_period_Set() const;
    bool is_live_period_Valid() const;

    double getLongitude() const;
    void setLongitude(const double &longitude);
    bool is_longitude_Set() const;
    bool is_longitude_Valid() const;

    qint32 getProximityAlertRadius() const;
    void setProximityAlertRadius(const qint32 &proximity_alert_radius);
    bool is_proximity_alert_radius_Set() const;
    bool is_proximity_alert_radius_Valid() const;

    OAI_copyMessage_post_request_reply_markup getReplyMarkup() const;
    void setReplyMarkup(const OAI_copyMessage_post_request_reply_markup &reply_markup);
    bool is_reply_markup_Set() const;
    bool is_reply_markup_Valid() const;

    qint32 getReplyToMessageId() const;
    void setReplyToMessageId(const qint32 &reply_to_message_id);
    bool is_reply_to_message_id_Set() const;
    bool is_reply_to_message_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_allow_sending_without_reply;
    bool m_allow_sending_without_reply_isSet;
    bool m_allow_sending_without_reply_isValid;

    OAI_copyMessage_post_request_chat_id m_chat_id;
    bool m_chat_id_isSet;
    bool m_chat_id_isValid;

    bool m_disable_notification;
    bool m_disable_notification_isSet;
    bool m_disable_notification_isValid;

    qint32 m_heading;
    bool m_heading_isSet;
    bool m_heading_isValid;

    double m_horizontal_accuracy;
    bool m_horizontal_accuracy_isSet;
    bool m_horizontal_accuracy_isValid;

    double m_latitude;
    bool m_latitude_isSet;
    bool m_latitude_isValid;

    qint32 m_live_period;
    bool m_live_period_isSet;
    bool m_live_period_isValid;

    double m_longitude;
    bool m_longitude_isSet;
    bool m_longitude_isValid;

    qint32 m_proximity_alert_radius;
    bool m_proximity_alert_radius_isSet;
    bool m_proximity_alert_radius_isValid;

    OAI_copyMessage_post_request_reply_markup m_reply_markup;
    bool m_reply_markup_isSet;
    bool m_reply_markup_isValid;

    qint32 m_reply_to_message_id;
    bool m_reply_to_message_id_isSet;
    bool m_reply_to_message_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAI_sendLocation_post_request)

#endif // OAI_sendLocation_post_request_H
