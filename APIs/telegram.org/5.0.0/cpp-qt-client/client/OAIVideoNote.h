/**
 * Telegram Bot API
 * Auto-generated OpenAPI schema
 *
 * The version of the OpenAPI document: 5.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIVideoNote.h
 *
 * This object represents a [video message](https://telegram.org/blog/video-messages-and-telescope) (available in Telegram apps as of [v.4.0](https://telegram.org/blog/video-messages-and-telescope)).
 */

#ifndef OAIVideoNote_H
#define OAIVideoNote_H

#include <QJsonObject>

#include "OAIPhotoSize.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPhotoSize;

class OAIVideoNote : public OAIObject {
public:
    OAIVideoNote();
    OAIVideoNote(QString json);
    ~OAIVideoNote() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getDuration() const;
    void setDuration(const qint32 &duration);
    bool is_duration_Set() const;
    bool is_duration_Valid() const;

    QString getFileId() const;
    void setFileId(const QString &file_id);
    bool is_file_id_Set() const;
    bool is_file_id_Valid() const;

    qint32 getFileSize() const;
    void setFileSize(const qint32 &file_size);
    bool is_file_size_Set() const;
    bool is_file_size_Valid() const;

    QString getFileUniqueId() const;
    void setFileUniqueId(const QString &file_unique_id);
    bool is_file_unique_id_Set() const;
    bool is_file_unique_id_Valid() const;

    qint32 getLength() const;
    void setLength(const qint32 &length);
    bool is_length_Set() const;
    bool is_length_Valid() const;

    OAIPhotoSize getThumb() const;
    void setThumb(const OAIPhotoSize &thumb);
    bool is_thumb_Set() const;
    bool is_thumb_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_duration;
    bool m_duration_isSet;
    bool m_duration_isValid;

    QString m_file_id;
    bool m_file_id_isSet;
    bool m_file_id_isValid;

    qint32 m_file_size;
    bool m_file_size_isSet;
    bool m_file_size_isValid;

    QString m_file_unique_id;
    bool m_file_unique_id_isSet;
    bool m_file_unique_id_isValid;

    qint32 m_length;
    bool m_length_isSet;
    bool m_length_isValid;

    OAIPhotoSize m_thumb;
    bool m_thumb_isSet;
    bool m_thumb_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIVideoNote)

#endif // OAIVideoNote_H
