/**
 * Telegram Bot API
 * Auto-generated OpenAPI schema
 *
 * The version of the OpenAPI document: 5.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIChatMember.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIChatMember::OAIChatMember(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIChatMember::OAIChatMember() {
    this->initializeModel();
}

OAIChatMember::~OAIChatMember() {}

void OAIChatMember::initializeModel() {

    m_can_add_web_page_previews_isSet = false;
    m_can_add_web_page_previews_isValid = false;

    m_can_be_edited_isSet = false;
    m_can_be_edited_isValid = false;

    m_can_change_info_isSet = false;
    m_can_change_info_isValid = false;

    m_can_delete_messages_isSet = false;
    m_can_delete_messages_isValid = false;

    m_can_edit_messages_isSet = false;
    m_can_edit_messages_isValid = false;

    m_can_invite_users_isSet = false;
    m_can_invite_users_isValid = false;

    m_can_pin_messages_isSet = false;
    m_can_pin_messages_isValid = false;

    m_can_post_messages_isSet = false;
    m_can_post_messages_isValid = false;

    m_can_promote_members_isSet = false;
    m_can_promote_members_isValid = false;

    m_can_restrict_members_isSet = false;
    m_can_restrict_members_isValid = false;

    m_can_send_media_messages_isSet = false;
    m_can_send_media_messages_isValid = false;

    m_can_send_messages_isSet = false;
    m_can_send_messages_isValid = false;

    m_can_send_other_messages_isSet = false;
    m_can_send_other_messages_isValid = false;

    m_can_send_polls_isSet = false;
    m_can_send_polls_isValid = false;

    m_custom_title_isSet = false;
    m_custom_title_isValid = false;

    m_is_anonymous_isSet = false;
    m_is_anonymous_isValid = false;

    m_is_member_isSet = false;
    m_is_member_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_until_date_isSet = false;
    m_until_date_isValid = false;

    m_user_isSet = false;
    m_user_isValid = false;
}

void OAIChatMember::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIChatMember::fromJsonObject(QJsonObject json) {

    m_can_add_web_page_previews_isValid = ::OpenAPI::fromJsonValue(m_can_add_web_page_previews, json[QString("can_add_web_page_previews")]);
    m_can_add_web_page_previews_isSet = !json[QString("can_add_web_page_previews")].isNull() && m_can_add_web_page_previews_isValid;

    m_can_be_edited_isValid = ::OpenAPI::fromJsonValue(m_can_be_edited, json[QString("can_be_edited")]);
    m_can_be_edited_isSet = !json[QString("can_be_edited")].isNull() && m_can_be_edited_isValid;

    m_can_change_info_isValid = ::OpenAPI::fromJsonValue(m_can_change_info, json[QString("can_change_info")]);
    m_can_change_info_isSet = !json[QString("can_change_info")].isNull() && m_can_change_info_isValid;

    m_can_delete_messages_isValid = ::OpenAPI::fromJsonValue(m_can_delete_messages, json[QString("can_delete_messages")]);
    m_can_delete_messages_isSet = !json[QString("can_delete_messages")].isNull() && m_can_delete_messages_isValid;

    m_can_edit_messages_isValid = ::OpenAPI::fromJsonValue(m_can_edit_messages, json[QString("can_edit_messages")]);
    m_can_edit_messages_isSet = !json[QString("can_edit_messages")].isNull() && m_can_edit_messages_isValid;

    m_can_invite_users_isValid = ::OpenAPI::fromJsonValue(m_can_invite_users, json[QString("can_invite_users")]);
    m_can_invite_users_isSet = !json[QString("can_invite_users")].isNull() && m_can_invite_users_isValid;

    m_can_pin_messages_isValid = ::OpenAPI::fromJsonValue(m_can_pin_messages, json[QString("can_pin_messages")]);
    m_can_pin_messages_isSet = !json[QString("can_pin_messages")].isNull() && m_can_pin_messages_isValid;

    m_can_post_messages_isValid = ::OpenAPI::fromJsonValue(m_can_post_messages, json[QString("can_post_messages")]);
    m_can_post_messages_isSet = !json[QString("can_post_messages")].isNull() && m_can_post_messages_isValid;

    m_can_promote_members_isValid = ::OpenAPI::fromJsonValue(m_can_promote_members, json[QString("can_promote_members")]);
    m_can_promote_members_isSet = !json[QString("can_promote_members")].isNull() && m_can_promote_members_isValid;

    m_can_restrict_members_isValid = ::OpenAPI::fromJsonValue(m_can_restrict_members, json[QString("can_restrict_members")]);
    m_can_restrict_members_isSet = !json[QString("can_restrict_members")].isNull() && m_can_restrict_members_isValid;

    m_can_send_media_messages_isValid = ::OpenAPI::fromJsonValue(m_can_send_media_messages, json[QString("can_send_media_messages")]);
    m_can_send_media_messages_isSet = !json[QString("can_send_media_messages")].isNull() && m_can_send_media_messages_isValid;

    m_can_send_messages_isValid = ::OpenAPI::fromJsonValue(m_can_send_messages, json[QString("can_send_messages")]);
    m_can_send_messages_isSet = !json[QString("can_send_messages")].isNull() && m_can_send_messages_isValid;

    m_can_send_other_messages_isValid = ::OpenAPI::fromJsonValue(m_can_send_other_messages, json[QString("can_send_other_messages")]);
    m_can_send_other_messages_isSet = !json[QString("can_send_other_messages")].isNull() && m_can_send_other_messages_isValid;

    m_can_send_polls_isValid = ::OpenAPI::fromJsonValue(m_can_send_polls, json[QString("can_send_polls")]);
    m_can_send_polls_isSet = !json[QString("can_send_polls")].isNull() && m_can_send_polls_isValid;

    m_custom_title_isValid = ::OpenAPI::fromJsonValue(m_custom_title, json[QString("custom_title")]);
    m_custom_title_isSet = !json[QString("custom_title")].isNull() && m_custom_title_isValid;

    m_is_anonymous_isValid = ::OpenAPI::fromJsonValue(m_is_anonymous, json[QString("is_anonymous")]);
    m_is_anonymous_isSet = !json[QString("is_anonymous")].isNull() && m_is_anonymous_isValid;

    m_is_member_isValid = ::OpenAPI::fromJsonValue(m_is_member, json[QString("is_member")]);
    m_is_member_isSet = !json[QString("is_member")].isNull() && m_is_member_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_until_date_isValid = ::OpenAPI::fromJsonValue(m_until_date, json[QString("until_date")]);
    m_until_date_isSet = !json[QString("until_date")].isNull() && m_until_date_isValid;

    m_user_isValid = ::OpenAPI::fromJsonValue(m_user, json[QString("user")]);
    m_user_isSet = !json[QString("user")].isNull() && m_user_isValid;
}

QString OAIChatMember::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIChatMember::asJsonObject() const {
    QJsonObject obj;
    if (m_can_add_web_page_previews_isSet) {
        obj.insert(QString("can_add_web_page_previews"), ::OpenAPI::toJsonValue(m_can_add_web_page_previews));
    }
    if (m_can_be_edited_isSet) {
        obj.insert(QString("can_be_edited"), ::OpenAPI::toJsonValue(m_can_be_edited));
    }
    if (m_can_change_info_isSet) {
        obj.insert(QString("can_change_info"), ::OpenAPI::toJsonValue(m_can_change_info));
    }
    if (m_can_delete_messages_isSet) {
        obj.insert(QString("can_delete_messages"), ::OpenAPI::toJsonValue(m_can_delete_messages));
    }
    if (m_can_edit_messages_isSet) {
        obj.insert(QString("can_edit_messages"), ::OpenAPI::toJsonValue(m_can_edit_messages));
    }
    if (m_can_invite_users_isSet) {
        obj.insert(QString("can_invite_users"), ::OpenAPI::toJsonValue(m_can_invite_users));
    }
    if (m_can_pin_messages_isSet) {
        obj.insert(QString("can_pin_messages"), ::OpenAPI::toJsonValue(m_can_pin_messages));
    }
    if (m_can_post_messages_isSet) {
        obj.insert(QString("can_post_messages"), ::OpenAPI::toJsonValue(m_can_post_messages));
    }
    if (m_can_promote_members_isSet) {
        obj.insert(QString("can_promote_members"), ::OpenAPI::toJsonValue(m_can_promote_members));
    }
    if (m_can_restrict_members_isSet) {
        obj.insert(QString("can_restrict_members"), ::OpenAPI::toJsonValue(m_can_restrict_members));
    }
    if (m_can_send_media_messages_isSet) {
        obj.insert(QString("can_send_media_messages"), ::OpenAPI::toJsonValue(m_can_send_media_messages));
    }
    if (m_can_send_messages_isSet) {
        obj.insert(QString("can_send_messages"), ::OpenAPI::toJsonValue(m_can_send_messages));
    }
    if (m_can_send_other_messages_isSet) {
        obj.insert(QString("can_send_other_messages"), ::OpenAPI::toJsonValue(m_can_send_other_messages));
    }
    if (m_can_send_polls_isSet) {
        obj.insert(QString("can_send_polls"), ::OpenAPI::toJsonValue(m_can_send_polls));
    }
    if (m_custom_title_isSet) {
        obj.insert(QString("custom_title"), ::OpenAPI::toJsonValue(m_custom_title));
    }
    if (m_is_anonymous_isSet) {
        obj.insert(QString("is_anonymous"), ::OpenAPI::toJsonValue(m_is_anonymous));
    }
    if (m_is_member_isSet) {
        obj.insert(QString("is_member"), ::OpenAPI::toJsonValue(m_is_member));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_until_date_isSet) {
        obj.insert(QString("until_date"), ::OpenAPI::toJsonValue(m_until_date));
    }
    if (m_user.isSet()) {
        obj.insert(QString("user"), ::OpenAPI::toJsonValue(m_user));
    }
    return obj;
}

bool OAIChatMember::isCanAddWebPagePreviews() const {
    return m_can_add_web_page_previews;
}
void OAIChatMember::setCanAddWebPagePreviews(const bool &can_add_web_page_previews) {
    m_can_add_web_page_previews = can_add_web_page_previews;
    m_can_add_web_page_previews_isSet = true;
}

bool OAIChatMember::is_can_add_web_page_previews_Set() const{
    return m_can_add_web_page_previews_isSet;
}

bool OAIChatMember::is_can_add_web_page_previews_Valid() const{
    return m_can_add_web_page_previews_isValid;
}

bool OAIChatMember::isCanBeEdited() const {
    return m_can_be_edited;
}
void OAIChatMember::setCanBeEdited(const bool &can_be_edited) {
    m_can_be_edited = can_be_edited;
    m_can_be_edited_isSet = true;
}

bool OAIChatMember::is_can_be_edited_Set() const{
    return m_can_be_edited_isSet;
}

bool OAIChatMember::is_can_be_edited_Valid() const{
    return m_can_be_edited_isValid;
}

bool OAIChatMember::isCanChangeInfo() const {
    return m_can_change_info;
}
void OAIChatMember::setCanChangeInfo(const bool &can_change_info) {
    m_can_change_info = can_change_info;
    m_can_change_info_isSet = true;
}

bool OAIChatMember::is_can_change_info_Set() const{
    return m_can_change_info_isSet;
}

bool OAIChatMember::is_can_change_info_Valid() const{
    return m_can_change_info_isValid;
}

bool OAIChatMember::isCanDeleteMessages() const {
    return m_can_delete_messages;
}
void OAIChatMember::setCanDeleteMessages(const bool &can_delete_messages) {
    m_can_delete_messages = can_delete_messages;
    m_can_delete_messages_isSet = true;
}

bool OAIChatMember::is_can_delete_messages_Set() const{
    return m_can_delete_messages_isSet;
}

bool OAIChatMember::is_can_delete_messages_Valid() const{
    return m_can_delete_messages_isValid;
}

bool OAIChatMember::isCanEditMessages() const {
    return m_can_edit_messages;
}
void OAIChatMember::setCanEditMessages(const bool &can_edit_messages) {
    m_can_edit_messages = can_edit_messages;
    m_can_edit_messages_isSet = true;
}

bool OAIChatMember::is_can_edit_messages_Set() const{
    return m_can_edit_messages_isSet;
}

bool OAIChatMember::is_can_edit_messages_Valid() const{
    return m_can_edit_messages_isValid;
}

bool OAIChatMember::isCanInviteUsers() const {
    return m_can_invite_users;
}
void OAIChatMember::setCanInviteUsers(const bool &can_invite_users) {
    m_can_invite_users = can_invite_users;
    m_can_invite_users_isSet = true;
}

bool OAIChatMember::is_can_invite_users_Set() const{
    return m_can_invite_users_isSet;
}

bool OAIChatMember::is_can_invite_users_Valid() const{
    return m_can_invite_users_isValid;
}

bool OAIChatMember::isCanPinMessages() const {
    return m_can_pin_messages;
}
void OAIChatMember::setCanPinMessages(const bool &can_pin_messages) {
    m_can_pin_messages = can_pin_messages;
    m_can_pin_messages_isSet = true;
}

bool OAIChatMember::is_can_pin_messages_Set() const{
    return m_can_pin_messages_isSet;
}

bool OAIChatMember::is_can_pin_messages_Valid() const{
    return m_can_pin_messages_isValid;
}

bool OAIChatMember::isCanPostMessages() const {
    return m_can_post_messages;
}
void OAIChatMember::setCanPostMessages(const bool &can_post_messages) {
    m_can_post_messages = can_post_messages;
    m_can_post_messages_isSet = true;
}

bool OAIChatMember::is_can_post_messages_Set() const{
    return m_can_post_messages_isSet;
}

bool OAIChatMember::is_can_post_messages_Valid() const{
    return m_can_post_messages_isValid;
}

bool OAIChatMember::isCanPromoteMembers() const {
    return m_can_promote_members;
}
void OAIChatMember::setCanPromoteMembers(const bool &can_promote_members) {
    m_can_promote_members = can_promote_members;
    m_can_promote_members_isSet = true;
}

bool OAIChatMember::is_can_promote_members_Set() const{
    return m_can_promote_members_isSet;
}

bool OAIChatMember::is_can_promote_members_Valid() const{
    return m_can_promote_members_isValid;
}

bool OAIChatMember::isCanRestrictMembers() const {
    return m_can_restrict_members;
}
void OAIChatMember::setCanRestrictMembers(const bool &can_restrict_members) {
    m_can_restrict_members = can_restrict_members;
    m_can_restrict_members_isSet = true;
}

bool OAIChatMember::is_can_restrict_members_Set() const{
    return m_can_restrict_members_isSet;
}

bool OAIChatMember::is_can_restrict_members_Valid() const{
    return m_can_restrict_members_isValid;
}

bool OAIChatMember::isCanSendMediaMessages() const {
    return m_can_send_media_messages;
}
void OAIChatMember::setCanSendMediaMessages(const bool &can_send_media_messages) {
    m_can_send_media_messages = can_send_media_messages;
    m_can_send_media_messages_isSet = true;
}

bool OAIChatMember::is_can_send_media_messages_Set() const{
    return m_can_send_media_messages_isSet;
}

bool OAIChatMember::is_can_send_media_messages_Valid() const{
    return m_can_send_media_messages_isValid;
}

bool OAIChatMember::isCanSendMessages() const {
    return m_can_send_messages;
}
void OAIChatMember::setCanSendMessages(const bool &can_send_messages) {
    m_can_send_messages = can_send_messages;
    m_can_send_messages_isSet = true;
}

bool OAIChatMember::is_can_send_messages_Set() const{
    return m_can_send_messages_isSet;
}

bool OAIChatMember::is_can_send_messages_Valid() const{
    return m_can_send_messages_isValid;
}

bool OAIChatMember::isCanSendOtherMessages() const {
    return m_can_send_other_messages;
}
void OAIChatMember::setCanSendOtherMessages(const bool &can_send_other_messages) {
    m_can_send_other_messages = can_send_other_messages;
    m_can_send_other_messages_isSet = true;
}

bool OAIChatMember::is_can_send_other_messages_Set() const{
    return m_can_send_other_messages_isSet;
}

bool OAIChatMember::is_can_send_other_messages_Valid() const{
    return m_can_send_other_messages_isValid;
}

bool OAIChatMember::isCanSendPolls() const {
    return m_can_send_polls;
}
void OAIChatMember::setCanSendPolls(const bool &can_send_polls) {
    m_can_send_polls = can_send_polls;
    m_can_send_polls_isSet = true;
}

bool OAIChatMember::is_can_send_polls_Set() const{
    return m_can_send_polls_isSet;
}

bool OAIChatMember::is_can_send_polls_Valid() const{
    return m_can_send_polls_isValid;
}

QString OAIChatMember::getCustomTitle() const {
    return m_custom_title;
}
void OAIChatMember::setCustomTitle(const QString &custom_title) {
    m_custom_title = custom_title;
    m_custom_title_isSet = true;
}

bool OAIChatMember::is_custom_title_Set() const{
    return m_custom_title_isSet;
}

bool OAIChatMember::is_custom_title_Valid() const{
    return m_custom_title_isValid;
}

bool OAIChatMember::isIsAnonymous() const {
    return m_is_anonymous;
}
void OAIChatMember::setIsAnonymous(const bool &is_anonymous) {
    m_is_anonymous = is_anonymous;
    m_is_anonymous_isSet = true;
}

bool OAIChatMember::is_is_anonymous_Set() const{
    return m_is_anonymous_isSet;
}

bool OAIChatMember::is_is_anonymous_Valid() const{
    return m_is_anonymous_isValid;
}

bool OAIChatMember::isIsMember() const {
    return m_is_member;
}
void OAIChatMember::setIsMember(const bool &is_member) {
    m_is_member = is_member;
    m_is_member_isSet = true;
}

bool OAIChatMember::is_is_member_Set() const{
    return m_is_member_isSet;
}

bool OAIChatMember::is_is_member_Valid() const{
    return m_is_member_isValid;
}

QString OAIChatMember::getStatus() const {
    return m_status;
}
void OAIChatMember::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIChatMember::is_status_Set() const{
    return m_status_isSet;
}

bool OAIChatMember::is_status_Valid() const{
    return m_status_isValid;
}

qint32 OAIChatMember::getUntilDate() const {
    return m_until_date;
}
void OAIChatMember::setUntilDate(const qint32 &until_date) {
    m_until_date = until_date;
    m_until_date_isSet = true;
}

bool OAIChatMember::is_until_date_Set() const{
    return m_until_date_isSet;
}

bool OAIChatMember::is_until_date_Valid() const{
    return m_until_date_isValid;
}

OAIUser OAIChatMember::getUser() const {
    return m_user;
}
void OAIChatMember::setUser(const OAIUser &user) {
    m_user = user;
    m_user_isSet = true;
}

bool OAIChatMember::is_user_Set() const{
    return m_user_isSet;
}

bool OAIChatMember::is_user_Valid() const{
    return m_user_isValid;
}

bool OAIChatMember::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_can_add_web_page_previews_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_can_be_edited_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_can_change_info_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_can_delete_messages_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_can_edit_messages_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_can_invite_users_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_can_pin_messages_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_can_post_messages_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_can_promote_members_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_can_restrict_members_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_can_send_media_messages_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_can_send_messages_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_can_send_other_messages_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_can_send_polls_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_custom_title_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_anonymous_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_member_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_until_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_user.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIChatMember::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_status_isValid && m_user_isValid && true;
}

} // namespace OpenAPI
