/**
 * Telegram Bot API
 * Auto-generated OpenAPI schema
 *
 * The version of the OpenAPI document: 5.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAI_editMessageText_post_request.h
 *
 * 
 */

#ifndef OAI_editMessageText_post_request_H
#define OAI_editMessageText_post_request_H

#include <QJsonObject>

#include "OAIInlineKeyboardMarkup.h"
#include "OAIMessageEntity.h"
#include "OAI_editMessageCaption_post_request_chat_id.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIMessageEntity;
class OAIInlineKeyboardMarkup;

class OAI_editMessageText_post_request : public OAIObject {
public:
    OAI_editMessageText_post_request();
    OAI_editMessageText_post_request(QString json);
    ~OAI_editMessageText_post_request() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAI_editMessageCaption_post_request_chat_id getChatId() const;
    void setChatId(const OAI_editMessageCaption_post_request_chat_id &chat_id);
    bool is_chat_id_Set() const;
    bool is_chat_id_Valid() const;

    bool isDisableWebPagePreview() const;
    void setDisableWebPagePreview(const bool &disable_web_page_preview);
    bool is_disable_web_page_preview_Set() const;
    bool is_disable_web_page_preview_Valid() const;

    QList<OAIMessageEntity> getEntities() const;
    void setEntities(const QList<OAIMessageEntity> &entities);
    bool is_entities_Set() const;
    bool is_entities_Valid() const;

    QString getInlineMessageId() const;
    void setInlineMessageId(const QString &inline_message_id);
    bool is_inline_message_id_Set() const;
    bool is_inline_message_id_Valid() const;

    qint32 getMessageId() const;
    void setMessageId(const qint32 &message_id);
    bool is_message_id_Set() const;
    bool is_message_id_Valid() const;

    QString getParseMode() const;
    void setParseMode(const QString &parse_mode);
    bool is_parse_mode_Set() const;
    bool is_parse_mode_Valid() const;

    OAIInlineKeyboardMarkup getReplyMarkup() const;
    void setReplyMarkup(const OAIInlineKeyboardMarkup &reply_markup);
    bool is_reply_markup_Set() const;
    bool is_reply_markup_Valid() const;

    QString getText() const;
    void setText(const QString &text);
    bool is_text_Set() const;
    bool is_text_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAI_editMessageCaption_post_request_chat_id m_chat_id;
    bool m_chat_id_isSet;
    bool m_chat_id_isValid;

    bool m_disable_web_page_preview;
    bool m_disable_web_page_preview_isSet;
    bool m_disable_web_page_preview_isValid;

    QList<OAIMessageEntity> m_entities;
    bool m_entities_isSet;
    bool m_entities_isValid;

    QString m_inline_message_id;
    bool m_inline_message_id_isSet;
    bool m_inline_message_id_isValid;

    qint32 m_message_id;
    bool m_message_id_isSet;
    bool m_message_id_isValid;

    QString m_parse_mode;
    bool m_parse_mode_isSet;
    bool m_parse_mode_isValid;

    OAIInlineKeyboardMarkup m_reply_markup;
    bool m_reply_markup_isSet;
    bool m_reply_markup_isValid;

    QString m_text;
    bool m_text_isSet;
    bool m_text_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAI_editMessageText_post_request)

#endif // OAI_editMessageText_post_request_H
