/**
 * Telegram Bot API
 * Auto-generated OpenAPI schema
 *
 * The version of the OpenAPI document: 5.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEncryptedPassportElement.h
 *
 * Contains information about documents or other Telegram Passport elements shared with the bot by the user.
 */

#ifndef OAIEncryptedPassportElement_H
#define OAIEncryptedPassportElement_H

#include <QJsonObject>

#include "OAIPassportFile.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPassportFile;

class OAIEncryptedPassportElement : public OAIObject {
public:
    OAIEncryptedPassportElement();
    OAIEncryptedPassportElement(QString json);
    ~OAIEncryptedPassportElement() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getData() const;
    void setData(const QString &data);
    bool is_data_Set() const;
    bool is_data_Valid() const;

    QString getEmail() const;
    void setEmail(const QString &email);
    bool is_email_Set() const;
    bool is_email_Valid() const;

    QList<OAIPassportFile> getFiles() const;
    void setFiles(const QList<OAIPassportFile> &files);
    bool is_files_Set() const;
    bool is_files_Valid() const;

    OAIPassportFile getFrontSide() const;
    void setFrontSide(const OAIPassportFile &front_side);
    bool is_front_side_Set() const;
    bool is_front_side_Valid() const;

    QString getHash() const;
    void setHash(const QString &hash);
    bool is_hash_Set() const;
    bool is_hash_Valid() const;

    QString getPhoneNumber() const;
    void setPhoneNumber(const QString &phone_number);
    bool is_phone_number_Set() const;
    bool is_phone_number_Valid() const;

    OAIPassportFile getReverseSide() const;
    void setReverseSide(const OAIPassportFile &reverse_side);
    bool is_reverse_side_Set() const;
    bool is_reverse_side_Valid() const;

    OAIPassportFile getSelfie() const;
    void setSelfie(const OAIPassportFile &selfie);
    bool is_selfie_Set() const;
    bool is_selfie_Valid() const;

    QList<OAIPassportFile> getTranslation() const;
    void setTranslation(const QList<OAIPassportFile> &translation);
    bool is_translation_Set() const;
    bool is_translation_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_data;
    bool m_data_isSet;
    bool m_data_isValid;

    QString m_email;
    bool m_email_isSet;
    bool m_email_isValid;

    QList<OAIPassportFile> m_files;
    bool m_files_isSet;
    bool m_files_isValid;

    OAIPassportFile m_front_side;
    bool m_front_side_isSet;
    bool m_front_side_isValid;

    QString m_hash;
    bool m_hash_isSet;
    bool m_hash_isValid;

    QString m_phone_number;
    bool m_phone_number_isSet;
    bool m_phone_number_isValid;

    OAIPassportFile m_reverse_side;
    bool m_reverse_side_isSet;
    bool m_reverse_side_isValid;

    OAIPassportFile m_selfie;
    bool m_selfie_isSet;
    bool m_selfie_isValid;

    QList<OAIPassportFile> m_translation;
    bool m_translation_isSet;
    bool m_translation_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEncryptedPassportElement)

#endif // OAIEncryptedPassportElement_H
