/**
 * Telegram Bot API
 * Auto-generated OpenAPI schema
 *
 * The version of the OpenAPI document: 5.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIReplyKeyboardMarkup.h
 *
 * This object represents a [custom keyboard](https://core.telegram.org/bots#keyboards) with reply options (see [Introduction to bots](https://core.telegram.org/bots#keyboards) for details and examples).
 */

#ifndef OAIReplyKeyboardMarkup_H
#define OAIReplyKeyboardMarkup_H

#include <QJsonObject>

#include "OAIKeyboardButton.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIKeyboardButton;

class OAIReplyKeyboardMarkup : public OAIObject {
public:
    OAIReplyKeyboardMarkup();
    OAIReplyKeyboardMarkup(QString json);
    ~OAIReplyKeyboardMarkup() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QList<OAIKeyboardButton>> getKeyboard() const;
    void setKeyboard(const QList<QList<OAIKeyboardButton>> &keyboard);
    bool is_keyboard_Set() const;
    bool is_keyboard_Valid() const;

    bool isOneTimeKeyboard() const;
    void setOneTimeKeyboard(const bool &one_time_keyboard);
    bool is_one_time_keyboard_Set() const;
    bool is_one_time_keyboard_Valid() const;

    bool isResizeKeyboard() const;
    void setResizeKeyboard(const bool &resize_keyboard);
    bool is_resize_keyboard_Set() const;
    bool is_resize_keyboard_Valid() const;

    bool isSelective() const;
    void setSelective(const bool &selective);
    bool is_selective_Set() const;
    bool is_selective_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QList<OAIKeyboardButton>> m_keyboard;
    bool m_keyboard_isSet;
    bool m_keyboard_isValid;

    bool m_one_time_keyboard;
    bool m_one_time_keyboard_isSet;
    bool m_one_time_keyboard_isValid;

    bool m_resize_keyboard;
    bool m_resize_keyboard_isSet;
    bool m_resize_keyboard_isValid;

    bool m_selective;
    bool m_selective_isSet;
    bool m_selective_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIReplyKeyboardMarkup)

#endif // OAIReplyKeyboardMarkup_H
