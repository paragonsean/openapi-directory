/**
 * Telegram Bot API
 * Auto-generated OpenAPI schema
 *
 * The version of the OpenAPI document: 5.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIStickerSet.h
 *
 * This object represents a sticker set.
 */

#ifndef OAIStickerSet_H
#define OAIStickerSet_H

#include <QJsonObject>

#include "OAIPhotoSize.h"
#include "OAISticker.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISticker;
class OAIPhotoSize;

class OAIStickerSet : public OAIObject {
public:
    OAIStickerSet();
    OAIStickerSet(QString json);
    ~OAIStickerSet() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isContainsMasks() const;
    void setContainsMasks(const bool &contains_masks);
    bool is_contains_masks_Set() const;
    bool is_contains_masks_Valid() const;

    bool isIsAnimated() const;
    void setIsAnimated(const bool &is_animated);
    bool is_is_animated_Set() const;
    bool is_is_animated_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QList<OAISticker> getStickers() const;
    void setStickers(const QList<OAISticker> &stickers);
    bool is_stickers_Set() const;
    bool is_stickers_Valid() const;

    OAIPhotoSize getThumb() const;
    void setThumb(const OAIPhotoSize &thumb);
    bool is_thumb_Set() const;
    bool is_thumb_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_contains_masks;
    bool m_contains_masks_isSet;
    bool m_contains_masks_isValid;

    bool m_is_animated;
    bool m_is_animated_isSet;
    bool m_is_animated_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QList<OAISticker> m_stickers;
    bool m_stickers_isSet;
    bool m_stickers_isValid;

    OAIPhotoSize m_thumb;
    bool m_thumb_isSet;
    bool m_thumb_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIStickerSet)

#endif // OAIStickerSet_H
