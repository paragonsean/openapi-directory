/**
 * Telegram Bot API
 * Auto-generated OpenAPI schema
 *
 * The version of the OpenAPI document: 5.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPassportElementError.h
 *
 * This object represents an error in the Telegram Passport element which was submitted that should be resolved by the user. It should be one of:
 */

#ifndef OAIPassportElementError_H
#define OAIPassportElementError_H

#include <QJsonObject>

#include "OAIPassportElementErrorDataField.h"
#include "OAIPassportElementErrorFile.h"
#include "OAIPassportElementErrorFiles.h"
#include "OAIPassportElementErrorFrontSide.h"
#include "OAIPassportElementErrorReverseSide.h"
#include "OAIPassportElementErrorSelfie.h"
#include "OAIPassportElementErrorTranslationFile.h"
#include "OAIPassportElementErrorTranslationFiles.h"
#include "OAIPassportElementErrorUnspecified.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPassportElementError : public OAIObject {
public:
    OAIPassportElementError();
    OAIPassportElementError(QString json);
    ~OAIPassportElementError() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDataHash() const;
    void setDataHash(const QString &data_hash);
    bool is_data_hash_Set() const;
    bool is_data_hash_Valid() const;

    QString getFieldName() const;
    void setFieldName(const QString &field_name);
    bool is_field_name_Set() const;
    bool is_field_name_Valid() const;

    QString getMessage() const;
    void setMessage(const QString &message);
    bool is_message_Set() const;
    bool is_message_Valid() const;

    QString getSource() const;
    void setSource(const QString &source);
    bool is_source_Set() const;
    bool is_source_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getFileHash() const;
    void setFileHash(const QString &file_hash);
    bool is_file_hash_Set() const;
    bool is_file_hash_Valid() const;

    QList<QString> getFileHashes() const;
    void setFileHashes(const QList<QString> &file_hashes);
    bool is_file_hashes_Set() const;
    bool is_file_hashes_Valid() const;

    QString getElementHash() const;
    void setElementHash(const QString &element_hash);
    bool is_element_hash_Set() const;
    bool is_element_hash_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_data_hash;
    bool m_data_hash_isSet;
    bool m_data_hash_isValid;

    QString m_field_name;
    bool m_field_name_isSet;
    bool m_field_name_isValid;

    QString m_message;
    bool m_message_isSet;
    bool m_message_isValid;

    QString m_source;
    bool m_source_isSet;
    bool m_source_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_file_hash;
    bool m_file_hash_isSet;
    bool m_file_hash_isValid;

    QList<QString> m_file_hashes;
    bool m_file_hashes_isSet;
    bool m_file_hashes_isValid;

    QString m_element_hash;
    bool m_element_hash_isSet;
    bool m_element_hash_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPassportElementError)

#endif // OAIPassportElementError_H
