/**
 * Telegram Bot API
 * Auto-generated OpenAPI schema
 *
 * The version of the OpenAPI document: 5.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIChat.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIChat::OAIChat(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIChat::OAIChat() {
    this->initializeModel();
}

OAIChat::~OAIChat() {}

void OAIChat::initializeModel() {

    m_bio_isSet = false;
    m_bio_isValid = false;

    m_can_set_sticker_set_isSet = false;
    m_can_set_sticker_set_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_first_name_isSet = false;
    m_first_name_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_invite_link_isSet = false;
    m_invite_link_isValid = false;

    m_last_name_isSet = false;
    m_last_name_isValid = false;

    m_linked_chat_id_isSet = false;
    m_linked_chat_id_isValid = false;

    m_location_isSet = false;
    m_location_isValid = false;

    m_permissions_isSet = false;
    m_permissions_isValid = false;

    m_photo_isSet = false;
    m_photo_isValid = false;

    m_pinned_message_isSet = false;
    m_pinned_message_isValid = false;

    m_slow_mode_delay_isSet = false;
    m_slow_mode_delay_isValid = false;

    m_sticker_set_name_isSet = false;
    m_sticker_set_name_isValid = false;

    m_title_isSet = false;
    m_title_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;

    m_username_isSet = false;
    m_username_isValid = false;
}

void OAIChat::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIChat::fromJsonObject(QJsonObject json) {

    m_bio_isValid = ::OpenAPI::fromJsonValue(m_bio, json[QString("bio")]);
    m_bio_isSet = !json[QString("bio")].isNull() && m_bio_isValid;

    m_can_set_sticker_set_isValid = ::OpenAPI::fromJsonValue(m_can_set_sticker_set, json[QString("can_set_sticker_set")]);
    m_can_set_sticker_set_isSet = !json[QString("can_set_sticker_set")].isNull() && m_can_set_sticker_set_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_first_name_isValid = ::OpenAPI::fromJsonValue(m_first_name, json[QString("first_name")]);
    m_first_name_isSet = !json[QString("first_name")].isNull() && m_first_name_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_invite_link_isValid = ::OpenAPI::fromJsonValue(m_invite_link, json[QString("invite_link")]);
    m_invite_link_isSet = !json[QString("invite_link")].isNull() && m_invite_link_isValid;

    m_last_name_isValid = ::OpenAPI::fromJsonValue(m_last_name, json[QString("last_name")]);
    m_last_name_isSet = !json[QString("last_name")].isNull() && m_last_name_isValid;

    m_linked_chat_id_isValid = ::OpenAPI::fromJsonValue(m_linked_chat_id, json[QString("linked_chat_id")]);
    m_linked_chat_id_isSet = !json[QString("linked_chat_id")].isNull() && m_linked_chat_id_isValid;

    m_location_isValid = ::OpenAPI::fromJsonValue(m_location, json[QString("location")]);
    m_location_isSet = !json[QString("location")].isNull() && m_location_isValid;

    m_permissions_isValid = ::OpenAPI::fromJsonValue(m_permissions, json[QString("permissions")]);
    m_permissions_isSet = !json[QString("permissions")].isNull() && m_permissions_isValid;

    m_photo_isValid = ::OpenAPI::fromJsonValue(m_photo, json[QString("photo")]);
    m_photo_isSet = !json[QString("photo")].isNull() && m_photo_isValid;

    m_pinned_message_isValid = ::OpenAPI::fromJsonValue(m_pinned_message, json[QString("pinned_message")]);
    m_pinned_message_isSet = !json[QString("pinned_message")].isNull() && m_pinned_message_isValid;

    m_slow_mode_delay_isValid = ::OpenAPI::fromJsonValue(m_slow_mode_delay, json[QString("slow_mode_delay")]);
    m_slow_mode_delay_isSet = !json[QString("slow_mode_delay")].isNull() && m_slow_mode_delay_isValid;

    m_sticker_set_name_isValid = ::OpenAPI::fromJsonValue(m_sticker_set_name, json[QString("sticker_set_name")]);
    m_sticker_set_name_isSet = !json[QString("sticker_set_name")].isNull() && m_sticker_set_name_isValid;

    m_title_isValid = ::OpenAPI::fromJsonValue(m_title, json[QString("title")]);
    m_title_isSet = !json[QString("title")].isNull() && m_title_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;

    m_username_isValid = ::OpenAPI::fromJsonValue(m_username, json[QString("username")]);
    m_username_isSet = !json[QString("username")].isNull() && m_username_isValid;
}

QString OAIChat::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIChat::asJsonObject() const {
    QJsonObject obj;
    if (m_bio_isSet) {
        obj.insert(QString("bio"), ::OpenAPI::toJsonValue(m_bio));
    }
    if (m_can_set_sticker_set_isSet) {
        obj.insert(QString("can_set_sticker_set"), ::OpenAPI::toJsonValue(m_can_set_sticker_set));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_first_name_isSet) {
        obj.insert(QString("first_name"), ::OpenAPI::toJsonValue(m_first_name));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_invite_link_isSet) {
        obj.insert(QString("invite_link"), ::OpenAPI::toJsonValue(m_invite_link));
    }
    if (m_last_name_isSet) {
        obj.insert(QString("last_name"), ::OpenAPI::toJsonValue(m_last_name));
    }
    if (m_linked_chat_id_isSet) {
        obj.insert(QString("linked_chat_id"), ::OpenAPI::toJsonValue(m_linked_chat_id));
    }
    if (m_location.isSet()) {
        obj.insert(QString("location"), ::OpenAPI::toJsonValue(m_location));
    }
    if (m_permissions.isSet()) {
        obj.insert(QString("permissions"), ::OpenAPI::toJsonValue(m_permissions));
    }
    if (m_photo.isSet()) {
        obj.insert(QString("photo"), ::OpenAPI::toJsonValue(m_photo));
    }
    if (m_pinned_message.isSet()) {
        obj.insert(QString("pinned_message"), ::OpenAPI::toJsonValue(m_pinned_message));
    }
    if (m_slow_mode_delay_isSet) {
        obj.insert(QString("slow_mode_delay"), ::OpenAPI::toJsonValue(m_slow_mode_delay));
    }
    if (m_sticker_set_name_isSet) {
        obj.insert(QString("sticker_set_name"), ::OpenAPI::toJsonValue(m_sticker_set_name));
    }
    if (m_title_isSet) {
        obj.insert(QString("title"), ::OpenAPI::toJsonValue(m_title));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    if (m_username_isSet) {
        obj.insert(QString("username"), ::OpenAPI::toJsonValue(m_username));
    }
    return obj;
}

QString OAIChat::getBio() const {
    return m_bio;
}
void OAIChat::setBio(const QString &bio) {
    m_bio = bio;
    m_bio_isSet = true;
}

bool OAIChat::is_bio_Set() const{
    return m_bio_isSet;
}

bool OAIChat::is_bio_Valid() const{
    return m_bio_isValid;
}

bool OAIChat::isCanSetStickerSet() const {
    return m_can_set_sticker_set;
}
void OAIChat::setCanSetStickerSet(const bool &can_set_sticker_set) {
    m_can_set_sticker_set = can_set_sticker_set;
    m_can_set_sticker_set_isSet = true;
}

bool OAIChat::is_can_set_sticker_set_Set() const{
    return m_can_set_sticker_set_isSet;
}

bool OAIChat::is_can_set_sticker_set_Valid() const{
    return m_can_set_sticker_set_isValid;
}

QString OAIChat::getDescription() const {
    return m_description;
}
void OAIChat::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIChat::is_description_Set() const{
    return m_description_isSet;
}

bool OAIChat::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIChat::getFirstName() const {
    return m_first_name;
}
void OAIChat::setFirstName(const QString &first_name) {
    m_first_name = first_name;
    m_first_name_isSet = true;
}

bool OAIChat::is_first_name_Set() const{
    return m_first_name_isSet;
}

bool OAIChat::is_first_name_Valid() const{
    return m_first_name_isValid;
}

qint32 OAIChat::getId() const {
    return m_id;
}
void OAIChat::setId(const qint32 &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIChat::is_id_Set() const{
    return m_id_isSet;
}

bool OAIChat::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIChat::getInviteLink() const {
    return m_invite_link;
}
void OAIChat::setInviteLink(const QString &invite_link) {
    m_invite_link = invite_link;
    m_invite_link_isSet = true;
}

bool OAIChat::is_invite_link_Set() const{
    return m_invite_link_isSet;
}

bool OAIChat::is_invite_link_Valid() const{
    return m_invite_link_isValid;
}

QString OAIChat::getLastName() const {
    return m_last_name;
}
void OAIChat::setLastName(const QString &last_name) {
    m_last_name = last_name;
    m_last_name_isSet = true;
}

bool OAIChat::is_last_name_Set() const{
    return m_last_name_isSet;
}

bool OAIChat::is_last_name_Valid() const{
    return m_last_name_isValid;
}

qint32 OAIChat::getLinkedChatId() const {
    return m_linked_chat_id;
}
void OAIChat::setLinkedChatId(const qint32 &linked_chat_id) {
    m_linked_chat_id = linked_chat_id;
    m_linked_chat_id_isSet = true;
}

bool OAIChat::is_linked_chat_id_Set() const{
    return m_linked_chat_id_isSet;
}

bool OAIChat::is_linked_chat_id_Valid() const{
    return m_linked_chat_id_isValid;
}

OAIChatLocation OAIChat::getLocation() const {
    return m_location;
}
void OAIChat::setLocation(const OAIChatLocation &location) {
    m_location = location;
    m_location_isSet = true;
}

bool OAIChat::is_location_Set() const{
    return m_location_isSet;
}

bool OAIChat::is_location_Valid() const{
    return m_location_isValid;
}

OAIChatPermissions OAIChat::getPermissions() const {
    return m_permissions;
}
void OAIChat::setPermissions(const OAIChatPermissions &permissions) {
    m_permissions = permissions;
    m_permissions_isSet = true;
}

bool OAIChat::is_permissions_Set() const{
    return m_permissions_isSet;
}

bool OAIChat::is_permissions_Valid() const{
    return m_permissions_isValid;
}

OAIChatPhoto OAIChat::getPhoto() const {
    return m_photo;
}
void OAIChat::setPhoto(const OAIChatPhoto &photo) {
    m_photo = photo;
    m_photo_isSet = true;
}

bool OAIChat::is_photo_Set() const{
    return m_photo_isSet;
}

bool OAIChat::is_photo_Valid() const{
    return m_photo_isValid;
}

OAIMessage OAIChat::getPinnedMessage() const {
    return m_pinned_message;
}
void OAIChat::setPinnedMessage(const OAIMessage &pinned_message) {
    m_pinned_message = pinned_message;
    m_pinned_message_isSet = true;
}

bool OAIChat::is_pinned_message_Set() const{
    return m_pinned_message_isSet;
}

bool OAIChat::is_pinned_message_Valid() const{
    return m_pinned_message_isValid;
}

qint32 OAIChat::getSlowModeDelay() const {
    return m_slow_mode_delay;
}
void OAIChat::setSlowModeDelay(const qint32 &slow_mode_delay) {
    m_slow_mode_delay = slow_mode_delay;
    m_slow_mode_delay_isSet = true;
}

bool OAIChat::is_slow_mode_delay_Set() const{
    return m_slow_mode_delay_isSet;
}

bool OAIChat::is_slow_mode_delay_Valid() const{
    return m_slow_mode_delay_isValid;
}

QString OAIChat::getStickerSetName() const {
    return m_sticker_set_name;
}
void OAIChat::setStickerSetName(const QString &sticker_set_name) {
    m_sticker_set_name = sticker_set_name;
    m_sticker_set_name_isSet = true;
}

bool OAIChat::is_sticker_set_name_Set() const{
    return m_sticker_set_name_isSet;
}

bool OAIChat::is_sticker_set_name_Valid() const{
    return m_sticker_set_name_isValid;
}

QString OAIChat::getTitle() const {
    return m_title;
}
void OAIChat::setTitle(const QString &title) {
    m_title = title;
    m_title_isSet = true;
}

bool OAIChat::is_title_Set() const{
    return m_title_isSet;
}

bool OAIChat::is_title_Valid() const{
    return m_title_isValid;
}

QString OAIChat::getType() const {
    return m_type;
}
void OAIChat::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIChat::is_type_Set() const{
    return m_type_isSet;
}

bool OAIChat::is_type_Valid() const{
    return m_type_isValid;
}

QString OAIChat::getUsername() const {
    return m_username;
}
void OAIChat::setUsername(const QString &username) {
    m_username = username;
    m_username_isSet = true;
}

bool OAIChat::is_username_Set() const{
    return m_username_isSet;
}

bool OAIChat::is_username_Valid() const{
    return m_username_isValid;
}

bool OAIChat::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_bio_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_can_set_sticker_set_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_first_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_invite_link_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_linked_chat_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_location.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_permissions.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_photo.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_pinned_message.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_slow_mode_delay_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sticker_set_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_title_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_username_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIChat::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_id_isValid && m_type_isValid && true;
}

} // namespace OpenAPI
