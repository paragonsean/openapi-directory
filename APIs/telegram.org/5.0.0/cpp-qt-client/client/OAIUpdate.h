/**
 * Telegram Bot API
 * Auto-generated OpenAPI schema
 *
 * The version of the OpenAPI document: 5.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpdate.h
 *
 * This [object](https://core.telegram.org/bots/api/#available-types) represents an incoming update.   At most **one** of the optional parameters can be present in any given update.
 */

#ifndef OAIUpdate_H
#define OAIUpdate_H

#include <QJsonObject>

#include "OAICallbackQuery.h"
#include "OAIChosenInlineResult.h"
#include "OAIInlineQuery.h"
#include "OAIMessage.h"
#include "OAIPoll.h"
#include "OAIPollAnswer.h"
#include "OAIPreCheckoutQuery.h"
#include "OAIShippingQuery.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICallbackQuery;
class OAIMessage;
class OAIChosenInlineResult;
class OAIInlineQuery;
class OAIPoll;
class OAIPollAnswer;
class OAIPreCheckoutQuery;
class OAIShippingQuery;

class OAIUpdate : public OAIObject {
public:
    OAIUpdate();
    OAIUpdate(QString json);
    ~OAIUpdate() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAICallbackQuery getCallbackQuery() const;
    void setCallbackQuery(const OAICallbackQuery &callback_query);
    bool is_callback_query_Set() const;
    bool is_callback_query_Valid() const;

    OAIMessage getChannelPost() const;
    void setChannelPost(const OAIMessage &channel_post);
    bool is_channel_post_Set() const;
    bool is_channel_post_Valid() const;

    OAIChosenInlineResult getChosenInlineResult() const;
    void setChosenInlineResult(const OAIChosenInlineResult &chosen_inline_result);
    bool is_chosen_inline_result_Set() const;
    bool is_chosen_inline_result_Valid() const;

    OAIMessage getEditedChannelPost() const;
    void setEditedChannelPost(const OAIMessage &edited_channel_post);
    bool is_edited_channel_post_Set() const;
    bool is_edited_channel_post_Valid() const;

    OAIMessage getEditedMessage() const;
    void setEditedMessage(const OAIMessage &edited_message);
    bool is_edited_message_Set() const;
    bool is_edited_message_Valid() const;

    OAIInlineQuery getInlineQuery() const;
    void setInlineQuery(const OAIInlineQuery &inline_query);
    bool is_inline_query_Set() const;
    bool is_inline_query_Valid() const;

    OAIMessage getMessage() const;
    void setMessage(const OAIMessage &message);
    bool is_message_Set() const;
    bool is_message_Valid() const;

    OAIPoll getPoll() const;
    void setPoll(const OAIPoll &poll);
    bool is_poll_Set() const;
    bool is_poll_Valid() const;

    OAIPollAnswer getPollAnswer() const;
    void setPollAnswer(const OAIPollAnswer &poll_answer);
    bool is_poll_answer_Set() const;
    bool is_poll_answer_Valid() const;

    OAIPreCheckoutQuery getPreCheckoutQuery() const;
    void setPreCheckoutQuery(const OAIPreCheckoutQuery &pre_checkout_query);
    bool is_pre_checkout_query_Set() const;
    bool is_pre_checkout_query_Valid() const;

    OAIShippingQuery getShippingQuery() const;
    void setShippingQuery(const OAIShippingQuery &shipping_query);
    bool is_shipping_query_Set() const;
    bool is_shipping_query_Valid() const;

    qint32 getUpdateId() const;
    void setUpdateId(const qint32 &update_id);
    bool is_update_id_Set() const;
    bool is_update_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAICallbackQuery m_callback_query;
    bool m_callback_query_isSet;
    bool m_callback_query_isValid;

    OAIMessage m_channel_post;
    bool m_channel_post_isSet;
    bool m_channel_post_isValid;

    OAIChosenInlineResult m_chosen_inline_result;
    bool m_chosen_inline_result_isSet;
    bool m_chosen_inline_result_isValid;

    OAIMessage m_edited_channel_post;
    bool m_edited_channel_post_isSet;
    bool m_edited_channel_post_isValid;

    OAIMessage m_edited_message;
    bool m_edited_message_isSet;
    bool m_edited_message_isValid;

    OAIInlineQuery m_inline_query;
    bool m_inline_query_isSet;
    bool m_inline_query_isValid;

    OAIMessage m_message;
    bool m_message_isSet;
    bool m_message_isValid;

    OAIPoll m_poll;
    bool m_poll_isSet;
    bool m_poll_isValid;

    OAIPollAnswer m_poll_answer;
    bool m_poll_answer_isSet;
    bool m_poll_answer_isValid;

    OAIPreCheckoutQuery m_pre_checkout_query;
    bool m_pre_checkout_query_isSet;
    bool m_pre_checkout_query_isValid;

    OAIShippingQuery m_shipping_query;
    bool m_shipping_query_isSet;
    bool m_shipping_query_isValid;

    qint32 m_update_id;
    bool m_update_id_isSet;
    bool m_update_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpdate)

#endif // OAIUpdate_H
