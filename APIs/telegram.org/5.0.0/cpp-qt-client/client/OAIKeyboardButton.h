/**
 * Telegram Bot API
 * Auto-generated OpenAPI schema
 *
 * The version of the OpenAPI document: 5.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIKeyboardButton.h
 *
 * This object represents one button of the reply keyboard. For simple text buttons *String* can be used instead of this object to specify text of the button. Optional fields *request\\_contact*, *request\\_location*, and *request\\_poll* are mutually exclusive.
 */

#ifndef OAIKeyboardButton_H
#define OAIKeyboardButton_H

#include <QJsonObject>

#include "OAIKeyboardButtonPollType.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIKeyboardButtonPollType;

class OAIKeyboardButton : public OAIObject {
public:
    OAIKeyboardButton();
    OAIKeyboardButton(QString json);
    ~OAIKeyboardButton() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isRequestContact() const;
    void setRequestContact(const bool &request_contact);
    bool is_request_contact_Set() const;
    bool is_request_contact_Valid() const;

    bool isRequestLocation() const;
    void setRequestLocation(const bool &request_location);
    bool is_request_location_Set() const;
    bool is_request_location_Valid() const;

    OAIKeyboardButtonPollType getRequestPoll() const;
    void setRequestPoll(const OAIKeyboardButtonPollType &request_poll);
    bool is_request_poll_Set() const;
    bool is_request_poll_Valid() const;

    QString getText() const;
    void setText(const QString &text);
    bool is_text_Set() const;
    bool is_text_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_request_contact;
    bool m_request_contact_isSet;
    bool m_request_contact_isValid;

    bool m_request_location;
    bool m_request_location_isSet;
    bool m_request_location_isValid;

    OAIKeyboardButtonPollType m_request_poll;
    bool m_request_poll_isSet;
    bool m_request_poll_isValid;

    QString m_text;
    bool m_text_isSet;
    bool m_text_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIKeyboardButton)

#endif // OAIKeyboardButton_H
