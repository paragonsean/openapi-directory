/**
 * Telegram Bot API
 * Auto-generated OpenAPI schema
 *
 * The version of the OpenAPI document: 5.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAI_sendInvoice_post_request.h
 *
 * 
 */

#ifndef OAI_sendInvoice_post_request_H
#define OAI_sendInvoice_post_request_H

#include <QJsonObject>

#include "OAIInlineKeyboardMarkup.h"
#include "OAILabeledPrice.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAILabeledPrice;
class OAIInlineKeyboardMarkup;

class OAI_sendInvoice_post_request : public OAIObject {
public:
    OAI_sendInvoice_post_request();
    OAI_sendInvoice_post_request(QString json);
    ~OAI_sendInvoice_post_request() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isAllowSendingWithoutReply() const;
    void setAllowSendingWithoutReply(const bool &allow_sending_without_reply);
    bool is_allow_sending_without_reply_Set() const;
    bool is_allow_sending_without_reply_Valid() const;

    qint32 getChatId() const;
    void setChatId(const qint32 &chat_id);
    bool is_chat_id_Set() const;
    bool is_chat_id_Valid() const;

    QString getCurrency() const;
    void setCurrency(const QString &currency);
    bool is_currency_Set() const;
    bool is_currency_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    bool isDisableNotification() const;
    void setDisableNotification(const bool &disable_notification);
    bool is_disable_notification_Set() const;
    bool is_disable_notification_Valid() const;

    bool isIsFlexible() const;
    void setIsFlexible(const bool &is_flexible);
    bool is_is_flexible_Set() const;
    bool is_is_flexible_Valid() const;

    bool isNeedEmail() const;
    void setNeedEmail(const bool &need_email);
    bool is_need_email_Set() const;
    bool is_need_email_Valid() const;

    bool isNeedName() const;
    void setNeedName(const bool &need_name);
    bool is_need_name_Set() const;
    bool is_need_name_Valid() const;

    bool isNeedPhoneNumber() const;
    void setNeedPhoneNumber(const bool &need_phone_number);
    bool is_need_phone_number_Set() const;
    bool is_need_phone_number_Valid() const;

    bool isNeedShippingAddress() const;
    void setNeedShippingAddress(const bool &need_shipping_address);
    bool is_need_shipping_address_Set() const;
    bool is_need_shipping_address_Valid() const;

    QString getPayload() const;
    void setPayload(const QString &payload);
    bool is_payload_Set() const;
    bool is_payload_Valid() const;

    qint32 getPhotoHeight() const;
    void setPhotoHeight(const qint32 &photo_height);
    bool is_photo_height_Set() const;
    bool is_photo_height_Valid() const;

    qint32 getPhotoSize() const;
    void setPhotoSize(const qint32 &photo_size);
    bool is_photo_size_Set() const;
    bool is_photo_size_Valid() const;

    QString getPhotoUrl() const;
    void setPhotoUrl(const QString &photo_url);
    bool is_photo_url_Set() const;
    bool is_photo_url_Valid() const;

    qint32 getPhotoWidth() const;
    void setPhotoWidth(const qint32 &photo_width);
    bool is_photo_width_Set() const;
    bool is_photo_width_Valid() const;

    QList<OAILabeledPrice> getPrices() const;
    void setPrices(const QList<OAILabeledPrice> &prices);
    bool is_prices_Set() const;
    bool is_prices_Valid() const;

    QString getProviderData() const;
    void setProviderData(const QString &provider_data);
    bool is_provider_data_Set() const;
    bool is_provider_data_Valid() const;

    QString getProviderToken() const;
    void setProviderToken(const QString &provider_token);
    bool is_provider_token_Set() const;
    bool is_provider_token_Valid() const;

    OAIInlineKeyboardMarkup getReplyMarkup() const;
    void setReplyMarkup(const OAIInlineKeyboardMarkup &reply_markup);
    bool is_reply_markup_Set() const;
    bool is_reply_markup_Valid() const;

    qint32 getReplyToMessageId() const;
    void setReplyToMessageId(const qint32 &reply_to_message_id);
    bool is_reply_to_message_id_Set() const;
    bool is_reply_to_message_id_Valid() const;

    bool isSendEmailToProvider() const;
    void setSendEmailToProvider(const bool &send_email_to_provider);
    bool is_send_email_to_provider_Set() const;
    bool is_send_email_to_provider_Valid() const;

    bool isSendPhoneNumberToProvider() const;
    void setSendPhoneNumberToProvider(const bool &send_phone_number_to_provider);
    bool is_send_phone_number_to_provider_Set() const;
    bool is_send_phone_number_to_provider_Valid() const;

    QString getStartParameter() const;
    void setStartParameter(const QString &start_parameter);
    bool is_start_parameter_Set() const;
    bool is_start_parameter_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_allow_sending_without_reply;
    bool m_allow_sending_without_reply_isSet;
    bool m_allow_sending_without_reply_isValid;

    qint32 m_chat_id;
    bool m_chat_id_isSet;
    bool m_chat_id_isValid;

    QString m_currency;
    bool m_currency_isSet;
    bool m_currency_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    bool m_disable_notification;
    bool m_disable_notification_isSet;
    bool m_disable_notification_isValid;

    bool m_is_flexible;
    bool m_is_flexible_isSet;
    bool m_is_flexible_isValid;

    bool m_need_email;
    bool m_need_email_isSet;
    bool m_need_email_isValid;

    bool m_need_name;
    bool m_need_name_isSet;
    bool m_need_name_isValid;

    bool m_need_phone_number;
    bool m_need_phone_number_isSet;
    bool m_need_phone_number_isValid;

    bool m_need_shipping_address;
    bool m_need_shipping_address_isSet;
    bool m_need_shipping_address_isValid;

    QString m_payload;
    bool m_payload_isSet;
    bool m_payload_isValid;

    qint32 m_photo_height;
    bool m_photo_height_isSet;
    bool m_photo_height_isValid;

    qint32 m_photo_size;
    bool m_photo_size_isSet;
    bool m_photo_size_isValid;

    QString m_photo_url;
    bool m_photo_url_isSet;
    bool m_photo_url_isValid;

    qint32 m_photo_width;
    bool m_photo_width_isSet;
    bool m_photo_width_isValid;

    QList<OAILabeledPrice> m_prices;
    bool m_prices_isSet;
    bool m_prices_isValid;

    QString m_provider_data;
    bool m_provider_data_isSet;
    bool m_provider_data_isValid;

    QString m_provider_token;
    bool m_provider_token_isSet;
    bool m_provider_token_isValid;

    OAIInlineKeyboardMarkup m_reply_markup;
    bool m_reply_markup_isSet;
    bool m_reply_markup_isValid;

    qint32 m_reply_to_message_id;
    bool m_reply_to_message_id_isSet;
    bool m_reply_to_message_id_isValid;

    bool m_send_email_to_provider;
    bool m_send_email_to_provider_isSet;
    bool m_send_email_to_provider_isValid;

    bool m_send_phone_number_to_provider;
    bool m_send_phone_number_to_provider_isSet;
    bool m_send_phone_number_to_provider_isValid;

    QString m_start_parameter;
    bool m_start_parameter_isSet;
    bool m_start_parameter_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAI_sendInvoice_post_request)

#endif // OAI_sendInvoice_post_request_H
