/**
 * Bulk Data Storage System Services
 * Bulk Data Storage System (BDSS) allows the public to discover, search, and download patent and trademark data in bulk form.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ProductModelShort model module.
 * @module model/ProductModelShort
 * @version 1.0.0
 */
class ProductModelShort {
    /**
     * Constructs a new <code>ProductModelShort</code>.
     * Product Model, short version, with the list of child products
     * @alias module:model/ProductModelShort
     */
    constructor() { 
        
        ProductModelShort.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ProductModelShort</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProductModelShort} obj Optional instance to populate.
     * @return {module:model/ProductModelShort} The populated <code>ProductModelShort</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ProductModelShort();

            if (data.hasOwnProperty('productChildren')) {
                obj['productChildren'] = ApiClient.convertToType(data['productChildren'], [ProductModelShort]);
            }
            if (data.hasOwnProperty('productLinkPath')) {
                obj['productLinkPath'] = ApiClient.convertToType(data['productLinkPath'], 'String');
            }
            if (data.hasOwnProperty('productShortName')) {
                obj['productShortName'] = ApiClient.convertToType(data['productShortName'], 'String');
            }
            if (data.hasOwnProperty('productTitle')) {
                obj['productTitle'] = ApiClient.convertToType(data['productTitle'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ProductModelShort</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ProductModelShort</code>.
     */
    static validateJSON(data) {
        if (data['productChildren']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['productChildren'])) {
                throw new Error("Expected the field `productChildren` to be an array in the JSON data but got " + data['productChildren']);
            }
            // validate the optional field `productChildren` (array)
            for (const item of data['productChildren']) {
                ProductModelShort.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['productLinkPath'] && !(typeof data['productLinkPath'] === 'string' || data['productLinkPath'] instanceof String)) {
            throw new Error("Expected the field `productLinkPath` to be a primitive type in the JSON string but got " + data['productLinkPath']);
        }
        // ensure the json data is a string
        if (data['productShortName'] && !(typeof data['productShortName'] === 'string' || data['productShortName'] instanceof String)) {
            throw new Error("Expected the field `productShortName` to be a primitive type in the JSON string but got " + data['productShortName']);
        }
        // ensure the json data is a string
        if (data['productTitle'] && !(typeof data['productTitle'] === 'string' || data['productTitle'] instanceof String)) {
            throw new Error("Expected the field `productTitle` to be a primitive type in the JSON string but got " + data['productTitle']);
        }

        return true;
    }


}



/**
 * @member {Array.<module:model/ProductModelShort>} productChildren
 */
ProductModelShort.prototype['productChildren'] = undefined;

/**
 * @member {String} productLinkPath
 */
ProductModelShort.prototype['productLinkPath'] = undefined;

/**
 * @member {String} productShortName
 */
ProductModelShort.prototype['productShortName'] = undefined;

/**
 * @member {String} productTitle
 */
ProductModelShort.prototype['productTitle'] = undefined;






export default ProductModelShort;

