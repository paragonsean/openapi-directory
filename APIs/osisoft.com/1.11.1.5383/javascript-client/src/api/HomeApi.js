/**
 * PI Web API 2018 SP1 Swagger Spec
 * Swagger Spec file that describes PI Web API
 *
 * The version of the OpenAPI document: 1.11.1.5383
 * Contact: techsupport@osisoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Landing from '../model/Landing';

/**
* Home service.
* @module api/HomeApi
* @version 1.11.1.5383
*/
export default class HomeApi {

    /**
    * Constructs a new HomeApi. 
    * @alias module:api/HomeApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the homeGet operation.
     * @callback module:api/HomeApi~homeGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Landing} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get top level links for this PI System Web API instance.
     * @param {module:api/HomeApi~homeGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Landing}
     */
    homeGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json', 'text/html', 'application/x-ms-application'];
      let returnType = Landing;
      return this.apiClient.callApi(
        '/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
