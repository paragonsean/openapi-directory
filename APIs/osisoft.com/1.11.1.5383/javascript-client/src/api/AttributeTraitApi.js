/**
 * PI Web API 2018 SP1 Swagger Spec
 * Swagger Spec file that describes PI Web API
 *
 * The version of the OpenAPI document: 1.11.1.5383
 * Contact: techsupport@osisoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AttributeTrait from '../model/AttributeTrait';
import ItemsAttributeTrait from '../model/ItemsAttributeTrait';

/**
* AttributeTrait service.
* @module api/AttributeTraitApi
* @version 1.11.1.5383
*/
export default class AttributeTraitApi {

    /**
    * Constructs a new AttributeTraitApi. 
    * @alias module:api/AttributeTraitApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the attributeTraitGet operation.
     * @callback module:api/AttributeTraitApi~attributeTraitGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AttributeTrait} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve an attribute trait.
     * @param {String} name The name or abbreviation of the attribute trait.
     * @param {Object} opts Optional parameters
     * @param {String} [selectedFields] List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned.
     * @param {module:api/AttributeTraitApi~attributeTraitGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AttributeTrait}
     */
    attributeTraitGet(name, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling attributeTraitGet");
      }

      let pathParams = {
        'name': name
      };
      let queryParams = {
        'selectedFields': opts['selectedFields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json', 'text/html', 'application/x-ms-application'];
      let returnType = AttributeTrait;
      return this.apiClient.callApi(
        '/attributetraits/{name}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the attributeTraitGetByCategory operation.
     * @callback module:api/AttributeTraitApi~attributeTraitGetByCategoryCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ItemsAttributeTrait} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve all attribute traits of the specified category/categories.
     * @param {Array.<String>} category The category of the attribute traits. Multiple categories may be specified with multiple instances of the parameter. If the parameter is not specified, or if its value is \"all\", then all attribute traits of all categories will be returned.
     * @param {Object} opts Optional parameters
     * @param {String} [selectedFields] List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned.
     * @param {module:api/AttributeTraitApi~attributeTraitGetByCategoryCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ItemsAttributeTrait}
     */
    attributeTraitGetByCategory(category, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'category' is set
      if (category === undefined || category === null) {
        throw new Error("Missing the required parameter 'category' when calling attributeTraitGetByCategory");
      }

      let pathParams = {
      };
      let queryParams = {
        'category': this.apiClient.buildCollectionParam(category, 'multi'),
        'selectedFields': opts['selectedFields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json', 'text/html', 'application/x-ms-application'];
      let returnType = ItemsAttributeTrait;
      return this.apiClient.callApi(
        '/attributetraits', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
