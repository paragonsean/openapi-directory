/**
 * PI Web API 2018 SP1 Swagger Spec
 * Swagger Spec file that describes PI Web API
 *
 * The version of the OpenAPI document: 1.11.1.5383
 * Contact: techsupport@osisoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Errors from '../model/Errors';
import ItemsItemsSubstatus from '../model/ItemsItemsSubstatus';
import ItemsStreamSummaries from '../model/ItemsStreamSummaries';
import ItemsStreamUpdatesRegister from '../model/ItemsStreamUpdatesRegister';
import ItemsStreamUpdatesRetrieve from '../model/ItemsStreamUpdatesRetrieve';
import ItemsStreamValue from '../model/ItemsStreamValue';
import ItemsStreamValues from '../model/ItemsStreamValues';
import ItemsSubstatus from '../model/ItemsSubstatus';
import StreamValue from '../model/StreamValue';
import StreamValues from '../model/StreamValues';

/**
* StreamSet service.
* @module api/StreamSetApi
* @version 1.11.1.5383
*/
export default class StreamSetApi {

    /**
    * Constructs a new StreamSetApi. 
    * @alias module:api/StreamSetApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the streamSetGetChannel operation.
     * @callback module:api/StreamSetApi~streamSetGetChannelCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Opens a channel that will send messages about any value changes for the attributes of an Element, Event Frame, or Attribute.
     * @param {String} webId The ID of an Element, Event Frame or Attribute, which is the base element or parent of all the stream attributes.
     * @param {Object} opts Optional parameters
     * @param {String} [categoryName] Specify that included attributes must have this category. The default is no category filter.
     * @param {Number} [heartbeatRate] Specifies the maximum number of consecutive empty messages that can be elapsed with no new data updates from the PI System, after which the client receives an empty payload. It helps to check if the connection is still alive. Zero/negative values correspond to no heartbeat, and the default value is no heartbeat.
     * @param {Boolean} [includeInitialValues] Specified if the channel should send a message with the current values of all the streams after the connection is opened. The default is 'false'.
     * @param {String} [nameFilter] The name query string used for filtering attributes. The default is no filter.
     * @param {Boolean} [searchFullHierarchy] Specifies if the search should include attributes nested further than the immediate attributes of the searchRoot. The default is 'false'.
     * @param {Boolean} [showExcluded] Specified if the search should include attributes with the Excluded property set. The default is 'false'.
     * @param {Boolean} [showHidden] Specified if the search should include attributes with the Hidden property set. The default is 'false'.
     * @param {String} [templateName] Specify that included attributes must be members of this template. The default is no template filter.
     * @param {String} [webIdType] Optional parameter. Used to specify the type of WebID. Useful for URL brevity and other special cases. Default is the value of the configuration item \"WebIDType\".
     * @param {module:api/StreamSetApi~streamSetGetChannelCallback} callback The callback function, accepting three arguments: error, data, response
     */
    streamSetGetChannel(webId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'webId' is set
      if (webId === undefined || webId === null) {
        throw new Error("Missing the required parameter 'webId' when calling streamSetGetChannel");
      }

      let pathParams = {
        'webId': webId
      };
      let queryParams = {
        'categoryName': opts['categoryName'],
        'heartbeatRate': opts['heartbeatRate'],
        'includeInitialValues': opts['includeInitialValues'],
        'nameFilter': opts['nameFilter'],
        'searchFullHierarchy': opts['searchFullHierarchy'],
        'showExcluded': opts['showExcluded'],
        'showHidden': opts['showHidden'],
        'templateName': opts['templateName'],
        'webIdType': opts['webIdType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json', 'text/html', 'application/x-ms-application'];
      let returnType = null;
      return this.apiClient.callApi(
        '/streamsets/{webId}/channel', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the streamSetGetChannelAdHoc operation.
     * @callback module:api/StreamSetApi~streamSetGetChannelAdHocCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Opens a channel that will send messages about any value changes for the specified streams.
     * @param {Array.<String>} webId The ID of a stream. Multiple streams may be specified with multiple instances of the parameter.
     * @param {Object} opts Optional parameters
     * @param {Number} [heartbeatRate] Specifies the maximum number of consecutive empty messages that can be elapsed with no new data updates from the PI System, after which the client receives an empty payload. It helps to check if the connection is still alive. Zero/negative values correspond to no heartbeat, and the default value is no heartbeat.
     * @param {Boolean} [includeInitialValues] Specified if the channel should send a message with the current values of all the streams after the connection is opened. The default is 'false'.
     * @param {String} [webIdType] Optional parameter. Used to specify the type of WebID. Useful for URL brevity and other special cases. Default is the value of the configuration item \"WebIDType\".
     * @param {module:api/StreamSetApi~streamSetGetChannelAdHocCallback} callback The callback function, accepting three arguments: error, data, response
     */
    streamSetGetChannelAdHoc(webId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'webId' is set
      if (webId === undefined || webId === null) {
        throw new Error("Missing the required parameter 'webId' when calling streamSetGetChannelAdHoc");
      }

      let pathParams = {
      };
      let queryParams = {
        'webId': this.apiClient.buildCollectionParam(webId, 'multi'),
        'heartbeatRate': opts['heartbeatRate'],
        'includeInitialValues': opts['includeInitialValues'],
        'webIdType': opts['webIdType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json', 'text/html', 'application/x-ms-application'];
      let returnType = null;
      return this.apiClient.callApi(
        '/streamsets/channel', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the streamSetGetEnd operation.
     * @callback module:api/StreamSetApi~streamSetGetEndCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ItemsStreamValue} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns End of stream values of the attributes for an Element, Event Frame or Attribute
     * Any time series value in the response that contains an 'Errors' property indicates PI Web API encountered a handled error during the transfer of the response stream.
     * @param {String} webId The ID of an Element, Event Frame or Attribute, which is the base element or parent of all the stream attributes.
     * @param {Object} opts Optional parameters
     * @param {String} [categoryName] Specify that included attributes must have this category. The default is no category filter.
     * @param {String} [nameFilter] The name query string used for filtering attributes. The default is no filter.
     * @param {Boolean} [searchFullHierarchy] Specifies if the search should include attributes nested further than the immediate attributes of the searchRoot. The default is 'false'.
     * @param {String} [selectedFields] List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned.
     * @param {Boolean} [showExcluded] Specified if the search should include attributes with the Excluded property set. The default is 'false'.
     * @param {Boolean} [showHidden] Specified if the search should include attributes with the Hidden property set. The default is 'false'.
     * @param {String} [sortField] The field or property of the object used to sort the returned collection. For better performance, by default no sorting is applied. 'Name' is the only supported field by which to sort.
     * @param {String} [sortOrder] The order that the returned collection is sorted. The default is 'Ascending'
     * @param {String} [templateName] Specify that included attributes must be members of this template. The default is no template filter.
     * @param {String} [webIdType] Optional parameter. Used to specify the type of WebID. Useful for URL brevity and other special cases. Default is the value of the configuration item \"WebIDType\".
     * @param {module:api/StreamSetApi~streamSetGetEndCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ItemsStreamValue}
     */
    streamSetGetEnd(webId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'webId' is set
      if (webId === undefined || webId === null) {
        throw new Error("Missing the required parameter 'webId' when calling streamSetGetEnd");
      }

      let pathParams = {
        'webId': webId
      };
      let queryParams = {
        'categoryName': opts['categoryName'],
        'nameFilter': opts['nameFilter'],
        'searchFullHierarchy': opts['searchFullHierarchy'],
        'selectedFields': opts['selectedFields'],
        'showExcluded': opts['showExcluded'],
        'showHidden': opts['showHidden'],
        'sortField': opts['sortField'],
        'sortOrder': opts['sortOrder'],
        'templateName': opts['templateName'],
        'webIdType': opts['webIdType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json', 'text/html', 'application/x-ms-application'];
      let returnType = ItemsStreamValue;
      return this.apiClient.callApi(
        '/streamsets/{webId}/end', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the streamSetGetEndAdHoc operation.
     * @callback module:api/StreamSetApi~streamSetGetEndAdHocCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ItemsStreamValues} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns End Of Stream values for attributes of the specified streams
     * Any time series value in the response that contains an 'Errors' property indicates PI Web API encountered a handled error during the transfer of the response stream.
     * @param {Array.<String>} webId The ID of a stream. Multiple streams may be specified with multiple instances of the parameter.
     * @param {Object} opts Optional parameters
     * @param {String} [selectedFields] List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned.
     * @param {String} [sortField] The field or property of the object used to sort the returned collection. For better performance, by default no sorting is applied. 'Name' is the only supported field by which to sort.
     * @param {String} [sortOrder] The order that the returned collection is sorted. The default is 'Ascending'
     * @param {String} [webIdType] Optional parameter. Used to specify the type of WebID. Useful for URL brevity and other special cases. Default is the value of the configuration item \"WebIDType\".
     * @param {module:api/StreamSetApi~streamSetGetEndAdHocCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ItemsStreamValues}
     */
    streamSetGetEndAdHoc(webId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'webId' is set
      if (webId === undefined || webId === null) {
        throw new Error("Missing the required parameter 'webId' when calling streamSetGetEndAdHoc");
      }

      let pathParams = {
      };
      let queryParams = {
        'webId': this.apiClient.buildCollectionParam(webId, 'multi'),
        'selectedFields': opts['selectedFields'],
        'sortField': opts['sortField'],
        'sortOrder': opts['sortOrder'],
        'webIdType': opts['webIdType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json', 'text/html', 'application/x-ms-application'];
      let returnType = ItemsStreamValues;
      return this.apiClient.callApi(
        '/streamsets/end', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the streamSetGetInterpolated operation.
     * @callback module:api/StreamSetApi~streamSetGetInterpolatedCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ItemsStreamValues} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns interpolated values of attributes for an element, event frame or attribute over the specified time range at the specified sampling interval.
     * Any time series value in the response that contains an 'Errors' property indicates PI Web API encountered a handled error during the transfer of the response stream.
     * @param {String} webId The ID of an element, event frame or attribute, which is the base element or parent of all the stream attributes.
     * @param {Object} opts Optional parameters
     * @param {String} [categoryName] Specify that included attributes must have this category. The default is no category filter.
     * @param {String} [endTime] An optional end time. The default is '*' for element attributes and points. For event frame attributes, the default is the event frame's end time, or '*' if that is not set. Note that if endTime is earlier than startTime, the resulting values will be in time-descending order.
     * @param {String} [filterExpression] An optional string containing a filter expression. Expression variables are relative to the data point. Use '.' to reference the containing attribute. If the attribute does not support filtering, the filter will be ignored. The default is no filtering.
     * @param {Boolean} [includeFilteredValues] Specify 'true' to indicate that values which fail the filter criteria are present in the returned data at the times where they occurred with a value set to a 'Filtered' enumeration value with bad status. Repeated consecutive failures are omitted.
     * @param {String} [interval] The sampling interval, in AFTimeSpan format.
     * @param {String} [nameFilter] The name query string used for filtering attributes. The default is no filter.
     * @param {Boolean} [searchFullHierarchy] Specifies if the search should include attributes nested further than the immediate attributes of the searchRoot. The default is 'false'.
     * @param {String} [selectedFields] List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned.
     * @param {Boolean} [showExcluded] Specified if the search should include attributes with the Excluded property set. The default is 'false'.
     * @param {Boolean} [showHidden] Specified if the search should include attributes with the Hidden property set. The default is 'false'.
     * @param {String} [sortField] The field or property of the object used to sort the returned collection. For better performance, by default no sorting is applied. 'Name' is the only supported field by which to sort.
     * @param {String} [sortOrder] The order that the returned collection is sorted. The default is 'Ascending'.
     * @param {String} [startTime] An optional start time. The default is '*-1d' for element attributes and points. For event frame attributes, the default is the event frame's start time, or '*-1d' if that is not set.
     * @param {String} [syncTime] An optional start time anchor, in AFTime format. When specified, interpolated data retrieval will use the sync time as the origin for calculating the interval times.
     * @param {String} [syncTimeBoundaryType] An optional string specifying the boundary type to use when applying a syncTime. The allowed values are 'Inside' and 'Outside'. The default is 'Inside'.
     * @param {String} [templateName] Specify that included attributes must be members of this template. The default is no template filter.
     * @param {String} [timeZone] The time zone in which the time string will be interpreted. This parameter will be ignored if a time zone is specified in the time string. If no time zone is specified in either places, the PI Web API server time zone will be used.
     * @param {String} [webIdType] Optional parameter. Used to specify the type of WebID. Useful for URL brevity and other special cases. Default is the value of the configuration item \"WebIDType\".
     * @param {module:api/StreamSetApi~streamSetGetInterpolatedCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ItemsStreamValues}
     */
    streamSetGetInterpolated(webId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'webId' is set
      if (webId === undefined || webId === null) {
        throw new Error("Missing the required parameter 'webId' when calling streamSetGetInterpolated");
      }

      let pathParams = {
        'webId': webId
      };
      let queryParams = {
        'categoryName': opts['categoryName'],
        'endTime': opts['endTime'],
        'filterExpression': opts['filterExpression'],
        'includeFilteredValues': opts['includeFilteredValues'],
        'interval': opts['interval'],
        'nameFilter': opts['nameFilter'],
        'searchFullHierarchy': opts['searchFullHierarchy'],
        'selectedFields': opts['selectedFields'],
        'showExcluded': opts['showExcluded'],
        'showHidden': opts['showHidden'],
        'sortField': opts['sortField'],
        'sortOrder': opts['sortOrder'],
        'startTime': opts['startTime'],
        'syncTime': opts['syncTime'],
        'syncTimeBoundaryType': opts['syncTimeBoundaryType'],
        'templateName': opts['templateName'],
        'timeZone': opts['timeZone'],
        'webIdType': opts['webIdType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json', 'text/html', 'application/x-ms-application'];
      let returnType = ItemsStreamValues;
      return this.apiClient.callApi(
        '/streamsets/{webId}/interpolated', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the streamSetGetInterpolatedAdHoc operation.
     * @callback module:api/StreamSetApi~streamSetGetInterpolatedAdHocCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ItemsStreamValues} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns interpolated values of the specified streams over the specified time range at the specified sampling interval.
     * Any time series value in the response that contains an 'Errors' property indicates PI Web API encountered a handled error during the transfer of the response stream.
     * @param {Array.<String>} webId The ID of a stream. Multiple streams may be specified with multiple instances of the parameter.
     * @param {Object} opts Optional parameters
     * @param {String} [endTime] An optional end time. The default is '*'. Note that if endTime is earlier than startTime, the resulting values will be in time-descending order.
     * @param {String} [filterExpression] An optional string containing a filter expression. Expression variables are relative to the data point. Use '.' to reference the containing attribute. If the attribute does not support filtering, the filter will be ignored. The default is no filtering.
     * @param {Boolean} [includeFilteredValues] Specify 'true' to indicate that values which fail the filter criteria are present in the returned data at the times where they occurred with a value set to a 'Filtered' enumeration value with bad status. Repeated consecutive failures are omitted.
     * @param {String} [interval] The sampling interval, in AFTimeSpan format.
     * @param {String} [selectedFields] List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned.
     * @param {String} [sortField] The field or property of the object used to sort the returned collection. For better performance, by default no sorting is applied. 'Name' is the only supported field by which to sort.
     * @param {String} [sortOrder] The order that the returned collection is sorted. The default is 'Ascending'
     * @param {String} [startTime] An optional start time. The default is '*-1d'.
     * @param {String} [syncTime] An optional start time anchor, in AFTime format. When specified, interpolated data retrieval will use the sync time as the origin for calculating the interval times.
     * @param {String} [syncTimeBoundaryType] An optional string specifying the boundary type to use when applying a syncTime. The allowed values are 'Inside' and 'Outside'. The default is 'Inside'.
     * @param {String} [timeZone] The time zone in which the time string will be interpreted. This parameter will be ignored if a time zone is specified in the time string. If no time zone is specified in either places, the PI Web API server time zone will be used.
     * @param {String} [webIdType] Optional parameter. Used to specify the type of WebID. Useful for URL brevity and other special cases. Default is the value of the configuration item \"WebIDType\".
     * @param {module:api/StreamSetApi~streamSetGetInterpolatedAdHocCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ItemsStreamValues}
     */
    streamSetGetInterpolatedAdHoc(webId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'webId' is set
      if (webId === undefined || webId === null) {
        throw new Error("Missing the required parameter 'webId' when calling streamSetGetInterpolatedAdHoc");
      }

      let pathParams = {
      };
      let queryParams = {
        'webId': this.apiClient.buildCollectionParam(webId, 'multi'),
        'endTime': opts['endTime'],
        'filterExpression': opts['filterExpression'],
        'includeFilteredValues': opts['includeFilteredValues'],
        'interval': opts['interval'],
        'selectedFields': opts['selectedFields'],
        'sortField': opts['sortField'],
        'sortOrder': opts['sortOrder'],
        'startTime': opts['startTime'],
        'syncTime': opts['syncTime'],
        'syncTimeBoundaryType': opts['syncTimeBoundaryType'],
        'timeZone': opts['timeZone'],
        'webIdType': opts['webIdType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json', 'text/html', 'application/x-ms-application'];
      let returnType = ItemsStreamValues;
      return this.apiClient.callApi(
        '/streamsets/interpolated', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the streamSetGetInterpolatedAtTimes operation.
     * @callback module:api/StreamSetApi~streamSetGetInterpolatedAtTimesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ItemsStreamValues} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns interpolated values of attributes for an element, event frame or attribute at the specified times.
     * Any time series value in the response that contains an 'Errors' property indicates PI Web API encountered a handled error during the transfer of the response stream.
     * @param {String} webId The ID of an element, event frame or attribute, which is the base element or parent of all the stream attributes.
     * @param {Array.<String>} time The timestamp at which to retrieve a interpolated value. Multiple timestamps may be specified with multiple instances of the parameter.
     * @param {Object} opts Optional parameters
     * @param {String} [categoryName] Specify that included attributes must have this category. The default is no category filter.
     * @param {String} [filterExpression] An optional string containing a filter expression. Expression variables are relative to the data point. Use '.' to reference the containing attribute. If the attribute does not support filtering, the filter will be ignored. The default is no filtering.
     * @param {Boolean} [includeFilteredValues] Specify 'true' to indicate that values which fail the filter criteria are present in the returned data at the times where they occurred with a value set to a 'Filtered' enumeration value with bad status. Repeated consecutive failures are omitted.
     * @param {String} [nameFilter] The name query string used for filtering attributes. The default is no filter.
     * @param {Boolean} [searchFullHierarchy] Specifies if the search should include attributes nested further than the immediate attributes of the searchRoot. The default is 'false'.
     * @param {String} [selectedFields] List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned.
     * @param {Boolean} [showExcluded] Specified if the search should include attributes with the Excluded property set. The default is 'false'.
     * @param {Boolean} [showHidden] Specified if the search should include attributes with the Hidden property set. The default is 'false'.
     * @param {String} [sortOrder] The order that the returned collection is sorted. The default is 'Ascending'.
     * @param {String} [templateName] Specify that included attributes must be members of this template. The default is no template filter.
     * @param {String} [timeZone] The time zone in which the time string will be interpreted. This parameter will be ignored if a time zone is specified in the time string. If no time zone is specified in either places, the PI Web API server time zone will be used.
     * @param {String} [webIdType] Optional parameter. Used to specify the type of WebID. Useful for URL brevity and other special cases. Default is the value of the configuration item \"WebIDType\".
     * @param {module:api/StreamSetApi~streamSetGetInterpolatedAtTimesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ItemsStreamValues}
     */
    streamSetGetInterpolatedAtTimes(webId, time, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'webId' is set
      if (webId === undefined || webId === null) {
        throw new Error("Missing the required parameter 'webId' when calling streamSetGetInterpolatedAtTimes");
      }
      // verify the required parameter 'time' is set
      if (time === undefined || time === null) {
        throw new Error("Missing the required parameter 'time' when calling streamSetGetInterpolatedAtTimes");
      }

      let pathParams = {
        'webId': webId
      };
      let queryParams = {
        'time': this.apiClient.buildCollectionParam(time, 'multi'),
        'categoryName': opts['categoryName'],
        'filterExpression': opts['filterExpression'],
        'includeFilteredValues': opts['includeFilteredValues'],
        'nameFilter': opts['nameFilter'],
        'searchFullHierarchy': opts['searchFullHierarchy'],
        'selectedFields': opts['selectedFields'],
        'showExcluded': opts['showExcluded'],
        'showHidden': opts['showHidden'],
        'sortOrder': opts['sortOrder'],
        'templateName': opts['templateName'],
        'timeZone': opts['timeZone'],
        'webIdType': opts['webIdType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json', 'text/html', 'application/x-ms-application'];
      let returnType = ItemsStreamValues;
      return this.apiClient.callApi(
        '/streamsets/{webId}/interpolatedattimes', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the streamSetGetInterpolatedAtTimesAdHoc operation.
     * @callback module:api/StreamSetApi~streamSetGetInterpolatedAtTimesAdHocCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ItemsStreamValues} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns interpolated values of the specified streams at the specified times.
     * Any time series value in the response that contains an 'Errors' property indicates PI Web API encountered a handled error during the transfer of the response stream.
     * @param {Array.<String>} time The timestamp at which to retrieve a interpolated value. Multiple timestamps may be specified with multiple instances of the parameter.
     * @param {Array.<String>} webId The ID of a stream. Multiple streams may be specified with multiple instances of the parameter.
     * @param {Object} opts Optional parameters
     * @param {String} [filterExpression] An optional string containing a filter expression. Expression variables are relative to the data point. Use '.' to reference the containing attribute. If the attribute does not support filtering, the filter will be ignored. The default is no filtering.
     * @param {Boolean} [includeFilteredValues] Specify 'true' to indicate that values which fail the filter criteria are present in the returned data at the times where they occurred with a value set to a 'Filtered' enumeration value with bad status. Repeated consecutive failures are omitted.
     * @param {String} [selectedFields] List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned.
     * @param {String} [sortOrder] The order that the returned collection is sorted. The default is 'Ascending'.
     * @param {String} [timeZone] The time zone in which the time string will be interpreted. This parameter will be ignored if a time zone is specified in the time string. If no time zone is specified in either places, the PI Web API server time zone will be used.
     * @param {String} [webIdType] Optional parameter. Used to specify the type of WebID. Useful for URL brevity and other special cases. Default is the value of the configuration item \"WebIDType\".
     * @param {module:api/StreamSetApi~streamSetGetInterpolatedAtTimesAdHocCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ItemsStreamValues}
     */
    streamSetGetInterpolatedAtTimesAdHoc(time, webId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'time' is set
      if (time === undefined || time === null) {
        throw new Error("Missing the required parameter 'time' when calling streamSetGetInterpolatedAtTimesAdHoc");
      }
      // verify the required parameter 'webId' is set
      if (webId === undefined || webId === null) {
        throw new Error("Missing the required parameter 'webId' when calling streamSetGetInterpolatedAtTimesAdHoc");
      }

      let pathParams = {
      };
      let queryParams = {
        'time': this.apiClient.buildCollectionParam(time, 'multi'),
        'webId': this.apiClient.buildCollectionParam(webId, 'multi'),
        'filterExpression': opts['filterExpression'],
        'includeFilteredValues': opts['includeFilteredValues'],
        'selectedFields': opts['selectedFields'],
        'sortOrder': opts['sortOrder'],
        'timeZone': opts['timeZone'],
        'webIdType': opts['webIdType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json', 'text/html', 'application/x-ms-application'];
      let returnType = ItemsStreamValues;
      return this.apiClient.callApi(
        '/streamsets/interpolatedattimes', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the streamSetGetJoined operation.
     * @callback module:api/StreamSetApi~streamSetGetJoinedCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ItemsStreamValues} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns the base stream's recorded values and subordinate streams' interpolated values at times matching the recorded values' timestamps.
     * Any time series value in the response that contains an 'Errors' property indicates PI Web API encountered a handled error during the transfer of the response stream. The first stream in the response is always the X-Axis.
     * @param {String} baseWebId The ID of the base stream which is used for retrieving the recorded values.
     * @param {Array.<String>} subordinateWebId The ID of a stream whose values will be joined on the times with the values of the base stream. Multiple streams may be specified with multiple instances of the parameter.
     * @param {Object} opts Optional parameters
     * @param {String} [boundaryType] An optional value that determines how the times and values of the returned end points are determined. The default is 'Inside'.
     * @param {String} [endTime] An optional end time. The default is '*' for element attributes and points. For event frame attributes, the default is the event frame's end time, or '*' if that is not set. Note that if endTime is earlier than startTime, the resulting values will be in time-descending order.
     * @param {String} [filterExpression] An optional string containing a filter expression. Expression variables are relative to the data point. Use '.' to reference the containing attribute. The default is no filtering.
     * @param {Boolean} [includeFilteredValues] Specify 'true' to indicate that values which fail the filter criteria are present in the returned data at the times where they occurred with a value set to a 'Filtered' enumeration value with bad status. Repeated consecutive failures are omitted.
     * @param {Number} [maxCount] The maximum number of values to be returned. The default is 1000.
     * @param {String} [selectedFields] List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned.
     * @param {String} [startTime] An optional start time. The default is '*-1d' for element attributes and points. For event frame attributes, the default is the event frame's start time, or '*-1d' if that is not set.
     * @param {String} [timeZone] The time zone in which the time string will be interpreted. This parameter will be ignored if a time zone is specified in the time string. If no time zone is specified in either place, the PI Web API server time zone will be used.
     * @param {String} [webIdType] Optional parameter. Used to specify the type of WebID. Useful for URL brevity and other special cases. Default is the value of the configuration item \"WebIDType\".
     * @param {module:api/StreamSetApi~streamSetGetJoinedCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ItemsStreamValues}
     */
    streamSetGetJoined(baseWebId, subordinateWebId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'baseWebId' is set
      if (baseWebId === undefined || baseWebId === null) {
        throw new Error("Missing the required parameter 'baseWebId' when calling streamSetGetJoined");
      }
      // verify the required parameter 'subordinateWebId' is set
      if (subordinateWebId === undefined || subordinateWebId === null) {
        throw new Error("Missing the required parameter 'subordinateWebId' when calling streamSetGetJoined");
      }

      let pathParams = {
      };
      let queryParams = {
        'baseWebId': baseWebId,
        'subordinateWebId': this.apiClient.buildCollectionParam(subordinateWebId, 'multi'),
        'boundaryType': opts['boundaryType'],
        'endTime': opts['endTime'],
        'filterExpression': opts['filterExpression'],
        'includeFilteredValues': opts['includeFilteredValues'],
        'maxCount': opts['maxCount'],
        'selectedFields': opts['selectedFields'],
        'startTime': opts['startTime'],
        'timeZone': opts['timeZone'],
        'webIdType': opts['webIdType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json', 'text/html', 'application/x-ms-application'];
      let returnType = ItemsStreamValues;
      return this.apiClient.callApi(
        '/streamsets/joined', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the streamSetGetPlot operation.
     * @callback module:api/StreamSetApi~streamSetGetPlotCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ItemsStreamValues} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns values of attributes for an element, event frame or attribute over the specified time range suitable for plotting over the number of intervals (typically represents pixels).
     * For each interval, the data available is examined and significant values are returned. Each interval can produce up to 5 values if they are unique, the first value in the interval, the last value, the highest value, the lowest value and at most one exceptional point (bad status or digital state). Any time series value in the response that contains an 'Errors' property indicates PI Web API encountered a handled error during the transfer of the response stream.
     * @param {String} webId The ID of an element, event frame or attribute, which is the base element or parent of all the stream attributes.
     * @param {Object} opts Optional parameters
     * @param {String} [categoryName] Specify that included attributes must have this category. The default is no category filter.
     * @param {String} [endTime] An optional end time. The default is '*' for element attributes and points. For event frame attributes, the default is the event frame's end time, or '*' if that is not set. Note that if endTime is earlier than startTime, the resulting values will be in time-descending order.
     * @param {Number} [intervals] The number of intervals to plot over. Typically, this would be the number of horizontal pixels in the trend. The default is '24'. For each interval, the data available is examined and significant values are returned. Each interval can produce up to 5 values if they are unique, the first value in the interval, the last value, the highest value, the lowest value and at most one exceptional point (bad status or digital state).
     * @param {String} [nameFilter] The name query string used for filtering attributes. The default is no filter.
     * @param {Boolean} [searchFullHierarchy] Specifies if the search should include attributes nested further than the immediate attributes of the searchRoot. The default is 'false'.
     * @param {String} [selectedFields] List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned.
     * @param {Boolean} [showExcluded] Specified if the search should include attributes with the Excluded property set. The default is 'false'.
     * @param {Boolean} [showHidden] Specified if the search should include attributes with the Hidden property set. The default is 'false'.
     * @param {String} [sortField] The field or property of the object used to sort the returned collection. For better performance, by default no sorting is applied. 'Name' is the only supported field by which to sort.
     * @param {String} [sortOrder] The order that the returned collection is sorted. The default is 'Ascending'
     * @param {String} [startTime] An optional start time. The default is '*-1d' for element attributes and points. For event frame attributes, the default is the event frame's start time, or '*-1d' if that is not set.
     * @param {String} [templateName] Specify that included attributes must be members of this template. The default is no template filter.
     * @param {String} [timeZone] The time zone in which the time string will be interpreted. This parameter will be ignored if a time zone is specified in the time string. If no time zone is specified in either places, the PI Web API server time zone will be used.
     * @param {String} [webIdType] Optional parameter. Used to specify the type of WebID. Useful for URL brevity and other special cases. Default is the value of the configuration item \"WebIDType\".
     * @param {module:api/StreamSetApi~streamSetGetPlotCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ItemsStreamValues}
     */
    streamSetGetPlot(webId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'webId' is set
      if (webId === undefined || webId === null) {
        throw new Error("Missing the required parameter 'webId' when calling streamSetGetPlot");
      }

      let pathParams = {
        'webId': webId
      };
      let queryParams = {
        'categoryName': opts['categoryName'],
        'endTime': opts['endTime'],
        'intervals': opts['intervals'],
        'nameFilter': opts['nameFilter'],
        'searchFullHierarchy': opts['searchFullHierarchy'],
        'selectedFields': opts['selectedFields'],
        'showExcluded': opts['showExcluded'],
        'showHidden': opts['showHidden'],
        'sortField': opts['sortField'],
        'sortOrder': opts['sortOrder'],
        'startTime': opts['startTime'],
        'templateName': opts['templateName'],
        'timeZone': opts['timeZone'],
        'webIdType': opts['webIdType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json', 'text/html', 'application/x-ms-application'];
      let returnType = ItemsStreamValues;
      return this.apiClient.callApi(
        '/streamsets/{webId}/plot', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the streamSetGetPlotAdHoc operation.
     * @callback module:api/StreamSetApi~streamSetGetPlotAdHocCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ItemsStreamValues} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns values of attributes for the specified streams over the specified time range suitable for plotting over the number of intervals (typically represents pixels).
     * For each interval, the data available is examined and significant values are returned. Each interval can produce up to 5 values if they are unique, the first value in the interval, the last value, the highest value, the lowest value and at most one exceptional point (bad status or digital state). Any time series value in the response that contains an 'Errors' property indicates PI Web API encountered a handled error during the transfer of the response stream.
     * @param {Array.<String>} webId The ID of a stream. Multiple streams may be specified with multiple instances of the parameter.
     * @param {Object} opts Optional parameters
     * @param {String} [endTime] An optional end time. The default is '*'. Note that if endTime is earlier than startTime, the resulting values will be in time-descending order.
     * @param {Number} [intervals] The number of intervals to plot over. Typically, this would be the number of horizontal pixels in the trend. The default is '24'. For each interval, the data available is examined and significant values are returned. Each interval can produce up to 5 values if they are unique, the first value in the interval, the last value, the highest value, the lowest value and at most one exceptional point (bad status or digital state).
     * @param {String} [selectedFields] List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned.
     * @param {String} [sortField] The field or property of the object used to sort the returned collection. For better performance, by default no sorting is applied. 'Name' is the only supported field by which to sort.
     * @param {String} [sortOrder] The order that the returned collection is sorted. The default is 'Ascending'
     * @param {String} [startTime] An optional start time. The default is '*-1d'.
     * @param {String} [timeZone] The time zone in which the time string will be interpreted. This parameter will be ignored if a time zone is specified in the time string. If no time zone is specified in either places, the PI Web API server time zone will be used.
     * @param {String} [webIdType] Optional parameter. Used to specify the type of WebID. Useful for URL brevity and other special cases. Default is the value of the configuration item \"WebIDType\".
     * @param {module:api/StreamSetApi~streamSetGetPlotAdHocCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ItemsStreamValues}
     */
    streamSetGetPlotAdHoc(webId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'webId' is set
      if (webId === undefined || webId === null) {
        throw new Error("Missing the required parameter 'webId' when calling streamSetGetPlotAdHoc");
      }

      let pathParams = {
      };
      let queryParams = {
        'webId': this.apiClient.buildCollectionParam(webId, 'multi'),
        'endTime': opts['endTime'],
        'intervals': opts['intervals'],
        'selectedFields': opts['selectedFields'],
        'sortField': opts['sortField'],
        'sortOrder': opts['sortOrder'],
        'startTime': opts['startTime'],
        'timeZone': opts['timeZone'],
        'webIdType': opts['webIdType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json', 'text/html', 'application/x-ms-application'];
      let returnType = ItemsStreamValues;
      return this.apiClient.callApi(
        '/streamsets/plot', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the streamSetGetRecorded operation.
     * @callback module:api/StreamSetApi~streamSetGetRecordedCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ItemsStreamValues} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns recorded values of the attributes for an element, event frame, or attribute.
     * Any time series value in the response that contains an 'Errors' property indicates PI Web API encountered a handled error during the transfer of the response stream.
     * @param {String} webId The ID of an element, event frame or attribute, which is the base element or parent of all the stream attributes.
     * @param {Object} opts Optional parameters
     * @param {String} [boundaryType] An optional value that determines how the times and values of the returned end points are determined. The default is 'Inside'.
     * @param {String} [categoryName] Specify that included attributes must have this category. The default is no category filter.
     * @param {String} [endTime] An optional end time. The default is '*' for element attributes and points. For event frame attributes, the default is the event frame's end time, or '*' if that is not set. Note that if endTime is earlier than startTime, the resulting values will be in time-descending order.
     * @param {String} [filterExpression] An optional string containing a filter expression. Expression variables are relative to the data point. Use '.' to reference the containing attribute. The default is no filtering.
     * @param {Boolean} [includeFilteredValues] Specify 'true' to indicate that values which fail the filter criteria are present in the returned data at the times where they occurred with a value set to a 'Filtered' enumeration value with bad status. Repeated consecutive failures are omitted.
     * @param {Number} [maxCount] The maximum number of values to be returned. The default is 1000.
     * @param {String} [nameFilter] The name query string used for filtering attributes. The default is no filter.
     * @param {Boolean} [searchFullHierarchy] Specifies if the search should include attributes nested further than the immediate attributes of the searchRoot. The default is 'false'.
     * @param {String} [selectedFields] List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned.
     * @param {Boolean} [showExcluded] Specified if the search should include attributes with the Excluded property set. The default is 'false'.
     * @param {Boolean} [showHidden] Specified if the search should include attributes with the Hidden property set. The default is 'false'.
     * @param {String} [sortField] The field or property of the object used to sort the returned collection. For better performance, by default no sorting is applied. 'Name' is the only supported field by which to sort.
     * @param {String} [sortOrder] The order that the returned collection is sorted. The default is 'Ascending'
     * @param {String} [startTime] An optional start time. The default is '*-1d' for element attributes and points. For event frame attributes, the default is the event frame's start time, or '*-1d' if that is not set.
     * @param {String} [templateName] Specify that included attributes must be members of this template. The default is no template filter.
     * @param {String} [timeZone] The time zone in which the time string will be interpreted. This parameter will be ignored if a time zone is specified in the time string. If no time zone is specified in either places, the PI Web API server time zone will be used.
     * @param {String} [webIdType] Optional parameter. Used to specify the type of WebID. Useful for URL brevity and other special cases. Default is the value of the configuration item \"WebIDType\".
     * @param {module:api/StreamSetApi~streamSetGetRecordedCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ItemsStreamValues}
     */
    streamSetGetRecorded(webId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'webId' is set
      if (webId === undefined || webId === null) {
        throw new Error("Missing the required parameter 'webId' when calling streamSetGetRecorded");
      }

      let pathParams = {
        'webId': webId
      };
      let queryParams = {
        'boundaryType': opts['boundaryType'],
        'categoryName': opts['categoryName'],
        'endTime': opts['endTime'],
        'filterExpression': opts['filterExpression'],
        'includeFilteredValues': opts['includeFilteredValues'],
        'maxCount': opts['maxCount'],
        'nameFilter': opts['nameFilter'],
        'searchFullHierarchy': opts['searchFullHierarchy'],
        'selectedFields': opts['selectedFields'],
        'showExcluded': opts['showExcluded'],
        'showHidden': opts['showHidden'],
        'sortField': opts['sortField'],
        'sortOrder': opts['sortOrder'],
        'startTime': opts['startTime'],
        'templateName': opts['templateName'],
        'timeZone': opts['timeZone'],
        'webIdType': opts['webIdType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json', 'text/html', 'application/x-ms-application'];
      let returnType = ItemsStreamValues;
      return this.apiClient.callApi(
        '/streamsets/{webId}/recorded', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the streamSetGetRecordedAdHoc operation.
     * @callback module:api/StreamSetApi~streamSetGetRecordedAdHocCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ItemsStreamValues} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns recorded values of the specified streams.
     * Any time series value in the response that contains an 'Errors' property indicates PI Web API encountered a handled error during the transfer of the response stream.
     * @param {Array.<String>} webId The ID of a stream. Multiple streams may be specified with multiple instances of the parameter.
     * @param {Object} opts Optional parameters
     * @param {String} [boundaryType] An optional value that determines how the times and values of the returned end points are determined. The default is 'Inside'.
     * @param {String} [endTime] An optional end time. The default is '*'. Note that if endTime is earlier than startTime, the resulting values will be in time-descending order.
     * @param {String} [filterExpression] An optional string containing a filter expression. Expression variables are relative to the data point. Use '.' to reference the containing attribute. The default is no filtering.
     * @param {Boolean} [includeFilteredValues] Specify 'true' to indicate that values which fail the filter criteria are present in the returned data at the times where they occurred with a value set to a 'Filtered' enumeration value with bad status. Repeated consecutive failures are omitted.
     * @param {Number} [maxCount] The maximum number of values to be returned. The default is 1000.
     * @param {String} [selectedFields] List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned.
     * @param {String} [sortField] The field or property of the object used to sort the returned collection. For better performance, by default no sorting is applied. 'Name' is the only supported field by which to sort.
     * @param {String} [sortOrder] The order that the returned collection is sorted. The default is 'Ascending'
     * @param {String} [startTime] An optional start time. The default is '*-1d'.
     * @param {String} [timeZone] The time zone in which the time string will be interpreted. This parameter will be ignored if a time zone is specified in the time string. If no time zone is specified in either places, the PI Web API server time zone will be used.
     * @param {String} [webIdType] Optional parameter. Used to specify the type of WebID. Useful for URL brevity and other special cases. Default is the value of the configuration item \"WebIDType\".
     * @param {module:api/StreamSetApi~streamSetGetRecordedAdHocCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ItemsStreamValues}
     */
    streamSetGetRecordedAdHoc(webId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'webId' is set
      if (webId === undefined || webId === null) {
        throw new Error("Missing the required parameter 'webId' when calling streamSetGetRecordedAdHoc");
      }

      let pathParams = {
      };
      let queryParams = {
        'webId': this.apiClient.buildCollectionParam(webId, 'multi'),
        'boundaryType': opts['boundaryType'],
        'endTime': opts['endTime'],
        'filterExpression': opts['filterExpression'],
        'includeFilteredValues': opts['includeFilteredValues'],
        'maxCount': opts['maxCount'],
        'selectedFields': opts['selectedFields'],
        'sortField': opts['sortField'],
        'sortOrder': opts['sortOrder'],
        'startTime': opts['startTime'],
        'timeZone': opts['timeZone'],
        'webIdType': opts['webIdType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json', 'text/html', 'application/x-ms-application'];
      let returnType = ItemsStreamValues;
      return this.apiClient.callApi(
        '/streamsets/recorded', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the streamSetGetRecordedAtTime operation.
     * @callback module:api/StreamSetApi~streamSetGetRecordedAtTimeCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ItemsStreamValue} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns recorded values of the attributes for an element, event frame, or attribute.
     * Any time series value in the response that contains an 'Errors' property indicates PI Web API encountered a handled error during the transfer of the response stream.
     * @param {String} webId The ID of an element, event frame or attribute, which is the base element or parent of all the stream attributes.
     * @param {String} time The timestamp at which the values are desired.
     * @param {Object} opts Optional parameters
     * @param {String} [categoryName] Specify that included attributes must have this category. The default is no category filter.
     * @param {String} [nameFilter] The name query string used for filtering attributes. The default is no filter.
     * @param {String} [retrievalMode] An optional value that determines the values to return when values don't exist at the exact time specified. The default is 'Auto'.
     * @param {Boolean} [searchFullHierarchy] Specifies if the search should include attributes nested further than the immediate attributes of the searchRoot. The default is 'false'.
     * @param {String} [selectedFields] List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned.
     * @param {Boolean} [showExcluded] Specified if the search should include attributes with the Excluded property set. The default is 'false'.
     * @param {Boolean} [showHidden] Specified if the search should include attributes with the Hidden property set. The default is 'false'.
     * @param {String} [templateName] Specify that included attributes must be members of this template. The default is no template filter.
     * @param {String} [timeZone] The time zone in which the time string will be interpreted. This parameter will be ignored if a time zone is specified in the time string. If no time zone is specified in either places, the PI Web API server time zone will be used.
     * @param {String} [webIdType] Optional parameter. Used to specify the type of WebID. Useful for URL brevity and other special cases. Default is the value of the configuration item \"WebIDType\".
     * @param {module:api/StreamSetApi~streamSetGetRecordedAtTimeCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ItemsStreamValue}
     */
    streamSetGetRecordedAtTime(webId, time, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'webId' is set
      if (webId === undefined || webId === null) {
        throw new Error("Missing the required parameter 'webId' when calling streamSetGetRecordedAtTime");
      }
      // verify the required parameter 'time' is set
      if (time === undefined || time === null) {
        throw new Error("Missing the required parameter 'time' when calling streamSetGetRecordedAtTime");
      }

      let pathParams = {
        'webId': webId
      };
      let queryParams = {
        'time': time,
        'categoryName': opts['categoryName'],
        'nameFilter': opts['nameFilter'],
        'retrievalMode': opts['retrievalMode'],
        'searchFullHierarchy': opts['searchFullHierarchy'],
        'selectedFields': opts['selectedFields'],
        'showExcluded': opts['showExcluded'],
        'showHidden': opts['showHidden'],
        'templateName': opts['templateName'],
        'timeZone': opts['timeZone'],
        'webIdType': opts['webIdType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json', 'text/html', 'application/x-ms-application'];
      let returnType = ItemsStreamValue;
      return this.apiClient.callApi(
        '/streamsets/{webId}/recordedattime', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the streamSetGetRecordedAtTimeAdHoc operation.
     * @callback module:api/StreamSetApi~streamSetGetRecordedAtTimeAdHocCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ItemsStreamValue} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns recorded values based on the passed time and retrieval mode.
     * Any time series value in the response that contains an 'Errors' property indicates PI Web API encountered a handled error during the transfer of the response stream.
     * @param {String} time The timestamp at which the values are desired.
     * @param {Array.<String>} webId The ID of a stream. Multiple streams may be specified with multiple instances of the parameter.
     * @param {Object} opts Optional parameters
     * @param {String} [retrievalMode] An optional value that determines the values to return when values don't exist at the exact time specified. The default is 'Auto'.
     * @param {String} [selectedFields] List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned.
     * @param {String} [timeZone] The time zone in which the time string will be interpreted. This parameter will be ignored if a time zone is specified in the time string. If no time zone is specified in either places, the PI Web API server time zone will be used.
     * @param {String} [webIdType] Optional parameter. Used to specify the type of WebID. Useful for URL brevity and other special cases. Default is the value of the configuration item \"WebIDType\".
     * @param {module:api/StreamSetApi~streamSetGetRecordedAtTimeAdHocCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ItemsStreamValue}
     */
    streamSetGetRecordedAtTimeAdHoc(time, webId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'time' is set
      if (time === undefined || time === null) {
        throw new Error("Missing the required parameter 'time' when calling streamSetGetRecordedAtTimeAdHoc");
      }
      // verify the required parameter 'webId' is set
      if (webId === undefined || webId === null) {
        throw new Error("Missing the required parameter 'webId' when calling streamSetGetRecordedAtTimeAdHoc");
      }

      let pathParams = {
      };
      let queryParams = {
        'time': time,
        'webId': this.apiClient.buildCollectionParam(webId, 'multi'),
        'retrievalMode': opts['retrievalMode'],
        'selectedFields': opts['selectedFields'],
        'timeZone': opts['timeZone'],
        'webIdType': opts['webIdType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json', 'text/html', 'application/x-ms-application'];
      let returnType = ItemsStreamValue;
      return this.apiClient.callApi(
        '/streamsets/recordedattime', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the streamSetGetRecordedAtTimes operation.
     * @callback module:api/StreamSetApi~streamSetGetRecordedAtTimesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ItemsStreamValues} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns recorded values of attributes for an element, event frame or attribute at the specified times.
     * Any time series value in the response that contains an 'Errors' property indicates PI Web API encountered a handled error during the transfer of the response stream.
     * @param {String} webId The ID of an element, event frame or attribute, which is the base element or parent of all the stream attributes.
     * @param {Array.<String>} time The timestamp at which to retrieve a recorded value. Multiple timestamps may be specified with multiple instances of the parameter.
     * @param {Object} opts Optional parameters
     * @param {String} [categoryName] Specify that included attributes must have this category. The default is no category filter.
     * @param {String} [nameFilter] The name query string used for filtering attributes. The default is no filter.
     * @param {String} [retrievalMode] An optional value that determines the values to return when values don't exist at the exact time specified. The default is 'Auto'.
     * @param {Boolean} [searchFullHierarchy] Specifies if the search should include attributes nested further than the immediate attributes of the searchRoot. The default is 'false'.
     * @param {String} [selectedFields] List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned.
     * @param {Boolean} [showExcluded] Specified if the search should include attributes with the Excluded property set. The default is 'false'.
     * @param {Boolean} [showHidden] Specified if the search should include attributes with the Hidden property set. The default is 'false'.
     * @param {String} [sortOrder] The order that the returned collection is sorted. The default is 'Ascending'.
     * @param {String} [templateName] Specify that included attributes must be members of this template. The default is no template filter.
     * @param {String} [timeZone] The time zone in which the time string will be interpreted. This parameter will be ignored if a time zone is specified in the time string. If no time zone is specified in either places, the PI Web API server time zone will be used.
     * @param {String} [webIdType] Optional parameter. Used to specify the type of WebID. Useful for URL brevity and other special cases. Default is the value of the configuration item \"WebIDType\".
     * @param {module:api/StreamSetApi~streamSetGetRecordedAtTimesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ItemsStreamValues}
     */
    streamSetGetRecordedAtTimes(webId, time, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'webId' is set
      if (webId === undefined || webId === null) {
        throw new Error("Missing the required parameter 'webId' when calling streamSetGetRecordedAtTimes");
      }
      // verify the required parameter 'time' is set
      if (time === undefined || time === null) {
        throw new Error("Missing the required parameter 'time' when calling streamSetGetRecordedAtTimes");
      }

      let pathParams = {
        'webId': webId
      };
      let queryParams = {
        'time': this.apiClient.buildCollectionParam(time, 'multi'),
        'categoryName': opts['categoryName'],
        'nameFilter': opts['nameFilter'],
        'retrievalMode': opts['retrievalMode'],
        'searchFullHierarchy': opts['searchFullHierarchy'],
        'selectedFields': opts['selectedFields'],
        'showExcluded': opts['showExcluded'],
        'showHidden': opts['showHidden'],
        'sortOrder': opts['sortOrder'],
        'templateName': opts['templateName'],
        'timeZone': opts['timeZone'],
        'webIdType': opts['webIdType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json', 'text/html', 'application/x-ms-application'];
      let returnType = ItemsStreamValues;
      return this.apiClient.callApi(
        '/streamsets/{webId}/recordedattimes', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the streamSetGetRecordedAtTimesAdHoc operation.
     * @callback module:api/StreamSetApi~streamSetGetRecordedAtTimesAdHocCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ItemsStreamValues} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns recorded values of the specified streams at the specified times.
     * Any time series value in the response that contains an 'Errors' property indicates PI Web API encountered a handled error during the transfer of the response stream.
     * @param {Array.<String>} time The timestamp at which to retrieve a recorded value. Multiple timestamps may be specified with multiple instances of the parameter.
     * @param {Array.<String>} webId The ID of a stream. Multiple streams may be specified with multiple instances of the parameter.
     * @param {Object} opts Optional parameters
     * @param {String} [retrievalMode] An optional value that determines the values to return when values don't exist at the exact time specified. The default is 'Auto'.
     * @param {String} [selectedFields] List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned.
     * @param {String} [sortOrder] The order that the returned collection is sorted. The default is 'Ascending'.
     * @param {String} [timeZone] The time zone in which the time string will be interpreted. This parameter will be ignored if a time zone is specified in the time string. If no time zone is specified in either places, the PI Web API server time zone will be used.
     * @param {String} [webIdType] Optional parameter. Used to specify the type of WebID. Useful for URL brevity and other special cases. Default is the value of the configuration item \"WebIDType\".
     * @param {module:api/StreamSetApi~streamSetGetRecordedAtTimesAdHocCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ItemsStreamValues}
     */
    streamSetGetRecordedAtTimesAdHoc(time, webId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'time' is set
      if (time === undefined || time === null) {
        throw new Error("Missing the required parameter 'time' when calling streamSetGetRecordedAtTimesAdHoc");
      }
      // verify the required parameter 'webId' is set
      if (webId === undefined || webId === null) {
        throw new Error("Missing the required parameter 'webId' when calling streamSetGetRecordedAtTimesAdHoc");
      }

      let pathParams = {
      };
      let queryParams = {
        'time': this.apiClient.buildCollectionParam(time, 'multi'),
        'webId': this.apiClient.buildCollectionParam(webId, 'multi'),
        'retrievalMode': opts['retrievalMode'],
        'selectedFields': opts['selectedFields'],
        'sortOrder': opts['sortOrder'],
        'timeZone': opts['timeZone'],
        'webIdType': opts['webIdType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json', 'text/html', 'application/x-ms-application'];
      let returnType = ItemsStreamValues;
      return this.apiClient.callApi(
        '/streamsets/recordedattimes', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the streamSetGetSummaries operation.
     * @callback module:api/StreamSetApi~streamSetGetSummariesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ItemsStreamSummaries} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns summary values of the attributes for an element, event frame or attribute.
     * Any time series value in the response that contains an 'Errors' property indicates PI Web API encountered a handled error during the transfer of the response stream.
     * @param {String} webId The ID of an element, event frame or attribute, which is the base element or parent of all the stream attributes.
     * @param {Object} opts Optional parameters
     * @param {String} [calculationBasis] Specifies the method of evaluating the data over the time range. The default is 'TimeWeighted'.
     * @param {String} [categoryName] Specify that included attributes must have this category. The default is no category filter.
     * @param {String} [endTime] An optional end time. The default is '*' for element attributes and points. For event frame attributes, the default is the event frame's end time, or '*' if that is not set. Note that if endTime is earlier than startTime, the resulting values will be in time-descending order.
     * @param {String} [filterExpression] A string containing a filter expression. Expression variables are relative to the attribute. Use '.' to reference the containing attribute. The default is no filtering.
     * @param {String} [nameFilter] The name query string used for filtering attributes. The default is no filter.
     * @param {String} [sampleInterval] A time span specifies how often the filter expression is evaluated when computing the summary for an interval, if the sampleType is 'Interval'.
     * @param {String} [sampleType] A flag which specifies one or more summaries to compute for each interval over the time range. The default is 'ExpressionRecordedValues'.
     * @param {Boolean} [searchFullHierarchy] Specifies if the search should include attributes nested further than the immediate attributes of the searchRoot. The default is 'false'.
     * @param {String} [selectedFields] List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned.
     * @param {Boolean} [showExcluded] Specified if the search should include attributes with the Excluded property set. The default is 'false'.
     * @param {Boolean} [showHidden] Specified if the search should include attributes with the Hidden property set. The default is 'false'.
     * @param {String} [startTime] An optional start time. The default is '*-1d' for element attributes and points. For event frame attributes, the default is the event frame's start time, or '*-1d' if that is not set.
     * @param {String} [summaryDuration] The duration of each summary interval.
     * @param {Array.<String>} [summaryType] Specifies the kinds of summaries to produce over the range. The default is 'Total'. Multiple summary types may be specified by using multiple instances of summaryType.
     * @param {String} [templateName] Specify that included attributes must be members of this template. The default is no template filter.
     * @param {String} [timeType] Specifies how to calculate the timestamp for each interval. The default is 'Auto'.
     * @param {String} [timeZone] The time zone in which the time string will be interpreted. This parameter will be ignored if a time zone is specified in the time string. If no time zone is specified in either places, the PI Web API server time zone will be used.
     * @param {String} [webIdType] Optional parameter. Used to specify the type of WebID. Useful for URL brevity and other special cases. Default is the value of the configuration item \"WebIDType\".
     * @param {module:api/StreamSetApi~streamSetGetSummariesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ItemsStreamSummaries}
     */
    streamSetGetSummaries(webId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'webId' is set
      if (webId === undefined || webId === null) {
        throw new Error("Missing the required parameter 'webId' when calling streamSetGetSummaries");
      }

      let pathParams = {
        'webId': webId
      };
      let queryParams = {
        'calculationBasis': opts['calculationBasis'],
        'categoryName': opts['categoryName'],
        'endTime': opts['endTime'],
        'filterExpression': opts['filterExpression'],
        'nameFilter': opts['nameFilter'],
        'sampleInterval': opts['sampleInterval'],
        'sampleType': opts['sampleType'],
        'searchFullHierarchy': opts['searchFullHierarchy'],
        'selectedFields': opts['selectedFields'],
        'showExcluded': opts['showExcluded'],
        'showHidden': opts['showHidden'],
        'startTime': opts['startTime'],
        'summaryDuration': opts['summaryDuration'],
        'summaryType': this.apiClient.buildCollectionParam(opts['summaryType'], 'multi'),
        'templateName': opts['templateName'],
        'timeType': opts['timeType'],
        'timeZone': opts['timeZone'],
        'webIdType': opts['webIdType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json', 'text/html', 'application/x-ms-application'];
      let returnType = ItemsStreamSummaries;
      return this.apiClient.callApi(
        '/streamsets/{webId}/summary', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the streamSetGetSummariesAdHoc operation.
     * @callback module:api/StreamSetApi~streamSetGetSummariesAdHocCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ItemsStreamSummaries} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns summary values of the specified streams.
     * Any time series value in the response that contains an 'Errors' property indicates PI Web API encountered a handled error during the transfer of the response stream.
     * @param {Array.<String>} webId The ID of a stream. Multiple streams may be specified with multiple instances of the parameter.
     * @param {Object} opts Optional parameters
     * @param {String} [calculationBasis] Specifies the method of evaluating the data over the time range. The default is 'TimeWeighted'.
     * @param {String} [endTime] An optional end time. The default is '*'. Note that if endTime is earlier than startTime, the resulting values will be in time-descending order.
     * @param {String} [filterExpression] A string containing a filter expression. Expression variables are relative to the attribute. Use '.' to reference the containing attribute. The default is no filtering.
     * @param {String} [sampleInterval] A time span specifies how often the filter expression is evaluated when computing the summary for an interval, if the sampleType is 'Interval'.
     * @param {String} [sampleType] A flag which specifies one or more summaries to compute for each interval over the time range. The default is 'ExpressionRecordedValues'.
     * @param {String} [selectedFields] List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned.
     * @param {String} [startTime] An optional start time. The default is '*-1d'.
     * @param {String} [summaryDuration] The duration of each summary interval.
     * @param {Array.<String>} [summaryType] Specifies the kinds of summaries to produce over the range. The default is 'Total'. Multiple summary types may be specified by using multiple instances of summaryType.
     * @param {String} [timeType] Specifies how to calculate the timestamp for each interval. The default is 'Auto'.
     * @param {String} [timeZone] The time zone in which the time string will be interpreted. This parameter will be ignored if a time zone is specified in the time string. If no time zone is specified in either places, the PI Web API server time zone will be used.
     * @param {String} [webIdType] Optional parameter. Used to specify the type of WebID. Useful for URL brevity and other special cases. Default is the value of the configuration item \"WebIDType\".
     * @param {module:api/StreamSetApi~streamSetGetSummariesAdHocCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ItemsStreamSummaries}
     */
    streamSetGetSummariesAdHoc(webId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'webId' is set
      if (webId === undefined || webId === null) {
        throw new Error("Missing the required parameter 'webId' when calling streamSetGetSummariesAdHoc");
      }

      let pathParams = {
      };
      let queryParams = {
        'webId': this.apiClient.buildCollectionParam(webId, 'multi'),
        'calculationBasis': opts['calculationBasis'],
        'endTime': opts['endTime'],
        'filterExpression': opts['filterExpression'],
        'sampleInterval': opts['sampleInterval'],
        'sampleType': opts['sampleType'],
        'selectedFields': opts['selectedFields'],
        'startTime': opts['startTime'],
        'summaryDuration': opts['summaryDuration'],
        'summaryType': this.apiClient.buildCollectionParam(opts['summaryType'], 'multi'),
        'timeType': opts['timeType'],
        'timeZone': opts['timeZone'],
        'webIdType': opts['webIdType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json', 'text/html', 'application/x-ms-application'];
      let returnType = ItemsStreamSummaries;
      return this.apiClient.callApi(
        '/streamsets/summary', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the streamSetGetValues operation.
     * @callback module:api/StreamSetApi~streamSetGetValuesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ItemsStreamValue} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns values of the attributes for an Element, Event Frame or Attribute at the specified time.
     * Any time series value in the response that contains an 'Errors' property indicates PI Web API encountered a handled error during the transfer of the response stream.
     * @param {String} webId The ID of an Element, Event Frame or Attribute, which is the base element or parent of all the stream attributes.
     * @param {Object} opts Optional parameters
     * @param {String} [categoryName] Specify that included attributes must have this category. The default is no category filter.
     * @param {String} [nameFilter] The name query string used for filtering attributes. The default is no filter.
     * @param {Boolean} [searchFullHierarchy] Specifies if the search should include attributes nested further than the immediate attributes of the searchRoot. The default is 'false'.
     * @param {String} [selectedFields] List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned.
     * @param {Boolean} [showExcluded] Specified if the search should include attributes with the Excluded property set. The default is 'false'.
     * @param {Boolean} [showHidden] Specified if the search should include attributes with the Hidden property set. The default is 'false'.
     * @param {String} [sortField] The field or property of the object used to sort the returned collection. For better performance, by default no sorting is applied. 'Name' is the only supported field by which to sort.
     * @param {String} [sortOrder] The order that the returned collection is sorted. The default is 'Ascending'
     * @param {String} [templateName] Specify that included attributes must be members of this template. The default is no template filter.
     * @param {String} [time] An AF time string, which is used as the time context to get stream values if it is provided. By default, it is not specified, and the default time context of the AF object will be used.
     * @param {String} [timeZone] The time zone in which the time string will be interpreted. This parameter will be ignored if a time zone is specified in the time string. If no time zone is specified in either places, the PI Web API server time zone will be used.
     * @param {String} [webIdType] Optional parameter. Used to specify the type of WebID. Useful for URL brevity and other special cases. Default is the value of the configuration item \"WebIDType\".
     * @param {module:api/StreamSetApi~streamSetGetValuesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ItemsStreamValue}
     */
    streamSetGetValues(webId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'webId' is set
      if (webId === undefined || webId === null) {
        throw new Error("Missing the required parameter 'webId' when calling streamSetGetValues");
      }

      let pathParams = {
        'webId': webId
      };
      let queryParams = {
        'categoryName': opts['categoryName'],
        'nameFilter': opts['nameFilter'],
        'searchFullHierarchy': opts['searchFullHierarchy'],
        'selectedFields': opts['selectedFields'],
        'showExcluded': opts['showExcluded'],
        'showHidden': opts['showHidden'],
        'sortField': opts['sortField'],
        'sortOrder': opts['sortOrder'],
        'templateName': opts['templateName'],
        'time': opts['time'],
        'timeZone': opts['timeZone'],
        'webIdType': opts['webIdType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json', 'text/html', 'application/x-ms-application'];
      let returnType = ItemsStreamValue;
      return this.apiClient.callApi(
        '/streamsets/{webId}/value', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the streamSetGetValuesAdHoc operation.
     * @callback module:api/StreamSetApi~streamSetGetValuesAdHocCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ItemsStreamValue} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns values of the specified streams.
     * Any time series value in the response that contains an 'Errors' property indicates PI Web API encountered a handled error during the transfer of the response stream.
     * @param {Array.<String>} webId The ID of a stream. Multiple streams may be specified with multiple instances of the parameter.
     * @param {Object} opts Optional parameters
     * @param {String} [selectedFields] List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned.
     * @param {String} [sortField] The field or property of the object used to sort the returned collection. For better performance, by default no sorting is applied. 'Name' is the only supported field by which to sort.
     * @param {String} [sortOrder] The order that the returned collection is sorted. The default is 'Ascending'
     * @param {String} [time] An AF time string, which is used as the time context to get stream values if it is provided. By default, it is not specified, and the default time context of the AF object will be used.
     * @param {String} [timeZone] The time zone in which the time string will be interpreted. This parameter will be ignored if a time zone is specified in the time string. If no time zone is specified in either places, the PI Web API server time zone will be used.
     * @param {String} [webIdType] Optional parameter. Used to specify the type of WebID. Useful for URL brevity and other special cases. Default is the value of the configuration item \"WebIDType\".
     * @param {module:api/StreamSetApi~streamSetGetValuesAdHocCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ItemsStreamValue}
     */
    streamSetGetValuesAdHoc(webId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'webId' is set
      if (webId === undefined || webId === null) {
        throw new Error("Missing the required parameter 'webId' when calling streamSetGetValuesAdHoc");
      }

      let pathParams = {
      };
      let queryParams = {
        'webId': this.apiClient.buildCollectionParam(webId, 'multi'),
        'selectedFields': opts['selectedFields'],
        'sortField': opts['sortField'],
        'sortOrder': opts['sortOrder'],
        'time': opts['time'],
        'timeZone': opts['timeZone'],
        'webIdType': opts['webIdType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json', 'text/html', 'application/x-ms-application'];
      let returnType = ItemsStreamValue;
      return this.apiClient.callApi(
        '/streamsets/value', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the streamSetRegisterStreamSetUpdates operation.
     * @callback module:api/StreamSetApi~streamSetRegisterStreamSetUpdatesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ItemsStreamUpdatesRegister} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Register for stream updates
     * The supplied webIds will register for stream updates. For a 200 response, the returned location header will contain the url for retrieving the next set of stream updates.
     * @param {Array.<String>} webId The ID of a stream. Multiple streams may be specified with multiple instances of the parameter.
     * @param {Object} opts Optional parameters
     * @param {String} [selectedFields] List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned.
     * @param {String} [webIdType] Optional parameter. Used to specify the type of WebID. Useful for URL brevity and other special cases. Default is the value of the configuration item \"WebIDType\".
     * @param {module:api/StreamSetApi~streamSetRegisterStreamSetUpdatesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ItemsStreamUpdatesRegister}
     */
    streamSetRegisterStreamSetUpdates(webId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'webId' is set
      if (webId === undefined || webId === null) {
        throw new Error("Missing the required parameter 'webId' when calling streamSetRegisterStreamSetUpdates");
      }

      let pathParams = {
      };
      let queryParams = {
        'webId': this.apiClient.buildCollectionParam(webId, 'multi'),
        'selectedFields': opts['selectedFields'],
        'webIdType': opts['webIdType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json', 'text/html', 'application/x-ms-application'];
      let returnType = ItemsStreamUpdatesRegister;
      return this.apiClient.callApi(
        '/streamsets/updates', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the streamSetRetrieveStreamSetUpdates operation.
     * @callback module:api/StreamSetApi~streamSetRetrieveStreamSetUpdatesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ItemsStreamUpdatesRetrieve} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Receive stream updates
     * The supplied markers will identify the set of stream updates to retrieve. For a 200 response, the returned location header will contain the url for retrieving the stream updates.
     * @param {Array.<String>} marker Identifier of stream source and current position. Multiple markers may be specified with multiple instances of the parameter.
     * @param {Object} opts Optional parameters
     * @param {String} [selectedFields] List of fields to be returned in the response, separated by semicolons (;). If this parameter is not specified, all available fields will be returned.
     * @param {String} [webIdType] Optional parameter. Used to specify the type of WebID. Useful for URL brevity and other special cases. Default is the value of the configuration item \"WebIDType\".
     * @param {module:api/StreamSetApi~streamSetRetrieveStreamSetUpdatesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ItemsStreamUpdatesRetrieve}
     */
    streamSetRetrieveStreamSetUpdates(marker, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'marker' is set
      if (marker === undefined || marker === null) {
        throw new Error("Missing the required parameter 'marker' when calling streamSetRetrieveStreamSetUpdates");
      }

      let pathParams = {
      };
      let queryParams = {
        'marker': this.apiClient.buildCollectionParam(marker, 'multi'),
        'selectedFields': opts['selectedFields'],
        'webIdType': opts['webIdType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json', 'text/html', 'application/x-ms-application'];
      let returnType = ItemsStreamUpdatesRetrieve;
      return this.apiClient.callApi(
        '/streamsets/updates', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the streamSetUpdateValue operation.
     * @callback module:api/StreamSetApi~streamSetUpdateValueCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ItemsSubstatus} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates a single value for the specified streams.
     * @param {String} webId The ID of the parent element, event frame, or attribute. Attributes specified in the body must be descendants of the specified object.
     * @param {Array.<module:model/StreamValue>} values The values to add or update.
     * @param {Object} opts Optional parameters
     * @param {String} [bufferOption] The desired AFBufferOption. The default is 'BufferIfPossible'.
     * @param {String} [updateOption] The desired AFUpdateOption. The default is 'Replace'.
     * @param {module:api/StreamSetApi~streamSetUpdateValueCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ItemsSubstatus}
     */
    streamSetUpdateValue(webId, values, opts, callback) {
      opts = opts || {};
      let postBody = values;
      // verify the required parameter 'webId' is set
      if (webId === undefined || webId === null) {
        throw new Error("Missing the required parameter 'webId' when calling streamSetUpdateValue");
      }
      // verify the required parameter 'values' is set
      if (values === undefined || values === null) {
        throw new Error("Missing the required parameter 'values' when calling streamSetUpdateValue");
      }

      let pathParams = {
        'webId': webId
      };
      let queryParams = {
        'bufferOption': opts['bufferOption'],
        'updateOption': opts['updateOption']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json', 'text/json'];
      let accepts = ['application/json', 'text/json', 'text/html', 'application/x-ms-application'];
      let returnType = ItemsSubstatus;
      return this.apiClient.callApi(
        '/streamsets/{webId}/value', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the streamSetUpdateValueAdHoc operation.
     * @callback module:api/StreamSetApi~streamSetUpdateValueAdHocCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ItemsSubstatus} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates a single value for the specified streams.
     * @param {Array.<module:model/StreamValue>} values The values to add or update.
     * @param {Object} opts Optional parameters
     * @param {String} [bufferOption] The desired AFBufferOption. The default is 'BufferIfPossible'.
     * @param {String} [updateOption] The desired AFUpdateOption. The default is 'Replace'.
     * @param {module:api/StreamSetApi~streamSetUpdateValueAdHocCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ItemsSubstatus}
     */
    streamSetUpdateValueAdHoc(values, opts, callback) {
      opts = opts || {};
      let postBody = values;
      // verify the required parameter 'values' is set
      if (values === undefined || values === null) {
        throw new Error("Missing the required parameter 'values' when calling streamSetUpdateValueAdHoc");
      }

      let pathParams = {
      };
      let queryParams = {
        'bufferOption': opts['bufferOption'],
        'updateOption': opts['updateOption']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json', 'text/json'];
      let accepts = ['application/json', 'text/json', 'text/html', 'application/x-ms-application'];
      let returnType = ItemsSubstatus;
      return this.apiClient.callApi(
        '/streamsets/value', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the streamSetUpdateValues operation.
     * @callback module:api/StreamSetApi~streamSetUpdateValuesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ItemsItemsSubstatus} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates multiple values for the specified streams.
     * @param {String} webId The ID of the parent element, event frame, or attribute. Attributes specified in the body must be descendants of the specified object.
     * @param {Array.<module:model/StreamValues>} values The values to add or update.
     * @param {Object} opts Optional parameters
     * @param {String} [bufferOption] The desired AFBufferOption. The default is 'BufferIfPossible'.
     * @param {String} [updateOption] The desired AFUpdateOption. The default is 'Replace'.
     * @param {module:api/StreamSetApi~streamSetUpdateValuesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ItemsItemsSubstatus}
     */
    streamSetUpdateValues(webId, values, opts, callback) {
      opts = opts || {};
      let postBody = values;
      // verify the required parameter 'webId' is set
      if (webId === undefined || webId === null) {
        throw new Error("Missing the required parameter 'webId' when calling streamSetUpdateValues");
      }
      // verify the required parameter 'values' is set
      if (values === undefined || values === null) {
        throw new Error("Missing the required parameter 'values' when calling streamSetUpdateValues");
      }

      let pathParams = {
        'webId': webId
      };
      let queryParams = {
        'bufferOption': opts['bufferOption'],
        'updateOption': opts['updateOption']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json', 'text/json'];
      let accepts = ['application/json', 'text/json', 'text/html', 'application/x-ms-application'];
      let returnType = ItemsItemsSubstatus;
      return this.apiClient.callApi(
        '/streamsets/{webId}/recorded', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the streamSetUpdateValuesAdHoc operation.
     * @callback module:api/StreamSetApi~streamSetUpdateValuesAdHocCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ItemsItemsSubstatus} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates multiple values for the specified streams.
     * @param {Array.<module:model/StreamValues>} values The values to add or update.
     * @param {Object} opts Optional parameters
     * @param {String} [bufferOption] The desired AFBufferOption. The default is 'BufferIfPossible'.
     * @param {String} [updateOption] The desired AFUpdateOption. The default is 'Replace'.
     * @param {module:api/StreamSetApi~streamSetUpdateValuesAdHocCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ItemsItemsSubstatus}
     */
    streamSetUpdateValuesAdHoc(values, opts, callback) {
      opts = opts || {};
      let postBody = values;
      // verify the required parameter 'values' is set
      if (values === undefined || values === null) {
        throw new Error("Missing the required parameter 'values' when calling streamSetUpdateValuesAdHoc");
      }

      let pathParams = {
      };
      let queryParams = {
        'bufferOption': opts['bufferOption'],
        'updateOption': opts['updateOption']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json', 'text/json'];
      let accepts = ['application/json', 'text/json', 'text/html', 'application/x-ms-application'];
      let returnType = ItemsItemsSubstatus;
      return this.apiClient.callApi(
        '/streamsets/recorded', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
