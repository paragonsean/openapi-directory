/**
 * PI Web API 2018 SP1 Swagger Spec
 * Swagger Spec file that describes PI Web API
 *
 * The version of the OpenAPI document: 1.11.1.5383
 * Contact: techsupport@osisoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AssetDatabaseLinks model module.
 * @module model/AssetDatabaseLinks
 * @version 1.11.1.5383
 */
class AssetDatabaseLinks {
    /**
     * Constructs a new <code>AssetDatabaseLinks</code>.
     * @alias module:model/AssetDatabaseLinks
     */
    constructor() { 
        
        AssetDatabaseLinks.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AssetDatabaseLinks</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AssetDatabaseLinks} obj Optional instance to populate.
     * @return {module:model/AssetDatabaseLinks} The populated <code>AssetDatabaseLinks</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AssetDatabaseLinks();

            if (data.hasOwnProperty('AnalysisCategories')) {
                obj['AnalysisCategories'] = ApiClient.convertToType(data['AnalysisCategories'], 'String');
            }
            if (data.hasOwnProperty('AnalysisTemplates')) {
                obj['AnalysisTemplates'] = ApiClient.convertToType(data['AnalysisTemplates'], 'String');
            }
            if (data.hasOwnProperty('AssetServer')) {
                obj['AssetServer'] = ApiClient.convertToType(data['AssetServer'], 'String');
            }
            if (data.hasOwnProperty('AttributeCategories')) {
                obj['AttributeCategories'] = ApiClient.convertToType(data['AttributeCategories'], 'String');
            }
            if (data.hasOwnProperty('ElementCategories')) {
                obj['ElementCategories'] = ApiClient.convertToType(data['ElementCategories'], 'String');
            }
            if (data.hasOwnProperty('ElementTemplates')) {
                obj['ElementTemplates'] = ApiClient.convertToType(data['ElementTemplates'], 'String');
            }
            if (data.hasOwnProperty('Elements')) {
                obj['Elements'] = ApiClient.convertToType(data['Elements'], 'String');
            }
            if (data.hasOwnProperty('EnumerationSets')) {
                obj['EnumerationSets'] = ApiClient.convertToType(data['EnumerationSets'], 'String');
            }
            if (data.hasOwnProperty('EventFrames')) {
                obj['EventFrames'] = ApiClient.convertToType(data['EventFrames'], 'String');
            }
            if (data.hasOwnProperty('Security')) {
                obj['Security'] = ApiClient.convertToType(data['Security'], 'String');
            }
            if (data.hasOwnProperty('SecurityEntries')) {
                obj['SecurityEntries'] = ApiClient.convertToType(data['SecurityEntries'], 'String');
            }
            if (data.hasOwnProperty('Self')) {
                obj['Self'] = ApiClient.convertToType(data['Self'], 'String');
            }
            if (data.hasOwnProperty('TableCategories')) {
                obj['TableCategories'] = ApiClient.convertToType(data['TableCategories'], 'String');
            }
            if (data.hasOwnProperty('Tables')) {
                obj['Tables'] = ApiClient.convertToType(data['Tables'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AssetDatabaseLinks</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AssetDatabaseLinks</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['AnalysisCategories'] && !(typeof data['AnalysisCategories'] === 'string' || data['AnalysisCategories'] instanceof String)) {
            throw new Error("Expected the field `AnalysisCategories` to be a primitive type in the JSON string but got " + data['AnalysisCategories']);
        }
        // ensure the json data is a string
        if (data['AnalysisTemplates'] && !(typeof data['AnalysisTemplates'] === 'string' || data['AnalysisTemplates'] instanceof String)) {
            throw new Error("Expected the field `AnalysisTemplates` to be a primitive type in the JSON string but got " + data['AnalysisTemplates']);
        }
        // ensure the json data is a string
        if (data['AssetServer'] && !(typeof data['AssetServer'] === 'string' || data['AssetServer'] instanceof String)) {
            throw new Error("Expected the field `AssetServer` to be a primitive type in the JSON string but got " + data['AssetServer']);
        }
        // ensure the json data is a string
        if (data['AttributeCategories'] && !(typeof data['AttributeCategories'] === 'string' || data['AttributeCategories'] instanceof String)) {
            throw new Error("Expected the field `AttributeCategories` to be a primitive type in the JSON string but got " + data['AttributeCategories']);
        }
        // ensure the json data is a string
        if (data['ElementCategories'] && !(typeof data['ElementCategories'] === 'string' || data['ElementCategories'] instanceof String)) {
            throw new Error("Expected the field `ElementCategories` to be a primitive type in the JSON string but got " + data['ElementCategories']);
        }
        // ensure the json data is a string
        if (data['ElementTemplates'] && !(typeof data['ElementTemplates'] === 'string' || data['ElementTemplates'] instanceof String)) {
            throw new Error("Expected the field `ElementTemplates` to be a primitive type in the JSON string but got " + data['ElementTemplates']);
        }
        // ensure the json data is a string
        if (data['Elements'] && !(typeof data['Elements'] === 'string' || data['Elements'] instanceof String)) {
            throw new Error("Expected the field `Elements` to be a primitive type in the JSON string but got " + data['Elements']);
        }
        // ensure the json data is a string
        if (data['EnumerationSets'] && !(typeof data['EnumerationSets'] === 'string' || data['EnumerationSets'] instanceof String)) {
            throw new Error("Expected the field `EnumerationSets` to be a primitive type in the JSON string but got " + data['EnumerationSets']);
        }
        // ensure the json data is a string
        if (data['EventFrames'] && !(typeof data['EventFrames'] === 'string' || data['EventFrames'] instanceof String)) {
            throw new Error("Expected the field `EventFrames` to be a primitive type in the JSON string but got " + data['EventFrames']);
        }
        // ensure the json data is a string
        if (data['Security'] && !(typeof data['Security'] === 'string' || data['Security'] instanceof String)) {
            throw new Error("Expected the field `Security` to be a primitive type in the JSON string but got " + data['Security']);
        }
        // ensure the json data is a string
        if (data['SecurityEntries'] && !(typeof data['SecurityEntries'] === 'string' || data['SecurityEntries'] instanceof String)) {
            throw new Error("Expected the field `SecurityEntries` to be a primitive type in the JSON string but got " + data['SecurityEntries']);
        }
        // ensure the json data is a string
        if (data['Self'] && !(typeof data['Self'] === 'string' || data['Self'] instanceof String)) {
            throw new Error("Expected the field `Self` to be a primitive type in the JSON string but got " + data['Self']);
        }
        // ensure the json data is a string
        if (data['TableCategories'] && !(typeof data['TableCategories'] === 'string' || data['TableCategories'] instanceof String)) {
            throw new Error("Expected the field `TableCategories` to be a primitive type in the JSON string but got " + data['TableCategories']);
        }
        // ensure the json data is a string
        if (data['Tables'] && !(typeof data['Tables'] === 'string' || data['Tables'] instanceof String)) {
            throw new Error("Expected the field `Tables` to be a primitive type in the JSON string but got " + data['Tables']);
        }

        return true;
    }


}



/**
 * @member {String} AnalysisCategories
 */
AssetDatabaseLinks.prototype['AnalysisCategories'] = undefined;

/**
 * @member {String} AnalysisTemplates
 */
AssetDatabaseLinks.prototype['AnalysisTemplates'] = undefined;

/**
 * @member {String} AssetServer
 */
AssetDatabaseLinks.prototype['AssetServer'] = undefined;

/**
 * @member {String} AttributeCategories
 */
AssetDatabaseLinks.prototype['AttributeCategories'] = undefined;

/**
 * @member {String} ElementCategories
 */
AssetDatabaseLinks.prototype['ElementCategories'] = undefined;

/**
 * @member {String} ElementTemplates
 */
AssetDatabaseLinks.prototype['ElementTemplates'] = undefined;

/**
 * @member {String} Elements
 */
AssetDatabaseLinks.prototype['Elements'] = undefined;

/**
 * @member {String} EnumerationSets
 */
AssetDatabaseLinks.prototype['EnumerationSets'] = undefined;

/**
 * @member {String} EventFrames
 */
AssetDatabaseLinks.prototype['EventFrames'] = undefined;

/**
 * @member {String} Security
 */
AssetDatabaseLinks.prototype['Security'] = undefined;

/**
 * @member {String} SecurityEntries
 */
AssetDatabaseLinks.prototype['SecurityEntries'] = undefined;

/**
 * @member {String} Self
 */
AssetDatabaseLinks.prototype['Self'] = undefined;

/**
 * @member {String} TableCategories
 */
AssetDatabaseLinks.prototype['TableCategories'] = undefined;

/**
 * @member {String} Tables
 */
AssetDatabaseLinks.prototype['Tables'] = undefined;






export default AssetDatabaseLinks;

