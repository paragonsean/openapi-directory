/**
 * PI Web API 2018 SP1 Swagger Spec
 * Swagger Spec file that describes PI Web API
 *
 * The version of the OpenAPI document: 1.11.1.5383
 * Contact: techsupport@osisoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ElementTemplateLinks from './ElementTemplateLinks';
import Value from './Value';
import WebException from './WebException';

/**
 * The ElementTemplate model module.
 * @module model/ElementTemplate
 * @version 1.11.1.5383
 */
class ElementTemplate {
    /**
     * Constructs a new <code>ElementTemplate</code>.
     * @alias module:model/ElementTemplate
     */
    constructor() { 
        
        ElementTemplate.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ElementTemplate</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ElementTemplate} obj Optional instance to populate.
     * @return {module:model/ElementTemplate} The populated <code>ElementTemplate</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ElementTemplate();

            if (data.hasOwnProperty('AllowElementToExtend')) {
                obj['AllowElementToExtend'] = ApiClient.convertToType(data['AllowElementToExtend'], 'Boolean');
            }
            if (data.hasOwnProperty('BaseTemplate')) {
                obj['BaseTemplate'] = ApiClient.convertToType(data['BaseTemplate'], 'String');
            }
            if (data.hasOwnProperty('CanBeAcknowledged')) {
                obj['CanBeAcknowledged'] = ApiClient.convertToType(data['CanBeAcknowledged'], 'Boolean');
            }
            if (data.hasOwnProperty('CategoryNames')) {
                obj['CategoryNames'] = ApiClient.convertToType(data['CategoryNames'], ['String']);
            }
            if (data.hasOwnProperty('Description')) {
                obj['Description'] = ApiClient.convertToType(data['Description'], 'String');
            }
            if (data.hasOwnProperty('ExtendedProperties')) {
                obj['ExtendedProperties'] = ApiClient.convertToType(data['ExtendedProperties'], {'String': Value});
            }
            if (data.hasOwnProperty('Id')) {
                obj['Id'] = ApiClient.convertToType(data['Id'], 'String');
            }
            if (data.hasOwnProperty('InstanceType')) {
                obj['InstanceType'] = ApiClient.convertToType(data['InstanceType'], 'String');
            }
            if (data.hasOwnProperty('Links')) {
                obj['Links'] = ElementTemplateLinks.constructFromObject(data['Links']);
            }
            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('NamingPattern')) {
                obj['NamingPattern'] = ApiClient.convertToType(data['NamingPattern'], 'String');
            }
            if (data.hasOwnProperty('Path')) {
                obj['Path'] = ApiClient.convertToType(data['Path'], 'String');
            }
            if (data.hasOwnProperty('Severity')) {
                obj['Severity'] = ApiClient.convertToType(data['Severity'], 'String');
            }
            if (data.hasOwnProperty('WebException')) {
                obj['WebException'] = WebException.constructFromObject(data['WebException']);
            }
            if (data.hasOwnProperty('WebId')) {
                obj['WebId'] = ApiClient.convertToType(data['WebId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ElementTemplate</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ElementTemplate</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['BaseTemplate'] && !(typeof data['BaseTemplate'] === 'string' || data['BaseTemplate'] instanceof String)) {
            throw new Error("Expected the field `BaseTemplate` to be a primitive type in the JSON string but got " + data['BaseTemplate']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['CategoryNames'])) {
            throw new Error("Expected the field `CategoryNames` to be an array in the JSON data but got " + data['CategoryNames']);
        }
        // ensure the json data is a string
        if (data['Description'] && !(typeof data['Description'] === 'string' || data['Description'] instanceof String)) {
            throw new Error("Expected the field `Description` to be a primitive type in the JSON string but got " + data['Description']);
        }
        // ensure the json data is a string
        if (data['Id'] && !(typeof data['Id'] === 'string' || data['Id'] instanceof String)) {
            throw new Error("Expected the field `Id` to be a primitive type in the JSON string but got " + data['Id']);
        }
        // ensure the json data is a string
        if (data['InstanceType'] && !(typeof data['InstanceType'] === 'string' || data['InstanceType'] instanceof String)) {
            throw new Error("Expected the field `InstanceType` to be a primitive type in the JSON string but got " + data['InstanceType']);
        }
        // validate the optional field `Links`
        if (data['Links']) { // data not null
          ElementTemplateLinks.validateJSON(data['Links']);
        }
        // ensure the json data is a string
        if (data['Name'] && !(typeof data['Name'] === 'string' || data['Name'] instanceof String)) {
            throw new Error("Expected the field `Name` to be a primitive type in the JSON string but got " + data['Name']);
        }
        // ensure the json data is a string
        if (data['NamingPattern'] && !(typeof data['NamingPattern'] === 'string' || data['NamingPattern'] instanceof String)) {
            throw new Error("Expected the field `NamingPattern` to be a primitive type in the JSON string but got " + data['NamingPattern']);
        }
        // ensure the json data is a string
        if (data['Path'] && !(typeof data['Path'] === 'string' || data['Path'] instanceof String)) {
            throw new Error("Expected the field `Path` to be a primitive type in the JSON string but got " + data['Path']);
        }
        // ensure the json data is a string
        if (data['Severity'] && !(typeof data['Severity'] === 'string' || data['Severity'] instanceof String)) {
            throw new Error("Expected the field `Severity` to be a primitive type in the JSON string but got " + data['Severity']);
        }
        // validate the optional field `WebException`
        if (data['WebException']) { // data not null
          WebException.validateJSON(data['WebException']);
        }
        // ensure the json data is a string
        if (data['WebId'] && !(typeof data['WebId'] === 'string' || data['WebId'] instanceof String)) {
            throw new Error("Expected the field `WebId` to be a primitive type in the JSON string but got " + data['WebId']);
        }

        return true;
    }


}



/**
 * @member {Boolean} AllowElementToExtend
 */
ElementTemplate.prototype['AllowElementToExtend'] = undefined;

/**
 * @member {String} BaseTemplate
 */
ElementTemplate.prototype['BaseTemplate'] = undefined;

/**
 * @member {Boolean} CanBeAcknowledged
 */
ElementTemplate.prototype['CanBeAcknowledged'] = undefined;

/**
 * @member {Array.<String>} CategoryNames
 */
ElementTemplate.prototype['CategoryNames'] = undefined;

/**
 * @member {String} Description
 */
ElementTemplate.prototype['Description'] = undefined;

/**
 * @member {Object.<String, module:model/Value>} ExtendedProperties
 */
ElementTemplate.prototype['ExtendedProperties'] = undefined;

/**
 * @member {String} Id
 */
ElementTemplate.prototype['Id'] = undefined;

/**
 * @member {String} InstanceType
 */
ElementTemplate.prototype['InstanceType'] = undefined;

/**
 * @member {module:model/ElementTemplateLinks} Links
 */
ElementTemplate.prototype['Links'] = undefined;

/**
 * @member {String} Name
 */
ElementTemplate.prototype['Name'] = undefined;

/**
 * @member {String} NamingPattern
 */
ElementTemplate.prototype['NamingPattern'] = undefined;

/**
 * @member {String} Path
 */
ElementTemplate.prototype['Path'] = undefined;

/**
 * @member {String} Severity
 */
ElementTemplate.prototype['Severity'] = undefined;

/**
 * @member {module:model/WebException} WebException
 */
ElementTemplate.prototype['WebException'] = undefined;

/**
 * @member {String} WebId
 */
ElementTemplate.prototype['WebId'] = undefined;






export default ElementTemplate;

