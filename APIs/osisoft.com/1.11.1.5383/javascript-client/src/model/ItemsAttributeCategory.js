/**
 * PI Web API 2018 SP1 Swagger Spec
 * Swagger Spec file that describes PI Web API
 *
 * The version of the OpenAPI document: 1.11.1.5383
 * Contact: techsupport@osisoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AttributeCategory from './AttributeCategory';
import PaginationLinks from './PaginationLinks';

/**
 * The ItemsAttributeCategory model module.
 * @module model/ItemsAttributeCategory
 * @version 1.11.1.5383
 */
class ItemsAttributeCategory {
    /**
     * Constructs a new <code>ItemsAttributeCategory</code>.
     * @alias module:model/ItemsAttributeCategory
     */
    constructor() { 
        
        ItemsAttributeCategory.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ItemsAttributeCategory</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ItemsAttributeCategory} obj Optional instance to populate.
     * @return {module:model/ItemsAttributeCategory} The populated <code>ItemsAttributeCategory</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ItemsAttributeCategory();

            if (data.hasOwnProperty('Items')) {
                obj['Items'] = ApiClient.convertToType(data['Items'], [AttributeCategory]);
            }
            if (data.hasOwnProperty('Links')) {
                obj['Links'] = PaginationLinks.constructFromObject(data['Links']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ItemsAttributeCategory</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ItemsAttributeCategory</code>.
     */
    static validateJSON(data) {
        if (data['Items']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['Items'])) {
                throw new Error("Expected the field `Items` to be an array in the JSON data but got " + data['Items']);
            }
            // validate the optional field `Items` (array)
            for (const item of data['Items']) {
                AttributeCategory.validateJSON(item);
            };
        }
        // validate the optional field `Links`
        if (data['Links']) { // data not null
          PaginationLinks.validateJSON(data['Links']);
        }

        return true;
    }


}



/**
 * @member {Array.<module:model/AttributeCategory>} Items
 */
ItemsAttributeCategory.prototype['Items'] = undefined;

/**
 * @member {module:model/PaginationLinks} Links
 */
ItemsAttributeCategory.prototype['Links'] = undefined;






export default ItemsAttributeCategory;

