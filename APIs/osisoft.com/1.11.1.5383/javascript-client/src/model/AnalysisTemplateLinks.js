/**
 * PI Web API 2018 SP1 Swagger Spec
 * Swagger Spec file that describes PI Web API
 *
 * The version of the OpenAPI document: 1.11.1.5383
 * Contact: techsupport@osisoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AnalysisTemplateLinks model module.
 * @module model/AnalysisTemplateLinks
 * @version 1.11.1.5383
 */
class AnalysisTemplateLinks {
    /**
     * Constructs a new <code>AnalysisTemplateLinks</code>.
     * @alias module:model/AnalysisTemplateLinks
     */
    constructor() { 
        
        AnalysisTemplateLinks.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AnalysisTemplateLinks</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AnalysisTemplateLinks} obj Optional instance to populate.
     * @return {module:model/AnalysisTemplateLinks} The populated <code>AnalysisTemplateLinks</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AnalysisTemplateLinks();

            if (data.hasOwnProperty('AnalysisRule')) {
                obj['AnalysisRule'] = ApiClient.convertToType(data['AnalysisRule'], 'String');
            }
            if (data.hasOwnProperty('AnalysisRulePlugIn')) {
                obj['AnalysisRulePlugIn'] = ApiClient.convertToType(data['AnalysisRulePlugIn'], 'String');
            }
            if (data.hasOwnProperty('Categories')) {
                obj['Categories'] = ApiClient.convertToType(data['Categories'], 'String');
            }
            if (data.hasOwnProperty('Database')) {
                obj['Database'] = ApiClient.convertToType(data['Database'], 'String');
            }
            if (data.hasOwnProperty('Security')) {
                obj['Security'] = ApiClient.convertToType(data['Security'], 'String');
            }
            if (data.hasOwnProperty('SecurityEntries')) {
                obj['SecurityEntries'] = ApiClient.convertToType(data['SecurityEntries'], 'String');
            }
            if (data.hasOwnProperty('Self')) {
                obj['Self'] = ApiClient.convertToType(data['Self'], 'String');
            }
            if (data.hasOwnProperty('Target')) {
                obj['Target'] = ApiClient.convertToType(data['Target'], 'String');
            }
            if (data.hasOwnProperty('TimeRule')) {
                obj['TimeRule'] = ApiClient.convertToType(data['TimeRule'], 'String');
            }
            if (data.hasOwnProperty('TimeRulePlugIn')) {
                obj['TimeRulePlugIn'] = ApiClient.convertToType(data['TimeRulePlugIn'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AnalysisTemplateLinks</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AnalysisTemplateLinks</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['AnalysisRule'] && !(typeof data['AnalysisRule'] === 'string' || data['AnalysisRule'] instanceof String)) {
            throw new Error("Expected the field `AnalysisRule` to be a primitive type in the JSON string but got " + data['AnalysisRule']);
        }
        // ensure the json data is a string
        if (data['AnalysisRulePlugIn'] && !(typeof data['AnalysisRulePlugIn'] === 'string' || data['AnalysisRulePlugIn'] instanceof String)) {
            throw new Error("Expected the field `AnalysisRulePlugIn` to be a primitive type in the JSON string but got " + data['AnalysisRulePlugIn']);
        }
        // ensure the json data is a string
        if (data['Categories'] && !(typeof data['Categories'] === 'string' || data['Categories'] instanceof String)) {
            throw new Error("Expected the field `Categories` to be a primitive type in the JSON string but got " + data['Categories']);
        }
        // ensure the json data is a string
        if (data['Database'] && !(typeof data['Database'] === 'string' || data['Database'] instanceof String)) {
            throw new Error("Expected the field `Database` to be a primitive type in the JSON string but got " + data['Database']);
        }
        // ensure the json data is a string
        if (data['Security'] && !(typeof data['Security'] === 'string' || data['Security'] instanceof String)) {
            throw new Error("Expected the field `Security` to be a primitive type in the JSON string but got " + data['Security']);
        }
        // ensure the json data is a string
        if (data['SecurityEntries'] && !(typeof data['SecurityEntries'] === 'string' || data['SecurityEntries'] instanceof String)) {
            throw new Error("Expected the field `SecurityEntries` to be a primitive type in the JSON string but got " + data['SecurityEntries']);
        }
        // ensure the json data is a string
        if (data['Self'] && !(typeof data['Self'] === 'string' || data['Self'] instanceof String)) {
            throw new Error("Expected the field `Self` to be a primitive type in the JSON string but got " + data['Self']);
        }
        // ensure the json data is a string
        if (data['Target'] && !(typeof data['Target'] === 'string' || data['Target'] instanceof String)) {
            throw new Error("Expected the field `Target` to be a primitive type in the JSON string but got " + data['Target']);
        }
        // ensure the json data is a string
        if (data['TimeRule'] && !(typeof data['TimeRule'] === 'string' || data['TimeRule'] instanceof String)) {
            throw new Error("Expected the field `TimeRule` to be a primitive type in the JSON string but got " + data['TimeRule']);
        }
        // ensure the json data is a string
        if (data['TimeRulePlugIn'] && !(typeof data['TimeRulePlugIn'] === 'string' || data['TimeRulePlugIn'] instanceof String)) {
            throw new Error("Expected the field `TimeRulePlugIn` to be a primitive type in the JSON string but got " + data['TimeRulePlugIn']);
        }

        return true;
    }


}



/**
 * @member {String} AnalysisRule
 */
AnalysisTemplateLinks.prototype['AnalysisRule'] = undefined;

/**
 * @member {String} AnalysisRulePlugIn
 */
AnalysisTemplateLinks.prototype['AnalysisRulePlugIn'] = undefined;

/**
 * @member {String} Categories
 */
AnalysisTemplateLinks.prototype['Categories'] = undefined;

/**
 * @member {String} Database
 */
AnalysisTemplateLinks.prototype['Database'] = undefined;

/**
 * @member {String} Security
 */
AnalysisTemplateLinks.prototype['Security'] = undefined;

/**
 * @member {String} SecurityEntries
 */
AnalysisTemplateLinks.prototype['SecurityEntries'] = undefined;

/**
 * @member {String} Self
 */
AnalysisTemplateLinks.prototype['Self'] = undefined;

/**
 * @member {String} Target
 */
AnalysisTemplateLinks.prototype['Target'] = undefined;

/**
 * @member {String} TimeRule
 */
AnalysisTemplateLinks.prototype['TimeRule'] = undefined;

/**
 * @member {String} TimeRulePlugIn
 */
AnalysisTemplateLinks.prototype['TimeRulePlugIn'] = undefined;






export default AnalysisTemplateLinks;

