/**
 * PI Web API 2018 SP1 Swagger Spec
 * Swagger Spec file that describes PI Web API
 *
 * The version of the OpenAPI document: 1.11.1.5383
 * Contact: techsupport@osisoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DataPipeEvent from './DataPipeEvent';
import Errors from './Errors';

/**
 * The StreamUpdatesRetrieve model module.
 * @module model/StreamUpdatesRetrieve
 * @version 1.11.1.5383
 */
class StreamUpdatesRetrieve {
    /**
     * Constructs a new <code>StreamUpdatesRetrieve</code>.
     * @alias module:model/StreamUpdatesRetrieve
     */
    constructor() { 
        
        StreamUpdatesRetrieve.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>StreamUpdatesRetrieve</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/StreamUpdatesRetrieve} obj Optional instance to populate.
     * @return {module:model/StreamUpdatesRetrieve} The populated <code>StreamUpdatesRetrieve</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new StreamUpdatesRetrieve();

            if (data.hasOwnProperty('Events')) {
                obj['Events'] = ApiClient.convertToType(data['Events'], [DataPipeEvent]);
            }
            if (data.hasOwnProperty('Exception')) {
                obj['Exception'] = Errors.constructFromObject(data['Exception']);
            }
            if (data.hasOwnProperty('LatestMarker')) {
                obj['LatestMarker'] = ApiClient.convertToType(data['LatestMarker'], 'String');
            }
            if (data.hasOwnProperty('RequestedMarker')) {
                obj['RequestedMarker'] = ApiClient.convertToType(data['RequestedMarker'], 'String');
            }
            if (data.hasOwnProperty('Source')) {
                obj['Source'] = ApiClient.convertToType(data['Source'], 'String');
            }
            if (data.hasOwnProperty('SourceName')) {
                obj['SourceName'] = ApiClient.convertToType(data['SourceName'], 'String');
            }
            if (data.hasOwnProperty('SourcePath')) {
                obj['SourcePath'] = ApiClient.convertToType(data['SourcePath'], 'String');
            }
            if (data.hasOwnProperty('Status')) {
                obj['Status'] = ApiClient.convertToType(data['Status'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>StreamUpdatesRetrieve</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>StreamUpdatesRetrieve</code>.
     */
    static validateJSON(data) {
        if (data['Events']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['Events'])) {
                throw new Error("Expected the field `Events` to be an array in the JSON data but got " + data['Events']);
            }
            // validate the optional field `Events` (array)
            for (const item of data['Events']) {
                DataPipeEvent.validateJSON(item);
            };
        }
        // validate the optional field `Exception`
        if (data['Exception']) { // data not null
          Errors.validateJSON(data['Exception']);
        }
        // ensure the json data is a string
        if (data['LatestMarker'] && !(typeof data['LatestMarker'] === 'string' || data['LatestMarker'] instanceof String)) {
            throw new Error("Expected the field `LatestMarker` to be a primitive type in the JSON string but got " + data['LatestMarker']);
        }
        // ensure the json data is a string
        if (data['RequestedMarker'] && !(typeof data['RequestedMarker'] === 'string' || data['RequestedMarker'] instanceof String)) {
            throw new Error("Expected the field `RequestedMarker` to be a primitive type in the JSON string but got " + data['RequestedMarker']);
        }
        // ensure the json data is a string
        if (data['Source'] && !(typeof data['Source'] === 'string' || data['Source'] instanceof String)) {
            throw new Error("Expected the field `Source` to be a primitive type in the JSON string but got " + data['Source']);
        }
        // ensure the json data is a string
        if (data['SourceName'] && !(typeof data['SourceName'] === 'string' || data['SourceName'] instanceof String)) {
            throw new Error("Expected the field `SourceName` to be a primitive type in the JSON string but got " + data['SourceName']);
        }
        // ensure the json data is a string
        if (data['SourcePath'] && !(typeof data['SourcePath'] === 'string' || data['SourcePath'] instanceof String)) {
            throw new Error("Expected the field `SourcePath` to be a primitive type in the JSON string but got " + data['SourcePath']);
        }
        // ensure the json data is a string
        if (data['Status'] && !(typeof data['Status'] === 'string' || data['Status'] instanceof String)) {
            throw new Error("Expected the field `Status` to be a primitive type in the JSON string but got " + data['Status']);
        }

        return true;
    }


}



/**
 * @member {Array.<module:model/DataPipeEvent>} Events
 */
StreamUpdatesRetrieve.prototype['Events'] = undefined;

/**
 * @member {module:model/Errors} Exception
 */
StreamUpdatesRetrieve.prototype['Exception'] = undefined;

/**
 * @member {String} LatestMarker
 */
StreamUpdatesRetrieve.prototype['LatestMarker'] = undefined;

/**
 * @member {String} RequestedMarker
 */
StreamUpdatesRetrieve.prototype['RequestedMarker'] = undefined;

/**
 * @member {String} Source
 */
StreamUpdatesRetrieve.prototype['Source'] = undefined;

/**
 * @member {String} SourceName
 */
StreamUpdatesRetrieve.prototype['SourceName'] = undefined;

/**
 * @member {String} SourcePath
 */
StreamUpdatesRetrieve.prototype['SourcePath'] = undefined;

/**
 * @member {String} Status
 */
StreamUpdatesRetrieve.prototype['Status'] = undefined;






export default StreamUpdatesRetrieve;

