/**
 * PI Web API 2018 SP1 Swagger Spec
 * Swagger Spec file that describes PI Web API
 *
 * The version of the OpenAPI document: 1.11.1.5383
 * Contact: techsupport@osisoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ValueQuery from './ValueQuery';
import WebException from './WebException';

/**
 * The SearchByAttribute model module.
 * @module model/SearchByAttribute
 * @version 1.11.1.5383
 */
class SearchByAttribute {
    /**
     * Constructs a new <code>SearchByAttribute</code>.
     * @alias module:model/SearchByAttribute
     */
    constructor() { 
        
        SearchByAttribute.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SearchByAttribute</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SearchByAttribute} obj Optional instance to populate.
     * @return {module:model/SearchByAttribute} The populated <code>SearchByAttribute</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SearchByAttribute();

            if (data.hasOwnProperty('ElementTemplate')) {
                obj['ElementTemplate'] = ApiClient.convertToType(data['ElementTemplate'], 'String');
            }
            if (data.hasOwnProperty('SearchRoot')) {
                obj['SearchRoot'] = ApiClient.convertToType(data['SearchRoot'], 'String');
            }
            if (data.hasOwnProperty('ValueQueries')) {
                obj['ValueQueries'] = ApiClient.convertToType(data['ValueQueries'], [ValueQuery]);
            }
            if (data.hasOwnProperty('WebException')) {
                obj['WebException'] = WebException.constructFromObject(data['WebException']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SearchByAttribute</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SearchByAttribute</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['ElementTemplate'] && !(typeof data['ElementTemplate'] === 'string' || data['ElementTemplate'] instanceof String)) {
            throw new Error("Expected the field `ElementTemplate` to be a primitive type in the JSON string but got " + data['ElementTemplate']);
        }
        // ensure the json data is a string
        if (data['SearchRoot'] && !(typeof data['SearchRoot'] === 'string' || data['SearchRoot'] instanceof String)) {
            throw new Error("Expected the field `SearchRoot` to be a primitive type in the JSON string but got " + data['SearchRoot']);
        }
        if (data['ValueQueries']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['ValueQueries'])) {
                throw new Error("Expected the field `ValueQueries` to be an array in the JSON data but got " + data['ValueQueries']);
            }
            // validate the optional field `ValueQueries` (array)
            for (const item of data['ValueQueries']) {
                ValueQuery.validateJSON(item);
            };
        }
        // validate the optional field `WebException`
        if (data['WebException']) { // data not null
          WebException.validateJSON(data['WebException']);
        }

        return true;
    }


}



/**
 * @member {String} ElementTemplate
 */
SearchByAttribute.prototype['ElementTemplate'] = undefined;

/**
 * @member {String} SearchRoot
 */
SearchByAttribute.prototype['SearchRoot'] = undefined;

/**
 * @member {Array.<module:model/ValueQuery>} ValueQueries
 */
SearchByAttribute.prototype['ValueQueries'] = undefined;

/**
 * @member {module:model/WebException} WebException
 */
SearchByAttribute.prototype['WebException'] = undefined;






export default SearchByAttribute;

