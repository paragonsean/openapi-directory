/**
 * PI Web API 2018 SP1 Swagger Spec
 * Swagger Spec file that describes PI Web API
 *
 * The version of the OpenAPI document: 1.11.1.5383
 * Contact: techsupport@osisoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AttributeTemplateLinks model module.
 * @module model/AttributeTemplateLinks
 * @version 1.11.1.5383
 */
class AttributeTemplateLinks {
    /**
     * Constructs a new <code>AttributeTemplateLinks</code>.
     * @alias module:model/AttributeTemplateLinks
     */
    constructor() { 
        
        AttributeTemplateLinks.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AttributeTemplateLinks</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AttributeTemplateLinks} obj Optional instance to populate.
     * @return {module:model/AttributeTemplateLinks} The populated <code>AttributeTemplateLinks</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AttributeTemplateLinks();

            if (data.hasOwnProperty('AttributeTemplates')) {
                obj['AttributeTemplates'] = ApiClient.convertToType(data['AttributeTemplates'], 'String');
            }
            if (data.hasOwnProperty('Categories')) {
                obj['Categories'] = ApiClient.convertToType(data['Categories'], 'String');
            }
            if (data.hasOwnProperty('ElementTemplate')) {
                obj['ElementTemplate'] = ApiClient.convertToType(data['ElementTemplate'], 'String');
            }
            if (data.hasOwnProperty('Parent')) {
                obj['Parent'] = ApiClient.convertToType(data['Parent'], 'String');
            }
            if (data.hasOwnProperty('Self')) {
                obj['Self'] = ApiClient.convertToType(data['Self'], 'String');
            }
            if (data.hasOwnProperty('Trait')) {
                obj['Trait'] = ApiClient.convertToType(data['Trait'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AttributeTemplateLinks</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AttributeTemplateLinks</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['AttributeTemplates'] && !(typeof data['AttributeTemplates'] === 'string' || data['AttributeTemplates'] instanceof String)) {
            throw new Error("Expected the field `AttributeTemplates` to be a primitive type in the JSON string but got " + data['AttributeTemplates']);
        }
        // ensure the json data is a string
        if (data['Categories'] && !(typeof data['Categories'] === 'string' || data['Categories'] instanceof String)) {
            throw new Error("Expected the field `Categories` to be a primitive type in the JSON string but got " + data['Categories']);
        }
        // ensure the json data is a string
        if (data['ElementTemplate'] && !(typeof data['ElementTemplate'] === 'string' || data['ElementTemplate'] instanceof String)) {
            throw new Error("Expected the field `ElementTemplate` to be a primitive type in the JSON string but got " + data['ElementTemplate']);
        }
        // ensure the json data is a string
        if (data['Parent'] && !(typeof data['Parent'] === 'string' || data['Parent'] instanceof String)) {
            throw new Error("Expected the field `Parent` to be a primitive type in the JSON string but got " + data['Parent']);
        }
        // ensure the json data is a string
        if (data['Self'] && !(typeof data['Self'] === 'string' || data['Self'] instanceof String)) {
            throw new Error("Expected the field `Self` to be a primitive type in the JSON string but got " + data['Self']);
        }
        // ensure the json data is a string
        if (data['Trait'] && !(typeof data['Trait'] === 'string' || data['Trait'] instanceof String)) {
            throw new Error("Expected the field `Trait` to be a primitive type in the JSON string but got " + data['Trait']);
        }

        return true;
    }


}



/**
 * @member {String} AttributeTemplates
 */
AttributeTemplateLinks.prototype['AttributeTemplates'] = undefined;

/**
 * @member {String} Categories
 */
AttributeTemplateLinks.prototype['Categories'] = undefined;

/**
 * @member {String} ElementTemplate
 */
AttributeTemplateLinks.prototype['ElementTemplate'] = undefined;

/**
 * @member {String} Parent
 */
AttributeTemplateLinks.prototype['Parent'] = undefined;

/**
 * @member {String} Self
 */
AttributeTemplateLinks.prototype['Self'] = undefined;

/**
 * @member {String} Trait
 */
AttributeTemplateLinks.prototype['Trait'] = undefined;






export default AttributeTemplateLinks;

