/**
 * PI Web API 2018 SP1 Swagger Spec
 * Swagger Spec file that describes PI Web API
 *
 * The version of the OpenAPI document: 1.11.1.5383
 * Contact: techsupport@osisoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TimeRulePlugInLinks from './TimeRulePlugInLinks';
import WebException from './WebException';

/**
 * The TimeRulePlugIn model module.
 * @module model/TimeRulePlugIn
 * @version 1.11.1.5383
 */
class TimeRulePlugIn {
    /**
     * Constructs a new <code>TimeRulePlugIn</code>.
     * @alias module:model/TimeRulePlugIn
     */
    constructor() { 
        
        TimeRulePlugIn.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TimeRulePlugIn</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TimeRulePlugIn} obj Optional instance to populate.
     * @return {module:model/TimeRulePlugIn} The populated <code>TimeRulePlugIn</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TimeRulePlugIn();

            if (data.hasOwnProperty('AssemblyFileName')) {
                obj['AssemblyFileName'] = ApiClient.convertToType(data['AssemblyFileName'], 'String');
            }
            if (data.hasOwnProperty('AssemblyID')) {
                obj['AssemblyID'] = ApiClient.convertToType(data['AssemblyID'], 'String');
            }
            if (data.hasOwnProperty('AssemblyLoadProperties')) {
                obj['AssemblyLoadProperties'] = ApiClient.convertToType(data['AssemblyLoadProperties'], ['String']);
            }
            if (data.hasOwnProperty('AssemblyTime')) {
                obj['AssemblyTime'] = ApiClient.convertToType(data['AssemblyTime'], 'Date');
            }
            if (data.hasOwnProperty('CompatibilityVersion')) {
                obj['CompatibilityVersion'] = ApiClient.convertToType(data['CompatibilityVersion'], 'Number');
            }
            if (data.hasOwnProperty('Description')) {
                obj['Description'] = ApiClient.convertToType(data['Description'], 'String');
            }
            if (data.hasOwnProperty('Id')) {
                obj['Id'] = ApiClient.convertToType(data['Id'], 'String');
            }
            if (data.hasOwnProperty('IsBrowsable')) {
                obj['IsBrowsable'] = ApiClient.convertToType(data['IsBrowsable'], 'Boolean');
            }
            if (data.hasOwnProperty('IsNonEditableConfig')) {
                obj['IsNonEditableConfig'] = ApiClient.convertToType(data['IsNonEditableConfig'], 'Boolean');
            }
            if (data.hasOwnProperty('Links')) {
                obj['Links'] = TimeRulePlugInLinks.constructFromObject(data['Links']);
            }
            if (data.hasOwnProperty('LoadedAssemblyTime')) {
                obj['LoadedAssemblyTime'] = ApiClient.convertToType(data['LoadedAssemblyTime'], 'Date');
            }
            if (data.hasOwnProperty('LoadedVersion')) {
                obj['LoadedVersion'] = ApiClient.convertToType(data['LoadedVersion'], 'String');
            }
            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('Path')) {
                obj['Path'] = ApiClient.convertToType(data['Path'], 'String');
            }
            if (data.hasOwnProperty('Version')) {
                obj['Version'] = ApiClient.convertToType(data['Version'], 'String');
            }
            if (data.hasOwnProperty('WebException')) {
                obj['WebException'] = WebException.constructFromObject(data['WebException']);
            }
            if (data.hasOwnProperty('WebId')) {
                obj['WebId'] = ApiClient.convertToType(data['WebId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TimeRulePlugIn</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TimeRulePlugIn</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['AssemblyFileName'] && !(typeof data['AssemblyFileName'] === 'string' || data['AssemblyFileName'] instanceof String)) {
            throw new Error("Expected the field `AssemblyFileName` to be a primitive type in the JSON string but got " + data['AssemblyFileName']);
        }
        // ensure the json data is a string
        if (data['AssemblyID'] && !(typeof data['AssemblyID'] === 'string' || data['AssemblyID'] instanceof String)) {
            throw new Error("Expected the field `AssemblyID` to be a primitive type in the JSON string but got " + data['AssemblyID']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['AssemblyLoadProperties'])) {
            throw new Error("Expected the field `AssemblyLoadProperties` to be an array in the JSON data but got " + data['AssemblyLoadProperties']);
        }
        // ensure the json data is a string
        if (data['Description'] && !(typeof data['Description'] === 'string' || data['Description'] instanceof String)) {
            throw new Error("Expected the field `Description` to be a primitive type in the JSON string but got " + data['Description']);
        }
        // ensure the json data is a string
        if (data['Id'] && !(typeof data['Id'] === 'string' || data['Id'] instanceof String)) {
            throw new Error("Expected the field `Id` to be a primitive type in the JSON string but got " + data['Id']);
        }
        // validate the optional field `Links`
        if (data['Links']) { // data not null
          TimeRulePlugInLinks.validateJSON(data['Links']);
        }
        // ensure the json data is a string
        if (data['LoadedVersion'] && !(typeof data['LoadedVersion'] === 'string' || data['LoadedVersion'] instanceof String)) {
            throw new Error("Expected the field `LoadedVersion` to be a primitive type in the JSON string but got " + data['LoadedVersion']);
        }
        // ensure the json data is a string
        if (data['Name'] && !(typeof data['Name'] === 'string' || data['Name'] instanceof String)) {
            throw new Error("Expected the field `Name` to be a primitive type in the JSON string but got " + data['Name']);
        }
        // ensure the json data is a string
        if (data['Path'] && !(typeof data['Path'] === 'string' || data['Path'] instanceof String)) {
            throw new Error("Expected the field `Path` to be a primitive type in the JSON string but got " + data['Path']);
        }
        // ensure the json data is a string
        if (data['Version'] && !(typeof data['Version'] === 'string' || data['Version'] instanceof String)) {
            throw new Error("Expected the field `Version` to be a primitive type in the JSON string but got " + data['Version']);
        }
        // validate the optional field `WebException`
        if (data['WebException']) { // data not null
          WebException.validateJSON(data['WebException']);
        }
        // ensure the json data is a string
        if (data['WebId'] && !(typeof data['WebId'] === 'string' || data['WebId'] instanceof String)) {
            throw new Error("Expected the field `WebId` to be a primitive type in the JSON string but got " + data['WebId']);
        }

        return true;
    }


}



/**
 * @member {String} AssemblyFileName
 */
TimeRulePlugIn.prototype['AssemblyFileName'] = undefined;

/**
 * @member {String} AssemblyID
 */
TimeRulePlugIn.prototype['AssemblyID'] = undefined;

/**
 * @member {Array.<String>} AssemblyLoadProperties
 */
TimeRulePlugIn.prototype['AssemblyLoadProperties'] = undefined;

/**
 * @member {Date} AssemblyTime
 */
TimeRulePlugIn.prototype['AssemblyTime'] = undefined;

/**
 * @member {Number} CompatibilityVersion
 */
TimeRulePlugIn.prototype['CompatibilityVersion'] = undefined;

/**
 * @member {String} Description
 */
TimeRulePlugIn.prototype['Description'] = undefined;

/**
 * @member {String} Id
 */
TimeRulePlugIn.prototype['Id'] = undefined;

/**
 * @member {Boolean} IsBrowsable
 */
TimeRulePlugIn.prototype['IsBrowsable'] = undefined;

/**
 * @member {Boolean} IsNonEditableConfig
 */
TimeRulePlugIn.prototype['IsNonEditableConfig'] = undefined;

/**
 * @member {module:model/TimeRulePlugInLinks} Links
 */
TimeRulePlugIn.prototype['Links'] = undefined;

/**
 * @member {Date} LoadedAssemblyTime
 */
TimeRulePlugIn.prototype['LoadedAssemblyTime'] = undefined;

/**
 * @member {String} LoadedVersion
 */
TimeRulePlugIn.prototype['LoadedVersion'] = undefined;

/**
 * @member {String} Name
 */
TimeRulePlugIn.prototype['Name'] = undefined;

/**
 * @member {String} Path
 */
TimeRulePlugIn.prototype['Path'] = undefined;

/**
 * @member {String} Version
 */
TimeRulePlugIn.prototype['Version'] = undefined;

/**
 * @member {module:model/WebException} WebException
 */
TimeRulePlugIn.prototype['WebException'] = undefined;

/**
 * @member {String} WebId
 */
TimeRulePlugIn.prototype['WebId'] = undefined;






export default TimeRulePlugIn;

