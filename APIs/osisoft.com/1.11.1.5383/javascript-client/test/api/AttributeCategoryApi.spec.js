/**
 * PI Web API 2018 SP1 Swagger Spec
 * Swagger Spec file that describes PI Web API
 *
 * The version of the OpenAPI document: 1.11.1.5383
 * Contact: techsupport@osisoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.PiWebApi2018Sp1SwaggerSpec);
  }
}(this, function(expect, PiWebApi2018Sp1SwaggerSpec) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new PiWebApi2018Sp1SwaggerSpec.AttributeCategoryApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('AttributeCategoryApi', function() {
    describe('attributeCategoryCreateSecurityEntry', function() {
      it('should call attributeCategoryCreateSecurityEntry successfully', function(done) {
        //uncomment below and update the code to test attributeCategoryCreateSecurityEntry
        //instance.attributeCategoryCreateSecurityEntry(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('attributeCategoryDelete', function() {
      it('should call attributeCategoryDelete successfully', function(done) {
        //uncomment below and update the code to test attributeCategoryDelete
        //instance.attributeCategoryDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('attributeCategoryDeleteSecurityEntry', function() {
      it('should call attributeCategoryDeleteSecurityEntry successfully', function(done) {
        //uncomment below and update the code to test attributeCategoryDeleteSecurityEntry
        //instance.attributeCategoryDeleteSecurityEntry(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('attributeCategoryGet', function() {
      it('should call attributeCategoryGet successfully', function(done) {
        //uncomment below and update the code to test attributeCategoryGet
        //instance.attributeCategoryGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('attributeCategoryGetByPath', function() {
      it('should call attributeCategoryGetByPath successfully', function(done) {
        //uncomment below and update the code to test attributeCategoryGetByPath
        //instance.attributeCategoryGetByPath(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('attributeCategoryGetSecurity', function() {
      it('should call attributeCategoryGetSecurity successfully', function(done) {
        //uncomment below and update the code to test attributeCategoryGetSecurity
        //instance.attributeCategoryGetSecurity(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('attributeCategoryGetSecurityEntries', function() {
      it('should call attributeCategoryGetSecurityEntries successfully', function(done) {
        //uncomment below and update the code to test attributeCategoryGetSecurityEntries
        //instance.attributeCategoryGetSecurityEntries(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('attributeCategoryGetSecurityEntryByName', function() {
      it('should call attributeCategoryGetSecurityEntryByName successfully', function(done) {
        //uncomment below and update the code to test attributeCategoryGetSecurityEntryByName
        //instance.attributeCategoryGetSecurityEntryByName(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('attributeCategoryUpdate', function() {
      it('should call attributeCategoryUpdate successfully', function(done) {
        //uncomment below and update the code to test attributeCategoryUpdate
        //instance.attributeCategoryUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('attributeCategoryUpdateSecurityEntry', function() {
      it('should call attributeCategoryUpdateSecurityEntry successfully', function(done) {
        //uncomment below and update the code to test attributeCategoryUpdateSecurityEntry
        //instance.attributeCategoryUpdateSecurityEntry(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
