/**
 * PI Web API 2018 SP1 Swagger Spec
 * Swagger Spec file that describes PI Web API
 *
 * The version of the OpenAPI document: 1.11.1.5383
 * Contact: techsupport@osisoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.PiWebApi2018Sp1SwaggerSpec);
  }
}(this, function(expect, PiWebApi2018Sp1SwaggerSpec) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new PiWebApi2018Sp1SwaggerSpec.EventFrameApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('EventFrameApi', function() {
    describe('eventFrameAcknowledge', function() {
      it('should call eventFrameAcknowledge successfully', function(done) {
        //uncomment below and update the code to test eventFrameAcknowledge
        //instance.eventFrameAcknowledge(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventFrameCaptureValues', function() {
      it('should call eventFrameCaptureValues successfully', function(done) {
        //uncomment below and update the code to test eventFrameCaptureValues
        //instance.eventFrameCaptureValues(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventFrameCreateAnnotation', function() {
      it('should call eventFrameCreateAnnotation successfully', function(done) {
        //uncomment below and update the code to test eventFrameCreateAnnotation
        //instance.eventFrameCreateAnnotation(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventFrameCreateAttribute', function() {
      it('should call eventFrameCreateAttribute successfully', function(done) {
        //uncomment below and update the code to test eventFrameCreateAttribute
        //instance.eventFrameCreateAttribute(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventFrameCreateConfig', function() {
      it('should call eventFrameCreateConfig successfully', function(done) {
        //uncomment below and update the code to test eventFrameCreateConfig
        //instance.eventFrameCreateConfig(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventFrameCreateEventFrame', function() {
      it('should call eventFrameCreateEventFrame successfully', function(done) {
        //uncomment below and update the code to test eventFrameCreateEventFrame
        //instance.eventFrameCreateEventFrame(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventFrameCreateSearchByAttribute', function() {
      it('should call eventFrameCreateSearchByAttribute successfully', function(done) {
        //uncomment below and update the code to test eventFrameCreateSearchByAttribute
        //instance.eventFrameCreateSearchByAttribute(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventFrameCreateSecurityEntry', function() {
      it('should call eventFrameCreateSecurityEntry successfully', function(done) {
        //uncomment below and update the code to test eventFrameCreateSecurityEntry
        //instance.eventFrameCreateSecurityEntry(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventFrameDelete', function() {
      it('should call eventFrameDelete successfully', function(done) {
        //uncomment below and update the code to test eventFrameDelete
        //instance.eventFrameDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventFrameDeleteAnnotation', function() {
      it('should call eventFrameDeleteAnnotation successfully', function(done) {
        //uncomment below and update the code to test eventFrameDeleteAnnotation
        //instance.eventFrameDeleteAnnotation(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventFrameDeleteAnnotationAttachmentMediaById', function() {
      it('should call eventFrameDeleteAnnotationAttachmentMediaById successfully', function(done) {
        //uncomment below and update the code to test eventFrameDeleteAnnotationAttachmentMediaById
        //instance.eventFrameDeleteAnnotationAttachmentMediaById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventFrameDeleteSecurityEntry', function() {
      it('should call eventFrameDeleteSecurityEntry successfully', function(done) {
        //uncomment below and update the code to test eventFrameDeleteSecurityEntry
        //instance.eventFrameDeleteSecurityEntry(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventFrameExecuteSearchByAttribute', function() {
      it('should call eventFrameExecuteSearchByAttribute successfully', function(done) {
        //uncomment below and update the code to test eventFrameExecuteSearchByAttribute
        //instance.eventFrameExecuteSearchByAttribute(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventFrameFindEventFrameAttributes', function() {
      it('should call eventFrameFindEventFrameAttributes successfully', function(done) {
        //uncomment below and update the code to test eventFrameFindEventFrameAttributes
        //instance.eventFrameFindEventFrameAttributes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventFrameGet', function() {
      it('should call eventFrameGet successfully', function(done) {
        //uncomment below and update the code to test eventFrameGet
        //instance.eventFrameGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventFrameGetAnnotationAttachmentMediaMetadataById', function() {
      it('should call eventFrameGetAnnotationAttachmentMediaMetadataById successfully', function(done) {
        //uncomment below and update the code to test eventFrameGetAnnotationAttachmentMediaMetadataById
        //instance.eventFrameGetAnnotationAttachmentMediaMetadataById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventFrameGetAnnotationById', function() {
      it('should call eventFrameGetAnnotationById successfully', function(done) {
        //uncomment below and update the code to test eventFrameGetAnnotationById
        //instance.eventFrameGetAnnotationById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventFrameGetAnnotations', function() {
      it('should call eventFrameGetAnnotations successfully', function(done) {
        //uncomment below and update the code to test eventFrameGetAnnotations
        //instance.eventFrameGetAnnotations(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventFrameGetAttributes', function() {
      it('should call eventFrameGetAttributes successfully', function(done) {
        //uncomment below and update the code to test eventFrameGetAttributes
        //instance.eventFrameGetAttributes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventFrameGetByPath', function() {
      it('should call eventFrameGetByPath successfully', function(done) {
        //uncomment below and update the code to test eventFrameGetByPath
        //instance.eventFrameGetByPath(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventFrameGetCategories', function() {
      it('should call eventFrameGetCategories successfully', function(done) {
        //uncomment below and update the code to test eventFrameGetCategories
        //instance.eventFrameGetCategories(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventFrameGetEventFrames', function() {
      it('should call eventFrameGetEventFrames successfully', function(done) {
        //uncomment below and update the code to test eventFrameGetEventFrames
        //instance.eventFrameGetEventFrames(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventFrameGetEventFramesQuery', function() {
      it('should call eventFrameGetEventFramesQuery successfully', function(done) {
        //uncomment below and update the code to test eventFrameGetEventFramesQuery
        //instance.eventFrameGetEventFramesQuery(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventFrameGetMultiple', function() {
      it('should call eventFrameGetMultiple successfully', function(done) {
        //uncomment below and update the code to test eventFrameGetMultiple
        //instance.eventFrameGetMultiple(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventFrameGetReferencedElements', function() {
      it('should call eventFrameGetReferencedElements successfully', function(done) {
        //uncomment below and update the code to test eventFrameGetReferencedElements
        //instance.eventFrameGetReferencedElements(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventFrameGetSecurity', function() {
      it('should call eventFrameGetSecurity successfully', function(done) {
        //uncomment below and update the code to test eventFrameGetSecurity
        //instance.eventFrameGetSecurity(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventFrameGetSecurityEntries', function() {
      it('should call eventFrameGetSecurityEntries successfully', function(done) {
        //uncomment below and update the code to test eventFrameGetSecurityEntries
        //instance.eventFrameGetSecurityEntries(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventFrameGetSecurityEntryByName', function() {
      it('should call eventFrameGetSecurityEntryByName successfully', function(done) {
        //uncomment below and update the code to test eventFrameGetSecurityEntryByName
        //instance.eventFrameGetSecurityEntryByName(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventFrameUpdate', function() {
      it('should call eventFrameUpdate successfully', function(done) {
        //uncomment below and update the code to test eventFrameUpdate
        //instance.eventFrameUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventFrameUpdateAnnotation', function() {
      it('should call eventFrameUpdateAnnotation successfully', function(done) {
        //uncomment below and update the code to test eventFrameUpdateAnnotation
        //instance.eventFrameUpdateAnnotation(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('eventFrameUpdateSecurityEntry', function() {
      it('should call eventFrameUpdateSecurityEntry successfully', function(done) {
        //uncomment below and update the code to test eventFrameUpdateSecurityEntry
        //instance.eventFrameUpdateSecurityEntry(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
