/**
 * PI Web API 2018 SP1 Swagger Spec
 * Swagger Spec file that describes PI Web API
 *
 * The version of the OpenAPI document: 1.11.1.5383
 * Contact: techsupport@osisoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.PiWebApi2018Sp1SwaggerSpec);
  }
}(this, function(expect, PiWebApi2018Sp1SwaggerSpec) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new PiWebApi2018Sp1SwaggerSpec.SecurityIdentityApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('SecurityIdentityApi', function() {
    describe('securityIdentityDelete', function() {
      it('should call securityIdentityDelete successfully', function(done) {
        //uncomment below and update the code to test securityIdentityDelete
        //instance.securityIdentityDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('securityIdentityGet', function() {
      it('should call securityIdentityGet successfully', function(done) {
        //uncomment below and update the code to test securityIdentityGet
        //instance.securityIdentityGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('securityIdentityGetByPath', function() {
      it('should call securityIdentityGetByPath successfully', function(done) {
        //uncomment below and update the code to test securityIdentityGetByPath
        //instance.securityIdentityGetByPath(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('securityIdentityGetSecurity', function() {
      it('should call securityIdentityGetSecurity successfully', function(done) {
        //uncomment below and update the code to test securityIdentityGetSecurity
        //instance.securityIdentityGetSecurity(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('securityIdentityGetSecurityEntries', function() {
      it('should call securityIdentityGetSecurityEntries successfully', function(done) {
        //uncomment below and update the code to test securityIdentityGetSecurityEntries
        //instance.securityIdentityGetSecurityEntries(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('securityIdentityGetSecurityEntryByName', function() {
      it('should call securityIdentityGetSecurityEntryByName successfully', function(done) {
        //uncomment below and update the code to test securityIdentityGetSecurityEntryByName
        //instance.securityIdentityGetSecurityEntryByName(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('securityIdentityGetSecurityMappings', function() {
      it('should call securityIdentityGetSecurityMappings successfully', function(done) {
        //uncomment below and update the code to test securityIdentityGetSecurityMappings
        //instance.securityIdentityGetSecurityMappings(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('securityIdentityUpdate', function() {
      it('should call securityIdentityUpdate successfully', function(done) {
        //uncomment below and update the code to test securityIdentityUpdate
        //instance.securityIdentityUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
