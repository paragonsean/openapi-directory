/*
 * PI Web API 2018 SP1 Swagger Spec
 * Swagger Spec file that describes PI Web API
 *
 * The version of the OpenAPI document: 1.11.1.5383
 * Contact: techsupport@osisoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * SystemLandingLinks
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:19:51.369442-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class SystemLandingLinks {
  public static final String SERIALIZED_NAME_CACHE_INSTANCES = "CacheInstances";
  @SerializedName(SERIALIZED_NAME_CACHE_INSTANCES)
  private String cacheInstances;

  public static final String SERIALIZED_NAME_CONFIGURATION = "Configuration";
  @SerializedName(SERIALIZED_NAME_CONFIGURATION)
  private String _configuration;

  public static final String SERIALIZED_NAME_SELF = "Self";
  @SerializedName(SERIALIZED_NAME_SELF)
  private String self;

  public static final String SERIALIZED_NAME_STATUS = "Status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_USER_INFO = "UserInfo";
  @SerializedName(SERIALIZED_NAME_USER_INFO)
  private String userInfo;

  public static final String SERIALIZED_NAME_VERSIONS = "Versions";
  @SerializedName(SERIALIZED_NAME_VERSIONS)
  private String versions;

  public SystemLandingLinks() {
  }

  public SystemLandingLinks cacheInstances(String cacheInstances) {
    this.cacheInstances = cacheInstances;
    return this;
  }

  /**
   * Get cacheInstances
   * @return cacheInstances
   */
  @javax.annotation.Nullable
  public String getCacheInstances() {
    return cacheInstances;
  }

  public void setCacheInstances(String cacheInstances) {
    this.cacheInstances = cacheInstances;
  }


  public SystemLandingLinks _configuration(String _configuration) {
    this._configuration = _configuration;
    return this;
  }

  /**
   * Get _configuration
   * @return _configuration
   */
  @javax.annotation.Nullable
  public String getConfiguration() {
    return _configuration;
  }

  public void setConfiguration(String _configuration) {
    this._configuration = _configuration;
  }


  public SystemLandingLinks self(String self) {
    this.self = self;
    return this;
  }

  /**
   * Get self
   * @return self
   */
  @javax.annotation.Nullable
  public String getSelf() {
    return self;
  }

  public void setSelf(String self) {
    this.self = self;
  }


  public SystemLandingLinks status(String status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }


  public SystemLandingLinks userInfo(String userInfo) {
    this.userInfo = userInfo;
    return this;
  }

  /**
   * Get userInfo
   * @return userInfo
   */
  @javax.annotation.Nullable
  public String getUserInfo() {
    return userInfo;
  }

  public void setUserInfo(String userInfo) {
    this.userInfo = userInfo;
  }


  public SystemLandingLinks versions(String versions) {
    this.versions = versions;
    return this;
  }

  /**
   * Get versions
   * @return versions
   */
  @javax.annotation.Nullable
  public String getVersions() {
    return versions;
  }

  public void setVersions(String versions) {
    this.versions = versions;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SystemLandingLinks systemLandingLinks = (SystemLandingLinks) o;
    return Objects.equals(this.cacheInstances, systemLandingLinks.cacheInstances) &&
        Objects.equals(this._configuration, systemLandingLinks._configuration) &&
        Objects.equals(this.self, systemLandingLinks.self) &&
        Objects.equals(this.status, systemLandingLinks.status) &&
        Objects.equals(this.userInfo, systemLandingLinks.userInfo) &&
        Objects.equals(this.versions, systemLandingLinks.versions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cacheInstances, _configuration, self, status, userInfo, versions);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SystemLandingLinks {\n");
    sb.append("    cacheInstances: ").append(toIndentedString(cacheInstances)).append("\n");
    sb.append("    _configuration: ").append(toIndentedString(_configuration)).append("\n");
    sb.append("    self: ").append(toIndentedString(self)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    userInfo: ").append(toIndentedString(userInfo)).append("\n");
    sb.append("    versions: ").append(toIndentedString(versions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("CacheInstances");
    openapiFields.add("Configuration");
    openapiFields.add("Self");
    openapiFields.add("Status");
    openapiFields.add("UserInfo");
    openapiFields.add("Versions");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to SystemLandingLinks
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!SystemLandingLinks.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in SystemLandingLinks is not found in the empty JSON string", SystemLandingLinks.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!SystemLandingLinks.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `SystemLandingLinks` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("CacheInstances") != null && !jsonObj.get("CacheInstances").isJsonNull()) && !jsonObj.get("CacheInstances").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `CacheInstances` to be a primitive type in the JSON string but got `%s`", jsonObj.get("CacheInstances").toString()));
      }
      if ((jsonObj.get("Configuration") != null && !jsonObj.get("Configuration").isJsonNull()) && !jsonObj.get("Configuration").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Configuration` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Configuration").toString()));
      }
      if ((jsonObj.get("Self") != null && !jsonObj.get("Self").isJsonNull()) && !jsonObj.get("Self").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Self` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Self").toString()));
      }
      if ((jsonObj.get("Status") != null && !jsonObj.get("Status").isJsonNull()) && !jsonObj.get("Status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Status").toString()));
      }
      if ((jsonObj.get("UserInfo") != null && !jsonObj.get("UserInfo").isJsonNull()) && !jsonObj.get("UserInfo").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `UserInfo` to be a primitive type in the JSON string but got `%s`", jsonObj.get("UserInfo").toString()));
      }
      if ((jsonObj.get("Versions") != null && !jsonObj.get("Versions").isJsonNull()) && !jsonObj.get("Versions").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Versions` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Versions").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SystemLandingLinks.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SystemLandingLinks' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SystemLandingLinks> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SystemLandingLinks.class));

       return (TypeAdapter<T>) new TypeAdapter<SystemLandingLinks>() {
           @Override
           public void write(JsonWriter out, SystemLandingLinks value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public SystemLandingLinks read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of SystemLandingLinks given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of SystemLandingLinks
   * @throws IOException if the JSON string is invalid with respect to SystemLandingLinks
   */
  public static SystemLandingLinks fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SystemLandingLinks.class);
  }

  /**
   * Convert an instance of SystemLandingLinks to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

