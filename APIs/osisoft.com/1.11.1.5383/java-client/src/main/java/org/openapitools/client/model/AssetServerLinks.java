/*
 * PI Web API 2018 SP1 Swagger Spec
 * Swagger Spec file that describes PI Web API
 *
 * The version of the OpenAPI document: 1.11.1.5383
 * Contact: techsupport@osisoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * AssetServerLinks
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:19:51.369442-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AssetServerLinks {
  public static final String SERIALIZED_NAME_ANALYSIS_RULE_PLUG_INS = "AnalysisRulePlugIns";
  @SerializedName(SERIALIZED_NAME_ANALYSIS_RULE_PLUG_INS)
  private String analysisRulePlugIns;

  public static final String SERIALIZED_NAME_DATABASES = "Databases";
  @SerializedName(SERIALIZED_NAME_DATABASES)
  private String databases;

  public static final String SERIALIZED_NAME_NOTIFICATION_CONTACT_TEMPLATES = "NotificationContactTemplates";
  @SerializedName(SERIALIZED_NAME_NOTIFICATION_CONTACT_TEMPLATES)
  private String notificationContactTemplates;

  public static final String SERIALIZED_NAME_NOTIFICATION_PLUG_INS = "NotificationPlugIns";
  @SerializedName(SERIALIZED_NAME_NOTIFICATION_PLUG_INS)
  private String notificationPlugIns;

  public static final String SERIALIZED_NAME_SECURITY = "Security";
  @SerializedName(SERIALIZED_NAME_SECURITY)
  private String security;

  public static final String SERIALIZED_NAME_SECURITY_ENTRIES = "SecurityEntries";
  @SerializedName(SERIALIZED_NAME_SECURITY_ENTRIES)
  private String securityEntries;

  public static final String SERIALIZED_NAME_SECURITY_IDENTITIES = "SecurityIdentities";
  @SerializedName(SERIALIZED_NAME_SECURITY_IDENTITIES)
  private String securityIdentities;

  public static final String SERIALIZED_NAME_SECURITY_MAPPINGS = "SecurityMappings";
  @SerializedName(SERIALIZED_NAME_SECURITY_MAPPINGS)
  private String securityMappings;

  public static final String SERIALIZED_NAME_SELF = "Self";
  @SerializedName(SERIALIZED_NAME_SELF)
  private String self;

  public static final String SERIALIZED_NAME_TIME_RULE_PLUG_INS = "TimeRulePlugIns";
  @SerializedName(SERIALIZED_NAME_TIME_RULE_PLUG_INS)
  private String timeRulePlugIns;

  public static final String SERIALIZED_NAME_UNIT_CLASSES = "UnitClasses";
  @SerializedName(SERIALIZED_NAME_UNIT_CLASSES)
  private String unitClasses;

  public AssetServerLinks() {
  }

  public AssetServerLinks analysisRulePlugIns(String analysisRulePlugIns) {
    this.analysisRulePlugIns = analysisRulePlugIns;
    return this;
  }

  /**
   * Get analysisRulePlugIns
   * @return analysisRulePlugIns
   */
  @javax.annotation.Nullable
  public String getAnalysisRulePlugIns() {
    return analysisRulePlugIns;
  }

  public void setAnalysisRulePlugIns(String analysisRulePlugIns) {
    this.analysisRulePlugIns = analysisRulePlugIns;
  }


  public AssetServerLinks databases(String databases) {
    this.databases = databases;
    return this;
  }

  /**
   * Get databases
   * @return databases
   */
  @javax.annotation.Nullable
  public String getDatabases() {
    return databases;
  }

  public void setDatabases(String databases) {
    this.databases = databases;
  }


  public AssetServerLinks notificationContactTemplates(String notificationContactTemplates) {
    this.notificationContactTemplates = notificationContactTemplates;
    return this;
  }

  /**
   * Get notificationContactTemplates
   * @return notificationContactTemplates
   */
  @javax.annotation.Nullable
  public String getNotificationContactTemplates() {
    return notificationContactTemplates;
  }

  public void setNotificationContactTemplates(String notificationContactTemplates) {
    this.notificationContactTemplates = notificationContactTemplates;
  }


  public AssetServerLinks notificationPlugIns(String notificationPlugIns) {
    this.notificationPlugIns = notificationPlugIns;
    return this;
  }

  /**
   * Get notificationPlugIns
   * @return notificationPlugIns
   */
  @javax.annotation.Nullable
  public String getNotificationPlugIns() {
    return notificationPlugIns;
  }

  public void setNotificationPlugIns(String notificationPlugIns) {
    this.notificationPlugIns = notificationPlugIns;
  }


  public AssetServerLinks security(String security) {
    this.security = security;
    return this;
  }

  /**
   * Get security
   * @return security
   */
  @javax.annotation.Nullable
  public String getSecurity() {
    return security;
  }

  public void setSecurity(String security) {
    this.security = security;
  }


  public AssetServerLinks securityEntries(String securityEntries) {
    this.securityEntries = securityEntries;
    return this;
  }

  /**
   * Get securityEntries
   * @return securityEntries
   */
  @javax.annotation.Nullable
  public String getSecurityEntries() {
    return securityEntries;
  }

  public void setSecurityEntries(String securityEntries) {
    this.securityEntries = securityEntries;
  }


  public AssetServerLinks securityIdentities(String securityIdentities) {
    this.securityIdentities = securityIdentities;
    return this;
  }

  /**
   * Get securityIdentities
   * @return securityIdentities
   */
  @javax.annotation.Nullable
  public String getSecurityIdentities() {
    return securityIdentities;
  }

  public void setSecurityIdentities(String securityIdentities) {
    this.securityIdentities = securityIdentities;
  }


  public AssetServerLinks securityMappings(String securityMappings) {
    this.securityMappings = securityMappings;
    return this;
  }

  /**
   * Get securityMappings
   * @return securityMappings
   */
  @javax.annotation.Nullable
  public String getSecurityMappings() {
    return securityMappings;
  }

  public void setSecurityMappings(String securityMappings) {
    this.securityMappings = securityMappings;
  }


  public AssetServerLinks self(String self) {
    this.self = self;
    return this;
  }

  /**
   * Get self
   * @return self
   */
  @javax.annotation.Nullable
  public String getSelf() {
    return self;
  }

  public void setSelf(String self) {
    this.self = self;
  }


  public AssetServerLinks timeRulePlugIns(String timeRulePlugIns) {
    this.timeRulePlugIns = timeRulePlugIns;
    return this;
  }

  /**
   * Get timeRulePlugIns
   * @return timeRulePlugIns
   */
  @javax.annotation.Nullable
  public String getTimeRulePlugIns() {
    return timeRulePlugIns;
  }

  public void setTimeRulePlugIns(String timeRulePlugIns) {
    this.timeRulePlugIns = timeRulePlugIns;
  }


  public AssetServerLinks unitClasses(String unitClasses) {
    this.unitClasses = unitClasses;
    return this;
  }

  /**
   * Get unitClasses
   * @return unitClasses
   */
  @javax.annotation.Nullable
  public String getUnitClasses() {
    return unitClasses;
  }

  public void setUnitClasses(String unitClasses) {
    this.unitClasses = unitClasses;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AssetServerLinks assetServerLinks = (AssetServerLinks) o;
    return Objects.equals(this.analysisRulePlugIns, assetServerLinks.analysisRulePlugIns) &&
        Objects.equals(this.databases, assetServerLinks.databases) &&
        Objects.equals(this.notificationContactTemplates, assetServerLinks.notificationContactTemplates) &&
        Objects.equals(this.notificationPlugIns, assetServerLinks.notificationPlugIns) &&
        Objects.equals(this.security, assetServerLinks.security) &&
        Objects.equals(this.securityEntries, assetServerLinks.securityEntries) &&
        Objects.equals(this.securityIdentities, assetServerLinks.securityIdentities) &&
        Objects.equals(this.securityMappings, assetServerLinks.securityMappings) &&
        Objects.equals(this.self, assetServerLinks.self) &&
        Objects.equals(this.timeRulePlugIns, assetServerLinks.timeRulePlugIns) &&
        Objects.equals(this.unitClasses, assetServerLinks.unitClasses);
  }

  @Override
  public int hashCode() {
    return Objects.hash(analysisRulePlugIns, databases, notificationContactTemplates, notificationPlugIns, security, securityEntries, securityIdentities, securityMappings, self, timeRulePlugIns, unitClasses);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AssetServerLinks {\n");
    sb.append("    analysisRulePlugIns: ").append(toIndentedString(analysisRulePlugIns)).append("\n");
    sb.append("    databases: ").append(toIndentedString(databases)).append("\n");
    sb.append("    notificationContactTemplates: ").append(toIndentedString(notificationContactTemplates)).append("\n");
    sb.append("    notificationPlugIns: ").append(toIndentedString(notificationPlugIns)).append("\n");
    sb.append("    security: ").append(toIndentedString(security)).append("\n");
    sb.append("    securityEntries: ").append(toIndentedString(securityEntries)).append("\n");
    sb.append("    securityIdentities: ").append(toIndentedString(securityIdentities)).append("\n");
    sb.append("    securityMappings: ").append(toIndentedString(securityMappings)).append("\n");
    sb.append("    self: ").append(toIndentedString(self)).append("\n");
    sb.append("    timeRulePlugIns: ").append(toIndentedString(timeRulePlugIns)).append("\n");
    sb.append("    unitClasses: ").append(toIndentedString(unitClasses)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("AnalysisRulePlugIns");
    openapiFields.add("Databases");
    openapiFields.add("NotificationContactTemplates");
    openapiFields.add("NotificationPlugIns");
    openapiFields.add("Security");
    openapiFields.add("SecurityEntries");
    openapiFields.add("SecurityIdentities");
    openapiFields.add("SecurityMappings");
    openapiFields.add("Self");
    openapiFields.add("TimeRulePlugIns");
    openapiFields.add("UnitClasses");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AssetServerLinks
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AssetServerLinks.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AssetServerLinks is not found in the empty JSON string", AssetServerLinks.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AssetServerLinks.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AssetServerLinks` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("AnalysisRulePlugIns") != null && !jsonObj.get("AnalysisRulePlugIns").isJsonNull()) && !jsonObj.get("AnalysisRulePlugIns").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `AnalysisRulePlugIns` to be a primitive type in the JSON string but got `%s`", jsonObj.get("AnalysisRulePlugIns").toString()));
      }
      if ((jsonObj.get("Databases") != null && !jsonObj.get("Databases").isJsonNull()) && !jsonObj.get("Databases").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Databases` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Databases").toString()));
      }
      if ((jsonObj.get("NotificationContactTemplates") != null && !jsonObj.get("NotificationContactTemplates").isJsonNull()) && !jsonObj.get("NotificationContactTemplates").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `NotificationContactTemplates` to be a primitive type in the JSON string but got `%s`", jsonObj.get("NotificationContactTemplates").toString()));
      }
      if ((jsonObj.get("NotificationPlugIns") != null && !jsonObj.get("NotificationPlugIns").isJsonNull()) && !jsonObj.get("NotificationPlugIns").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `NotificationPlugIns` to be a primitive type in the JSON string but got `%s`", jsonObj.get("NotificationPlugIns").toString()));
      }
      if ((jsonObj.get("Security") != null && !jsonObj.get("Security").isJsonNull()) && !jsonObj.get("Security").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Security` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Security").toString()));
      }
      if ((jsonObj.get("SecurityEntries") != null && !jsonObj.get("SecurityEntries").isJsonNull()) && !jsonObj.get("SecurityEntries").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `SecurityEntries` to be a primitive type in the JSON string but got `%s`", jsonObj.get("SecurityEntries").toString()));
      }
      if ((jsonObj.get("SecurityIdentities") != null && !jsonObj.get("SecurityIdentities").isJsonNull()) && !jsonObj.get("SecurityIdentities").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `SecurityIdentities` to be a primitive type in the JSON string but got `%s`", jsonObj.get("SecurityIdentities").toString()));
      }
      if ((jsonObj.get("SecurityMappings") != null && !jsonObj.get("SecurityMappings").isJsonNull()) && !jsonObj.get("SecurityMappings").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `SecurityMappings` to be a primitive type in the JSON string but got `%s`", jsonObj.get("SecurityMappings").toString()));
      }
      if ((jsonObj.get("Self") != null && !jsonObj.get("Self").isJsonNull()) && !jsonObj.get("Self").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Self` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Self").toString()));
      }
      if ((jsonObj.get("TimeRulePlugIns") != null && !jsonObj.get("TimeRulePlugIns").isJsonNull()) && !jsonObj.get("TimeRulePlugIns").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `TimeRulePlugIns` to be a primitive type in the JSON string but got `%s`", jsonObj.get("TimeRulePlugIns").toString()));
      }
      if ((jsonObj.get("UnitClasses") != null && !jsonObj.get("UnitClasses").isJsonNull()) && !jsonObj.get("UnitClasses").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `UnitClasses` to be a primitive type in the JSON string but got `%s`", jsonObj.get("UnitClasses").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AssetServerLinks.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AssetServerLinks' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AssetServerLinks> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AssetServerLinks.class));

       return (TypeAdapter<T>) new TypeAdapter<AssetServerLinks>() {
           @Override
           public void write(JsonWriter out, AssetServerLinks value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AssetServerLinks read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AssetServerLinks given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AssetServerLinks
   * @throws IOException if the JSON string is invalid with respect to AssetServerLinks
   */
  public static AssetServerLinks fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AssetServerLinks.class);
  }

  /**
   * Convert an instance of AssetServerLinks to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

