/*
 * PI Web API 2018 SP1 Swagger Spec
 * Swagger Spec file that describes PI Web API
 *
 * The version of the OpenAPI document: 1.11.1.5383
 * Contact: techsupport@osisoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * AnalysisTemplateLinks
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:19:51.369442-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AnalysisTemplateLinks {
  public static final String SERIALIZED_NAME_ANALYSIS_RULE = "AnalysisRule";
  @SerializedName(SERIALIZED_NAME_ANALYSIS_RULE)
  private String analysisRule;

  public static final String SERIALIZED_NAME_ANALYSIS_RULE_PLUG_IN = "AnalysisRulePlugIn";
  @SerializedName(SERIALIZED_NAME_ANALYSIS_RULE_PLUG_IN)
  private String analysisRulePlugIn;

  public static final String SERIALIZED_NAME_CATEGORIES = "Categories";
  @SerializedName(SERIALIZED_NAME_CATEGORIES)
  private String categories;

  public static final String SERIALIZED_NAME_DATABASE = "Database";
  @SerializedName(SERIALIZED_NAME_DATABASE)
  private String database;

  public static final String SERIALIZED_NAME_SECURITY = "Security";
  @SerializedName(SERIALIZED_NAME_SECURITY)
  private String security;

  public static final String SERIALIZED_NAME_SECURITY_ENTRIES = "SecurityEntries";
  @SerializedName(SERIALIZED_NAME_SECURITY_ENTRIES)
  private String securityEntries;

  public static final String SERIALIZED_NAME_SELF = "Self";
  @SerializedName(SERIALIZED_NAME_SELF)
  private String self;

  public static final String SERIALIZED_NAME_TARGET = "Target";
  @SerializedName(SERIALIZED_NAME_TARGET)
  private String target;

  public static final String SERIALIZED_NAME_TIME_RULE = "TimeRule";
  @SerializedName(SERIALIZED_NAME_TIME_RULE)
  private String timeRule;

  public static final String SERIALIZED_NAME_TIME_RULE_PLUG_IN = "TimeRulePlugIn";
  @SerializedName(SERIALIZED_NAME_TIME_RULE_PLUG_IN)
  private String timeRulePlugIn;

  public AnalysisTemplateLinks() {
  }

  public AnalysisTemplateLinks analysisRule(String analysisRule) {
    this.analysisRule = analysisRule;
    return this;
  }

  /**
   * Get analysisRule
   * @return analysisRule
   */
  @javax.annotation.Nullable
  public String getAnalysisRule() {
    return analysisRule;
  }

  public void setAnalysisRule(String analysisRule) {
    this.analysisRule = analysisRule;
  }


  public AnalysisTemplateLinks analysisRulePlugIn(String analysisRulePlugIn) {
    this.analysisRulePlugIn = analysisRulePlugIn;
    return this;
  }

  /**
   * Get analysisRulePlugIn
   * @return analysisRulePlugIn
   */
  @javax.annotation.Nullable
  public String getAnalysisRulePlugIn() {
    return analysisRulePlugIn;
  }

  public void setAnalysisRulePlugIn(String analysisRulePlugIn) {
    this.analysisRulePlugIn = analysisRulePlugIn;
  }


  public AnalysisTemplateLinks categories(String categories) {
    this.categories = categories;
    return this;
  }

  /**
   * Get categories
   * @return categories
   */
  @javax.annotation.Nullable
  public String getCategories() {
    return categories;
  }

  public void setCategories(String categories) {
    this.categories = categories;
  }


  public AnalysisTemplateLinks database(String database) {
    this.database = database;
    return this;
  }

  /**
   * Get database
   * @return database
   */
  @javax.annotation.Nullable
  public String getDatabase() {
    return database;
  }

  public void setDatabase(String database) {
    this.database = database;
  }


  public AnalysisTemplateLinks security(String security) {
    this.security = security;
    return this;
  }

  /**
   * Get security
   * @return security
   */
  @javax.annotation.Nullable
  public String getSecurity() {
    return security;
  }

  public void setSecurity(String security) {
    this.security = security;
  }


  public AnalysisTemplateLinks securityEntries(String securityEntries) {
    this.securityEntries = securityEntries;
    return this;
  }

  /**
   * Get securityEntries
   * @return securityEntries
   */
  @javax.annotation.Nullable
  public String getSecurityEntries() {
    return securityEntries;
  }

  public void setSecurityEntries(String securityEntries) {
    this.securityEntries = securityEntries;
  }


  public AnalysisTemplateLinks self(String self) {
    this.self = self;
    return this;
  }

  /**
   * Get self
   * @return self
   */
  @javax.annotation.Nullable
  public String getSelf() {
    return self;
  }

  public void setSelf(String self) {
    this.self = self;
  }


  public AnalysisTemplateLinks target(String target) {
    this.target = target;
    return this;
  }

  /**
   * Get target
   * @return target
   */
  @javax.annotation.Nullable
  public String getTarget() {
    return target;
  }

  public void setTarget(String target) {
    this.target = target;
  }


  public AnalysisTemplateLinks timeRule(String timeRule) {
    this.timeRule = timeRule;
    return this;
  }

  /**
   * Get timeRule
   * @return timeRule
   */
  @javax.annotation.Nullable
  public String getTimeRule() {
    return timeRule;
  }

  public void setTimeRule(String timeRule) {
    this.timeRule = timeRule;
  }


  public AnalysisTemplateLinks timeRulePlugIn(String timeRulePlugIn) {
    this.timeRulePlugIn = timeRulePlugIn;
    return this;
  }

  /**
   * Get timeRulePlugIn
   * @return timeRulePlugIn
   */
  @javax.annotation.Nullable
  public String getTimeRulePlugIn() {
    return timeRulePlugIn;
  }

  public void setTimeRulePlugIn(String timeRulePlugIn) {
    this.timeRulePlugIn = timeRulePlugIn;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AnalysisTemplateLinks analysisTemplateLinks = (AnalysisTemplateLinks) o;
    return Objects.equals(this.analysisRule, analysisTemplateLinks.analysisRule) &&
        Objects.equals(this.analysisRulePlugIn, analysisTemplateLinks.analysisRulePlugIn) &&
        Objects.equals(this.categories, analysisTemplateLinks.categories) &&
        Objects.equals(this.database, analysisTemplateLinks.database) &&
        Objects.equals(this.security, analysisTemplateLinks.security) &&
        Objects.equals(this.securityEntries, analysisTemplateLinks.securityEntries) &&
        Objects.equals(this.self, analysisTemplateLinks.self) &&
        Objects.equals(this.target, analysisTemplateLinks.target) &&
        Objects.equals(this.timeRule, analysisTemplateLinks.timeRule) &&
        Objects.equals(this.timeRulePlugIn, analysisTemplateLinks.timeRulePlugIn);
  }

  @Override
  public int hashCode() {
    return Objects.hash(analysisRule, analysisRulePlugIn, categories, database, security, securityEntries, self, target, timeRule, timeRulePlugIn);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AnalysisTemplateLinks {\n");
    sb.append("    analysisRule: ").append(toIndentedString(analysisRule)).append("\n");
    sb.append("    analysisRulePlugIn: ").append(toIndentedString(analysisRulePlugIn)).append("\n");
    sb.append("    categories: ").append(toIndentedString(categories)).append("\n");
    sb.append("    database: ").append(toIndentedString(database)).append("\n");
    sb.append("    security: ").append(toIndentedString(security)).append("\n");
    sb.append("    securityEntries: ").append(toIndentedString(securityEntries)).append("\n");
    sb.append("    self: ").append(toIndentedString(self)).append("\n");
    sb.append("    target: ").append(toIndentedString(target)).append("\n");
    sb.append("    timeRule: ").append(toIndentedString(timeRule)).append("\n");
    sb.append("    timeRulePlugIn: ").append(toIndentedString(timeRulePlugIn)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("AnalysisRule");
    openapiFields.add("AnalysisRulePlugIn");
    openapiFields.add("Categories");
    openapiFields.add("Database");
    openapiFields.add("Security");
    openapiFields.add("SecurityEntries");
    openapiFields.add("Self");
    openapiFields.add("Target");
    openapiFields.add("TimeRule");
    openapiFields.add("TimeRulePlugIn");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AnalysisTemplateLinks
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AnalysisTemplateLinks.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AnalysisTemplateLinks is not found in the empty JSON string", AnalysisTemplateLinks.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AnalysisTemplateLinks.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AnalysisTemplateLinks` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("AnalysisRule") != null && !jsonObj.get("AnalysisRule").isJsonNull()) && !jsonObj.get("AnalysisRule").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `AnalysisRule` to be a primitive type in the JSON string but got `%s`", jsonObj.get("AnalysisRule").toString()));
      }
      if ((jsonObj.get("AnalysisRulePlugIn") != null && !jsonObj.get("AnalysisRulePlugIn").isJsonNull()) && !jsonObj.get("AnalysisRulePlugIn").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `AnalysisRulePlugIn` to be a primitive type in the JSON string but got `%s`", jsonObj.get("AnalysisRulePlugIn").toString()));
      }
      if ((jsonObj.get("Categories") != null && !jsonObj.get("Categories").isJsonNull()) && !jsonObj.get("Categories").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Categories` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Categories").toString()));
      }
      if ((jsonObj.get("Database") != null && !jsonObj.get("Database").isJsonNull()) && !jsonObj.get("Database").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Database` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Database").toString()));
      }
      if ((jsonObj.get("Security") != null && !jsonObj.get("Security").isJsonNull()) && !jsonObj.get("Security").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Security` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Security").toString()));
      }
      if ((jsonObj.get("SecurityEntries") != null && !jsonObj.get("SecurityEntries").isJsonNull()) && !jsonObj.get("SecurityEntries").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `SecurityEntries` to be a primitive type in the JSON string but got `%s`", jsonObj.get("SecurityEntries").toString()));
      }
      if ((jsonObj.get("Self") != null && !jsonObj.get("Self").isJsonNull()) && !jsonObj.get("Self").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Self` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Self").toString()));
      }
      if ((jsonObj.get("Target") != null && !jsonObj.get("Target").isJsonNull()) && !jsonObj.get("Target").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Target` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Target").toString()));
      }
      if ((jsonObj.get("TimeRule") != null && !jsonObj.get("TimeRule").isJsonNull()) && !jsonObj.get("TimeRule").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `TimeRule` to be a primitive type in the JSON string but got `%s`", jsonObj.get("TimeRule").toString()));
      }
      if ((jsonObj.get("TimeRulePlugIn") != null && !jsonObj.get("TimeRulePlugIn").isJsonNull()) && !jsonObj.get("TimeRulePlugIn").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `TimeRulePlugIn` to be a primitive type in the JSON string but got `%s`", jsonObj.get("TimeRulePlugIn").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AnalysisTemplateLinks.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AnalysisTemplateLinks' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AnalysisTemplateLinks> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AnalysisTemplateLinks.class));

       return (TypeAdapter<T>) new TypeAdapter<AnalysisTemplateLinks>() {
           @Override
           public void write(JsonWriter out, AnalysisTemplateLinks value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AnalysisTemplateLinks read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AnalysisTemplateLinks given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AnalysisTemplateLinks
   * @throws IOException if the JSON string is invalid with respect to AnalysisTemplateLinks
   */
  public static AnalysisTemplateLinks fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AnalysisTemplateLinks.class);
  }

  /**
   * Convert an instance of AnalysisTemplateLinks to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

