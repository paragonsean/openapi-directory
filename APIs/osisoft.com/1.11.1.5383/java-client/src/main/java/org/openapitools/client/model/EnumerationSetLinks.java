/*
 * PI Web API 2018 SP1 Swagger Spec
 * Swagger Spec file that describes PI Web API
 *
 * The version of the OpenAPI document: 1.11.1.5383
 * Contact: techsupport@osisoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * EnumerationSetLinks
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:19:51.369442-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class EnumerationSetLinks {
  public static final String SERIALIZED_NAME_DATA_SERVER = "DataServer";
  @SerializedName(SERIALIZED_NAME_DATA_SERVER)
  private String dataServer;

  public static final String SERIALIZED_NAME_DATABASE = "Database";
  @SerializedName(SERIALIZED_NAME_DATABASE)
  private String database;

  public static final String SERIALIZED_NAME_SECURITY = "Security";
  @SerializedName(SERIALIZED_NAME_SECURITY)
  private String security;

  public static final String SERIALIZED_NAME_SECURITY_ENTRIES = "SecurityEntries";
  @SerializedName(SERIALIZED_NAME_SECURITY_ENTRIES)
  private String securityEntries;

  public static final String SERIALIZED_NAME_SELF = "Self";
  @SerializedName(SERIALIZED_NAME_SELF)
  private String self;

  public static final String SERIALIZED_NAME_VALUES = "Values";
  @SerializedName(SERIALIZED_NAME_VALUES)
  private String values;

  public EnumerationSetLinks() {
  }

  public EnumerationSetLinks dataServer(String dataServer) {
    this.dataServer = dataServer;
    return this;
  }

  /**
   * Get dataServer
   * @return dataServer
   */
  @javax.annotation.Nullable
  public String getDataServer() {
    return dataServer;
  }

  public void setDataServer(String dataServer) {
    this.dataServer = dataServer;
  }


  public EnumerationSetLinks database(String database) {
    this.database = database;
    return this;
  }

  /**
   * Get database
   * @return database
   */
  @javax.annotation.Nullable
  public String getDatabase() {
    return database;
  }

  public void setDatabase(String database) {
    this.database = database;
  }


  public EnumerationSetLinks security(String security) {
    this.security = security;
    return this;
  }

  /**
   * Get security
   * @return security
   */
  @javax.annotation.Nullable
  public String getSecurity() {
    return security;
  }

  public void setSecurity(String security) {
    this.security = security;
  }


  public EnumerationSetLinks securityEntries(String securityEntries) {
    this.securityEntries = securityEntries;
    return this;
  }

  /**
   * Get securityEntries
   * @return securityEntries
   */
  @javax.annotation.Nullable
  public String getSecurityEntries() {
    return securityEntries;
  }

  public void setSecurityEntries(String securityEntries) {
    this.securityEntries = securityEntries;
  }


  public EnumerationSetLinks self(String self) {
    this.self = self;
    return this;
  }

  /**
   * Get self
   * @return self
   */
  @javax.annotation.Nullable
  public String getSelf() {
    return self;
  }

  public void setSelf(String self) {
    this.self = self;
  }


  public EnumerationSetLinks values(String values) {
    this.values = values;
    return this;
  }

  /**
   * Get values
   * @return values
   */
  @javax.annotation.Nullable
  public String getValues() {
    return values;
  }

  public void setValues(String values) {
    this.values = values;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EnumerationSetLinks enumerationSetLinks = (EnumerationSetLinks) o;
    return Objects.equals(this.dataServer, enumerationSetLinks.dataServer) &&
        Objects.equals(this.database, enumerationSetLinks.database) &&
        Objects.equals(this.security, enumerationSetLinks.security) &&
        Objects.equals(this.securityEntries, enumerationSetLinks.securityEntries) &&
        Objects.equals(this.self, enumerationSetLinks.self) &&
        Objects.equals(this.values, enumerationSetLinks.values);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dataServer, database, security, securityEntries, self, values);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EnumerationSetLinks {\n");
    sb.append("    dataServer: ").append(toIndentedString(dataServer)).append("\n");
    sb.append("    database: ").append(toIndentedString(database)).append("\n");
    sb.append("    security: ").append(toIndentedString(security)).append("\n");
    sb.append("    securityEntries: ").append(toIndentedString(securityEntries)).append("\n");
    sb.append("    self: ").append(toIndentedString(self)).append("\n");
    sb.append("    values: ").append(toIndentedString(values)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("DataServer");
    openapiFields.add("Database");
    openapiFields.add("Security");
    openapiFields.add("SecurityEntries");
    openapiFields.add("Self");
    openapiFields.add("Values");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to EnumerationSetLinks
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!EnumerationSetLinks.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in EnumerationSetLinks is not found in the empty JSON string", EnumerationSetLinks.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!EnumerationSetLinks.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `EnumerationSetLinks` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("DataServer") != null && !jsonObj.get("DataServer").isJsonNull()) && !jsonObj.get("DataServer").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `DataServer` to be a primitive type in the JSON string but got `%s`", jsonObj.get("DataServer").toString()));
      }
      if ((jsonObj.get("Database") != null && !jsonObj.get("Database").isJsonNull()) && !jsonObj.get("Database").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Database` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Database").toString()));
      }
      if ((jsonObj.get("Security") != null && !jsonObj.get("Security").isJsonNull()) && !jsonObj.get("Security").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Security` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Security").toString()));
      }
      if ((jsonObj.get("SecurityEntries") != null && !jsonObj.get("SecurityEntries").isJsonNull()) && !jsonObj.get("SecurityEntries").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `SecurityEntries` to be a primitive type in the JSON string but got `%s`", jsonObj.get("SecurityEntries").toString()));
      }
      if ((jsonObj.get("Self") != null && !jsonObj.get("Self").isJsonNull()) && !jsonObj.get("Self").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Self` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Self").toString()));
      }
      if ((jsonObj.get("Values") != null && !jsonObj.get("Values").isJsonNull()) && !jsonObj.get("Values").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Values` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Values").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!EnumerationSetLinks.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'EnumerationSetLinks' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<EnumerationSetLinks> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(EnumerationSetLinks.class));

       return (TypeAdapter<T>) new TypeAdapter<EnumerationSetLinks>() {
           @Override
           public void write(JsonWriter out, EnumerationSetLinks value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public EnumerationSetLinks read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of EnumerationSetLinks given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of EnumerationSetLinks
   * @throws IOException if the JSON string is invalid with respect to EnumerationSetLinks
   */
  public static EnumerationSetLinks fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, EnumerationSetLinks.class);
  }

  /**
   * Convert an instance of EnumerationSetLinks to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

