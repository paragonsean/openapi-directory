/*
 * PI Web API 2018 SP1 Swagger Spec
 * Swagger Spec file that describes PI Web API
 *
 * The version of the OpenAPI document: 1.11.1.5383
 * Contact: techsupport@osisoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Errors;
import org.openapitools.client.model.ItemsSecurityEntry;
import org.openapitools.client.model.ItemsSecurityRights;
import org.openapitools.client.model.SecurityEntry;
import org.openapitools.client.model.TableCategory;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TableCategoryApi
 */
@Disabled
public class TableCategoryApiTest {

    private final TableCategoryApi api = new TableCategoryApi();

    /**
     * Create a security entry owned by the table category.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tableCategoryCreateSecurityEntryTest() throws ApiException {
        String webId = null;
        SecurityEntry securityEntry = null;
        Boolean applyToChildren = null;
        String webIdType = null;
        api.tableCategoryCreateSecurityEntry(webId, securityEntry, applyToChildren, webIdType);
        // TODO: test validations
    }

    /**
     * Delete a table category.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tableCategoryDeleteTest() throws ApiException {
        String webId = null;
        api.tableCategoryDelete(webId);
        // TODO: test validations
    }

    /**
     * Delete a security entry owned by the table category.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tableCategoryDeleteSecurityEntryTest() throws ApiException {
        String name = null;
        String webId = null;
        Boolean applyToChildren = null;
        api.tableCategoryDeleteSecurityEntry(name, webId, applyToChildren);
        // TODO: test validations
    }

    /**
     * Retrieve a table category.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tableCategoryGetTest() throws ApiException {
        String webId = null;
        String selectedFields = null;
        String webIdType = null;
        TableCategory response = api.tableCategoryGet(webId, selectedFields, webIdType);
        // TODO: test validations
    }

    /**
     * Retrieve a table category by path.
     *
     * This method returns a Table Category based on the hierarchical path associated with it, and should be used when a path has been received from a separate part of the PI System for use in the PI Web API. Users should primarily search with the WebID when available.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tableCategoryGetByPathTest() throws ApiException {
        String path = null;
        String selectedFields = null;
        String webIdType = null;
        TableCategory response = api.tableCategoryGetByPath(path, selectedFields, webIdType);
        // TODO: test validations
    }

    /**
     * Get the security information of the specified security item associated with the table category for a specified user.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tableCategoryGetSecurityTest() throws ApiException {
        String webId = null;
        List<String> userIdentity = null;
        Boolean forceRefresh = null;
        String selectedFields = null;
        String webIdType = null;
        ItemsSecurityRights response = api.tableCategoryGetSecurity(webId, userIdentity, forceRefresh, selectedFields, webIdType);
        // TODO: test validations
    }

    /**
     * Retrieve the security entries associated with the table category based on the specified criteria. By default, all security entries for this table category are returned.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tableCategoryGetSecurityEntriesTest() throws ApiException {
        String webId = null;
        String nameFilter = null;
        String selectedFields = null;
        String webIdType = null;
        ItemsSecurityEntry response = api.tableCategoryGetSecurityEntries(webId, nameFilter, selectedFields, webIdType);
        // TODO: test validations
    }

    /**
     * Retrieve the security entry associated with the table category with the specified name.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tableCategoryGetSecurityEntryByNameTest() throws ApiException {
        String name = null;
        String webId = null;
        String selectedFields = null;
        String webIdType = null;
        SecurityEntry response = api.tableCategoryGetSecurityEntryByName(name, webId, selectedFields, webIdType);
        // TODO: test validations
    }

    /**
     * Update a table category by replacing items in its definition.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tableCategoryUpdateTest() throws ApiException {
        String webId = null;
        TableCategory tableCategory = null;
        api.tableCategoryUpdate(webId, tableCategory);
        // TODO: test validations
    }

    /**
     * Update a security entry owned by the table category.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tableCategoryUpdateSecurityEntryTest() throws ApiException {
        String name = null;
        String webId = null;
        SecurityEntry securityEntry = null;
        Boolean applyToChildren = null;
        api.tableCategoryUpdateSecurityEntry(name, webId, securityEntry, applyToChildren);
        // TODO: test validations
    }

}
