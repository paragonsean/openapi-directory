/*
 * PI Web API 2018 SP1 Swagger Spec
 * Swagger Spec file that describes PI Web API
 *
 * The version of the OpenAPI document: 1.11.1.5383
 * Contact: techsupport@osisoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Errors;
import org.openapitools.client.model.ItemsItemsSubstatus;
import org.openapitools.client.model.ItemsStreamSummaries;
import org.openapitools.client.model.ItemsStreamUpdatesRegister;
import org.openapitools.client.model.ItemsStreamUpdatesRetrieve;
import org.openapitools.client.model.ItemsStreamValue;
import org.openapitools.client.model.ItemsStreamValues;
import org.openapitools.client.model.ItemsSubstatus;
import org.openapitools.client.model.StreamValue;
import org.openapitools.client.model.StreamValues;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for StreamSetApi
 */
@Disabled
public class StreamSetApiTest {

    private final StreamSetApi api = new StreamSetApi();

    /**
     * Opens a channel that will send messages about any value changes for the attributes of an Element, Event Frame, or Attribute.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void streamSetGetChannelTest() throws ApiException {
        String webId = null;
        String categoryName = null;
        Integer heartbeatRate = null;
        Boolean includeInitialValues = null;
        String nameFilter = null;
        Boolean searchFullHierarchy = null;
        Boolean showExcluded = null;
        Boolean showHidden = null;
        String templateName = null;
        String webIdType = null;
        api.streamSetGetChannel(webId, categoryName, heartbeatRate, includeInitialValues, nameFilter, searchFullHierarchy, showExcluded, showHidden, templateName, webIdType);
        // TODO: test validations
    }

    /**
     * Opens a channel that will send messages about any value changes for the specified streams.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void streamSetGetChannelAdHocTest() throws ApiException {
        List<String> webId = null;
        Integer heartbeatRate = null;
        Boolean includeInitialValues = null;
        String webIdType = null;
        api.streamSetGetChannelAdHoc(webId, heartbeatRate, includeInitialValues, webIdType);
        // TODO: test validations
    }

    /**
     * Returns End of stream values of the attributes for an Element, Event Frame or Attribute
     *
     * Any time series value in the response that contains an &#39;Errors&#39; property indicates PI Web API encountered a handled error during the transfer of the response stream.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void streamSetGetEndTest() throws ApiException {
        String webId = null;
        String categoryName = null;
        String nameFilter = null;
        Boolean searchFullHierarchy = null;
        String selectedFields = null;
        Boolean showExcluded = null;
        Boolean showHidden = null;
        String sortField = null;
        String sortOrder = null;
        String templateName = null;
        String webIdType = null;
        ItemsStreamValue response = api.streamSetGetEnd(webId, categoryName, nameFilter, searchFullHierarchy, selectedFields, showExcluded, showHidden, sortField, sortOrder, templateName, webIdType);
        // TODO: test validations
    }

    /**
     * Returns End Of Stream values for attributes of the specified streams
     *
     * Any time series value in the response that contains an &#39;Errors&#39; property indicates PI Web API encountered a handled error during the transfer of the response stream.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void streamSetGetEndAdHocTest() throws ApiException {
        List<String> webId = null;
        String selectedFields = null;
        String sortField = null;
        String sortOrder = null;
        String webIdType = null;
        ItemsStreamValues response = api.streamSetGetEndAdHoc(webId, selectedFields, sortField, sortOrder, webIdType);
        // TODO: test validations
    }

    /**
     * Returns interpolated values of attributes for an element, event frame or attribute over the specified time range at the specified sampling interval.
     *
     * Any time series value in the response that contains an &#39;Errors&#39; property indicates PI Web API encountered a handled error during the transfer of the response stream.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void streamSetGetInterpolatedTest() throws ApiException {
        String webId = null;
        String categoryName = null;
        String endTime = null;
        String filterExpression = null;
        Boolean includeFilteredValues = null;
        String interval = null;
        String nameFilter = null;
        Boolean searchFullHierarchy = null;
        String selectedFields = null;
        Boolean showExcluded = null;
        Boolean showHidden = null;
        String sortField = null;
        String sortOrder = null;
        String startTime = null;
        String syncTime = null;
        String syncTimeBoundaryType = null;
        String templateName = null;
        String timeZone = null;
        String webIdType = null;
        ItemsStreamValues response = api.streamSetGetInterpolated(webId, categoryName, endTime, filterExpression, includeFilteredValues, interval, nameFilter, searchFullHierarchy, selectedFields, showExcluded, showHidden, sortField, sortOrder, startTime, syncTime, syncTimeBoundaryType, templateName, timeZone, webIdType);
        // TODO: test validations
    }

    /**
     * Returns interpolated values of the specified streams over the specified time range at the specified sampling interval.
     *
     * Any time series value in the response that contains an &#39;Errors&#39; property indicates PI Web API encountered a handled error during the transfer of the response stream.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void streamSetGetInterpolatedAdHocTest() throws ApiException {
        List<String> webId = null;
        String endTime = null;
        String filterExpression = null;
        Boolean includeFilteredValues = null;
        String interval = null;
        String selectedFields = null;
        String sortField = null;
        String sortOrder = null;
        String startTime = null;
        String syncTime = null;
        String syncTimeBoundaryType = null;
        String timeZone = null;
        String webIdType = null;
        ItemsStreamValues response = api.streamSetGetInterpolatedAdHoc(webId, endTime, filterExpression, includeFilteredValues, interval, selectedFields, sortField, sortOrder, startTime, syncTime, syncTimeBoundaryType, timeZone, webIdType);
        // TODO: test validations
    }

    /**
     * Returns interpolated values of attributes for an element, event frame or attribute at the specified times.
     *
     * Any time series value in the response that contains an &#39;Errors&#39; property indicates PI Web API encountered a handled error during the transfer of the response stream.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void streamSetGetInterpolatedAtTimesTest() throws ApiException {
        String webId = null;
        List<String> time = null;
        String categoryName = null;
        String filterExpression = null;
        Boolean includeFilteredValues = null;
        String nameFilter = null;
        Boolean searchFullHierarchy = null;
        String selectedFields = null;
        Boolean showExcluded = null;
        Boolean showHidden = null;
        String sortOrder = null;
        String templateName = null;
        String timeZone = null;
        String webIdType = null;
        ItemsStreamValues response = api.streamSetGetInterpolatedAtTimes(webId, time, categoryName, filterExpression, includeFilteredValues, nameFilter, searchFullHierarchy, selectedFields, showExcluded, showHidden, sortOrder, templateName, timeZone, webIdType);
        // TODO: test validations
    }

    /**
     * Returns interpolated values of the specified streams at the specified times.
     *
     * Any time series value in the response that contains an &#39;Errors&#39; property indicates PI Web API encountered a handled error during the transfer of the response stream.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void streamSetGetInterpolatedAtTimesAdHocTest() throws ApiException {
        List<String> time = null;
        List<String> webId = null;
        String filterExpression = null;
        Boolean includeFilteredValues = null;
        String selectedFields = null;
        String sortOrder = null;
        String timeZone = null;
        String webIdType = null;
        ItemsStreamValues response = api.streamSetGetInterpolatedAtTimesAdHoc(time, webId, filterExpression, includeFilteredValues, selectedFields, sortOrder, timeZone, webIdType);
        // TODO: test validations
    }

    /**
     * Returns the base stream&#39;s recorded values and subordinate streams&#39; interpolated values at times matching the recorded values&#39; timestamps.
     *
     * Any time series value in the response that contains an &#39;Errors&#39; property indicates PI Web API encountered a handled error during the transfer of the response stream. The first stream in the response is always the X-Axis.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void streamSetGetJoinedTest() throws ApiException {
        String baseWebId = null;
        List<String> subordinateWebId = null;
        String boundaryType = null;
        String endTime = null;
        String filterExpression = null;
        Boolean includeFilteredValues = null;
        Integer maxCount = null;
        String selectedFields = null;
        String startTime = null;
        String timeZone = null;
        String webIdType = null;
        ItemsStreamValues response = api.streamSetGetJoined(baseWebId, subordinateWebId, boundaryType, endTime, filterExpression, includeFilteredValues, maxCount, selectedFields, startTime, timeZone, webIdType);
        // TODO: test validations
    }

    /**
     * Returns values of attributes for an element, event frame or attribute over the specified time range suitable for plotting over the number of intervals (typically represents pixels).
     *
     * For each interval, the data available is examined and significant values are returned. Each interval can produce up to 5 values if they are unique, the first value in the interval, the last value, the highest value, the lowest value and at most one exceptional point (bad status or digital state). Any time series value in the response that contains an &#39;Errors&#39; property indicates PI Web API encountered a handled error during the transfer of the response stream.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void streamSetGetPlotTest() throws ApiException {
        String webId = null;
        String categoryName = null;
        String endTime = null;
        Integer intervals = null;
        String nameFilter = null;
        Boolean searchFullHierarchy = null;
        String selectedFields = null;
        Boolean showExcluded = null;
        Boolean showHidden = null;
        String sortField = null;
        String sortOrder = null;
        String startTime = null;
        String templateName = null;
        String timeZone = null;
        String webIdType = null;
        ItemsStreamValues response = api.streamSetGetPlot(webId, categoryName, endTime, intervals, nameFilter, searchFullHierarchy, selectedFields, showExcluded, showHidden, sortField, sortOrder, startTime, templateName, timeZone, webIdType);
        // TODO: test validations
    }

    /**
     * Returns values of attributes for the specified streams over the specified time range suitable for plotting over the number of intervals (typically represents pixels).
     *
     * For each interval, the data available is examined and significant values are returned. Each interval can produce up to 5 values if they are unique, the first value in the interval, the last value, the highest value, the lowest value and at most one exceptional point (bad status or digital state). Any time series value in the response that contains an &#39;Errors&#39; property indicates PI Web API encountered a handled error during the transfer of the response stream.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void streamSetGetPlotAdHocTest() throws ApiException {
        List<String> webId = null;
        String endTime = null;
        Integer intervals = null;
        String selectedFields = null;
        String sortField = null;
        String sortOrder = null;
        String startTime = null;
        String timeZone = null;
        String webIdType = null;
        ItemsStreamValues response = api.streamSetGetPlotAdHoc(webId, endTime, intervals, selectedFields, sortField, sortOrder, startTime, timeZone, webIdType);
        // TODO: test validations
    }

    /**
     * Returns recorded values of the attributes for an element, event frame, or attribute.
     *
     * Any time series value in the response that contains an &#39;Errors&#39; property indicates PI Web API encountered a handled error during the transfer of the response stream.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void streamSetGetRecordedTest() throws ApiException {
        String webId = null;
        String boundaryType = null;
        String categoryName = null;
        String endTime = null;
        String filterExpression = null;
        Boolean includeFilteredValues = null;
        Integer maxCount = null;
        String nameFilter = null;
        Boolean searchFullHierarchy = null;
        String selectedFields = null;
        Boolean showExcluded = null;
        Boolean showHidden = null;
        String sortField = null;
        String sortOrder = null;
        String startTime = null;
        String templateName = null;
        String timeZone = null;
        String webIdType = null;
        ItemsStreamValues response = api.streamSetGetRecorded(webId, boundaryType, categoryName, endTime, filterExpression, includeFilteredValues, maxCount, nameFilter, searchFullHierarchy, selectedFields, showExcluded, showHidden, sortField, sortOrder, startTime, templateName, timeZone, webIdType);
        // TODO: test validations
    }

    /**
     * Returns recorded values of the specified streams.
     *
     * Any time series value in the response that contains an &#39;Errors&#39; property indicates PI Web API encountered a handled error during the transfer of the response stream.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void streamSetGetRecordedAdHocTest() throws ApiException {
        List<String> webId = null;
        String boundaryType = null;
        String endTime = null;
        String filterExpression = null;
        Boolean includeFilteredValues = null;
        Integer maxCount = null;
        String selectedFields = null;
        String sortField = null;
        String sortOrder = null;
        String startTime = null;
        String timeZone = null;
        String webIdType = null;
        ItemsStreamValues response = api.streamSetGetRecordedAdHoc(webId, boundaryType, endTime, filterExpression, includeFilteredValues, maxCount, selectedFields, sortField, sortOrder, startTime, timeZone, webIdType);
        // TODO: test validations
    }

    /**
     * Returns recorded values of the attributes for an element, event frame, or attribute.
     *
     * Any time series value in the response that contains an &#39;Errors&#39; property indicates PI Web API encountered a handled error during the transfer of the response stream.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void streamSetGetRecordedAtTimeTest() throws ApiException {
        String webId = null;
        String time = null;
        String categoryName = null;
        String nameFilter = null;
        String retrievalMode = null;
        Boolean searchFullHierarchy = null;
        String selectedFields = null;
        Boolean showExcluded = null;
        Boolean showHidden = null;
        String templateName = null;
        String timeZone = null;
        String webIdType = null;
        ItemsStreamValue response = api.streamSetGetRecordedAtTime(webId, time, categoryName, nameFilter, retrievalMode, searchFullHierarchy, selectedFields, showExcluded, showHidden, templateName, timeZone, webIdType);
        // TODO: test validations
    }

    /**
     * Returns recorded values based on the passed time and retrieval mode.
     *
     * Any time series value in the response that contains an &#39;Errors&#39; property indicates PI Web API encountered a handled error during the transfer of the response stream.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void streamSetGetRecordedAtTimeAdHocTest() throws ApiException {
        String time = null;
        List<String> webId = null;
        String retrievalMode = null;
        String selectedFields = null;
        String timeZone = null;
        String webIdType = null;
        ItemsStreamValue response = api.streamSetGetRecordedAtTimeAdHoc(time, webId, retrievalMode, selectedFields, timeZone, webIdType);
        // TODO: test validations
    }

    /**
     * Returns recorded values of attributes for an element, event frame or attribute at the specified times.
     *
     * Any time series value in the response that contains an &#39;Errors&#39; property indicates PI Web API encountered a handled error during the transfer of the response stream.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void streamSetGetRecordedAtTimesTest() throws ApiException {
        String webId = null;
        List<String> time = null;
        String categoryName = null;
        String nameFilter = null;
        String retrievalMode = null;
        Boolean searchFullHierarchy = null;
        String selectedFields = null;
        Boolean showExcluded = null;
        Boolean showHidden = null;
        String sortOrder = null;
        String templateName = null;
        String timeZone = null;
        String webIdType = null;
        ItemsStreamValues response = api.streamSetGetRecordedAtTimes(webId, time, categoryName, nameFilter, retrievalMode, searchFullHierarchy, selectedFields, showExcluded, showHidden, sortOrder, templateName, timeZone, webIdType);
        // TODO: test validations
    }

    /**
     * Returns recorded values of the specified streams at the specified times.
     *
     * Any time series value in the response that contains an &#39;Errors&#39; property indicates PI Web API encountered a handled error during the transfer of the response stream.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void streamSetGetRecordedAtTimesAdHocTest() throws ApiException {
        List<String> time = null;
        List<String> webId = null;
        String retrievalMode = null;
        String selectedFields = null;
        String sortOrder = null;
        String timeZone = null;
        String webIdType = null;
        ItemsStreamValues response = api.streamSetGetRecordedAtTimesAdHoc(time, webId, retrievalMode, selectedFields, sortOrder, timeZone, webIdType);
        // TODO: test validations
    }

    /**
     * Returns summary values of the attributes for an element, event frame or attribute.
     *
     * Any time series value in the response that contains an &#39;Errors&#39; property indicates PI Web API encountered a handled error during the transfer of the response stream.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void streamSetGetSummariesTest() throws ApiException {
        String webId = null;
        String calculationBasis = null;
        String categoryName = null;
        String endTime = null;
        String filterExpression = null;
        String nameFilter = null;
        String sampleInterval = null;
        String sampleType = null;
        Boolean searchFullHierarchy = null;
        String selectedFields = null;
        Boolean showExcluded = null;
        Boolean showHidden = null;
        String startTime = null;
        String summaryDuration = null;
        List<String> summaryType = null;
        String templateName = null;
        String timeType = null;
        String timeZone = null;
        String webIdType = null;
        ItemsStreamSummaries response = api.streamSetGetSummaries(webId, calculationBasis, categoryName, endTime, filterExpression, nameFilter, sampleInterval, sampleType, searchFullHierarchy, selectedFields, showExcluded, showHidden, startTime, summaryDuration, summaryType, templateName, timeType, timeZone, webIdType);
        // TODO: test validations
    }

    /**
     * Returns summary values of the specified streams.
     *
     * Any time series value in the response that contains an &#39;Errors&#39; property indicates PI Web API encountered a handled error during the transfer of the response stream.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void streamSetGetSummariesAdHocTest() throws ApiException {
        List<String> webId = null;
        String calculationBasis = null;
        String endTime = null;
        String filterExpression = null;
        String sampleInterval = null;
        String sampleType = null;
        String selectedFields = null;
        String startTime = null;
        String summaryDuration = null;
        List<String> summaryType = null;
        String timeType = null;
        String timeZone = null;
        String webIdType = null;
        ItemsStreamSummaries response = api.streamSetGetSummariesAdHoc(webId, calculationBasis, endTime, filterExpression, sampleInterval, sampleType, selectedFields, startTime, summaryDuration, summaryType, timeType, timeZone, webIdType);
        // TODO: test validations
    }

    /**
     * Returns values of the attributes for an Element, Event Frame or Attribute at the specified time.
     *
     * Any time series value in the response that contains an &#39;Errors&#39; property indicates PI Web API encountered a handled error during the transfer of the response stream.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void streamSetGetValuesTest() throws ApiException {
        String webId = null;
        String categoryName = null;
        String nameFilter = null;
        Boolean searchFullHierarchy = null;
        String selectedFields = null;
        Boolean showExcluded = null;
        Boolean showHidden = null;
        String sortField = null;
        String sortOrder = null;
        String templateName = null;
        String time = null;
        String timeZone = null;
        String webIdType = null;
        ItemsStreamValue response = api.streamSetGetValues(webId, categoryName, nameFilter, searchFullHierarchy, selectedFields, showExcluded, showHidden, sortField, sortOrder, templateName, time, timeZone, webIdType);
        // TODO: test validations
    }

    /**
     * Returns values of the specified streams.
     *
     * Any time series value in the response that contains an &#39;Errors&#39; property indicates PI Web API encountered a handled error during the transfer of the response stream.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void streamSetGetValuesAdHocTest() throws ApiException {
        List<String> webId = null;
        String selectedFields = null;
        String sortField = null;
        String sortOrder = null;
        String time = null;
        String timeZone = null;
        String webIdType = null;
        ItemsStreamValue response = api.streamSetGetValuesAdHoc(webId, selectedFields, sortField, sortOrder, time, timeZone, webIdType);
        // TODO: test validations
    }

    /**
     * Register for stream updates
     *
     * The supplied webIds will register for stream updates. For a 200 response, the returned location header will contain the url for retrieving the next set of stream updates.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void streamSetRegisterStreamSetUpdatesTest() throws ApiException {
        List<String> webId = null;
        String selectedFields = null;
        String webIdType = null;
        ItemsStreamUpdatesRegister response = api.streamSetRegisterStreamSetUpdates(webId, selectedFields, webIdType);
        // TODO: test validations
    }

    /**
     * Receive stream updates
     *
     * The supplied markers will identify the set of stream updates to retrieve. For a 200 response, the returned location header will contain the url for retrieving the stream updates.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void streamSetRetrieveStreamSetUpdatesTest() throws ApiException {
        List<String> marker = null;
        String selectedFields = null;
        String webIdType = null;
        ItemsStreamUpdatesRetrieve response = api.streamSetRetrieveStreamSetUpdates(marker, selectedFields, webIdType);
        // TODO: test validations
    }

    /**
     * Updates a single value for the specified streams.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void streamSetUpdateValueTest() throws ApiException {
        String webId = null;
        List<StreamValue> values = null;
        String bufferOption = null;
        String updateOption = null;
        ItemsSubstatus response = api.streamSetUpdateValue(webId, values, bufferOption, updateOption);
        // TODO: test validations
    }

    /**
     * Updates a single value for the specified streams.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void streamSetUpdateValueAdHocTest() throws ApiException {
        List<StreamValue> values = null;
        String bufferOption = null;
        String updateOption = null;
        ItemsSubstatus response = api.streamSetUpdateValueAdHoc(values, bufferOption, updateOption);
        // TODO: test validations
    }

    /**
     * Updates multiple values for the specified streams.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void streamSetUpdateValuesTest() throws ApiException {
        String webId = null;
        List<StreamValues> values = null;
        String bufferOption = null;
        String updateOption = null;
        ItemsItemsSubstatus response = api.streamSetUpdateValues(webId, values, bufferOption, updateOption);
        // TODO: test validations
    }

    /**
     * Updates multiple values for the specified streams.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void streamSetUpdateValuesAdHocTest() throws ApiException {
        List<StreamValues> values = null;
        String bufferOption = null;
        String updateOption = null;
        ItemsItemsSubstatus response = api.streamSetUpdateValuesAdHoc(values, bufferOption, updateOption);
        // TODO: test validations
    }

}
