/*
 * PI Web API 2018 SP1 Swagger Spec
 * Swagger Spec file that describes PI Web API
 *
 * The version of the OpenAPI document: 1.11.1.5383
 * Contact: techsupport@osisoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Errors;
import org.openapitools.client.model.ItemsSummaryValue;
import org.openapitools.client.model.TimedValues;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CalculationApi
 */
@Disabled
public class CalculationApiTest {

    private final CalculationApi api = new CalculationApi();

    /**
     * Returns results of evaluating the expression over the time range from the start time to the end time at a defined interval.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void calculationGetAtIntervalsTest() throws ApiException {
        String expression = null;
        String endTime = null;
        String sampleInterval = null;
        String selectedFields = null;
        String startTime = null;
        String webId = null;
        TimedValues response = api.calculationGetAtIntervals(expression, endTime, sampleInterval, selectedFields, startTime, webId);
        // TODO: test validations
    }

    /**
     * Returns the result of evaluating the expression at each point in time over the time range from the start time to the end time where a recorded value exists for a member of the expression.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void calculationGetAtRecordedTest() throws ApiException {
        String expression = null;
        String endTime = null;
        String selectedFields = null;
        String startTime = null;
        String webId = null;
        TimedValues response = api.calculationGetAtRecorded(expression, endTime, selectedFields, startTime, webId);
        // TODO: test validations
    }

    /**
     * Returns the result of evaluating the expression at the specified timestamps.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void calculationGetAtTimesTest() throws ApiException {
        String expression = null;
        List<String> time = null;
        String selectedFields = null;
        String sortOrder = null;
        String webId = null;
        TimedValues response = api.calculationGetAtTimes(expression, time, selectedFields, sortOrder, webId);
        // TODO: test validations
    }

    /**
     * Returns the result of evaluating the expression over the time range from the start time to the end time. The time range is first divided into a number of summary intervals. Then the calculation is performed for the specified summaries over each interval.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void calculationGetSummaryTest() throws ApiException {
        String expression = null;
        String calculationBasis = null;
        String endTime = null;
        String sampleInterval = null;
        String sampleType = null;
        String selectedFields = null;
        String startTime = null;
        String summaryDuration = null;
        List<String> summaryType = null;
        String timeType = null;
        String webId = null;
        ItemsSummaryValue response = api.calculationGetSummary(expression, calculationBasis, endTime, sampleInterval, sampleType, selectedFields, startTime, summaryDuration, summaryType, timeType, webId);
        // TODO: test validations
    }

}
