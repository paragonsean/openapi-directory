/*
 * PI Web API 2018 SP1 Swagger Spec
 * Swagger Spec file that describes PI Web API
 *
 * The version of the OpenAPI document: 1.11.1.5383
 * Contact: techsupport@osisoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Errors;
import org.openapitools.client.model.ItemsNotificationRuleSubscriber;
import org.openapitools.client.model.ItemsNotificationRuleTemplate;
import org.openapitools.client.model.ItemsSecurityEntry;
import org.openapitools.client.model.ItemsSecurityRights;
import org.openapitools.client.model.NotificationRuleSubscriber;
import org.openapitools.client.model.NotificationRuleTemplate;
import org.openapitools.client.model.SecurityEntry;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for NotificationRuleTemplateApi
 */
@Disabled
public class NotificationRuleTemplateApiTest {

    private final NotificationRuleTemplateApi api = new NotificationRuleTemplateApi();

    /**
     * Create a notification rule subscriber.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void notificationRuleTemplateCreateNotificationRuleTemplateSubscriberTest() throws ApiException {
        String webId = null;
        NotificationRuleSubscriber notificationRuleSubscriber = null;
        String webIdType = null;
        api.notificationRuleTemplateCreateNotificationRuleTemplateSubscriber(webId, notificationRuleSubscriber, webIdType);
        // TODO: test validations
    }

    /**
     * Create a security entry owned by the notification rule template.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void notificationRuleTemplateCreateSecurityEntryTest() throws ApiException {
        String webId = null;
        SecurityEntry securityEntry = null;
        Boolean applyToChildren = null;
        String webIdType = null;
        api.notificationRuleTemplateCreateSecurityEntry(webId, securityEntry, applyToChildren, webIdType);
        // TODO: test validations
    }

    /**
     * Delete a notification rule template.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void notificationRuleTemplateDeleteTest() throws ApiException {
        String webId = null;
        api.notificationRuleTemplateDelete(webId);
        // TODO: test validations
    }

    /**
     * Delete a security entry owned by the notification rule template.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void notificationRuleTemplateDeleteSecurityEntryTest() throws ApiException {
        String name = null;
        String webId = null;
        Boolean applyToChildren = null;
        api.notificationRuleTemplateDeleteSecurityEntry(name, webId, applyToChildren);
        // TODO: test validations
    }

    /**
     * Get the specified notification rule template.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void notificationRuleTemplateGetTest() throws ApiException {
        String webId = null;
        String selectedFields = null;
        String webIdType = null;
        NotificationRuleTemplate response = api.notificationRuleTemplateGet(webId, selectedFields, webIdType);
        // TODO: test validations
    }

    /**
     * Retrieve a notification rule template by path.
     *
     * This method returns a Notification Rule Template based on the hierarchical path associated with it, and should be used when a path has been received from a separate part of the PI System for use in the PI Web API. Users should primarily search with the WebID when available.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void notificationRuleTemplateGetByPathTest() throws ApiException {
        String path = null;
        String selectedFields = null;
        String webIdType = null;
        NotificationRuleTemplate response = api.notificationRuleTemplateGetByPath(path, selectedFields, webIdType);
        // TODO: test validations
    }

    /**
     * Retrieve notification rule template subscribers.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void notificationRuleTemplateGetNotificationRuleTemplateSubscribersTest() throws ApiException {
        String webId = null;
        String selectedFields = null;
        String webIdType = null;
        ItemsNotificationRuleSubscriber response = api.notificationRuleTemplateGetNotificationRuleTemplateSubscribers(webId, selectedFields, webIdType);
        // TODO: test validations
    }

    /**
     * Retrieve Notification rule templates based on the specified conditions. Returns Notification rule templates using the specified search query string.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void notificationRuleTemplateGetNotificationRuleTemplatesQueryTest() throws ApiException {
        String databaseWebId = null;
        Integer maxCount = null;
        String query = null;
        String selectedFields = null;
        Integer startIndex = null;
        String webIdType = null;
        ItemsNotificationRuleTemplate response = api.notificationRuleTemplateGetNotificationRuleTemplatesQuery(databaseWebId, maxCount, query, selectedFields, startIndex, webIdType);
        // TODO: test validations
    }

    /**
     * Get the security information of the specified security item associated with the notification rule template for a specified user.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void notificationRuleTemplateGetSecurityTest() throws ApiException {
        String webId = null;
        List<String> userIdentity = null;
        Boolean forceRefresh = null;
        String selectedFields = null;
        String webIdType = null;
        ItemsSecurityRights response = api.notificationRuleTemplateGetSecurity(webId, userIdentity, forceRefresh, selectedFields, webIdType);
        // TODO: test validations
    }

    /**
     * Retrieve the security entries associated with the notification rule template based on the specified criteria. By default, all security entries for this notification rule template are returned.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void notificationRuleTemplateGetSecurityEntriesTest() throws ApiException {
        String webId = null;
        String nameFilter = null;
        String selectedFields = null;
        String webIdType = null;
        ItemsSecurityEntry response = api.notificationRuleTemplateGetSecurityEntries(webId, nameFilter, selectedFields, webIdType);
        // TODO: test validations
    }

    /**
     * Retrieve the security entry associated with the notification rule template with the specified name.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void notificationRuleTemplateGetSecurityEntryByNameTest() throws ApiException {
        String name = null;
        String webId = null;
        String selectedFields = null;
        String webIdType = null;
        SecurityEntry response = api.notificationRuleTemplateGetSecurityEntryByName(name, webId, selectedFields, webIdType);
        // TODO: test validations
    }

    /**
     * Update a notification rule template by replacing items in its definition.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void notificationRuleTemplateUpdateTest() throws ApiException {
        String webId = null;
        NotificationRuleTemplate notificationRuleTemplate = null;
        api.notificationRuleTemplateUpdate(webId, notificationRuleTemplate);
        // TODO: test validations
    }

    /**
     * Update a security entry owned by the notification rule template.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void notificationRuleTemplateUpdateSecurityEntryTest() throws ApiException {
        String name = null;
        String webId = null;
        SecurityEntry securityEntry = null;
        Boolean applyToChildren = null;
        api.notificationRuleTemplateUpdateSecurityEntry(name, webId, securityEntry, applyToChildren);
        // TODO: test validations
    }

}
