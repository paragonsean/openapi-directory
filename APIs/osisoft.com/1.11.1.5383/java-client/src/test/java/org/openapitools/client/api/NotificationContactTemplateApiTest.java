/*
 * PI Web API 2018 SP1 Swagger Spec
 * Swagger Spec file that describes PI Web API
 *
 * The version of the OpenAPI document: 1.11.1.5383
 * Contact: techsupport@osisoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Errors;
import org.openapitools.client.model.ItemsNotificationContactTemplate;
import org.openapitools.client.model.ItemsSecurityEntry;
import org.openapitools.client.model.ItemsSecurityRights;
import org.openapitools.client.model.NotificationContactTemplate;
import org.openapitools.client.model.SecurityEntry;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for NotificationContactTemplateApi
 */
@Disabled
public class NotificationContactTemplateApiTest {

    private final NotificationContactTemplateApi api = new NotificationContactTemplateApi();

    /**
     * Create a security entry owned by the notification contact template.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void notificationContactTemplateCreateSecurityEntryTest() throws ApiException {
        String webId = null;
        SecurityEntry securityEntry = null;
        Boolean applyToChildren = null;
        String webIdType = null;
        api.notificationContactTemplateCreateSecurityEntry(webId, securityEntry, applyToChildren, webIdType);
        // TODO: test validations
    }

    /**
     * Delete a notification contact template.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void notificationContactTemplateDeleteTest() throws ApiException {
        String webId = null;
        api.notificationContactTemplateDelete(webId);
        // TODO: test validations
    }

    /**
     * Delete a security entry owned by the notification contact template.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void notificationContactTemplateDeleteSecurityEntryTest() throws ApiException {
        String name = null;
        String webId = null;
        Boolean applyToChildren = null;
        api.notificationContactTemplateDeleteSecurityEntry(name, webId, applyToChildren);
        // TODO: test validations
    }

    /**
     * Retrieve a notification contact template.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void notificationContactTemplateGetTest() throws ApiException {
        String webId = null;
        String selectedFields = null;
        String webIdType = null;
        NotificationContactTemplate response = api.notificationContactTemplateGet(webId, selectedFields, webIdType);
        // TODO: test validations
    }

    /**
     * Retrieve a notification contact template by path.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void notificationContactTemplateGetByPathTest() throws ApiException {
        String path = null;
        String selectedFields = null;
        String webIdType = null;
        NotificationContactTemplate response = api.notificationContactTemplateGetByPath(path, selectedFields, webIdType);
        // TODO: test validations
    }

    /**
     * Retrieve notification contact template&#39;s child templates.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void notificationContactTemplateGetNotificationContactTemplatesTest() throws ApiException {
        String webId = null;
        String selectedFields = null;
        String webIdType = null;
        NotificationContactTemplate response = api.notificationContactTemplateGetNotificationContactTemplates(webId, selectedFields, webIdType);
        // TODO: test validations
    }

    /**
     * Retrieve notification contact templates based on the specified conditions. Returns notification contact templates using the specified search query string.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void notificationContactTemplateGetNotificationContactTemplatesQueryTest() throws ApiException {
        String assetServerWebId = null;
        Integer maxCount = null;
        String query = null;
        String selectedFields = null;
        Integer startIndex = null;
        String webIdType = null;
        ItemsNotificationContactTemplate response = api.notificationContactTemplateGetNotificationContactTemplatesQuery(assetServerWebId, maxCount, query, selectedFields, startIndex, webIdType);
        // TODO: test validations
    }

    /**
     * Get the security information of the specified security item associated with the notification contact template for a specified user.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void notificationContactTemplateGetSecurityTest() throws ApiException {
        String webId = null;
        List<String> userIdentity = null;
        Boolean forceRefresh = null;
        String selectedFields = null;
        String webIdType = null;
        ItemsSecurityRights response = api.notificationContactTemplateGetSecurity(webId, userIdentity, forceRefresh, selectedFields, webIdType);
        // TODO: test validations
    }

    /**
     * Retrieve the security entries associated with the notification contact template based on the specified criteria. By default, all security entries for this notification contact template are returned.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void notificationContactTemplateGetSecurityEntriesTest() throws ApiException {
        String webId = null;
        String nameFilter = null;
        String selectedFields = null;
        String webIdType = null;
        ItemsSecurityEntry response = api.notificationContactTemplateGetSecurityEntries(webId, nameFilter, selectedFields, webIdType);
        // TODO: test validations
    }

    /**
     * Retrieve the security entry associated with the notification contact template with the specified name.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void notificationContactTemplateGetSecurityEntryByNameTest() throws ApiException {
        String name = null;
        String webId = null;
        String selectedFields = null;
        String webIdType = null;
        SecurityEntry response = api.notificationContactTemplateGetSecurityEntryByName(name, webId, selectedFields, webIdType);
        // TODO: test validations
    }

    /**
     * Update a notification contact template by replacing items in its definition.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void notificationContactTemplateUpdateTest() throws ApiException {
        String webId = null;
        NotificationContactTemplate notificationContactTemplate = null;
        api.notificationContactTemplateUpdate(webId, notificationContactTemplate);
        // TODO: test validations
    }

    /**
     * Update a security entry owned by the notification contact template.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void notificationContactTemplateUpdateSecurityEntryTest() throws ApiException {
        String name = null;
        String webId = null;
        SecurityEntry securityEntry = null;
        Boolean applyToChildren = null;
        api.notificationContactTemplateUpdateSecurityEntry(name, webId, securityEntry, applyToChildren);
        // TODO: test validations
    }

}
