/*
 * PI Web API 2018 SP1 Swagger Spec
 * Swagger Spec file that describes PI Web API
 *
 * The version of the OpenAPI document: 1.11.1.5383
 * Contact: techsupport@osisoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AttributeTemplate;
import org.openapitools.client.model.ItemsAttributeCategory;
import org.openapitools.client.model.ItemsAttributeTemplate;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AttributeTemplateApi
 */
@Disabled
public class AttributeTemplateApiTest {

    private final AttributeTemplateApi api = new AttributeTemplateApi();

    /**
     * Create an attribute template as a child of another attribute template.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void attributeTemplateCreateAttributeTemplateTest() throws ApiException {
        String webId = null;
        AttributeTemplate template = null;
        String webIdType = null;
        api.attributeTemplateCreateAttributeTemplate(webId, template, webIdType);
        // TODO: test validations
    }

    /**
     * Delete an attribute template.
     *
     * Deleting an attribute template will delete the attributes that were created based on the template
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void attributeTemplateDeleteTest() throws ApiException {
        String webId = null;
        api.attributeTemplateDelete(webId);
        // TODO: test validations
    }

    /**
     * Retrieve an attribute template.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void attributeTemplateGetTest() throws ApiException {
        String webId = null;
        String selectedFields = null;
        String webIdType = null;
        AttributeTemplate response = api.attributeTemplateGet(webId, selectedFields, webIdType);
        // TODO: test validations
    }

    /**
     * Retrieve an attribute template&#39;s child attribute templates.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void attributeTemplateGetAttributeTemplatesTest() throws ApiException {
        String webId = null;
        String selectedFields = null;
        String webIdType = null;
        ItemsAttributeTemplate response = api.attributeTemplateGetAttributeTemplates(webId, selectedFields, webIdType);
        // TODO: test validations
    }

    /**
     * Retrieve an attribute template by path.
     *
     * This method returns an attribute template based on the hierarchical path associated with it, and should be used when a path has been received from a separate part of the PI System for use in the PI Web API. Users should primarily search with the WebID when available.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void attributeTemplateGetByPathTest() throws ApiException {
        String path = null;
        String selectedFields = null;
        String webIdType = null;
        AttributeTemplate response = api.attributeTemplateGetByPath(path, selectedFields, webIdType);
        // TODO: test validations
    }

    /**
     * Get an attribute template&#39;s categories.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void attributeTemplateGetCategoriesTest() throws ApiException {
        String webId = null;
        String selectedFields = null;
        String webIdType = null;
        ItemsAttributeCategory response = api.attributeTemplateGetCategories(webId, selectedFields, webIdType);
        // TODO: test validations
    }

    /**
     * Update an existing attribute template by replacing items in its definition.
     *
     * Updating an attribute template will propagate changes to the attributes that were created based on the template
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void attributeTemplateUpdateTest() throws ApiException {
        String webId = null;
        AttributeTemplate template = null;
        api.attributeTemplateUpdate(webId, template);
        // TODO: test validations
    }

}
