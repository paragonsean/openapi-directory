openapi: 3.0.1
info:
  contact:
    email: techsupport@osisoft.com
    name: "OSIsoft, LLC."
    url: https://techsupport.osisoft.com/
  description: Swagger Spec file that describes PI Web API
  license:
    name: Apache 2.0 License
    url: http://tempuri.org/license
  termsOfService: https://pisquare.osisoft.com/docs/DOC-1105
  title: PI Web API 2018 SP1 Swagger Spec
  version: 1.11.1.5383
  x-apisguru-categories:
  - enterprise
  x-logo:
    backgroundColor: '#FFFFFF'
    url: https://twitter.com/OSIsoft/profile_image?size=original
  x-origin:
  - format: swagger
    url: https://devdata.osisoft.com/piwebapi/help/specification
    version: "2.0"
  x-providerName: osisoft.com
servers:
- url: https://devdata.osisoft.com/piwebapi
paths:
  /:
    get:
      deprecated: false
      operationId: home_get
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Landing'
            text/json:
              schema:
                $ref: '#/components/schemas/Landing'
            text/html:
              schema:
                $ref: '#/components/schemas/Landing'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Landing'
          description: Links to top level collections and system information.
      summary: Get top level links for this PI System Web API instance.
      tags:
      - Home
      x-openapi-router-controller: openapi_server.controllers.home_controller
  /analyses:
    get:
      deprecated: false
      description: "This method returns an Analysis based on the hierarchical path\
        \ associated with it, and should be used when a path has been received from\
        \ a separate part of the PI System for use in the PI Web API. Users should\
        \ primarily search with the WebID when available."
      operationId: analysis_get_by_path
      parameters:
      - description: The path to the Analysis.
        in: query
        name: path
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Analysis'
            text/json:
              schema:
                $ref: '#/components/schemas/Analysis'
            text/html:
              schema:
                $ref: '#/components/schemas/Analysis'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Analysis'
          description: The specified Analysis.
      summary: Retrieve an Analysis by path.
      tags:
      - Analysis
      x-openapi-router-controller: openapi_server.controllers.analysis_controller
  /analyses/search:
    get:
      deprecated: false
      operationId: analysis_get_analyses_query
      parameters:
      - description: The ID of the asset database to use as the root of the query.
        in: query
        name: databaseWebId
        schema:
          type: string
      - description: The maximum number of objects to be returned per call (page size).
          The default is 1000.
        in: query
        name: maxCount
        schema:
          type: integer
      - description: "The query string is a list of filters used to perform an AFSearch\
          \ for the analyses in the asset database. An example would be: \"query=\
          \ Name:=MyAnalysis1* Template:=AnalysisTemplate\"."
        in: query
        name: query
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: The starting index (zero based) of the items to be returned.
          The default is 0.
        in: query
        name: startIndex
        schema:
          type: integer
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[Analysis]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[Analysis]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[Analysis]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[Analysis]"
          description: A list of analyses matching the specified conditions.
      summary: "Retrieve analyses based on the specified conditions. By default, returns\
        \ all analyses."
      tags:
      - Analysis
      x-openapi-router-controller: openapi_server.controllers.analysis_controller
  /analyses/{webId}:
    delete:
      deprecated: false
      operationId: analysis_delete
      parameters:
      - description: The ID of the Analysis to delete.
        in: path
        name: webId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The Analysis was deleted.
      summary: Delete an Analysis.
      tags:
      - Analysis
      x-openapi-router-controller: openapi_server.controllers.analysis_controller
    get:
      deprecated: false
      operationId: analysis_get
      parameters:
      - description: The ID of the Analysis.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Analysis'
            text/json:
              schema:
                $ref: '#/components/schemas/Analysis'
            text/html:
              schema:
                $ref: '#/components/schemas/Analysis'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Analysis'
          description: The specified Analysis.
      summary: Retrieve an Analysis.
      tags:
      - Analysis
      x-openapi-router-controller: openapi_server.controllers.analysis_controller
    patch:
      deprecated: false
      operationId: analysis_update
      parameters:
      - description: The ID of the Analysis to update.
        in: path
        name: webId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Analysis'
          text/json:
            schema:
              $ref: '#/components/schemas/Analysis'
        description: A partial Analysis containing the desired changes.
        required: true
        x-body-name: analysis
      responses:
        "204":
          content: {}
          description: The Analysis was updated.
      summary: Update an Analysis.
      tags:
      - Analysis
      x-codegen-request-body-name: analysis
      x-openapi-router-controller: openapi_server.controllers.analysis_controller
  /analyses/{webId}/categories:
    get:
      deprecated: false
      operationId: analysis_get_categories
      parameters:
      - description: The ID of the Analysis.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[AnalysisCategory]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[AnalysisCategory]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[AnalysisCategory]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[AnalysisCategory]"
          description: A list of categories.
      summary: Get an Analysis' categories.
      tags:
      - Analysis
      x-openapi-router-controller: openapi_server.controllers.analysis_controller
  /analyses/{webId}/security:
    get:
      deprecated: false
      operationId: analysis_get_security
      parameters:
      - description: The ID of the Analysis for the security to be checked.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "The user identity for the security information to be checked.\
          \ Multiple security identities may be specified with multiple instances\
          \ of the parameter. If the parameter is not specified, only the current\
          \ user's security rights will be returned."
        explode: true
        in: query
        name: userIdentity
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Indicates if the security cache should be refreshed before getting
          security information. The default is 'false'.
        in: query
        name: forceRefresh
        schema:
          type: boolean
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[SecurityRights]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[SecurityRights]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[SecurityRights]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[SecurityRights]"
          description: Security rights.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: An invalid or local account is specified as the user identity.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Access denied for the specified user identity.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Unsupported when using Anonymous authentication method.
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Failed to retrieve the specified user identity.
      summary: Get the security information of the specified security item associated
        with the Analysis for a specified user.
      tags:
      - Analysis
      x-openapi-router-controller: openapi_server.controllers.analysis_controller
  /analyses/{webId}/securityentries:
    get:
      deprecated: false
      operationId: analysis_get_security_entries
      parameters:
      - description: The ID of the analysis.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: The name query string used for filtering security entries. The
          default is no filter.
        in: query
        name: nameFilter
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[SecurityEntry]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[SecurityEntry]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[SecurityEntry]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[SecurityEntry]"
          description: A list of security entries matching the specified condition.
      summary: "Retrieve the security entries associated with the analysis based on\
        \ the specified criteria. By default, all security entries for this analysis\
        \ are returned."
      tags:
      - Analysis
      x-openapi-router-controller: openapi_server.controllers.analysis_controller
    post:
      deprecated: false
      operationId: analysis_create_security_entry
      parameters:
      - description: "The ID of the analysis, where the security entry will be created."
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "If false, the new access permissions are only applied to the\
          \ associated object. If true, the access permissions of children with any\
          \ parent-child reference types will change when the permissions on the primary\
          \ parent change."
        in: query
        name: applyToChildren
        schema:
          type: boolean
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityEntry'
          text/json:
            schema:
              $ref: '#/components/schemas/SecurityEntry'
        description: The new security entry definition. The full list of allow and
          deny rights must be supplied.
        required: true
        x-body-name: securityEntry
      responses:
        "201":
          content: {}
          description: The security entry was created. The response's Location header
            is a link to the security entry.
      summary: Create a security entry owned by the analysis.
      tags:
      - Analysis
      x-codegen-request-body-name: securityEntry
      x-openapi-router-controller: openapi_server.controllers.analysis_controller
  /analyses/{webId}/securityentries/{name}:
    delete:
      deprecated: false
      operationId: analysis_delete_security_entry
      parameters:
      - description: "The name of the security entry. For every backslash character\
          \ (\\) in the security entry name, replace with asterisk (*). As an example,\
          \ use domain*username instead of domain\\username."
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: "The ID of the analysis, where the security entry will be deleted."
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "If false, the new access permissions are only applied to the\
          \ associated object. If true, the access permissions of children with any\
          \ parent-child reference types will change when the permissions on the primary\
          \ parent change."
        in: query
        name: applyToChildren
        schema:
          type: boolean
      responses:
        "204":
          content: {}
          description: The security entry was deleted.
      summary: Delete a security entry owned by the analysis.
      tags:
      - Analysis
      x-openapi-router-controller: openapi_server.controllers.analysis_controller
    get:
      deprecated: false
      operationId: analysis_get_security_entry_by_name
      parameters:
      - description: "The name of the security entry. For every backslash character\
          \ (\\) in the security entry name, replace with asterisk (*). As an example,\
          \ use domain*username instead of domain\\username."
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: The ID of the analysis.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityEntry'
            text/json:
              schema:
                $ref: '#/components/schemas/SecurityEntry'
            text/html:
              schema:
                $ref: '#/components/schemas/SecurityEntry'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/SecurityEntry'
          description: The security entry matching the specified condition.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: The security entry with the specified name is not found.
      summary: Retrieve the security entry associated with the analysis with the specified
        name.
      tags:
      - Analysis
      x-openapi-router-controller: openapi_server.controllers.analysis_controller
    put:
      deprecated: false
      operationId: analysis_update_security_entry
      parameters:
      - description: The name of the security entry.
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: "The ID of the analysis, where the security entry will be updated."
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "If false, the new access permissions are only applied to the\
          \ associated object. If true, the access permissions of children with any\
          \ parent-child reference types will change when the permissions on the primary\
          \ parent change."
        in: query
        name: applyToChildren
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityEntry'
          text/json:
            schema:
              $ref: '#/components/schemas/SecurityEntry'
        description: The new security entry definition. The full list of allow and
          deny rights must be supplied or they will be removed.
        required: true
        x-body-name: securityEntry
      responses:
        "204":
          content: {}
          description: The security entry was updated.
      summary: Update a security entry owned by the analysis.
      tags:
      - Analysis
      x-codegen-request-body-name: securityEntry
      x-openapi-router-controller: openapi_server.controllers.analysis_controller
  /analysiscategories:
    get:
      deprecated: false
      operationId: analysis_category_get_by_path
      parameters:
      - description: The path to the target analysis category.
        in: query
        name: path
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalysisCategory'
            text/json:
              schema:
                $ref: '#/components/schemas/AnalysisCategory'
            text/html:
              schema:
                $ref: '#/components/schemas/AnalysisCategory'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/AnalysisCategory'
          description: The specified analysis category.
      summary: Retrieve an analysis category by path.
      tags:
      - AnalysisCategory
      x-openapi-router-controller: openapi_server.controllers.analysis_category_controller
  /analysiscategories/{webId}:
    delete:
      deprecated: false
      operationId: analysis_category_delete
      parameters:
      - description: The ID of the analysis category to delete.
        in: path
        name: webId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The analysis category was deleted.
      summary: Delete an analysis category.
      tags:
      - AnalysisCategory
      x-openapi-router-controller: openapi_server.controllers.analysis_category_controller
    get:
      deprecated: false
      operationId: analysis_category_get
      parameters:
      - description: The ID of the analysis category.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalysisCategory'
            text/json:
              schema:
                $ref: '#/components/schemas/AnalysisCategory'
            text/html:
              schema:
                $ref: '#/components/schemas/AnalysisCategory'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/AnalysisCategory'
          description: The specified analysis category.
      summary: Retrieve an analysis category.
      tags:
      - AnalysisCategory
      x-openapi-router-controller: openapi_server.controllers.analysis_category_controller
    patch:
      deprecated: false
      operationId: analysis_category_update
      parameters:
      - description: The ID of the analysis category to update.
        in: path
        name: webId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnalysisCategory'
          text/json:
            schema:
              $ref: '#/components/schemas/AnalysisCategory'
        description: A partial analysis category containing the desired changes.
        required: true
        x-body-name: category
      responses:
        "204":
          content: {}
          description: The analysis category was updated.
      summary: Update an analysis category by replacing items in its definition.
      tags:
      - AnalysisCategory
      x-codegen-request-body-name: category
      x-openapi-router-controller: openapi_server.controllers.analysis_category_controller
  /analysiscategories/{webId}/security:
    get:
      deprecated: false
      operationId: analysis_category_get_security
      parameters:
      - description: The ID of the analysis category for the security to be checked.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "The user identity for the security information to be checked.\
          \ Multiple security identities may be specified with multiple instances\
          \ of the parameter. If the parameter is not specified, only the current\
          \ user's security rights will be returned."
        explode: true
        in: query
        name: userIdentity
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Indicates if the security cache should be refreshed before getting
          security information. The default is 'false'.
        in: query
        name: forceRefresh
        schema:
          type: boolean
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[SecurityRights]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[SecurityRights]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[SecurityRights]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[SecurityRights]"
          description: Security rights.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: An invalid or local account is specified as the user identity.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Access denied for the specified user identity.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Unsupported when using Anonymous authentication method.
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Failed to retrieve the specified user identity.
      summary: Get the security information of the specified security item associated
        with the analysis category for a specified user.
      tags:
      - AnalysisCategory
      x-openapi-router-controller: openapi_server.controllers.analysis_category_controller
  /analysiscategories/{webId}/securityentries:
    get:
      deprecated: false
      operationId: analysis_category_get_security_entries
      parameters:
      - description: The ID of the analysis category.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: The name query string used for filtering security entries. The
          default is no filter.
        in: query
        name: nameFilter
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[SecurityEntry]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[SecurityEntry]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[SecurityEntry]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[SecurityEntry]"
          description: A list of security entries matching the specified condition.
      summary: "Retrieve the security entries associated with the analysis category\
        \ based on the specified criteria. By default, all security entries for this\
        \ analysis category are returned."
      tags:
      - AnalysisCategory
      x-openapi-router-controller: openapi_server.controllers.analysis_category_controller
    post:
      deprecated: false
      operationId: analysis_category_create_security_entry
      parameters:
      - description: "The ID of the analysis category, where the security entry will\
          \ be created."
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "If false, the new access permissions are only applied to the\
          \ associated object. If true, the access permissions of children with any\
          \ parent-child reference types will change when the permissions on the primary\
          \ parent change."
        in: query
        name: applyToChildren
        schema:
          type: boolean
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityEntry'
          text/json:
            schema:
              $ref: '#/components/schemas/SecurityEntry'
        description: The new security entry definition. The full list of allow and
          deny rights must be supplied.
        required: true
        x-body-name: securityEntry
      responses:
        "201":
          content: {}
          description: The security entry was created. The response's Location header
            is a link to the security entry.
      summary: Create a security entry owned by the analysis category.
      tags:
      - AnalysisCategory
      x-codegen-request-body-name: securityEntry
      x-openapi-router-controller: openapi_server.controllers.analysis_category_controller
  /analysiscategories/{webId}/securityentries/{name}:
    delete:
      deprecated: false
      operationId: analysis_category_delete_security_entry
      parameters:
      - description: "The name of the security entry. For every backslash character\
          \ (\\) in the security entry name, replace with asterisk (*). As an example,\
          \ use domain*username instead of domain\\username."
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: "The ID of the analysis category, where the security entry will\
          \ be deleted."
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "If false, the new access permissions are only applied to the\
          \ associated object. If true, the access permissions of children with any\
          \ parent-child reference types will change when the permissions on the primary\
          \ parent change."
        in: query
        name: applyToChildren
        schema:
          type: boolean
      responses:
        "204":
          content: {}
          description: The security entry was deleted.
      summary: Delete a security entry owned by the analysis category.
      tags:
      - AnalysisCategory
      x-openapi-router-controller: openapi_server.controllers.analysis_category_controller
    get:
      deprecated: false
      operationId: analysis_category_get_security_entry_by_name
      parameters:
      - description: "The name of the security entry. For every backslash character\
          \ (\\) in the security entry name, replace with asterisk (*). As an example,\
          \ use domain*username instead of domain\\username."
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: The ID of the analysis category.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityEntry'
            text/json:
              schema:
                $ref: '#/components/schemas/SecurityEntry'
            text/html:
              schema:
                $ref: '#/components/schemas/SecurityEntry'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/SecurityEntry'
          description: The security entry matching the specified condition.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: The security entry with the specified name is not found.
      summary: Retrieve the security entry associated with the analysis category with
        the specified name.
      tags:
      - AnalysisCategory
      x-openapi-router-controller: openapi_server.controllers.analysis_category_controller
    put:
      deprecated: false
      operationId: analysis_category_update_security_entry
      parameters:
      - description: The name of the security entry.
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: "The ID of the analysis category, where the security entry will\
          \ be updated."
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "If false, the new access permissions are only applied to the\
          \ associated object. If true, the access permissions of children with any\
          \ parent-child reference types will change when the permissions on the primary\
          \ parent change."
        in: query
        name: applyToChildren
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityEntry'
          text/json:
            schema:
              $ref: '#/components/schemas/SecurityEntry'
        description: The new security entry definition. The full list of allow and
          deny rights must be supplied or they will be removed.
        required: true
        x-body-name: securityEntry
      responses:
        "204":
          content: {}
          description: The security entry was updated.
      summary: Update a security entry owned by the analysis category.
      tags:
      - AnalysisCategory
      x-codegen-request-body-name: securityEntry
      x-openapi-router-controller: openapi_server.controllers.analysis_category_controller
  /analysisruleplugins:
    get:
      deprecated: false
      description: "This method returns an Analysis Rule Plug-in based on the hierarchical\
        \ path associated with it, and should be used when a path has been received\
        \ from a separate part of the PI System for use in the PI Web API. Users should\
        \ primarily search with the WebID when available."
      operationId: analysis_rule_plug_in_get_by_path
      parameters:
      - description: The path to the Analysis Rule Plug-in.
        in: query
        name: path
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalysisRulePlugIn'
            text/json:
              schema:
                $ref: '#/components/schemas/AnalysisRulePlugIn'
            text/html:
              schema:
                $ref: '#/components/schemas/AnalysisRulePlugIn'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/AnalysisRulePlugIn'
          description: The specified Analysis Rule Plug-in.
      summary: Retrieve an Analysis Rule Plug-in by path.
      tags:
      - AnalysisRulePlugIn
      x-openapi-router-controller: openapi_server.controllers.analysis_rule_plug_in_controller
  /analysisruleplugins/{webId}:
    get:
      deprecated: false
      operationId: analysis_rule_plug_in_get
      parameters:
      - description: The ID of the Analysis Rule Plug-in.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalysisRulePlugIn'
            text/json:
              schema:
                $ref: '#/components/schemas/AnalysisRulePlugIn'
            text/html:
              schema:
                $ref: '#/components/schemas/AnalysisRulePlugIn'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/AnalysisRulePlugIn'
          description: The specified Analysis Rule Plug-in.
      summary: Retrieve an Analysis Rule Plug-in.
      tags:
      - AnalysisRulePlugIn
      x-openapi-router-controller: openapi_server.controllers.analysis_rule_plug_in_controller
  /analysisrules:
    get:
      deprecated: false
      description: "This method returns an Analysis Rule based on the hierarchical\
        \ path associated with it, and should be used when a path has been received\
        \ from a separate part of the PI System for use in the PI Web API. Users should\
        \ primarily search with the WebID when available."
      operationId: analysis_rule_get_by_path
      parameters:
      - description: The path to the Analysis Rule.
        in: query
        name: path
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalysisRule'
            text/json:
              schema:
                $ref: '#/components/schemas/AnalysisRule'
            text/html:
              schema:
                $ref: '#/components/schemas/AnalysisRule'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/AnalysisRule'
          description: The requested Analysis Rule.
      summary: Retrieve an Analysis Rule by path.
      tags:
      - AnalysisRule
      x-openapi-router-controller: openapi_server.controllers.analysis_rule_controller
  /analysisrules/{webId}:
    delete:
      deprecated: false
      operationId: analysis_rule_delete
      parameters:
      - description: The ID of the Analysis Rule.
        in: path
        name: webId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The Analysis Rule was deleted.
      summary: Delete an Analysis Rule.
      tags:
      - AnalysisRule
      x-openapi-router-controller: openapi_server.controllers.analysis_rule_controller
    get:
      deprecated: false
      operationId: analysis_rule_get
      parameters:
      - description: The ID of the Analysis Rule.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalysisRule'
            text/json:
              schema:
                $ref: '#/components/schemas/AnalysisRule'
            text/html:
              schema:
                $ref: '#/components/schemas/AnalysisRule'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/AnalysisRule'
          description: The requested Analysis Rule.
      summary: Retrieve an Analysis Rule.
      tags:
      - AnalysisRule
      x-openapi-router-controller: openapi_server.controllers.analysis_rule_controller
    patch:
      deprecated: false
      operationId: analysis_rule_update
      parameters:
      - description: The ID of the Analysis Rule.
        in: path
        name: webId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnalysisRule'
          text/json:
            schema:
              $ref: '#/components/schemas/AnalysisRule'
        description: A partial Analysis Rule containing the desired changes.
        required: true
        x-body-name: analysisRule
      responses:
        "204":
          content: {}
          description: The Analysis Rule was updated.
      summary: Update an Analysis Rule by replacing items in its definition.
      tags:
      - AnalysisRule
      x-codegen-request-body-name: analysisRule
      x-openapi-router-controller: openapi_server.controllers.analysis_rule_controller
  /analysisrules/{webId}/analysisrules:
    get:
      deprecated: false
      operationId: analysis_rule_get_analysis_rules
      parameters:
      - description: The ID of the parent Analysis Rule.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: The maximum number of objects to be returned per call (page size).
          The default is 1000.
        in: query
        name: maxCount
        schema:
          type: integer
      - description: The name query string used for finding Analysis Rules. The default
          is no filter.
        in: query
        name: nameFilter
        schema:
          type: string
      - description: Specifies if the search should include Analysis Rules nested
          further than the immediate children of the searchRoot. The default is 'false'.
        in: query
        name: searchFullHierarchy
        schema:
          type: boolean
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: The field or property of the object used to sort the returned
          collection. The default is 'Name'.
        in: query
        name: sortField
        schema:
          type: string
      - description: The order that the returned collection is sorted. The default
          is 'Ascending'.
        in: query
        name: sortOrder
        schema:
          type: string
      - description: The starting index (zero based) of the items to be returned.
          The default is 0.
        in: query
        name: startIndex
        schema:
          type: integer
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[AnalysisRule]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[AnalysisRule]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[AnalysisRule]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[AnalysisRule]"
          description: A list of child Analysis Rules.
      summary: Get the child Analysis Rules of the Analysis Rule.
      tags:
      - AnalysisRule
      x-openapi-router-controller: openapi_server.controllers.analysis_rule_controller
    post:
      deprecated: false
      operationId: analysis_rule_create_analysis_rule
      parameters:
      - description: "The ID of the parent Analysis Rule, on which to create the child\
          \ Analysis Rule."
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnalysisRule'
          text/json:
            schema:
              $ref: '#/components/schemas/AnalysisRule'
        description: The definition of the new Analysis Rule.
        required: true
        x-body-name: analysisRule
      responses:
        "201":
          content: {}
          description: The Analysis Rule was created. The response's Location header
            is a link to the created Analysis Rule.
      summary: Create a new Analysis Rule as a child of an existing Analysis Rule.
      tags:
      - AnalysisRule
      x-codegen-request-body-name: analysisRule
      x-openapi-router-controller: openapi_server.controllers.analysis_rule_controller
  /analysistemplates:
    get:
      deprecated: false
      description: "This method returns an analysis template based on the hierarchical\
        \ path associated with it, and should be used when a path has been received\
        \ from a separate part of the PI System for use in the PI Web API. Users should\
        \ primarily search with the WebID when available."
      operationId: analysis_template_get_by_path
      parameters:
      - description: The path to the analysis template.
        in: query
        name: path
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalysisTemplate'
            text/json:
              schema:
                $ref: '#/components/schemas/AnalysisTemplate'
            text/html:
              schema:
                $ref: '#/components/schemas/AnalysisTemplate'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/AnalysisTemplate'
          description: The specified analysis template.
      summary: Retrieve an analysis template by path.
      tags:
      - AnalysisTemplate
      x-openapi-router-controller: openapi_server.controllers.analysis_template_controller
    post:
      deprecated: false
      operationId: analysis_template_create_from_analysis
      parameters:
      - description: "The ID of the Analysis, on which the template is created."
        in: query
        name: analysisWebId
        required: true
        schema:
          type: string
      - description: "The name for the created template, which must be unique within\
          \ the database's AnalysisTemplate collection. If the name ends with an asterisk\
          \ (*), then a unique name will be generated based on the supplied name.\
          \ The default is the specified Analysis' name suffixed with an asterisk\
          \ (*)."
        in: query
        name: name
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "201":
          content: {}
          description: The Analysis Template was created. The response's Location
            header is a link to the created Analysis Template.
      summary: Create an Analysis template based upon a specified Analysis.
      tags:
      - AnalysisTemplate
      x-openapi-router-controller: openapi_server.controllers.analysis_template_controller
  /analysistemplates/search:
    get:
      deprecated: false
      operationId: analysis_template_get_analysis_templates_query
      parameters:
      - description: The ID of the asset database to use as the root of the query.
        in: query
        name: databaseWebId
        schema:
          type: string
      - description: The maximum number of objects to be returned per call (page size).
          The default is 1000.
        in: query
        name: maxCount
        schema:
          type: integer
      - description: "The query string is a list of filters used to perform an AFSearch\
          \ for the analyses in the asset database. An example would be: \"query=\
          \ Name:=MyAnalysisTemplate1*\"."
        in: query
        name: query
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: The starting index (zero based) of the items to be returned.
          The default is 0.
        in: query
        name: startIndex
        schema:
          type: integer
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[AnalysisTemplate]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[AnalysisTemplate]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[AnalysisTemplate]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[AnalysisTemplate]"
          description: A list of analysis templates matching the specified conditions.
      summary: "Retrieve analysis templates based on the specified conditions. By\
        \ default, returns all analysis templates."
      tags:
      - AnalysisTemplate
      x-openapi-router-controller: openapi_server.controllers.analysis_template_controller
  /analysistemplates/{webId}:
    delete:
      deprecated: false
      description: "Deleting an analysis template will delete any analysis which was\
        \ created from it, unless the analysis is tied to a notification."
      operationId: analysis_template_delete
      parameters:
      - description: The ID of the analysis template to update.
        in: path
        name: webId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The analysis template was deleted.
      summary: Delete an analysis template.
      tags:
      - AnalysisTemplate
      x-openapi-router-controller: openapi_server.controllers.analysis_template_controller
    get:
      deprecated: false
      operationId: analysis_template_get
      parameters:
      - description: The ID of the analysis template.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalysisTemplate'
            text/json:
              schema:
                $ref: '#/components/schemas/AnalysisTemplate'
            text/html:
              schema:
                $ref: '#/components/schemas/AnalysisTemplate'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/AnalysisTemplate'
          description: The specified analysis template.
      summary: Retrieve an analysis template.
      tags:
      - AnalysisTemplate
      x-openapi-router-controller: openapi_server.controllers.analysis_template_controller
    patch:
      deprecated: false
      operationId: analysis_template_update
      parameters:
      - description: The ID of the analysis template to update.
        in: path
        name: webId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnalysisTemplate'
          text/json:
            schema:
              $ref: '#/components/schemas/AnalysisTemplate'
        description: A partial analysis template containing the desired changes.
        required: true
        x-body-name: template
      responses:
        "204":
          content: {}
          description: The analysis template was updated.
      summary: Update an analysis template by replacing items in its definition.
      tags:
      - AnalysisTemplate
      x-codegen-request-body-name: template
      x-openapi-router-controller: openapi_server.controllers.analysis_template_controller
  /analysistemplates/{webId}/categories:
    get:
      deprecated: false
      operationId: analysis_template_get_categories
      parameters:
      - description: The ID of the analysis template.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[AnalysisCategory]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[AnalysisCategory]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[AnalysisCategory]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[AnalysisCategory]"
          description: A list of categories.
      summary: Get an analysis template's categories.
      tags:
      - AnalysisTemplate
      x-openapi-router-controller: openapi_server.controllers.analysis_template_controller
  /analysistemplates/{webId}/security:
    get:
      deprecated: false
      operationId: analysis_template_get_security
      parameters:
      - description: The ID of the analysis template for the security to be checked.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "The user identity for the security information to be checked.\
          \ Multiple security identities may be specified with multiple instances\
          \ of the parameter. If the parameter is not specified, only the current\
          \ user's security rights will be returned."
        explode: true
        in: query
        name: userIdentity
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Indicates if the security cache should be refreshed before getting
          security information. The default is 'false'.
        in: query
        name: forceRefresh
        schema:
          type: boolean
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[SecurityRights]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[SecurityRights]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[SecurityRights]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[SecurityRights]"
          description: Security rights.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: An invalid or local account is specified as the user identity.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Access denied for the specified user identity.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Unsupported when using Anonymous authentication method.
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Failed to retrieve the specified user identity.
      summary: Get the security information of the specified security item associated
        with the analysis template for a specified user.
      tags:
      - AnalysisTemplate
      x-openapi-router-controller: openapi_server.controllers.analysis_template_controller
  /analysistemplates/{webId}/securityentries:
    get:
      deprecated: false
      operationId: analysis_template_get_security_entries
      parameters:
      - description: The ID of the analysis template.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: The name query string used for filtering security entries. The
          default is no filter.
        in: query
        name: nameFilter
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[SecurityEntry]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[SecurityEntry]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[SecurityEntry]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[SecurityEntry]"
          description: A list of security entries matching the specified condition.
      summary: "Retrieve the security entries associated with the analysis template\
        \ based on the specified criteria. By default, all security entries for this\
        \ analysis template are returned."
      tags:
      - AnalysisTemplate
      x-openapi-router-controller: openapi_server.controllers.analysis_template_controller
    post:
      deprecated: false
      operationId: analysis_template_create_security_entry
      parameters:
      - description: "The ID of the analysis template, where the security entry will\
          \ be created."
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "If false, the new access permissions are only applied to the\
          \ associated object. If true, the access permissions of children with any\
          \ parent-child reference types will change when the permissions on the primary\
          \ parent change."
        in: query
        name: applyToChildren
        schema:
          type: boolean
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityEntry'
          text/json:
            schema:
              $ref: '#/components/schemas/SecurityEntry'
        description: The new security entry definition. The full list of allow and
          deny rights must be supplied.
        required: true
        x-body-name: securityEntry
      responses:
        "201":
          content: {}
          description: The security entry was created. The response's Location header
            is a link to the security entry.
      summary: Create a security entry owned by the analysis template.
      tags:
      - AnalysisTemplate
      x-codegen-request-body-name: securityEntry
      x-openapi-router-controller: openapi_server.controllers.analysis_template_controller
  /analysistemplates/{webId}/securityentries/{name}:
    delete:
      deprecated: false
      operationId: analysis_template_delete_security_entry
      parameters:
      - description: "The name of the security entry. For every backslash character\
          \ (\\) in the security entry name, replace with asterisk (*). As an example,\
          \ use domain*username instead of domain\\username."
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: "The ID of the analysis template, where the security entry will\
          \ be deleted."
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "If false, the new access permissions are only applied to the\
          \ associated object. If true, the access permissions of children with any\
          \ parent-child reference types will change when the permissions on the primary\
          \ parent change."
        in: query
        name: applyToChildren
        schema:
          type: boolean
      responses:
        "204":
          content: {}
          description: The security entry was deleted.
      summary: Delete a security entry owned by the analysis template.
      tags:
      - AnalysisTemplate
      x-openapi-router-controller: openapi_server.controllers.analysis_template_controller
    get:
      deprecated: false
      operationId: analysis_template_get_security_entry_by_name
      parameters:
      - description: "The name of the security entry. For every backslash character\
          \ (\\) in the security entry name, replace with asterisk (*). As an example,\
          \ use domain*username instead of domain\\username."
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: The ID of the analysis template.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityEntry'
            text/json:
              schema:
                $ref: '#/components/schemas/SecurityEntry'
            text/html:
              schema:
                $ref: '#/components/schemas/SecurityEntry'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/SecurityEntry'
          description: The security entry matching the specified condition.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: The security entry with the specified name is not found.
      summary: Retrieve the security entry associated with the analysis template with
        the specified name.
      tags:
      - AnalysisTemplate
      x-openapi-router-controller: openapi_server.controllers.analysis_template_controller
    put:
      deprecated: false
      operationId: analysis_template_update_security_entry
      parameters:
      - description: The name of the security entry.
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: "The ID of the analysis template, where the security entry will\
          \ be updated."
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "If false, the new access permissions are only applied to the\
          \ associated object. If true, the access permissions of children with any\
          \ parent-child reference types will change when the permissions on the primary\
          \ parent change."
        in: query
        name: applyToChildren
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityEntry'
          text/json:
            schema:
              $ref: '#/components/schemas/SecurityEntry'
        description: The new security entry definition. The full list of allow and
          deny rights must be supplied or they will be removed.
        required: true
        x-body-name: securityEntry
      responses:
        "204":
          content: {}
          description: The security entry was updated.
      summary: Update a security entry owned by the analysis template.
      tags:
      - AnalysisTemplate
      x-codegen-request-body-name: securityEntry
      x-openapi-router-controller: openapi_server.controllers.analysis_template_controller
  /assetdatabases:
    get:
      deprecated: false
      description: "This method returns an asset database based on the hierarchical\
        \ path associated with it, and should be used when a path has been received\
        \ from a separate part of the PI System for use in the PI Web API. Users should\
        \ primarily search with the WebID when available."
      operationId: asset_database_get_by_path
      parameters:
      - description: The path to the database.
        in: query
        name: path
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetDatabase'
            text/json:
              schema:
                $ref: '#/components/schemas/AssetDatabase'
            text/html:
              schema:
                $ref: '#/components/schemas/AssetDatabase'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/AssetDatabase'
          description: The specified database.
      summary: Retrieve an Asset Database by path.
      tags:
      - AssetDatabase
      x-openapi-router-controller: openapi_server.controllers.asset_database_controller
  /assetdatabases/{webId}:
    delete:
      deprecated: false
      operationId: asset_database_delete
      parameters:
      - description: The ID of the database.
        in: path
        name: webId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The database was deleted.
      summary: Delete an asset database.
      tags:
      - AssetDatabase
      x-openapi-router-controller: openapi_server.controllers.asset_database_controller
    get:
      deprecated: false
      operationId: asset_database_get
      parameters:
      - description: The ID of the database.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetDatabase'
            text/json:
              schema:
                $ref: '#/components/schemas/AssetDatabase'
            text/html:
              schema:
                $ref: '#/components/schemas/AssetDatabase'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/AssetDatabase'
          description: The specified database.
      summary: Retrieve an Asset Database.
      tags:
      - AssetDatabase
      x-openapi-router-controller: openapi_server.controllers.asset_database_controller
    patch:
      deprecated: false
      operationId: asset_database_update
      parameters:
      - description: The ID of the database.
        in: path
        name: webId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetDatabase'
          text/json:
            schema:
              $ref: '#/components/schemas/AssetDatabase'
        description: A partial database containing the desired changes.
        required: true
        x-body-name: database
      responses:
        "204":
          content: {}
          description: The database was updated.
      summary: Update an asset database by replacing items in its definition.
      tags:
      - AssetDatabase
      x-codegen-request-body-name: database
      x-openapi-router-controller: openapi_server.controllers.asset_database_controller
  /assetdatabases/{webId}/analyses:
    get:
      deprecated: false
      description: "Users can search for the analyses based on specific search parameters.\
        \ If no parameters are specified in the search, the default values for each\
        \ parameter will be used and will return the analyses that match the default\
        \ search."
      operationId: asset_database_find_analyses
      parameters:
      - description: The ID of the database to search for the analyses.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: Specifies which of the object's properties are searched. Multiple
          search fields may be specified with multiple instances of the parameter.
          The default is 'Name'.
        explode: true
        in: query
        name: field
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: The maximum number of objects to be returned per call (page size).
          The default is 1000.
        in: query
        name: maxCount
        schema:
          type: integer
      - description: The query string used for finding analyses. The default is null.
        in: query
        name: query
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: The field or property of the object used to sort the returned
          collection. The default is 'Name'.
        in: query
        name: sortField
        schema:
          type: string
      - description: The order that the returned collection is sorted. The default
          is 'Ascending'.
        in: query
        name: sortOrder
        schema:
          type: string
      - description: The starting index (zero based) of the items to be returned.
          The default is 0.
        in: query
        name: startIndex
        schema:
          type: integer
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[Analysis]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[Analysis]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[Analysis]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[Analysis]"
          description: A list of analyses matching the specified conditions.
      summary: Retrieve analyses based on the specified conditions.
      tags:
      - AssetDatabase
      x-openapi-router-controller: openapi_server.controllers.asset_database_controller
  /assetdatabases/{webId}/analysiscategories:
    get:
      deprecated: false
      operationId: asset_database_get_analysis_categories
      parameters:
      - description: The ID of the database.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[AnalysisCategory]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[AnalysisCategory]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[AnalysisCategory]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[AnalysisCategory]"
          description: The analysis categories that exist in the database.
      summary: Retrieve analysis categories for a given Asset Database.
      tags:
      - AssetDatabase
      x-openapi-router-controller: openapi_server.controllers.asset_database_controller
    post:
      deprecated: false
      operationId: asset_database_create_analysis_category
      parameters:
      - description: The ID of the database in which to create the analysis category.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnalysisCategory'
          text/json:
            schema:
              $ref: '#/components/schemas/AnalysisCategory'
        description: The new analysis category definition.
        required: true
        x-body-name: analysisCategory
      responses:
        "201":
          content: {}
          description: The analysis category was created. The response's Location
            header is a link to the analysis category.
      summary: Create an analysis category at the Asset Database root.
      tags:
      - AssetDatabase
      x-codegen-request-body-name: analysisCategory
      x-openapi-router-controller: openapi_server.controllers.asset_database_controller
  /assetdatabases/{webId}/analysistemplates:
    get:
      deprecated: false
      description: "Users can search for the analysis templates based on specific\
        \ search parameters. If no parameters are specified in the search, the default\
        \ values for each parameter will be used and will return the templates that\
        \ match the default search."
      operationId: asset_database_get_analysis_templates
      parameters:
      - description: The ID of the database to search.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: Specifies which of the object's properties are searched. Multiple
          search fields may be specified with multiple instances of the parameter.
          The default is 'Name'.
        explode: true
        in: query
        name: field
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: The maximum number of objects to be returned per call (page size).
          The default is 1000.
        in: query
        name: maxCount
        schema:
          type: integer
      - description: The query string used for finding objects. The default is no
          query string.
        in: query
        name: query
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: The field or property of the object used to sort the returned
          collection. The default is 'Name'.
        in: query
        name: sortField
        schema:
          type: string
      - description: The order that the returned collection is sorted. The default
          is 'Ascending'.
        in: query
        name: sortOrder
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[AnalysisTemplate]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[AnalysisTemplate]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[AnalysisTemplate]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[AnalysisTemplate]"
          description: A list of analysis templates matching the specified condition.
      summary: "Retrieve analysis templates based on the specified criteria. By default,\
        \ all analysis templates in the specified Asset Database are returned."
      tags:
      - AssetDatabase
      x-openapi-router-controller: openapi_server.controllers.asset_database_controller
    post:
      deprecated: false
      description: Analyses that are based on an analysis template will inherit characteristics
        defined in the template.
      operationId: asset_database_create_analysis_template
      parameters:
      - description: The ID of the database in which to create the analysis template.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnalysisTemplate'
          text/json:
            schema:
              $ref: '#/components/schemas/AnalysisTemplate'
        description: The new analysis template definition.
        required: true
        x-body-name: template
      responses:
        "201":
          content: {}
          description: The analysis template was created. The response's Location
            header is a link to the created template.
      summary: Create an analysis template at the Asset Database root.
      tags:
      - AssetDatabase
      x-codegen-request-body-name: template
      x-openapi-router-controller: openapi_server.controllers.asset_database_controller
  /assetdatabases/{webId}/attributecategories:
    get:
      deprecated: false
      operationId: asset_database_get_attribute_categories
      parameters:
      - description: The ID of the database.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[AttributeCategory]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[AttributeCategory]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[AttributeCategory]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[AttributeCategory]"
          description: The attribute categories that exist in the database.
      summary: Retrieve attribute categories for a given Asset Database.
      tags:
      - AssetDatabase
      x-openapi-router-controller: openapi_server.controllers.asset_database_controller
    post:
      deprecated: false
      operationId: asset_database_create_attribute_category
      parameters:
      - description: The ID of the database in which to create the attribute category.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttributeCategory'
          text/json:
            schema:
              $ref: '#/components/schemas/AttributeCategory'
        description: The new attribute category definition.
        required: true
        x-body-name: attributeCategory
      responses:
        "201":
          content: {}
          description: The attribute category was created. The response's Location
            header is a link to the attribute category.
      summary: Create an attribute category at the Asset Database root.
      tags:
      - AssetDatabase
      x-codegen-request-body-name: attributeCategory
      x-openapi-router-controller: openapi_server.controllers.asset_database_controller
  /assetdatabases/{webId}/elementattributes:
    get:
      deprecated: false
      operationId: asset_database_find_element_attributes
      parameters:
      - description: The ID of the asset database to use as the root of the search.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "Associated values to return in the response, separated by semicolons\
          \ (;). This call supports DataReference to return attributes with data references.\
          \ If this parameter is not specified, DataReference values are not returned."
        in: query
        name: associations
        schema:
          type: string
      - description: Specify that returned attributes must have this category. The
          default is no filter.
        in: query
        name: attributeCategory
        schema:
          type: string
      - description: "The attribute description filter string used for finding objects.\
          \ Only the first 440 characters of the description will be searched. For\
          \ Asset Servers older than 2.7, a 400 status code (Bad Request) will be\
          \ returned if this parameter is specified. The default is no filter."
        in: query
        name: attributeDescriptionFilter
        schema:
          type: string
      - description: The attribute name filter string used for finding objects. The
          default is no filter.
        in: query
        name: attributeNameFilter
        schema:
          type: string
      - description: Specify that returned attributes' value type must be this value
          type. The default is no filter.
        in: query
        name: attributeType
        schema:
          type: string
      - description: Specify that the owner of the returned attributes must have this
          category. The default is no filter.
        in: query
        name: elementCategory
        schema:
          type: string
      - description: "The element description filter string used for finding objects.\
          \ Only the first 440 characters of the description will be searched. For\
          \ Asset Servers older than 2.7, a 400 status code (Bad Request) will be\
          \ returned if this parameter is specified. The default is no filter."
        in: query
        name: elementDescriptionFilter
        schema:
          type: string
      - description: The element name filter string used for finding objects. The
          default is no filter.
        in: query
        name: elementNameFilter
        schema:
          type: string
      - description: Specify that the owner of the returned attributes must have this
          template or a template derived from this template. The default is no filter.
        in: query
        name: elementTemplate
        schema:
          type: string
      - description: Specify that the element of the returned attributes must have
          this AFElementType. The default is no filter.
        in: query
        name: elementType
        schema:
          type: string
      - description: The maximum number of objects to be returned (the page size).
          The default is 1000.
        in: query
        name: maxCount
        schema:
          type: integer
      - description: Specifies if the search should include objects nested further
          than immediate children of the given resource. The default is 'false'.
        in: query
        name: searchFullHierarchy
        schema:
          type: boolean
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: The field or property of the object used to sort the returned
          collection. The default is 'Name'.
        in: query
        name: sortField
        schema:
          type: string
      - description: The order that the returned collection is sorted. The default
          is 'Ascending'.
        in: query
        name: sortOrder
        schema:
          type: string
      - description: The starting index (zero based) of the items to be returned.
          The default is 0.
        in: query
        name: startIndex
        schema:
          type: integer
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[Attribute]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[Attribute]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[Attribute]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[Attribute]"
          description: a list of matching attributes.
      summary: Retrieves a list of element attributes matching the specified filters
        from the specified asset database.
      tags:
      - AssetDatabase
      x-openapi-router-controller: openapi_server.controllers.asset_database_controller
  /assetdatabases/{webId}/elementcategories:
    get:
      deprecated: false
      operationId: asset_database_get_element_categories
      parameters:
      - description: The ID of the database.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[ElementCategory]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[ElementCategory]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[ElementCategory]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[ElementCategory]"
          description: The element categories that exist in the database.
      summary: Retrieve element categories for a given Asset Database.
      tags:
      - AssetDatabase
      x-openapi-router-controller: openapi_server.controllers.asset_database_controller
    post:
      deprecated: false
      operationId: asset_database_create_element_category
      parameters:
      - description: The ID of the database in which to create the element category.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ElementCategory'
          text/json:
            schema:
              $ref: '#/components/schemas/ElementCategory'
        description: The new element category definition.
        required: true
        x-body-name: elementCategory
      responses:
        "201":
          content: {}
          description: The element category was created. The response's Location header
            is a link to the element category.
      summary: Create an element category at the Asset Database root.
      tags:
      - AssetDatabase
      x-codegen-request-body-name: elementCategory
      x-openapi-router-controller: openapi_server.controllers.asset_database_controller
  /assetdatabases/{webId}/elements:
    get:
      deprecated: false
      description: "Users can search for the elements based on specific search parameters.\
        \ If no parameters are specified in the search, the default values for each\
        \ parameter will be used and will return the elements that match the default\
        \ search."
      operationId: asset_database_get_elements
      parameters:
      - description: The ID of the database to use as the root of the search.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "Associated values to return in the response, separated by semicolons\
          \ (;). This call supports Paths to return all paths to the element. If this\
          \ parameter is not specified, paths are not returned."
        in: query
        name: associations
        schema:
          type: string
      - description: Specify that returned elements must have this category. The default
          is no category filter.
        in: query
        name: categoryName
        schema:
          type: string
      - description: Specify that returned elements must have this description. The
          default is no description filter.
        in: query
        name: descriptionFilter
        schema:
          type: string
      - description: Specify that returned elements must have this type. The default
          type is 'Any'.
        in: query
        name: elementType
        schema:
          type: string
      - description: The maximum number of objects to be returned per call (page size).
          The default is 1000.
        in: query
        name: maxCount
        schema:
          type: integer
      - description: The name query string used for finding objects. The default is
          no filter.
        in: query
        name: nameFilter
        schema:
          type: string
      - description: Specifies if the search should include objects nested further
          than the immediate children of the searchRoot. The default is 'false'.
        in: query
        name: searchFullHierarchy
        schema:
          type: boolean
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: The field or property of the object used to sort the returned
          collection. The default is 'Name'.
        in: query
        name: sortField
        schema:
          type: string
      - description: The order that the returned collection is sorted. The default
          is 'Ascending'.
        in: query
        name: sortOrder
        schema:
          type: string
      - description: The starting index (zero based) of the items to be returned.
          The default is 0.
        in: query
        name: startIndex
        schema:
          type: integer
      - description: Specify that returned elements must have this template or a template
          derived from this template. The default is no template filter.
        in: query
        name: templateName
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[Element]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[Element]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[Element]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[Element]"
          description: A list of elements matching the specified conditions.
      summary: "Retrieve elements based on the specified conditions. By default, this\
        \ method selects immediate children of the specified asset database."
      tags:
      - AssetDatabase
      x-openapi-router-controller: openapi_server.controllers.asset_database_controller
    post:
      deprecated: false
      operationId: asset_database_create_element
      parameters:
      - description: The ID of the asset database on which to create the element.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Element'
          text/json:
            schema:
              $ref: '#/components/schemas/Element'
        description: The new element definition.
        required: true
        x-body-name: element
      responses:
        "201":
          content: {}
          description: The element was created. The response's Location header is
            a link to the element.
      summary: Create a child element.
      tags:
      - AssetDatabase
      x-codegen-request-body-name: element
      x-openapi-router-controller: openapi_server.controllers.asset_database_controller
  /assetdatabases/{webId}/elementtemplates:
    get:
      deprecated: false
      description: "Users can search for the element and event frame template based\
        \ on specific search parameters. If no parameters are specified in the search,\
        \ the default values for each parameter will be used and will return the templates\
        \ that match the default search."
      operationId: asset_database_get_element_templates
      parameters:
      - description: The ID of the database to search.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: Specifies which of the object's properties are searched. Multiple
          search fields may be specified with multiple instances of the parameter.
          The default is 'Name'.
        explode: true
        in: query
        name: field
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: The maximum number of objects to be returned per call (page size).
          The default is 1000.
        in: query
        name: maxCount
        schema:
          type: integer
      - description: The query string used for finding objects. The default is no
          query string.
        in: query
        name: query
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: The field or property of the object used to sort the returned
          collection. The default is 'Name'.
        in: query
        name: sortField
        schema:
          type: string
      - description: The order that the returned collection is sorted. The default
          is 'Ascending'.
        in: query
        name: sortOrder
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[ElementTemplate]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[ElementTemplate]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[ElementTemplate]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[ElementTemplate]"
          description: A list of element templates matching the specified condition.
      summary: "Retrieve element templates based on the specified criteria. Only templates\
        \ of instance type \"Element\" and \"EventFrame\" are returned. By default,\
        \ all element and event frame templates in the specified Asset Database are\
        \ returned."
      tags:
      - AssetDatabase
      x-openapi-router-controller: openapi_server.controllers.asset_database_controller
    post:
      deprecated: false
      description: Elements and event frames that are based on an element template
        will inherit characteristics defined in the template.
      operationId: asset_database_create_element_template
      parameters:
      - description: The ID of the database in which to create the element template.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ElementTemplate'
          text/json:
            schema:
              $ref: '#/components/schemas/ElementTemplate'
        description: The new element template definition.
        required: true
        x-body-name: template
      responses:
        "201":
          content: {}
          description: The element template was created. The response's Location header
            is a link to the created template.
      summary: Create a template at the Asset Database root. Specify InstanceType
        of "Element" or "EventFrame" to create element or event frame template respectively.
        Only these two types of templates can be created.
      tags:
      - AssetDatabase
      x-codegen-request-body-name: template
      x-openapi-router-controller: openapi_server.controllers.asset_database_controller
  /assetdatabases/{webId}/enumerationsets:
    get:
      deprecated: false
      operationId: asset_database_get_enumeration_sets
      parameters:
      - description: The ID of the database.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[EnumerationSet]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[EnumerationSet]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[EnumerationSet]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[EnumerationSet]"
          description: The specified enumeration sets.
      summary: Retrieve enumeration sets for given asset database.
      tags:
      - AssetDatabase
      x-openapi-router-controller: openapi_server.controllers.asset_database_controller
    post:
      deprecated: false
      operationId: asset_database_create_enumeration_set
      parameters:
      - description: The ID of the database in which to create the enumeration set.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnumerationSet'
          text/json:
            schema:
              $ref: '#/components/schemas/EnumerationSet'
        description: The new enumeration set definition.
        required: true
        x-body-name: enumerationSet
      responses:
        "201":
          content: {}
          description: The enumeration set was created. The response's Location header
            is a link to the created enumeration set.
      summary: Create an enumeration set at the Asset Database.
      tags:
      - AssetDatabase
      x-codegen-request-body-name: enumerationSet
      x-openapi-router-controller: openapi_server.controllers.asset_database_controller
  /assetdatabases/{webId}/eventframeattributes:
    get:
      deprecated: false
      operationId: asset_database_find_event_frame_attributes
      parameters:
      - description: The ID of the asset database to use as the root of the search.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "Associated values to return in the response, separated by semicolons\
          \ (;). This call supports DataReference to return attributes with data references.\
          \ If this parameter is not specified, DataReference values are not returned."
        in: query
        name: associations
        schema:
          type: string
      - description: Specify that returned attributes must have this category. The
          default is no filter.
        in: query
        name: attributeCategory
        schema:
          type: string
      - description: "The attribute description filter string used for finding objects.\
          \ Only the first 440 characters of the description will be searched. For\
          \ Asset Servers older than 2.7, a 400 status code (Bad Request) will be\
          \ returned if this parameter is specified. The default is no filter."
        in: query
        name: attributeDescriptionFilter
        schema:
          type: string
      - description: The attribute name filter string used for finding objects. The
          default is no filter.
        in: query
        name: attributeNameFilter
        schema:
          type: string
      - description: Specify that returned attributes' value type must be this value
          type. The default is no filter.
        in: query
        name: attributeType
        schema:
          type: string
      - description: A string representing the latest ending time for the event frames
          to be matched. The endTime must be greater than or equal to the startTime.
          The default is '*'.
        in: query
        name: endTime
        schema:
          type: string
      - description: Specify that the owner of the returned attributes must have this
          category. The default is no filter.
        in: query
        name: eventFrameCategory
        schema:
          type: string
      - description: "The event frame description filter string used for finding objects.\
          \ Only the first 440 characters of the description will be searched. For\
          \ Asset Servers older than 2.7, a 400 status code (Bad Request) will be\
          \ returned if this parameter is specified. The default is no filter."
        in: query
        name: eventFrameDescriptionFilter
        schema:
          type: string
      - description: The event frame name filter string used for finding objects.
          The default is no filter.
        in: query
        name: eventFrameNameFilter
        schema:
          type: string
      - description: Specify that the owner of the returned attributes must have this
          template or a template derived from this template. The default is no filter.
        in: query
        name: eventFrameTemplate
        schema:
          type: string
      - description: The maximum number of objects to be returned (the page size).
          The default is 1000.
        in: query
        name: maxCount
        schema:
          type: integer
      - description: The name query string which must match the name of a referenced
          element. The default is no filter.
        in: query
        name: referencedElementNameFilter
        schema:
          type: string
      - description: Specifies if the search should include objects nested further
          than immediate children of the given resource. The default is 'false'.
        in: query
        name: searchFullHierarchy
        schema:
          type: boolean
      - description: Determines how the startTime and endTime parameters are treated
          when searching for event frames. The default is 'Overlapped'.
        in: query
        name: searchMode
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: The field or property of the object used to sort the returned
          collection. The default is 'Name'.
        in: query
        name: sortField
        schema:
          type: string
      - description: The order that the returned collection is sorted. The default
          is 'Ascending'.
        in: query
        name: sortOrder
        schema:
          type: string
      - description: The starting index (zero based) of the items to be returned.
          The default is 0.
        in: query
        name: startIndex
        schema:
          type: integer
      - description: A string representing the earliest starting time for the event
          frames to be matched. startTime must be less than or equal to the endTime.
          The default is '*-8h'.
        in: query
        name: startTime
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[Attribute]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[Attribute]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[Attribute]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[Attribute]"
          description: a list of matching attributes.
      summary: Retrieves a list of event frame attributes matching the specified filters
        from the specified asset database.
      tags:
      - AssetDatabase
      x-openapi-router-controller: openapi_server.controllers.asset_database_controller
  /assetdatabases/{webId}/eventframes:
    get:
      deprecated: false
      operationId: asset_database_get_event_frames
      parameters:
      - description: The ID of the asset database to use as the root of the search.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: Specify the returned event frames' canBeAcknowledged property.
          The default is no canBeAcknowledged filter.
        in: query
        name: canBeAcknowledged
        schema:
          type: boolean
      - description: Specify that returned event frames must have this category. The
          default is no category filter.
        in: query
        name: categoryName
        schema:
          type: string
      - description: The ending time for the search. The endTime must be greater than
          or equal to the startTime. The searchMode parameter will control whether
          the comparison will be performed against the event frame's startTime or
          endTime. The default is '*' if searchMode is not one of the 'Backward*'
          or 'Forward*' values.
        in: query
        name: endTime
        schema:
          type: string
      - description: Specify the returned event frames' isAcknowledged property. The
          default no isAcknowledged filter.
        in: query
        name: isAcknowledged
        schema:
          type: boolean
      - description: The maximum number of objects to be returned per call (page size).
          The default is 1000.
        in: query
        name: maxCount
        schema:
          type: integer
      - description: The name query string used for finding event frames. The default
          is no filter.
        in: query
        name: nameFilter
        schema:
          type: string
      - description: The name query string which must match the name of a referenced
          element. The default is no filter.
        in: query
        name: referencedElementNameFilter
        schema:
          type: string
      - description: Specify that returned event frames must have an element in the
          event frame's referenced elements collection that derives from the template.
          Specify this parameter by name.
        in: query
        name: referencedElementTemplateName
        schema:
          type: string
      - description: Specifies whether the search should include objects nested further
          than the immediate children of the search root. The default is 'false'.
        in: query
        name: searchFullHierarchy
        schema:
          type: boolean
      - description: "Determines how the startTime and endTime parameters are treated\
          \ when searching for event frame objects to be included in the returned\
          \ collection. If this parameter is one of the 'Backward*' or 'Forward*'\
          \ values, none of endTime, sortField, or sortOrder may be specified. The\
          \ default is 'Overlapped'."
        in: query
        name: searchMode
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Specify that returned event frames must have this severity. Multiple
          severity values may be specified with multiple instances of the parameter.
          The default is no severity filter.
        explode: true
        in: query
        name: severity
        schema:
          items:
            type: string
          type: array
        style: form
      - description: The field or property of the object used to sort the returned
          collection. The default is 'Name' if searchMode is not one of the 'Backward*'
          or 'Forward*' values.
        in: query
        name: sortField
        schema:
          type: string
      - description: The order that the returned collection is sorted. The default
          is 'Ascending' if searchMode is not one of the 'Backward*' or 'Forward*'
          values.
        in: query
        name: sortOrder
        schema:
          type: string
      - description: The starting index (zero based) of the items to be returned.
          The default is 0.
        in: query
        name: startIndex
        schema:
          type: integer
      - description: The starting time for the search. startTime must be less than
          or equal to the endTime. The searchMode parameter will control whether the
          comparison will be performed against the event frame's startTime or endTime.
          The default is '*-8h'.
        in: query
        name: startTime
        schema:
          type: string
      - description: Specify that returned event frames must have this template or
          a template derived from this template. The default is no template filter.
          Specify this parameter by name.
        in: query
        name: templateName
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[EventFrame]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[EventFrame]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[EventFrame]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[EventFrame]"
          description: A list of event frames matching the specified conditions.
      summary: "Retrieve event frames based on the specified conditions. By default,\
        \ returns all children of the specified root resource that have been active\
        \ in the past 8 hours."
      tags:
      - AssetDatabase
      x-openapi-router-controller: openapi_server.controllers.asset_database_controller
    post:
      deprecated: false
      operationId: asset_database_create_event_frame
      parameters:
      - description: The ID of the database on which to create the event frame.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventFrame'
          text/json:
            schema:
              $ref: '#/components/schemas/EventFrame'
        description: The new event frame definition.
        required: true
        x-body-name: eventFrame
      responses:
        "201":
          content: {}
          description: The event frame was created. The response's Location header
            is a link to the event frame.
      summary: Create an event frame.
      tags:
      - AssetDatabase
      x-codegen-request-body-name: eventFrame
      x-openapi-router-controller: openapi_server.controllers.asset_database_controller
  /assetdatabases/{webId}/export:
    get:
      deprecated: false
      operationId: asset_database_export
      parameters:
      - description: The ID of the database.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "The latest ending time for AFEventFrame, AFTransfer, and AFCase\
          \ objects that may be part of the export. The default is '*'."
        in: query
        name: endTime
        schema:
          type: string
      - description: Indicates the type of export to perform. The default is 'StrongReferences'.
          Multiple export modes may be specified by using multiple instances of exportMode.
        explode: true
        in: query
        name: exportMode
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "The earliest starting time for AFEventFrame, AFTransfer, and\
          \ AFCase objects that may be part of the export. The default is '*-30d'."
        in: query
        name: startTime
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Database exported. The response body contains the serialized
            database.
      summary: Export the asset database.
      tags:
      - AssetDatabase
      x-openapi-router-controller: openapi_server.controllers.asset_database_controller
  /assetdatabases/{webId}/import:
    post:
      deprecated: false
      operationId: asset_database_import
      parameters:
      - description: The ID of the asset database.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: Indicates the type of import to perform. The default is 'AllowCreate
          | AllowUpdate | AutoCheckIn'. Multiple import modes may be specified by
          using multiple instances of importMode.
        explode: true
        in: query
        name: importMode
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content: {}
          description: Database imported.
      summary: Import an asset database.
      tags:
      - AssetDatabase
      x-openapi-router-controller: openapi_server.controllers.asset_database_controller
  /assetdatabases/{webId}/referencedelements:
    delete:
      deprecated: false
      operationId: asset_database_remove_referenced_element
      parameters:
      - description: The ID of the database which the referenced element will be removed
          from.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: The ID of the referenced element. Multiple referenced elements
          may be specified with multiple instances of the parameter.
        explode: true
        in: query
        name: referencedElementWebId
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "204":
          content: {}
          description: The referenced element was successfully removed.
      summary: Remove a reference to an existing element from the specified database.
      tags:
      - AssetDatabase
      x-openapi-router-controller: openapi_server.controllers.asset_database_controller
    get:
      deprecated: false
      description: "Users can search for the referenced elements based on specific\
        \ search parameters. If no parameters are specified in the search, the default\
        \ values for each parameter will be used and will return the elements that\
        \ match the default search."
      operationId: asset_database_get_referenced_elements
      parameters:
      - description: The ID of the resource to use as the root of the search.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "Associated values to return in the response, separated by semicolons\
          \ (;). This call supports Paths to return all paths to the element. If this\
          \ parameter is not specified, paths are not returned."
        in: query
        name: associations
        schema:
          type: string
      - description: Specify that returned elements must have this category. The default
          is no category filter.
        in: query
        name: categoryName
        schema:
          type: string
      - description: Specify that returned elements must have this description. The
          default is no description filter.
        in: query
        name: descriptionFilter
        schema:
          type: string
      - description: Specify that returned elements must have this type. The default
          type is 'Any'.
        in: query
        name: elementType
        schema:
          type: string
      - description: The maximum number of objects to be returned per call (page size).
          The default is 1000.
        in: query
        name: maxCount
        schema:
          type: integer
      - description: The name query string used for finding objects. The default is
          no filter.
        in: query
        name: nameFilter
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: The field or property of the object used to sort the returned
          collection. The default is 'Name'.
        in: query
        name: sortField
        schema:
          type: string
      - description: The order that the returned collection is sorted. The default
          is 'Ascending'.
        in: query
        name: sortOrder
        schema:
          type: string
      - description: The starting index (zero based) of the items to be returned.
          The default is 0.
        in: query
        name: startIndex
        schema:
          type: integer
      - description: Specify that returned elements must have this template or a template
          derived from this template. The default is no template filter.
        in: query
        name: templateName
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[Element]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[Element]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[Element]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[Element]"
          description: A list of referenced elements matching the specified conditions.
      summary: "Retrieve referenced elements based on the specified conditions. By\
        \ default, this method selects all referenced elements at the root level of\
        \ the asset database."
      tags:
      - AssetDatabase
      x-openapi-router-controller: openapi_server.controllers.asset_database_controller
    post:
      deprecated: false
      operationId: asset_database_add_referenced_element
      parameters:
      - description: The ID of the database which the referenced element will be added
          to.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: The ID of the referenced element. Multiple referenced elements
          may be specified with multiple instances of the parameter.
        explode: true
        in: query
        name: referencedElementWebId
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: The name of the reference type between the parent and the referenced
          element. This must be a "strong" reference type. The default is "parent-child".
        in: query
        name: referenceType
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The referenced element was successfully added.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: The referenced element already exists in the collection.
      summary: Add a reference to an existing element to the specified database.
      tags:
      - AssetDatabase
      x-openapi-router-controller: openapi_server.controllers.asset_database_controller
  /assetdatabases/{webId}/security:
    get:
      deprecated: false
      operationId: asset_database_get_security
      parameters:
      - description: The ID of the asset database for the security to be checked.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "The security item of the desired security information to be\
          \ returned. Multiple security items may be specified with multiple instances\
          \ of the parameter. If the parameter is not specified, only 'Default' security\
          \ item of the security information will be returned."
        explode: true
        in: query
        name: securityItem
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "The user identity for the security information to be checked.\
          \ Multiple security identities may be specified with multiple instances\
          \ of the parameter. If the parameter is not specified, only the current\
          \ user's security rights will be returned."
        explode: true
        in: query
        name: userIdentity
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Indicates if the security cache should be refreshed before getting
          security information. The default is 'false'.
        in: query
        name: forceRefresh
        schema:
          type: boolean
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[SecurityRights]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[SecurityRights]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[SecurityRights]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[SecurityRights]"
          description: Security rights.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Unsupported security item; an invalid or local account is specified
            as the user identity.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Access denied for the specified user identity.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Unsupported when using Anonymous authentication method.
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Failed to retrieve the specified user identity.
      summary: Get the security information of the specified security item associated
        with the asset database for a specified user.
      tags:
      - AssetDatabase
      x-openapi-router-controller: openapi_server.controllers.asset_database_controller
  /assetdatabases/{webId}/securityentries:
    get:
      deprecated: false
      operationId: asset_database_get_security_entries
      parameters:
      - description: The ID of the asset database.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: The name query string used for filtering security entries. The
          default is no filter.
        in: query
        name: nameFilter
        schema:
          type: string
      - description: "The security item of the desired security entries information\
          \ to be returned. If the parameter is not specified, security entries of\
          \ the 'Default' security item will be returned."
        in: query
        name: securityItem
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[SecurityEntry]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[SecurityEntry]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[SecurityEntry]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[SecurityEntry]"
          description: A list of security entries matching the specified condition.
      summary: "Retrieve the security entries of the specified security item associated\
        \ with the asset database based on the specified criteria. By default, all\
        \ security entries for this asset database are returned."
      tags:
      - AssetDatabase
      x-openapi-router-controller: openapi_server.controllers.asset_database_controller
    post:
      deprecated: false
      operationId: asset_database_create_security_entry
      parameters:
      - description: The ID of the asset database where the security entry will be
          created.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "If false, the new access permissions are only applied to the\
          \ associated object. If true, the access permissions of children with any\
          \ parent-child reference types will change when the permissions on the primary\
          \ parent change."
        in: query
        name: applyToChildren
        schema:
          type: boolean
      - description: "The security item of the desired security entries to be created.\
          \ If the parameter is not specified, security entries of the 'Default' security\
          \ item will be created."
        in: query
        name: securityItem
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityEntry'
          text/json:
            schema:
              $ref: '#/components/schemas/SecurityEntry'
        description: The new security entry definition. The full list of allow and
          deny rights must be supplied.
        required: true
        x-body-name: securityEntry
      responses:
        "201":
          content: {}
          description: The security entry was created. The response's Location header
            is a link to the security entry.
      summary: Create a security entry owned by the asset database.
      tags:
      - AssetDatabase
      x-codegen-request-body-name: securityEntry
      x-openapi-router-controller: openapi_server.controllers.asset_database_controller
  /assetdatabases/{webId}/securityentries/{name}:
    delete:
      deprecated: false
      operationId: asset_database_delete_security_entry
      parameters:
      - description: "The name of the security entry. For every backslash character\
          \ (\\) in the security entry name, replace with asterisk (*). As an example,\
          \ use domain*username instead of domain\\username."
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: The ID of the asset database where the security entry will be
          deleted.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "If false, the new access permissions are only applied to the\
          \ associated object. If true, the access permissions of children with any\
          \ parent-child reference types will change when the permissions on the primary\
          \ parent change."
        in: query
        name: applyToChildren
        schema:
          type: boolean
      - description: "The security item of the desired security entries to be deleted.\
          \ If the parameter is not specified, security entries of the 'Default' security\
          \ item will be deleted."
        in: query
        name: securityItem
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The security entry was deleted.
      summary: Delete a security entry owned by the asset database.
      tags:
      - AssetDatabase
      x-openapi-router-controller: openapi_server.controllers.asset_database_controller
    get:
      deprecated: false
      operationId: asset_database_get_security_entry_by_name
      parameters:
      - description: "The name of the security entry. For every backslash character\
          \ (\\) in the security entry name, replace with asterisk (*). As an example,\
          \ use domain*username instead of domain\\username."
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: The ID of the asset database.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "The security item of the desired security entries information\
          \ to be returned. If the parameter is not specified, security entries of\
          \ the 'Default' security item will be returned."
        in: query
        name: securityItem
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityEntry'
            text/json:
              schema:
                $ref: '#/components/schemas/SecurityEntry'
            text/html:
              schema:
                $ref: '#/components/schemas/SecurityEntry'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/SecurityEntry'
          description: The security entry matching the specified condition.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: The security entry with the specified name is not found.
      summary: Retrieve the security entry of the specified security item associated
        with the asset database with the specified name.
      tags:
      - AssetDatabase
      x-openapi-router-controller: openapi_server.controllers.asset_database_controller
    put:
      deprecated: false
      operationId: asset_database_update_security_entry
      parameters:
      - description: The name of the security entry.
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: The ID of the asset database where the security entry will be
          updated.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "If false, the new access permissions are only applied to the\
          \ associated object. If true, the access permissions of children with any\
          \ parent-child reference types will change when the permissions on the primary\
          \ parent change."
        in: query
        name: applyToChildren
        schema:
          type: boolean
      - description: "The security item of the desired security entries to be updated.\
          \ If the parameter is not specified, security entries of the 'Default' security\
          \ item will be updated."
        in: query
        name: securityItem
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityEntry'
          text/json:
            schema:
              $ref: '#/components/schemas/SecurityEntry'
        description: The new security entry definition. The full list of allow and
          deny rights must be supplied or they will be removed.
        required: true
        x-body-name: securityEntry
      responses:
        "204":
          content: {}
          description: The security entry was updated.
      summary: Update a security entry owned by the asset database.
      tags:
      - AssetDatabase
      x-codegen-request-body-name: securityEntry
      x-openapi-router-controller: openapi_server.controllers.asset_database_controller
  /assetdatabases/{webId}/tablecategories:
    get:
      deprecated: false
      operationId: asset_database_get_table_categories
      parameters:
      - description: The ID of the database.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[TableCategory]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[TableCategory]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[TableCategory]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[TableCategory]"
          description: The table categories on the specified database.
      summary: Retrieve table categories for a given Asset Database.
      tags:
      - AssetDatabase
      x-openapi-router-controller: openapi_server.controllers.asset_database_controller
    post:
      deprecated: false
      operationId: asset_database_create_table_category
      parameters:
      - description: The ID of the database in which to create the table category.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TableCategory'
          text/json:
            schema:
              $ref: '#/components/schemas/TableCategory'
        description: The new table category definition.
        required: true
        x-body-name: tableCategory
      responses:
        "201":
          content: {}
          description: The table category was created. The response's Location header
            is a link to the table category.
      summary: Create a table category on the Asset Database.
      tags:
      - AssetDatabase
      x-codegen-request-body-name: tableCategory
      x-openapi-router-controller: openapi_server.controllers.asset_database_controller
  /assetdatabases/{webId}/tables:
    get:
      deprecated: false
      operationId: asset_database_get_tables
      parameters:
      - description: The ID of the database.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[Table]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[Table]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[Table]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[Table]"
          description: The tables on the specified database.
      summary: Retrieve tables for given Asset Database.
      tags:
      - AssetDatabase
      x-openapi-router-controller: openapi_server.controllers.asset_database_controller
    post:
      deprecated: false
      operationId: asset_database_create_table
      parameters:
      - description: The ID of the database in which to create the table.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Table'
          text/json:
            schema:
              $ref: '#/components/schemas/Table'
        description: The new table definition.
        required: true
        x-body-name: table
      responses:
        "201":
          content: {}
          description: The table was created. The response's Location header is a
            link to the created table.
      summary: Create a table on the Asset Database.
      tags:
      - AssetDatabase
      x-codegen-request-body-name: table
      x-openapi-router-controller: openapi_server.controllers.asset_database_controller
  /assetservers:
    get:
      deprecated: false
      operationId: asset_server_list
      parameters:
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[AssetServer]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[AssetServer]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[AssetServer]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[AssetServer]"
          description: A list of servers.
      summary: Retrieve a list of all Asset Servers known to this service.
      tags:
      - AssetServer
      x-openapi-router-controller: openapi_server.controllers.asset_server_controller
  /assetservers#name:
    get:
      deprecated: false
      description: This method returns an asset server based on the name associated
        with it. Users should primarily search with the WebID when available.
      operationId: asset_server_get_by_name
      parameters:
      - description: The name of the server.
        in: query
        name: name
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetServer'
            text/json:
              schema:
                $ref: '#/components/schemas/AssetServer'
            text/html:
              schema:
                $ref: '#/components/schemas/AssetServer'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/AssetServer'
          description: The requested server.
      summary: Retrieve an Asset Server by name.
      tags:
      - AssetServer
      x-openapi-router-controller: openapi_server.controllers.asset_server_controller
  /assetservers#path:
    get:
      deprecated: false
      description: "This method returns an asset server based on the hierarchical\
        \ path associated with it, and should be used when a path has been received\
        \ from a separate part of the PI System for use in the PI Web API. Users should\
        \ primarily search with the WebID when available."
      operationId: asset_server_get_by_path
      parameters:
      - description: The path to the server.
        in: query
        name: path
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetServer'
            text/json:
              schema:
                $ref: '#/components/schemas/AssetServer'
            text/html:
              schema:
                $ref: '#/components/schemas/AssetServer'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/AssetServer'
          description: The requested server.
      summary: Retrieve an Asset Server by path.
      tags:
      - AssetServer
      x-openapi-router-controller: openapi_server.controllers.asset_server_controller
  /assetservers/{webId}:
    get:
      deprecated: false
      operationId: asset_server_get
      parameters:
      - description: The ID of the server.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetServer'
            text/json:
              schema:
                $ref: '#/components/schemas/AssetServer'
            text/html:
              schema:
                $ref: '#/components/schemas/AssetServer'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/AssetServer'
          description: The requested server.
      summary: Retrieve an Asset Server.
      tags:
      - AssetServer
      x-openapi-router-controller: openapi_server.controllers.asset_server_controller
  /assetservers/{webId}/analysisruleplugins:
    get:
      deprecated: false
      operationId: asset_server_get_analysis_rule_plug_ins
      parameters:
      - description: "The ID of the asset server, where the Analysis Rule Plug-in's\
          \ are installed."
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[AnalysisRulePlugIn]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[AnalysisRulePlugIn]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[AnalysisRulePlugIn]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[AnalysisRulePlugIn]"
          description: A list of Analysis Rule Plug-in's.
      summary: Retrieve a list of all Analysis Rule Plug-in's.
      tags:
      - AssetServer
      x-openapi-router-controller: openapi_server.controllers.asset_server_controller
  /assetservers/{webId}/assetdatabases:
    get:
      deprecated: false
      operationId: asset_server_get_databases
      parameters:
      - description: The ID of the server.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[AssetDatabase]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[AssetDatabase]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[AssetDatabase]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[AssetDatabase]"
          description: A list of databases.
      summary: Retrieve a list of all Asset Databases on the specified Asset Server.
      tags:
      - AssetServer
      x-openapi-router-controller: openapi_server.controllers.asset_server_controller
    post:
      deprecated: false
      operationId: asset_server_create_asset_database
      parameters:
      - description: The ID of the asset server on which to create the database.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetDatabase'
          text/json:
            schema:
              $ref: '#/components/schemas/AssetDatabase'
        description: The new database definition.
        required: true
        x-body-name: database
      responses:
        "201":
          content: {}
          description: The database was created. The response's Location header is
            a link to the database.
      summary: Create an asset database.
      tags:
      - AssetServer
      x-codegen-request-body-name: database
      x-openapi-router-controller: openapi_server.controllers.asset_server_controller
  /assetservers/{webId}/notificationcontacttemplates:
    get:
      deprecated: false
      operationId: asset_server_get_notification_contact_templates
      parameters:
      - description: The ID of the server.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[NotificationContactTemplate]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[NotificationContactTemplate]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[NotificationContactTemplate]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[NotificationContactTemplate]"
          description: A list of notification contact templates.
      summary: Retrieve a list of all notification contact templates on the specified
        Asset Server.
      tags:
      - AssetServer
      x-openapi-router-controller: openapi_server.controllers.asset_server_controller
    post:
      deprecated: false
      operationId: asset_server_create_notification_contact_template
      parameters:
      - description: The ID of the asset server on which to create the notification
          contact template.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationContactTemplate'
          text/json:
            schema:
              $ref: '#/components/schemas/NotificationContactTemplate'
        description: The new notification contact template definition.
        required: true
        x-body-name: notificationContactTemplate
      responses:
        "201":
          content: {}
          description: The notification contact template was created. The response's
            Location header is a link to the notification contact template.
      summary: Create a notification contact template.
      tags:
      - AssetServer
      x-codegen-request-body-name: notificationContactTemplate
      x-openapi-router-controller: openapi_server.controllers.asset_server_controller
  /assetservers/{webId}/notificationplugins:
    get:
      deprecated: false
      operationId: asset_server_get_notification_plug_ins
      parameters:
      - description: The ID of the server.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[NotificationPlugIn]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[NotificationPlugIn]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[NotificationPlugIn]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[NotificationPlugIn]"
          description: A list of notification delivery channel plugins.
      summary: Retrieve a list of all notification plugins on the specified Asset
        Server.
      tags:
      - AssetServer
      x-openapi-router-controller: openapi_server.controllers.asset_server_controller
  /assetservers/{webId}/security:
    get:
      deprecated: false
      operationId: asset_server_get_security
      parameters:
      - description: The ID of the asset server for the security to be checked.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "The security item of the desired security information to be\
          \ returned. Multiple security items may be specified with multiple instances\
          \ of the parameter. If the parameter is not specified, only 'Default' security\
          \ item of the security information will be returned."
        explode: true
        in: query
        name: securityItem
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "The user identity for the security information to be checked.\
          \ Multiple security identities may be specified with multiple instances\
          \ of the parameter. If the parameter is not specified, only the current\
          \ user's security rights will be returned."
        explode: true
        in: query
        name: userIdentity
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Indicates if the security cache should be refreshed before getting
          security information. The default is 'false'.
        in: query
        name: forceRefresh
        schema:
          type: boolean
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[SecurityRights]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[SecurityRights]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[SecurityRights]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[SecurityRights]"
          description: Security rights.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Unsupported security item; an invalid or local account is specified
            as the user identity.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Access denied for the specified user identity.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Unsupported when using Anonymous authentication method.
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Failed to retrieve the specified user identity.
      summary: Get the security information of the specified security item associated
        with the asset server for a specified user.
      tags:
      - AssetServer
      x-openapi-router-controller: openapi_server.controllers.asset_server_controller
  /assetservers/{webId}/securityentries:
    get:
      deprecated: false
      operationId: asset_server_get_security_entries
      parameters:
      - description: The ID of the asset server.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: The name query string used for filtering security entries. The
          default is no filter.
        in: query
        name: nameFilter
        schema:
          type: string
      - description: "The security item of the desired security entries information\
          \ to be returned. If the parameter is not specified, security entries of\
          \ the 'Default' security item will be returned."
        in: query
        name: securityItem
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[SecurityEntry]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[SecurityEntry]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[SecurityEntry]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[SecurityEntry]"
          description: A list of security entries matching the specified condition.
      summary: "Retrieve the security entries of the specified security item associated\
        \ with the asset server based on the specified criteria. By default, all security\
        \ entries for this asset server are returned."
      tags:
      - AssetServer
      x-openapi-router-controller: openapi_server.controllers.asset_server_controller
    post:
      deprecated: false
      operationId: asset_server_create_security_entry
      parameters:
      - description: The ID of the asset server where the security entry will be created.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "If false, the new access permissions are only applied to the\
          \ associated object. If true, the access permissions of children with any\
          \ parent-child reference types will change when the permissions on the primary\
          \ parent change."
        in: query
        name: applyToChildren
        schema:
          type: boolean
      - description: "The security item of the desired security entries to be created.\
          \ If the parameter is not specified, security entries of the 'Default' security\
          \ item will be created."
        in: query
        name: securityItem
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityEntry'
          text/json:
            schema:
              $ref: '#/components/schemas/SecurityEntry'
        description: The new security entry definition. The full list of allow and
          deny rights must be supplied.
        required: true
        x-body-name: securityEntry
      responses:
        "201":
          content: {}
          description: The security entry was created. The response's Location header
            is a link to the security entry.
      summary: Create a security entry owned by the asset server.
      tags:
      - AssetServer
      x-codegen-request-body-name: securityEntry
      x-openapi-router-controller: openapi_server.controllers.asset_server_controller
  /assetservers/{webId}/securityentries/{name}:
    delete:
      deprecated: false
      operationId: asset_server_delete_security_entry
      parameters:
      - description: "The name of the security entry. For every backslash character\
          \ (\\) in the security entry name, replace with asterisk (*). As an example,\
          \ use domain*username instead of domain\\username."
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: The ID of the asset server where the security entry will be deleted.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "If false, the new access permissions are only applied to the\
          \ associated object. If true, the access permissions of children with any\
          \ parent-child reference types will change when the permissions on the primary\
          \ parent change."
        in: query
        name: applyToChildren
        schema:
          type: boolean
      - description: "The security item of the desired security entries to be deleted.\
          \ If the parameter is not specified, security entries of the 'Default' security\
          \ item will be deleted."
        in: query
        name: securityItem
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The security entry was deleted.
      summary: Delete a security entry owned by the asset server.
      tags:
      - AssetServer
      x-openapi-router-controller: openapi_server.controllers.asset_server_controller
    get:
      deprecated: false
      operationId: asset_server_get_security_entry_by_name
      parameters:
      - description: "The name of the security entry. For every backslash character\
          \ (\\) in the security entry name, replace with asterisk (*). As an example,\
          \ use domain*username instead of domain\\username."
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: The ID of the asset server.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "The security item of the desired security entries information\
          \ to be returned. If the parameter is not specified, security entries of\
          \ the 'Default' security item will be returned."
        in: query
        name: securityItem
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityEntry'
            text/json:
              schema:
                $ref: '#/components/schemas/SecurityEntry'
            text/html:
              schema:
                $ref: '#/components/schemas/SecurityEntry'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/SecurityEntry'
          description: The security entry matching the specified condition.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: The security entry with the specified name is not found.
      summary: Retrieve the security entry of the specified security item associated
        with the asset server with the specified name.
      tags:
      - AssetServer
      x-openapi-router-controller: openapi_server.controllers.asset_server_controller
    put:
      deprecated: false
      operationId: asset_server_update_security_entry
      parameters:
      - description: The name of the security entry.
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: The ID of the asset server where the security entry will be updated.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "If false, the new access permissions are only applied to the\
          \ associated object. If true, the access permissions of children with any\
          \ parent-child reference types will change when the permissions on the primary\
          \ parent change."
        in: query
        name: applyToChildren
        schema:
          type: boolean
      - description: "The security item of the desired security entries to be updated.\
          \ If the parameter is not specified, security entries of the 'Default' security\
          \ item will be updated."
        in: query
        name: securityItem
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityEntry'
          text/json:
            schema:
              $ref: '#/components/schemas/SecurityEntry'
        description: The new security entry definition. The full list of allow and
          deny rights must be supplied or they will be removed.
        required: true
        x-body-name: securityEntry
      responses:
        "204":
          content: {}
          description: The security entry was updated.
      summary: Update a security entry owned by the asset server.
      tags:
      - AssetServer
      x-codegen-request-body-name: securityEntry
      x-openapi-router-controller: openapi_server.controllers.asset_server_controller
  /assetservers/{webId}/securityidentities:
    get:
      deprecated: false
      operationId: asset_server_get_security_identities
      parameters:
      - description: The ID of the asset server to search.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: Specifies which of the object's properties are searched. The
          default is 'Name'.
        in: query
        name: field
        schema:
          type: string
      - description: The maximum number of objects to be returned. The default is
          1000.
        in: query
        name: maxCount
        schema:
          type: integer
      - description: The query string used for finding objects. The default is no
          query string.
        in: query
        name: query
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: The field or property of the object used to sort the returned
          collection. The default is 'Name'.
        in: query
        name: sortField
        schema:
          type: string
      - description: The order that the returned collection is sorted. The default
          is 'Ascending'.
        in: query
        name: sortOrder
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[SecurityIdentity]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[SecurityIdentity]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[SecurityIdentity]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[SecurityIdentity]"
          description: A list of security identities matching the specified condition.
      summary: "Retrieve security identities based on the specified criteria. By default,\
        \ all security identities in the specified Asset Server are returned."
      tags:
      - AssetServer
      x-openapi-router-controller: openapi_server.controllers.asset_server_controller
    post:
      deprecated: false
      operationId: asset_server_create_security_identity
      parameters:
      - description: The ID of the asset server on which to create the security identity.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityIdentity'
          text/json:
            schema:
              $ref: '#/components/schemas/SecurityIdentity'
        description: The new security identity definition.
        required: true
        x-body-name: securityIdentity
      responses:
        "201":
          content: {}
          description: The security identity was created. The response's Location
            header is a link to the security identity.
      summary: Create a security identity.
      tags:
      - AssetServer
      x-codegen-request-body-name: securityIdentity
      x-openapi-router-controller: openapi_server.controllers.asset_server_controller
  /assetservers/{webId}/securityidentities#userIdentity:
    get:
      deprecated: false
      operationId: asset_server_get_security_identities_for_user
      parameters:
      - description: The ID of the server.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: The user identity to search for.
        in: query
        name: userIdentity
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[SecurityIdentity]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[SecurityIdentity]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[SecurityIdentity]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[SecurityIdentity]"
          description: A list of security identities for the specified user.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Unsupported security item; an invalid or local account is specified
            as the user identity.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Access denied for the specified user identity.
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Failed to retrieve the specified user identity.
      summary: Retrieve security identities for a specific user.
      tags:
      - AssetServer
      x-openapi-router-controller: openapi_server.controllers.asset_server_controller
  /assetservers/{webId}/securitymappings:
    get:
      deprecated: false
      operationId: asset_server_get_security_mappings
      parameters:
      - description: The ID of the asset server to search.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: Specifies which of the object's properties are searched. The
          default is 'Name'.
        in: query
        name: field
        schema:
          type: string
      - description: The maximum number of objects to be returned. The default is
          1000.
        in: query
        name: maxCount
        schema:
          type: integer
      - description: The query string used for finding objects. The default is no
          query string.
        in: query
        name: query
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: The field or property of the object used to sort the returned
          collection. The default is 'Name'.
        in: query
        name: sortField
        schema:
          type: string
      - description: The order that the returned collection is sorted. The default
          is 'Ascending'.
        in: query
        name: sortOrder
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[SecurityMapping]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[SecurityMapping]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[SecurityMapping]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[SecurityMapping]"
          description: A list of security mappings matching the specified condition.
      summary: "Retrieve security mappings based on the specified criteria. By default,\
        \ all security mappings in the specified Asset Server are returned."
      tags:
      - AssetServer
      x-openapi-router-controller: openapi_server.controllers.asset_server_controller
    post:
      deprecated: false
      operationId: asset_server_create_security_mapping
      parameters:
      - description: The ID of the asset server on which to create the security mapping.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityMapping'
          text/json:
            schema:
              $ref: '#/components/schemas/SecurityMapping'
        description: The new security mapping definition.
        required: true
        x-body-name: securityMapping
      responses:
        "201":
          content: {}
          description: The security mapping was created. The response's Location header
            is a link to the security mapping.
      summary: Create a security mapping.
      tags:
      - AssetServer
      x-codegen-request-body-name: securityMapping
      x-openapi-router-controller: openapi_server.controllers.asset_server_controller
  /assetservers/{webId}/timeruleplugins:
    get:
      deprecated: false
      operationId: asset_server_get_time_rule_plug_ins
      parameters:
      - description: "The ID of the asset server, where the Time Rule Plug-in's are\
          \ installed."
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[TimeRulePlugIn]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[TimeRulePlugIn]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[TimeRulePlugIn]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[TimeRulePlugIn]"
          description: A list of Time Rule Plug-in's.
      summary: Retrieve a list of all Time Rule Plug-in's.
      tags:
      - AssetServer
      x-openapi-router-controller: openapi_server.controllers.asset_server_controller
  /assetservers/{webId}/unitclasses:
    get:
      deprecated: false
      operationId: asset_server_get_unit_classes
      parameters:
      - description: The ID of the server.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[UnitClass]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[UnitClass]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[UnitClass]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[UnitClass]"
          description: A list of unit classes.
      summary: Retrieve a list of all unit classes on the specified Asset Server.
      tags:
      - AssetServer
      x-openapi-router-controller: openapi_server.controllers.asset_server_controller
    post:
      deprecated: false
      operationId: asset_server_create_unit_class
      parameters:
      - description: The ID of the server.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnitClass'
          text/json:
            schema:
              $ref: '#/components/schemas/UnitClass'
        description: The new unit class definition.
        required: true
        x-body-name: unitClass
      responses:
        "201":
          content: {}
          description: The unit class was created. The response's Location header
            is a link to the unit class.
      summary: Create a unit class in the specified Asset Server.
      tags:
      - AssetServer
      x-codegen-request-body-name: unitClass
      x-openapi-router-controller: openapi_server.controllers.asset_server_controller
  /attributecategories:
    get:
      deprecated: false
      operationId: attribute_category_get_by_path
      parameters:
      - description: The path to the target attribute category.
        in: query
        name: path
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttributeCategory'
            text/json:
              schema:
                $ref: '#/components/schemas/AttributeCategory'
            text/html:
              schema:
                $ref: '#/components/schemas/AttributeCategory'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/AttributeCategory'
          description: The specified attribute category.
      summary: Retrieve an attribute category by path.
      tags:
      - AttributeCategory
      x-openapi-router-controller: openapi_server.controllers.attribute_category_controller
  /attributecategories/{webId}:
    delete:
      deprecated: false
      operationId: attribute_category_delete
      parameters:
      - description: The ID of the attribute category to delete.
        in: path
        name: webId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The attribute category was deleted.
      summary: Delete an attribute category.
      tags:
      - AttributeCategory
      x-openapi-router-controller: openapi_server.controllers.attribute_category_controller
    get:
      deprecated: false
      operationId: attribute_category_get
      parameters:
      - description: The id of the attribute category.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttributeCategory'
            text/json:
              schema:
                $ref: '#/components/schemas/AttributeCategory'
            text/html:
              schema:
                $ref: '#/components/schemas/AttributeCategory'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/AttributeCategory'
          description: The specified attribute category.
      summary: Retrieve an attribute category.
      tags:
      - AttributeCategory
      x-openapi-router-controller: openapi_server.controllers.attribute_category_controller
    patch:
      deprecated: false
      operationId: attribute_category_update
      parameters:
      - description: The ID of the attribute category to update.
        in: path
        name: webId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttributeCategory'
          text/json:
            schema:
              $ref: '#/components/schemas/AttributeCategory'
        description: A partial attribute category containing the desired changes.
        required: true
        x-body-name: category
      responses:
        "204":
          content: {}
          description: The attribute category was updated.
      summary: Update an attribute category by replacing items in its definition.
      tags:
      - AttributeCategory
      x-codegen-request-body-name: category
      x-openapi-router-controller: openapi_server.controllers.attribute_category_controller
  /attributecategories/{webId}/security:
    get:
      deprecated: false
      operationId: attribute_category_get_security
      parameters:
      - description: The ID of the attribute category for the security to be checked.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "The user identity for the security information to be checked.\
          \ Multiple security identities may be specified with multiple instances\
          \ of the parameter. If the parameter is not specified, only the current\
          \ user's security rights will be returned."
        explode: true
        in: query
        name: userIdentity
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Indicates if the security cache should be refreshed before getting
          security information. The default is 'false'.
        in: query
        name: forceRefresh
        schema:
          type: boolean
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[SecurityRights]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[SecurityRights]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[SecurityRights]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[SecurityRights]"
          description: Security rights.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: An invalid or local account is specified as the user identity.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Access denied for the specified user identity.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Unsupported when using Anonymous authentication method.
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Failed to retrieve the specified user identity.
      summary: Get the security information of the specified security item associated
        with the attribute category for a specified user.
      tags:
      - AttributeCategory
      x-openapi-router-controller: openapi_server.controllers.attribute_category_controller
  /attributecategories/{webId}/securityentries:
    get:
      deprecated: false
      operationId: attribute_category_get_security_entries
      parameters:
      - description: The ID of the attribute category.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: The name query string used for filtering security entries. The
          default is no filter.
        in: query
        name: nameFilter
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[SecurityEntry]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[SecurityEntry]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[SecurityEntry]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[SecurityEntry]"
          description: A list of security entries matching the specified condition.
      summary: "Retrieve the security entries associated with the attribute category\
        \ based on the specified criteria. By default, all security entries for this\
        \ attribute category are returned."
      tags:
      - AttributeCategory
      x-openapi-router-controller: openapi_server.controllers.attribute_category_controller
    post:
      deprecated: false
      operationId: attribute_category_create_security_entry
      parameters:
      - description: The ID of the attribute category where the security entry will
          be created.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "If false, the new access permissions are only applied to the\
          \ associated object. If true, the access permissions of children with any\
          \ parent-child reference types will change when the permissions on the primary\
          \ parent change."
        in: query
        name: applyToChildren
        schema:
          type: boolean
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityEntry'
          text/json:
            schema:
              $ref: '#/components/schemas/SecurityEntry'
        description: The new security entry definition. The full list of allow and
          deny rights must be supplied.
        required: true
        x-body-name: securityEntry
      responses:
        "201":
          content: {}
          description: The security entry was created. The response's Location header
            is a link to the security entry.
      summary: Create a security entry owned by the attribute category.
      tags:
      - AttributeCategory
      x-codegen-request-body-name: securityEntry
      x-openapi-router-controller: openapi_server.controllers.attribute_category_controller
  /attributecategories/{webId}/securityentries/{name}:
    delete:
      deprecated: false
      operationId: attribute_category_delete_security_entry
      parameters:
      - description: "The name of the security entry. For every backslash character\
          \ (\\) in the security entry name, replace with asterisk (*). As an example,\
          \ use domain*username instead of domain\\username."
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: The ID of the attribute category where the security entry will
          be deleted.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "If false, the new access permissions are only applied to the\
          \ associated object. If true, the access permissions of children with any\
          \ parent-child reference types will change when the permissions on the primary\
          \ parent change."
        in: query
        name: applyToChildren
        schema:
          type: boolean
      responses:
        "204":
          content: {}
          description: The security entry was deleted.
      summary: Delete a security entry owned by the attribute category.
      tags:
      - AttributeCategory
      x-openapi-router-controller: openapi_server.controllers.attribute_category_controller
    get:
      deprecated: false
      operationId: attribute_category_get_security_entry_by_name
      parameters:
      - description: "The name of the security entry. For every backslash character\
          \ (\\) in the security entry name, replace with asterisk (*). As an example,\
          \ use domain*username instead of domain\\username."
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: The ID of the attribute category.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityEntry'
            text/json:
              schema:
                $ref: '#/components/schemas/SecurityEntry'
            text/html:
              schema:
                $ref: '#/components/schemas/SecurityEntry'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/SecurityEntry'
          description: The security entry matching the specified condition.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: The security entry with the specified name is not found.
      summary: Retrieve the security entry associated with the attribute category
        with the specified name.
      tags:
      - AttributeCategory
      x-openapi-router-controller: openapi_server.controllers.attribute_category_controller
    put:
      deprecated: false
      operationId: attribute_category_update_security_entry
      parameters:
      - description: The name of the security entry.
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: The ID of the attribute category where the security entry will
          be updated.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "If false, the new access permissions are only applied to the\
          \ associated object. If true, the access permissions of children with any\
          \ parent-child reference types will change when the permissions on the primary\
          \ parent change."
        in: query
        name: applyToChildren
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityEntry'
          text/json:
            schema:
              $ref: '#/components/schemas/SecurityEntry'
        description: The new security entry definition. The full list of allow and
          deny rights must be supplied or they will be removed.
        required: true
        x-body-name: securityEntry
      responses:
        "204":
          content: {}
          description: The security entry was updated.
      summary: Update a security entry owned by the attribute category.
      tags:
      - AttributeCategory
      x-codegen-request-body-name: securityEntry
      x-openapi-router-controller: openapi_server.controllers.attribute_category_controller
  /attributes:
    get:
      deprecated: false
      description: "This method returns an attribute based on the hierarchical path\
        \ associated with it, and should be used when a path has been received from\
        \ a separate part of the PI System for use in the PI Web API. Users should\
        \ primarily search with the WebID when available."
      operationId: attribute_get_by_path
      parameters:
      - description: The path to the attribute.
        in: query
        name: path
        required: true
        schema:
          type: string
      - description: "Associated values to return in the response, separated by semicolons\
          \ (;). This call supports DataReference to return attributes with data references.\
          \ If this parameter is not specified, DataReference values are not returned."
        in: query
        name: associations
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attribute'
            text/json:
              schema:
                $ref: '#/components/schemas/Attribute'
            text/html:
              schema:
                $ref: '#/components/schemas/Attribute'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Attribute'
          description: The requested attribute.
      summary: Retrieve an attribute by path.
      tags:
      - Attribute
      x-openapi-router-controller: openapi_server.controllers.attribute_controller
  /attributes/multiple:
    get:
      deprecated: false
      operationId: attribute_get_multiple
      parameters:
      - description: Specifies if the retrieval processes should be run in parallel
          on the server. This may improve the response time for large amounts of requested
          attributes. The default is 'false'.
        in: query
        name: asParallel
        schema:
          type: boolean
      - description: "Associated values to return in the response, separated by semicolons\
          \ (;). This call supports DataReference to return attributes with data references.\
          \ If this parameter is not specified, DataReference values are not returned."
        in: query
        name: associations
        schema:
          type: string
      - description: The include mode for the return list. The default is 'All'.
        in: query
        name: includeMode
        schema:
          type: string
      - description: The path of an attribute. Multiple attributes may be specified
          with multiple instances of the parameter.
        explode: true
        in: query
        name: path
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: The ID of an attribute. Multiple attributes may be specified
          with multiple instances of the parameter.
        explode: true
        in: query
        name: webId
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[Item[Attribute]]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[Item[Attribute]]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[Item[Attribute]]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[Item[Attribute]]"
          description: The requested attributes
        "207":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[Item[Attribute]]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[Item[Attribute]]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[Item[Attribute]]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[Item[Attribute]]"
          description: Some or all items contain exceptions.
      summary: Retrieve multiple attributes by web id or path.
      tags:
      - Attribute
      x-openapi-router-controller: openapi_server.controllers.attribute_controller
  /attributes/search:
    get:
      deprecated: false
      operationId: attribute_get_attributes_query
      parameters:
      - description: "Associated values to return in the response, separated by semicolons\
          \ (;). This call supports DataReference to return attributes with data references.\
          \ If this parameter is not specified, DataReference values are not returned."
        in: query
        name: associations
        schema:
          type: string
      - description: The ID of the asset database to use as the root of the query.
        in: query
        name: databaseWebId
        schema:
          type: string
      - description: The maximum number of objects to be returned per call (page size).
          The default is 1000.
        in: query
        name: maxCount
        schema:
          type: integer
      - description: "The query string is a list of filters used to perform an AFSearch\
          \ for the attributes in the asset database. An example would be: \"query=Element:{\
          \ Name:='MyElement' } Type:=Int32\"."
        in: query
        name: query
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: The starting index (zero based) of the items to be returned.
          The default is 0.
        in: query
        name: startIndex
        schema:
          type: integer
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[Attribute]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[Attribute]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[Attribute]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[Attribute]"
          description: A list of attributes matching the specified conditions.
      summary: Retrieve attributes based on the specified conditions. Returns attributes
        using the specified search query string.
      tags:
      - Attribute
      x-openapi-router-controller: openapi_server.controllers.attribute_controller
  /attributes/{webId}:
    delete:
      deprecated: false
      operationId: attribute_delete
      parameters:
      - description: The ID of the attribute.
        in: path
        name: webId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The attribute was deleted.
      summary: Delete an attribute.
      tags:
      - Attribute
      x-openapi-router-controller: openapi_server.controllers.attribute_controller
    get:
      deprecated: false
      operationId: attribute_get
      parameters:
      - description: The ID of the attribute.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "Associated values to return in the response, separated by semicolons\
          \ (;). This call supports DataReference to return attributes with data references.\
          \ If this parameter is not specified, DataReference values are not returned."
        in: query
        name: associations
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attribute'
            text/json:
              schema:
                $ref: '#/components/schemas/Attribute'
            text/html:
              schema:
                $ref: '#/components/schemas/Attribute'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Attribute'
          description: The requested attribute.
      summary: Retrieve an attribute.
      tags:
      - Attribute
      x-openapi-router-controller: openapi_server.controllers.attribute_controller
    patch:
      deprecated: false
      description: "If an attribute is based on a template, the user must make sure\
        \ to update the attribute appropriately so that it does not conflict with\
        \ the template's design. Once a template is applied to an attribute, it can\
        \ not be changed."
      operationId: attribute_update
      parameters:
      - description: The ID of the attribute.
        in: path
        name: webId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Attribute'
          text/json:
            schema:
              $ref: '#/components/schemas/Attribute'
        description: A partial attribute containing the desired changes.
        required: true
        x-body-name: attribute
      responses:
        "204":
          content: {}
          description: The attribute was updated.
      summary: Update an attribute by replacing items in its definition.
      tags:
      - Attribute
      x-codegen-request-body-name: attribute
      x-openapi-router-controller: openapi_server.controllers.attribute_controller
  /attributes/{webId}/attributes:
    get:
      deprecated: false
      operationId: attribute_get_attributes
      parameters:
      - description: The ID of the parent attribute.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "Associated values to return in the response, separated by semicolons\
          \ (;). This call supports DataReference to return attributes with data references.\
          \ If this parameter is not specified, DataReference values are not returned."
        in: query
        name: associations
        schema:
          type: string
      - description: Specify that returned attributes must have this category. The
          default is no category filter.
        in: query
        name: categoryName
        schema:
          type: string
      - description: The maximum number of objects to be returned per call (page size).
          The default is 1000.
        in: query
        name: maxCount
        schema:
          type: integer
      - description: The name query string used for finding attributes. The default
          is no filter.
        in: query
        name: nameFilter
        schema:
          type: string
      - description: Specifies if the search should include attributes nested further
          than the immediate attributes of the searchRoot. The default is 'false'.
        in: query
        name: searchFullHierarchy
        schema:
          type: boolean
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Specified if the search should include attributes with the Excluded
          property set. The default is 'false'.
        in: query
        name: showExcluded
        schema:
          type: boolean
      - description: Specified if the search should include attributes with the Hidden
          property set. The default is 'false'.
        in: query
        name: showHidden
        schema:
          type: boolean
      - description: The field or property of the object used to sort the returned
          collection. The default is 'Name'.
        in: query
        name: sortField
        schema:
          type: string
      - description: The order that the returned collection is sorted. The default
          is 'Ascending'.
        in: query
        name: sortOrder
        schema:
          type: string
      - description: The starting index (zero based) of the items to be returned.
          The default is 0.
        in: query
        name: startIndex
        schema:
          type: integer
      - description: Specify that returned attributes must be members of this template.
          The default is no template filter.
        in: query
        name: templateName
        schema:
          type: string
      - description: The name of the attribute trait. Multiple traits may be specified
          with multiple instances of the parameter.
        explode: true
        in: query
        name: trait
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "The category of the attribute traits. Multiple categories may\
          \ be specified with multiple instances of the parameter. If the parameter\
          \ is not specified, or if its value is \"all\", then all attribute traits\
          \ of all categories will be returned."
        explode: true
        in: query
        name: traitCategory
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Specify that returned attributes' value type must be the given
          value type. The default is no value type filter.
        in: query
        name: valueType
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[Attribute]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[Attribute]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[Attribute]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[Attribute]"
          description: A list of child attributes.
      summary: Get the child attributes of the specified attribute.
      tags:
      - Attribute
      x-openapi-router-controller: openapi_server.controllers.attribute_controller
    post:
      deprecated: false
      operationId: attribute_create_attribute
      parameters:
      - description: The ID of the parent attribute on which to create the attribute.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Attribute'
          text/json:
            schema:
              $ref: '#/components/schemas/Attribute'
        description: The definition of the new attribute.
        required: true
        x-body-name: attribute
      responses:
        "201":
          content: {}
          description: The attribute was created. The response's Location header is
            a link to the created attribute.
      summary: Create a new attribute as a child of the specified attribute.
      tags:
      - Attribute
      x-codegen-request-body-name: attribute
      x-openapi-router-controller: openapi_server.controllers.attribute_controller
  /attributes/{webId}/categories:
    get:
      deprecated: false
      operationId: attribute_get_categories
      parameters:
      - description: The ID of the attribute.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[AttributeCategory]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[AttributeCategory]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[AttributeCategory]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[AttributeCategory]"
          description: A list of categories.
      summary: Get an attribute's categories.
      tags:
      - Attribute
      x-openapi-router-controller: openapi_server.controllers.attribute_controller
  /attributes/{webId}/config:
    post:
      deprecated: false
      operationId: attribute_create_config
      parameters:
      - description: The ID of the attribute.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "201":
          content: {}
          description: The attribute's DataReference configuration was created or
            updated.
      summary: Create or update an attribute's DataReference configuration (Create/Update
        PI point for PI Point DataReference).
      tags:
      - Attribute
      x-openapi-router-controller: openapi_server.controllers.attribute_controller
  /attributes/{webId}/value:
    get:
      deprecated: false
      operationId: attribute_get_value
      parameters:
      - description: The ID of the attribute.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimedValue'
            text/json:
              schema:
                $ref: '#/components/schemas/TimedValue'
            text/html:
              schema:
                $ref: '#/components/schemas/TimedValue'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/TimedValue'
          description: The attribute's value.
      summary: "Get the attribute's value. This call is intended for use with attributes\
        \ that have no data reference only. For attributes with a data reference,\
        \ consult the documentation for Streams."
      tags:
      - Attribute
      x-openapi-router-controller: openapi_server.controllers.attribute_controller
    put:
      deprecated: false
      description: "Users must be aware of the value type that the attribute takes\
        \ before changing the value. If a value entered by the user does not match\
        \ the value type expressed in the attribute, it will not work or it will return\
        \ an error. Users should also be careful of what the value type means, for\
        \ instance, if a value type accepts strings and the user enters a number,\
        \ the attribute will interpret it as a string of characters and not as the\
        \ integer value that the user may have wanted."
      operationId: attribute_set_value
      parameters:
      - description: The ID of the attribute.
        in: path
        name: webId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimedValue'
          text/json:
            schema:
              $ref: '#/components/schemas/TimedValue'
        description: The value to write.
        required: true
        x-body-name: value
      responses:
        "204":
          content: {}
          description: The value was set successfully.
      summary: "Set the value of a configuration item attribute. For attributes with\
        \ a data reference or non-configuration item attributes, consult the documentation\
        \ for streams."
      tags:
      - Attribute
      x-codegen-request-body-name: value
      x-openapi-router-controller: openapi_server.controllers.attribute_controller
  /attributetemplates:
    get:
      deprecated: false
      description: "This method returns an attribute template based on the hierarchical\
        \ path associated with it, and should be used when a path has been received\
        \ from a separate part of the PI System for use in the PI Web API. Users should\
        \ primarily search with the WebID when available."
      operationId: attribute_template_get_by_path
      parameters:
      - description: The path to the attribute template.
        in: query
        name: path
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttributeTemplate'
            text/json:
              schema:
                $ref: '#/components/schemas/AttributeTemplate'
            text/html:
              schema:
                $ref: '#/components/schemas/AttributeTemplate'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/AttributeTemplate'
          description: The specified attribute template.
      summary: Retrieve an attribute template by path.
      tags:
      - AttributeTemplate
      x-openapi-router-controller: openapi_server.controllers.attribute_template_controller
  /attributetemplates/{webId}:
    delete:
      deprecated: false
      description: Deleting an attribute template will delete the attributes that
        were created based on the template
      operationId: attribute_template_delete
      parameters:
      - description: The ID of the attribute template.
        in: path
        name: webId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The attribute template was deleted.
      summary: Delete an attribute template.
      tags:
      - AttributeTemplate
      x-openapi-router-controller: openapi_server.controllers.attribute_template_controller
    get:
      deprecated: false
      operationId: attribute_template_get
      parameters:
      - description: The ID of the attribute template.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttributeTemplate'
            text/json:
              schema:
                $ref: '#/components/schemas/AttributeTemplate'
            text/html:
              schema:
                $ref: '#/components/schemas/AttributeTemplate'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/AttributeTemplate'
          description: The specified attribute template.
      summary: Retrieve an attribute template.
      tags:
      - AttributeTemplate
      x-openapi-router-controller: openapi_server.controllers.attribute_template_controller
    patch:
      deprecated: false
      description: Updating an attribute template will propagate changes to the attributes
        that were created based on the template
      operationId: attribute_template_update
      parameters:
      - description: The ID of the attribute template.
        in: path
        name: webId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttributeTemplate'
          text/json:
            schema:
              $ref: '#/components/schemas/AttributeTemplate'
        description: A partial attribute template containing the desired changes.
        required: true
        x-body-name: template
      responses:
        "204":
          content: {}
          description: The attribute template was updated.
      summary: Update an existing attribute template by replacing items in its definition.
      tags:
      - AttributeTemplate
      x-codegen-request-body-name: template
      x-openapi-router-controller: openapi_server.controllers.attribute_template_controller
  /attributetemplates/{webId}/attributetemplates:
    get:
      deprecated: false
      operationId: attribute_template_get_attribute_templates
      parameters:
      - description: The ID of the attribute template.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[AttributeTemplate]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[AttributeTemplate]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[AttributeTemplate]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[AttributeTemplate]"
          description: A list of child attribute templates.
      summary: Retrieve an attribute template's child attribute templates.
      tags:
      - AttributeTemplate
      x-openapi-router-controller: openapi_server.controllers.attribute_template_controller
    post:
      deprecated: false
      operationId: attribute_template_create_attribute_template
      parameters:
      - description: The ID of the parent attribute template on which to create the
          attribute template.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttributeTemplate'
          text/json:
            schema:
              $ref: '#/components/schemas/AttributeTemplate'
        description: The attribute template definition.
        required: true
        x-body-name: template
      responses:
        "201":
          content: {}
          description: The attribute template was created. The response's Location
            header is a link to the created resource.
      summary: Create an attribute template as a child of another attribute template.
      tags:
      - AttributeTemplate
      x-codegen-request-body-name: template
      x-openapi-router-controller: openapi_server.controllers.attribute_template_controller
  /attributetemplates/{webId}/categories:
    get:
      deprecated: false
      operationId: attribute_template_get_categories
      parameters:
      - description: The ID of the attribute template.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[AttributeCategory]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[AttributeCategory]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[AttributeCategory]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[AttributeCategory]"
          description: A list of categories.
      summary: Get an attribute template's categories.
      tags:
      - AttributeTemplate
      x-openapi-router-controller: openapi_server.controllers.attribute_template_controller
  /attributetraits:
    get:
      deprecated: false
      operationId: attribute_trait_get_by_category
      parameters:
      - description: "The category of the attribute traits. Multiple categories may\
          \ be specified with multiple instances of the parameter. If the parameter\
          \ is not specified, or if its value is \"all\", then all attribute traits\
          \ of all categories will be returned."
        explode: true
        in: query
        name: category
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[AttributeTrait]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[AttributeTrait]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[AttributeTrait]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[AttributeTrait]"
          description: A list of attribute traits.
      summary: Retrieve all attribute traits of the specified category/categories.
      tags:
      - AttributeTrait
      x-openapi-router-controller: openapi_server.controllers.attribute_trait_controller
  /attributetraits/{name}:
    get:
      deprecated: false
      operationId: attribute_trait_get
      parameters:
      - description: The name or abbreviation of the attribute trait.
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttributeTrait'
            text/json:
              schema:
                $ref: '#/components/schemas/AttributeTrait'
            text/html:
              schema:
                $ref: '#/components/schemas/AttributeTrait'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/AttributeTrait'
          description: The requested attribute trait.
      summary: Retrieve an attribute trait.
      tags:
      - AttributeTrait
      x-openapi-router-controller: openapi_server.controllers.attribute_trait_controller
  /batch:
    post:
      deprecated: false
      operationId: batch_execute
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/Request'
              type: object
          text/json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/Request'
              type: object
        description: The batch of requests.
        required: true
        x-body-name: batch
      responses:
        "207":
          content:
            application/json:
              schema:
                additionalProperties:
                  $ref: '#/components/schemas/Response'
                type: object
            text/json:
              schema:
                additionalProperties:
                  $ref: '#/components/schemas/Response'
                type: object
            text/html:
              schema:
                additionalProperties:
                  $ref: '#/components/schemas/Response'
                type: object
            application/x-ms-application:
              schema:
                additionalProperties:
                  $ref: '#/components/schemas/Response'
                type: object
          description: A dictionary of response information corresponding to the batched
            requests.
      summary: "Execute a batch of requests against the service. As shown in the Sample\
        \ Request, the input is a dictionary with IDs as keys and request objects\
        \ as values. Each request object specifies the HTTP method and the resource\
        \ and, optionally, the content and a list of parent IDs. The list of parent\
        \ IDs specifies which other requests must complete before the given request\
        \ will be executed. The example first creates an element, then gets the element\
        \ by the response's Location header, then creates an attribute for the element.\
        \ Note that the resource can be an absolute URL or a JsonPath that references\
        \ the response to the parent request. The batch's response is a dictionary\
        \ uses keys corresponding those provided in the request, with response objects\
        \ containing a status code, response headers, and the response body. A request\
        \ can alternatively specify a request template in place of a resource. In\
        \ this case, a single JsonPath may select multiple tokens, and a separate\
        \ subrequest will be made from the template for each token. The responses\
        \ of these subrequests will returned as the content of a single outer response."
      tags:
      - Batch
      x-codegen-request-body-name: batch
      x-openapi-router-controller: openapi_server.controllers.batch_controller
  /calculation/intervals:
    get:
      deprecated: false
      operationId: calculation_get_at_intervals
      parameters:
      - description: "A string containing the expression to be evaluated. The syntax\
          \ for the expression generally follows the Performance Equation syntax as\
          \ described in the PI Server documentation, with the exception that expressions\
          \ which target AF objects use attribute names in place of tag names in the\
          \ equation."
        in: query
        name: expression
        required: true
        schema:
          type: string
      - description: "An optional end time. The default is '*' for element attributes\
          \ and points. For event frame attributes, the default is the event frame's\
          \ end time, or '*' if that is not set. Note that if endTime is earlier than\
          \ startTime, the resulting values will be in time-descending order."
        in: query
        name: endTime
        schema:
          type: string
      - description: A time span specifies how often the filter expression is evaluated
          when computing the summary for an interval.
        in: query
        name: sampleInterval
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: "An optional start time. The default is '*-1d' for element attributes\
          \ and points. For event frame attributes, the default is the event frame's\
          \ start time, or '*-1d' if that is not set."
        in: query
        name: startTime
        schema:
          type: string
      - description: "The ID of the target object of the expression. A target object\
          \ can be a Data Server, a database, an element, an event frame or an attribute.\
          \ References to attributes or points are based on the target. If this parameter\
          \ is not provided, the target object is set to null."
        in: query
        name: webId
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimedValues'
            text/json:
              schema:
                $ref: '#/components/schemas/TimedValues'
            text/html:
              schema:
                $ref: '#/components/schemas/TimedValues'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/TimedValues'
          description: The calculated values.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: The targeted object does not support the calculation.
      summary: Returns results of evaluating the expression over the time range from
        the start time to the end time at a defined interval.
      tags:
      - Calculation
      x-openapi-router-controller: openapi_server.controllers.calculation_controller
  /calculation/recorded:
    get:
      deprecated: false
      operationId: calculation_get_at_recorded
      parameters:
      - description: "A string containing the expression to be evaluated. The syntax\
          \ for the expression generally follows the Performance Equation syntax as\
          \ described in the PI Server documentation, with the exception that expressions\
          \ which target AF objects use attribute names in place of tag names in the\
          \ equation."
        in: query
        name: expression
        required: true
        schema:
          type: string
      - description: "An optional end time. The default is '*' for element attributes\
          \ and points. For event frame attributes, the default is the event frame's\
          \ end time, or '*' if that is not set. Note that if endTime is earlier than\
          \ startTime, the resulting values will be in time-descending order."
        in: query
        name: endTime
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: "An optional start time. The default is '*-1d' for element attributes\
          \ and points. For event frame attributes, the default is the event frame's\
          \ start time, or '*-1d' if that is not set."
        in: query
        name: startTime
        schema:
          type: string
      - description: "The ID of the target object of the expression. A target object\
          \ can be a Data Server, a database, an element, an event frame or an attribute.\
          \ References to attributes or points are based on the target. If this parameter\
          \ is not provided, the target object is set to null."
        in: query
        name: webId
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimedValues'
            text/json:
              schema:
                $ref: '#/components/schemas/TimedValues'
            text/html:
              schema:
                $ref: '#/components/schemas/TimedValues'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/TimedValues'
          description: The calculated values.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: The targeted object does not support the calculation.
      summary: Returns the result of evaluating the expression at each point in time
        over the time range from the start time to the end time where a recorded value
        exists for a member of the expression.
      tags:
      - Calculation
      x-openapi-router-controller: openapi_server.controllers.calculation_controller
  /calculation/summary:
    get:
      deprecated: false
      operationId: calculation_get_summary
      parameters:
      - description: "A string containing the expression to be evaluated. The syntax\
          \ for the expression generally follows the Performance Equation syntax as\
          \ described in the PI Server documentation, with the exception that expressions\
          \ which target AF objects use attribute names in place of tag names in the\
          \ equation."
        in: query
        name: expression
        required: true
        schema:
          type: string
      - description: Specifies the method of evaluating the data over the time range.
          The default is 'TimeWeighted'.
        in: query
        name: calculationBasis
        schema:
          type: string
      - description: "An optional end time. The default is '*' for element attributes\
          \ and points. For event frame attributes, the default is the event frame's\
          \ end time, or '*' if that is not set. Note that if endTime is earlier than\
          \ startTime, the resulting values will be in time-descending order."
        in: query
        name: endTime
        schema:
          type: string
      - description: "A time span specifies how often the filter expression is evaluated\
          \ when computing the summary for an interval, if the sampleType is 'Interval'."
        in: query
        name: sampleInterval
        schema:
          type: string
      - description: A flag which specifies one or more summaries to compute for each
          interval over the time range. The default is 'ExpressionRecordedValues'.
        in: query
        name: sampleType
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: "An optional start time. The default is '*-1d' for element attributes\
          \ and points. For event frame attributes, the default is the event frame's\
          \ start time, or '*-1d' if that is not set."
        in: query
        name: startTime
        schema:
          type: string
      - description: The duration of each summary interval.
        in: query
        name: summaryDuration
        schema:
          type: string
      - description: Specifies the kinds of summaries to produce over the range. The
          default is 'Total'. Multiple summary types may be specified by using multiple
          instances of summaryType.
        explode: true
        in: query
        name: summaryType
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Specifies how to calculate the timestamp for each interval. The
          default is 'Auto'.
        in: query
        name: timeType
        schema:
          type: string
      - description: "The ID of the target object of the expression. A target object\
          \ can be a Data Server, a database, an element, an event frame or an attribute.\
          \ References to attributes or points are based on the target. If this parameter\
          \ is not provided, the target object is set to null."
        in: query
        name: webId
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[SummaryValue]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[SummaryValue]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[SummaryValue]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[SummaryValue]"
          description: The calculated values.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: The targeted object does not support the calculation.
      summary: Returns the result of evaluating the expression over the time range
        from the start time to the end time. The time range is first divided into
        a number of summary intervals. Then the calculation is performed for the specified
        summaries over each interval.
      tags:
      - Calculation
      x-openapi-router-controller: openapi_server.controllers.calculation_controller
  /calculation/times:
    get:
      deprecated: false
      operationId: calculation_get_at_times
      parameters:
      - description: "A string containing the expression to be evaluated. The syntax\
          \ for the expression generally follows the Performance Equation syntax as\
          \ described in the PI Server documentation, with the exception that expressions\
          \ which target AF objects use attribute names in place of tag names in the\
          \ equation."
        in: query
        name: expression
        required: true
        schema:
          type: string
      - description: A list of timestamps at which to calculate the expression.
        explode: true
        in: query
        name: time
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: The order that the returned collection is sorted. The default
          is 'Ascending'.
        in: query
        name: sortOrder
        schema:
          type: string
      - description: "The ID of the target object of the expression. A target object\
          \ can be a Data Server, a database, an element, an event frame or an attribute.\
          \ References to attributes or points are based on the target. If this parameter\
          \ is not provided, the target object is set to null."
        in: query
        name: webId
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimedValues'
            text/json:
              schema:
                $ref: '#/components/schemas/TimedValues'
            text/html:
              schema:
                $ref: '#/components/schemas/TimedValues'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/TimedValues'
          description: The calculated values.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: The targeted object does not support the calculation.
      summary: Returns the result of evaluating the expression at the specified timestamps.
      tags:
      - Calculation
      x-openapi-router-controller: openapi_server.controllers.calculation_controller
  /channels/instances:
    get:
      deprecated: false
      operationId: channel_instances
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[ChannelInstance]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[ChannelInstance]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[ChannelInstance]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[ChannelInstance]"
          description: A list of currently running channel instances.
      summary: Retrieves a list of currently running channel instances.
      tags:
      - Channel
      x-openapi-router-controller: openapi_server.controllers.channel_controller
  /dataservers:
    get:
      deprecated: false
      description: "This method returns a list of all available known Data Servers\
        \ that the user can connect to. Even though a server may be returned in the\
        \ list, the user may not have permission to access it."
      operationId: data_server_list
      parameters:
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[DataServer]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[DataServer]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[DataServer]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[DataServer]"
          description: A list of all known servers.
      summary: Retrieve a list of Data Servers known to this service.
      tags:
      - DataServer
      x-openapi-router-controller: openapi_server.controllers.data_server_controller
  /dataservers#name:
    get:
      deprecated: false
      description: This method returns a data server based on the name. Users should
        primarily search with the WebID when available.
      operationId: data_server_get_by_name
      parameters:
      - description: The name of the server.
        in: query
        name: name
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataServer'
            text/json:
              schema:
                $ref: '#/components/schemas/DataServer'
            text/html:
              schema:
                $ref: '#/components/schemas/DataServer'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/DataServer'
          description: The requested server.
      summary: Retrieve a Data Server by name.
      tags:
      - DataServer
      x-openapi-router-controller: openapi_server.controllers.data_server_controller
  /dataservers#path:
    get:
      deprecated: false
      description: "This method returns a data server based on the hierarchical path\
        \ associated with it, and should be used when a path has been received from\
        \ a separate part of the PI System for use in the PI Web API. Users should\
        \ primarily search with the WebID when available."
      operationId: data_server_get_by_path
      parameters:
      - description: The path to the server. Note that the path supplied to this method
          must be of the form '\\servername'.
        in: query
        name: path
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataServer'
            text/json:
              schema:
                $ref: '#/components/schemas/DataServer'
            text/html:
              schema:
                $ref: '#/components/schemas/DataServer'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/DataServer'
          description: The requested server.
      summary: Retrieve a Data Server by path.
      tags:
      - DataServer
      x-openapi-router-controller: openapi_server.controllers.data_server_controller
  /dataservers/{webId}:
    get:
      deprecated: false
      operationId: data_server_get
      parameters:
      - description: The ID of the server.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataServer'
            text/json:
              schema:
                $ref: '#/components/schemas/DataServer'
            text/html:
              schema:
                $ref: '#/components/schemas/DataServer'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/DataServer'
          description: The requested server.
      summary: Retrieve a Data Server.
      tags:
      - DataServer
      x-openapi-router-controller: openapi_server.controllers.data_server_controller
  /dataservers/{webId}/enumerationsets:
    get:
      deprecated: false
      operationId: data_server_get_enumeration_sets
      parameters:
      - description: The ID of the server.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[EnumerationSet]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[EnumerationSet]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[EnumerationSet]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[EnumerationSet]"
          description: The specified enumeration sets.
      summary: Retrieve enumeration sets for given Data Server.
      tags:
      - DataServer
      x-openapi-router-controller: openapi_server.controllers.data_server_controller
    post:
      deprecated: false
      operationId: data_server_create_enumeration_set
      parameters:
      - description: The ID of the server on which to create the enumeration set.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnumerationSet'
          text/json:
            schema:
              $ref: '#/components/schemas/EnumerationSet'
        description: The new enumeration set definition.
        required: true
        x-body-name: enumerationSet
      responses:
        "201":
          content: {}
          description: The enumeration was created. The response's Location header
            is a link to the created enumeration set.
      summary: Create an enumeration set on the Data Server.
      tags:
      - DataServer
      x-codegen-request-body-name: enumerationSet
      x-openapi-router-controller: openapi_server.controllers.data_server_controller
  /dataservers/{webId}/license:
    get:
      deprecated: false
      operationId: data_server_get_license
      parameters:
      - description: The ID of the server.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: The case-sensitive name of the module.
        in: query
        name: module
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataServerLicense'
            text/json:
              schema:
                $ref: '#/components/schemas/DataServerLicense'
            text/html:
              schema:
                $ref: '#/components/schemas/DataServerLicense'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/DataServerLicense'
          description: The specified license.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: No license with the specified module name existed.
      summary: "Retrieves the specified license for the given Data Server. The fields\
        \ of the response object are string representations of the numerical values\
        \ reported by the Data Server, with \"Infinity\" representing a license field\
        \ with no limit."
      tags:
      - DataServer
      x-openapi-router-controller: openapi_server.controllers.data_server_controller
  /dataservers/{webId}/points:
    get:
      deprecated: false
      description: "Users can search for the data servers based on specific search\
        \ parameters. If no parameters are specified in the search, the default values\
        \ for each parameter will be used and will return the data servers that match\
        \ the default search."
      operationId: data_server_get_points
      parameters:
      - description: The ID of the server.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: The maximum number of objects to be returned per call (page size).
          The default is 1000.
        in: query
        name: maxCount
        schema:
          type: integer
      - description: A query string for filtering by point name. The default is no
          filter.
        in: query
        name: nameFilter
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: The starting index (zero based) of the items to be returned.
          The default is '0'.
        in: query
        name: startIndex
        schema:
          type: integer
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[Point]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[Point]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[Point]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[Point]"
          description: A list of matching points.
      summary: Retrieve a list of points on a specified Data Server.
      tags:
      - DataServer
      x-openapi-router-controller: openapi_server.controllers.data_server_controller
    post:
      deprecated: false
      operationId: data_server_create_point
      parameters:
      - description: The ID of the server.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Point'
          text/json:
            schema:
              $ref: '#/components/schemas/Point'
        description: The new point definition.
        required: true
        x-body-name: pointDTO
      responses:
        "201":
          content: {}
          description: The point was created. The response's Location header is a
            link to the point.
      summary: Create a point in the specified Data Server.
      tags:
      - DataServer
      x-codegen-request-body-name: pointDTO
      x-openapi-router-controller: openapi_server.controllers.data_server_controller
  /elementcategories:
    get:
      deprecated: false
      operationId: element_category_get_by_path
      parameters:
      - description: The path to the target element category.
        in: query
        name: path
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElementCategory'
            text/json:
              schema:
                $ref: '#/components/schemas/ElementCategory'
            text/html:
              schema:
                $ref: '#/components/schemas/ElementCategory'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/ElementCategory'
          description: The specified element category.
      summary: Retrieve an element category by path.
      tags:
      - ElementCategory
      x-openapi-router-controller: openapi_server.controllers.element_category_controller
  /elementcategories/{webId}:
    delete:
      deprecated: false
      operationId: element_category_delete
      parameters:
      - description: The ID of the element category to delete.
        in: path
        name: webId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The element category was deleted.
      summary: Delete an element category.
      tags:
      - ElementCategory
      x-openapi-router-controller: openapi_server.controllers.element_category_controller
    get:
      deprecated: false
      operationId: element_category_get
      parameters:
      - description: The id of the element category.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElementCategory'
            text/json:
              schema:
                $ref: '#/components/schemas/ElementCategory'
            text/html:
              schema:
                $ref: '#/components/schemas/ElementCategory'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/ElementCategory'
          description: The specified element category.
      summary: Retrieve an element category.
      tags:
      - ElementCategory
      x-openapi-router-controller: openapi_server.controllers.element_category_controller
    patch:
      deprecated: false
      operationId: element_category_update
      parameters:
      - description: The ID of the element category to update.
        in: path
        name: webId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ElementCategory'
          text/json:
            schema:
              $ref: '#/components/schemas/ElementCategory'
        description: A partial element category containing the desired changes.
        required: true
        x-body-name: elementCategory
      responses:
        "204":
          content: {}
          description: The element category was updated.
      summary: Update an element category by replacing items in its definition.
      tags:
      - ElementCategory
      x-codegen-request-body-name: elementCategory
      x-openapi-router-controller: openapi_server.controllers.element_category_controller
  /elementcategories/{webId}/security:
    get:
      deprecated: false
      operationId: element_category_get_security
      parameters:
      - description: The ID of the element category for the security to be checked.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "The user identity for the security information to be checked.\
          \ Multiple security identities may be specified with multiple instances\
          \ of the parameter. If the parameter is not specified, only the current\
          \ user's security rights will be returned."
        explode: true
        in: query
        name: userIdentity
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Indicates if the security cache should be refreshed before getting
          security information. The default is 'false'.
        in: query
        name: forceRefresh
        schema:
          type: boolean
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[SecurityRights]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[SecurityRights]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[SecurityRights]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[SecurityRights]"
          description: Security rights.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: An invalid or local account is specified as the user identity.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Access denied for the specified user identity.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Unsupported when using Anonymous authentication method.
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Failed to retrieve the specified user identity.
      summary: Get the security information of the specified security item associated
        with the element category for a specified user.
      tags:
      - ElementCategory
      x-openapi-router-controller: openapi_server.controllers.element_category_controller
  /elementcategories/{webId}/securityentries:
    get:
      deprecated: false
      operationId: element_category_get_security_entries
      parameters:
      - description: The ID of the element category.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: The name query string used for filtering security entries. The
          default is no filter.
        in: query
        name: nameFilter
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[SecurityEntry]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[SecurityEntry]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[SecurityEntry]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[SecurityEntry]"
          description: A list of security entries matching the specified condition.
      summary: "Retrieve the security entries associated with the element category\
        \ based on the specified criteria. By default, all security entries for this\
        \ element category are returned."
      tags:
      - ElementCategory
      x-openapi-router-controller: openapi_server.controllers.element_category_controller
    post:
      deprecated: false
      operationId: element_category_create_security_entry
      parameters:
      - description: The ID of the element category where the security entry will
          be created.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "If false, the new access permissions are only applied to the\
          \ associated object. If true, the access permissions of children with any\
          \ parent-child reference types will change when the permissions on the primary\
          \ parent change."
        in: query
        name: applyToChildren
        schema:
          type: boolean
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityEntry'
          text/json:
            schema:
              $ref: '#/components/schemas/SecurityEntry'
        description: The new security entry definition. The full list of allow and
          deny rights must be supplied.
        required: true
        x-body-name: securityEntry
      responses:
        "201":
          content: {}
          description: The security entry was created. The response's Location header
            is a link to the security entry.
      summary: Create a security entry owned by the element category.
      tags:
      - ElementCategory
      x-codegen-request-body-name: securityEntry
      x-openapi-router-controller: openapi_server.controllers.element_category_controller
  /elementcategories/{webId}/securityentries/{name}:
    delete:
      deprecated: false
      operationId: element_category_delete_security_entry
      parameters:
      - description: "The name of the security entry. For every backslash character\
          \ (\\) in the security entry name, replace with asterisk (*). As an example,\
          \ use domain*username instead of domain\\username."
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: The ID of the element category where the security entry will
          be deleted.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "If false, the new access permissions are only applied to the\
          \ associated object. If true, the access permissions of children with any\
          \ parent-child reference types will change when the permissions on the primary\
          \ parent change."
        in: query
        name: applyToChildren
        schema:
          type: boolean
      responses:
        "204":
          content: {}
          description: The security entry was deleted.
      summary: Delete a security entry owned by the element category.
      tags:
      - ElementCategory
      x-openapi-router-controller: openapi_server.controllers.element_category_controller
    get:
      deprecated: false
      operationId: element_category_get_security_entry_by_name
      parameters:
      - description: "The name of the security entry. For every backslash character\
          \ (\\) in the security entry name, replace with asterisk (*). As an example,\
          \ use domain*username instead of domain\\username."
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: The ID of the element category.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityEntry'
            text/json:
              schema:
                $ref: '#/components/schemas/SecurityEntry'
            text/html:
              schema:
                $ref: '#/components/schemas/SecurityEntry'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/SecurityEntry'
          description: The security entry matching the specified condition.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: The security entry with the specified name is not found.
      summary: Retrieve the security entry associated with the element category with
        the specified name.
      tags:
      - ElementCategory
      x-openapi-router-controller: openapi_server.controllers.element_category_controller
    put:
      deprecated: false
      operationId: element_category_update_security_entry
      parameters:
      - description: The name of the security entry.
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: The ID of the element category where the security entry will
          be updated.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "If false, the new access permissions are only applied to the\
          \ associated object. If true, the access permissions of children with any\
          \ parent-child reference types will change when the permissions on the primary\
          \ parent change."
        in: query
        name: applyToChildren
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityEntry'
          text/json:
            schema:
              $ref: '#/components/schemas/SecurityEntry'
        description: The new security entry definition. The full list of allow and
          deny rights must be supplied or they will be removed.
        required: true
        x-body-name: securityEntry
      responses:
        "204":
          content: {}
          description: The security entry was updated.
      summary: Update a security entry owned by the element category.
      tags:
      - ElementCategory
      x-codegen-request-body-name: securityEntry
      x-openapi-router-controller: openapi_server.controllers.element_category_controller
  /elements:
    get:
      deprecated: false
      description: "This method returns an element based on the hierarchical path\
        \ associated with it, and should be used when a path has been received from\
        \ a separate part of the PI System for use in the PI Web API. Users should\
        \ primarily search with the WebID when available."
      operationId: element_get_by_path
      parameters:
      - description: The path to the element.
        in: query
        name: path
        required: true
        schema:
          type: string
      - description: "Associated values to return in the response, separated by semicolons\
          \ (;). This call supports Paths to return all paths to the element. If this\
          \ parameter is not specified, paths are not returned."
        in: query
        name: associations
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Element'
            text/json:
              schema:
                $ref: '#/components/schemas/Element'
            text/html:
              schema:
                $ref: '#/components/schemas/Element'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Element'
          description: The specified element.
      summary: Retrieve an element by path.
      tags:
      - Element
      x-openapi-router-controller: openapi_server.controllers.element_controller
  /elements/multiple:
    get:
      deprecated: false
      operationId: element_get_multiple
      parameters:
      - description: Specifies if the retrieval processes should be run in parallel
          on the server. This may improve the response time for large amounts of requested
          attributes. The default is 'false'.
        in: query
        name: asParallel
        schema:
          type: boolean
      - description: "Associated values to return in the response, separated by semicolons\
          \ (;). This call supports Paths to return all paths to the element. If this\
          \ parameter is not specified, paths are not returned."
        in: query
        name: associations
        schema:
          type: string
      - description: The include mode for the return list. The default is 'All'.
        in: query
        name: includeMode
        schema:
          type: string
      - description: The path of an element. Multiple elements may be specified with
          multiple instances of the parameter.
        explode: true
        in: query
        name: path
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: The ID of an element. Multiple elements may be specified with
          multiple instances of the parameter.
        explode: true
        in: query
        name: webId
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[Item[Element]]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[Item[Element]]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[Item[Element]]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[Item[Element]]"
          description: The requested elements
        "207":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[Item[Element]]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[Item[Element]]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[Item[Element]]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[Item[Element]]"
          description: Some or all items contain exceptions.
      summary: Retrieve multiple elements by web id or path.
      tags:
      - Element
      x-openapi-router-controller: openapi_server.controllers.element_controller
  /elements/search:
    get:
      deprecated: false
      operationId: element_get_elements_query
      parameters:
      - description: "Associated values to return in the response, separated by semicolons\
          \ (;). This call supports Paths to return all paths to the element. If this\
          \ parameter is not specified, paths are not returned."
        in: query
        name: associations
        schema:
          type: string
      - description: The ID of the asset database to use as the root of the query.
        in: query
        name: databaseWebId
        schema:
          type: string
      - description: The maximum number of objects to be returned per call (page size).
          The default is 1000.
        in: query
        name: maxCount
        schema:
          type: integer
      - description: "The query string is a list of filters used to perform an AFSearch\
          \ for the elements in the asset database. An example would be: \"query=Name:=MyElement*\
          \ Template:=ElementTemplate\"."
        in: query
        name: query
        schema:
          type: string
      - description: "Optional parameter. Used to retrieve the relative the version\
          \ of an object. A value of null or AFTime.MaxValue initializes the query\
          \ date so the latest versions of sub-objects are retrieved. The value may\
          \ be an AFTime, DateTime, PITime, String, or numeric. An integer numeric\
          \ represents the number of ticks (100-nanosecond intervals) since January\
          \ 1, 0001. A floating point numeric represents the number of seconds since\
          \ January 1, 1970 UTC. A String is interpreted as local time, unless it\
          \ contains a time zone indicator such as a trailing \"Z\" or \"GMT\"."
        in: query
        name: queryDate
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: The starting index (zero based) of the items to be returned.
          The default is 0.
        in: query
        name: startIndex
        schema:
          type: integer
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[Element]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[Element]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[Element]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[Element]"
          description: A list of elements matching the specified conditions.
      summary: "Retrieve elements based on the specified conditions. By default, returns\
        \ all the elements."
      tags:
      - Element
      x-openapi-router-controller: openapi_server.controllers.element_controller
  /elements/searchbyattribute:
    post:
      deprecated: false
      operationId: element_create_search_by_attribute
      parameters:
      - description: "Associated values to return in the response, separated by semicolons\
          \ (;). This call supports Paths to return all paths to the element. If this\
          \ parameter is not specified, paths are not returned."
        in: query
        name: associations
        schema:
          type: string
      - description: "If false, the response content will contain the first page of\
          \ the search results. If true, the response content will be empty. The default\
          \ is false."
        in: query
        name: noResults
        schema:
          type: boolean
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchByAttribute'
          text/json:
            schema:
              $ref: '#/components/schemas/SearchByAttribute'
        description: The query of search by attribute.
        required: true
        x-body-name: query
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[Element]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[Element]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[Element]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[Element]"
          description: The link is stored in the response's "Location" header. The
            response content is the first page of the search result by the default
            parameters.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Empty or invalid request content.
        "413":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Request content is too large.
      summary: "Create a link for a \"Search Elements By Attribute Value\" operation,\
        \ whose queries are specified in the request content. The SearchRoot is specified\
        \ by the Web Id of the root Element. If the SearchRoot is not specified, then\
        \ the search starts at the Asset Database. ElementTemplate must be provided\
        \ as the Web ID of the ElementTemplate, which are used to create the Elements.\
        \ All the attributes in the queries must be defined as AttributeTemplates\
        \ on the ElementTemplate. An array of attribute value queries are ANDed together\
        \ to find the desired Element objects. At least one value query must be specified.\
        \ There are limitations on SearchOperators."
      tags:
      - Element
      x-codegen-request-body-name: query
      x-openapi-router-controller: openapi_server.controllers.element_controller
  /elements/searchbyattribute/{searchId}:
    get:
      deprecated: false
      operationId: element_execute_search_by_attribute
      parameters:
      - description: The encoded search Id of the "Search Elements By Attribute Value"
          operation.
        in: path
        name: searchId
        required: true
        schema:
          type: string
      - description: "Associated values to return in the response, separated by semicolons\
          \ (;). This call supports Paths to return all paths to the element. If this\
          \ parameter is not specified, paths are not returned."
        in: query
        name: associations
        schema:
          type: string
      - description: "Specify that the owner of the returned attributes must have\
          \ this category. For Asset Servers older than 2.7, a 400 status code (Bad\
          \ Request) will be returned if this parameter is specified. The default\
          \ is no filter."
        in: query
        name: categoryName
        schema:
          type: string
      - description: "The element description filter string used for finding objects.\
          \ Only the first 440 characters of the description will be searched. For\
          \ Asset Servers older than 2.7, a 400 status code (Bad Request) will be\
          \ returned if this parameter is specified. The default is no filter."
        in: query
        name: descriptionFilter
        schema:
          type: string
      - description: The maximum number of objects to be returned. The default is
          1000.
        in: query
        name: maxCount
        schema:
          type: integer
      - description: The name query string used for finding objects. The default is
          no filter.
        in: query
        name: nameFilter
        schema:
          type: string
      - description: Specifies if the search should include objects nested further
          than the immediate children of the searchRoot. The default is 'false'.
        in: query
        name: searchFullHierarchy
        schema:
          type: boolean
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: The field or property of the object used to sort the returned
          collection. The default is 'Name'.
        in: query
        name: sortField
        schema:
          type: string
      - description: The order that the returned collection is sorted. The default
          is 'Ascending'.
        in: query
        name: sortOrder
        schema:
          type: string
      - description: The starting index (zero based) of the items to be returned.
          The default is 0.
        in: query
        name: startIndex
        schema:
          type: integer
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[Element]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[Element]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[Element]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[Element]"
          description: a list of matching Elements.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Invalid search Id or search parameters.
      summary: Execute a "Search Elements By Attribute Value" operation.
      tags:
      - Element
      x-openapi-router-controller: openapi_server.controllers.element_controller
  /elements/{webId}:
    delete:
      deprecated: false
      operationId: element_delete
      parameters:
      - description: The ID of the element.
        in: path
        name: webId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The element was deleted.
      summary: Delete an element.
      tags:
      - Element
      x-openapi-router-controller: openapi_server.controllers.element_controller
    get:
      deprecated: false
      operationId: element_get
      parameters:
      - description: The ID of the element.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "Associated values to return in the response, separated by semicolons\
          \ (;). This call supports Paths to return all paths to the element. If this\
          \ parameter is not specified, paths are not returned."
        in: query
        name: associations
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Element'
            text/json:
              schema:
                $ref: '#/components/schemas/Element'
            text/html:
              schema:
                $ref: '#/components/schemas/Element'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Element'
          description: The specified element.
      summary: Retrieve an element.
      tags:
      - Element
      x-openapi-router-controller: openapi_server.controllers.element_controller
    patch:
      deprecated: false
      operationId: element_update
      parameters:
      - description: The ID of the element.
        in: path
        name: webId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Element'
          text/json:
            schema:
              $ref: '#/components/schemas/Element'
        description: A partial element containing the desired changes.
        required: true
        x-body-name: element
      responses:
        "204":
          content: {}
          description: The element was updated.
      summary: Update an element by replacing items in its definition.
      tags:
      - Element
      x-codegen-request-body-name: element
      x-openapi-router-controller: openapi_server.controllers.element_controller
  /elements/{webId}/analyses:
    get:
      deprecated: false
      description: "Users can search for the analyses based on specific search parameters.\
        \ If no parameters are specified in the search, the default values for each\
        \ parameter will be used and will return the analyses that match the default\
        \ search."
      operationId: element_get_analyses
      parameters:
      - description: "The ID of the element, which is the Target of the analyses."
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: The maximum number of objects to be returned per call (page size).
          The default is 1000.
        in: query
        name: maxCount
        schema:
          type: integer
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: The field or property of the object used to sort the returned
          collection. The default is 'Name'.
        in: query
        name: sortField
        schema:
          type: string
      - description: The order that the returned collection is sorted. The default
          is 'Ascending'.
        in: query
        name: sortOrder
        schema:
          type: string
      - description: The starting index (zero based) of the items to be returned.
          The default is 0.
        in: query
        name: startIndex
        schema:
          type: integer
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[Analysis]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[Analysis]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[Analysis]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[Analysis]"
          description: A list of analyses matching the specified conditions.
      summary: Retrieve analyses based on the specified conditions.
      tags:
      - Element
      x-openapi-router-controller: openapi_server.controllers.element_controller
    post:
      deprecated: false
      operationId: element_create_analysis
      parameters:
      - description: The ID of the element on which to create the Analysis.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Analysis'
          text/json:
            schema:
              $ref: '#/components/schemas/Analysis'
        description: The new Analysis definition.
        required: true
        x-body-name: analysis
      responses:
        "201":
          content: {}
          description: The Analysis was created. The response's Location header is
            a link to the Analysis.
      summary: Create an Analysis.
      tags:
      - Element
      x-codegen-request-body-name: analysis
      x-openapi-router-controller: openapi_server.controllers.element_controller
  /elements/{webId}/attributes:
    get:
      deprecated: false
      operationId: element_get_attributes
      parameters:
      - description: The ID of the element.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "Associated values to return in the response, separated by semicolons\
          \ (;). This call supports DataReference to return attributes with data references.\
          \ If this parameter is not specified, DataReference values are not returned."
        in: query
        name: associations
        schema:
          type: string
      - description: Specify that returned attributes must have this category. The
          default is no category filter.
        in: query
        name: categoryName
        schema:
          type: string
      - description: The maximum number of objects to be returned per call (page size).
          The default is 1000.
        in: query
        name: maxCount
        schema:
          type: integer
      - description: The name query string used for finding attributes. The default
          is no filter.
        in: query
        name: nameFilter
        schema:
          type: string
      - description: Specifies if the search should include attributes nested further
          than the immediate attributes of the searchRoot. The default is 'false'.
        in: query
        name: searchFullHierarchy
        schema:
          type: boolean
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Specified if the search should include attributes with the Excluded
          property set. The default is 'false'.
        in: query
        name: showExcluded
        schema:
          type: boolean
      - description: Specified if the search should include attributes with the Hidden
          property set. The default is 'false'.
        in: query
        name: showHidden
        schema:
          type: boolean
      - description: The field or property of the object used to sort the returned
          collection. The default is 'Name'.
        in: query
        name: sortField
        schema:
          type: string
      - description: The order that the returned collection is sorted. The default
          is 'Ascending'.
        in: query
        name: sortOrder
        schema:
          type: string
      - description: The starting index (zero based) of the items to be returned.
          The default is 0.
        in: query
        name: startIndex
        schema:
          type: integer
      - description: Specify that returned attributes must be members of this template.
          The default is no template filter.
        in: query
        name: templateName
        schema:
          type: string
      - description: The name of the attribute trait. Multiple traits may be specified
          with multiple instances of the parameter.
        explode: true
        in: query
        name: trait
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "The category of the attribute traits. Multiple categories may\
          \ be specified with multiple instances of the parameter. If the parameter\
          \ is not specified, or if its value is \"all\", then all attribute traits\
          \ of all categories will be returned."
        explode: true
        in: query
        name: traitCategory
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Specify that returned attributes' value type must be the given
          value type. The default is no value type filter.
        in: query
        name: valueType
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[Attribute]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[Attribute]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[Attribute]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[Attribute]"
          description: A list of child attributes.
      summary: Get the attributes of the specified element.
      tags:
      - Element
      x-openapi-router-controller: openapi_server.controllers.element_controller
    post:
      deprecated: false
      operationId: element_create_attribute
      parameters:
      - description: The ID of the element on which to create the attribute.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Attribute'
          text/json:
            schema:
              $ref: '#/components/schemas/Attribute'
        description: The definition of the new attribute.
        required: true
        x-body-name: attribute
      responses:
        "201":
          content: {}
          description: The attribute was created. The response's Location header is
            a link to the created attribute.
      summary: Create a new attribute of the specified element.
      tags:
      - Element
      x-codegen-request-body-name: attribute
      x-openapi-router-controller: openapi_server.controllers.element_controller
  /elements/{webId}/categories:
    get:
      deprecated: false
      operationId: element_get_categories
      parameters:
      - description: The ID of the element.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[ElementCategory]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[ElementCategory]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[ElementCategory]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[ElementCategory]"
          description: A list of categories.
      summary: Get an element's categories.
      tags:
      - Element
      x-openapi-router-controller: openapi_server.controllers.element_controller
  /elements/{webId}/config:
    post:
      deprecated: false
      operationId: element_create_config
      parameters:
      - description: The ID of the element.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "If true, includes the child elements of the specified element."
        in: query
        name: includeChildElements
        schema:
          type: boolean
      responses:
        "200":
          content: {}
          description: Process log of operations. Operations completed with no errors.
        "207":
          content: {}
          description: Process log of operations. Operations completed with errors.
      summary: "Executes the create configuration function of the data references\
        \ found within the attributes of the element, and optionally, its children."
      tags:
      - Element
      x-openapi-router-controller: openapi_server.controllers.element_controller
  /elements/{webId}/elementattributes:
    get:
      deprecated: false
      operationId: element_find_element_attributes
      parameters:
      - description: The ID of the element to use as the root of the search.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "Associated values to return in the response, separated by semicolons\
          \ (;). This call supports DataReference to return attributes with data references.\
          \ If this parameter is not specified, DataReference values are not returned."
        in: query
        name: associations
        schema:
          type: string
      - description: Specify that returned attributes must have this category. The
          default is no filter.
        in: query
        name: attributeCategory
        schema:
          type: string
      - description: "The attribute description filter string used for finding objects.\
          \ Only the first 440 characters of the description will be searched. For\
          \ Asset Servers older than 2.7, a 400 status code (Bad Request) will be\
          \ returned if this parameter is specified. The default is no filter."
        in: query
        name: attributeDescriptionFilter
        schema:
          type: string
      - description: The attribute name filter string used for finding objects. The
          default is no filter.
        in: query
        name: attributeNameFilter
        schema:
          type: string
      - description: Specify that returned attributes' value type must be this value
          type. The default is no filter.
        in: query
        name: attributeType
        schema:
          type: string
      - description: Specify that the owner of the returned attributes must have this
          category. The default is no filter.
        in: query
        name: elementCategory
        schema:
          type: string
      - description: "The element description filter string used for finding objects.\
          \ Only the first 440 characters of the description will be searched. For\
          \ Asset Servers older than 2.7, a 400 status code (Bad Request) will be\
          \ returned if this parameter is specified. The default is no filter."
        in: query
        name: elementDescriptionFilter
        schema:
          type: string
      - description: The element name filter string used for finding objects. The
          default is no filter.
        in: query
        name: elementNameFilter
        schema:
          type: string
      - description: Specify that the owner of the returned attributes must have this
          template or a template derived from this template. The default is no filter.
        in: query
        name: elementTemplate
        schema:
          type: string
      - description: Specify that the element of the returned attributes must have
          this AFElementType. The default is no filter.
        in: query
        name: elementType
        schema:
          type: string
      - description: The maximum number of objects to be returned (the page size).
          The default is 1000.
        in: query
        name: maxCount
        schema:
          type: integer
      - description: Specifies if the search should include objects nested further
          than immediate children of the given resource. The default is 'false'.
        in: query
        name: searchFullHierarchy
        schema:
          type: boolean
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: The field or property of the object used to sort the returned
          collection. The default is 'Name'.
        in: query
        name: sortField
        schema:
          type: string
      - description: The order that the returned collection is sorted. The default
          is 'Ascending'.
        in: query
        name: sortOrder
        schema:
          type: string
      - description: The starting index (zero based) of the items to be returned.
          The default is 0.
        in: query
        name: startIndex
        schema:
          type: integer
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[Attribute]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[Attribute]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[Attribute]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[Attribute]"
          description: a list of matching attributes.
      summary: Retrieves a list of element attributes matching the specified filters
        from the specified element.
      tags:
      - Element
      x-openapi-router-controller: openapi_server.controllers.element_controller
  /elements/{webId}/elements:
    get:
      deprecated: false
      description: "Users can search for the elements based on specific search parameters.\
        \ If no parameters are specified in the search, the default values for each\
        \ parameter will be used and will return the elements that match the default\
        \ search."
      operationId: element_get_elements
      parameters:
      - description: The ID of the element to use as the root of the search.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "Associated values to return in the response, separated by semicolons\
          \ (;). This call supports Paths to return all paths to the element. If this\
          \ parameter is not specified, paths are not returned."
        in: query
        name: associations
        schema:
          type: string
      - description: Specify that returned elements must have this category. The default
          is no category filter.
        in: query
        name: categoryName
        schema:
          type: string
      - description: Specify that returned elements must have this description. The
          default is no description filter.
        in: query
        name: descriptionFilter
        schema:
          type: string
      - description: Specify that returned elements must have this type. The default
          type is 'Any'.
        in: query
        name: elementType
        schema:
          type: string
      - description: The maximum number of objects to be returned per call (page size).
          The default is 1000.
        in: query
        name: maxCount
        schema:
          type: integer
      - description: The name query string used for finding objects. The default is
          no filter.
        in: query
        name: nameFilter
        schema:
          type: string
      - description: Specifies if the search should include objects nested further
          than the immediate children of the searchRoot. The default is 'false'.
        in: query
        name: searchFullHierarchy
        schema:
          type: boolean
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: The field or property of the object used to sort the returned
          collection. The default is 'Name'.
        in: query
        name: sortField
        schema:
          type: string
      - description: The order that the returned collection is sorted. The default
          is 'Ascending'.
        in: query
        name: sortOrder
        schema:
          type: string
      - description: The starting index (zero based) of the items to be returned.
          The default is 0.
        in: query
        name: startIndex
        schema:
          type: integer
      - description: Specify that returned elements must have this template or a template
          derived from this template. The default is no template filter.
        in: query
        name: templateName
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[Element]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[Element]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[Element]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[Element]"
          description: A list of elements matching the specified conditions.
      summary: "Retrieve elements based on the specified conditions. By default, this\
        \ method selects immediate children of the specified element."
      tags:
      - Element
      x-openapi-router-controller: openapi_server.controllers.element_controller
    post:
      deprecated: false
      operationId: element_create_element
      parameters:
      - description: The ID of the parent element on which to create the element.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Element'
          text/json:
            schema:
              $ref: '#/components/schemas/Element'
        description: The new element definition.
        required: true
        x-body-name: element
      responses:
        "201":
          content: {}
          description: The element was created. The response's Location header is
            a link to the element.
      summary: Create a child element.
      tags:
      - Element
      x-codegen-request-body-name: element
      x-openapi-router-controller: openapi_server.controllers.element_controller
  /elements/{webId}/eventframes:
    get:
      deprecated: false
      operationId: element_get_event_frames
      parameters:
      - description: The ID of the element whose related event frames are sought.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: Specify the returned event frames' canBeAcknowledged property.
          The default is no canBeAcknowledged filter.
        in: query
        name: canBeAcknowledged
        schema:
          type: boolean
      - description: Specify that returned event frames must have this category. The
          default is no category filter.
        in: query
        name: categoryName
        schema:
          type: string
      - description: The ending time for the search. The endTime must be greater than
          or equal to the startTime. The searchMode parameter will control whether
          the comparison will be performed against the event frame's startTime or
          endTime. The default is '*' if searchMode is not one of the 'Backward*'
          or 'Forward*' values.
        in: query
        name: endTime
        schema:
          type: string
      - description: Specify the returned event frames' isAcknowledged property. The
          default no isAcknowledged filter.
        in: query
        name: isAcknowledged
        schema:
          type: boolean
      - description: The maximum number of objects to be returned per call (page size).
          The default is 1000.
        in: query
        name: maxCount
        schema:
          type: integer
      - description: The name query string used for finding event frames. The default
          is no filter.
        in: query
        name: nameFilter
        schema:
          type: string
      - description: "Determines how the startTime and endTime parameters are treated\
          \ when searching for event frame objects to be included in the returned\
          \ collection. If this parameter is one of the 'Backward*' or 'Forward*'\
          \ values, none of endTime, sortField, or sortOrder may be specified. The\
          \ default is 'Overlapped'."
        in: query
        name: searchMode
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Specify that returned event frames must have this severity. Multiple
          severity values may be specified with multiple instances of the parameter.
          The default is no severity filter.
        explode: true
        in: query
        name: severity
        schema:
          items:
            type: string
          type: array
        style: form
      - description: The field or property of the object used to sort the returned
          collection. The default is 'Name' if searchMode is not one of the 'Backward*'
          or 'Forward*' values.
        in: query
        name: sortField
        schema:
          type: string
      - description: The order that the returned collection is sorted. The default
          is 'Ascending' if searchMode is not one of the 'Backward*' or 'Forward*'
          values.
        in: query
        name: sortOrder
        schema:
          type: string
      - description: The starting index (zero based) of the items to be returned.
          The default is 0.
        in: query
        name: startIndex
        schema:
          type: integer
      - description: The starting time for the search. startTime must be less than
          or equal to the endTime. The searchMode parameter will control whether the
          comparison will be performed against the event frame's startTime or endTime.
          The default is '*-8h'.
        in: query
        name: startTime
        schema:
          type: string
      - description: Specify that returned event frames must have this template or
          a template derived from this template. The default is no template filter.
          Specify this parameter by name.
        in: query
        name: templateName
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[EventFrame]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[EventFrame]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[EventFrame]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[EventFrame]"
          description: A list of event frames matching the specified conditions.
      summary: "Retrieve event frames that reference this element based on the specified\
        \ conditions. By default, returns all event frames that reference this element\
        \ that have been active in the past 8 hours."
      tags:
      - Element
      x-openapi-router-controller: openapi_server.controllers.element_controller
  /elements/{webId}/notificationrules:
    get:
      deprecated: false
      operationId: element_get_notification_rules
      parameters:
      - description: The ID of the resource to use as the root of the search.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[NotificationRule]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[NotificationRule]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[NotificationRule]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[NotificationRule]"
          description: A list of notification rules.
      summary: Retrieve notification rules for an element
      tags:
      - Element
      x-openapi-router-controller: openapi_server.controllers.element_controller
    post:
      deprecated: false
      operationId: element_create_notification_rule
      parameters:
      - description: The ID of the element on which to create the notification rule.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationRule'
          text/json:
            schema:
              $ref: '#/components/schemas/NotificationRule'
        description: The new notification rule.
        required: true
        x-body-name: notificationRule
      responses:
        "201":
          content: {}
          description: The notification rule was created. The response's Location
            header is a link to the notification rule.
      summary: Create a notification rule.
      tags:
      - Element
      x-codegen-request-body-name: notificationRule
      x-openapi-router-controller: openapi_server.controllers.element_controller
  /elements/{webId}/paths:
    get:
      deprecated: false
      description: "This method will return paths with the primary path at the first\
        \ index. If there is no primary path, then null will be at the first index.\
        \ If relative path is specified but does not exist, null will be returned\
        \ at the first index."
      operationId: element_get_paths
      parameters:
      - description: The ID of the element.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "The full path in ShortName format to the parent object that\
          \ the returned paths should be relative. For example, \"\\\\Server1\\Database2\"\
          \ would return all the paths to the element relative to the database. A\
          \ path of \"\\\\Server1\\Database2\\RootElement\" would return all paths\
          \ to the element relative to \"RootElement\". If null, then all the full\
          \ paths to the element will be returned."
        in: query
        name: relativePath
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[string]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[string]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[string]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[string]"
          description: A list of the full or relative paths to this element.
      summary: Get a list of the full or relative paths to this element.
      tags:
      - Element
      x-openapi-router-controller: openapi_server.controllers.element_controller
  /elements/{webId}/referencedelements:
    delete:
      deprecated: false
      operationId: element_remove_referenced_element
      parameters:
      - description: The ID of the element which the referenced element will be removed
          from.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: The ID of the referenced element. Multiple referenced elements
          may be specified with multiple instances of the parameter.
        explode: true
        in: query
        name: referencedElementWebId
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "204":
          content: {}
          description: The referenced element was successfully removed.
      summary: Remove a reference to an existing element from the child elements collection.
      tags:
      - Element
      x-openapi-router-controller: openapi_server.controllers.element_controller
    get:
      deprecated: false
      description: "Users can search for the referenced elements based on specific\
        \ search parameters. If no parameters are specified in the search, the default\
        \ values for each parameter will be used and will return the elements that\
        \ match the default search."
      operationId: element_get_referenced_elements
      parameters:
      - description: The ID of the resource to use as the root of the search.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "Associated values to return in the response, separated by semicolons\
          \ (;). This call supports Paths to return all paths to the element. If this\
          \ parameter is not specified, paths are not returned."
        in: query
        name: associations
        schema:
          type: string
      - description: Specify that returned elements must have this category. The default
          is no category filter.
        in: query
        name: categoryName
        schema:
          type: string
      - description: Specify that returned elements must have this description. The
          default is no description filter.
        in: query
        name: descriptionFilter
        schema:
          type: string
      - description: Specify that returned elements must have this type. The default
          type is 'Any'.
        in: query
        name: elementType
        schema:
          type: string
      - description: The maximum number of objects to be returned per call (page size).
          The default is 1000.
        in: query
        name: maxCount
        schema:
          type: integer
      - description: The name query string used for finding objects. The default is
          no filter.
        in: query
        name: nameFilter
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: The field or property of the object used to sort the returned
          collection. The default is 'Name'.
        in: query
        name: sortField
        schema:
          type: string
      - description: The order that the returned collection is sorted. The default
          is 'Ascending'.
        in: query
        name: sortOrder
        schema:
          type: string
      - description: The starting index (zero based) of the items to be returned.
          The default is 0.
        in: query
        name: startIndex
        schema:
          type: integer
      - description: Specify that returned elements must have this template or a template
          derived from this template. The default is no template filter.
        in: query
        name: templateName
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[Element]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[Element]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[Element]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[Element]"
          description: A list of referenced elements matching the specified conditions.
      summary: "Retrieve referenced elements based on the specified conditions. By\
        \ default, this method selects all referenced elements of the current resource."
      tags:
      - Element
      x-openapi-router-controller: openapi_server.controllers.element_controller
    post:
      deprecated: false
      operationId: element_add_referenced_element
      parameters:
      - description: The ID of the element which the referenced element will be added
          to.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: The ID of the referenced element. Multiple referenced elements
          may be specified with multiple instances of the parameter.
        explode: true
        in: query
        name: referencedElementWebId
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: The name of the reference type between the parent and the referenced
          element. The default is "parent-child".
        in: query
        name: referenceType
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The referenced element was successfully added.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: The referenced element already exists in the collection.
      summary: Add a reference to an existing element to the child elements collection.
      tags:
      - Element
      x-openapi-router-controller: openapi_server.controllers.element_controller
  /elements/{webId}/security:
    get:
      deprecated: false
      operationId: element_get_security
      parameters:
      - description: The ID of the element for the security to be checked.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "The user identity for the security information to be checked.\
          \ Multiple security identities may be specified with multiple instances\
          \ of the parameter. If the parameter is not specified, only the current\
          \ user's security rights will be returned."
        explode: true
        in: query
        name: userIdentity
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Indicates if the security cache should be refreshed before getting
          security information. The default is 'false'.
        in: query
        name: forceRefresh
        schema:
          type: boolean
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[SecurityRights]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[SecurityRights]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[SecurityRights]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[SecurityRights]"
          description: Security rights.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: An invalid or local account is specified as the user identity.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Access denied for the specified user identity.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Unsupported when using Anonymous authentication method.
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Failed to retrieve the specified user identity.
      summary: Get the security information of the specified security item associated
        with the element for a specified user.
      tags:
      - Element
      x-openapi-router-controller: openapi_server.controllers.element_controller
  /elements/{webId}/securityentries:
    get:
      deprecated: false
      operationId: element_get_security_entries
      parameters:
      - description: The ID of the element.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: The name query string used for filtering security entries. The
          default is no filter.
        in: query
        name: nameFilter
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[SecurityEntry]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[SecurityEntry]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[SecurityEntry]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[SecurityEntry]"
          description: A list of security entries matching the specified condition.
      summary: "Retrieve the security entries associated with the element based on\
        \ the specified criteria. By default, all security entries for this element\
        \ are returned."
      tags:
      - Element
      x-openapi-router-controller: openapi_server.controllers.element_controller
    post:
      deprecated: false
      operationId: element_create_security_entry
      parameters:
      - description: The ID of the element where the security entry will be created.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "If false, the new access permissions are only applied to the\
          \ associated object. If true, the access permissions of children with any\
          \ parent-child reference types will change when the permissions on the primary\
          \ parent change."
        in: query
        name: applyToChildren
        schema:
          type: boolean
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityEntry'
          text/json:
            schema:
              $ref: '#/components/schemas/SecurityEntry'
        description: The new security entry definition. The full list of allow and
          deny rights must be supplied.
        required: true
        x-body-name: securityEntry
      responses:
        "201":
          content: {}
          description: The security entry was created. The response's Location header
            is a link to the security entry.
      summary: Create a security entry owned by the element.
      tags:
      - Element
      x-codegen-request-body-name: securityEntry
      x-openapi-router-controller: openapi_server.controllers.element_controller
  /elements/{webId}/securityentries/{name}:
    delete:
      deprecated: false
      operationId: element_delete_security_entry
      parameters:
      - description: "The name of the security entry. For every backslash character\
          \ (\\) in the security entry name, replace with asterisk (*). As an example,\
          \ use domain*username instead of domain\\username."
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: The ID of the element where the security entry will be deleted.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "If false, the new access permissions are only applied to the\
          \ associated object. If true, the access permissions of children with any\
          \ parent-child reference types will change when the permissions on the primary\
          \ parent change."
        in: query
        name: applyToChildren
        schema:
          type: boolean
      responses:
        "204":
          content: {}
          description: The security entry was deleted.
      summary: Delete a security entry owned by the element.
      tags:
      - Element
      x-openapi-router-controller: openapi_server.controllers.element_controller
    get:
      deprecated: false
      operationId: element_get_security_entry_by_name
      parameters:
      - description: "The name of the security entry. For every backslash character\
          \ (\\) in the security entry name, replace with asterisk (*). As an example,\
          \ use domain*username instead of domain\\username."
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: The ID of the element.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityEntry'
            text/json:
              schema:
                $ref: '#/components/schemas/SecurityEntry'
            text/html:
              schema:
                $ref: '#/components/schemas/SecurityEntry'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/SecurityEntry'
          description: The security entry matching the specified condition.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: The security entry with the specified name is not found.
      summary: Retrieve the security entry associated with the element with the specified
        name.
      tags:
      - Element
      x-openapi-router-controller: openapi_server.controllers.element_controller
    put:
      deprecated: false
      operationId: element_update_security_entry
      parameters:
      - description: The name of the security entry.
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: The ID of the element where the security entry will be updated.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "If false, the new access permissions are only applied to the\
          \ associated object. If true, the access permissions of children with any\
          \ parent-child reference types will change when the permissions on the primary\
          \ parent change."
        in: query
        name: applyToChildren
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityEntry'
          text/json:
            schema:
              $ref: '#/components/schemas/SecurityEntry'
        description: The new security entry definition. The full list of allow and
          deny rights must be supplied or they will be removed.
        required: true
        x-body-name: securityEntry
      responses:
        "204":
          content: {}
          description: The security entry was updated.
      summary: Update a security entry owned by the element.
      tags:
      - Element
      x-codegen-request-body-name: securityEntry
      x-openapi-router-controller: openapi_server.controllers.element_controller
  /elementtemplates:
    get:
      deprecated: false
      description: "This method returns an element template based on the hierarchical\
        \ path associated with it, and should be used when a path has been received\
        \ from a separate part of the PI System for use in the PI Web API. Users should\
        \ primarily search with the WebID when available."
      operationId: element_template_get_by_path
      parameters:
      - description: The path to the element template.
        in: query
        name: path
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElementTemplate'
            text/json:
              schema:
                $ref: '#/components/schemas/ElementTemplate'
            text/html:
              schema:
                $ref: '#/components/schemas/ElementTemplate'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/ElementTemplate'
          description: The specified element template.
      summary: Retrieve an element template by path.
      tags:
      - ElementTemplate
      x-openapi-router-controller: openapi_server.controllers.element_template_controller
  /elementtemplates/{webId}:
    delete:
      deprecated: false
      description: Deleting an element template will delete all associated templated
        data from elements which were created from it.
      operationId: element_template_delete
      parameters:
      - description: The ID of the element template to update.
        in: path
        name: webId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The element template was deleted.
      summary: Delete an element template.
      tags:
      - ElementTemplate
      x-openapi-router-controller: openapi_server.controllers.element_template_controller
    get:
      deprecated: false
      operationId: element_template_get
      parameters:
      - description: The ID of the element template.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ElementTemplate'
            text/json:
              schema:
                $ref: '#/components/schemas/ElementTemplate'
            text/html:
              schema:
                $ref: '#/components/schemas/ElementTemplate'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/ElementTemplate'
          description: The specified element template.
      summary: Retrieve an element template.
      tags:
      - ElementTemplate
      x-openapi-router-controller: openapi_server.controllers.element_template_controller
    patch:
      deprecated: false
      description: Updating the InstanceType property of an element template will
        not affect any elements that have already been created from this template;
        it will only affect any future elements created from this template. All other
        changes will be propagated to elements based on this template.
      operationId: element_template_update
      parameters:
      - description: The ID of the element template to update.
        in: path
        name: webId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ElementTemplate'
          text/json:
            schema:
              $ref: '#/components/schemas/ElementTemplate'
        description: A partial element template containing the desired changes.
        required: true
        x-body-name: template
      responses:
        "204":
          content: {}
          description: The element template was updated.
      summary: Update an element template by replacing items in its definition.
      tags:
      - ElementTemplate
      x-codegen-request-body-name: template
      x-openapi-router-controller: openapi_server.controllers.element_template_controller
  /elementtemplates/{webId}/analysistemplates:
    get:
      deprecated: false
      operationId: element_template_get_analysis_templates
      parameters:
      - description: The ID of the element template.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[AnalysisTemplate]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[AnalysisTemplate]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[AnalysisTemplate]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[AnalysisTemplate]"
          description: A list of analysis templates for the specified element template.
      summary: Get analysis templates for an element template.
      tags:
      - ElementTemplate
      x-openapi-router-controller: openapi_server.controllers.element_template_controller
  /elementtemplates/{webId}/attributetemplates:
    get:
      deprecated: false
      description: "If 'showInherited' and 'showDescendants' are 'true', it returns\
        \ all the attribute templates from current element template and the base template.\
        \  If 'showInherited' is 'false', it returns all the attribute templates from\
        \ the current element template."
      operationId: element_template_get_attribute_templates
      parameters:
      - description: The ID of the element template.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "When 'true', a Depth First traversal will be performed; this\
          \ starts at the root and explores as far as possible along each branch before\
          \ backtracking. When 'false', a Breadth First traversal will be performed;\
          \ this starts at the tree root and explores the neighbor nodes first, then\
          \ moves onto the next level of neighbors. The default is 'false' (Breadth\
          \ First)."
        in: query
        name: depthFirstTraverse
        schema:
          type: boolean
      - description: The maximum number of objects to be returned. The default is
          1000.
        in: query
        name: maxCount
        schema:
          type: integer
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: "Specifies if the result should include all descendant attribute\
          \ templates from the current element template, even indirect ones. The default\
          \ is 'false'."
        in: query
        name: showDescendants
        schema:
          type: boolean
      - description: Specifies if the result should include attribute templates inherited
          from base element templates. The default is 'false'.
        in: query
        name: showInherited
        schema:
          type: boolean
      - description: The starting index (zero based) of the items to be returned.
          The default is 0.
        in: query
        name: startIndex
        schema:
          type: integer
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[AttributeTemplate]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[AttributeTemplate]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[AttributeTemplate]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[AttributeTemplate]"
          description: A list of attribute templates for the specified element template.
      summary: Get child attribute templates for an element template.
      tags:
      - ElementTemplate
      x-openapi-router-controller: openapi_server.controllers.element_template_controller
    post:
      deprecated: false
      operationId: element_template_create_attribute_template
      parameters:
      - description: The ID of the element template on which to create the attribute
          template.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttributeTemplate'
          text/json:
            schema:
              $ref: '#/components/schemas/AttributeTemplate'
        description: The attribute template definition.
        required: true
        x-body-name: template
      responses:
        "201":
          content: {}
          description: The attribute template was created. The response's Location
            header is a link to the created resource.
      summary: Create an attribute template.
      tags:
      - ElementTemplate
      x-codegen-request-body-name: template
      x-openapi-router-controller: openapi_server.controllers.element_template_controller
  /elementtemplates/{webId}/baseelementtemplates:
    get:
      deprecated: false
      description: "The root template will be returned first, followed by successive\
        \ templates in the inheritance chain."
      operationId: element_template_get_base_element_templates
      parameters:
      - description: The ID of the element template.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: The maximum number of objects to be returned. The default is
          1000.
        in: query
        name: maxCount
        schema:
          type: integer
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[ElementTemplate]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[ElementTemplate]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[ElementTemplate]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[ElementTemplate]"
          description: A list of base element templates for the specified element
            template.
      summary: Get base element templates for an element template.
      tags:
      - ElementTemplate
      x-openapi-router-controller: openapi_server.controllers.element_template_controller
  /elementtemplates/{webId}/categories:
    get:
      deprecated: false
      operationId: element_template_get_categories
      parameters:
      - description: The ID of the element template.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Specifies if the result should include categories inherited from
          base element templates. The default is 'false'.
        in: query
        name: showInherited
        schema:
          type: boolean
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[ElementCategory]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[ElementCategory]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[ElementCategory]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[ElementCategory]"
          description: A list of categories.
      summary: Get an element template's categories.
      tags:
      - ElementTemplate
      x-openapi-router-controller: openapi_server.controllers.element_template_controller
  /elementtemplates/{webId}/derivedelementtemplates:
    get:
      deprecated: false
      operationId: element_template_get_derived_element_templates
      parameters:
      - description: The ID of the element template.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: The maximum number of objects to be returned. The default is
          1000.
        in: query
        name: maxCount
        schema:
          type: integer
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: "Specifies if the result should include all descendant element\
          \ templates from the current element template, even indirect ones. The default\
          \ is 'false'."
        in: query
        name: showDescendants
        schema:
          type: boolean
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[ElementTemplate]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[ElementTemplate]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[ElementTemplate]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[ElementTemplate]"
          description: A list of derived element templates for the specified element
            template.
      summary: Get derived element templates for an element template.
      tags:
      - ElementTemplate
      x-openapi-router-controller: openapi_server.controllers.element_template_controller
  /elementtemplates/{webId}/notificationruletemplates:
    get:
      deprecated: false
      operationId: element_template_get_notification_rule_templates
      parameters:
      - description: The ID of the element template.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[NotificationRuleTemplate]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[NotificationRuleTemplate]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[NotificationRuleTemplate]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[NotificationRuleTemplate]"
          description: A list of notification rule templates.
      summary: Get notification rule templates for an element template
      tags:
      - ElementTemplate
      x-openapi-router-controller: openapi_server.controllers.element_template_controller
    post:
      deprecated: false
      operationId: element_template_create_notification_rule_template
      parameters:
      - description: The ID of the element on which to create the notification rule
          template.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationRuleTemplate'
          text/json:
            schema:
              $ref: '#/components/schemas/NotificationRuleTemplate'
        description: The new notification rule template.
        required: true
        x-body-name: notificationRuleTemplate
      responses:
        "201":
          content: {}
          description: The notification rule template was created. The response's
            Location header is a link to the notification rule template.
      summary: Create a notification rule template.
      tags:
      - ElementTemplate
      x-codegen-request-body-name: notificationRuleTemplate
      x-openapi-router-controller: openapi_server.controllers.element_template_controller
  /elementtemplates/{webId}/security:
    get:
      deprecated: false
      operationId: element_template_get_security
      parameters:
      - description: The ID of the element template for the security to be checked.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "The user identity for the security information to be checked.\
          \ Multiple security identities may be specified with multiple instances\
          \ of the parameter. If the parameter is not specified, only the current\
          \ user's security rights will be returned."
        explode: true
        in: query
        name: userIdentity
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Indicates if the security cache should be refreshed before getting
          security information. The default is 'false'.
        in: query
        name: forceRefresh
        schema:
          type: boolean
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[SecurityRights]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[SecurityRights]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[SecurityRights]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[SecurityRights]"
          description: Security rights.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: An invalid or local account is specified as the user identity.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Access denied for the specified user identity.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Unsupported when using Anonymous authentication method.
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Failed to retrieve the specified user identity.
      summary: Get the security information of the specified security item associated
        with the element template for a specified user.
      tags:
      - ElementTemplate
      x-openapi-router-controller: openapi_server.controllers.element_template_controller
  /elementtemplates/{webId}/securityentries:
    get:
      deprecated: false
      operationId: element_template_get_security_entries
      parameters:
      - description: The ID of the element template.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: The name query string used for filtering security entries. The
          default is no filter.
        in: query
        name: nameFilter
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[SecurityEntry]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[SecurityEntry]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[SecurityEntry]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[SecurityEntry]"
          description: A list of security entries matching the specified condition.
      summary: "Retrieve the security entries associated with the element template\
        \ based on the specified criteria. By default, all security entries for this\
        \ element template are returned."
      tags:
      - ElementTemplate
      x-openapi-router-controller: openapi_server.controllers.element_template_controller
    post:
      deprecated: false
      operationId: element_template_create_security_entry
      parameters:
      - description: The ID of the element template where the security entry will
          be created.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "If false, the new access permissions are only applied to the\
          \ associated object. If true, the access permissions of children with any\
          \ parent-child reference types will change when the permissions on the primary\
          \ parent change."
        in: query
        name: applyToChildren
        schema:
          type: boolean
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityEntry'
          text/json:
            schema:
              $ref: '#/components/schemas/SecurityEntry'
        description: The new security entry definition. The full list of allow and
          deny rights must be supplied.
        required: true
        x-body-name: securityEntry
      responses:
        "201":
          content: {}
          description: The security entry was created. The response's Location header
            is a link to the security entry.
      summary: Create a security entry owned by the element template.
      tags:
      - ElementTemplate
      x-codegen-request-body-name: securityEntry
      x-openapi-router-controller: openapi_server.controllers.element_template_controller
  /elementtemplates/{webId}/securityentries/{name}:
    delete:
      deprecated: false
      operationId: element_template_delete_security_entry
      parameters:
      - description: "The name of the security entry. For every backslash character\
          \ (\\) in the security entry name, replace with asterisk (*). As an example,\
          \ use domain*username instead of domain\\username."
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: The ID of the element template where the security entry will
          be deleted.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "If false, the new access permissions are only applied to the\
          \ associated object. If true, the access permissions of children with any\
          \ parent-child reference types will change when the permissions on the primary\
          \ parent change."
        in: query
        name: applyToChildren
        schema:
          type: boolean
      responses:
        "204":
          content: {}
          description: The security entry was deleted.
      summary: Delete a security entry owned by the element template.
      tags:
      - ElementTemplate
      x-openapi-router-controller: openapi_server.controllers.element_template_controller
    get:
      deprecated: false
      operationId: element_template_get_security_entry_by_name
      parameters:
      - description: "The name of the security entry. For every backslash character\
          \ (\\) in the security entry name, replace with asterisk (*). As an example,\
          \ use domain*username instead of domain\\username."
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: The ID of the element template.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[SecurityEntry]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[SecurityEntry]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[SecurityEntry]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[SecurityEntry]"
          description: The security entry matching the specified condition.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: The security entry with the specified name is not found.
      summary: Retrieve the security entry associated with the element template with
        the specified name.
      tags:
      - ElementTemplate
      x-openapi-router-controller: openapi_server.controllers.element_template_controller
    put:
      deprecated: false
      operationId: element_template_update_security_entry
      parameters:
      - description: The name of the security entry.
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: The ID of the element template where the security entry will
          be updated.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "If false, the new access permissions are only applied to the\
          \ associated object. If true, the access permissions of children with any\
          \ parent-child reference types will change when the permissions on the primary\
          \ parent change."
        in: query
        name: applyToChildren
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityEntry'
          text/json:
            schema:
              $ref: '#/components/schemas/SecurityEntry'
        description: The new security entry definition. The full list of allow and
          deny rights must be supplied or they will be removed.
        required: true
        x-body-name: securityEntry
      responses:
        "204":
          content: {}
          description: The security entry was updated.
      summary: Update a security entry owned by the element template.
      tags:
      - ElementTemplate
      x-codegen-request-body-name: securityEntry
      x-openapi-router-controller: openapi_server.controllers.element_template_controller
  /enumerationsets:
    get:
      deprecated: false
      description: "This method returns an enumeration set based on the hierarchical\
        \ path associated with it, and should be used when a path has been received\
        \ from a separate part of the PI System for use in the PI Web API. Users should\
        \ primarily search with the WebID when available."
      operationId: enumeration_set_get_by_path
      parameters:
      - description: The path to the target enumeration set.
        in: query
        name: path
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnumerationSet'
            text/json:
              schema:
                $ref: '#/components/schemas/EnumerationSet'
            text/html:
              schema:
                $ref: '#/components/schemas/EnumerationSet'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/EnumerationSet'
          description: The specified enumeration set.
      summary: Retrieve an enumeration set by path.
      tags:
      - EnumerationSet
      x-openapi-router-controller: openapi_server.controllers.enumeration_set_controller
  /enumerationsets/{webId}:
    delete:
      deprecated: false
      operationId: enumeration_set_delete
      parameters:
      - description: The ID of the enumeration set to delete.
        in: path
        name: webId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The enumeration set was deleted.
      summary: Delete an enumeration set.
      tags:
      - EnumerationSet
      x-openapi-router-controller: openapi_server.controllers.enumeration_set_controller
    get:
      deprecated: false
      operationId: enumeration_set_get
      parameters:
      - description: The ID of the enumeration set.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnumerationSet'
            text/json:
              schema:
                $ref: '#/components/schemas/EnumerationSet'
            text/html:
              schema:
                $ref: '#/components/schemas/EnumerationSet'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/EnumerationSet'
          description: The specified enumeration sets.
      summary: Retrieve an enumeration set.
      tags:
      - EnumerationSet
      x-openapi-router-controller: openapi_server.controllers.enumeration_set_controller
    patch:
      deprecated: false
      operationId: enumeration_set_update
      parameters:
      - description: The ID of the enumeration set to update.
        in: path
        name: webId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnumerationSet'
          text/json:
            schema:
              $ref: '#/components/schemas/EnumerationSet'
        description: A partial enumeration set containing the desired changes.
        required: true
        x-body-name: enumerationSet
      responses:
        "204":
          content: {}
          description: The enumeration set was updated.
      summary: Update an enumeration set by replacing items in its definition.
      tags:
      - EnumerationSet
      x-codegen-request-body-name: enumerationSet
      x-openapi-router-controller: openapi_server.controllers.enumeration_set_controller
  /enumerationsets/{webId}/enumerationvalues:
    get:
      deprecated: false
      operationId: enumeration_set_get_values
      parameters:
      - description: The ID of the enumeration set.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[EnumerationValue]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[EnumerationValue]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[EnumerationValue]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[EnumerationValue]"
          description: The specified enumeration set's values
      summary: Retrieve an enumeration set's values.
      tags:
      - EnumerationSet
      x-openapi-router-controller: openapi_server.controllers.enumeration_set_controller
    post:
      deprecated: false
      operationId: enumeration_set_create_value
      parameters:
      - description: The ID of the enumeration set on which to create the enumeration
          value.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnumerationValue'
          text/json:
            schema:
              $ref: '#/components/schemas/EnumerationValue'
        description: The new enumeration value definition.
        required: true
        x-body-name: enumerationValue
      responses:
        "201":
          content: {}
          description: The enumeration value was created. The response's Location
            header is a link to the enumeration value.
      summary: Create an enumeration value for a enumeration set.
      tags:
      - EnumerationSet
      x-codegen-request-body-name: enumerationValue
      x-openapi-router-controller: openapi_server.controllers.enumeration_set_controller
  /enumerationsets/{webId}/security:
    get:
      deprecated: false
      operationId: enumeration_set_get_security
      parameters:
      - description: The ID of the enumeration set for the security to be checked.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "The user identity for the security information to be checked.\
          \ Multiple security identities may be specified with multiple instances\
          \ of the parameter. If the parameter is not specified, only the current\
          \ user's security rights will be returned."
        explode: true
        in: query
        name: userIdentity
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Indicates if the security cache should be refreshed before getting
          security information. The default is 'false'.
        in: query
        name: forceRefresh
        schema:
          type: boolean
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[SecurityRights]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[SecurityRights]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[SecurityRights]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[SecurityRights]"
          description: Security rights.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: An invalid or local account is specified as the user identity.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Access denied for the specified user identity.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Unsupported when using Anonymous authentication method.
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Failed to retrieve the specified user identity.
      summary: Get the security information of the specified security item associated
        with the enumeration set for a specified user.
      tags:
      - EnumerationSet
      x-openapi-router-controller: openapi_server.controllers.enumeration_set_controller
  /enumerationsets/{webId}/securityentries:
    get:
      deprecated: false
      operationId: enumeration_set_get_security_entries
      parameters:
      - description: The ID of the enumeration set.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: The name query string used for filtering security entries. The
          default is no filter.
        in: query
        name: nameFilter
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[SecurityEntry]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[SecurityEntry]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[SecurityEntry]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[SecurityEntry]"
          description: A list of security entries matching the specified condition.
      summary: "Retrieve the security entries associated with the enumeration set\
        \ based on the specified criteria. By default, all security entries for this\
        \ enumeration set are returned."
      tags:
      - EnumerationSet
      x-openapi-router-controller: openapi_server.controllers.enumeration_set_controller
    post:
      deprecated: false
      operationId: enumeration_set_create_security_entry
      parameters:
      - description: The ID of the enumeration set where the security entry will be
          created.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "If false, the new access permissions are only applied to the\
          \ associated object. If true, the access permissions of children with any\
          \ parent-child reference types will change when the permissions on the primary\
          \ parent change."
        in: query
        name: applyToChildren
        schema:
          type: boolean
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityEntry'
          text/json:
            schema:
              $ref: '#/components/schemas/SecurityEntry'
        description: The new security entry definition. The full list of allow and
          deny rights must be supplied.
        required: true
        x-body-name: securityEntry
      responses:
        "201":
          content: {}
          description: The security entry was created. The response's Location header
            is a link to the security entry.
      summary: Create a security entry owned by the enumeration set.
      tags:
      - EnumerationSet
      x-codegen-request-body-name: securityEntry
      x-openapi-router-controller: openapi_server.controllers.enumeration_set_controller
  /enumerationsets/{webId}/securityentries/{name}:
    delete:
      deprecated: false
      operationId: enumeration_set_delete_security_entry
      parameters:
      - description: "The name of the security entry. For every backslash character\
          \ (\\) in the security entry name, replace with asterisk (*). As an example,\
          \ use domain*username instead of domain\\username."
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: The ID of the enumeration set where the security entry will be
          deleted.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "If false, the new access permissions are only applied to the\
          \ associated object. If true, the access permissions of children with any\
          \ parent-child reference types will change when the permissions on the primary\
          \ parent change."
        in: query
        name: applyToChildren
        schema:
          type: boolean
      responses:
        "204":
          content: {}
          description: The security entry was deleted.
      summary: Delete a security entry owned by the enumeration set.
      tags:
      - EnumerationSet
      x-openapi-router-controller: openapi_server.controllers.enumeration_set_controller
    get:
      deprecated: false
      operationId: enumeration_set_get_security_entry_by_name
      parameters:
      - description: "The name of the security entry. For every backslash character\
          \ (\\) in the security entry name, replace with asterisk (*). As an example,\
          \ use domain*username instead of domain\\username."
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: The ID of the enumeration set.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityEntry'
            text/json:
              schema:
                $ref: '#/components/schemas/SecurityEntry'
            text/html:
              schema:
                $ref: '#/components/schemas/SecurityEntry'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/SecurityEntry'
          description: The security entry matching the specified condition.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: The security entry with the specified name is not found.
      summary: Retrieve the security entry associated with the enumeration set with
        the specified name.
      tags:
      - EnumerationSet
      x-openapi-router-controller: openapi_server.controllers.enumeration_set_controller
    put:
      deprecated: false
      operationId: enumeration_set_update_security_entry
      parameters:
      - description: The name of the security entry.
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: The ID of the enumeration set where the security entry will be
          updated.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "If false, the new access permissions are only applied to the\
          \ associated object. If true, the access permissions of children with any\
          \ parent-child reference types will change when the permissions on the primary\
          \ parent change."
        in: query
        name: applyToChildren
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityEntry'
          text/json:
            schema:
              $ref: '#/components/schemas/SecurityEntry'
        description: The new security entry definition. The full list of allow and
          deny rights must be supplied or they will be removed.
        required: true
        x-body-name: securityEntry
      responses:
        "204":
          content: {}
          description: The security entry was updated.
      summary: Update a security entry owned by the enumeration set.
      tags:
      - EnumerationSet
      x-codegen-request-body-name: securityEntry
      x-openapi-router-controller: openapi_server.controllers.enumeration_set_controller
  /enumerationvalues:
    get:
      deprecated: false
      description: "This method returns a enumeration value based on the hierarchical\
        \ path associated with it, and should be used when a path has been received\
        \ from a separate part of the PI System for use in the PI Web API. Users should\
        \ primarily search with the WebID when available."
      operationId: enumeration_value_get_by_path
      parameters:
      - description: The path to the target enumeration value.
        in: query
        name: path
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnumerationValue'
            text/json:
              schema:
                $ref: '#/components/schemas/EnumerationValue'
            text/html:
              schema:
                $ref: '#/components/schemas/EnumerationValue'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/EnumerationValue'
          description: The specified enumeration set.
      summary: Retrieve an enumeration value by path.
      tags:
      - EnumerationValue
      x-openapi-router-controller: openapi_server.controllers.enumeration_value_controller
  /enumerationvalues/{webId}:
    delete:
      deprecated: false
      description: Deleting a value will remove it from the enumeration set along
        with any value references within the PI Web API system.
      operationId: enumeration_value_delete_enumeration_value
      parameters:
      - description: The ID of the enumeration value.
        in: path
        name: webId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The enumeration value was deleted.
      summary: Delete an enumeration value from an enumeration set.
      tags:
      - EnumerationValue
      x-openapi-router-controller: openapi_server.controllers.enumeration_value_controller
    get:
      deprecated: false
      operationId: enumeration_value_get
      parameters:
      - description: The ID of the enumeration value.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnumerationValue'
            text/json:
              schema:
                $ref: '#/components/schemas/EnumerationValue'
            text/html:
              schema:
                $ref: '#/components/schemas/EnumerationValue'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/EnumerationValue'
          description: The specified enumeration value mapping
      summary: Retrieve an enumeration value mapping
      tags:
      - EnumerationValue
      x-openapi-router-controller: openapi_server.controllers.enumeration_value_controller
    patch:
      deprecated: false
      operationId: enumeration_value_update_enumeration_value
      parameters:
      - description: The ID of the enumeration value to update.
        in: path
        name: webId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnumerationValue'
          text/json:
            schema:
              $ref: '#/components/schemas/EnumerationValue'
        description: A partial enumeration value containing the desired changes.
        required: true
        x-body-name: enumerationValue
      responses:
        "204":
          content: {}
          description: The enumeration set was updated.
      summary: Update an enumeration value by replacing items in its definition.
      tags:
      - EnumerationValue
      x-codegen-request-body-name: enumerationValue
      x-openapi-router-controller: openapi_server.controllers.enumeration_value_controller
  /eventframes:
    get:
      deprecated: false
      description: "This method returns an event frame based on the hierarchical path\
        \ associated with it, and should be used when a path has been received from\
        \ a separate part of the PI System for use in the PI Web API. Users should\
        \ primarily search with the WebID when available."
      operationId: event_frame_get_by_path
      parameters:
      - description: The path to the event frame.
        in: query
        name: path
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventFrame'
            text/json:
              schema:
                $ref: '#/components/schemas/EventFrame'
            text/html:
              schema:
                $ref: '#/components/schemas/EventFrame'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/EventFrame'
          description: The specified event frame.
      summary: Retrieve an event frame by path.
      tags:
      - EventFrame
      x-openapi-router-controller: openapi_server.controllers.event_frame_controller
  /eventframes/multiple:
    get:
      deprecated: false
      operationId: event_frame_get_multiple
      parameters:
      - description: Specifies if the retrieval processes should be run in parallel
          on the server. This may improve the response time for large amounts of requested
          attributes. The default is 'false'.
        in: query
        name: asParallel
        schema:
          type: boolean
      - description: The include mode for the return list. The default is 'All'.
        in: query
        name: includeMode
        schema:
          type: string
      - description: The path of an event frame. Multiple event frames may be specified
          with multiple instances of the parameter.
        explode: true
        in: query
        name: path
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: The ID of an event frame. Multiple event frames may be specified
          with multiple instances of the parameter.
        explode: true
        in: query
        name: webId
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[Item[EventFrame]]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[Item[EventFrame]]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[Item[EventFrame]]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[Item[EventFrame]]"
          description: The requested event frames
        "207":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[Item[EventFrame]]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[Item[EventFrame]]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[Item[EventFrame]]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[Item[EventFrame]]"
          description: Some or all items contain exceptions.
      summary: Retrieve multiple event frames by web ids or paths.
      tags:
      - EventFrame
      x-openapi-router-controller: openapi_server.controllers.event_frame_controller
  /eventframes/search:
    get:
      deprecated: false
      operationId: event_frame_get_event_frames_query
      parameters:
      - description: The ID of the asset database to use as the root of the query.
        in: query
        name: databaseWebId
        schema:
          type: string
      - description: The maximum number of objects to be returned per call (page size).
          The default is 1000.
        in: query
        name: maxCount
        schema:
          type: integer
      - description: "The query string is a list of filters used to perform an AFSearch\
          \ for the eventframes in the asset database. An example would be: \"query=Name:=MyEventFrame*\
          \ Category:=MyCategory Template:=EFTemplate\"."
        in: query
        name: query
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: The starting index (zero based) of the items to be returned.
          The default is 0.
        in: query
        name: startIndex
        schema:
          type: integer
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[EventFrame]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[EventFrame]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[EventFrame]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[EventFrame]"
          description: A list of event frames matching the specified conditions.
      summary: Retrieve event frames based on the specified conditions. Returns event
        frames using the specified search query string.
      tags:
      - EventFrame
      x-openapi-router-controller: openapi_server.controllers.event_frame_controller
  /eventframes/searchbyattribute:
    post:
      deprecated: false
      operationId: event_frame_create_search_by_attribute
      parameters:
      - description: "If false, the response content will contain the first page of\
          \ the search results. If true, the response content will be empty. The default\
          \ is false."
        in: query
        name: noResults
        schema:
          type: boolean
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchByAttribute'
          text/json:
            schema:
              $ref: '#/components/schemas/SearchByAttribute'
        description: The query of search by attribute.
        required: true
        x-body-name: query
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[EventFrame]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[EventFrame]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[EventFrame]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[EventFrame]"
          description: The link is stored in the response's "Location" header. The
            response content is the first page of the search result by the default
            parameters.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Empty or invalid request content.
        "413":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Request content is too large.
      summary: "Create a link for a \"Search EventFrames By Attribute Value\" operation,\
        \ whose queries are specified in the request content. The SearchRoot is specified\
        \ by the Web Id of the root EventFrame. If the SearchRoot is not specified,\
        \ then the search starts at the Asset Database. ElementTemplate must be provided\
        \ as the Web ID of the ElementTemplate, which are used to create the EventFrames.\
        \ All the attributes in the queries must be defined as AttributeTemplates\
        \ on the ElementTemplate. An array of attribute value queries are ANDed together\
        \ to find the desired Element objects. At least one value query must be specified.\
        \ There are limitations on SearchOperators."
      tags:
      - EventFrame
      x-codegen-request-body-name: query
      x-openapi-router-controller: openapi_server.controllers.event_frame_controller
  /eventframes/searchbyattribute/{searchId}:
    get:
      deprecated: false
      operationId: event_frame_execute_search_by_attribute
      parameters:
      - description: The encoded search Id of the "Search EventFrames By Attribute
          Value" operation.
        in: path
        name: searchId
        required: true
        schema:
          type: string
      - description: Specify the returned event frames' canBeAcknowledged property.
          The default is no canBeAcknowledged filter.
        in: query
        name: canBeAcknowledged
        schema:
          type: boolean
      - description: The ending time for the search. endTime must be greater than
          or equal to the startTime. The searchMode parameter will control whether
          the comparison will be performed against the event frame's startTime or
          endTime. The default is '*'.
        in: query
        name: endTime
        schema:
          type: string
      - description: Specify the returned event frames' isAcknowledged property. The
          default no isAcknowledged filter.
        in: query
        name: isAcknowledged
        schema:
          type: boolean
      - description: The maximum number of objects to be returned per call (page size).
          The default is 1000.
        in: query
        name: maxCount
        schema:
          type: integer
      - description: The name query string used for finding event frames. The default
          is no filter.
        in: query
        name: nameFilter
        schema:
          type: string
      - description: The name query string which must match the name of a referenced
          element. The default is no filter.
        in: query
        name: referencedElementNameFilter
        schema:
          type: string
      - description: Specifies whether the search should include objects nested further
          than the immediate children of the search root. The default is 'false'.
        in: query
        name: searchFullHierarchy
        schema:
          type: boolean
      - description: Determines how the startTime and endTime parameters are treated
          when searching for event frame objects to be included in the returned collection.
          The default is 'Overlapped'.
        in: query
        name: searchMode
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Specify that returned event frames must have this severity. Multiple
          severity values may be specified with multiple instances of the parameter.
          The default is no severity filter.
        explode: true
        in: query
        name: severity
        schema:
          items:
            type: string
          type: array
        style: form
      - description: The field or property of the object used to sort the returned
          collection. The default is 'Name'.
        in: query
        name: sortField
        schema:
          type: string
      - description: The order that the returned collection is sorted. The default
          is 'Ascending'.
        in: query
        name: sortOrder
        schema:
          type: string
      - description: The starting index (zero based) of the items to be returned.
          The default is 0.
        in: query
        name: startIndex
        schema:
          type: integer
      - description: The starting time for the search. startTime must be less than
          or equal to the endTime. The searchMode parameter will control whether the
          comparison will be performed against the event frame's startTime or endTime.
          The default is '*-8h'.
        in: query
        name: startTime
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[EventFrame]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[EventFrame]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[EventFrame]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[EventFrame]"
          description: a list of matching EventFrames.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Invalid search Id or search parameters.
      summary: Execute a "Search EventFrames By Attribute Value" operation.
      tags:
      - EventFrame
      x-openapi-router-controller: openapi_server.controllers.event_frame_controller
  /eventframes/{webId}:
    delete:
      deprecated: false
      operationId: event_frame_delete
      parameters:
      - description: The ID of the event frame to delete.
        in: path
        name: webId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The event frame was deleted.
      summary: Delete an event frame.
      tags:
      - EventFrame
      x-openapi-router-controller: openapi_server.controllers.event_frame_controller
    get:
      deprecated: false
      operationId: event_frame_get
      parameters:
      - description: The ID of the event frame.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventFrame'
            text/json:
              schema:
                $ref: '#/components/schemas/EventFrame'
            text/html:
              schema:
                $ref: '#/components/schemas/EventFrame'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/EventFrame'
          description: The specified event frame.
      summary: Retrieve an event frame.
      tags:
      - EventFrame
      x-openapi-router-controller: openapi_server.controllers.event_frame_controller
    patch:
      deprecated: false
      operationId: event_frame_update
      parameters:
      - description: The ID of the event frame to update.
        in: path
        name: webId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventFrame'
          text/json:
            schema:
              $ref: '#/components/schemas/EventFrame'
        description: A partial event frame containing the desired changes.
        required: true
        x-body-name: eventFrame
      responses:
        "204":
          content: {}
          description: The event frame was updated.
      summary: Update an event frame by replacing items in its definition.
      tags:
      - EventFrame
      x-codegen-request-body-name: eventFrame
      x-openapi-router-controller: openapi_server.controllers.event_frame_controller
  /eventframes/{webId}/acknowledge:
    patch:
      deprecated: false
      operationId: event_frame_acknowledge
      parameters:
      - description: The ID of the event frame.
        in: path
        name: webId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The event frame has been acknowledged.
      summary: Calls the EventFrame's Acknowledge method.
      tags:
      - EventFrame
      x-openapi-router-controller: openapi_server.controllers.event_frame_controller
  /eventframes/{webId}/annotations:
    get:
      deprecated: false
      operationId: event_frame_get_annotations
      parameters:
      - description: The ID of the owner event frame.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[Annotation]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[Annotation]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[Annotation]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[Annotation]"
          description: A list of annotations.
      summary: Get an event frame's annotations.
      tags:
      - EventFrame
      x-openapi-router-controller: openapi_server.controllers.event_frame_controller
    post:
      deprecated: false
      operationId: event_frame_create_annotation
      parameters:
      - description: The ID of the owner event frame on which to create the annotation.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Annotation'
          text/json:
            schema:
              $ref: '#/components/schemas/Annotation'
        description: The new annotation definition.
        required: true
        x-body-name: annotation
      responses:
        "201":
          content: {}
          description: The annotation was created. The response's Location header
            is a link to the annotation.
      summary: Create an annotation on an event frame.
      tags:
      - EventFrame
      x-codegen-request-body-name: annotation
      x-openapi-router-controller: openapi_server.controllers.event_frame_controller
  /eventframes/{webId}/annotations/{id}:
    delete:
      deprecated: false
      operationId: event_frame_delete_annotation
      parameters:
      - description: The Annotation identifier of the annotation to be deleted.
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The ID of the owner event frame of the annotation to delete.
        in: path
        name: webId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The annotation was deleted.
      summary: "Delete an annotation on an event frame. If the annotation has attached\
        \ media, the attached media will also be deleted."
      tags:
      - EventFrame
      x-openapi-router-controller: openapi_server.controllers.event_frame_controller
    get:
      deprecated: false
      operationId: event_frame_get_annotation_by_id
      parameters:
      - description: The Annotation identifier of the specific annotation.
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The ID of the owner event frame.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Annotation'
            text/json:
              schema:
                $ref: '#/components/schemas/Annotation'
            text/html:
              schema:
                $ref: '#/components/schemas/Annotation'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Annotation'
          description: The requested annotation.
      summary: Get a specific annotation on an event frame.
      tags:
      - EventFrame
      x-openapi-router-controller: openapi_server.controllers.event_frame_controller
    patch:
      deprecated: false
      operationId: event_frame_update_annotation
      parameters:
      - description: The Annotation identifier of the annotation to be updated.
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The ID of the owner event frame of the annotation to update.
        in: path
        name: webId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Annotation'
          text/json:
            schema:
              $ref: '#/components/schemas/Annotation'
        description: A partial annotation containing the desired changes.
        required: true
        x-body-name: annotation
      responses:
        "204":
          content: {}
          description: The annotation was updated.
      summary: Update an annotation on an event frame by replacing items in its definition.
      tags:
      - EventFrame
      x-codegen-request-body-name: annotation
      x-openapi-router-controller: openapi_server.controllers.event_frame_controller
  /eventframes/{webId}/annotations/{id}/attachment/media:
    delete:
      deprecated: false
      operationId: event_frame_delete_annotation_attachment_media_by_id
      parameters:
      - description: The Annotation identifier of the annotation to delete the attached
          media of.
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The ID of the owner event frame of the annotation to delete the
          attached media of.
        in: path
        name: webId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The attached media was deleted.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: The specified annotation did not have any attached media to
            delete.
      summary: Delete attached media from an annotation on an event frame.
      tags:
      - EventFrame
      x-openapi-router-controller: openapi_server.controllers.event_frame_controller
  /eventframes/{webId}/annotations/{id}/attachment/media/metadata:
    get:
      deprecated: false
      operationId: event_frame_get_annotation_attachment_media_metadata_by_id
      parameters:
      - description: The Annotation identifier of the specific annotation.
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The ID of the owner event frame.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediaMetadata'
            text/json:
              schema:
                $ref: '#/components/schemas/MediaMetadata'
            text/html:
              schema:
                $ref: '#/components/schemas/MediaMetadata'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/MediaMetadata'
          description: The requested metadata.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: "The supplied Web ID could not be parsed, or the request was\
            \ somehow otherwise invalid."
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: "The specified Event Frame did not exist, the specified annotation\
            \ was not found, or the annotation did not have attached media."
      summary: Gets the metadata of the media attached to the specified annotation.
      tags:
      - EventFrame
      x-openapi-router-controller: openapi_server.controllers.event_frame_controller
  /eventframes/{webId}/attributes:
    get:
      deprecated: false
      operationId: event_frame_get_attributes
      parameters:
      - description: The ID of the event frame.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "Associated values to return in the response, separated by semicolons\
          \ (;). This call supports DataReference to return attributes with data references.\
          \ If this parameter is not specified, DataReference values are not returned."
        in: query
        name: associations
        schema:
          type: string
      - description: Specify that returned attributes must have this category. The
          default is no category filter.
        in: query
        name: categoryName
        schema:
          type: string
      - description: The maximum number of objects to be returned per call (page size).
          The default is 1000.
        in: query
        name: maxCount
        schema:
          type: integer
      - description: The name query string used for finding attributes. The default
          is no filter.
        in: query
        name: nameFilter
        schema:
          type: string
      - description: Specifies if the search should include attributes nested further
          than the immediate attributes of the searchRoot. The default is 'false'.
        in: query
        name: searchFullHierarchy
        schema:
          type: boolean
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Specified if the search should include attributes with the Excluded
          property set. The default is 'false'.
        in: query
        name: showExcluded
        schema:
          type: boolean
      - description: Specified if the search should include attributes with the Hidden
          property set. The default is 'false'.
        in: query
        name: showHidden
        schema:
          type: boolean
      - description: The field or property of the object used to sort the returned
          collection. The default is 'Name'.
        in: query
        name: sortField
        schema:
          type: string
      - description: The order that the returned collection is sorted. The default
          is 'Ascending'.
        in: query
        name: sortOrder
        schema:
          type: string
      - description: The starting index (zero based) of the items to be returned.
          The default is 0.
        in: query
        name: startIndex
        schema:
          type: integer
      - description: Specify that returned attributes must be members of this template.
          The default is no template filter.
        in: query
        name: templateName
        schema:
          type: string
      - description: The name of the attribute trait. Multiple traits may be specified
          with multiple instances of the parameter.
        explode: true
        in: query
        name: trait
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "The category of the attribute traits. Multiple categories may\
          \ be specified with multiple instances of the parameter. If the parameter\
          \ is not specified, or if its value is \"all\", then all attribute traits\
          \ of all categories will be returned."
        explode: true
        in: query
        name: traitCategory
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Specify that returned attributes' value type must be the given
          value type. The default is no value type filter.
        in: query
        name: valueType
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[Attribute]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[Attribute]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[Attribute]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[Attribute]"
          description: A list of child attributes.
      summary: Get the attributes of the specified event frame.
      tags:
      - EventFrame
      x-openapi-router-controller: openapi_server.controllers.event_frame_controller
    post:
      deprecated: false
      operationId: event_frame_create_attribute
      parameters:
      - description: The ID of the event frame on which to create the attribute.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Attribute'
          text/json:
            schema:
              $ref: '#/components/schemas/Attribute'
        description: The definition of the new attribute.
        required: true
        x-body-name: attribute
      responses:
        "201":
          content: {}
          description: The attribute was created. The response's Location header is
            a link to the created attribute.
      summary: Create a new attribute of the specified event frame.
      tags:
      - EventFrame
      x-codegen-request-body-name: attribute
      x-openapi-router-controller: openapi_server.controllers.event_frame_controller
  /eventframes/{webId}/attributes/capture:
    post:
      deprecated: false
      operationId: event_frame_capture_values
      parameters:
      - description: The ID of the event frame.
        in: path
        name: webId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The event frame attribute's values were captured.
      summary: Calls the EventFrame's CaptureValues method.
      tags:
      - EventFrame
      x-openapi-router-controller: openapi_server.controllers.event_frame_controller
  /eventframes/{webId}/categories:
    get:
      deprecated: false
      operationId: event_frame_get_categories
      parameters:
      - description: The ID of the event frame.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[ElementCategory]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[ElementCategory]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[ElementCategory]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[ElementCategory]"
          description: A list of categories.
      summary: Get an event frame's categories.
      tags:
      - EventFrame
      x-openapi-router-controller: openapi_server.controllers.event_frame_controller
  /eventframes/{webId}/config:
    post:
      deprecated: false
      operationId: event_frame_create_config
      parameters:
      - description: The ID of the event frame.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "If true, includes the child event frames of the specified event\
          \ frame."
        in: query
        name: includeChildElements
        schema:
          type: boolean
      responses:
        "200":
          content: {}
          description: Process log of operations. Operations completed with no errors.
        "207":
          content: {}
          description: Process log of operations. Operations completed with errors.
      summary: "Executes the create configuration function of the data references\
        \ found within the attributes of the event frame, and optionally, its children."
      tags:
      - EventFrame
      x-openapi-router-controller: openapi_server.controllers.event_frame_controller
  /eventframes/{webId}/eventframeattributes:
    get:
      deprecated: false
      operationId: event_frame_find_event_frame_attributes
      parameters:
      - description: The ID of the event frame to use as the root of the search.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "Associated values to return in the response, separated by semicolons\
          \ (;). This call supports DataReference to return attributes with data references.\
          \ If this parameter is not specified, DataReference values are not returned."
        in: query
        name: associations
        schema:
          type: string
      - description: Specify that returned attributes must have this category. The
          default is no filter.
        in: query
        name: attributeCategory
        schema:
          type: string
      - description: "The attribute description filter string used for finding objects.\
          \ Only the first 440 characters of the description will be searched. For\
          \ Asset Servers older than 2.7, a 400 status code (Bad Request) will be\
          \ returned if this parameter is specified. The default is no filter."
        in: query
        name: attributeDescriptionFilter
        schema:
          type: string
      - description: The attribute name filter string used for finding objects. The
          default is no filter.
        in: query
        name: attributeNameFilter
        schema:
          type: string
      - description: Specify that returned attributes' value type must be this value
          type. The default is no filter.
        in: query
        name: attributeType
        schema:
          type: string
      - description: A string representing the latest ending time for the event frames
          to be matched. The endTime must be greater than or equal to the startTime.
          The default is '*'.
        in: query
        name: endTime
        schema:
          type: string
      - description: Specify that the owner of the returned attributes must have this
          category. The default is no filter.
        in: query
        name: eventFrameCategory
        schema:
          type: string
      - description: "The event frame description filter string used for finding objects.\
          \ Only the first 440 characters of the description will be searched. For\
          \ Asset Servers older than 2.7, a 400 status code (Bad Request) will be\
          \ returned if this parameter is specified. The default is no filter."
        in: query
        name: eventFrameDescriptionFilter
        schema:
          type: string
      - description: The event frame name filter string used for finding objects.
          The default is no filter.
        in: query
        name: eventFrameNameFilter
        schema:
          type: string
      - description: Specify that the owner of the returned attributes must have this
          template or a template derived from this template. The default is no filter.
        in: query
        name: eventFrameTemplate
        schema:
          type: string
      - description: The maximum number of objects to be returned (the page size).
          The default is 1000.
        in: query
        name: maxCount
        schema:
          type: integer
      - description: The name query string which must match the name of a referenced
          element. The default is no filter.
        in: query
        name: referencedElementNameFilter
        schema:
          type: string
      - description: Specifies if the search should include objects nested further
          than immediate children of the given resource. The default is 'false'.
        in: query
        name: searchFullHierarchy
        schema:
          type: boolean
      - description: Determines how the startTime and endTime parameters are treated
          when searching for event frames. The default is 'Overlapped'.
        in: query
        name: searchMode
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: The field or property of the object used to sort the returned
          collection. The default is 'Name'.
        in: query
        name: sortField
        schema:
          type: string
      - description: The order that the returned collection is sorted. The default
          is 'Ascending'.
        in: query
        name: sortOrder
        schema:
          type: string
      - description: The starting index (zero based) of the items to be returned.
          The default is 0.
        in: query
        name: startIndex
        schema:
          type: integer
      - description: A string representing the earliest starting time for the event
          frames to be matched. startTime must be less than or equal to the endTime.
          The default is '*-8h'.
        in: query
        name: startTime
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[Attribute]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[Attribute]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[Attribute]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[Attribute]"
          description: a list of matching attributes.
      summary: Retrieves a list of event frame attributes matching the specified filters
        from the specified event frame.
      tags:
      - EventFrame
      x-openapi-router-controller: openapi_server.controllers.event_frame_controller
  /eventframes/{webId}/eventframes:
    get:
      deprecated: false
      operationId: event_frame_get_event_frames
      parameters:
      - description: The ID of the event frame to use as the root of the search.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: Specify the returned event frames' canBeAcknowledged property.
          The default is no canBeAcknowledged filter.
        in: query
        name: canBeAcknowledged
        schema:
          type: boolean
      - description: Specify that returned event frames must have this category. The
          default is no category filter.
        in: query
        name: categoryName
        schema:
          type: string
      - description: The ending time for the search. The endTime must be greater than
          or equal to the startTime. The searchMode parameter will control whether
          the comparison will be performed against the event frame's startTime or
          endTime. The default is '*' if searchMode is not one of the 'Backward*'
          or 'Forward*' values.
        in: query
        name: endTime
        schema:
          type: string
      - description: Specify the returned event frames' isAcknowledged property. The
          default no isAcknowledged filter.
        in: query
        name: isAcknowledged
        schema:
          type: boolean
      - description: The maximum number of objects to be returned per call (page size).
          The default is 1000.
        in: query
        name: maxCount
        schema:
          type: integer
      - description: The name query string used for finding event frames. The default
          is no filter.
        in: query
        name: nameFilter
        schema:
          type: string
      - description: The name query string which must match the name of a referenced
          element. The default is no filter.
        in: query
        name: referencedElementNameFilter
        schema:
          type: string
      - description: Specify that returned event frames must have an element in the
          event frame's referenced elements collection that derives from the template.
          Specify this parameter by name.
        in: query
        name: referencedElementTemplateName
        schema:
          type: string
      - description: Specifies whether the search should include objects nested further
          than the immediate children of the search root. The default is 'false'.
        in: query
        name: searchFullHierarchy
        schema:
          type: boolean
      - description: "Determines how the startTime and endTime parameters are treated\
          \ when searching for event frame objects to be included in the returned\
          \ collection. If this parameter is one of the 'Backward*' or 'Forward*'\
          \ values, none of endTime, sortField, or sortOrder may be specified. The\
          \ default is 'Overlapped'."
        in: query
        name: searchMode
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Specify that returned event frames must have this severity. Multiple
          severity values may be specified with multiple instances of the parameter.
          The default is no severity filter.
        explode: true
        in: query
        name: severity
        schema:
          items:
            type: string
          type: array
        style: form
      - description: The field or property of the object used to sort the returned
          collection. The default is 'Name' if searchMode is not one of the 'Backward*'
          or 'Forward*' values.
        in: query
        name: sortField
        schema:
          type: string
      - description: The order that the returned collection is sorted. The default
          is 'Ascending' if searchMode is not one of the 'Backward*' or 'Forward*'
          values.
        in: query
        name: sortOrder
        schema:
          type: string
      - description: The starting index (zero based) of the items to be returned.
          The default is 0.
        in: query
        name: startIndex
        schema:
          type: integer
      - description: The starting time for the search. startTime must be less than
          or equal to the endTime. The searchMode parameter will control whether the
          comparison will be performed against the event frame's startTime or endTime.
          The default is '*-8h'.
        in: query
        name: startTime
        schema:
          type: string
      - description: Specify that returned event frames must have this template or
          a template derived from this template. The default is no template filter.
          Specify this parameter by name.
        in: query
        name: templateName
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[EventFrame]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[EventFrame]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[EventFrame]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[EventFrame]"
          description: A list of event frames matching the specified conditions.
      summary: "Retrieve event frames based on the specified conditions. By default,\
        \ returns all children of the specified root event frame that have been active\
        \ in the past 8 hours."
      tags:
      - EventFrame
      x-openapi-router-controller: openapi_server.controllers.event_frame_controller
    post:
      deprecated: false
      operationId: event_frame_create_event_frame
      parameters:
      - description: The ID of the parent event frame on which to create the event
          frame.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventFrame'
          text/json:
            schema:
              $ref: '#/components/schemas/EventFrame'
        description: The new event frame definition.
        required: true
        x-body-name: eventFrame
      responses:
        "201":
          content: {}
          description: The event frame was created. The response's Location header
            is a link to the event frame.
      summary: Create an event frame as a child of the specified event frame.
      tags:
      - EventFrame
      x-codegen-request-body-name: eventFrame
      x-openapi-router-controller: openapi_server.controllers.event_frame_controller
  /eventframes/{webId}/referencedelements:
    get:
      deprecated: false
      operationId: event_frame_get_referenced_elements
      parameters:
      - description: The ID of the event frame whose referenced elements should be
          retrieved.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "Associated values to return in the response, separated by semicolons\
          \ (;). This call supports Paths to return all paths to the element. If this\
          \ parameter is not specified, paths are not returned."
        in: query
        name: associations
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[Element]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[Element]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[Element]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[Element]"
          description: A list of referenced elements.
      summary: Retrieve the event frame's referenced elements.
      tags:
      - EventFrame
      x-openapi-router-controller: openapi_server.controllers.event_frame_controller
  /eventframes/{webId}/security:
    get:
      deprecated: false
      operationId: event_frame_get_security
      parameters:
      - description: The ID of the event frame for the security to be checked.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "The user identity for the security information to be checked.\
          \ Multiple security identities may be specified with multiple instances\
          \ of the parameter. If the parameter is not specified, only the current\
          \ user's security rights will be returned."
        explode: true
        in: query
        name: userIdentity
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Indicates if the security cache should be refreshed before getting
          security information. The default is 'false'.
        in: query
        name: forceRefresh
        schema:
          type: boolean
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[SecurityRights]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[SecurityRights]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[SecurityRights]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[SecurityRights]"
          description: Security rights.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: An invalid or local account is specified as the user identity.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Access denied for the specified user identity.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Unsupported when using Anonymous authentication method.
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Failed to retrieve the specified user identity.
      summary: Get the security information of the specified security item associated
        with the event frame for a specified user.
      tags:
      - EventFrame
      x-openapi-router-controller: openapi_server.controllers.event_frame_controller
  /eventframes/{webId}/securityentries:
    get:
      deprecated: false
      operationId: event_frame_get_security_entries
      parameters:
      - description: The ID of the event frame.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: The name query string used for filtering security entries. The
          default is no filter.
        in: query
        name: nameFilter
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[SecurityEntry]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[SecurityEntry]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[SecurityEntry]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[SecurityEntry]"
          description: A list of security entries matching the specified condition.
      summary: "Retrieve the security entries associated with the event frame based\
        \ on the specified criteria. By default, all security entries for this event\
        \ frame are returned."
      tags:
      - EventFrame
      x-openapi-router-controller: openapi_server.controllers.event_frame_controller
    post:
      deprecated: false
      operationId: event_frame_create_security_entry
      parameters:
      - description: The ID of the event frame where the security entry will be created.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "If false, the new access permissions are only applied to the\
          \ associated object. If true, the access permissions of children with any\
          \ parent-child reference types will change when the permissions on the primary\
          \ parent change."
        in: query
        name: applyToChildren
        schema:
          type: boolean
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityEntry'
          text/json:
            schema:
              $ref: '#/components/schemas/SecurityEntry'
        description: The new security entry definition. The full list of allow and
          deny rights must be supplied.
        required: true
        x-body-name: securityEntry
      responses:
        "201":
          content: {}
          description: The security entry was created. The response's Location header
            is a link to the security entry.
      summary: Create a security entry owned by the event frame.
      tags:
      - EventFrame
      x-codegen-request-body-name: securityEntry
      x-openapi-router-controller: openapi_server.controllers.event_frame_controller
  /eventframes/{webId}/securityentries/{name}:
    delete:
      deprecated: false
      operationId: event_frame_delete_security_entry
      parameters:
      - description: "The name of the security entry. For every backslash character\
          \ (\\) in the security entry name, replace with asterisk (*). As an example,\
          \ use domain*username instead of domain\\username."
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: The ID of the event frame where the security entry will be deleted.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "If false, the new access permissions are only applied to the\
          \ associated object. If true, the access permissions of children with any\
          \ parent-child reference types will change when the permissions on the primary\
          \ parent change."
        in: query
        name: applyToChildren
        schema:
          type: boolean
      responses:
        "204":
          content: {}
          description: The security entry was deleted.
      summary: Delete a security entry owned by the event frame.
      tags:
      - EventFrame
      x-openapi-router-controller: openapi_server.controllers.event_frame_controller
    get:
      deprecated: false
      operationId: event_frame_get_security_entry_by_name
      parameters:
      - description: "The name of the security entry. For every backslash character\
          \ (\\) in the security entry name, replace with asterisk (*). As an example,\
          \ use domain*username instead of domain\\username."
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: The ID of the event frame.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityEntry'
            text/json:
              schema:
                $ref: '#/components/schemas/SecurityEntry'
            text/html:
              schema:
                $ref: '#/components/schemas/SecurityEntry'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/SecurityEntry'
          description: The security entry matching the specified condition.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: The security entry with the specified name is not found.
      summary: Retrieve the security entry associated with the event frame with the
        specified name.
      tags:
      - EventFrame
      x-openapi-router-controller: openapi_server.controllers.event_frame_controller
    put:
      deprecated: false
      operationId: event_frame_update_security_entry
      parameters:
      - description: The name of the security entry.
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: The ID of the event frame where the security entry will be updated.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "If false, the new access permissions are only applied to the\
          \ associated object. If true, the access permissions of children with any\
          \ parent-child reference types will change when the permissions on the primary\
          \ parent change."
        in: query
        name: applyToChildren
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityEntry'
          text/json:
            schema:
              $ref: '#/components/schemas/SecurityEntry'
        description: The new security entry definition. The full list of allow and
          deny rights must be supplied or they will be removed.
        required: true
        x-body-name: securityEntry
      responses:
        "204":
          content: {}
          description: The security entry was updated.
      summary: Update a security entry owned by the event frame.
      tags:
      - EventFrame
      x-codegen-request-body-name: securityEntry
      x-openapi-router-controller: openapi_server.controllers.event_frame_controller
  /notificationcontacttemplates:
    get:
      deprecated: false
      operationId: notification_contact_template_get_by_path
      parameters:
      - description: The path to the notification contact template.
        in: query
        name: path
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationContactTemplate'
            text/json:
              schema:
                $ref: '#/components/schemas/NotificationContactTemplate'
            text/html:
              schema:
                $ref: '#/components/schemas/NotificationContactTemplate'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/NotificationContactTemplate'
          description: The specified notification contact template.
      summary: Retrieve a notification contact template by path.
      tags:
      - NotificationContactTemplate
      x-openapi-router-controller: openapi_server.controllers.notification_contact_template_controller
  /notificationcontacttemplates/search:
    get:
      deprecated: false
      operationId: notification_contact_template_get_notification_contact_templates_query
      parameters:
      - description: The ID of the asset server to use as the root of the query.
        in: query
        name: assetServerWebId
        schema:
          type: string
      - description: The maximum number of objects to be returned per call (page size).
          The default is 1000.
        in: query
        name: maxCount
        schema:
          type: integer
      - description: "The query string is a list of filters used to perform an AFSearch\
          \ for the Notification Contact Templates in the asset database. An example\
          \ would be: \"query=Name:='MyNotificationContactTemplate'\"."
        in: query
        name: query
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: The starting index (zero based) of the items to be returned.
          The default is 0.
        in: query
        name: startIndex
        schema:
          type: integer
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[NotificationContactTemplate]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[NotificationContactTemplate]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[NotificationContactTemplate]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[NotificationContactTemplate]"
          description: A list of notification contact templates matching the specified
            conditions.
      summary: Retrieve notification contact templates based on the specified conditions.
        Returns notification contact templates using the specified search query string.
      tags:
      - NotificationContactTemplate
      x-openapi-router-controller: openapi_server.controllers.notification_contact_template_controller
  /notificationcontacttemplates/{webId}:
    delete:
      deprecated: false
      operationId: notification_contact_template_delete
      parameters:
      - description: The ID of the notification contact template to be deleted.
        in: path
        name: webId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The notification contact template was deleted.
      summary: Delete a notification contact template.
      tags:
      - NotificationContactTemplate
      x-openapi-router-controller: openapi_server.controllers.notification_contact_template_controller
    get:
      deprecated: false
      operationId: notification_contact_template_get
      parameters:
      - description: The ID of the notification contact template.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationContactTemplate'
            text/json:
              schema:
                $ref: '#/components/schemas/NotificationContactTemplate'
            text/html:
              schema:
                $ref: '#/components/schemas/NotificationContactTemplate'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/NotificationContactTemplate'
          description: The specified notification contact template.
      summary: Retrieve a notification contact template.
      tags:
      - NotificationContactTemplate
      x-openapi-router-controller: openapi_server.controllers.notification_contact_template_controller
    patch:
      deprecated: false
      operationId: notification_contact_template_update
      parameters:
      - description: The ID of the notification contact template to update.
        in: path
        name: webId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationContactTemplate'
          text/json:
            schema:
              $ref: '#/components/schemas/NotificationContactTemplate'
        description: A partial notification contact template containing the desired
          changes.
        required: true
        x-body-name: notificationContactTemplate
      responses:
        "204":
          content: {}
          description: The notification contact template was updated.
      summary: Update a notification contact template by replacing items in its definition.
      tags:
      - NotificationContactTemplate
      x-codegen-request-body-name: notificationContactTemplate
      x-openapi-router-controller: openapi_server.controllers.notification_contact_template_controller
  /notificationcontacttemplates/{webId}/notificationcontacttemplates:
    get:
      deprecated: false
      operationId: notification_contact_template_get_notification_contact_templates
      parameters:
      - description: The ID of the notification contact template.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationContactTemplate'
            text/json:
              schema:
                $ref: '#/components/schemas/NotificationContactTemplate'
            text/html:
              schema:
                $ref: '#/components/schemas/NotificationContactTemplate'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/NotificationContactTemplate'
          description: A list of notification contact templates.
      summary: Retrieve notification contact template's child templates.
      tags:
      - NotificationContactTemplate
      x-openapi-router-controller: openapi_server.controllers.notification_contact_template_controller
  /notificationcontacttemplates/{webId}/security:
    get:
      deprecated: false
      operationId: notification_contact_template_get_security
      parameters:
      - description: The ID of the notification contact template for the security
          to be checked.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "The user identity for the security information to be checked.\
          \ Multiple security identities may be specified with multiple instances\
          \ of the parameter. If the parameter is not specified, only the current\
          \ user's security rights will be returned."
        explode: true
        in: query
        name: userIdentity
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Indicates if the security cache should be refreshed before getting
          security information. The default is 'false'.
        in: query
        name: forceRefresh
        schema:
          type: boolean
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[SecurityRights]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[SecurityRights]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[SecurityRights]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[SecurityRights]"
          description: Security rights.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: An invalid or local account is specified as the user identity.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Access denied for the specified user identity.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Unsupported when using Anonymous authentication method.
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Failed to retrieve the specified user identity.
      summary: Get the security information of the specified security item associated
        with the notification contact template for a specified user.
      tags:
      - NotificationContactTemplate
      x-openapi-router-controller: openapi_server.controllers.notification_contact_template_controller
  /notificationcontacttemplates/{webId}/securityentries:
    get:
      deprecated: false
      operationId: notification_contact_template_get_security_entries
      parameters:
      - description: The ID of the notification contact template.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: The name query string used for filtering security entries. The
          default is no filter.
        in: query
        name: nameFilter
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[SecurityEntry]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[SecurityEntry]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[SecurityEntry]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[SecurityEntry]"
          description: A list of security entries matching the specified condition.
      summary: "Retrieve the security entries associated with the notification contact\
        \ template based on the specified criteria. By default, all security entries\
        \ for this notification contact template are returned."
      tags:
      - NotificationContactTemplate
      x-openapi-router-controller: openapi_server.controllers.notification_contact_template_controller
    post:
      deprecated: false
      operationId: notification_contact_template_create_security_entry
      parameters:
      - description: "The ID of the notification contact template, where the security\
          \ entry will be created."
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "If false, the new access permissions are only applied to the\
          \ associated object. If true, the access permissions of children with any\
          \ parent-child reference types will change when the permissions on the primary\
          \ parent change."
        in: query
        name: applyToChildren
        schema:
          type: boolean
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityEntry'
          text/json:
            schema:
              $ref: '#/components/schemas/SecurityEntry'
        description: The new security entry definition. The full list of allow and
          deny rights must be supplied.
        required: true
        x-body-name: securityEntry
      responses:
        "201":
          content: {}
          description: The security entry was created. The response's Location header
            is a link to the security entry.
      summary: Create a security entry owned by the notification contact template.
      tags:
      - NotificationContactTemplate
      x-codegen-request-body-name: securityEntry
      x-openapi-router-controller: openapi_server.controllers.notification_contact_template_controller
  /notificationcontacttemplates/{webId}/securityentries/{name}:
    delete:
      deprecated: false
      operationId: notification_contact_template_delete_security_entry
      parameters:
      - description: "The name of the security entry. For every backslash character\
          \ (\\) in the security entry name, replace with asterisk (*). As an example,\
          \ use domain*username instead of domain\\username."
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: "The ID of the notification contact template, where the security\
          \ entry will be deleted."
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "If false, the new access permissions are only applied to the\
          \ associated object. If true, the access permissions of children with any\
          \ parent-child reference types will change when the permissions on the primary\
          \ parent change."
        in: query
        name: applyToChildren
        schema:
          type: boolean
      responses:
        "204":
          content: {}
          description: The security entry was deleted.
      summary: Delete a security entry owned by the notification contact template.
      tags:
      - NotificationContactTemplate
      x-openapi-router-controller: openapi_server.controllers.notification_contact_template_controller
    get:
      deprecated: false
      operationId: notification_contact_template_get_security_entry_by_name
      parameters:
      - description: "The name of the security entry. For every backslash character\
          \ (\\) in the security entry name, replace with asterisk (*). As an example,\
          \ use domain*username instead of domain\\username."
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: The ID of the notification contact template.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityEntry'
            text/json:
              schema:
                $ref: '#/components/schemas/SecurityEntry'
            text/html:
              schema:
                $ref: '#/components/schemas/SecurityEntry'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/SecurityEntry'
          description: The security entry matching the specified condition.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: The security entry with the specified name is not found.
      summary: Retrieve the security entry associated with the notification contact
        template with the specified name.
      tags:
      - NotificationContactTemplate
      x-openapi-router-controller: openapi_server.controllers.notification_contact_template_controller
    put:
      deprecated: false
      operationId: notification_contact_template_update_security_entry
      parameters:
      - description: The name of the security entry.
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: "The ID of the notification contact template, where the security\
          \ entry will be updated."
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "If false, the new access permissions are only applied to the\
          \ associated object. If true, the access permissions of children with any\
          \ parent-child reference types will change when the permissions on the primary\
          \ parent change."
        in: query
        name: applyToChildren
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityEntry'
          text/json:
            schema:
              $ref: '#/components/schemas/SecurityEntry'
        description: The new security entry definition. The full list of allow and
          deny rights must be supplied or they will be removed.
        required: true
        x-body-name: securityEntry
      responses:
        "204":
          content: {}
          description: The security entry was updated.
      summary: Update a security entry owned by the notification contact template.
      tags:
      - NotificationContactTemplate
      x-codegen-request-body-name: securityEntry
      x-openapi-router-controller: openapi_server.controllers.notification_contact_template_controller
  /notificationplugIns:
    get:
      deprecated: false
      description: "This method returns a notification plugin based on the hierarchical\
        \ path associated with it, and should be used when a path has been received\
        \ from a separate part of the PI System for use in the PI Web API. Users should\
        \ primarily search with the WebID when available."
      operationId: notification_plug_in_get_by_path
      parameters:
      - description: The path to the notification plugin.
        in: query
        name: path
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationPlugIn'
            text/json:
              schema:
                $ref: '#/components/schemas/NotificationPlugIn'
            text/html:
              schema:
                $ref: '#/components/schemas/NotificationPlugIn'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/NotificationPlugIn'
          description: The specified notification plugin.
      summary: Retrieve a notification plugin by path.
      tags:
      - NotificationPlugIn
      x-openapi-router-controller: openapi_server.controllers.notification_plug_in_controller
  /notificationplugins/{webId}:
    get:
      deprecated: false
      operationId: notification_plug_in_get
      parameters:
      - description: The ID of the notification plugin.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationPlugIn'
            text/json:
              schema:
                $ref: '#/components/schemas/NotificationPlugIn'
            text/html:
              schema:
                $ref: '#/components/schemas/NotificationPlugIn'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/NotificationPlugIn'
          description: The specified notification plugin.
      summary: Retrieve a notification plugin.
      tags:
      - NotificationPlugIn
      x-openapi-router-controller: openapi_server.controllers.notification_plug_in_controller
  /notificationrules:
    get:
      deprecated: false
      description: "This method returns a Notification Rule based on the hierarchical\
        \ path associated with it, and should be used when a path has been received\
        \ from a separate part of the PI System for use in the PI Web API. Users should\
        \ primarily search with the WebID when available."
      operationId: notification_rule_get_by_path
      parameters:
      - description: The path to the notification rule.
        in: query
        name: path
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationRule'
            text/json:
              schema:
                $ref: '#/components/schemas/NotificationRule'
            text/html:
              schema:
                $ref: '#/components/schemas/NotificationRule'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/NotificationRule'
          description: The specified notification rule.
      summary: Retrieve a notification rule by path.
      tags:
      - NotificationRule
      x-openapi-router-controller: openapi_server.controllers.notification_rule_controller
  /notificationrules/search:
    get:
      deprecated: false
      operationId: notification_rule_get_notification_rules_query
      parameters:
      - description: The ID of the asset database to use as the root of the query.
        in: query
        name: databaseWebId
        schema:
          type: string
      - description: The maximum number of objects to be returned per call (page size).
          The default is 1000.
        in: query
        name: maxCount
        schema:
          type: integer
      - description: "The query string is a list of filters used to perform an AFSearch\
          \ for the Notification rules in the asset database. An example would be:\
          \ \"query=Name:=MyNotificationRule* Template:=NoteRuleTemplate\"."
        in: query
        name: query
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: The starting index (zero based) of the items to be returned.
          The default is 0.
        in: query
        name: startIndex
        schema:
          type: integer
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[NotificationRule]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[NotificationRule]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[NotificationRule]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[NotificationRule]"
          description: A list of notification rules matching the specified conditions.
      summary: Retrieve notification rules based on the specified conditions. Returns
        notification rules using the specified search query string.
      tags:
      - NotificationRule
      x-openapi-router-controller: openapi_server.controllers.notification_rule_controller
  /notificationrules/{webId}:
    delete:
      deprecated: false
      operationId: notification_rule_delete
      parameters:
      - description: The ID of the notification rule.
        in: path
        name: webId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The notification rule was deleted.
      summary: Delete a notification rule.
      tags:
      - NotificationRule
      x-openapi-router-controller: openapi_server.controllers.notification_rule_controller
    get:
      deprecated: false
      operationId: notification_rule_get
      parameters:
      - description: The ID of the resource to use as the root of the search.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationRule'
            text/json:
              schema:
                $ref: '#/components/schemas/NotificationRule'
            text/html:
              schema:
                $ref: '#/components/schemas/NotificationRule'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/NotificationRule'
          description: A notification rule
      summary: Retrieve a notification rule.
      tags:
      - NotificationRule
      x-openapi-router-controller: openapi_server.controllers.notification_rule_controller
    patch:
      deprecated: false
      operationId: notification_rule_update
      parameters:
      - description: The ID of the notification rule to update.
        in: path
        name: webId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationRule'
          text/json:
            schema:
              $ref: '#/components/schemas/NotificationRule'
        description: A partial notification rule containing the desired changes.
        required: true
        x-body-name: notificationRule
      responses:
        "204":
          content: {}
          description: The notification rule was updated.
      summary: Update a notification rule by replacing items in its definition.
      tags:
      - NotificationRule
      x-codegen-request-body-name: notificationRule
      x-openapi-router-controller: openapi_server.controllers.notification_rule_controller
  /notificationrules/{webId}/notificationrulesubscribers:
    get:
      deprecated: false
      operationId: notification_rule_get_notification_rule_subscribers
      parameters:
      - description: The ID of the resource to use as the root of the search.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[NotificationRuleSubscriber]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[NotificationRuleSubscriber]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[NotificationRuleSubscriber]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[NotificationRuleSubscriber]"
          description: A list of notification rule subscribers.
      summary: Retrieve notification rule subscribers.
      tags:
      - NotificationRule
      x-openapi-router-controller: openapi_server.controllers.notification_rule_controller
    post:
      deprecated: false
      operationId: notification_rule_create_notification_rule_subscriber
      parameters:
      - description: The ID of the notification rule on which to create the notification
          rule subscriber.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationRuleSubscriber'
          text/json:
            schema:
              $ref: '#/components/schemas/NotificationRuleSubscriber'
        description: The new notification rule subscriber definition.
        required: true
        x-body-name: notificationRuleSubscriber
      responses:
        "201":
          content: {}
          description: The notification rule subscriber was created. The response's
            Location header is a link to the notification rule subscriber.
      summary: Create a notification rule subscriber.
      tags:
      - NotificationRule
      x-codegen-request-body-name: notificationRuleSubscriber
      x-openapi-router-controller: openapi_server.controllers.notification_rule_controller
  /notificationrules/{webId}/security:
    get:
      deprecated: false
      operationId: notification_rule_get_security
      parameters:
      - description: The ID of the notification rule for the security to be checked.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "The user identity for the security information to be checked.\
          \ Multiple security identities may be specified with multiple instances\
          \ of the parameter. If the parameter is not specified, only the current\
          \ user's security rights will be returned."
        explode: true
        in: query
        name: userIdentity
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Indicates if the security cache should be refreshed before getting
          security information. The default is 'false'.
        in: query
        name: forceRefresh
        schema:
          type: boolean
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[SecurityRights]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[SecurityRights]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[SecurityRights]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[SecurityRights]"
          description: Security rights.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: An invalid or local account is specified as the user identity.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Access denied for the specified user identity.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Unsupported when using Anonymous authentication method.
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Failed to retrieve the specified user identity.
      summary: Get the security information of the specified security item associated
        with the notification rule for a specified user.
      tags:
      - NotificationRule
      x-openapi-router-controller: openapi_server.controllers.notification_rule_controller
  /notificationrules/{webId}/securityentries:
    get:
      deprecated: false
      operationId: notification_rule_get_security_entries
      parameters:
      - description: The ID of the notification rule.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: The name query string used for filtering security entries. The
          default is no filter.
        in: query
        name: nameFilter
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[SecurityEntry]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[SecurityEntry]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[SecurityEntry]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[SecurityEntry]"
          description: A list of security entries matching the specified condition.
      summary: "Retrieve the security entries associated with the notification rule\
        \ based on the specified criteria. By default, all security entries for this\
        \ notification rule are returned."
      tags:
      - NotificationRule
      x-openapi-router-controller: openapi_server.controllers.notification_rule_controller
    post:
      deprecated: false
      operationId: notification_rule_create_security_entry
      parameters:
      - description: "The ID of the notification rule, where the security entry will\
          \ be created."
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "If false, the new access permissions are only applied to the\
          \ associated object. If true, the access permissions of children with any\
          \ parent-child reference types will change when the permissions on the primary\
          \ parent change."
        in: query
        name: applyToChildren
        schema:
          type: boolean
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityEntry'
          text/json:
            schema:
              $ref: '#/components/schemas/SecurityEntry'
        description: The new security entry definition. The full list of allow and
          deny rights must be supplied.
        required: true
        x-body-name: securityEntry
      responses:
        "201":
          content: {}
          description: The security entry was created. The response's Location header
            is a link to the security entry.
      summary: Create a security entry owned by the notification rule.
      tags:
      - NotificationRule
      x-codegen-request-body-name: securityEntry
      x-openapi-router-controller: openapi_server.controllers.notification_rule_controller
  /notificationrules/{webId}/securityentries/{name}:
    delete:
      deprecated: false
      operationId: notification_rule_delete_security_entry
      parameters:
      - description: "The name of the security entry. For every backslash character\
          \ (\\) in the security entry name, replace with asterisk (*). As an example,\
          \ use domain*username instead of domain\\username."
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: "The ID of the notification rule, where the security entry will\
          \ be deleted."
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "If false, the new access permissions are only applied to the\
          \ associated object. If true, the access permissions of children with any\
          \ parent-child reference types will change when the permissions on the primary\
          \ parent change."
        in: query
        name: applyToChildren
        schema:
          type: boolean
      responses:
        "204":
          content: {}
          description: The security entry was deleted.
      summary: Delete a security entry owned by the notification rule.
      tags:
      - NotificationRule
      x-openapi-router-controller: openapi_server.controllers.notification_rule_controller
    get:
      deprecated: false
      operationId: notification_rule_get_security_entry_by_name
      parameters:
      - description: "The name of the security entry. For every backslash character\
          \ (\\) in the security entry name, replace with asterisk (*). As an example,\
          \ use domain*username instead of domain\\username."
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: The ID of the notification rule.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityEntry'
            text/json:
              schema:
                $ref: '#/components/schemas/SecurityEntry'
            text/html:
              schema:
                $ref: '#/components/schemas/SecurityEntry'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/SecurityEntry'
          description: The security entry matching the specified condition.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: The security entry with the specified name is not found.
      summary: Retrieve the security entry associated with the notification rule with
        the specified name.
      tags:
      - NotificationRule
      x-openapi-router-controller: openapi_server.controllers.notification_rule_controller
    put:
      deprecated: false
      operationId: notification_rule_update_security_entry
      parameters:
      - description: The name of the security entry.
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: "The ID of the notification rule, where the security entry will\
          \ be updated."
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "If false, the new access permissions are only applied to the\
          \ associated object. If true, the access permissions of children with any\
          \ parent-child reference types will change when the permissions on the primary\
          \ parent change."
        in: query
        name: applyToChildren
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityEntry'
          text/json:
            schema:
              $ref: '#/components/schemas/SecurityEntry'
        description: The new security entry definition. The full list of allow and
          deny rights must be supplied or they will be removed.
        required: true
        x-body-name: securityEntry
      responses:
        "204":
          content: {}
          description: The security entry was updated.
      summary: Update a security entry owned by the notification rule.
      tags:
      - NotificationRule
      x-codegen-request-body-name: securityEntry
      x-openapi-router-controller: openapi_server.controllers.notification_rule_controller
  /notificationrulesubscribers:
    get:
      deprecated: false
      description: "This method returns a Notification Rule Subscriber based on the\
        \ hierarchical path associated with it, and should be used when a path has\
        \ been received from a separate part of the PI System for use in the PI Web\
        \ API. Users should primarily search with the WebID when available."
      operationId: notification_rule_subscriber_get_by_path
      parameters:
      - description: The path to the notification rule subscriber.
        in: query
        name: path
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationRuleSubscriber'
            text/json:
              schema:
                $ref: '#/components/schemas/NotificationRuleSubscriber'
            text/html:
              schema:
                $ref: '#/components/schemas/NotificationRuleSubscriber'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/NotificationRuleSubscriber'
          description: The specified notification rule subscriber.
      summary: Retrieve a notification rule subscriber by path.
      tags:
      - NotificationRuleSubscriber
      x-openapi-router-controller: openapi_server.controllers.notification_rule_subscriber_controller
  /notificationrulesubscribers/{webId}:
    delete:
      deprecated: false
      operationId: notification_rule_subscriber_delete
      parameters:
      - description: The ID of the notification rule subscriber.
        in: path
        name: webId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The notification rule subscriber was deleted.
      summary: Delete a notification rule subscriber.
      tags:
      - NotificationRuleSubscriber
      x-openapi-router-controller: openapi_server.controllers.notification_rule_subscriber_controller
    get:
      deprecated: false
      operationId: notification_rule_subscriber_get
      parameters:
      - description: The ID of the resource to use as the root of the search.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationRuleSubscriber'
            text/json:
              schema:
                $ref: '#/components/schemas/NotificationRuleSubscriber'
            text/html:
              schema:
                $ref: '#/components/schemas/NotificationRuleSubscriber'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/NotificationRuleSubscriber'
          description: A notification rule subscriber
      summary: Retrieve a notification rule subscriber.
      tags:
      - NotificationRuleSubscriber
      x-openapi-router-controller: openapi_server.controllers.notification_rule_subscriber_controller
    patch:
      deprecated: false
      operationId: notification_rule_subscriber_update
      parameters:
      - description: The ID of the notification rule subscriber.
        in: path
        name: webId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationRuleSubscriber'
          text/json:
            schema:
              $ref: '#/components/schemas/NotificationRuleSubscriber'
        description: A partial notification rule subscriber containing the desired
          changes.
        required: true
        x-body-name: notificationRuleSubscriber
      responses:
        "204":
          content: {}
          description: The notification rule subscriber was updated.
      summary: Update a notification rule subscriber.
      tags:
      - NotificationRuleSubscriber
      x-codegen-request-body-name: notificationRuleSubscriber
      x-openapi-router-controller: openapi_server.controllers.notification_rule_subscriber_controller
  /notificationrulesubscribers/{webId}/notificationrulesubscribers:
    get:
      deprecated: false
      operationId: notification_rule_subscriber_get_notification_rule_subscribers
      parameters:
      - description: The ID of the resource to use as the root of the search.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[NotificationRuleSubscriber]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[NotificationRuleSubscriber]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[NotificationRuleSubscriber]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[NotificationRuleSubscriber]"
          description: A list of notification rules subscribers.
      summary: Retrieve notification rule subscriber subscribers.
      tags:
      - NotificationRuleSubscriber
      x-openapi-router-controller: openapi_server.controllers.notification_rule_subscriber_controller
  /notificationruletemplates:
    get:
      deprecated: false
      description: "This method returns a Notification Rule Template based on the\
        \ hierarchical path associated with it, and should be used when a path has\
        \ been received from a separate part of the PI System for use in the PI Web\
        \ API. Users should primarily search with the WebID when available."
      operationId: notification_rule_template_get_by_path
      parameters:
      - description: The path to the notification rule template.
        in: query
        name: path
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationRuleTemplate'
            text/json:
              schema:
                $ref: '#/components/schemas/NotificationRuleTemplate'
            text/html:
              schema:
                $ref: '#/components/schemas/NotificationRuleTemplate'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/NotificationRuleTemplate'
          description: The specified notification rule template.
      summary: Retrieve a notification rule template by path.
      tags:
      - NotificationRuleTemplate
      x-openapi-router-controller: openapi_server.controllers.notification_rule_template_controller
  /notificationruletemplates/search:
    get:
      deprecated: false
      operationId: notification_rule_template_get_notification_rule_templates_query
      parameters:
      - description: The ID of the asset database to use as the root of the query.
        in: query
        name: databaseWebId
        schema:
          type: string
      - description: The maximum number of objects to be returned per call (page size).
          The default is 1000.
        in: query
        name: maxCount
        schema:
          type: integer
      - description: "The query string is a list of filters used to perform an AFSearch\
          \ for the Notification rule templates in the asset database. An example\
          \ would be: \"query=NotificationRuleTemplate:{ Name:='MyNotificationRuleTemplate'\
          \ } Type:=Int32\"."
        in: query
        name: query
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: The starting index (zero based) of the items to be returned.
          The default is 0.
        in: query
        name: startIndex
        schema:
          type: integer
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[NotificationRuleTemplate]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[NotificationRuleTemplate]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[NotificationRuleTemplate]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[NotificationRuleTemplate]"
          description: A list of notification rule templates matching the specified
            conditions.
      summary: Retrieve Notification rule templates based on the specified conditions.
        Returns Notification rule templates using the specified search query string.
      tags:
      - NotificationRuleTemplate
      x-openapi-router-controller: openapi_server.controllers.notification_rule_template_controller
  /notificationruletemplates/{webId}:
    delete:
      deprecated: false
      operationId: notification_rule_template_delete
      parameters:
      - description: The ID of the notification rule template.
        in: path
        name: webId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The notification rule template was deleted.
      summary: Delete a notification rule template.
      tags:
      - NotificationRuleTemplate
      x-openapi-router-controller: openapi_server.controllers.notification_rule_template_controller
    get:
      deprecated: false
      operationId: notification_rule_template_get
      parameters:
      - description: The ID of the notification rule template.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationRuleTemplate'
            text/json:
              schema:
                $ref: '#/components/schemas/NotificationRuleTemplate'
            text/html:
              schema:
                $ref: '#/components/schemas/NotificationRuleTemplate'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/NotificationRuleTemplate'
          description: The specified notification rule template.
      summary: Get the specified notification rule template.
      tags:
      - NotificationRuleTemplate
      x-openapi-router-controller: openapi_server.controllers.notification_rule_template_controller
    patch:
      deprecated: false
      operationId: notification_rule_template_update
      parameters:
      - description: The ID of the notification rule template to update.
        in: path
        name: webId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationRuleTemplate'
          text/json:
            schema:
              $ref: '#/components/schemas/NotificationRuleTemplate'
        description: A partial notification rule template containing the desired changes.
        required: true
        x-body-name: notificationRuleTemplate
      responses:
        "204":
          content: {}
          description: The notification rule template was updated.
      summary: Update a notification rule template by replacing items in its definition.
      tags:
      - NotificationRuleTemplate
      x-codegen-request-body-name: notificationRuleTemplate
      x-openapi-router-controller: openapi_server.controllers.notification_rule_template_controller
  /notificationruletemplates/{webId}/notificationrulesubscribers:
    get:
      deprecated: false
      operationId: notification_rule_template_get_notification_rule_template_subscribers
      parameters:
      - description: The ID of the resource to use as the root of the search.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[NotificationRuleSubscriber]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[NotificationRuleSubscriber]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[NotificationRuleSubscriber]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[NotificationRuleSubscriber]"
          description: A list of notification rule template subscribers.
      summary: Retrieve notification rule template subscribers.
      tags:
      - NotificationRuleTemplate
      x-openapi-router-controller: openapi_server.controllers.notification_rule_template_controller
    post:
      deprecated: false
      operationId: notification_rule_template_create_notification_rule_template_subscriber
      parameters:
      - description: The ID of the notification rule template on which to create the
          notification rule subscriber.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationRuleSubscriber'
          text/json:
            schema:
              $ref: '#/components/schemas/NotificationRuleSubscriber'
        description: The new notification rule subscriber definition.
        required: true
        x-body-name: notificationRuleSubscriber
      responses:
        "201":
          content: {}
          description: The notification rule subscriber was created. The response's
            Location header is a link to the notification rule subscriber.
      summary: Create a notification rule subscriber.
      tags:
      - NotificationRuleTemplate
      x-codegen-request-body-name: notificationRuleSubscriber
      x-openapi-router-controller: openapi_server.controllers.notification_rule_template_controller
  /notificationruletemplates/{webId}/security:
    get:
      deprecated: false
      operationId: notification_rule_template_get_security
      parameters:
      - description: The ID of the notification rule template for the security to
          be checked.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "The user identity for the security information to be checked.\
          \ Multiple security identities may be specified with multiple instances\
          \ of the parameter. If the parameter is not specified, only the current\
          \ user's security rights will be returned."
        explode: true
        in: query
        name: userIdentity
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Indicates if the security cache should be refreshed before getting
          security information. The default is 'false'.
        in: query
        name: forceRefresh
        schema:
          type: boolean
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[SecurityRights]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[SecurityRights]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[SecurityRights]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[SecurityRights]"
          description: Security rights.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: An invalid or local account is specified as the user identity.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Access denied for the specified user identity.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Unsupported when using Anonymous authentication method.
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Failed to retrieve the specified user identity.
      summary: Get the security information of the specified security item associated
        with the notification rule template for a specified user.
      tags:
      - NotificationRuleTemplate
      x-openapi-router-controller: openapi_server.controllers.notification_rule_template_controller
  /notificationruletemplates/{webId}/securityentries:
    get:
      deprecated: false
      operationId: notification_rule_template_get_security_entries
      parameters:
      - description: The ID of the notification rule template.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: The name query string used for filtering security entries. The
          default is no filter.
        in: query
        name: nameFilter
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[SecurityEntry]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[SecurityEntry]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[SecurityEntry]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[SecurityEntry]"
          description: A list of security entries matching the specified condition.
      summary: "Retrieve the security entries associated with the notification rule\
        \ template based on the specified criteria. By default, all security entries\
        \ for this notification rule template are returned."
      tags:
      - NotificationRuleTemplate
      x-openapi-router-controller: openapi_server.controllers.notification_rule_template_controller
    post:
      deprecated: false
      operationId: notification_rule_template_create_security_entry
      parameters:
      - description: "The ID of the notification rule template, where the security\
          \ entry will be created."
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "If false, the new access permissions are only applied to the\
          \ associated object. If true, the access permissions of children with any\
          \ parent-child reference types will change when the permissions on the primary\
          \ parent change."
        in: query
        name: applyToChildren
        schema:
          type: boolean
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityEntry'
          text/json:
            schema:
              $ref: '#/components/schemas/SecurityEntry'
        description: The new security entry definition. The full list of allow and
          deny rights must be supplied.
        required: true
        x-body-name: securityEntry
      responses:
        "201":
          content: {}
          description: The security entry was created. The response's Location header
            is a link to the security entry.
      summary: Create a security entry owned by the notification rule template.
      tags:
      - NotificationRuleTemplate
      x-codegen-request-body-name: securityEntry
      x-openapi-router-controller: openapi_server.controllers.notification_rule_template_controller
  /notificationruletemplates/{webId}/securityentries/{name}:
    delete:
      deprecated: false
      operationId: notification_rule_template_delete_security_entry
      parameters:
      - description: "The name of the security entry. For every backslash character\
          \ (\\) in the security entry name, replace with asterisk (*). As an example,\
          \ use domain*username instead of domain\\username."
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: "The ID of the notification rule template, where the security\
          \ entry will be deleted."
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "If false, the new access permissions are only applied to the\
          \ associated object. If true, the access permissions of children with any\
          \ parent-child reference types will change when the permissions on the primary\
          \ parent change."
        in: query
        name: applyToChildren
        schema:
          type: boolean
      responses:
        "204":
          content: {}
          description: The security entry was deleted.
      summary: Delete a security entry owned by the notification rule template.
      tags:
      - NotificationRuleTemplate
      x-openapi-router-controller: openapi_server.controllers.notification_rule_template_controller
    get:
      deprecated: false
      operationId: notification_rule_template_get_security_entry_by_name
      parameters:
      - description: "The name of the security entry. For every backslash character\
          \ (\\) in the security entry name, replace with asterisk (*). As an example,\
          \ use domain*username instead of domain\\username."
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: The ID of the notification rule template.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityEntry'
            text/json:
              schema:
                $ref: '#/components/schemas/SecurityEntry'
            text/html:
              schema:
                $ref: '#/components/schemas/SecurityEntry'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/SecurityEntry'
          description: The security entry matching the specified condition.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: The security entry with the specified name is not found.
      summary: Retrieve the security entry associated with the notification rule template
        with the specified name.
      tags:
      - NotificationRuleTemplate
      x-openapi-router-controller: openapi_server.controllers.notification_rule_template_controller
    put:
      deprecated: false
      operationId: notification_rule_template_update_security_entry
      parameters:
      - description: The name of the security entry.
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: "The ID of the notification rule template, where the security\
          \ entry will be updated."
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "If false, the new access permissions are only applied to the\
          \ associated object. If true, the access permissions of children with any\
          \ parent-child reference types will change when the permissions on the primary\
          \ parent change."
        in: query
        name: applyToChildren
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityEntry'
          text/json:
            schema:
              $ref: '#/components/schemas/SecurityEntry'
        description: The new security entry definition. The full list of allow and
          deny rights must be supplied or they will be removed.
        required: true
        x-body-name: securityEntry
      responses:
        "204":
          content: {}
          description: The security entry was updated.
      summary: Update a security entry owned by the notification rule template.
      tags:
      - NotificationRuleTemplate
      x-codegen-request-body-name: securityEntry
      x-openapi-router-controller: openapi_server.controllers.notification_rule_template_controller
  /points:
    get:
      deprecated: false
      description: "This method returns a PI Point based on the hierarchical path\
        \ associated with it, and should be used when a path has been received from\
        \ a separate part of the PI System for use in the PI Web API. Users should\
        \ primarily search with the WebID when available."
      operationId: point_get_by_path
      parameters:
      - description: The path to the point.
        in: query
        name: path
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Point'
            text/json:
              schema:
                $ref: '#/components/schemas/Point'
            text/html:
              schema:
                $ref: '#/components/schemas/Point'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Point'
          description: The specified point.
      summary: Get a point by path.
      tags:
      - Point
      x-openapi-router-controller: openapi_server.controllers.point_controller
  /points/multiple:
    get:
      deprecated: false
      operationId: point_get_multiple
      parameters:
      - description: Specifies if the retrieval processes should be run in parallel
          on the server. This may improve the response time for large amounts of requested
          points. The default is 'false'.
        in: query
        name: asParallel
        schema:
          type: boolean
      - description: The include mode for the return list. The default is 'All'.
        in: query
        name: includeMode
        schema:
          type: string
      - description: The path of a point. Multiple points may be specified with multiple
          instances of the parameter.
        explode: true
        in: query
        name: path
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: The ID of a point. Multiple points may be specified with multiple
          instances of the parameter.
        explode: true
        in: query
        name: webId
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[Item[Point]]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[Item[Point]]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[Item[Point]]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[Item[Point]]"
          description: The requested points
        "207":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[Item[Point]]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[Item[Point]]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[Item[Point]]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[Item[Point]]"
          description: Some or all items contain exceptions.
      summary: Retrieve multiple points by web id or path.
      tags:
      - Point
      x-openapi-router-controller: openapi_server.controllers.point_controller
  /points/{webId}:
    delete:
      deprecated: false
      operationId: point_delete
      parameters:
      - description: The ID of the point.
        in: path
        name: webId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The point was deleted.
      summary: Delete a point.
      tags:
      - Point
      x-openapi-router-controller: openapi_server.controllers.point_controller
    get:
      deprecated: false
      operationId: point_get
      parameters:
      - description: The ID of the point.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Point'
            text/json:
              schema:
                $ref: '#/components/schemas/Point'
            text/html:
              schema:
                $ref: '#/components/schemas/Point'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Point'
          description: The specified point.
      summary: Get a point.
      tags:
      - Point
      x-openapi-router-controller: openapi_server.controllers.point_controller
    patch:
      deprecated: false
      operationId: point_update
      parameters:
      - description: The ID of the point.
        in: path
        name: webId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Point'
          text/json:
            schema:
              $ref: '#/components/schemas/Point'
        description: A partial point containing the desired changes.
        required: true
        x-body-name: pointDTO
      responses:
        "204":
          content: {}
          description: The point was updated.
      summary: "Update a point. The only PI Point attributes that can be updated include:\
        \ Name, Descriptor, EngineeringUnits, Step, and DisplayDigits. Other PI Point\
        \ attributes cannot be updated through PI Web API."
      tags:
      - Point
      x-codegen-request-body-name: pointDTO
      x-openapi-router-controller: openapi_server.controllers.point_controller
  /points/{webId}/attributes:
    get:
      deprecated: false
      operationId: point_get_attributes
      parameters:
      - description: The ID of the point.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: The name of a point attribute to be returned. Multiple attributes
          may be specified with multiple instances of the parameter.
        explode: true
        in: query
        name: name
        schema:
          items:
            type: string
          type: array
        style: form
      - description: The filter to the names of the list of point attributes to be
          returned. The default is no filter.
        in: query
        name: nameFilter
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[PointAttribute]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[PointAttribute]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[PointAttribute]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[PointAttribute]"
          description: A list of point attributes based on the specified names and
            name filter.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Some or all of the point attribute names could not be found.
      summary: Get point attributes.
      tags:
      - Point
      x-openapi-router-controller: openapi_server.controllers.point_controller
  /points/{webId}/attributes/{name}:
    get:
      deprecated: false
      operationId: point_get_attribute_by_name
      parameters:
      - description: The name of the attribute.
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: The ID of the point.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PointAttribute'
            text/json:
              schema:
                $ref: '#/components/schemas/PointAttribute'
            text/html:
              schema:
                $ref: '#/components/schemas/PointAttribute'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/PointAttribute'
          description: A point attribute specified by its name.
      summary: Get a point attribute by name.
      tags:
      - Point
      x-openapi-router-controller: openapi_server.controllers.point_controller
  /securityidentities:
    get:
      deprecated: false
      description: "This method returns a security identity based on the path associated\
        \ with it, and should be used when a path has been received from a separate\
        \ part of the PI System for use in the PI Web API. Users should primarily\
        \ search with the WebID when available."
      operationId: security_identity_get_by_path
      parameters:
      - description: The path to the security identity.
        in: query
        name: path
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityIdentity'
            text/json:
              schema:
                $ref: '#/components/schemas/SecurityIdentity'
            text/html:
              schema:
                $ref: '#/components/schemas/SecurityIdentity'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/SecurityIdentity'
          description: The specified security identity.
      summary: Retrieve a security identity by path.
      tags:
      - SecurityIdentity
      x-openapi-router-controller: openapi_server.controllers.security_identity_controller
  /securityidentities/{webId}:
    delete:
      deprecated: false
      operationId: security_identity_delete
      parameters:
      - description: The ID of the security identity.
        in: path
        name: webId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The security identity was deleted.
      summary: Delete a security identity.
      tags:
      - SecurityIdentity
      x-openapi-router-controller: openapi_server.controllers.security_identity_controller
    get:
      deprecated: false
      operationId: security_identity_get
      parameters:
      - description: The ID of the security identity.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityIdentity'
            text/json:
              schema:
                $ref: '#/components/schemas/SecurityIdentity'
            text/html:
              schema:
                $ref: '#/components/schemas/SecurityIdentity'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/SecurityIdentity'
          description: The specified security identity.
      summary: Retrieve a security identity.
      tags:
      - SecurityIdentity
      x-openapi-router-controller: openapi_server.controllers.security_identity_controller
    patch:
      deprecated: false
      operationId: security_identity_update
      parameters:
      - description: The ID of the security identity.
        in: path
        name: webId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityIdentity'
          text/json:
            schema:
              $ref: '#/components/schemas/SecurityIdentity'
        description: A partial security identity containing the desired changes.
        required: true
        x-body-name: securityIdentity
      responses:
        "204":
          content: {}
          description: The security identity was updated.
      summary: Update a security identity by replacing items in its definition.
      tags:
      - SecurityIdentity
      x-codegen-request-body-name: securityIdentity
      x-openapi-router-controller: openapi_server.controllers.security_identity_controller
  /securityidentities/{webId}/security:
    get:
      deprecated: false
      operationId: security_identity_get_security
      parameters:
      - description: The ID of the security identity for the security to be checked.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "The user identity for the security information to be checked.\
          \ Multiple security identities may be specified with multiple instances\
          \ of the parameter. If the parameter is not specified, only the current\
          \ user's security rights will be returned."
        explode: true
        in: query
        name: userIdentity
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Indicates if the security cache should be refreshed before getting
          security information. The default is 'false'.
        in: query
        name: forceRefresh
        schema:
          type: boolean
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[SecurityRights]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[SecurityRights]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[SecurityRights]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[SecurityRights]"
          description: Security rights.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: An invalid or local account is specified as the user identity.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Access denied for the specified user identity.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Unsupported when using Anonymous authentication method.
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Failed to retrieve the specified user identity.
      summary: Get the security information of the specified security item associated
        with the security identity for a specified user.
      tags:
      - SecurityIdentity
      x-openapi-router-controller: openapi_server.controllers.security_identity_controller
  /securityidentities/{webId}/securityentries:
    get:
      deprecated: false
      operationId: security_identity_get_security_entries
      parameters:
      - description: The ID of the security identity.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: The name query string used for filtering security entries. The
          default is no filter.
        in: query
        name: nameFilter
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[SecurityEntry]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[SecurityEntry]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[SecurityEntry]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[SecurityEntry]"
          description: A list of security entries matching the specified condition.
      summary: "Retrieve the security entries associated with the security identity\
        \ based on the specified criteria. By default, all security entries for this\
        \ security identity are returned."
      tags:
      - SecurityIdentity
      x-openapi-router-controller: openapi_server.controllers.security_identity_controller
  /securityidentities/{webId}/securityentries/{name}:
    get:
      deprecated: false
      operationId: security_identity_get_security_entry_by_name
      parameters:
      - description: "The name of the security entry. For every backslash character\
          \ (\\) in the security entry name, replace with asterisk (*). As an example,\
          \ use domain*username instead of domain\\username."
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: The ID of the security identity.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityEntry'
            text/json:
              schema:
                $ref: '#/components/schemas/SecurityEntry'
            text/html:
              schema:
                $ref: '#/components/schemas/SecurityEntry'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/SecurityEntry'
          description: The security entry matching the specified condition.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: The security entry with the specified name is not found.
      summary: Retrieve the security entry associated with the security identity with
        the specified name.
      tags:
      - SecurityIdentity
      x-openapi-router-controller: openapi_server.controllers.security_identity_controller
  /securityidentities/{webId}/securitymappings:
    get:
      deprecated: false
      operationId: security_identity_get_security_mappings
      parameters:
      - description: The ID of the security identity.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[SecurityMapping]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[SecurityMapping]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[SecurityMapping]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[SecurityMapping]"
          description: A list of security mappings for the specified security identity.
      summary: Get security mappings for the specified security identity.
      tags:
      - SecurityIdentity
      x-openapi-router-controller: openapi_server.controllers.security_identity_controller
  /securitymappings:
    get:
      deprecated: false
      description: "This method returns a security mapping based on the path associated\
        \ with it, and should be used when a path has been received from a separate\
        \ part of the PI System for use in the PI Web API. Users should primarily\
        \ search with the WebID when available."
      operationId: security_mapping_get_by_path
      parameters:
      - description: The path to the security mapping.
        in: query
        name: path
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityMapping'
            text/json:
              schema:
                $ref: '#/components/schemas/SecurityMapping'
            text/html:
              schema:
                $ref: '#/components/schemas/SecurityMapping'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/SecurityMapping'
          description: The specified security mapping.
      summary: Retrieve a security mapping by path.
      tags:
      - SecurityMapping
      x-openapi-router-controller: openapi_server.controllers.security_mapping_controller
  /securitymappings/{webId}:
    delete:
      deprecated: false
      operationId: security_mapping_delete
      parameters:
      - description: The ID of the security mapping.
        in: path
        name: webId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The security mapping was deleted.
      summary: Delete a security mapping.
      tags:
      - SecurityMapping
      x-openapi-router-controller: openapi_server.controllers.security_mapping_controller
    get:
      deprecated: false
      operationId: security_mapping_get
      parameters:
      - description: The ID of the security mapping.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityMapping'
            text/json:
              schema:
                $ref: '#/components/schemas/SecurityMapping'
            text/html:
              schema:
                $ref: '#/components/schemas/SecurityMapping'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/SecurityMapping'
          description: The specified security mapping.
      summary: Retrieve a security mapping.
      tags:
      - SecurityMapping
      x-openapi-router-controller: openapi_server.controllers.security_mapping_controller
    patch:
      deprecated: false
      operationId: security_mapping_update
      parameters:
      - description: The ID of the security mapping.
        in: path
        name: webId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityMapping'
          text/json:
            schema:
              $ref: '#/components/schemas/SecurityMapping'
        description: A partial security mapping containing the desired changes.
        required: true
        x-body-name: securityMapping
      responses:
        "204":
          content: {}
          description: The security mapping was updated.
      summary: Update a security mapping by replacing items in its definition.
      tags:
      - SecurityMapping
      x-codegen-request-body-name: securityMapping
      x-openapi-router-controller: openapi_server.controllers.security_mapping_controller
  /securitymappings/{webId}/security:
    get:
      deprecated: false
      operationId: security_mapping_get_security
      parameters:
      - description: The ID of the security mapping for the security to be checked.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "The user identity for the security information to be checked.\
          \ Multiple security identities may be specified with multiple instances\
          \ of the parameter. If the parameter is not specified, only the current\
          \ user's security rights will be returned."
        explode: true
        in: query
        name: userIdentity
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Indicates if the security cache should be refreshed before getting
          security information. The default is 'false'.
        in: query
        name: forceRefresh
        schema:
          type: boolean
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[SecurityRights]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[SecurityRights]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[SecurityRights]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[SecurityRights]"
          description: Security rights.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: An invalid or local account is specified as the user mapping.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Access denied for the specified user mapping.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Unsupported when using Anonymous authentication method.
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Failed to retrieve the specified user mapping.
      summary: Get the security information of the specified security item associated
        with the security mapping for a specified user.
      tags:
      - SecurityMapping
      x-openapi-router-controller: openapi_server.controllers.security_mapping_controller
  /securitymappings/{webId}/securityentries:
    get:
      deprecated: false
      operationId: security_mapping_get_security_entries
      parameters:
      - description: The ID of the security mapping.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: The name query string used for filtering security entries. The
          default is no filter.
        in: query
        name: nameFilter
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[SecurityEntry]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[SecurityEntry]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[SecurityEntry]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[SecurityEntry]"
          description: A list of security entries matching the specified condition.
      summary: "Retrieve the security entries associated with the security mapping\
        \ based on the specified criteria. By default, all security entries for this\
        \ security mapping are returned."
      tags:
      - SecurityMapping
      x-openapi-router-controller: openapi_server.controllers.security_mapping_controller
  /securitymappings/{webId}/securityentries/{name}:
    get:
      deprecated: false
      operationId: security_mapping_get_security_entry_by_name
      parameters:
      - description: "The name of the security entry. For every backslash character\
          \ (\\) in the security entry name, replace with asterisk (*). As an example,\
          \ use domain*username instead of domain\\username."
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: The ID of the security mapping.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityEntry'
            text/json:
              schema:
                $ref: '#/components/schemas/SecurityEntry'
            text/html:
              schema:
                $ref: '#/components/schemas/SecurityEntry'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/SecurityEntry'
          description: The security entry matching the specified condition.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: The security entry with the specified name is not found.
      summary: Retrieve the security entry associated with the security mapping with
        the specified name.
      tags:
      - SecurityMapping
      x-openapi-router-controller: openapi_server.controllers.security_mapping_controller
  /streams/updates/{marker}:
    get:
      deprecated: false
      description: "The supplied marker will identify the set of stream updates to\
        \ retrieve. For a 200 response, the returned location header will contain\
        \ the url for retrieving the stream updates."
      operationId: stream_retrieve_stream_update
      parameters:
      - description: Identifier of stream source and current position
        in: path
        name: marker
        required: true
        schema:
          type: string
      - description: "The name or abbreviation of the desired units of measure for\
          \ the returned value, as found in the UOM database associated with the attribute.\
          \ If not specified for an attribute, the attribute's default unit of measure\
          \ is used. If the underlying stream is a point, this value may not be specified,\
          \ as points are not associated with a unit of measure."
        in: query
        name: desiredUnits
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamUpdatesRetrieve'
            text/json:
              schema:
                $ref: '#/components/schemas/StreamUpdatesRetrieve'
            text/html:
              schema:
                $ref: '#/components/schemas/StreamUpdatesRetrieve'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/StreamUpdatesRetrieve'
          description: The stream updates have been successfully retrieved
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Cache not found
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Invalid marker supplied
      summary: Receive stream updates
      tags:
      - Stream
      x-openapi-router-controller: openapi_server.controllers.stream_controller
  /streams/{webId}/channel:
    get:
      deprecated: false
      operationId: stream_get_channel
      parameters:
      - description: The ID of the stream.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "HeartbeatRate is an integer multiple of the Polling Interval.\
          \ It specifies the rate at which a client will receive an empty message\
          \ if there are no data updates. It can be used to check that the connection\
          \ is still alive. Zero/negative values correspond to no heartbeat. By default,\
          \ no empty messages will be sent to the user."
        in: query
        name: heartbeatRate
        schema:
          type: integer
      - description: Specified if the channel should send a message with the current
          value of the stream after the connection is opened. The default is 'false'.
        in: query
        name: includeInitialValues
        schema:
          type: boolean
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "101":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[StreamValues]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[StreamValues]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[StreamValues]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[StreamValues]"
          description: Switches to the Web Socket protocol.
      summary: Opens a channel that will send messages about any value changes for
        the specified stream.
      tags:
      - Stream
      x-openapi-router-controller: openapi_server.controllers.stream_controller
  /streams/{webId}/end:
    get:
      deprecated: false
      operationId: stream_get_end
      parameters:
      - description: The ID of the stream.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "The name or abbreviation of the desired units of measure for\
          \ the returned value, as found in the UOM database associated with the attribute.\
          \ If not specified for an attribute, the attribute's default unit of measure\
          \ is used. If the underlying stream is a point, this value may not be specified,\
          \ as points are not associated with a unit of measure."
        in: query
        name: desiredUnits
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimedValue'
            text/json:
              schema:
                $ref: '#/components/schemas/TimedValue'
            text/html:
              schema:
                $ref: '#/components/schemas/TimedValue'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/TimedValue'
          description: The value at the specified time value.
      summary: Returns the end-of-stream value of the stream.
      tags:
      - Stream
      x-openapi-router-controller: openapi_server.controllers.stream_controller
  /streams/{webId}/interpolated:
    get:
      deprecated: false
      description: Any time series value in the response that contains an 'Errors'
        property indicates PI Web API encountered a handled error during the transfer
        of the response stream.
      operationId: stream_get_interpolated
      parameters:
      - description: The ID of the stream.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "The name or abbreviation of the desired units of measure for\
          \ the returned value, as found in the UOM database associated with the attribute.\
          \ If not specified for an attribute, the attribute's default unit of measure\
          \ is used. If the underlying stream is a point, this value may not be specified,\
          \ as points are not associated with a unit of measure."
        in: query
        name: desiredUnits
        schema:
          type: string
      - description: "An optional end time. The default is '*' for element attributes\
          \ and points. For event frame attributes, the default is the event frame's\
          \ end time, or '*' if that is not set. Note that if endTime is earlier than\
          \ startTime, the resulting values will be in time-descending order."
        in: query
        name: endTime
        schema:
          type: string
      - description: "An optional string containing a filter expression. Expression\
          \ variables are relative to the data point. Use '.' to reference the containing\
          \ attribute. If the attribute does not support filtering, the filter will\
          \ be ignored. The default is no filtering."
        in: query
        name: filterExpression
        schema:
          type: string
      - description: Specify 'true' to indicate that values which fail the filter
          criteria are present in the returned data at the times where they occurred
          with a value set to a 'Filtered' enumeration value with bad status. Repeated
          consecutive failures are omitted.
        in: query
        name: includeFilteredValues
        schema:
          type: boolean
      - description: "The sampling interval, in AFTimeSpan format."
        in: query
        name: interval
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: "An optional start time. The default is '*-1d' for element attributes\
          \ and points. For event frame attributes, the default is the event frame's\
          \ start time, or '*-1d' if that is not set."
        in: query
        name: startTime
        schema:
          type: string
      - description: "An optional start time anchor, in AFTime format. When specified,\
          \ interpolated data retrieval will use the sync time as the origin for calculating\
          \ the interval times."
        in: query
        name: syncTime
        schema:
          type: string
      - description: An optional string specifying the boundary type to use when applying
          a syncTime. The allowed values are 'Inside' and 'Outside'. The default is
          'Inside'.
        in: query
        name: syncTimeBoundaryType
        schema:
          type: string
      - description: "The time zone in which the time string will be interpreted.\
          \ This parameter will be ignored if a time zone is specified in the time\
          \ string. If no time zone is specified in either places, the PI Web API\
          \ server time zone will be used."
        in: query
        name: timeZone
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimedValues'
            text/json:
              schema:
                $ref: '#/components/schemas/TimedValues'
            text/html:
              schema:
                $ref: '#/components/schemas/TimedValues'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/TimedValues'
          description: The values that meet the specified conditions.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: The request was malformed.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: "The data reference does not support this method, or the supplied\
            \ filter expression is unsupported, or the desired units of measure are\
            \ incompatible."
      summary: Retrieves interpolated values over the specified time range at the
        specified sampling interval.
      tags:
      - Stream
      x-openapi-router-controller: openapi_server.controllers.stream_controller
  /streams/{webId}/interpolatedattimes:
    get:
      deprecated: false
      description: Any time series value in the response that contains an 'Errors'
        property indicates PI Web API encountered a handled error during the transfer
        of the response stream.
      operationId: stream_get_interpolated_at_times
      parameters:
      - description: The ID of the stream.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: The timestamp at which to retrieve an interpolated value. Multiple
          timestamps may be specified with multiple instances of the parameter.
        explode: true
        in: query
        name: time
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "The name or abbreviation of the desired units of measure for\
          \ the returned value, as found in the UOM database associated with the attribute.\
          \ If not specified for an attribute, the attribute's default unit of measure\
          \ is used. If the underlying stream is a point, this value may not be specified,\
          \ as points are not associated with a unit of measure."
        in: query
        name: desiredUnits
        schema:
          type: string
      - description: "An optional string containing a filter expression. Expression\
          \ variables are relative to the data point. Use '.' to reference the containing\
          \ attribute. If the attribute does not support filtering, the filter will\
          \ be ignored. The default is no filtering."
        in: query
        name: filterExpression
        schema:
          type: string
      - description: Specify 'true' to indicate that values which fail the filter
          criteria are present in the returned data at the times where they occurred
          with a value set to a 'Filtered' enumeration value with bad status. Repeated
          consecutive failures are omitted.
        in: query
        name: includeFilteredValues
        schema:
          type: boolean
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: The order that the returned collection is sorted. The default
          is 'Ascending'.
        in: query
        name: sortOrder
        schema:
          type: string
      - description: "The time zone in which the time string will be interpreted.\
          \ This parameter will be ignored if a time zone is specified in the time\
          \ string. If no time zone is specified in either places, the PI Web API\
          \ server time zone will be used."
        in: query
        name: timeZone
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimedValues'
            text/json:
              schema:
                $ref: '#/components/schemas/TimedValues'
            text/html:
              schema:
                $ref: '#/components/schemas/TimedValues'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/TimedValues'
          description: The values that meet the specified conditions.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: The request was malformed.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: "The data reference does not support this method, or the supplied\
            \ filter expression is unsupported, or the desired units of measure are\
            \ incompatible."
      summary: Retrieves interpolated values over the specified time range at the
        specified sampling interval.
      tags:
      - Stream
      x-openapi-router-controller: openapi_server.controllers.stream_controller
  /streams/{webId}/plot:
    get:
      deprecated: false
      description: "For each interval, the data available is examined and significant\
        \ values are returned. Each interval can produce up to 5 values if they are\
        \ unique, the first value in the interval, the last value, the highest value,\
        \ the lowest value and at most one exceptional point (bad status or digital\
        \ state). Any time series value in the response that contains an 'Errors'\
        \ property indicates PI Web API encountered a handled error during the transfer\
        \ of the response stream."
      operationId: stream_get_plot
      parameters:
      - description: The ID of the stream.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "The name or abbreviation of the desired units of measure for\
          \ the returned value, as found in the UOM database associated with the attribute.\
          \ If not specified for an attribute, the attribute's default unit of measure\
          \ is used. If the underlying stream is a point, this value may not be specified,\
          \ as points are not associated with a unit of measure."
        in: query
        name: desiredUnits
        schema:
          type: string
      - description: "An optional end time. The default is '*' for element attributes\
          \ and points. For event frame attributes, the default is the event frame's\
          \ end time, or '*' if that is not set. Note that if endTime is earlier than\
          \ startTime, the resulting values will be in time-descending order."
        in: query
        name: endTime
        schema:
          type: string
      - description: "The number of intervals to plot over. Typically, this would\
          \ be the number of horizontal pixels in the trend. The default is '24'.\
          \ For each interval, the data available is examined and significant values\
          \ are returned. Each interval can produce up to 5 values if they are unique,\
          \ the first value in the interval, the last value, the highest value, the\
          \ lowest value and at most one exceptional point (bad status or digital\
          \ state)."
        in: query
        name: intervals
        schema:
          type: integer
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: "An optional start time. The default is '*-1d' for element attributes\
          \ and points. For event frame attributes, the default is the event frame's\
          \ start time, or '*-1d' if that is not set."
        in: query
        name: startTime
        schema:
          type: string
      - description: "The time zone in which the time string will be interpreted.\
          \ This parameter will be ignored if a time zone is specified in the time\
          \ string. If no time zone is specified in either places, the PI Web API\
          \ server time zone will be used."
        in: query
        name: timeZone
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimedValues'
            text/json:
              schema:
                $ref: '#/components/schemas/TimedValues'
            text/html:
              schema:
                $ref: '#/components/schemas/TimedValues'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/TimedValues'
          description: The values that meet the specified conditions
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: The request was malformed.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: "The data reference does not support this method, or the desired\
            \ units of measure are incompatible."
      summary: Retrieves values over the specified time range suitable for plotting
        over the number of intervals (typically represents pixels).
      tags:
      - Stream
      x-openapi-router-controller: openapi_server.controllers.stream_controller
  /streams/{webId}/recorded:
    get:
      deprecated: false
      description: "Returned times are affected by the specified boundary type. If\
        \ no values are found for the time range and conditions specified then the\
        \ HTTP response will be success, with a body containing an empty array of\
        \ Items. When specifying true for the includeFilteredValues parameter, consecutive\
        \ filtered events are not returned. The first value that would be filtered\
        \ out is returned with its time and the enumeration value \"Filtered\". The\
        \ next value in the collection will be the next compressed value in the specified\
        \ direction that passes the filter criteria - if any. When both boundaryType\
        \ and a filterExpression are specified, the events returned for the boundary\
        \ condition specified are passed through the filter. If the includeFilteredValues\
        \ parameter is true, the boundary values will be reported at the proper timestamps\
        \ with the enumeration value \"Filtered\" when the filter conditions are not\
        \ met at the boundary time. If the includeFilteredValues parameter is false\
        \ for this case, no event is returned for the boundary time. Any time series\
        \ value in the response that contains an 'Errors' property indicates PI Web\
        \ API encountered a handled error during the transfer of the response stream.\
        \   If only recorded values with annotations are desired, the filterExpression\
        \ parameter should include the filter IsSet('.', \"a\")."
      operationId: stream_get_recorded
      parameters:
      - description: The ID of the stream.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "Associated values to return in the response, separated by semicolons\
          \ (;). This call supports Annotations to return events with annotation values.\
          \ If this parameter is not specified, annotation values are not returned."
        in: query
        name: associations
        schema:
          type: string
      - description: An optional value that determines how the times and values of
          the returned end points are determined. The default is 'Inside'.
        in: query
        name: boundaryType
        schema:
          type: string
      - description: "The name or abbreviation of the desired units of measure for\
          \ the returned value, as found in the UOM database associated with the attribute.\
          \ If not specified for an attribute, the attribute's default unit of measure\
          \ is used. If the underlying stream is a point, this value may not be specified,\
          \ as points are not associated with a unit of measure."
        in: query
        name: desiredUnits
        schema:
          type: string
      - description: "An optional end time. The default is '*' for element attributes\
          \ and points. For event frame attributes, the default is the event frame's\
          \ end time, or '*' if that is not set. Note that if endTime is earlier than\
          \ startTime, the resulting values will be in time-descending order."
        in: query
        name: endTime
        schema:
          type: string
      - description: An optional string containing a filter expression. Expression
          variables are relative to the data point. Use '.' to reference the containing
          attribute. The default is no filtering.
        in: query
        name: filterExpression
        schema:
          type: string
      - description: Specify 'true' to indicate that values which fail the filter
          criteria are present in the returned data at the times where they occurred
          with a value set to a 'Filtered' enumeration value with bad status. Repeated
          consecutive failures are omitted.
        in: query
        name: includeFilteredValues
        schema:
          type: boolean
      - description: The maximum number of values to be returned. The default is 1000.
        in: query
        name: maxCount
        schema:
          type: integer
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: "An optional start time. The default is '*-1d' for element attributes\
          \ and points. For event frame attributes, the default is the event frame's\
          \ start time, or '*-1d' if that is not set."
        in: query
        name: startTime
        schema:
          type: string
      - description: "The time zone in which the time string will be interpreted.\
          \ This parameter will be ignored if a time zone is specified in the time\
          \ string. If no time zone is specified in either places, the PI Web API\
          \ server time zone will be used."
        in: query
        name: timeZone
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtendedTimedValues'
            text/json:
              schema:
                $ref: '#/components/schemas/ExtendedTimedValues'
            text/html:
              schema:
                $ref: '#/components/schemas/ExtendedTimedValues'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/ExtendedTimedValues'
          description: The values that meet the specified conditions.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: The request was malformed.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: "The data reference does not support the method, or the supplied\
            \ filter expression is unsupported, or the desired units of measure are\
            \ incompatible, or an unsupported association was specified."
      summary: Returns a list of compressed values for the requested time range from
        the source provider.
      tags:
      - Stream
      x-openapi-router-controller: openapi_server.controllers.stream_controller
    post:
      deprecated: false
      operationId: stream_update_values
      parameters:
      - description: The ID of the stream.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: The desired AFBufferOption. The default is 'BufferIfPossible'.
        in: query
        name: bufferOption
        schema:
          type: string
      - description: The desired AFUpdateOption. The default is 'Replace'.
        in: query
        name: updateOption
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/TimedValue'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/TimedValue'
              type: array
        description: The values to add or update.
        required: true
        x-body-name: values
      responses:
        "204":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[Substatus]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[Substatus]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[Substatus]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[Substatus]"
          description: All updates executed successfully.
        "207":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[Substatus]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[Substatus]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[Substatus]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[Substatus]"
          description: The operation was a partial success. The response body contains
            substatuses and errors in the same order as the supplied values.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: The data reference does not support this operation.
      summary: Updates multiple values for the specified stream.
      tags:
      - Stream
      x-codegen-request-body-name: values
      x-openapi-router-controller: openapi_server.controllers.stream_controller
  /streams/{webId}/recordedattime:
    get:
      deprecated: false
      description: "If only recorded values with annotations are desired, the filterExpression\
        \ parameter should include the filter IsSet('.', \"a\")."
      operationId: stream_get_recorded_at_time
      parameters:
      - description: The ID of the stream.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: The timestamp at which the value is desired.
        in: query
        name: time
        required: true
        schema:
          type: string
      - description: "Associated values to return in the response, separated by semicolons\
          \ (;). This call supports Annotations to return events with annotation values.\
          \ If this parameter is not specified, annotation values are not returned."
        in: query
        name: associations
        schema:
          type: string
      - description: "The name or abbreviation of the desired units of measure for\
          \ the returned value, as found in the UOM database associated with the attribute.\
          \ If not specified for an attribute, the attribute's default unit of measure\
          \ is used. If the underlying stream is a point, this value may not be specified,\
          \ as points are not associated with a unit of measure."
        in: query
        name: desiredUnits
        schema:
          type: string
      - description: An optional value that determines the value to return when a
          value doesn't exist at the exact time specified. The default is 'Auto'.
        in: query
        name: retrievalMode
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: "The time zone in which the time string will be interpreted.\
          \ This parameter will be ignored if a time zone is specified in the time\
          \ string. If no time zone is specified in either places, the PI Web API\
          \ server time zone will be used."
        in: query
        name: timeZone
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtendedTimedValue'
            text/json:
              schema:
                $ref: '#/components/schemas/ExtendedTimedValue'
            text/html:
              schema:
                $ref: '#/components/schemas/ExtendedTimedValue'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/ExtendedTimedValue'
          description: The value that meet the specified conditions.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: The request was malformed.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: "The data reference does not support the method, or the desired\
            \ units of measure are incompatible."
      summary: Returns a single recorded value based on the passed time and retrieval
        mode from the stream.
      tags:
      - Stream
      x-openapi-router-controller: openapi_server.controllers.stream_controller
  /streams/{webId}/recordedattimes:
    get:
      deprecated: false
      description: "Any time series value in the response that contains an 'Errors'\
        \ property indicates PI Web API encountered a handled error during the transfer\
        \ of the response stream.   If only recorded values with annotations are desired,\
        \ the filterExpression parameter should include the filter IsSet('.', \"a\"\
        )."
      operationId: stream_get_recorded_at_times
      parameters:
      - description: The ID of the stream.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: The timestamp at which to retrieve a recorded value. Multiple
          timestamps may be specified with multiple instances of the parameter.
        explode: true
        in: query
        name: time
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Associated values to return in the response, separated by semicolons\
          \ (;). This call supports Annotations to return events with annotation values.\
          \ If this parameter is not specified, annotation values are not returned."
        in: query
        name: associations
        schema:
          type: string
      - description: "The name or abbreviation of the desired units of measure for\
          \ the returned value, as found in the UOM database associated with the attribute.\
          \ If not specified for an attribute, the attribute's default unit of measure\
          \ is used. If the underlying stream is a point, this value may not be specified,\
          \ as points are not associated with a unit of measure."
        in: query
        name: desiredUnits
        schema:
          type: string
      - description: An optional value that determines the value to return when a
          value doesn't exist at the exact time specified. The default is 'Auto'.
        in: query
        name: retrievalMode
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: The order that the returned collection is sorted. The default
          is 'Ascending'.
        in: query
        name: sortOrder
        schema:
          type: string
      - description: "The time zone in which the time string will be interpreted.\
          \ This parameter will be ignored if a time zone is specified in the time\
          \ string. If no time zone is specified in either places, the PI Web API\
          \ server time zone will be used."
        in: query
        name: timeZone
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtendedTimedValues'
            text/json:
              schema:
                $ref: '#/components/schemas/ExtendedTimedValues'
            text/html:
              schema:
                $ref: '#/components/schemas/ExtendedTimedValues'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/ExtendedTimedValues'
          description: The values that meet the specified conditions.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: The request was malformed.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: "The data reference does not support this method, or the desired\
            \ units of measure are incompatible."
      summary: Retrieves recorded values at the specified times.
      tags:
      - Stream
      x-openapi-router-controller: openapi_server.controllers.stream_controller
  /streams/{webId}/summary:
    get:
      deprecated: false
      description: "Count is the only summary type supported on non-numeric streams.\
        \ Requesting a summary for any other type will generate an error. Time-weighted\
        \ totals are computed by integrating the rate tag values over the requested\
        \ time range. If some of the data are bad in the time range, the calculated\
        \ total is divided by the fraction of the time period for which there are\
        \ good values. This approach is equivalent to assuming that during the period\
        \ of bad data, the tag takes on the average values for the entire calculation\
        \ time range. The PercentGood summary may be used to determine if the calculation\
        \ results are suitable for the application's purposes. For time-weighted totals,\
        \ if the time unit rate of the stream cannot be determined, then the value\
        \ will be totaled assuming a unit of \"per day\" and no unit of measure will\
        \ be assigned to the value. If the measured time component of the tag is not\
        \ based on a day, the user of the data must convert the totalized value to\
        \ the correct units."
      operationId: stream_get_summary
      parameters:
      - description: The ID of the stream.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: Specifies the method of evaluating the data over the time range.
          The default is 'TimeWeighted'.
        in: query
        name: calculationBasis
        schema:
          type: string
      - description: "An optional end time. The default is '*' for element attributes\
          \ and points. For event frame attributes, the default is the event frame's\
          \ end time, or '*' if that is not set. Note that if endTime is earlier than\
          \ startTime, the resulting values will be in time-descending order."
        in: query
        name: endTime
        schema:
          type: string
      - description: A string containing a filter expression. Expression variables
          are relative to the attribute. Use '.' to reference the containing attribute.
        in: query
        name: filterExpression
        schema:
          type: string
      - description: "When the sampleType is Interval, sampleInterval specifies how\
          \ often the filter expression is evaluated when computing the summary for\
          \ an interval."
        in: query
        name: sampleInterval
        schema:
          type: string
      - description: Defines the evaluation of an expression over a time range. The
          default is 'ExpressionRecordedValues'.
        in: query
        name: sampleType
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: "An optional start time. The default is '*-1d' for element attributes\
          \ and points. For event frame attributes, the default is the event frame's\
          \ start time, or '*-1d' if that is not set."
        in: query
        name: startTime
        schema:
          type: string
      - description: "The duration of each summary interval. If specified in hours,\
          \ minutes, seconds, or milliseconds, the summary durations will be evenly\
          \ spaced UTC time intervals. Longer interval types are interpreted using\
          \ wall clock rules and are time zone dependent."
        in: query
        name: summaryDuration
        schema:
          type: string
      - description: Specifies the kinds of summaries to produce over the range. The
          default is 'Total'. Multiple summary types may be specified by using multiple
          instances of summaryType.
        explode: true
        in: query
        name: summaryType
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Specifies how to calculate the timestamp for each interval. The
          default is 'Auto'.
        in: query
        name: timeType
        schema:
          type: string
      - description: "The time zone in which the time string will be interpreted.\
          \ This parameter will be ignored if a time zone is specified in the time\
          \ string. If no time zone is specified in either places, the PI Web API\
          \ server time zone will be used."
        in: query
        name: timeZone
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[SummaryValue]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[SummaryValue]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[SummaryValue]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[SummaryValue]"
          description: The summaries that meet the specified conditions.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: The data reference does not support this method.
      summary: Returns a summary over the specified time range for the stream.
      tags:
      - Stream
      x-openapi-router-controller: openapi_server.controllers.stream_controller
  /streams/{webId}/updates:
    post:
      deprecated: false
      description: "The supplied webId will register for stream updates. For a 201\
        \ or 204 response, the returned location header will contain the url for retrieving\
        \ the next set of stream updates."
      operationId: stream_register_stream_update
      parameters:
      - description: The ID of the stream.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamUpdatesRegister'
            text/json:
              schema:
                $ref: '#/components/schemas/StreamUpdatesRegister'
            text/html:
              schema:
                $ref: '#/components/schemas/StreamUpdatesRegister'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/StreamUpdatesRegister'
          description: Successful registration
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Invalid webId
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: WebId represents a static attribute
      summary: Register for stream updates
      tags:
      - Stream
      x-openapi-router-controller: openapi_server.controllers.stream_controller
  /streams/{webId}/value:
    get:
      deprecated: false
      operationId: stream_get_value
      parameters:
      - description: The ID of the stream.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "The name or abbreviation of the desired units of measure for\
          \ the returned value, as found in the UOM database associated with the attribute.\
          \ If not specified for an attribute, the attribute's default unit of measure\
          \ is used. If the underlying stream is a point, this value may not be specified,\
          \ as points are not associated with a unit of measure."
        in: query
        name: desiredUnits
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: "An optional time. The default time context is determined from\
          \ the owning object - for example, the time range of the event frame or\
          \ transfer which holds this attribute. Otherwise, the implementation of\
          \ the Data Reference determines the meaning of no context. For Points or\
          \ simply configured PI Point Data References, this means the snapshot value\
          \ of the PI Point on the Data Server."
        in: query
        name: time
        schema:
          type: string
      - description: "The time zone in which the time string will be interpreted.\
          \ This parameter will be ignored if a time zone is specified in the time\
          \ string. If no time zone is specified in either places, the PI Web API\
          \ server time zone will be used."
        in: query
        name: timeZone
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimedValue'
            text/json:
              schema:
                $ref: '#/components/schemas/TimedValue'
            text/html:
              schema:
                $ref: '#/components/schemas/TimedValue'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/TimedValue'
          description: The value at the specified time value.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: "The data reference does not support the method, or the desired\
            \ units of measure are incompatible."
      summary: "Returns the value of the stream at the specified time. By default,\
        \ this is usually the current value."
      tags:
      - Stream
      x-openapi-router-controller: openapi_server.controllers.stream_controller
    post:
      deprecated: false
      operationId: stream_update_value
      parameters:
      - description: The ID of the stream.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: The desired AFBufferOption. The default is 'BufferIfPossible'.
        in: query
        name: bufferOption
        schema:
          type: string
      - description: The desired AFUpdateOption. The default is 'Replace'. This parameter
          is ignored if the attribute is a configuration item.
        in: query
        name: updateOption
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimedValue'
          text/json:
            schema:
              $ref: '#/components/schemas/TimedValue'
        description: The value to add or update.
        required: true
        x-body-name: value
      responses:
        "202":
          content: {}
          description: The value was accepted for a potential buffered update. The
            response's Location header is a link that can be used to examine the result.
        "204":
          content: {}
          description: The update operation was successfully applied. The response's
            Location header is a link that can be used to examine the result.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: The request was malformed.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: "The attribute or data reference does not support this operation,\
            \ or the specified units are incompatible."
      summary: Updates a value for the specified stream.
      tags:
      - Stream
      x-codegen-request-body-name: value
      x-openapi-router-controller: openapi_server.controllers.stream_controller
  /streamsets/channel:
    get:
      deprecated: false
      operationId: stream_set_get_channel_ad_hoc
      parameters:
      - description: The ID of a stream. Multiple streams may be specified with multiple
          instances of the parameter.
        explode: true
        in: query
        name: webId
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Specifies the maximum number of consecutive empty messages that\
          \ can be elapsed with no new data updates from the PI System, after which\
          \ the client receives an empty payload. It helps to check if the connection\
          \ is still alive. Zero/negative values correspond to no heartbeat, and the\
          \ default value is no heartbeat."
        in: query
        name: heartbeatRate
        schema:
          type: integer
      - description: Specified if the channel should send a message with the current
          values of all the streams after the connection is opened. The default is
          'false'.
        in: query
        name: includeInitialValues
        schema:
          type: boolean
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "101":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[StreamValue]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[StreamValue]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[StreamValue]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[StreamValue]"
          description: Switches to the Web Socket protocol.
      summary: Opens a channel that will send messages about any value changes for
        the specified streams.
      tags:
      - StreamSet
      x-openapi-router-controller: openapi_server.controllers.stream_set_controller
  /streamsets/end:
    get:
      deprecated: false
      description: Any time series value in the response that contains an 'Errors'
        property indicates PI Web API encountered a handled error during the transfer
        of the response stream.
      operationId: stream_set_get_end_ad_hoc
      parameters:
      - description: The ID of a stream. Multiple streams may be specified with multiple
          instances of the parameter.
        explode: true
        in: query
        name: webId
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: "The field or property of the object used to sort the returned\
          \ collection. For better performance, by default no sorting is applied.\
          \ 'Name' is the only supported field by which to sort."
        in: query
        name: sortField
        schema:
          type: string
      - description: The order that the returned collection is sorted. The default
          is 'Ascending'
        in: query
        name: sortOrder
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[StreamValues]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[StreamValues]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[StreamValues]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[StreamValues]"
          description: End of stream values of the streams that meet the specified
            conditions.
      summary: Returns End Of Stream values for attributes of the specified streams
      tags:
      - StreamSet
      x-openapi-router-controller: openapi_server.controllers.stream_set_controller
  /streamsets/interpolated:
    get:
      deprecated: false
      description: Any time series value in the response that contains an 'Errors'
        property indicates PI Web API encountered a handled error during the transfer
        of the response stream.
      operationId: stream_set_get_interpolated_ad_hoc
      parameters:
      - description: The ID of a stream. Multiple streams may be specified with multiple
          instances of the parameter.
        explode: true
        in: query
        name: webId
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "An optional end time. The default is '*'. Note that if endTime\
          \ is earlier than startTime, the resulting values will be in time-descending\
          \ order."
        in: query
        name: endTime
        schema:
          type: string
      - description: "An optional string containing a filter expression. Expression\
          \ variables are relative to the data point. Use '.' to reference the containing\
          \ attribute. If the attribute does not support filtering, the filter will\
          \ be ignored. The default is no filtering."
        in: query
        name: filterExpression
        schema:
          type: string
      - description: Specify 'true' to indicate that values which fail the filter
          criteria are present in the returned data at the times where they occurred
          with a value set to a 'Filtered' enumeration value with bad status. Repeated
          consecutive failures are omitted.
        in: query
        name: includeFilteredValues
        schema:
          type: boolean
      - description: "The sampling interval, in AFTimeSpan format."
        in: query
        name: interval
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: "The field or property of the object used to sort the returned\
          \ collection. For better performance, by default no sorting is applied.\
          \ 'Name' is the only supported field by which to sort."
        in: query
        name: sortField
        schema:
          type: string
      - description: The order that the returned collection is sorted. The default
          is 'Ascending'
        in: query
        name: sortOrder
        schema:
          type: string
      - description: An optional start time. The default is '*-1d'.
        in: query
        name: startTime
        schema:
          type: string
      - description: "An optional start time anchor, in AFTime format. When specified,\
          \ interpolated data retrieval will use the sync time as the origin for calculating\
          \ the interval times."
        in: query
        name: syncTime
        schema:
          type: string
      - description: An optional string specifying the boundary type to use when applying
          a syncTime. The allowed values are 'Inside' and 'Outside'. The default is
          'Inside'.
        in: query
        name: syncTimeBoundaryType
        schema:
          type: string
      - description: "The time zone in which the time string will be interpreted.\
          \ This parameter will be ignored if a time zone is specified in the time\
          \ string. If no time zone is specified in either places, the PI Web API\
          \ server time zone will be used."
        in: query
        name: timeZone
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[StreamValues]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[StreamValues]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[StreamValues]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[StreamValues]"
          description: Interpolated values of the streams that meet the specified
            conditions.
      summary: Returns interpolated values of the specified streams over the specified
        time range at the specified sampling interval.
      tags:
      - StreamSet
      x-openapi-router-controller: openapi_server.controllers.stream_set_controller
  /streamsets/interpolatedattimes:
    get:
      deprecated: false
      description: Any time series value in the response that contains an 'Errors'
        property indicates PI Web API encountered a handled error during the transfer
        of the response stream.
      operationId: stream_set_get_interpolated_at_times_ad_hoc
      parameters:
      - description: The timestamp at which to retrieve a interpolated value. Multiple
          timestamps may be specified with multiple instances of the parameter.
        explode: true
        in: query
        name: time
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: The ID of a stream. Multiple streams may be specified with multiple
          instances of the parameter.
        explode: true
        in: query
        name: webId
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "An optional string containing a filter expression. Expression\
          \ variables are relative to the data point. Use '.' to reference the containing\
          \ attribute. If the attribute does not support filtering, the filter will\
          \ be ignored. The default is no filtering."
        in: query
        name: filterExpression
        schema:
          type: string
      - description: Specify 'true' to indicate that values which fail the filter
          criteria are present in the returned data at the times where they occurred
          with a value set to a 'Filtered' enumeration value with bad status. Repeated
          consecutive failures are omitted.
        in: query
        name: includeFilteredValues
        schema:
          type: boolean
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: The order that the returned collection is sorted. The default
          is 'Ascending'.
        in: query
        name: sortOrder
        schema:
          type: string
      - description: "The time zone in which the time string will be interpreted.\
          \ This parameter will be ignored if a time zone is specified in the time\
          \ string. If no time zone is specified in either places, the PI Web API\
          \ server time zone will be used."
        in: query
        name: timeZone
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[StreamValues]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[StreamValues]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[StreamValues]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[StreamValues]"
          description: Interpolated values of the streams that meet the specified
            conditions.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: The request was malformed.
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: The request was cancelled.
      summary: Returns interpolated values of the specified streams at the specified
        times.
      tags:
      - StreamSet
      x-openapi-router-controller: openapi_server.controllers.stream_set_controller
  /streamsets/joined:
    get:
      deprecated: false
      description: Any time series value in the response that contains an 'Errors'
        property indicates PI Web API encountered a handled error during the transfer
        of the response stream. The first stream in the response is always the X-Axis.
      operationId: stream_set_get_joined
      parameters:
      - description: The ID of the base stream which is used for retrieving the recorded
          values.
        in: query
        name: baseWebId
        required: true
        schema:
          type: string
      - description: The ID of a stream whose values will be joined on the times with
          the values of the base stream. Multiple streams may be specified with multiple
          instances of the parameter.
        explode: true
        in: query
        name: subordinateWebId
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: An optional value that determines how the times and values of
          the returned end points are determined. The default is 'Inside'.
        in: query
        name: boundaryType
        schema:
          type: string
      - description: "An optional end time. The default is '*' for element attributes\
          \ and points. For event frame attributes, the default is the event frame's\
          \ end time, or '*' if that is not set. Note that if endTime is earlier than\
          \ startTime, the resulting values will be in time-descending order."
        in: query
        name: endTime
        schema:
          type: string
      - description: An optional string containing a filter expression. Expression
          variables are relative to the data point. Use '.' to reference the containing
          attribute. The default is no filtering.
        in: query
        name: filterExpression
        schema:
          type: string
      - description: Specify 'true' to indicate that values which fail the filter
          criteria are present in the returned data at the times where they occurred
          with a value set to a 'Filtered' enumeration value with bad status. Repeated
          consecutive failures are omitted.
        in: query
        name: includeFilteredValues
        schema:
          type: boolean
      - description: The maximum number of values to be returned. The default is 1000.
        in: query
        name: maxCount
        schema:
          type: integer
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: "An optional start time. The default is '*-1d' for element attributes\
          \ and points. For event frame attributes, the default is the event frame's\
          \ start time, or '*-1d' if that is not set."
        in: query
        name: startTime
        schema:
          type: string
      - description: "The time zone in which the time string will be interpreted.\
          \ This parameter will be ignored if a time zone is specified in the time\
          \ string. If no time zone is specified in either place, the PI Web API server\
          \ time zone will be used."
        in: query
        name: timeZone
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[StreamValues]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[StreamValues]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[StreamValues]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[StreamValues]"
          description: Recorded values of the streams that meet the specified conditions.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Unsupported operation on the given AF object.
      summary: Returns the base stream's recorded values and subordinate streams'
        interpolated values at times matching the recorded values' timestamps.
      tags:
      - StreamSet
      x-openapi-router-controller: openapi_server.controllers.stream_set_controller
  /streamsets/plot:
    get:
      deprecated: false
      description: "For each interval, the data available is examined and significant\
        \ values are returned. Each interval can produce up to 5 values if they are\
        \ unique, the first value in the interval, the last value, the highest value,\
        \ the lowest value and at most one exceptional point (bad status or digital\
        \ state). Any time series value in the response that contains an 'Errors'\
        \ property indicates PI Web API encountered a handled error during the transfer\
        \ of the response stream."
      operationId: stream_set_get_plot_ad_hoc
      parameters:
      - description: The ID of a stream. Multiple streams may be specified with multiple
          instances of the parameter.
        explode: true
        in: query
        name: webId
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "An optional end time. The default is '*'. Note that if endTime\
          \ is earlier than startTime, the resulting values will be in time-descending\
          \ order."
        in: query
        name: endTime
        schema:
          type: string
      - description: "The number of intervals to plot over. Typically, this would\
          \ be the number of horizontal pixels in the trend. The default is '24'.\
          \ For each interval, the data available is examined and significant values\
          \ are returned. Each interval can produce up to 5 values if they are unique,\
          \ the first value in the interval, the last value, the highest value, the\
          \ lowest value and at most one exceptional point (bad status or digital\
          \ state)."
        in: query
        name: intervals
        schema:
          type: integer
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: "The field or property of the object used to sort the returned\
          \ collection. For better performance, by default no sorting is applied.\
          \ 'Name' is the only supported field by which to sort."
        in: query
        name: sortField
        schema:
          type: string
      - description: The order that the returned collection is sorted. The default
          is 'Ascending'
        in: query
        name: sortOrder
        schema:
          type: string
      - description: An optional start time. The default is '*-1d'.
        in: query
        name: startTime
        schema:
          type: string
      - description: "The time zone in which the time string will be interpreted.\
          \ This parameter will be ignored if a time zone is specified in the time\
          \ string. If no time zone is specified in either places, the PI Web API\
          \ server time zone will be used."
        in: query
        name: timeZone
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[StreamValues]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[StreamValues]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[StreamValues]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[StreamValues]"
          description: Plot values of the streams that meet the specified conditions.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Unsupported operation on the given AF object.
      summary: Returns values of attributes for the specified streams over the specified
        time range suitable for plotting over the number of intervals (typically represents
        pixels).
      tags:
      - StreamSet
      x-openapi-router-controller: openapi_server.controllers.stream_set_controller
  /streamsets/recorded:
    get:
      deprecated: false
      description: Any time series value in the response that contains an 'Errors'
        property indicates PI Web API encountered a handled error during the transfer
        of the response stream.
      operationId: stream_set_get_recorded_ad_hoc
      parameters:
      - description: The ID of a stream. Multiple streams may be specified with multiple
          instances of the parameter.
        explode: true
        in: query
        name: webId
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: An optional value that determines how the times and values of
          the returned end points are determined. The default is 'Inside'.
        in: query
        name: boundaryType
        schema:
          type: string
      - description: "An optional end time. The default is '*'. Note that if endTime\
          \ is earlier than startTime, the resulting values will be in time-descending\
          \ order."
        in: query
        name: endTime
        schema:
          type: string
      - description: An optional string containing a filter expression. Expression
          variables are relative to the data point. Use '.' to reference the containing
          attribute. The default is no filtering.
        in: query
        name: filterExpression
        schema:
          type: string
      - description: Specify 'true' to indicate that values which fail the filter
          criteria are present in the returned data at the times where they occurred
          with a value set to a 'Filtered' enumeration value with bad status. Repeated
          consecutive failures are omitted.
        in: query
        name: includeFilteredValues
        schema:
          type: boolean
      - description: The maximum number of values to be returned. The default is 1000.
        in: query
        name: maxCount
        schema:
          type: integer
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: "The field or property of the object used to sort the returned\
          \ collection. For better performance, by default no sorting is applied.\
          \ 'Name' is the only supported field by which to sort."
        in: query
        name: sortField
        schema:
          type: string
      - description: The order that the returned collection is sorted. The default
          is 'Ascending'
        in: query
        name: sortOrder
        schema:
          type: string
      - description: An optional start time. The default is '*-1d'.
        in: query
        name: startTime
        schema:
          type: string
      - description: "The time zone in which the time string will be interpreted.\
          \ This parameter will be ignored if a time zone is specified in the time\
          \ string. If no time zone is specified in either places, the PI Web API\
          \ server time zone will be used."
        in: query
        name: timeZone
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[StreamValues]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[StreamValues]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[StreamValues]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[StreamValues]"
          description: Recorded values of the streams that meet the specified conditions.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Unsupported operation on the given AF object.
      summary: Returns recorded values of the specified streams.
      tags:
      - StreamSet
      x-openapi-router-controller: openapi_server.controllers.stream_set_controller
    post:
      deprecated: false
      operationId: stream_set_update_values_ad_hoc
      parameters:
      - description: The desired AFBufferOption. The default is 'BufferIfPossible'.
        in: query
        name: bufferOption
        schema:
          type: string
      - description: The desired AFUpdateOption. The default is 'Replace'.
        in: query
        name: updateOption
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/StreamValues'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/StreamValues'
              type: array
        description: The values to add or update.
        required: true
        x-body-name: values
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[Items[Substatus]]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[Items[Substatus]]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[Items[Substatus]]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[Items[Substatus]]"
          description: All updates executed successfully.
        "207":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[Items[Substatus]]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[Items[Substatus]]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[Items[Substatus]]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[Items[Substatus]]"
          description: The operation was a partial success. The response body contains
            substatuses and errors in the same order as the supplied values.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Unsupported operation on the given AF object.
      summary: Updates multiple values for the specified streams.
      tags:
      - StreamSet
      x-codegen-request-body-name: values
      x-openapi-router-controller: openapi_server.controllers.stream_set_controller
  /streamsets/recordedattime:
    get:
      deprecated: false
      description: Any time series value in the response that contains an 'Errors'
        property indicates PI Web API encountered a handled error during the transfer
        of the response stream.
      operationId: stream_set_get_recorded_at_time_ad_hoc
      parameters:
      - description: The timestamp at which the values are desired.
        in: query
        name: time
        required: true
        schema:
          type: string
      - description: The ID of a stream. Multiple streams may be specified with multiple
          instances of the parameter.
        explode: true
        in: query
        name: webId
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: An optional value that determines the values to return when values
          don't exist at the exact time specified. The default is 'Auto'.
        in: query
        name: retrievalMode
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: "The time zone in which the time string will be interpreted.\
          \ This parameter will be ignored if a time zone is specified in the time\
          \ string. If no time zone is specified in either places, the PI Web API\
          \ server time zone will be used."
        in: query
        name: timeZone
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[StreamValue]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[StreamValue]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[StreamValue]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[StreamValue]"
          description: Recorded values of the streams that meet the specified conditions.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Unsupported operation on the given AF object.
      summary: Returns recorded values based on the passed time and retrieval mode.
      tags:
      - StreamSet
      x-openapi-router-controller: openapi_server.controllers.stream_set_controller
  /streamsets/recordedattimes:
    get:
      deprecated: false
      description: Any time series value in the response that contains an 'Errors'
        property indicates PI Web API encountered a handled error during the transfer
        of the response stream.
      operationId: stream_set_get_recorded_at_times_ad_hoc
      parameters:
      - description: The timestamp at which to retrieve a recorded value. Multiple
          timestamps may be specified with multiple instances of the parameter.
        explode: true
        in: query
        name: time
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: The ID of a stream. Multiple streams may be specified with multiple
          instances of the parameter.
        explode: true
        in: query
        name: webId
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: An optional value that determines the values to return when values
          don't exist at the exact time specified. The default is 'Auto'.
        in: query
        name: retrievalMode
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: The order that the returned collection is sorted. The default
          is 'Ascending'.
        in: query
        name: sortOrder
        schema:
          type: string
      - description: "The time zone in which the time string will be interpreted.\
          \ This parameter will be ignored if a time zone is specified in the time\
          \ string. If no time zone is specified in either places, the PI Web API\
          \ server time zone will be used."
        in: query
        name: timeZone
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[StreamValues]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[StreamValues]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[StreamValues]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[StreamValues]"
          description: Recorded values of the streams that meet the specified conditions.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: The request was malformed.
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: The request was cancelled.
      summary: Returns recorded values of the specified streams at the specified times.
      tags:
      - StreamSet
      x-openapi-router-controller: openapi_server.controllers.stream_set_controller
  /streamsets/summary:
    get:
      deprecated: false
      description: Any time series value in the response that contains an 'Errors'
        property indicates PI Web API encountered a handled error during the transfer
        of the response stream.
      operationId: stream_set_get_summaries_ad_hoc
      parameters:
      - description: The ID of a stream. Multiple streams may be specified with multiple
          instances of the parameter.
        explode: true
        in: query
        name: webId
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Specifies the method of evaluating the data over the time range.
          The default is 'TimeWeighted'.
        in: query
        name: calculationBasis
        schema:
          type: string
      - description: "An optional end time. The default is '*'. Note that if endTime\
          \ is earlier than startTime, the resulting values will be in time-descending\
          \ order."
        in: query
        name: endTime
        schema:
          type: string
      - description: A string containing a filter expression. Expression variables
          are relative to the attribute. Use '.' to reference the containing attribute.
          The default is no filtering.
        in: query
        name: filterExpression
        schema:
          type: string
      - description: "A time span specifies how often the filter expression is evaluated\
          \ when computing the summary for an interval, if the sampleType is 'Interval'."
        in: query
        name: sampleInterval
        schema:
          type: string
      - description: A flag which specifies one or more summaries to compute for each
          interval over the time range. The default is 'ExpressionRecordedValues'.
        in: query
        name: sampleType
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: An optional start time. The default is '*-1d'.
        in: query
        name: startTime
        schema:
          type: string
      - description: The duration of each summary interval.
        in: query
        name: summaryDuration
        schema:
          type: string
      - description: Specifies the kinds of summaries to produce over the range. The
          default is 'Total'. Multiple summary types may be specified by using multiple
          instances of summaryType.
        explode: true
        in: query
        name: summaryType
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Specifies how to calculate the timestamp for each interval. The
          default is 'Auto'.
        in: query
        name: timeType
        schema:
          type: string
      - description: "The time zone in which the time string will be interpreted.\
          \ This parameter will be ignored if a time zone is specified in the time\
          \ string. If no time zone is specified in either places, the PI Web API\
          \ server time zone will be used."
        in: query
        name: timeZone
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[StreamSummaries]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[StreamSummaries]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[StreamSummaries]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[StreamSummaries]"
          description: Summary values of the streams that meet the specified conditions.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Unsupported operation on the given AF object.
      summary: Returns summary values of the specified streams.
      tags:
      - StreamSet
      x-openapi-router-controller: openapi_server.controllers.stream_set_controller
  /streamsets/updates:
    get:
      deprecated: false
      description: "The supplied markers will identify the set of stream updates to\
        \ retrieve. For a 200 response, the returned location header will contain\
        \ the url for retrieving the stream updates."
      operationId: stream_set_retrieve_stream_set_updates
      parameters:
      - description: Identifier of stream source and current position. Multiple markers
          may be specified with multiple instances of the parameter.
        explode: true
        in: query
        name: marker
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[StreamUpdatesRetrieve]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[StreamUpdatesRetrieve]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[StreamUpdatesRetrieve]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[StreamUpdatesRetrieve]"
          description: The stream updates have been successfully retrieved
      summary: Receive stream updates
      tags:
      - StreamSet
      x-openapi-router-controller: openapi_server.controllers.stream_set_controller
    post:
      deprecated: false
      description: "The supplied webIds will register for stream updates. For a 200\
        \ response, the returned location header will contain the url for retrieving\
        \ the next set of stream updates."
      operationId: stream_set_register_stream_set_updates
      parameters:
      - description: The ID of a stream. Multiple streams may be specified with multiple
          instances of the parameter.
        explode: true
        in: query
        name: webId
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[StreamUpdatesRegister]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[StreamUpdatesRegister]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[StreamUpdatesRegister]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[StreamUpdatesRegister]"
          description: Successful Registration
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Any webID supplied is invalid
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Any webID supplied is a static attribute
      summary: Register for stream updates
      tags:
      - StreamSet
      x-openapi-router-controller: openapi_server.controllers.stream_set_controller
  /streamsets/value:
    get:
      deprecated: false
      description: Any time series value in the response that contains an 'Errors'
        property indicates PI Web API encountered a handled error during the transfer
        of the response stream.
      operationId: stream_set_get_values_ad_hoc
      parameters:
      - description: The ID of a stream. Multiple streams may be specified with multiple
          instances of the parameter.
        explode: true
        in: query
        name: webId
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: "The field or property of the object used to sort the returned\
          \ collection. For better performance, by default no sorting is applied.\
          \ 'Name' is the only supported field by which to sort."
        in: query
        name: sortField
        schema:
          type: string
      - description: The order that the returned collection is sorted. The default
          is 'Ascending'
        in: query
        name: sortOrder
        schema:
          type: string
      - description: "An AF time string, which is used as the time context to get\
          \ stream values if it is provided. By default, it is not specified, and\
          \ the default time context of the AF object will be used."
        in: query
        name: time
        schema:
          type: string
      - description: "The time zone in which the time string will be interpreted.\
          \ This parameter will be ignored if a time zone is specified in the time\
          \ string. If no time zone is specified in either places, the PI Web API\
          \ server time zone will be used."
        in: query
        name: timeZone
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[StreamValue]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[StreamValue]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[StreamValue]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[StreamValue]"
          description: Summary values of the streams that meet the specified conditions.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Unsupported operation on the given AF object.
      summary: Returns values of the specified streams.
      tags:
      - StreamSet
      x-openapi-router-controller: openapi_server.controllers.stream_set_controller
    post:
      deprecated: false
      operationId: stream_set_update_value_ad_hoc
      parameters:
      - description: The desired AFBufferOption. The default is 'BufferIfPossible'.
        in: query
        name: bufferOption
        schema:
          type: string
      - description: The desired AFUpdateOption. The default is 'Replace'.
        in: query
        name: updateOption
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/StreamValue'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/StreamValue'
              type: array
        description: The values to add or update.
        required: true
        x-body-name: values
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[Substatus]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[Substatus]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[Substatus]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[Substatus]"
          description: All updates executed successfully.
        "207":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[Substatus]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[Substatus]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[Substatus]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[Substatus]"
          description: The operation was a partial success. The response body contains
            substatuses and errors in the same order as the supplied values.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Unsupported operation on the given AF object.
      summary: Updates a single value for the specified streams.
      tags:
      - StreamSet
      x-codegen-request-body-name: values
      x-openapi-router-controller: openapi_server.controllers.stream_set_controller
  /streamsets/{webId}/channel:
    get:
      deprecated: false
      operationId: stream_set_get_channel
      parameters:
      - description: "The ID of an Element, Event Frame or Attribute, which is the\
          \ base element or parent of all the stream attributes."
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: Specify that included attributes must have this category. The
          default is no category filter.
        in: query
        name: categoryName
        schema:
          type: string
      - description: "Specifies the maximum number of consecutive empty messages that\
          \ can be elapsed with no new data updates from the PI System, after which\
          \ the client receives an empty payload. It helps to check if the connection\
          \ is still alive. Zero/negative values correspond to no heartbeat, and the\
          \ default value is no heartbeat."
        in: query
        name: heartbeatRate
        schema:
          type: integer
      - description: Specified if the channel should send a message with the current
          values of all the streams after the connection is opened. The default is
          'false'.
        in: query
        name: includeInitialValues
        schema:
          type: boolean
      - description: The name query string used for filtering attributes. The default
          is no filter.
        in: query
        name: nameFilter
        schema:
          type: string
      - description: Specifies if the search should include attributes nested further
          than the immediate attributes of the searchRoot. The default is 'false'.
        in: query
        name: searchFullHierarchy
        schema:
          type: boolean
      - description: Specified if the search should include attributes with the Excluded
          property set. The default is 'false'.
        in: query
        name: showExcluded
        schema:
          type: boolean
      - description: Specified if the search should include attributes with the Hidden
          property set. The default is 'false'.
        in: query
        name: showHidden
        schema:
          type: boolean
      - description: Specify that included attributes must be members of this template.
          The default is no template filter.
        in: query
        name: templateName
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "101":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[StreamValue]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[StreamValue]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[StreamValue]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[StreamValue]"
          description: Switches to the Web Socket protocol.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Unsupported operation on the given AF object.
      summary: "Opens a channel that will send messages about any value changes for\
        \ the attributes of an Element, Event Frame, or Attribute."
      tags:
      - StreamSet
      x-openapi-router-controller: openapi_server.controllers.stream_set_controller
  /streamsets/{webId}/end:
    get:
      deprecated: false
      description: Any time series value in the response that contains an 'Errors'
        property indicates PI Web API encountered a handled error during the transfer
        of the response stream.
      operationId: stream_set_get_end
      parameters:
      - description: "The ID of an Element, Event Frame or Attribute, which is the\
          \ base element or parent of all the stream attributes."
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: Specify that included attributes must have this category. The
          default is no category filter.
        in: query
        name: categoryName
        schema:
          type: string
      - description: The name query string used for filtering attributes. The default
          is no filter.
        in: query
        name: nameFilter
        schema:
          type: string
      - description: Specifies if the search should include attributes nested further
          than the immediate attributes of the searchRoot. The default is 'false'.
        in: query
        name: searchFullHierarchy
        schema:
          type: boolean
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Specified if the search should include attributes with the Excluded
          property set. The default is 'false'.
        in: query
        name: showExcluded
        schema:
          type: boolean
      - description: Specified if the search should include attributes with the Hidden
          property set. The default is 'false'.
        in: query
        name: showHidden
        schema:
          type: boolean
      - description: "The field or property of the object used to sort the returned\
          \ collection. For better performance, by default no sorting is applied.\
          \ 'Name' is the only supported field by which to sort."
        in: query
        name: sortField
        schema:
          type: string
      - description: The order that the returned collection is sorted. The default
          is 'Ascending'
        in: query
        name: sortOrder
        schema:
          type: string
      - description: Specify that included attributes must be members of this template.
          The default is no template filter.
        in: query
        name: templateName
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[StreamValue]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[StreamValue]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[StreamValue]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[StreamValue]"
          description: Summary values of the streams that meet the specified conditions.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Unsupported operation on the given AF object.
      summary: "Returns End of stream values of the attributes for an Element, Event\
        \ Frame or Attribute"
      tags:
      - StreamSet
      x-openapi-router-controller: openapi_server.controllers.stream_set_controller
  /streamsets/{webId}/interpolated:
    get:
      deprecated: false
      description: Any time series value in the response that contains an 'Errors'
        property indicates PI Web API encountered a handled error during the transfer
        of the response stream.
      operationId: stream_set_get_interpolated
      parameters:
      - description: "The ID of an element, event frame or attribute, which is the\
          \ base element or parent of all the stream attributes."
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: Specify that included attributes must have this category. The
          default is no category filter.
        in: query
        name: categoryName
        schema:
          type: string
      - description: "An optional end time. The default is '*' for element attributes\
          \ and points. For event frame attributes, the default is the event frame's\
          \ end time, or '*' if that is not set. Note that if endTime is earlier than\
          \ startTime, the resulting values will be in time-descending order."
        in: query
        name: endTime
        schema:
          type: string
      - description: "An optional string containing a filter expression. Expression\
          \ variables are relative to the data point. Use '.' to reference the containing\
          \ attribute. If the attribute does not support filtering, the filter will\
          \ be ignored. The default is no filtering."
        in: query
        name: filterExpression
        schema:
          type: string
      - description: Specify 'true' to indicate that values which fail the filter
          criteria are present in the returned data at the times where they occurred
          with a value set to a 'Filtered' enumeration value with bad status. Repeated
          consecutive failures are omitted.
        in: query
        name: includeFilteredValues
        schema:
          type: boolean
      - description: "The sampling interval, in AFTimeSpan format."
        in: query
        name: interval
        schema:
          type: string
      - description: The name query string used for filtering attributes. The default
          is no filter.
        in: query
        name: nameFilter
        schema:
          type: string
      - description: Specifies if the search should include attributes nested further
          than the immediate attributes of the searchRoot. The default is 'false'.
        in: query
        name: searchFullHierarchy
        schema:
          type: boolean
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Specified if the search should include attributes with the Excluded
          property set. The default is 'false'.
        in: query
        name: showExcluded
        schema:
          type: boolean
      - description: Specified if the search should include attributes with the Hidden
          property set. The default is 'false'.
        in: query
        name: showHidden
        schema:
          type: boolean
      - description: "The field or property of the object used to sort the returned\
          \ collection. For better performance, by default no sorting is applied.\
          \ 'Name' is the only supported field by which to sort."
        in: query
        name: sortField
        schema:
          type: string
      - description: The order that the returned collection is sorted. The default
          is 'Ascending'.
        in: query
        name: sortOrder
        schema:
          type: string
      - description: "An optional start time. The default is '*-1d' for element attributes\
          \ and points. For event frame attributes, the default is the event frame's\
          \ start time, or '*-1d' if that is not set."
        in: query
        name: startTime
        schema:
          type: string
      - description: "An optional start time anchor, in AFTime format. When specified,\
          \ interpolated data retrieval will use the sync time as the origin for calculating\
          \ the interval times."
        in: query
        name: syncTime
        schema:
          type: string
      - description: An optional string specifying the boundary type to use when applying
          a syncTime. The allowed values are 'Inside' and 'Outside'. The default is
          'Inside'.
        in: query
        name: syncTimeBoundaryType
        schema:
          type: string
      - description: Specify that included attributes must be members of this template.
          The default is no template filter.
        in: query
        name: templateName
        schema:
          type: string
      - description: "The time zone in which the time string will be interpreted.\
          \ This parameter will be ignored if a time zone is specified in the time\
          \ string. If no time zone is specified in either places, the PI Web API\
          \ server time zone will be used."
        in: query
        name: timeZone
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[StreamValues]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[StreamValues]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[StreamValues]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[StreamValues]"
          description: Interpolated values of the streams that meet the specified
            conditions.
      summary: "Returns interpolated values of attributes for an element, event frame\
        \ or attribute over the specified time range at the specified sampling interval."
      tags:
      - StreamSet
      x-openapi-router-controller: openapi_server.controllers.stream_set_controller
  /streamsets/{webId}/interpolatedattimes:
    get:
      deprecated: false
      description: Any time series value in the response that contains an 'Errors'
        property indicates PI Web API encountered a handled error during the transfer
        of the response stream.
      operationId: stream_set_get_interpolated_at_times
      parameters:
      - description: "The ID of an element, event frame or attribute, which is the\
          \ base element or parent of all the stream attributes."
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: The timestamp at which to retrieve a interpolated value. Multiple
          timestamps may be specified with multiple instances of the parameter.
        explode: true
        in: query
        name: time
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Specify that included attributes must have this category. The
          default is no category filter.
        in: query
        name: categoryName
        schema:
          type: string
      - description: "An optional string containing a filter expression. Expression\
          \ variables are relative to the data point. Use '.' to reference the containing\
          \ attribute. If the attribute does not support filtering, the filter will\
          \ be ignored. The default is no filtering."
        in: query
        name: filterExpression
        schema:
          type: string
      - description: Specify 'true' to indicate that values which fail the filter
          criteria are present in the returned data at the times where they occurred
          with a value set to a 'Filtered' enumeration value with bad status. Repeated
          consecutive failures are omitted.
        in: query
        name: includeFilteredValues
        schema:
          type: boolean
      - description: The name query string used for filtering attributes. The default
          is no filter.
        in: query
        name: nameFilter
        schema:
          type: string
      - description: Specifies if the search should include attributes nested further
          than the immediate attributes of the searchRoot. The default is 'false'.
        in: query
        name: searchFullHierarchy
        schema:
          type: boolean
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Specified if the search should include attributes with the Excluded
          property set. The default is 'false'.
        in: query
        name: showExcluded
        schema:
          type: boolean
      - description: Specified if the search should include attributes with the Hidden
          property set. The default is 'false'.
        in: query
        name: showHidden
        schema:
          type: boolean
      - description: The order that the returned collection is sorted. The default
          is 'Ascending'.
        in: query
        name: sortOrder
        schema:
          type: string
      - description: Specify that included attributes must be members of this template.
          The default is no template filter.
        in: query
        name: templateName
        schema:
          type: string
      - description: "The time zone in which the time string will be interpreted.\
          \ This parameter will be ignored if a time zone is specified in the time\
          \ string. If no time zone is specified in either places, the PI Web API\
          \ server time zone will be used."
        in: query
        name: timeZone
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[StreamValues]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[StreamValues]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[StreamValues]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[StreamValues]"
          description: Interpolated values of the streams that meet the specified
            conditions.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: The request was malformed.
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: The request was cancelled.
      summary: "Returns interpolated values of attributes for an element, event frame\
        \ or attribute at the specified times."
      tags:
      - StreamSet
      x-openapi-router-controller: openapi_server.controllers.stream_set_controller
  /streamsets/{webId}/plot:
    get:
      deprecated: false
      description: "For each interval, the data available is examined and significant\
        \ values are returned. Each interval can produce up to 5 values if they are\
        \ unique, the first value in the interval, the last value, the highest value,\
        \ the lowest value and at most one exceptional point (bad status or digital\
        \ state). Any time series value in the response that contains an 'Errors'\
        \ property indicates PI Web API encountered a handled error during the transfer\
        \ of the response stream."
      operationId: stream_set_get_plot
      parameters:
      - description: "The ID of an element, event frame or attribute, which is the\
          \ base element or parent of all the stream attributes."
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: Specify that included attributes must have this category. The
          default is no category filter.
        in: query
        name: categoryName
        schema:
          type: string
      - description: "An optional end time. The default is '*' for element attributes\
          \ and points. For event frame attributes, the default is the event frame's\
          \ end time, or '*' if that is not set. Note that if endTime is earlier than\
          \ startTime, the resulting values will be in time-descending order."
        in: query
        name: endTime
        schema:
          type: string
      - description: "The number of intervals to plot over. Typically, this would\
          \ be the number of horizontal pixels in the trend. The default is '24'.\
          \ For each interval, the data available is examined and significant values\
          \ are returned. Each interval can produce up to 5 values if they are unique,\
          \ the first value in the interval, the last value, the highest value, the\
          \ lowest value and at most one exceptional point (bad status or digital\
          \ state)."
        in: query
        name: intervals
        schema:
          type: integer
      - description: The name query string used for filtering attributes. The default
          is no filter.
        in: query
        name: nameFilter
        schema:
          type: string
      - description: Specifies if the search should include attributes nested further
          than the immediate attributes of the searchRoot. The default is 'false'.
        in: query
        name: searchFullHierarchy
        schema:
          type: boolean
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Specified if the search should include attributes with the Excluded
          property set. The default is 'false'.
        in: query
        name: showExcluded
        schema:
          type: boolean
      - description: Specified if the search should include attributes with the Hidden
          property set. The default is 'false'.
        in: query
        name: showHidden
        schema:
          type: boolean
      - description: "The field or property of the object used to sort the returned\
          \ collection. For better performance, by default no sorting is applied.\
          \ 'Name' is the only supported field by which to sort."
        in: query
        name: sortField
        schema:
          type: string
      - description: The order that the returned collection is sorted. The default
          is 'Ascending'
        in: query
        name: sortOrder
        schema:
          type: string
      - description: "An optional start time. The default is '*-1d' for element attributes\
          \ and points. For event frame attributes, the default is the event frame's\
          \ start time, or '*-1d' if that is not set."
        in: query
        name: startTime
        schema:
          type: string
      - description: Specify that included attributes must be members of this template.
          The default is no template filter.
        in: query
        name: templateName
        schema:
          type: string
      - description: "The time zone in which the time string will be interpreted.\
          \ This parameter will be ignored if a time zone is specified in the time\
          \ string. If no time zone is specified in either places, the PI Web API\
          \ server time zone will be used."
        in: query
        name: timeZone
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[StreamValues]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[StreamValues]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[StreamValues]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[StreamValues]"
          description: Plot values of the streams that meet the specified conditions.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Unsupported operation on the given AF object.
      summary: "Returns values of attributes for an element, event frame or attribute\
        \ over the specified time range suitable for plotting over the number of intervals\
        \ (typically represents pixels)."
      tags:
      - StreamSet
      x-openapi-router-controller: openapi_server.controllers.stream_set_controller
  /streamsets/{webId}/recorded:
    get:
      deprecated: false
      description: Any time series value in the response that contains an 'Errors'
        property indicates PI Web API encountered a handled error during the transfer
        of the response stream.
      operationId: stream_set_get_recorded
      parameters:
      - description: "The ID of an element, event frame or attribute, which is the\
          \ base element or parent of all the stream attributes."
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: An optional value that determines how the times and values of
          the returned end points are determined. The default is 'Inside'.
        in: query
        name: boundaryType
        schema:
          type: string
      - description: Specify that included attributes must have this category. The
          default is no category filter.
        in: query
        name: categoryName
        schema:
          type: string
      - description: "An optional end time. The default is '*' for element attributes\
          \ and points. For event frame attributes, the default is the event frame's\
          \ end time, or '*' if that is not set. Note that if endTime is earlier than\
          \ startTime, the resulting values will be in time-descending order."
        in: query
        name: endTime
        schema:
          type: string
      - description: An optional string containing a filter expression. Expression
          variables are relative to the data point. Use '.' to reference the containing
          attribute. The default is no filtering.
        in: query
        name: filterExpression
        schema:
          type: string
      - description: Specify 'true' to indicate that values which fail the filter
          criteria are present in the returned data at the times where they occurred
          with a value set to a 'Filtered' enumeration value with bad status. Repeated
          consecutive failures are omitted.
        in: query
        name: includeFilteredValues
        schema:
          type: boolean
      - description: The maximum number of values to be returned. The default is 1000.
        in: query
        name: maxCount
        schema:
          type: integer
      - description: The name query string used for filtering attributes. The default
          is no filter.
        in: query
        name: nameFilter
        schema:
          type: string
      - description: Specifies if the search should include attributes nested further
          than the immediate attributes of the searchRoot. The default is 'false'.
        in: query
        name: searchFullHierarchy
        schema:
          type: boolean
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Specified if the search should include attributes with the Excluded
          property set. The default is 'false'.
        in: query
        name: showExcluded
        schema:
          type: boolean
      - description: Specified if the search should include attributes with the Hidden
          property set. The default is 'false'.
        in: query
        name: showHidden
        schema:
          type: boolean
      - description: "The field or property of the object used to sort the returned\
          \ collection. For better performance, by default no sorting is applied.\
          \ 'Name' is the only supported field by which to sort."
        in: query
        name: sortField
        schema:
          type: string
      - description: The order that the returned collection is sorted. The default
          is 'Ascending'
        in: query
        name: sortOrder
        schema:
          type: string
      - description: "An optional start time. The default is '*-1d' for element attributes\
          \ and points. For event frame attributes, the default is the event frame's\
          \ start time, or '*-1d' if that is not set."
        in: query
        name: startTime
        schema:
          type: string
      - description: Specify that included attributes must be members of this template.
          The default is no template filter.
        in: query
        name: templateName
        schema:
          type: string
      - description: "The time zone in which the time string will be interpreted.\
          \ This parameter will be ignored if a time zone is specified in the time\
          \ string. If no time zone is specified in either places, the PI Web API\
          \ server time zone will be used."
        in: query
        name: timeZone
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[StreamValues]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[StreamValues]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[StreamValues]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[StreamValues]"
          description: Recorded values of the streams that meet the specified conditions.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Unsupported operation on the given AF object.
      summary: "Returns recorded values of the attributes for an element, event frame,\
        \ or attribute."
      tags:
      - StreamSet
      x-openapi-router-controller: openapi_server.controllers.stream_set_controller
    post:
      deprecated: false
      operationId: stream_set_update_values
      parameters:
      - description: "The ID of the parent element, event frame, or attribute. Attributes\
          \ specified in the body must be descendants of the specified object."
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: The desired AFBufferOption. The default is 'BufferIfPossible'.
        in: query
        name: bufferOption
        schema:
          type: string
      - description: The desired AFUpdateOption. The default is 'Replace'.
        in: query
        name: updateOption
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/StreamValues'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/StreamValues'
              type: array
        description: The values to add or update.
        required: true
        x-body-name: values
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[Items[Substatus]]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[Items[Substatus]]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[Items[Substatus]]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[Items[Substatus]]"
          description: All updates executed successfully.
        "207":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[Items[Substatus]]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[Items[Substatus]]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[Items[Substatus]]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[Items[Substatus]]"
          description: The operation was a partial success. The response body contains
            substatuses and errors in the same order as the supplied values.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Unsupported operation on the given AF object.
      summary: Updates multiple values for the specified streams.
      tags:
      - StreamSet
      x-codegen-request-body-name: values
      x-openapi-router-controller: openapi_server.controllers.stream_set_controller
  /streamsets/{webId}/recordedattime:
    get:
      deprecated: false
      description: Any time series value in the response that contains an 'Errors'
        property indicates PI Web API encountered a handled error during the transfer
        of the response stream.
      operationId: stream_set_get_recorded_at_time
      parameters:
      - description: "The ID of an element, event frame or attribute, which is the\
          \ base element or parent of all the stream attributes."
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: The timestamp at which the values are desired.
        in: query
        name: time
        required: true
        schema:
          type: string
      - description: Specify that included attributes must have this category. The
          default is no category filter.
        in: query
        name: categoryName
        schema:
          type: string
      - description: The name query string used for filtering attributes. The default
          is no filter.
        in: query
        name: nameFilter
        schema:
          type: string
      - description: An optional value that determines the values to return when values
          don't exist at the exact time specified. The default is 'Auto'.
        in: query
        name: retrievalMode
        schema:
          type: string
      - description: Specifies if the search should include attributes nested further
          than the immediate attributes of the searchRoot. The default is 'false'.
        in: query
        name: searchFullHierarchy
        schema:
          type: boolean
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Specified if the search should include attributes with the Excluded
          property set. The default is 'false'.
        in: query
        name: showExcluded
        schema:
          type: boolean
      - description: Specified if the search should include attributes with the Hidden
          property set. The default is 'false'.
        in: query
        name: showHidden
        schema:
          type: boolean
      - description: Specify that included attributes must be members of this template.
          The default is no template filter.
        in: query
        name: templateName
        schema:
          type: string
      - description: "The time zone in which the time string will be interpreted.\
          \ This parameter will be ignored if a time zone is specified in the time\
          \ string. If no time zone is specified in either places, the PI Web API\
          \ server time zone will be used."
        in: query
        name: timeZone
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[StreamValue]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[StreamValue]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[StreamValue]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[StreamValue]"
          description: Recorded values of the streams that meet the specified conditions.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Unsupported operation on the given AF object.
      summary: "Returns recorded values of the attributes for an element, event frame,\
        \ or attribute."
      tags:
      - StreamSet
      x-openapi-router-controller: openapi_server.controllers.stream_set_controller
  /streamsets/{webId}/recordedattimes:
    get:
      deprecated: false
      description: Any time series value in the response that contains an 'Errors'
        property indicates PI Web API encountered a handled error during the transfer
        of the response stream.
      operationId: stream_set_get_recorded_at_times
      parameters:
      - description: "The ID of an element, event frame or attribute, which is the\
          \ base element or parent of all the stream attributes."
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: The timestamp at which to retrieve a recorded value. Multiple
          timestamps may be specified with multiple instances of the parameter.
        explode: true
        in: query
        name: time
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Specify that included attributes must have this category. The
          default is no category filter.
        in: query
        name: categoryName
        schema:
          type: string
      - description: The name query string used for filtering attributes. The default
          is no filter.
        in: query
        name: nameFilter
        schema:
          type: string
      - description: An optional value that determines the values to return when values
          don't exist at the exact time specified. The default is 'Auto'.
        in: query
        name: retrievalMode
        schema:
          type: string
      - description: Specifies if the search should include attributes nested further
          than the immediate attributes of the searchRoot. The default is 'false'.
        in: query
        name: searchFullHierarchy
        schema:
          type: boolean
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Specified if the search should include attributes with the Excluded
          property set. The default is 'false'.
        in: query
        name: showExcluded
        schema:
          type: boolean
      - description: Specified if the search should include attributes with the Hidden
          property set. The default is 'false'.
        in: query
        name: showHidden
        schema:
          type: boolean
      - description: The order that the returned collection is sorted. The default
          is 'Ascending'.
        in: query
        name: sortOrder
        schema:
          type: string
      - description: Specify that included attributes must be members of this template.
          The default is no template filter.
        in: query
        name: templateName
        schema:
          type: string
      - description: "The time zone in which the time string will be interpreted.\
          \ This parameter will be ignored if a time zone is specified in the time\
          \ string. If no time zone is specified in either places, the PI Web API\
          \ server time zone will be used."
        in: query
        name: timeZone
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[StreamValues]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[StreamValues]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[StreamValues]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[StreamValues]"
          description: Recorded values of the streams that meet the specified conditions.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: The request was malformed.
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: The request was cancelled.
      summary: "Returns recorded values of attributes for an element, event frame\
        \ or attribute at the specified times."
      tags:
      - StreamSet
      x-openapi-router-controller: openapi_server.controllers.stream_set_controller
  /streamsets/{webId}/summary:
    get:
      deprecated: false
      description: Any time series value in the response that contains an 'Errors'
        property indicates PI Web API encountered a handled error during the transfer
        of the response stream.
      operationId: stream_set_get_summaries
      parameters:
      - description: "The ID of an element, event frame or attribute, which is the\
          \ base element or parent of all the stream attributes."
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: Specifies the method of evaluating the data over the time range.
          The default is 'TimeWeighted'.
        in: query
        name: calculationBasis
        schema:
          type: string
      - description: Specify that included attributes must have this category. The
          default is no category filter.
        in: query
        name: categoryName
        schema:
          type: string
      - description: "An optional end time. The default is '*' for element attributes\
          \ and points. For event frame attributes, the default is the event frame's\
          \ end time, or '*' if that is not set. Note that if endTime is earlier than\
          \ startTime, the resulting values will be in time-descending order."
        in: query
        name: endTime
        schema:
          type: string
      - description: A string containing a filter expression. Expression variables
          are relative to the attribute. Use '.' to reference the containing attribute.
          The default is no filtering.
        in: query
        name: filterExpression
        schema:
          type: string
      - description: The name query string used for filtering attributes. The default
          is no filter.
        in: query
        name: nameFilter
        schema:
          type: string
      - description: "A time span specifies how often the filter expression is evaluated\
          \ when computing the summary for an interval, if the sampleType is 'Interval'."
        in: query
        name: sampleInterval
        schema:
          type: string
      - description: A flag which specifies one or more summaries to compute for each
          interval over the time range. The default is 'ExpressionRecordedValues'.
        in: query
        name: sampleType
        schema:
          type: string
      - description: Specifies if the search should include attributes nested further
          than the immediate attributes of the searchRoot. The default is 'false'.
        in: query
        name: searchFullHierarchy
        schema:
          type: boolean
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Specified if the search should include attributes with the Excluded
          property set. The default is 'false'.
        in: query
        name: showExcluded
        schema:
          type: boolean
      - description: Specified if the search should include attributes with the Hidden
          property set. The default is 'false'.
        in: query
        name: showHidden
        schema:
          type: boolean
      - description: "An optional start time. The default is '*-1d' for element attributes\
          \ and points. For event frame attributes, the default is the event frame's\
          \ start time, or '*-1d' if that is not set."
        in: query
        name: startTime
        schema:
          type: string
      - description: The duration of each summary interval.
        in: query
        name: summaryDuration
        schema:
          type: string
      - description: Specifies the kinds of summaries to produce over the range. The
          default is 'Total'. Multiple summary types may be specified by using multiple
          instances of summaryType.
        explode: true
        in: query
        name: summaryType
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Specify that included attributes must be members of this template.
          The default is no template filter.
        in: query
        name: templateName
        schema:
          type: string
      - description: Specifies how to calculate the timestamp for each interval. The
          default is 'Auto'.
        in: query
        name: timeType
        schema:
          type: string
      - description: "The time zone in which the time string will be interpreted.\
          \ This parameter will be ignored if a time zone is specified in the time\
          \ string. If no time zone is specified in either places, the PI Web API\
          \ server time zone will be used."
        in: query
        name: timeZone
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[StreamSummaries]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[StreamSummaries]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[StreamSummaries]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[StreamSummaries]"
          description: Summary values of the streams that meet the specified conditions.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Unsupported operation on the given AF object.
      summary: "Returns summary values of the attributes for an element, event frame\
        \ or attribute."
      tags:
      - StreamSet
      x-openapi-router-controller: openapi_server.controllers.stream_set_controller
  /streamsets/{webId}/value:
    get:
      deprecated: false
      description: Any time series value in the response that contains an 'Errors'
        property indicates PI Web API encountered a handled error during the transfer
        of the response stream.
      operationId: stream_set_get_values
      parameters:
      - description: "The ID of an Element, Event Frame or Attribute, which is the\
          \ base element or parent of all the stream attributes."
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: Specify that included attributes must have this category. The
          default is no category filter.
        in: query
        name: categoryName
        schema:
          type: string
      - description: The name query string used for filtering attributes. The default
          is no filter.
        in: query
        name: nameFilter
        schema:
          type: string
      - description: Specifies if the search should include attributes nested further
          than the immediate attributes of the searchRoot. The default is 'false'.
        in: query
        name: searchFullHierarchy
        schema:
          type: boolean
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Specified if the search should include attributes with the Excluded
          property set. The default is 'false'.
        in: query
        name: showExcluded
        schema:
          type: boolean
      - description: Specified if the search should include attributes with the Hidden
          property set. The default is 'false'.
        in: query
        name: showHidden
        schema:
          type: boolean
      - description: "The field or property of the object used to sort the returned\
          \ collection. For better performance, by default no sorting is applied.\
          \ 'Name' is the only supported field by which to sort."
        in: query
        name: sortField
        schema:
          type: string
      - description: The order that the returned collection is sorted. The default
          is 'Ascending'
        in: query
        name: sortOrder
        schema:
          type: string
      - description: Specify that included attributes must be members of this template.
          The default is no template filter.
        in: query
        name: templateName
        schema:
          type: string
      - description: "An AF time string, which is used as the time context to get\
          \ stream values if it is provided. By default, it is not specified, and\
          \ the default time context of the AF object will be used."
        in: query
        name: time
        schema:
          type: string
      - description: "The time zone in which the time string will be interpreted.\
          \ This parameter will be ignored if a time zone is specified in the time\
          \ string. If no time zone is specified in either places, the PI Web API\
          \ server time zone will be used."
        in: query
        name: timeZone
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[StreamValue]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[StreamValue]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[StreamValue]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[StreamValue]"
          description: Summary values of the streams that meet the specified conditions.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Unsupported operation on the given AF object.
      summary: "Returns values of the attributes for an Element, Event Frame or Attribute\
        \ at the specified time."
      tags:
      - StreamSet
      x-openapi-router-controller: openapi_server.controllers.stream_set_controller
    post:
      deprecated: false
      operationId: stream_set_update_value
      parameters:
      - description: "The ID of the parent element, event frame, or attribute. Attributes\
          \ specified in the body must be descendants of the specified object."
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: The desired AFBufferOption. The default is 'BufferIfPossible'.
        in: query
        name: bufferOption
        schema:
          type: string
      - description: The desired AFUpdateOption. The default is 'Replace'.
        in: query
        name: updateOption
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/StreamValue'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/StreamValue'
              type: array
        description: The values to add or update.
        required: true
        x-body-name: values
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[Substatus]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[Substatus]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[Substatus]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[Substatus]"
          description: All updates executed successfully.
        "207":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[Substatus]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[Substatus]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[Substatus]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[Substatus]"
          description: The operation was a partial success. The response body contains
            substatuses and errors in the same order as the supplied values.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Unsupported operation on the given AF object.
      summary: Updates a single value for the specified streams.
      tags:
      - StreamSet
      x-codegen-request-body-name: values
      x-openapi-router-controller: openapi_server.controllers.stream_set_controller
  /system:
    get:
      deprecated: false
      operationId: system_landing
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemLanding'
            text/json:
              schema:
                $ref: '#/components/schemas/SystemLanding'
            text/html:
              schema:
                $ref: '#/components/schemas/SystemLanding'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/SystemLanding'
          description: Links to top level collections and system information.
      summary: Get system links for this PI System Web API instance.
      tags:
      - System
      x-openapi-router-controller: openapi_server.controllers.system_controller
  /system/cacheinstances:
    get:
      deprecated: false
      operationId: system_cache_instances
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[CacheInstance]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[CacheInstance]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[CacheInstance]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[CacheInstance]"
          description: Cache instance information.
      summary: "Get AF cache instances currently in use by the system. These are caches\
        \ from which user requests are serviced. The number of instances depends on\
        \ the number of users connected to the service, the service's authentication\
        \ method, and the cache instance configuration."
      tags:
      - System
      x-openapi-router-controller: openapi_server.controllers.system_controller
  /system/configuration:
    get:
      deprecated: false
      operationId: configuration_list
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  properties: {}
                  type: object
                type: object
            text/json:
              schema:
                additionalProperties:
                  properties: {}
                  type: object
                type: object
            text/html:
              schema:
                additionalProperties:
                  properties: {}
                  type: object
                type: object
            application/x-ms-application:
              schema:
                additionalProperties:
                  properties: {}
                  type: object
                type: object
          description: The current system configuration.
      summary: Get the current system configuration.
      tags:
      - Configuration
      x-openapi-router-controller: openapi_server.controllers.configuration_controller
  /system/configuration/{key}:
    delete:
      deprecated: false
      operationId: configuration_delete
      parameters:
      - description: The key of the configuration item to remove.
        in: path
        name: key
        required: true
        schema:
          type: string
      responses:
        "202":
          content: {}
          description: "The change has been accepted, and will take effect when the\
            \ service can cleanly restart."
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: The configuration item does not exist.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: An internal error is preventing deletion of the configuration
            item.
      summary: Delete a configuration item.
      tags:
      - Configuration
      x-openapi-router-controller: openapi_server.controllers.configuration_controller
    get:
      deprecated: false
      description: The response content may vary based on the configuration item's
        data type.
      operationId: configuration_get
      parameters:
      - description: The key of the configuration item.
        in: path
        name: key
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
            text/json:
              schema:
                type: object
            text/html:
              schema:
                type: object
            application/x-ms-application:
              schema:
                type: object
          description: The value of the configuration item.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: The configuration item does not exist.
      summary: Get the value of a configuration item.
      tags:
      - Configuration
      x-openapi-router-controller: openapi_server.controllers.configuration_controller
  /system/status:
    get:
      deprecated: false
      operationId: system_status
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemStatus'
            text/json:
              schema:
                $ref: '#/components/schemas/SystemStatus'
            text/html:
              schema:
                $ref: '#/components/schemas/SystemStatus'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/SystemStatus'
          description: System Status.
      summary: "Get information about this PI Web API instance. Examples of information\
        \ returned include the system uptime, the number of cache instances for this\
        \ PI System Web API instance, and the system run state."
      tags:
      - System
      x-openapi-router-controller: openapi_server.controllers.system_controller
  /system/userinfo:
    get:
      deprecated: false
      operationId: system_user_info
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfo'
            text/json:
              schema:
                $ref: '#/components/schemas/UserInfo'
            text/html:
              schema:
                $ref: '#/components/schemas/UserInfo'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/UserInfo'
          description: Information about the current user.
        "204":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfo'
            text/json:
              schema:
                $ref: '#/components/schemas/UserInfo'
            text/html:
              schema:
                $ref: '#/components/schemas/UserInfo'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/UserInfo'
          description: No identity is present.
      summary: Get information about the Windows identity used to fulfill the request.
        This depends on the service's authentication method and the credentials passed
        by the client. The impersonation level of the Windows identity is included.
      tags:
      - System
      x-openapi-router-controller: openapi_server.controllers.system_controller
  /system/versions:
    get:
      deprecated: false
      operationId: system_versions
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  $ref: '#/components/schemas/Version'
                type: object
            text/json:
              schema:
                additionalProperties:
                  $ref: '#/components/schemas/Version'
                type: object
            text/html:
              schema:
                additionalProperties:
                  $ref: '#/components/schemas/Version'
                type: object
            application/x-ms-application:
              schema:
                additionalProperties:
                  $ref: '#/components/schemas/Version'
                type: object
          description: A dictionary of assembly name-version information pairs.
      summary: Get the current versions of the PI Web API instance and all external
        plugins.
      tags:
      - System
      x-openapi-router-controller: openapi_server.controllers.system_controller
  /tablecategories:
    get:
      deprecated: false
      description: "This method returns a Table Category based on the hierarchical\
        \ path associated with it, and should be used when a path has been received\
        \ from a separate part of the PI System for use in the PI Web API. Users should\
        \ primarily search with the WebID when available."
      operationId: table_category_get_by_path
      parameters:
      - description: The path to the target table category.
        in: query
        name: path
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TableCategory'
            text/json:
              schema:
                $ref: '#/components/schemas/TableCategory'
            text/html:
              schema:
                $ref: '#/components/schemas/TableCategory'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/TableCategory'
          description: The specified table category.
      summary: Retrieve a table category by path.
      tags:
      - TableCategory
      x-openapi-router-controller: openapi_server.controllers.table_category_controller
  /tablecategories/{webId}:
    delete:
      deprecated: false
      operationId: table_category_delete
      parameters:
      - description: The ID of the table category to delete.
        in: path
        name: webId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The table category was deleted.
      summary: Delete a table category.
      tags:
      - TableCategory
      x-openapi-router-controller: openapi_server.controllers.table_category_controller
    get:
      deprecated: false
      operationId: table_category_get
      parameters:
      - description: The id of the table category.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TableCategory'
            text/json:
              schema:
                $ref: '#/components/schemas/TableCategory'
            text/html:
              schema:
                $ref: '#/components/schemas/TableCategory'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/TableCategory'
          description: The specified table category.
      summary: Retrieve a table category.
      tags:
      - TableCategory
      x-openapi-router-controller: openapi_server.controllers.table_category_controller
    patch:
      deprecated: false
      operationId: table_category_update
      parameters:
      - description: The ID of the table category to update.
        in: path
        name: webId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TableCategory'
          text/json:
            schema:
              $ref: '#/components/schemas/TableCategory'
        description: A partial table category containing the desired changes.
        required: true
        x-body-name: tableCategory
      responses:
        "204":
          content: {}
          description: The table category was updated.
      summary: Update a table category by replacing items in its definition.
      tags:
      - TableCategory
      x-codegen-request-body-name: tableCategory
      x-openapi-router-controller: openapi_server.controllers.table_category_controller
  /tablecategories/{webId}/security:
    get:
      deprecated: false
      operationId: table_category_get_security
      parameters:
      - description: The ID of the table category for the security to be checked.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "The user identity for the security information to be checked.\
          \ Multiple security identities may be specified with multiple instances\
          \ of the parameter. If the parameter is not specified, only the current\
          \ user's security rights will be returned."
        explode: true
        in: query
        name: userIdentity
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Indicates if the security cache should be refreshed before getting
          security information. The default is 'false'.
        in: query
        name: forceRefresh
        schema:
          type: boolean
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[SecurityRights]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[SecurityRights]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[SecurityRights]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[SecurityRights]"
          description: Security rights.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: An invalid or local account is specified as the user identity.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Access denied for the specified user identity.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Unsupported when using Anonymous authentication method.
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Failed to retrieve the specified user identity.
      summary: Get the security information of the specified security item associated
        with the table category for a specified user.
      tags:
      - TableCategory
      x-openapi-router-controller: openapi_server.controllers.table_category_controller
  /tablecategories/{webId}/securityentries:
    get:
      deprecated: false
      operationId: table_category_get_security_entries
      parameters:
      - description: The ID of the table category.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: The name query string used for filtering security entries. The
          default is no filter.
        in: query
        name: nameFilter
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[SecurityEntry]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[SecurityEntry]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[SecurityEntry]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[SecurityEntry]"
          description: A list of security entries matching the specified condition.
      summary: "Retrieve the security entries associated with the table category based\
        \ on the specified criteria. By default, all security entries for this table\
        \ category are returned."
      tags:
      - TableCategory
      x-openapi-router-controller: openapi_server.controllers.table_category_controller
    post:
      deprecated: false
      operationId: table_category_create_security_entry
      parameters:
      - description: The ID of the table category where the security entry will be
          created.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "If false, the new access permissions are only applied to the\
          \ associated object. If true, the access permissions of children with any\
          \ parent-child reference types will change when the permissions on the primary\
          \ parent change."
        in: query
        name: applyToChildren
        schema:
          type: boolean
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityEntry'
          text/json:
            schema:
              $ref: '#/components/schemas/SecurityEntry'
        description: The new security entry definition. The full list of allow and
          deny rights must be supplied.
        required: true
        x-body-name: securityEntry
      responses:
        "201":
          content: {}
          description: The security entry was created. The response's Location header
            is a link to the security entry.
      summary: Create a security entry owned by the table category.
      tags:
      - TableCategory
      x-codegen-request-body-name: securityEntry
      x-openapi-router-controller: openapi_server.controllers.table_category_controller
  /tablecategories/{webId}/securityentries/{name}:
    delete:
      deprecated: false
      operationId: table_category_delete_security_entry
      parameters:
      - description: "The name of the security entry. For every backslash character\
          \ (\\) in the security entry name, replace with asterisk (*). As an example,\
          \ use domain*username instead of domain\\username."
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: The ID of the table category where the security entry will be
          deleted.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "If false, the new access permissions are only applied to the\
          \ associated object. If true, the access permissions of children with any\
          \ parent-child reference types will change when the permissions on the primary\
          \ parent change."
        in: query
        name: applyToChildren
        schema:
          type: boolean
      responses:
        "204":
          content: {}
          description: The security entry was deleted.
      summary: Delete a security entry owned by the table category.
      tags:
      - TableCategory
      x-openapi-router-controller: openapi_server.controllers.table_category_controller
    get:
      deprecated: false
      operationId: table_category_get_security_entry_by_name
      parameters:
      - description: "The name of the security entry. For every backslash character\
          \ (\\) in the security entry name, replace with asterisk (*). As an example,\
          \ use domain*username instead of domain\\username."
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: The ID of the table category.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityEntry'
            text/json:
              schema:
                $ref: '#/components/schemas/SecurityEntry'
            text/html:
              schema:
                $ref: '#/components/schemas/SecurityEntry'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/SecurityEntry'
          description: The security entry matching the specified condition.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: The security entry with the specified name is not found.
      summary: Retrieve the security entry associated with the table category with
        the specified name.
      tags:
      - TableCategory
      x-openapi-router-controller: openapi_server.controllers.table_category_controller
    put:
      deprecated: false
      operationId: table_category_update_security_entry
      parameters:
      - description: The name of the security entry.
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: The ID of the table category where the security entry will be
          updated.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "If false, the new access permissions are only applied to the\
          \ associated object. If true, the access permissions of children with any\
          \ parent-child reference types will change when the permissions on the primary\
          \ parent change."
        in: query
        name: applyToChildren
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityEntry'
          text/json:
            schema:
              $ref: '#/components/schemas/SecurityEntry'
        description: The new security entry definition. The full list of allow and
          deny rights must be supplied or they will be removed.
        required: true
        x-body-name: securityEntry
      responses:
        "204":
          content: {}
          description: The security entry was updated.
      summary: Update a security entry owned by the table category.
      tags:
      - TableCategory
      x-codegen-request-body-name: securityEntry
      x-openapi-router-controller: openapi_server.controllers.table_category_controller
  /tables:
    get:
      deprecated: false
      operationId: table_get_by_path
      parameters:
      - description: The path to the table.
        in: query
        name: path
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Table'
            text/json:
              schema:
                $ref: '#/components/schemas/Table'
            text/html:
              schema:
                $ref: '#/components/schemas/Table'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Table'
          description: The specified table.
      summary: Retrieve a table by path.
      tags:
      - Table
      x-openapi-router-controller: openapi_server.controllers.table_controller
  /tables/{webId}:
    delete:
      deprecated: false
      operationId: table_delete
      parameters:
      - description: The ID of the table to delete.
        in: path
        name: webId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The table was deleted.
      summary: Delete a table.
      tags:
      - Table
      x-openapi-router-controller: openapi_server.controllers.table_controller
    get:
      deprecated: false
      operationId: table_get
      parameters:
      - description: The ID of the table.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Table'
            text/json:
              schema:
                $ref: '#/components/schemas/Table'
            text/html:
              schema:
                $ref: '#/components/schemas/Table'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Table'
          description: The specified table.
      summary: Retrieve a table.
      tags:
      - Table
      x-openapi-router-controller: openapi_server.controllers.table_controller
    patch:
      deprecated: false
      operationId: table_update
      parameters:
      - description: The ID of the table to update.
        in: path
        name: webId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Table'
          text/json:
            schema:
              $ref: '#/components/schemas/Table'
        description: A partial table containing the desired changes.
        required: true
        x-body-name: table
      responses:
        "204":
          content: {}
          description: The table was updated.
      summary: Update a table by replacing items in its definition.
      tags:
      - Table
      x-codegen-request-body-name: table
      x-openapi-router-controller: openapi_server.controllers.table_controller
  /tables/{webId}/categories:
    get:
      deprecated: false
      operationId: table_get_categories
      parameters:
      - description: The ID of the table.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[TableCategory]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[TableCategory]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[TableCategory]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[TableCategory]"
          description: A list of categories.
      summary: Get a table's categories.
      tags:
      - Table
      x-openapi-router-controller: openapi_server.controllers.table_controller
  /tables/{webId}/data:
    get:
      deprecated: false
      operationId: table_get_data
      parameters:
      - description: The ID of the table.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TableData'
            text/json:
              schema:
                $ref: '#/components/schemas/TableData'
            text/html:
              schema:
                $ref: '#/components/schemas/TableData'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/TableData'
          description: The data for the specified table.
      summary: Get the table's data.
      tags:
      - Table
      x-openapi-router-controller: openapi_server.controllers.table_controller
    put:
      deprecated: false
      operationId: table_update_data
      parameters:
      - description: The ID of the table on which to update the data.
        in: path
        name: webId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TableData'
          text/json:
            schema:
              $ref: '#/components/schemas/TableData'
        description: The new table data definition.
        required: true
        x-body-name: data
      responses:
        "201":
          content: {}
          description: The table data was updated.
      summary: Update the table's data.
      tags:
      - Table
      x-codegen-request-body-name: data
      x-openapi-router-controller: openapi_server.controllers.table_controller
  /tables/{webId}/security:
    get:
      deprecated: false
      operationId: table_get_security
      parameters:
      - description: The ID of the table for the security to be checked.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "The user identity for the security information to be checked.\
          \ Multiple security identities may be specified with multiple instances\
          \ of the parameter. If the parameter is not specified, only the current\
          \ user's security rights will be returned."
        explode: true
        in: query
        name: userIdentity
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Indicates if the security cache should be refreshed before getting
          security information. The default is 'false'.
        in: query
        name: forceRefresh
        schema:
          type: boolean
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[SecurityRights]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[SecurityRights]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[SecurityRights]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[SecurityRights]"
          description: Security rights.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: An invalid or local account is specified as the user identity.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Access denied for the specified user identity.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Unsupported when using Anonymous authentication method.
        "502":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: Failed to retrieve the specified user identity.
      summary: Get the security information of the specified security item associated
        with the table for a specified user.
      tags:
      - Table
      x-openapi-router-controller: openapi_server.controllers.table_controller
  /tables/{webId}/securityentries:
    get:
      deprecated: false
      operationId: table_get_security_entries
      parameters:
      - description: The ID of the table.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: The name query string used for filtering security entries. The
          default is no filter.
        in: query
        name: nameFilter
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items[SecurityEntry]"
            text/json:
              schema:
                $ref: "#/components/schemas/Items[SecurityEntry]"
            text/html:
              schema:
                $ref: "#/components/schemas/Items[SecurityEntry]"
            application/x-ms-application:
              schema:
                $ref: "#/components/schemas/Items[SecurityEntry]"
          description: A list of security entries matching the specified condition.
      summary: "Retrieve the security entries associated with the table based on the\
        \ specified criteria. By default, all security entries for this table are\
        \ returned."
      tags:
      - Table
      x-openapi-router-controller: openapi_server.controllers.table_controller
    post:
      deprecated: false
      operationId: table_create_security_entry
      parameters:
      - description: The ID of the table where the security entry will be created.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "If false, the new access permissions are only applied to the\
          \ associated object. If true, the access permissions of children with any\
          \ parent-child reference types will change when the permissions on the primary\
          \ parent change."
        in: query
        name: applyToChildren
        schema:
          type: boolean
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityEntry'
          text/json:
            schema:
              $ref: '#/components/schemas/SecurityEntry'
        description: The new security entry definition. The full list of allow and
          deny rights must be supplied.
        required: true
        x-body-name: securityEntry
      responses:
        "201":
          content: {}
          description: The security entry was created. The response's Location header
            is a link to the security entry.
      summary: Create a security entry owned by the table.
      tags:
      - Table
      x-codegen-request-body-name: securityEntry
      x-openapi-router-controller: openapi_server.controllers.table_controller
  /tables/{webId}/securityentries/{name}:
    delete:
      deprecated: false
      operationId: table_delete_security_entry
      parameters:
      - description: "The name of the security entry. For every backslash character\
          \ (\\) in the security entry name, replace with asterisk (*). As an example,\
          \ use domain*username instead of domain\\username."
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: The ID of the table where the security entry will be deleted.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "If false, the new access permissions are only applied to the\
          \ associated object. If true, the access permissions of children with any\
          \ parent-child reference types will change when the permissions on the primary\
          \ parent change."
        in: query
        name: applyToChildren
        schema:
          type: boolean
      responses:
        "204":
          content: {}
          description: The security entry was deleted.
      summary: Delete a security entry owned by the table.
      tags:
      - Table
      x-openapi-router-controller: openapi_server.controllers.table_controller
    get:
      deprecated: false
      operationId: table_get_security_entry_by_name
      parameters:
      - description: "The name of the security entry. For every backslash character\
          \ (\\) in the security entry name, replace with asterisk (*). As an example,\
          \ use domain*username instead of domain\\username."
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: The ID of the table.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityEntry'
            text/json:
              schema:
                $ref: '#/components/schemas/SecurityEntry'
            text/html:
              schema:
                $ref: '#/components/schemas/SecurityEntry'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/SecurityEntry'
          description: The security entry matching the specified condition.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/json:
              schema:
                $ref: '#/components/schemas/Errors'
            text/html:
              schema:
                $ref: '#/components/schemas/Errors'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Errors'
          description: The security entry with the specified name is not found.
      summary: Retrieve the security entry associated with the table with the specified
        name.
      tags:
      - Table
      x-openapi-router-controller: openapi_server.controllers.table_controller
    put:
      deprecated: false
      operationId: table_update_security_entry
      parameters:
      - description: The name of the security entry.
        in: path
        name: name
        required: true
        schema:
          type: string
      - description: The ID of the table where the security entry will be updated.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "If false, the new access permissions are only applied to the\
          \ associated object. If true, the access permissions of children with any\
          \ parent-child reference types will change when the permissions on the primary\
          \ parent change."
        in: query
        name: applyToChildren
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityEntry'
          text/json:
            schema:
              $ref: '#/components/schemas/SecurityEntry'
        description: The new security entry definition. The full list of allow and
          deny rights must be supplied or they will be removed.
        required: true
        x-body-name: securityEntry
      responses:
        "204":
          content: {}
          description: The security entry was updated.
      summary: Update a security entry owned by the table.
      tags:
      - Table
      x-codegen-request-body-name: securityEntry
      x-openapi-router-controller: openapi_server.controllers.table_controller
  /timeruleplugins:
    get:
      deprecated: false
      description: "This method returns a Time Rule Plug-in based on the hierarchical\
        \ path associated with it, and should be used when a path has been received\
        \ from a separate part of the PI System for use in the PI Web API. Users should\
        \ primarily search with the WebID when available."
      operationId: time_rule_plug_in_get_by_path
      parameters:
      - description: The path to the Time Rule Plug-in.
        in: query
        name: path
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeRulePlugIn'
            text/json:
              schema:
                $ref: '#/components/schemas/TimeRulePlugIn'
            text/html:
              schema:
                $ref: '#/components/schemas/TimeRulePlugIn'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/TimeRulePlugIn'
          description: The specified Time Rule Plug-in.
      summary: Retrieve a Time Rule Plug-in by path.
      tags:
      - TimeRulePlugIn
      x-openapi-router-controller: openapi_server.controllers.time_rule_plug_in_controller
  /timeruleplugins/{webId}:
    get:
      deprecated: false
      operationId: time_rule_plug_in_get
      parameters:
      - description: The ID of the Time Rule Plug-in.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeRulePlugIn'
            text/json:
              schema:
                $ref: '#/components/schemas/TimeRulePlugIn'
            text/html:
              schema:
                $ref: '#/components/schemas/TimeRulePlugIn'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/TimeRulePlugIn'
          description: The specified Time Rule Plug-in.
      summary: Retrieve a Time Rule Plug-in.
      tags:
      - TimeRulePlugIn
      x-openapi-router-controller: openapi_server.controllers.time_rule_plug_in_controller
  /timerules:
    get:
      deprecated: false
      description: "This method returns a Time Rule based on the hierarchical path\
        \ associated with it, and should be used when a path has been received from\
        \ a separate part of the PI System for use in the PI Web API. Users should\
        \ primarily search with the WebID when available."
      operationId: time_rule_get_by_path
      parameters:
      - description: The path to the Time Rule.
        in: query
        name: path
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeRule'
            text/json:
              schema:
                $ref: '#/components/schemas/TimeRule'
            text/html:
              schema:
                $ref: '#/components/schemas/TimeRule'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/TimeRule'
          description: The requested Time Rule.
      summary: Retrieve a Time Rule by path.
      tags:
      - TimeRule
      x-openapi-router-controller: openapi_server.controllers.time_rule_controller
  /timerules/{webId}:
    delete:
      deprecated: false
      operationId: time_rule_delete
      parameters:
      - description: The ID of the Time Rule.
        in: path
        name: webId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The Time Rule was deleted.
      summary: Delete a Time Rule.
      tags:
      - TimeRule
      x-openapi-router-controller: openapi_server.controllers.time_rule_controller
    get:
      deprecated: false
      operationId: time_rule_get
      parameters:
      - description: The ID of the Time Rule.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeRule'
            text/json:
              schema:
                $ref: '#/components/schemas/TimeRule'
            text/html:
              schema:
                $ref: '#/components/schemas/TimeRule'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/TimeRule'
          description: The requested Time Rule.
      summary: Retrieve a Time Rule.
      tags:
      - TimeRule
      x-openapi-router-controller: openapi_server.controllers.time_rule_controller
    patch:
      deprecated: false
      operationId: time_rule_update
      parameters:
      - description: The ID of the Time Rule.
        in: path
        name: webId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimeRule'
          text/json:
            schema:
              $ref: '#/components/schemas/TimeRule'
        description: A partial Time Rule containing the desired changes.
        required: true
        x-body-name: timeRule
      responses:
        "204":
          content: {}
          description: The Time Rule was updated.
      summary: Update a Time Rule by replacing items in its definition.
      tags:
      - TimeRule
      x-codegen-request-body-name: timeRule
      x-openapi-router-controller: openapi_server.controllers.time_rule_controller
  /unitclasses:
    get:
      deprecated: false
      operationId: unit_class_get_by_path
      parameters:
      - description: The path to the unit class.
        in: query
        name: path
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitClass'
            text/json:
              schema:
                $ref: '#/components/schemas/UnitClass'
            text/html:
              schema:
                $ref: '#/components/schemas/UnitClass'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/UnitClass'
          description: The specified unit class.
      summary: Retrieve a unit class by path.
      tags:
      - UnitClass
      x-openapi-router-controller: openapi_server.controllers.unit_class_controller
  /unitclasses/{webId}:
    delete:
      deprecated: false
      operationId: unit_class_delete
      parameters:
      - description: The ID of the unit class.
        in: path
        name: webId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The unit class was deleted.
      summary: Delete a unit class.
      tags:
      - UnitClass
      x-openapi-router-controller: openapi_server.controllers.unit_class_controller
    get:
      deprecated: false
      operationId: unit_class_get
      parameters:
      - description: The ID of the unit class.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitClass'
            text/json:
              schema:
                $ref: '#/components/schemas/UnitClass'
            text/html:
              schema:
                $ref: '#/components/schemas/UnitClass'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/UnitClass'
          description: The specified unit class.
      summary: Retrieve a unit class.
      tags:
      - UnitClass
      x-openapi-router-controller: openapi_server.controllers.unit_class_controller
    patch:
      deprecated: false
      operationId: unit_class_update
      parameters:
      - description: The ID of the unit class.
        in: path
        name: webId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnitClass'
          text/json:
            schema:
              $ref: '#/components/schemas/UnitClass'
        description: A partial unit class containing the desired changes.
        required: true
        x-body-name: unitClassDTO
      responses:
        "204":
          content: {}
          description: The unit class was updated.
      summary: Update a unit class.
      tags:
      - UnitClass
      x-codegen-request-body-name: unitClassDTO
      x-openapi-router-controller: openapi_server.controllers.unit_class_controller
  /unitclasses/{webId}/canonicalunit:
    get:
      deprecated: false
      operationId: unit_class_get_canonical_unit
      parameters:
      - description: The ID of unit class.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
            text/json:
              schema:
                $ref: '#/components/schemas/Unit'
            text/html:
              schema:
                $ref: '#/components/schemas/Unit'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Unit'
          description: the canonical unit of the specified unit class.
      summary: Get the canonical unit of a unit class.
      tags:
      - UnitClass
      x-openapi-router-controller: openapi_server.controllers.unit_class_controller
  /unitclasses/{webId}/units:
    get:
      deprecated: false
      operationId: unit_class_get_units
      parameters:
      - description: The ID of unit class.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
            text/json:
              schema:
                $ref: '#/components/schemas/Unit'
            text/html:
              schema:
                $ref: '#/components/schemas/Unit'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Unit'
          description: The list of units in the unit class.
      summary: Get a list of all units belonging to the unit class.
      tags:
      - UnitClass
      x-openapi-router-controller: openapi_server.controllers.unit_class_controller
    post:
      deprecated: false
      operationId: unit_class_create_unit
      parameters:
      - description: The ID of the server.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Unit'
          text/json:
            schema:
              $ref: '#/components/schemas/Unit'
        description: The new unit definition.
        required: true
        x-body-name: unitDTO
      responses:
        "201":
          content: {}
          description: The unit was created. The response's Location header is a link
            to the unit.
      summary: Create a unit in the specified Unit Class.
      tags:
      - UnitClass
      x-codegen-request-body-name: unitDTO
      x-openapi-router-controller: openapi_server.controllers.unit_class_controller
  /units:
    get:
      deprecated: false
      operationId: unit_get_by_path
      parameters:
      - description: The path to the unit.
        in: query
        name: path
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
            text/json:
              schema:
                $ref: '#/components/schemas/Unit'
            text/html:
              schema:
                $ref: '#/components/schemas/Unit'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Unit'
          description: The specified unit.
      summary: Retrieve a unit by path.
      tags:
      - Unit
      x-openapi-router-controller: openapi_server.controllers.unit_controller
  /units/{webId}:
    delete:
      deprecated: false
      operationId: unit_delete
      parameters:
      - description: The ID of the unit.
        in: path
        name: webId
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: The unit was deleted.
      summary: Delete a unit.
      tags:
      - Unit
      x-openapi-router-controller: openapi_server.controllers.unit_controller
    get:
      deprecated: false
      operationId: unit_get
      parameters:
      - description: The ID of the unit.
        in: path
        name: webId
        required: true
        schema:
          type: string
      - description: "List of fields to be returned in the response, separated by\
          \ semicolons (;). If this parameter is not specified, all available fields\
          \ will be returned."
        in: query
        name: selectedFields
        schema:
          type: string
      - description: Optional parameter. Used to specify the type of WebID. Useful
          for URL brevity and other special cases. Default is the value of the configuration
          item "WebIDType".
        in: query
        name: webIdType
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
            text/json:
              schema:
                $ref: '#/components/schemas/Unit'
            text/html:
              schema:
                $ref: '#/components/schemas/Unit'
            application/x-ms-application:
              schema:
                $ref: '#/components/schemas/Unit'
          description: The specified unit.
      summary: Retrieve a unit.
      tags:
      - Unit
      x-openapi-router-controller: openapi_server.controllers.unit_controller
    patch:
      deprecated: false
      operationId: unit_update
      parameters:
      - description: The ID of the unit.
        in: path
        name: webId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Unit'
          text/json:
            schema:
              $ref: '#/components/schemas/Unit'
        description: A partial unit containing the desired changes.
        required: true
        x-body-name: unitDTO
      responses:
        "204":
          content: {}
          description: The unit was updated.
      summary: Update a unit.
      tags:
      - Unit
      x-codegen-request-body-name: unitDTO
      x-openapi-router-controller: openapi_server.controllers.unit_controller
components:
  schemas:
    Ambiguous:
      properties:
        Reason:
          example: The requested resource has multiple representations.
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
      type: object
    Analysis:
      example:
        Path: "\\\\MyAssetServer\\MyDatabase\\MyElement\\Analyses[MyAnalysis]"
        Status: Disabled
        IsTimeRuleDefinedByTemplate: false
        Description: ""
        WebException:
          Errors:
          - An error has occurred.
          StatusCode: 500
        HasNotification: false
        Priority: High
        HasTarget: true
        OutputTime: ""
        HasTemplate: false
        PublishResults: false
        GroupId: 0
        Name: MyAnalysis
        TargetWebId: I1ETDqD5loBNH0erqeqJodtALAjFPVfUpY-02A8uioGDSgIg
        CategoryNames:
        - MyAnalysisCategory
        AutoCreated: false
        AnalysisRulePlugInName: PerformanceEquation
        TimeRulePlugInName: Periodic
        WebId: I1XsDqD5loBNH0erqeqJodtALAWDOFEb-U5xGEQwAVXYTCAA
        Links:
          SecurityEntries: SecurityEntries
          Target: Target
          TimeRulePlugIn: TimeRulePlugIn
          Categories: Categories
          Database: Database
          Self: Self
          Security: Security
          AnalysisRule: AnalysisRule
          TimeRule: TimeRule
          AnalysisRulePlugIn: AnalysisRulePlugIn
          Template: Template
        TemplateName: ""
        Id: 11853358-94bf-11e7-8443-00155d84c200
        MaximumQueueSize: 0
        IsConfigured: false
      properties:
        AnalysisRulePlugInName:
          example: PerformanceEquation
          title: AnalysisRulePlugInName
          type: string
        AutoCreated:
          example: false
          title: AutoCreated
          type: boolean
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        CategoryNames:
          example:
          - MyAnalysisCategory
          items:
            type: string
          title: CategoryNames
          type: array
        Description:
          example: ""
          title: Description
          type: string
        GroupId:
          example: 0
          format: int32
          title: GroupId
          type: integer
        HasNotification:
          example: false
          title: HasNotification
          type: boolean
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        HasTarget:
          example: true
          title: HasTarget
          type: boolean
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        HasTemplate:
          example: false
          title: HasTemplate
          type: boolean
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        Id:
          example: 11853358-94bf-11e7-8443-00155d84c200
          format: uuid
          title: Id
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        IsConfigured:
          example: false
          title: IsConfigured
          type: boolean
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        IsTimeRuleDefinedByTemplate:
          example: false
          title: IsTimeRuleDefinedByTemplate
          type: boolean
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        Links:
          $ref: '#/components/schemas/AnalysisLinks'
        MaximumQueueSize:
          example: 0
          format: int32
          title: MaximumQueueSize
          type: integer
        Name:
          example: MyAnalysis
          title: Name
          type: string
          x-required-post: true
        OutputTime:
          example: ""
          title: OutputTime
          type: string
        Path:
          example: "\\\\MyAssetServer\\MyDatabase\\MyElement\\Analyses[MyAnalysis]"
          format: path
          title: Path
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        Priority:
          example: High
          title: Priority
          type: string
        PublishResults:
          example: false
          title: PublishResults
          type: boolean
        Status:
          example: Disabled
          title: Status
          type: string
        TargetWebId:
          example: I1ETDqD5loBNH0erqeqJodtALAjFPVfUpY-02A8uioGDSgIg
          format: webid
          title: TargetWebId
          type: string
          x-disallow-post: true
        TemplateName:
          example: ""
          title: TemplateName
          type: string
        TimeRulePlugInName:
          example: Periodic
          title: TimeRulePlugInName
          type: string
        WebException:
          $ref: '#/components/schemas/WebException'
        WebId:
          example: I1XsDqD5loBNH0erqeqJodtALAWDOFEb-U5xGEQwAVXYTCAA
          format: webid
          title: WebId
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
      title: Analysis
      type: object
    AnalysisCategory:
      example:
        Path: "\\\\MyAssetServer\\Database\\CategoriesAnalysis[CategoryName]"
        Description: Relative energy use per ton of process feed.
        WebException:
          Errors:
          - An error has occurred.
          StatusCode: 500
        WebId: I1XCDqD5loBNH0erqeqJodtALAoko2-UoOVEibhTWQCk1MDw
        Links:
          SecurityEntries: SecurityEntries
          Database: Database
          Self: Self
          Security: Security
        Id: f9364aa2-0e4a-4854-9b85-35900a4d4c0f
        Name: CategoryName
      properties:
        Description:
          example: Relative energy use per ton of process feed.
          title: Description
          type: string
        Id:
          example: f9364aa2-0e4a-4854-9b85-35900a4d4c0f
          format: uuid
          title: Id
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        Links:
          $ref: '#/components/schemas/AnalysisCategoryLinks'
        Name:
          example: CategoryName
          title: Name
          type: string
          x-required-post: true
        Path:
          example: "\\\\MyAssetServer\\Database\\CategoriesAnalysis[CategoryName]"
          format: path
          title: Path
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        WebException:
          $ref: '#/components/schemas/WebException'
        WebId:
          example: I1XCDqD5loBNH0erqeqJodtALAoko2-UoOVEibhTWQCk1MDw
          format: webid
          title: WebId
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
      title: AnalysisCategory
      type: object
    AnalysisCategoryLinks:
      example:
        SecurityEntries: SecurityEntries
        Database: Database
        Self: Self
        Security: Security
      properties:
        Database:
          title: Database
          type: string
          x-link-path: "assetdatabases/{webId}"
          x-link-optional: false
        Security:
          title: Security
          type: string
          x-link-path: "analysiscategories/{webId}/security"
          x-link-optional: false
        SecurityEntries:
          title: SecurityEntries
          type: string
          x-link-path: "analysiscategories/{webId}/securityentries"
          x-link-optional: false
        Self:
          title: Self
          type: string
          x-link-path: "analysiscategories/{webId}"
          x-link-optional: false
      title: AnalysisCategoryLinks
      type: object
    AnalysisLinks:
      example:
        SecurityEntries: SecurityEntries
        Target: Target
        TimeRulePlugIn: TimeRulePlugIn
        Categories: Categories
        Database: Database
        Self: Self
        Security: Security
        AnalysisRule: AnalysisRule
        TimeRule: TimeRule
        AnalysisRulePlugIn: AnalysisRulePlugIn
        Template: Template
      properties:
        AnalysisRule:
          title: AnalysisRule
          type: string
          x-link-path: "analysisrules/{webId}"
          x-link-optional: true
        AnalysisRulePlugIn:
          title: AnalysisRulePlugIn
          type: string
          x-link-path: "analysisruleplugins/{webId}"
          x-link-optional: true
        Categories:
          title: Categories
          type: string
          x-link-path: "analyses/{webId}/categories"
          x-link-optional: false
        Database:
          title: Database
          type: string
          x-link-path: "assetdatabases/{webId}"
          x-link-optional: true
        Security:
          title: Security
          type: string
          x-link-path: "analyses/{webId}/security"
          x-link-optional: false
        SecurityEntries:
          title: SecurityEntries
          type: string
          x-link-path: "analyses/{webId}/securityentries"
          x-link-optional: false
        Self:
          title: Self
          type: string
          x-link-path: "analyses/{webId}"
          x-link-optional: false
        Target:
          title: Target
          type: string
          x-link-path: "elements/{webId}"
          x-link-optional: true
        Template:
          title: Template
          type: string
          x-link-path: "analysistemplates/{webId}"
          x-link-optional: true
        TimeRule:
          title: TimeRule
          type: string
          x-link-path: "timerules/{webId}"
          x-link-optional: true
        TimeRulePlugIn:
          title: TimeRulePlugIn
          type: string
          x-link-path: "timeruleplugins/{webId}"
          x-link-optional: true
      title: AnalysisLinks
      type: object
    AnalysisRule:
      example:
        Path: "\\\\MyAssetServer\\MyDatabase\\MyElement\\Analyses[MyAnalysis]\\AnalysisRule"
        ConfigString: "a := TagVal('sinusoid'); b := Pow(a, 2); c := a + b;"
        Description: Runs a performance equation.
        WebException:
          Errors:
          - An error has occurred.
          StatusCode: 500
        VariableMapping: b||Attribute1;c||Attribute2
        EditorType: OSIsoft.AF.Analysis.AnalysisRule.PEAnalysisRuleEditor
        Name: PerformanceEquation
        HasChildren: false
        DisplayString: "a := TagVal('sinusoid'); b := Pow(a, 2); c := a + b;"
        SupportedBehaviors:
        - SupportsRunningCase
        - SupportStatePassing
        - OutputCorrectAfterSkipping
        WebId: I1XRXDqD5loBNH0erqeqJodtALAfyWdysKU5xGEQwAVXYTCAAfyWdysKU5xGEQwAVXYTCAA
        Links:
          AnalysisTemplate: AnalysisTemplate
          Parent: Parent
          Analysis: Analysis
          AnalysisRules: AnalysisRules
          Self: Self
          PlugIn: PlugIn
        IsInitializing: false
        Id: ca9d257f-94c2-11e7-8443-00155d84c200
        PlugInName: PerformanceEquation
        IsConfigured: false
      properties:
        ConfigString:
          example: "a := TagVal('sinusoid'); b := Pow(a, 2); c := a + b;"
          title: ConfigString
          type: string
        Description:
          example: Runs a performance equation.
          title: Description
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        DisplayString:
          example: "a := TagVal('sinusoid'); b := Pow(a, 2); c := a + b;"
          title: DisplayString
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        EditorType:
          example: OSIsoft.AF.Analysis.AnalysisRule.PEAnalysisRuleEditor
          title: EditorType
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        HasChildren:
          example: false
          title: HasChildren
          type: boolean
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        Id:
          example: ca9d257f-94c2-11e7-8443-00155d84c200
          format: uuid
          title: Id
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        IsConfigured:
          example: false
          title: IsConfigured
          type: boolean
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        IsInitializing:
          example: false
          title: IsInitializing
          type: boolean
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        Links:
          $ref: '#/components/schemas/AnalysisRuleLinks'
        Name:
          example: PerformanceEquation
          title: Name
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        Path:
          example: "\\\\MyAssetServer\\MyDatabase\\MyElement\\Analyses[MyAnalysis]\\\
            AnalysisRule"
          format: path
          title: Path
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        PlugInName:
          example: PerformanceEquation
          title: PlugInName
          type: string
          x-disallow-patch: true
          x-required-post: true
        SupportedBehaviors:
          example:
          - SupportsRunningCase
          - SupportStatePassing
          - OutputCorrectAfterSkipping
          items:
            type: string
          title: SupportedBehaviors
          type: array
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        VariableMapping:
          example: b||Attribute1;c||Attribute2
          title: VariableMapping
          type: string
        WebException:
          $ref: '#/components/schemas/WebException'
        WebId:
          example: I1XRXDqD5loBNH0erqeqJodtALAfyWdysKU5xGEQwAVXYTCAAfyWdysKU5xGEQwAVXYTCAA
          format: webid
          title: WebId
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
      title: AnalysisRule
      type: object
    AnalysisRuleLinks:
      example:
        AnalysisTemplate: AnalysisTemplate
        Parent: Parent
        Analysis: Analysis
        AnalysisRules: AnalysisRules
        Self: Self
        PlugIn: PlugIn
      properties:
        Analysis:
          title: Analysis
          type: string
          x-link-path: "analyses/{webId}"
          x-link-optional: true
        AnalysisRules:
          title: AnalysisRules
          type: string
          x-link-path: "analysisrules/{webId}/analysisrules"
          x-link-optional: false
        AnalysisTemplate:
          title: AnalysisTemplate
          type: string
          x-link-path: "analysistemplates/{webId}"
          x-link-optional: true
        Parent:
          title: Parent
          type: string
          x-link-path: "analysisrules/{webId}"
          x-link-optional: true
        PlugIn:
          title: PlugIn
          type: string
          x-link-path: "analysisruleplugins/{webId}"
          x-link-optional: true
        Self:
          title: Self
          type: string
          x-link-path: "analysisrules/{webId}"
          x-link-optional: false
      title: AnalysisRuleLinks
      type: object
    AnalysisRulePlugIn:
      example:
        AssemblyTime: 2016-05-25T14:01:07Z
        Path: "\\\\MyAssetServer\\PlugInsAnalysisRule[Imbalance]"
        Description: Calculates simple material imbalances on nodes of a model.
        WebException:
          Errors:
          - An error has occurred.
          StatusCode: 500
        LoadedAssemblyTime: 1970-01-01T00:00:00Z
        IsBrowsable: true
        Name: Imbalance
        IsNonEditableConfig: false
        LoadedVersion: ""
        Version: 2.8.5.7552
        WebId: I1XPDqD5loBNH0erqeqJodtALABWwqmmFvekaFShbb-52MAw
        AssemblyID: 1acd00c2-79d0-4818-a03c-0616c4513750
        AssemblyLoadProperties:
        - None
        CompatibilityVersion: 2
        Links:
          Self: Self
          AssetServer: AssetServer
        Id: 9a2a6c05-6f61-467a-854a-16dbfb9d8c03
        AssemblyFileName: OSIsoft.AF.Analysis.AnalysisRule.Imbalance.dll
      properties:
        AssemblyFileName:
          example: OSIsoft.AF.Analysis.AnalysisRule.Imbalance.dll
          title: AssemblyFileName
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        AssemblyID:
          example: 1acd00c2-79d0-4818-a03c-0616c4513750
          format: uuid
          title: AssemblyID
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        AssemblyLoadProperties:
          example:
          - None
          items:
            type: string
          title: AssemblyLoadProperties
          type: array
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        AssemblyTime:
          example: 2016-05-25T14:01:07Z
          format: date-time
          title: AssemblyTime
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        CompatibilityVersion:
          example: 2
          format: int32
          title: CompatibilityVersion
          type: integer
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        Description:
          example: Calculates simple material imbalances on nodes of a model.
          title: Description
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        Id:
          example: 9a2a6c05-6f61-467a-854a-16dbfb9d8c03
          format: uuid
          title: Id
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        IsBrowsable:
          example: true
          title: IsBrowsable
          type: boolean
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        IsNonEditableConfig:
          example: false
          title: IsNonEditableConfig
          type: boolean
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        Links:
          $ref: '#/components/schemas/AnalysisRulePlugInLinks'
        LoadedAssemblyTime:
          example: 1970-01-01T00:00:00Z
          format: date-time
          title: LoadedAssemblyTime
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        LoadedVersion:
          example: ""
          title: LoadedVersion
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        Name:
          example: Imbalance
          title: Name
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        Path:
          example: "\\\\MyAssetServer\\PlugInsAnalysisRule[Imbalance]"
          format: path
          title: Path
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        Version:
          example: 2.8.5.7552
          title: Version
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        WebException:
          $ref: '#/components/schemas/WebException'
        WebId:
          example: I1XPDqD5loBNH0erqeqJodtALABWwqmmFvekaFShbb-52MAw
          format: webid
          title: WebId
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
      title: AnalysisRulePlugIn
      type: object
    AnalysisRulePlugInLinks:
      example:
        Self: Self
        AssetServer: AssetServer
      properties:
        AssetServer:
          title: AssetServer
          type: string
          x-link-path: "assetservers/{webId}"
          x-link-optional: false
        Self:
          title: Self
          type: string
          x-link-path: "analysisruleplugins/{webId}"
          x-link-optional: false
      title: AnalysisRulePlugInLinks
      type: object
    AnalysisTemplate:
      example:
        Path: "\\\\MyAssetServer\\MyDatabase\\AnalysisTemplates[MyAnalysisTemplate]"
        Description: ""
        WebException:
          Errors:
          - An error has occurred.
          StatusCode: 500
        HasTarget: false
        OutputTime: ""
        HasNotificationTemplate: false
        TargetName: MyElementTemplate
        GroupId: 0
        Name: MyAnalysisTemplate
        CreateEnabled: true
        CategoryNames:
        - MyAnalysisCategory
        AnalysisRulePlugInName: PerformanceEquation
        TimeRulePlugInName: Periodic
        WebId: I1XTG_auSSsvuECG8ad_p8b25QEZgtYQY_J06YnELl5cALiA
        Links:
          SecurityEntries: SecurityEntries
          Target: Target
          TimeRulePlugIn: TimeRulePlugIn
          Categories: Categories
          Database: Database
          Self: Self
          Security: Security
          AnalysisRule: AnalysisRule
          TimeRule: TimeRule
          AnalysisRulePlugIn: AnalysisRulePlugIn
        Id: 612d9811-3f06-4e27-989c-42e5e5c00b88
      properties:
        AnalysisRulePlugInName:
          example: PerformanceEquation
          title: AnalysisRulePlugInName
          type: string
        CategoryNames:
          example:
          - MyAnalysisCategory
          items:
            type: string
          title: CategoryNames
          type: array
        CreateEnabled:
          example: true
          title: CreateEnabled
          type: boolean
        Description:
          example: ""
          title: Description
          type: string
        GroupId:
          example: 0
          format: int32
          title: GroupId
          type: integer
        HasNotificationTemplate:
          example: false
          title: HasNotificationTemplate
          type: boolean
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        HasTarget:
          example: false
          title: HasTarget
          type: boolean
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        Id:
          example: 612d9811-3f06-4e27-989c-42e5e5c00b88
          format: uuid
          title: Id
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        Links:
          $ref: '#/components/schemas/AnalysisTemplateLinks'
        Name:
          example: MyAnalysisTemplate
          title: Name
          type: string
          x-required-post: true
        OutputTime:
          example: ""
          title: OutputTime
          type: string
        Path:
          example: "\\\\MyAssetServer\\MyDatabase\\AnalysisTemplates[MyAnalysisTemplate]"
          format: path
          title: Path
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        TargetName:
          example: MyElementTemplate
          title: TargetName
          type: string
        TimeRulePlugInName:
          example: Periodic
          title: TimeRulePlugInName
          type: string
        WebException:
          $ref: '#/components/schemas/WebException'
        WebId:
          example: I1XTG_auSSsvuECG8ad_p8b25QEZgtYQY_J06YnELl5cALiA
          format: webid
          title: WebId
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
      title: AnalysisTemplate
      type: object
    AnalysisTemplateLinks:
      example:
        SecurityEntries: SecurityEntries
        Target: Target
        TimeRulePlugIn: TimeRulePlugIn
        Categories: Categories
        Database: Database
        Self: Self
        Security: Security
        AnalysisRule: AnalysisRule
        TimeRule: TimeRule
        AnalysisRulePlugIn: AnalysisRulePlugIn
      properties:
        AnalysisRule:
          title: AnalysisRule
          type: string
          x-link-path: "analysisrules/{webId}"
          x-link-optional: true
        AnalysisRulePlugIn:
          title: AnalysisRulePlugIn
          type: string
          x-link-path: "analysisruleplugins/{webId}"
          x-link-optional: true
        Categories:
          title: Categories
          type: string
          x-link-path: "analysistemplates/{webId}/categories"
          x-link-optional: false
        Database:
          title: Database
          type: string
          x-link-path: "assetdatabases/{webId}"
          x-link-optional: false
        Security:
          title: Security
          type: string
          x-link-path: "analysistemplates/{webId}/security"
          x-link-optional: false
        SecurityEntries:
          title: SecurityEntries
          type: string
          x-link-path: "analysistemplates/{webId}/securityentries"
          x-link-optional: false
        Self:
          title: Self
          type: string
          x-link-path: "analysistemplates/{webId}"
          x-link-optional: false
        Target:
          title: Target
          type: string
          x-link-path: "elementtemplates/{webId}"
          x-link-optional: true
        TimeRule:
          title: TimeRule
          type: string
          x-link-path: "timerules/{webId}"
          x-link-optional: true
        TimeRulePlugIn:
          title: TimeRulePlugIn
          type: string
          x-link-path: "timeruleplugins/{webId}"
          x-link-optional: true
      title: AnalysisTemplateLinks
      type: object
    Annotation:
      example:
        CreationDate: 2016-06-21T14:45:50.2988321Z
        Errors:
        - Message:
          - An error has occurred.
          FieldName: Value
        - Message:
          - An error has occurred.
          FieldName: Value
        Description: Signifies a spike in temperature.
        WebException:
          Errors:
          - An error has occurred.
          StatusCode: 500
        ModifyDate: 2016-06-21T14:45:50.2988321Z
        Value: The temperature spiked because of a malfunction with a unit in our
          west plant.
        Links:
          MediaData: MediaData
          Owner: Owner
          MediaMetadata: MediaMetadata
          Self: Self
        Creator: MyDomain\UserA
        Id: 512b6616-ce39-4f70-9048-8c6a025fb592
        Modifier: MyDomain\UserA
        Name: Temperature Annotation
      properties:
        CreationDate:
          example: 2016-06-21T14:45:50.2988321Z
          format: date-time
          title: CreationDate
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        Creator:
          example: MyDomain\UserA
          title: Creator
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        Description:
          example: Signifies a spike in temperature.
          title: Description
          type: string
        Errors:
          items:
            $ref: '#/components/schemas/PropertyError'
          title: Errors
          type: array
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        Id:
          example: 512b6616-ce39-4f70-9048-8c6a025fb592
          format: uuid
          title: Id
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        Links:
          $ref: '#/components/schemas/AnnotationLinks'
        Modifier:
          example: MyDomain\UserA
          title: Modifier
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        ModifyDate:
          example: 2016-06-21T14:45:50.2988321Z
          format: date-time
          title: ModifyDate
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        Name:
          example: Temperature Annotation
          title: Name
          type: string
          x-required-post: true
        Value:
          example: The temperature spiked because of a malfunction with a unit in
            our west plant.
          properties: {}
          title: Value
          type: object
        WebException:
          $ref: '#/components/schemas/WebException'
      title: Annotation
      type: object
    AnnotationLinks:
      example:
        MediaData: MediaData
        Owner: Owner
        MediaMetadata: MediaMetadata
        Self: Self
      properties:
        MediaData:
          title: MediaData
          type: string
          x-link-path: "eventframes/{webId}/annotations/{id}/attachment/media/mediadata"
          x-link-optional: true
        MediaMetadata:
          title: MediaMetadata
          type: string
          x-link-path: "eventframes/{webId}/annotations/{id}/attachment/media/metadata"
          x-link-optional: true
        Owner:
          title: Owner
          type: string
          x-link-optional: false
        Self:
          title: Self
          type: string
          x-link-optional: false
      title: AnnotationLinks
      type: object
    AssetDatabase:
      example:
        Path: \\MyAssetServer\MyDatabase
        Description: PI BI Project Asset Model
        WebException:
          Errors:
          - An error has occurred.
          StatusCode: 500
        WebId: I1RDDqD5loBNH0erqeqJodtALAquulo6433EKdHra7fsmL0g
        Links:
          ElementTemplates: ElementTemplates
          AnalysisTemplates: AnalysisTemplates
          ElementCategories: ElementCategories
          Self: Self
          Elements: Elements
          Security: Security
          AssetServer: AssetServer
          EnumerationSets: EnumerationSets
          SecurityEntries: SecurityEntries
          AnalysisCategories: AnalysisCategories
          EventFrames: EventFrames
          Tables: Tables
          TableCategories: TableCategories
          AttributeCategories: AttributeCategories
        Id: a3a5ebaa-37ae-42dc-9d1e-b6bb7ec98bd2
        ExtendedProperties:
          key:
            WebException:
              Errors:
              - An error has occurred.
              StatusCode: 500
            Value: 12.3
            Exception:
              Errors:
              - An error has occurred.
        Name: MyDatabase
      properties:
        Description:
          example: PI BI Project Asset Model
          title: Description
          type: string
        ExtendedProperties:
          additionalProperties:
            $ref: '#/components/schemas/Value'
          title: ExtendedProperties
          type: object
        Id:
          example: a3a5ebaa-37ae-42dc-9d1e-b6bb7ec98bd2
          format: uuid
          title: Id
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        Links:
          $ref: '#/components/schemas/AssetDatabaseLinks'
        Name:
          example: MyDatabase
          title: Name
          type: string
          x-required-post: true
        Path:
          example: \\MyAssetServer\MyDatabase
          format: path
          title: Path
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        WebException:
          $ref: '#/components/schemas/WebException'
        WebId:
          example: I1RDDqD5loBNH0erqeqJodtALAquulo6433EKdHra7fsmL0g
          format: webid
          title: WebId
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
      title: AssetDatabase
      type: object
    AssetDatabaseLinks:
      example:
        ElementTemplates: ElementTemplates
        AnalysisTemplates: AnalysisTemplates
        ElementCategories: ElementCategories
        Self: Self
        Elements: Elements
        Security: Security
        AssetServer: AssetServer
        EnumerationSets: EnumerationSets
        SecurityEntries: SecurityEntries
        AnalysisCategories: AnalysisCategories
        EventFrames: EventFrames
        Tables: Tables
        TableCategories: TableCategories
        AttributeCategories: AttributeCategories
      properties:
        AnalysisCategories:
          title: AnalysisCategories
          type: string
          x-link-path: "assetdatabases/{webId}/analysiscategories"
          x-link-optional: false
        AnalysisTemplates:
          title: AnalysisTemplates
          type: string
          x-link-path: "assetdatabases/{webId}/analysistemplates"
          x-link-optional: false
        AssetServer:
          title: AssetServer
          type: string
          x-link-path: "assetservers/{webId}"
          x-link-optional: false
        AttributeCategories:
          title: AttributeCategories
          type: string
          x-link-path: "assetdatabases/{webId}/attributecategories"
          x-link-optional: false
        ElementCategories:
          title: ElementCategories
          type: string
          x-link-path: "assetdatabases/{webId}/elementcategories"
          x-link-optional: false
        ElementTemplates:
          title: ElementTemplates
          type: string
          x-link-path: "assetdatabases/{webId}/elementtemplates"
          x-link-optional: false
        Elements:
          title: Elements
          type: string
          x-link-path: "assetdatabases/{webId}/elements"
          x-link-optional: false
        EnumerationSets:
          title: EnumerationSets
          type: string
          x-link-path: "assetdatabases/{webId}/enumerationsets"
          x-link-optional: false
        EventFrames:
          title: EventFrames
          type: string
          x-link-path: "assetdatabases/{webId}/eventframes"
          x-link-optional: false
        Security:
          title: Security
          type: string
          x-link-path: "assetdatabases/{webId}/security"
          x-link-optional: false
        SecurityEntries:
          title: SecurityEntries
          type: string
          x-link-path: "assetdatabases/{webId}/securityentries"
          x-link-optional: false
        Self:
          title: Self
          type: string
          x-link-path: "assetdatabases/{webId}"
          x-link-optional: false
        TableCategories:
          title: TableCategories
          type: string
          x-link-path: "assetdatabases/{webId}/tablecategories"
          x-link-optional: false
        Tables:
          title: Tables
          type: string
          x-link-path: "assetdatabases/{webId}/tables"
          x-link-optional: false
      title: AssetDatabaseLinks
      type: object
    AssetServer:
      example:
        Path: \\MyAssetServer
        Description: Sample Description
        ServerVersion: 2.5.0.5039
        WebException:
          Errors:
          - An error has occurred.
          StatusCode: 500
        WebId: I1RSDqD5loBNH0erqeqJodtALA
        Links:
          SecurityEntries: SecurityEntries
          Databases: Databases
          UnitClasses: UnitClasses
          NotificationPlugIns: NotificationPlugIns
          SecurityIdentities: SecurityIdentities
          AnalysisRulePlugIns: AnalysisRulePlugIns
          NotificationContactTemplates: NotificationContactTemplates
          SecurityMappings: SecurityMappings
          Self: Self
          TimeRulePlugIns: TimeRulePlugIns
          Security: Security
        Id: 96f9a00e-4d80-471f-aba9-ea89a1db402c
        ServerTime: 2014-07-22T14:00:00Z
        ExtendedProperties:
          key:
            WebException:
              Errors:
              - An error has occurred.
              StatusCode: 500
            Value: 12.3
            Exception:
              Errors:
              - An error has occurred.
        IsConnected: true
        Name: MyAssetServer
      properties:
        Description:
          example: Sample Description
          title: Description
          type: string
        ExtendedProperties:
          additionalProperties:
            $ref: '#/components/schemas/Value'
          title: ExtendedProperties
          type: object
        Id:
          example: 96f9a00e-4d80-471f-aba9-ea89a1db402c
          format: uuid
          title: Id
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        IsConnected:
          example: true
          title: IsConnected
          type: boolean
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        Links:
          $ref: '#/components/schemas/AssetServerLinks'
        Name:
          example: MyAssetServer
          title: Name
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        Path:
          example: \\MyAssetServer
          format: path
          title: Path
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        ServerTime:
          example: 2014-07-22T14:00:00Z
          format: date-time
          title: ServerTime
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        ServerVersion:
          example: 2.5.0.5039
          title: ServerVersion
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        WebException:
          $ref: '#/components/schemas/WebException'
        WebId:
          example: I1RSDqD5loBNH0erqeqJodtALA
          format: webid
          title: WebId
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
      title: AssetServer
      type: object
    AssetServerLinks:
      example:
        SecurityEntries: SecurityEntries
        Databases: Databases
        UnitClasses: UnitClasses
        NotificationPlugIns: NotificationPlugIns
        SecurityIdentities: SecurityIdentities
        AnalysisRulePlugIns: AnalysisRulePlugIns
        NotificationContactTemplates: NotificationContactTemplates
        SecurityMappings: SecurityMappings
        Self: Self
        TimeRulePlugIns: TimeRulePlugIns
        Security: Security
      properties:
        AnalysisRulePlugIns:
          title: AnalysisRulePlugIns
          type: string
          x-link-path: "assetservers/{webId}/analysisruleplugins"
          x-link-optional: false
        Databases:
          title: Databases
          type: string
          x-link-path: "assetservers/{webId}/assetdatabases"
          x-link-optional: false
        NotificationContactTemplates:
          title: NotificationContactTemplates
          type: string
          x-link-path: "assetservers/{webId}/notificationcontacttemplates"
          x-link-optional: false
        NotificationPlugIns:
          title: NotificationPlugIns
          type: string
          x-link-path: "assetservers/{webId}/notificationplugins"
          x-link-optional: false
        Security:
          title: Security
          type: string
          x-link-path: "assetservers/{webId}/security"
          x-link-optional: false
        SecurityEntries:
          title: SecurityEntries
          type: string
          x-link-path: "assetservers/{webId}/securityentries"
          x-link-optional: false
        SecurityIdentities:
          title: SecurityIdentities
          type: string
          x-link-path: "assetservers/{webId}/securityidentities"
          x-link-optional: false
        SecurityMappings:
          title: SecurityMappings
          type: string
          x-link-path: "assetservers/{webId}/securitymappings"
          x-link-optional: false
        Self:
          title: Self
          type: string
          x-link-path: "assetservers/{webId}"
          x-link-optional: false
        TimeRulePlugIns:
          title: TimeRulePlugIns
          type: string
          x-link-path: "assetservers/{webId}/timeruleplugins"
          x-link-optional: false
        UnitClasses:
          title: UnitClasses
          type: string
          x-link-path: "assetservers/{webId}/unitclasses"
          x-link-optional: false
      title: AssetServerLinks
      type: object
    Attribute:
      example:
        Description: 2008 Water Use
        WebException:
          Errors:
          - An error has occurred.
          StatusCode: 500
        DefaultUnitsNameAbbreviation: L
        Step: false
        Span: 100.0
        Name: Water
        IsExcluded: false
        CategoryNames:
        - Energy Savings Targets
        IsConfigurationItem: false
        WebId: I1AbEDqD5loBNH0erqeqJodtALAYIKyyz2F5BGAxQAVXYRDBAGyPedZG1sUmxOOclp3Flwg
        Paths:
        - \\MyAssetServer\MyDatabase\MyElement|MyAttribute
        - \\MyAssetServer\MyDatabase\ReferencingElement\MyElement|MyAttribute
        IsManualDataEntry: false
        Path: \\MyAssetServer\MyDatabase\CityName\EngineeringProcess\Equipment\MachineName|Water(2008)
        ConfigString: "SELECT [Water Use] FROM [Energy Use 2008] WHERE [Asset ID]\
          \ = '%Element%'"
        IsHidden: false
        Zero: 0.0
        DefaultUnitsName: liter
        DisplayDigits: -5
        HasChildren: false
        TraitName: LimitLoLo
        Type: Int32
        Links:
          PlotData: PlotData
          EnumerationSet: EnumerationSet
          Categories: Categories
          Parent: Parent
          Element: Element
          Attributes: Attributes
          Point: Point
          Self: Self
          EventFrame: EventFrame
          Template: Template
          SummaryData: SummaryData
          Value: Value
          EndValue: EndValue
          Trait: Trait
          InterpolatedData: InterpolatedData
          EnumerationValues: EnumerationValues
          RecordedData: RecordedData
        Id: 75de231b-b591-49b1-b138-e725a77165c2
        DataReferencePlugIn: Table Lookup
        TypeQualifier: ""
        DataReference:
          Type: PI Point
          WebException:
            Errors:
            - An error has occurred.
            StatusCode: 500
          PIPoint:
            Path: \\MyPIServer\PointName
            Zero: 0.0
            DisplayDigits: -5
            Step: false
            Span: 100.0
            Name: PointName
            PointClass: classic
            WebId: I1DPa70Wf0zBA06CLkV9ovNQgQCAAAAA
            Descriptor: 12 Hour Sine Wave
            Future: false
            PointType: Float32
            Id: 82
            DigitalSetName: ""
            EngineeringUnits: ""
      properties:
        CategoryNames:
          example:
          - Energy Savings Targets
          items:
            type: string
          title: CategoryNames
          type: array
        ConfigString:
          example: "SELECT [Water Use] FROM [Energy Use 2008] WHERE [Asset ID] = '%Element%'"
          title: ConfigString
          type: string
        DataReference:
          $ref: '#/components/schemas/DataReference'
        DataReferencePlugIn:
          example: Table Lookup
          title: DataReferencePlugIn
          type: string
        DefaultUnitsName:
          example: liter
          title: DefaultUnitsName
          type: string
        DefaultUnitsNameAbbreviation:
          example: L
          title: DefaultUnitsNameAbbreviation
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        Description:
          example: 2008 Water Use
          title: Description
          type: string
        DisplayDigits:
          example: -5
          title: DisplayDigits
          type: integer
        HasChildren:
          example: false
          title: HasChildren
          type: boolean
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        Id:
          example: 75de231b-b591-49b1-b138-e725a77165c2
          format: uuid
          title: Id
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        IsConfigurationItem:
          example: false
          title: IsConfigurationItem
          type: boolean
        IsExcluded:
          example: false
          title: IsExcluded
          type: boolean
          x-disallow-post: true
        IsHidden:
          example: false
          title: IsHidden
          type: boolean
        IsManualDataEntry:
          example: false
          title: IsManualDataEntry
          type: boolean
        Links:
          $ref: '#/components/schemas/AttributeLinks'
        Name:
          example: Water
          title: Name
          type: string
          x-required-post: true
        Path:
          example: \\MyAssetServer\MyDatabase\CityName\EngineeringProcess\Equipment\MachineName|Water(2008)
          format: path
          title: Path
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        Paths:
          example:
          - \\MyAssetServer\MyDatabase\MyElement|MyAttribute
          - \\MyAssetServer\MyDatabase\ReferencingElement\MyElement|MyAttribute
          items:
            type: string
          title: Paths
          type: array
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        Span:
          example: 100.0
          title: Span
          type: number
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        Step:
          example: false
          title: Step
          type: boolean
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        TraitName:
          example: LimitLoLo
          title: TraitName
          type: string
        Type:
          example: Int32
          title: Type
          type: string
        TypeQualifier:
          example: ""
          title: TypeQualifier
          type: string
        WebException:
          $ref: '#/components/schemas/WebException'
        WebId:
          example: I1AbEDqD5loBNH0erqeqJodtALAYIKyyz2F5BGAxQAVXYRDBAGyPedZG1sUmxOOclp3Flwg
          format: webid
          title: WebId
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        Zero:
          example: 0.0
          title: Zero
          type: number
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
      title: Attribute
      type: object
    AttributeCategory:
      example:
        Path: "\\\\MyAssetServer\\Database\\CategoriesAttribute[CategoryName]"
        Description: Relative energy use per ton of process feed.
        WebException:
          Errors:
          - An error has occurred.
          StatusCode: 500
        WebId: I1ACDqD5loBNH0erqeqJodtALAofQgBVRE3E-0dk03Hqa1ng
        Links:
          SecurityEntries: SecurityEntries
          Database: Database
          Self: Self
          Security: Security
        Id: 0520f4a1-4454-4fdc-b476-4d371ea6b59e
        Name: CategoryName
      properties:
        Description:
          example: Relative energy use per ton of process feed.
          title: Description
          type: string
        Id:
          example: 0520f4a1-4454-4fdc-b476-4d371ea6b59e
          format: uuid
          title: Id
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        Links:
          $ref: '#/components/schemas/AttributeCategoryLinks'
        Name:
          example: CategoryName
          title: Name
          type: string
          x-required-post: true
        Path:
          example: "\\\\MyAssetServer\\Database\\CategoriesAttribute[CategoryName]"
          format: path
          title: Path
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        WebException:
          $ref: '#/components/schemas/WebException'
        WebId:
          example: I1ACDqD5loBNH0erqeqJodtALAofQgBVRE3E-0dk03Hqa1ng
          format: webid
          title: WebId
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
      title: AttributeCategory
      type: object
    AttributeCategoryLinks:
      example:
        SecurityEntries: SecurityEntries
        Database: Database
        Self: Self
        Security: Security
      properties:
        Database:
          title: Database
          type: string
          x-link-path: "assetdatabases/{webId}"
          x-link-optional: false
        Security:
          title: Security
          type: string
          x-link-path: "attributecategories/{webId}/security"
          x-link-optional: false
        SecurityEntries:
          title: SecurityEntries
          type: string
          x-link-path: "attributecategories/{webId}/securityentries"
          x-link-optional: false
        Self:
          title: Self
          type: string
          x-link-path: "attributecategories/{webId}"
          x-link-optional: false
      title: AttributeCategoryLinks
      type: object
    AttributeLinks:
      example:
        PlotData: PlotData
        EnumerationSet: EnumerationSet
        Categories: Categories
        Parent: Parent
        Element: Element
        Attributes: Attributes
        Point: Point
        Self: Self
        EventFrame: EventFrame
        Template: Template
        SummaryData: SummaryData
        Value: Value
        EndValue: EndValue
        Trait: Trait
        InterpolatedData: InterpolatedData
        EnumerationValues: EnumerationValues
        RecordedData: RecordedData
      properties:
        Attributes:
          title: Attributes
          type: string
          x-link-path: "attributes/{webId}/attributes"
          x-link-optional: false
        Categories:
          title: Categories
          type: string
          x-link-path: "attributes/{webId}/categories"
          x-link-optional: false
        Element:
          title: Element
          type: string
          x-link-path: "elements/{webId}"
          x-link-optional: true
        EndValue:
          title: EndValue
          type: string
          x-link-path: "streams/{webId}/end"
          x-link-optional: false
        EnumerationSet:
          title: EnumerationSet
          type: string
          x-link-path: "enumerationsets/{webId}"
          x-link-optional: true
        EnumerationValues:
          title: EnumerationValues
          type: string
          x-link-path: "enumerationsets/{webId}/enumerationvalues"
          x-link-optional: true
        EventFrame:
          title: EventFrame
          type: string
          x-link-path: "eventframes/{webId}"
          x-link-optional: true
        InterpolatedData:
          title: InterpolatedData
          type: string
          x-link-path: "streams/{webId}/interpolated"
          x-link-optional: false
        Parent:
          title: Parent
          type: string
          x-link-path: "attributes/{webId}"
          x-link-optional: true
        PlotData:
          title: PlotData
          type: string
          x-link-path: "streams/{webId}/plot"
          x-link-optional: false
        Point:
          title: Point
          type: string
          x-link-path: "points/{webId}"
          x-link-optional: true
        RecordedData:
          title: RecordedData
          type: string
          x-link-path: "streams/{webId}/recorded"
          x-link-optional: false
        Self:
          title: Self
          type: string
          x-link-path: "attributes/{webId}"
          x-link-optional: false
        SummaryData:
          title: SummaryData
          type: string
          x-link-path: "streams/{webId}/summary"
          x-link-optional: false
        Template:
          title: Template
          type: string
          x-link-path: "attributetemplates/{webId}"
          x-link-optional: true
        Trait:
          title: Trait
          type: string
          x-link-path: "attributetraits/{name}"
          x-link-optional: true
        Value:
          title: Value
          type: string
          x-link-optional: false
      title: AttributeLinks
      type: object
    AttributeTemplate:
      example:
        IsManualDataEntry: false
        Path: "\\\\MyAssetServer\\MyDatabase\\ElementTemplates[MachineName]|Water(2008)"
        ConfigString: "SELECT [Water Use] FROM [Energy Use 2008] WHERE [Asset ID]\
          \ = '%Element%'"
        IsHidden: false
        DefaultUnitsName: liter
        Description: 2008 Water Use
        WebException:
          Errors:
          - An error has occurred.
          StatusCode: 500
        DefaultUnitsNameAbbreviation: L
        Name: Water(2008)
        IsExcluded: false
        DefaultValue: 0
        HasChildren: false
        TraitName: LimitLoLo
        Type: Int32
        CategoryNames:
        - Energy Savings Targets
        IsConfigurationItem: false
        WebId: I1ATEG_auSSsvuECG8ad_p8b25QQkxqWDwIWU6zC4vmgpd4kgtSfQI9VdxUGA8fi1yf9DVg
        Links:
          AttributeTemplates: AttributeTemplates
          Categories: Categories
          Parent: Parent
          Self: Self
          Trait: Trait
          ElementTemplate: ElementTemplate
        Id: 23d027b5-5dd5-41c5-80f1-f8b5c9ff4356
        DataReferencePlugIn: Table Lookup
        TypeQualifier: ""
      properties:
        CategoryNames:
          example:
          - Energy Savings Targets
          items:
            type: string
          title: CategoryNames
          type: array
        ConfigString:
          example: "SELECT [Water Use] FROM [Energy Use 2008] WHERE [Asset ID] = '%Element%'"
          title: ConfigString
          type: string
        DataReferencePlugIn:
          example: Table Lookup
          title: DataReferencePlugIn
          type: string
        DefaultUnitsName:
          example: liter
          title: DefaultUnitsName
          type: string
        DefaultUnitsNameAbbreviation:
          example: L
          title: DefaultUnitsNameAbbreviation
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        DefaultValue:
          example: 0
          properties: {}
          title: DefaultValue
          type: object
        Description:
          example: 2008 Water Use
          title: Description
          type: string
        HasChildren:
          example: false
          title: HasChildren
          type: boolean
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        Id:
          example: 23d027b5-5dd5-41c5-80f1-f8b5c9ff4356
          format: uuid
          title: Id
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        IsConfigurationItem:
          example: false
          title: IsConfigurationItem
          type: boolean
        IsExcluded:
          example: false
          title: IsExcluded
          type: boolean
        IsHidden:
          example: false
          title: IsHidden
          type: boolean
        IsManualDataEntry:
          example: false
          title: IsManualDataEntry
          type: boolean
        Links:
          $ref: '#/components/schemas/AttributeTemplateLinks'
        Name:
          example: Water(2008)
          title: Name
          type: string
          x-required-post: true
        Path:
          example: "\\\\MyAssetServer\\MyDatabase\\ElementTemplates[MachineName]|Water(2008)"
          format: path
          title: Path
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        TraitName:
          example: LimitLoLo
          title: TraitName
          type: string
        Type:
          example: Int32
          title: Type
          type: string
        TypeQualifier:
          example: ""
          title: TypeQualifier
          type: string
        WebException:
          $ref: '#/components/schemas/WebException'
        WebId:
          example: I1ATEG_auSSsvuECG8ad_p8b25QQkxqWDwIWU6zC4vmgpd4kgtSfQI9VdxUGA8fi1yf9DVg
          format: webid
          title: WebId
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
      title: AttributeTemplate
      type: object
    AttributeTemplateLinks:
      example:
        AttributeTemplates: AttributeTemplates
        Categories: Categories
        Parent: Parent
        Self: Self
        Trait: Trait
        ElementTemplate: ElementTemplate
      properties:
        AttributeTemplates:
          title: AttributeTemplates
          type: string
          x-link-path: "attributetemplates/{webId}/attributetemplates"
          x-link-optional: false
        Categories:
          title: Categories
          type: string
          x-link-path: "attributetemplates/{webId}/categories"
          x-link-optional: false
        ElementTemplate:
          title: ElementTemplate
          type: string
          x-link-path: "elementtemplates/{webId}"
          x-link-optional: false
        Parent:
          title: Parent
          type: string
          x-link-path: "attributetemplates/{webId}"
          x-link-optional: true
        Self:
          title: Self
          type: string
          x-link-path: "attributetemplates/{webId}"
          x-link-optional: false
        Trait:
          title: Trait
          type: string
          x-link-path: "attributetraits/{name}"
          x-link-optional: true
      title: AttributeTemplateLinks
      type: object
    AttributeTrait:
      example:
        Abbreviation: LoLo
        RequireNumeric: true
        WebException:
          Errors:
          - An error has occurred.
          StatusCode: 500
        IsTypeInherited: true
        Links:
          Self: Self
        IsAllowedOnRootAttribute: false
        AllowChildAttributes: false
        AllowDuplicates: false
        IsUOMInherited: true
        Name: LimitLoLo
        RequireString: false
      properties:
        Abbreviation:
          example: LoLo
          title: Abbreviation
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        AllowChildAttributes:
          example: false
          title: AllowChildAttributes
          type: boolean
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        AllowDuplicates:
          example: false
          title: AllowDuplicates
          type: boolean
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        IsAllowedOnRootAttribute:
          example: false
          title: IsAllowedOnRootAttribute
          type: boolean
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        IsTypeInherited:
          example: true
          title: IsTypeInherited
          type: boolean
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        IsUOMInherited:
          example: true
          title: IsUOMInherited
          type: boolean
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        Links:
          $ref: '#/components/schemas/AttributeTraitLinks'
        Name:
          example: LimitLoLo
          title: Name
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        RequireNumeric:
          example: true
          title: RequireNumeric
          type: boolean
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        RequireString:
          example: false
          title: RequireString
          type: boolean
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        WebException:
          $ref: '#/components/schemas/WebException'
      title: AttributeTrait
      type: object
    AttributeTraitLinks:
      example:
        Self: Self
      properties:
        Self:
          title: Self
          type: string
          x-link-path: "attributetraits/{name}"
          x-link-optional: false
      title: AttributeTraitLinks
      type: object
    CacheInstance:
      example:
        LastRefreshTime: 2014-07-20T14:08:00Z
        User: MyDomain\Username
        WebException:
          Errors:
          - An error has occurred.
          StatusCode: 500
        WillRefreshAfter: 2014-07-20T18:08:00Z
        ScheduledExpirationTime: 2014-07-20T23:08:00Z
        Id: 8a5033c9-b77f-431c-9820-c9f538d80dc6
      properties:
        Id:
          example: 8a5033c9-b77f-431c-9820-c9f538d80dc6
          format: uuid
          title: Id
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        LastRefreshTime:
          example: 2014-07-20T14:08:00Z
          format: date-time
          title: LastRefreshTime
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        ScheduledExpirationTime:
          example: 2014-07-20T23:08:00Z
          format: date-time
          title: ScheduledExpirationTime
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        User:
          example: MyDomain\Username
          title: User
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        WebException:
          $ref: '#/components/schemas/WebException'
        WillRefreshAfter:
          example: 2014-07-20T18:08:00Z
          format: date-time
          title: WillRefreshAfter
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
      title: CacheInstance
      type: object
    ChannelInstance:
      example:
        LastMessageSentTime: LastMessageSentTime
        WebException:
          Errors:
          - An error has occurred.
          StatusCode: 500
        StartTime: StartTime
        Id: Id
        SentMessageCount: 0
      properties:
        Id:
          title: Id
          type: string
        LastMessageSentTime:
          title: LastMessageSentTime
          type: string
        SentMessageCount:
          title: SentMessageCount
          type: integer
        StartTime:
          title: StartTime
          type: string
        WebException:
          $ref: '#/components/schemas/WebException'
      title: ChannelInstance
      type: object
    DataPipeEvent:
      example:
        Annotated: false
        Errors:
        - Message:
          - An error has occurred.
          FieldName: Value
        - Message:
          - An error has occurred.
          FieldName: Value
        UnitsAbbreviation: m
        Action: Add
        Substituted: false
        WebException:
          Errors:
          - An error has occurred.
          StatusCode: 500
        Value: 12.3
        Good: true
        PreviousEventAction: PreviousEventArchived
        Timestamp: 2014-07-22T14:00:00Z
        Questionable: false
      properties:
        Action:
          example: Add
          title: Action
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        Annotated:
          example: false
          title: Annotated
          type: boolean
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        Errors:
          items:
            $ref: '#/components/schemas/PropertyError'
          title: Errors
          type: array
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        Good:
          example: true
          title: Good
          type: boolean
        PreviousEventAction:
          example: PreviousEventArchived
          title: PreviousEventAction
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        Questionable:
          example: false
          title: Questionable
          type: boolean
        Substituted:
          example: false
          title: Substituted
          type: boolean
          x-disallow-post: true
        Timestamp:
          example: 2014-07-22T14:00:00Z
          format: date-time
          title: Timestamp
          type: string
        UnitsAbbreviation:
          example: m
          title: UnitsAbbreviation
          type: string
        Value:
          example: 12.3
          properties: {}
          title: Value
          type: object
        WebException:
          $ref: '#/components/schemas/WebException'
      title: DataPipeEvent
      type: object
    DataReference:
      example:
        Type: PI Point
        WebException:
          Errors:
          - An error has occurred.
          StatusCode: 500
        PIPoint:
          Path: \\MyPIServer\PointName
          Zero: 0.0
          DisplayDigits: -5
          Step: false
          Span: 100.0
          Name: PointName
          PointClass: classic
          WebId: I1DPa70Wf0zBA06CLkV9ovNQgQCAAAAA
          Descriptor: 12 Hour Sine Wave
          Future: false
          PointType: Float32
          Id: 82
          DigitalSetName: ""
          EngineeringUnits: ""
      properties:
        PIPoint:
          $ref: '#/components/schemas/PIPointDataReference'
        Type:
          example: PI Point
          title: Type
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        WebException:
          $ref: '#/components/schemas/WebException'
      title: DataReference
      type: object
    DataServer:
      example:
        Path: "\\\\PIServer[MyPIServer]"
        ServerVersion: 3.4.390.18
        WebException:
          Errors:
          - An error has occurred.
          StatusCode: 500
        WebId: I1DS1km7hQHxB0i6-VfC-9MwAA
        Links:
          EnumerationSets: EnumerationSets
          Points: Points
          Self: Self
        Id: 85bb49d6-f101-4807-baf9-57c2fbd33000
        ServerTime: 2014-07-22T14:00:00Z
        IsConnected: true
        Name: MyPIServer
      properties:
        Id:
          example: 85bb49d6-f101-4807-baf9-57c2fbd33000
          format: uuid
          title: Id
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        IsConnected:
          example: true
          title: IsConnected
          type: boolean
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        Links:
          $ref: '#/components/schemas/DataServerLinks'
        Name:
          example: MyPIServer
          title: Name
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        Path:
          example: "\\\\PIServer[MyPIServer]"
          format: path
          title: Path
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        ServerTime:
          example: 2014-07-22T14:00:00Z
          format: date-time
          title: ServerTime
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        ServerVersion:
          example: 3.4.390.18
          title: ServerVersion
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        WebException:
          $ref: '#/components/schemas/WebException'
        WebId:
          example: I1DS1km7hQHxB0i6-VfC-9MwAA
          format: webid
          title: WebId
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
      title: DataServer
      type: object
    DataServerLicense:
      example:
        AmountUsed: "1325"
        WebException:
          Errors:
          - An error has occurred.
          StatusCode: 500
        Links:
          Parent: Parent
          Self: Self
        TotalAmount: "10000"
        AmountLeft: "85675"
        Name: Component.Module
      properties:
        AmountLeft:
          example: "85675"
          title: AmountLeft
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        AmountUsed:
          example: "1325"
          title: AmountUsed
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        Links:
          $ref: '#/components/schemas/DataServerLicenseLinks'
        Name:
          example: Component.Module
          title: Name
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        TotalAmount:
          example: "10000"
          title: TotalAmount
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        WebException:
          $ref: '#/components/schemas/WebException'
      title: DataServerLicense
      type: object
    DataServerLicenseLinks:
      example:
        Parent: Parent
        Self: Self
      properties:
        Parent:
          title: Parent
          type: string
          x-link-path: "dataservers/{webId}"
          x-link-optional: false
        Self:
          title: Self
          type: string
          x-link-path: "dataservers/{webId}/license"
          x-link-optional: false
      title: DataServerLicenseLinks
      type: object
    DataServerLinks:
      example:
        EnumerationSets: EnumerationSets
        Points: Points
        Self: Self
      properties:
        EnumerationSets:
          title: EnumerationSets
          type: string
          x-link-path: "dataservers/{webId}/enumerationsets"
          x-link-optional: false
        Points:
          title: Points
          type: string
          x-link-path: "dataservers/{webId}/points"
          x-link-optional: false
        Self:
          title: Self
          type: string
          x-link-path: "dataservers/{webId}"
          x-link-optional: false
      title: DataServerLinks
      type: object
    DeliveryChannelPlugInLinks:
      example:
        Self: Self
        AssetServer: AssetServer
      properties:
        AssetServer:
          title: AssetServer
          type: string
          x-link-path: "assetservers/{webId}"
          x-link-optional: false
        Self:
          title: Self
          type: string
          x-link-path: "notificationplugins/{webId}"
          x-link-optional: false
      title: DeliveryChannelPlugInLinks
      type: object
    Element:
      example:
        Path: \\MyAssetServer\MyDatabase\CityName\EngineeringProcess\Equipment\MachineName
        Description: Manufacturing Equipment MachineName
        WebException:
          Errors:
          - An error has occurred.
          StatusCode: 500
        ExtendedProperties:
          key:
            WebException:
              Errors:
              - An error has occurred.
              StatusCode: 500
            Value: 12.3
            Exception:
              Errors:
              - An error has occurred.
        Name: MachineName
        Errors:
        - Message:
          - An error has occurred.
          FieldName: Value
        - Message:
          - An error has occurred.
          FieldName: Value
        HasChildren: false
        CategoryNames:
        - Equipment Assets
        WebId: I1EmDqD5loBNH0erqeqJodtALAYIKyyz2F5BGAxQAVXYRDBA
        Links:
          PlotData: PlotData
          Categories: Categories
          Parent: Parent
          Attributes: Attributes
          Analyses: Analyses
          Self: Self
          Elements: Elements
          Security: Security
          Template: Template
          SecurityEntries: SecurityEntries
          NotificationRules: NotificationRules
          Database: Database
          SummaryData: SummaryData
          Value: Value
          EventFrames: EventFrames
          EndValue: EndValue
          DefaultAttribute: DefaultAttribute
          InterpolatedData: InterpolatedData
          RecordedData: RecordedData
        TemplateName: MachineName
        Id: cbb28260-853d-11e4-80c5-00155d844304
        Paths:
        - Paths
        - Paths
      properties:
        CategoryNames:
          example:
          - Equipment Assets
          items:
            type: string
          title: CategoryNames
          type: array
        Description:
          example: Manufacturing Equipment MachineName
          title: Description
          type: string
        Errors:
          items:
            $ref: '#/components/schemas/PropertyError'
          title: Errors
          type: array
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        ExtendedProperties:
          additionalProperties:
            $ref: '#/components/schemas/Value'
          title: ExtendedProperties
          type: object
        HasChildren:
          example: false
          title: HasChildren
          type: boolean
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        Id:
          example: cbb28260-853d-11e4-80c5-00155d844304
          format: uuid
          title: Id
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        Links:
          $ref: '#/components/schemas/ElementLinks'
        Name:
          example: MachineName
          title: Name
          type: string
          x-required-post: true
        Path:
          example: \\MyAssetServer\MyDatabase\CityName\EngineeringProcess\Equipment\MachineName
          format: path
          title: Path
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        Paths:
          items:
            type: string
          title: Paths
          type: array
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        TemplateName:
          example: MachineName
          title: TemplateName
          type: string
        WebException:
          $ref: '#/components/schemas/WebException'
        WebId:
          example: I1EmDqD5loBNH0erqeqJodtALAYIKyyz2F5BGAxQAVXYRDBA
          format: webid
          title: WebId
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
      title: Element
      type: object
    ElementCategory:
      example:
        Path: "\\\\MyAssetServer\\Database\\CategoriesElement[CategoryName]"
        Description: Relative energy use per ton of process feed.
        WebException:
          Errors:
          - An error has occurred.
          StatusCode: 500
        WebId: I1ECDqD5loBNH0erqeqJodtALAQ_lRME1-QUKrnEUKhMgEUA
        Links:
          SecurityEntries: SecurityEntries
          Database: Database
          Self: Self
          Security: Security
        Id: 3051f943-7e4d-4241-ab9c-450a84c80450
        Name: CategoryName
      properties:
        Description:
          example: Relative energy use per ton of process feed.
          title: Description
          type: string
        Id:
          example: 3051f943-7e4d-4241-ab9c-450a84c80450
          format: uuid
          title: Id
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        Links:
          $ref: '#/components/schemas/ElementCategoryLinks'
        Name:
          example: CategoryName
          title: Name
          type: string
          x-required-post: true
        Path:
          example: "\\\\MyAssetServer\\Database\\CategoriesElement[CategoryName]"
          format: path
          title: Path
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        WebException:
          $ref: '#/components/schemas/WebException'
        WebId:
          example: I1ECDqD5loBNH0erqeqJodtALAQ_lRME1-QUKrnEUKhMgEUA
          format: webid
          title: WebId
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
      title: ElementCategory
      type: object
    ElementCategoryLinks:
      example:
        SecurityEntries: SecurityEntries
        Database: Database
        Self: Self
        Security: Security
      properties:
        Database:
          title: Database
          type: string
          x-link-path: "assetdatabases/{webId}"
          x-link-optional: false
        Security:
          title: Security
          type: string
          x-link-path: "elementcategories/{webId}/security"
          x-link-optional: false
        SecurityEntries:
          title: SecurityEntries
          type: string
          x-link-path: "elementcategories/{webId}/securityentries"
          x-link-optional: false
        Self:
          title: Self
          type: string
          x-link-path: "elementcategories/{webId}"
          x-link-optional: false
      title: ElementCategoryLinks
      type: object
    ElementLinks:
      example:
        PlotData: PlotData
        Categories: Categories
        Parent: Parent
        Attributes: Attributes
        Analyses: Analyses
        Self: Self
        Elements: Elements
        Security: Security
        Template: Template
        SecurityEntries: SecurityEntries
        NotificationRules: NotificationRules
        Database: Database
        SummaryData: SummaryData
        Value: Value
        EventFrames: EventFrames
        EndValue: EndValue
        DefaultAttribute: DefaultAttribute
        InterpolatedData: InterpolatedData
        RecordedData: RecordedData
      properties:
        Analyses:
          title: Analyses
          type: string
          x-link-path: "elements/{webId}/analyses"
          x-link-optional: false
        Attributes:
          title: Attributes
          type: string
          x-link-path: "elements/{webId}/attributes"
          x-link-optional: false
        Categories:
          title: Categories
          type: string
          x-link-path: "elements/{webId}/categories"
          x-link-optional: false
        Database:
          title: Database
          type: string
          x-link-path: "assetdatabases/{webId}"
          x-link-optional: false
        DefaultAttribute:
          title: DefaultAttribute
          type: string
          x-link-path: "attributes/{webId}"
          x-link-optional: true
        Elements:
          title: Elements
          type: string
          x-link-path: "elements/{webId}/elements"
          x-link-optional: false
        EndValue:
          title: EndValue
          type: string
          x-link-path: "streamsets/{webId}/end"
          x-link-optional: false
        EventFrames:
          title: EventFrames
          type: string
          x-link-path: "elements/{webId}/eventframes"
          x-link-optional: false
        InterpolatedData:
          title: InterpolatedData
          type: string
          x-link-path: "streamsets/{webId}/interpolated"
          x-link-optional: false
        NotificationRules:
          title: NotificationRules
          type: string
          x-link-path: "elements/{webId}/notificationrules"
          x-link-optional: false
        Parent:
          title: Parent
          type: string
          x-link-path: "elements/{webId}"
          x-link-optional: true
        PlotData:
          title: PlotData
          type: string
          x-link-path: "streamsets/{webId}/plot"
          x-link-optional: false
        RecordedData:
          title: RecordedData
          type: string
          x-link-path: "streamsets/{webId}/recorded"
          x-link-optional: false
        Security:
          title: Security
          type: string
          x-link-path: "elements/{webId}/security"
          x-link-optional: false
        SecurityEntries:
          title: SecurityEntries
          type: string
          x-link-path: "elements/{webId}/securityentries"
          x-link-optional: false
        Self:
          title: Self
          type: string
          x-link-path: "elements/{webId}"
          x-link-optional: false
        SummaryData:
          title: SummaryData
          type: string
          x-link-path: "streamsets/{webId}/summary"
          x-link-optional: false
        Template:
          title: Template
          type: string
          x-link-path: "elementtemplates/{webId}"
          x-link-optional: true
        Value:
          title: Value
          type: string
          x-link-path: "streamsets/{webId}/value"
          x-link-optional: false
      title: ElementLinks
      type: object
    ElementTemplate:
      example:
        Path: "\\\\MyAssetServer\\MyDatabase\\ElementTemplates[Boiler]"
        CanBeAcknowledged: false
        Description: Manufacturing Machine MachineName
        WebException:
          Errors:
          - An error has occurred.
          StatusCode: 500
        NamingPattern: '%TEMPLATE%'
        Severity: None
        BaseTemplate: Equipment
        ExtendedProperties:
          key:
            WebException:
              Errors:
              - An error has occurred.
              StatusCode: 500
            Value: 12.3
            Exception:
              Errors:
              - An error has occurred.
        Name: MachineName
        CategoryNames:
        - Equipment Assets
        WebId: I1ETDqD5loBNH0erqeqJodtALAkpSYp6uykE2Ku0yChDU91g
        Links:
          AttributeTemplates: AttributeTemplates
          SecurityEntries: SecurityEntries
          DerivedTemplates: DerivedTemplates
          Categories: Categories
          BaseTemplates: BaseTemplates
          AnalysisTemplates: AnalysisTemplates
          Database: Database
          DefaultAttribute: DefaultAttribute
          Self: Self
          BaseTemplate: BaseTemplate
          Security: Security
          NotificationRuleTemplates: NotificationRuleTemplates
        Id: a7989492-b2ab-4d90-8abb-4c8284353dd6
        AllowElementToExtend: false
        InstanceType: Element
      properties:
        AllowElementToExtend:
          example: false
          title: AllowElementToExtend
          type: boolean
        BaseTemplate:
          example: Equipment
          title: BaseTemplate
          type: string
        CanBeAcknowledged:
          example: false
          title: CanBeAcknowledged
          type: boolean
        CategoryNames:
          example:
          - Equipment Assets
          items:
            type: string
          title: CategoryNames
          type: array
        Description:
          example: Manufacturing Machine MachineName
          title: Description
          type: string
        ExtendedProperties:
          additionalProperties:
            $ref: '#/components/schemas/Value'
          title: ExtendedProperties
          type: object
        Id:
          example: a7989492-b2ab-4d90-8abb-4c8284353dd6
          format: uuid
          title: Id
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        InstanceType:
          example: Element
          title: InstanceType
          type: string
        Links:
          $ref: '#/components/schemas/ElementTemplateLinks'
        Name:
          example: MachineName
          title: Name
          type: string
          x-required-post: true
        NamingPattern:
          example: '%TEMPLATE%'
          title: NamingPattern
          type: string
        Path:
          example: "\\\\MyAssetServer\\MyDatabase\\ElementTemplates[Boiler]"
          format: path
          title: Path
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        Severity:
          example: None
          title: Severity
          type: string
        WebException:
          $ref: '#/components/schemas/WebException'
        WebId:
          example: I1ETDqD5loBNH0erqeqJodtALAkpSYp6uykE2Ku0yChDU91g
          format: webid
          title: WebId
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
      title: ElementTemplate
      type: object
    ElementTemplateLinks:
      example:
        AttributeTemplates: AttributeTemplates
        SecurityEntries: SecurityEntries
        DerivedTemplates: DerivedTemplates
        Categories: Categories
        BaseTemplates: BaseTemplates
        AnalysisTemplates: AnalysisTemplates
        Database: Database
        DefaultAttribute: DefaultAttribute
        Self: Self
        BaseTemplate: BaseTemplate
        Security: Security
        NotificationRuleTemplates: NotificationRuleTemplates
      properties:
        AnalysisTemplates:
          title: AnalysisTemplates
          type: string
          x-link-path: "elementtemplates/{webId}/analysistemplates"
          x-link-optional: false
        AttributeTemplates:
          title: AttributeTemplates
          type: string
          x-link-path: "elementtemplates/{webId}/attributetemplates"
          x-link-optional: false
        BaseTemplate:
          title: BaseTemplate
          type: string
          x-link-path: "elementtemplates/{webId}"
          x-link-optional: true
        BaseTemplates:
          title: BaseTemplates
          type: string
          x-link-path: "elementtemplates/{webId}/baseelementtemplates"
          x-link-optional: false
        Categories:
          title: Categories
          type: string
          x-link-path: "elementtemplates/{webId}/categories"
          x-link-optional: false
        Database:
          title: Database
          type: string
          x-link-path: "assetdatabases/{webId}"
          x-link-optional: false
        DefaultAttribute:
          title: DefaultAttribute
          type: string
          x-link-path: "attributetemplates/{webId}"
          x-link-optional: true
        DerivedTemplates:
          title: DerivedTemplates
          type: string
          x-link-path: "elementtemplates/{webId}/derivedelementtemplates"
          x-link-optional: false
        NotificationRuleTemplates:
          title: NotificationRuleTemplates
          type: string
          x-link-path: "elementtemplates/{webId}/notificationruletemplates"
          x-link-optional: false
        Security:
          title: Security
          type: string
          x-link-path: "elementtemplates/{webId}/security"
          x-link-optional: false
        SecurityEntries:
          title: SecurityEntries
          type: string
          x-link-path: "elementtemplates/{webId}/securityentries"
          x-link-optional: false
        Self:
          title: Self
          type: string
          x-link-path: "elementtemplates/{webId}"
          x-link-optional: false
      title: ElementTemplateLinks
      type: object
    EnumerationSet:
      example:
        Path: "\\\\MyAssetServer\\MyDatabase\\EnumerationSets[Model Number]"
        Description: Model numbers by brand of vehicle
        WebException:
          Errors:
          - An error has occurred.
          StatusCode: 500
        WebId: I1MSRDqD5loBNH0erqeqJodtALAT_x3jpGsKUCB1vtmvQHUMQ
        Links:
          SecurityEntries: SecurityEntries
          DataServer: DataServer
          Database: Database
          Values: Values
          Self: Self
          Security: Security
        Id: 8e77fc4f-ac91-4029-81d6-fb66bd01d431
        SerializeDescription: true
        Name: Model Number
      properties:
        Description:
          example: Model numbers by brand of vehicle
          title: Description
          type: string
        Id:
          example: 8e77fc4f-ac91-4029-81d6-fb66bd01d431
          format: uuid
          title: Id
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        Links:
          $ref: '#/components/schemas/EnumerationSetLinks'
        Name:
          example: Model Number
          title: Name
          type: string
          x-required-post: true
        Path:
          example: "\\\\MyAssetServer\\MyDatabase\\EnumerationSets[Model Number]"
          format: path
          title: Path
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        SerializeDescription:
          title: SerializeDescription
          type: boolean
        WebException:
          $ref: '#/components/schemas/WebException'
        WebId:
          example: I1MSRDqD5loBNH0erqeqJodtALAT_x3jpGsKUCB1vtmvQHUMQ
          format: webid
          title: WebId
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
      title: EnumerationSet
      type: object
    EnumerationSetLinks:
      example:
        SecurityEntries: SecurityEntries
        DataServer: DataServer
        Database: Database
        Values: Values
        Self: Self
        Security: Security
      properties:
        DataServer:
          title: DataServer
          type: string
          x-link-path: "dataservers/{webId}"
          x-link-optional: true
        Database:
          title: Database
          type: string
          x-link-path: "assetdatabases/{webId}"
          x-link-optional: true
        Security:
          title: Security
          type: string
          x-link-path: "enumerationsets/{webId}/security"
          x-link-optional: false
        SecurityEntries:
          title: SecurityEntries
          type: string
          x-link-path: "enumerationsets/{webId}/securityentries"
          x-link-optional: false
        Self:
          title: Self
          type: string
          x-link-path: "enumerationsets/{webId}"
          x-link-optional: false
        Values:
          title: Values
          type: string
          x-link-path: "enumerationsets/{webId}/enumerationvalues"
          x-link-optional: false
      title: EnumerationSetLinks
      type: object
    EnumerationValue:
      example:
        Path: "\\\\MyAssetServer\\MyDatabase\\EnumerationSets[Model Number]\\CarBrand|Model3"
        SerializePath: true
        Description: Model Number of CarBrand
        WebException:
          Errors:
          - An error has occurred.
          StatusCode: 500
        Parent: CarBrand
        SerializeId: true
        Name: CarBrand|Model3
        SerializeWebId: true
        WebId: I1MVRDqD5loBNH0erqeqJodtALAT_x3jpGsKUCB1vtmvQHUMQlIYqmOlvs0ygEQnSeGSe7w
        Value: 2005
        Links:
          EnumerationSet: EnumerationSet
          Parent: Parent
          Self: Self
        SerializeLinks: true
        Id: 982a8694-6fe9-4cb3-a011-09d278649eef
        SerializeDescription: true
      properties:
        Description:
          example: Model Number of CarBrand
          title: Description
          type: string
        Id:
          example: 982a8694-6fe9-4cb3-a011-09d278649eef
          format: uuid
          title: Id
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        Links:
          $ref: '#/components/schemas/EnumerationValueLinks'
        Name:
          example: CarBrand|Model3
          title: Name
          type: string
          x-required-post: true
        Parent:
          example: CarBrand
          title: Parent
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        Path:
          example: "\\\\MyAssetServer\\MyDatabase\\EnumerationSets[Model Number]\\\
            CarBrand|Model3"
          format: path
          title: Path
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        SerializeDescription:
          title: SerializeDescription
          type: boolean
        SerializeId:
          title: SerializeId
          type: boolean
        SerializeLinks:
          title: SerializeLinks
          type: boolean
        SerializePath:
          title: SerializePath
          type: boolean
        SerializeWebId:
          title: SerializeWebId
          type: boolean
        Value:
          example: 2005
          format: int32
          title: Value
          type: integer
          x-required-post: true
        WebException:
          $ref: '#/components/schemas/WebException'
        WebId:
          example: I1MVRDqD5loBNH0erqeqJodtALAT_x3jpGsKUCB1vtmvQHUMQlIYqmOlvs0ygEQnSeGSe7w
          format: webid
          title: WebId
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
      title: EnumerationValue
      type: object
    EnumerationValueLinks:
      example:
        EnumerationSet: EnumerationSet
        Parent: Parent
        Self: Self
      properties:
        EnumerationSet:
          title: EnumerationSet
          type: string
          x-link-path: "enumerationsets/{webId}"
          x-link-optional: false
        Parent:
          title: Parent
          type: string
          x-link-path: "enumerationvalues/{webId}"
          x-link-optional: true
        Self:
          title: Self
          type: string
          x-link-path: "enumerationvalues/{webId}"
          x-link-optional: false
      title: EnumerationValueLinks
      type: object
    Errors:
      example:
        Errors:
        - An error has occurred.
      properties:
        Errors:
          example:
          - An error has occurred.
          items:
            type: string
          title: Errors
          type: array
      title: Errors
      type: object
    EventFrame:
      example:
        IsAcknowledged: true
        Path: "\\\\MyAssetServer\\MyDatabase\\EventFrames[EF20140725-001]"
        CanBeAcknowledged: true
        AcknowledgedBy: MyDomain\UserA
        Description: Event Frame of Past Week
        WebException:
          Errors:
          - An error has occurred.
          StatusCode: 500
        EndTime: 2014-07-25T14:45:29Z
        StartTime: 2014-07-18T14:45:29Z
        IsLocked: false
        Severity: None
        Security:
          CanWrite: true
          Rights:
          - Read
          - WriteData
          CanReadData: true
          WebException:
            Errors:
            - An error has occurred.
            StatusCode: 500
          HasAdmin: true
          CanWriteData: true
          CanDelete: true
          CanRead: true
          CanAnnotate: true
          CanExecute: true
          CanSubscribe: true
          CanSubscribeOthers: true
        ExtendedProperties:
          key:
            WebException:
              Errors:
              - An error has occurred.
              StatusCode: 500
            Value: 12.3
            Exception:
              Errors:
              - An error has occurred.
        Name: EF20140725-001
        IsAnnotated: false
        AcknowledgedDate: 2014-07-30T11:04:23Z
        HasChildren: false
        CategoryNames:
        - Processing Plant
        AreValuesCaptured: false
        WebId: I1FmDqD5loBNH0erqeqJodtALADqD5loBNH0cAAAAAAASwAg
        Links:
          PlotData: PlotData
          PrimaryReferencedElement: PrimaryReferencedElement
          Categories: Categories
          Parent: Parent
          Attributes: Attributes
          ReferencedElements: ReferencedElements
          Self: Self
          Security: Security
          Template: Template
          SecurityEntries: SecurityEntries
          Annotations: Annotations
          Database: Database
          SummaryData: SummaryData
          Value: Value
          EventFrames: EventFrames
          EndValue: EndValue
          DefaultAttribute: DefaultAttribute
          InterpolatedData: InterpolatedData
          RecordedData: RecordedData
        TemplateName: Template
        Id: 96f9a00e-4d80-471f-0000-00000004b002
        RefElementWebIds:
        - I1EmDqD5loBNH0erqeqJodtALAaqQoQHk26BGgMQAVXYR0Ag
      properties:
        AcknowledgedBy:
          example: MyDomain\UserA
          title: AcknowledgedBy
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        AcknowledgedDate:
          example: 2014-07-30T11:04:23Z
          format: date-time
          title: AcknowledgedDate
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        AreValuesCaptured:
          example: false
          title: AreValuesCaptured
          type: boolean
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        CanBeAcknowledged:
          example: true
          title: CanBeAcknowledged
          type: boolean
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        CategoryNames:
          example:
          - Processing Plant
          items:
            type: string
          title: CategoryNames
          type: array
        Description:
          example: Event Frame of Past Week
          title: Description
          type: string
        EndTime:
          example: 2014-07-25T14:45:29Z
          format: date-time
          title: EndTime
          type: string
        ExtendedProperties:
          additionalProperties:
            $ref: '#/components/schemas/Value'
          title: ExtendedProperties
          type: object
        HasChildren:
          example: false
          title: HasChildren
          type: boolean
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        Id:
          example: 96f9a00e-4d80-471f-0000-00000004b002
          format: uuid
          title: Id
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        IsAcknowledged:
          example: true
          title: IsAcknowledged
          type: boolean
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        IsAnnotated:
          example: false
          title: IsAnnotated
          type: boolean
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        IsLocked:
          example: false
          title: IsLocked
          type: boolean
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        Links:
          $ref: '#/components/schemas/EventFrameLinks'
        Name:
          example: EF20140725-001
          title: Name
          type: string
          x-required-post: true
        Path:
          example: "\\\\MyAssetServer\\MyDatabase\\EventFrames[EF20140725-001]"
          format: path
          title: Path
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        RefElementWebIds:
          example:
          - I1EmDqD5loBNH0erqeqJodtALAaqQoQHk26BGgMQAVXYR0Ag
          items:
            type: string
          title: RefElementWebIds
          type: array
        Security:
          $ref: '#/components/schemas/Security'
        Severity:
          example: None
          title: Severity
          type: string
        StartTime:
          example: 2014-07-18T14:45:29Z
          format: date-time
          title: StartTime
          type: string
        TemplateName:
          example: Template
          title: TemplateName
          type: string
        WebException:
          $ref: '#/components/schemas/WebException'
        WebId:
          example: I1FmDqD5loBNH0erqeqJodtALADqD5loBNH0cAAAAAAASwAg
          format: webid
          title: WebId
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
      title: EventFrame
      type: object
    EventFrameLinks:
      example:
        PlotData: PlotData
        PrimaryReferencedElement: PrimaryReferencedElement
        Categories: Categories
        Parent: Parent
        Attributes: Attributes
        ReferencedElements: ReferencedElements
        Self: Self
        Security: Security
        Template: Template
        SecurityEntries: SecurityEntries
        Annotations: Annotations
        Database: Database
        SummaryData: SummaryData
        Value: Value
        EventFrames: EventFrames
        EndValue: EndValue
        DefaultAttribute: DefaultAttribute
        InterpolatedData: InterpolatedData
        RecordedData: RecordedData
      properties:
        Annotations:
          title: Annotations
          type: string
          x-link-path: "eventframes/{webId}/annotations"
          x-link-optional: true
        Attributes:
          title: Attributes
          type: string
          x-link-path: "eventframes/{webId}/attributes"
          x-link-optional: false
        Categories:
          title: Categories
          type: string
          x-link-path: "eventframes/{webId}/categories"
          x-link-optional: false
        Database:
          title: Database
          type: string
          x-link-path: "assetdatabases/{webId}"
          x-link-optional: false
        DefaultAttribute:
          title: DefaultAttribute
          type: string
          x-link-path: "attributes/{webId}"
          x-link-optional: true
        EndValue:
          title: EndValue
          type: string
          x-link-path: "streamsets/{webId}/end"
          x-link-optional: false
        EventFrames:
          title: EventFrames
          type: string
          x-link-path: "eventframes/{webId}/eventframes"
          x-link-optional: false
        InterpolatedData:
          title: InterpolatedData
          type: string
          x-link-path: "streamsets/{webId}/interpolated"
          x-link-optional: false
        Parent:
          title: Parent
          type: string
          x-link-path: "eventframes/{webId}"
          x-link-optional: true
        PlotData:
          title: PlotData
          type: string
          x-link-path: "streamsets/{webId}/plot"
          x-link-optional: false
        PrimaryReferencedElement:
          title: PrimaryReferencedElement
          type: string
          x-link-path: "elements/{webId}"
          x-link-optional: true
        RecordedData:
          title: RecordedData
          type: string
          x-link-path: "streamsets/{webId}/recorded"
          x-link-optional: false
        ReferencedElements:
          title: ReferencedElements
          type: string
          x-link-path: "eventframes/{webId}/referencedelements"
          x-link-optional: false
        Security:
          title: Security
          type: string
          x-link-path: "eventframes/{webId}/security"
          x-link-optional: false
        SecurityEntries:
          title: SecurityEntries
          type: string
          x-link-path: "eventframes/{webId}/securityentries"
          x-link-optional: false
        Self:
          title: Self
          type: string
          x-link-path: "eventframes/{webId}"
          x-link-optional: false
        SummaryData:
          title: SummaryData
          type: string
          x-link-path: "streamsets/{webId}/summary"
          x-link-optional: false
        Template:
          title: Template
          type: string
          x-link-path: "elementtemplates/{webId}"
          x-link-optional: true
        Value:
          title: Value
          type: string
          x-link-path: "streamsets/{webId}/value"
          x-link-optional: false
      title: EventFrameLinks
      type: object
    ExtendedTimedValue:
      example:
        Annotated: false
        Errors:
        - Message:
          - An error has occurred.
          FieldName: Value
        - Message:
          - An error has occurred.
          FieldName: Value
        UnitsAbbreviation: m
        Annotations:
        - CreationDate: 2016-06-21T14:45:50.2988321Z
          Errors:
          - Message:
            - An error has occurred.
            FieldName: Value
          - Message:
            - An error has occurred.
            FieldName: Value
          Description: Signifies a spike in temperature.
          WebException:
            Errors:
            - An error has occurred.
            StatusCode: 500
          ModifyDate: 2016-06-21T14:45:50.2988321Z
          Value: The temperature spiked because of a malfunction with a unit in our
            west plant.
          Creator: MyDomain\UserA
          Id: 512b6616-ce39-4f70-9048-8c6a025fb592
          Modifier: MyDomain\UserA
          Name: Temperature Annotation
        - CreationDate: 2016-06-21T14:45:50.2988321Z
          Errors:
          - Message:
            - An error has occurred.
            FieldName: Value
          - Message:
            - An error has occurred.
            FieldName: Value
          Description: Signifies a spike in temperature.
          WebException:
            Errors:
            - An error has occurred.
            StatusCode: 500
          ModifyDate: 2016-06-21T14:45:50.2988321Z
          Value: The temperature spiked because of a malfunction with a unit in our
            west plant.
          Creator: MyDomain\UserA
          Id: 512b6616-ce39-4f70-9048-8c6a025fb592
          Modifier: MyDomain\UserA
          Name: Temperature Annotation
        Substituted: false
        WebException:
          Errors:
          - An error has occurred.
          StatusCode: 500
        Value: 12.3
        Good: true
        Timestamp: 2014-07-22T14:00:00Z
        Questionable: false
      properties:
        Annotated:
          example: false
          title: Annotated
          type: boolean
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        Annotations:
          items:
            $ref: '#/components/schemas/StreamAnnotation'
          title: Annotations
          type: array
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        Errors:
          items:
            $ref: '#/components/schemas/PropertyError'
          title: Errors
          type: array
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        Good:
          example: true
          title: Good
          type: boolean
        Questionable:
          example: false
          title: Questionable
          type: boolean
        Substituted:
          example: false
          title: Substituted
          type: boolean
          x-disallow-post: true
        Timestamp:
          example: 2014-07-22T14:00:00Z
          format: date-time
          title: Timestamp
          type: string
        UnitsAbbreviation:
          example: m
          title: UnitsAbbreviation
          type: string
        Value:
          example: 12.3
          properties: {}
          title: Value
          type: object
        WebException:
          $ref: '#/components/schemas/WebException'
      title: ExtendedTimedValue
      type: object
    ExtendedTimedValues:
      example:
        UnitsAbbreviation: UnitsAbbreviation
        WebException:
          Errors:
          - An error has occurred.
          StatusCode: 500
        Items:
        - Annotated: false
          Errors:
          - Message:
            - An error has occurred.
            FieldName: Value
          - Message:
            - An error has occurred.
            FieldName: Value
          UnitsAbbreviation: m
          Annotations:
          - CreationDate: 2016-06-21T14:45:50.2988321Z
            Errors:
            - Message:
              - An error has occurred.
              FieldName: Value
            - Message:
              - An error has occurred.
              FieldName: Value
            Description: Signifies a spike in temperature.
            WebException:
              Errors:
              - An error has occurred.
              StatusCode: 500
            ModifyDate: 2016-06-21T14:45:50.2988321Z
            Value: The temperature spiked because of a malfunction with a unit in
              our west plant.
            Creator: MyDomain\UserA
            Id: 512b6616-ce39-4f70-9048-8c6a025fb592
            Modifier: MyDomain\UserA
            Name: Temperature Annotation
          - CreationDate: 2016-06-21T14:45:50.2988321Z
            Errors:
            - Message:
              - An error has occurred.
              FieldName: Value
            - Message:
              - An error has occurred.
              FieldName: Value
            Description: Signifies a spike in temperature.
            WebException:
              Errors:
              - An error has occurred.
              StatusCode: 500
            ModifyDate: 2016-06-21T14:45:50.2988321Z
            Value: The temperature spiked because of a malfunction with a unit in
              our west plant.
            Creator: MyDomain\UserA
            Id: 512b6616-ce39-4f70-9048-8c6a025fb592
            Modifier: MyDomain\UserA
            Name: Temperature Annotation
          Substituted: false
          WebException:
            Errors:
            - An error has occurred.
            StatusCode: 500
          Value: 12.3
          Good: true
          Timestamp: 2014-07-22T14:00:00Z
          Questionable: false
        - Annotated: false
          Errors:
          - Message:
            - An error has occurred.
            FieldName: Value
          - Message:
            - An error has occurred.
            FieldName: Value
          UnitsAbbreviation: m
          Annotations:
          - CreationDate: 2016-06-21T14:45:50.2988321Z
            Errors:
            - Message:
              - An error has occurred.
              FieldName: Value
            - Message:
              - An error has occurred.
              FieldName: Value
            Description: Signifies a spike in temperature.
            WebException:
              Errors:
              - An error has occurred.
              StatusCode: 500
            ModifyDate: 2016-06-21T14:45:50.2988321Z
            Value: The temperature spiked because of a malfunction with a unit in
              our west plant.
            Creator: MyDomain\UserA
            Id: 512b6616-ce39-4f70-9048-8c6a025fb592
            Modifier: MyDomain\UserA
            Name: Temperature Annotation
          - CreationDate: 2016-06-21T14:45:50.2988321Z
            Errors:
            - Message:
              - An error has occurred.
              FieldName: Value
            - Message:
              - An error has occurred.
              FieldName: Value
            Description: Signifies a spike in temperature.
            WebException:
              Errors:
              - An error has occurred.
              StatusCode: 500
            ModifyDate: 2016-06-21T14:45:50.2988321Z
            Value: The temperature spiked because of a malfunction with a unit in
              our west plant.
            Creator: MyDomain\UserA
            Id: 512b6616-ce39-4f70-9048-8c6a025fb592
            Modifier: MyDomain\UserA
            Name: Temperature Annotation
          Substituted: false
          WebException:
            Errors:
            - An error has occurred.
            StatusCode: 500
          Value: 12.3
          Good: true
          Timestamp: 2014-07-22T14:00:00Z
          Questionable: false
      properties:
        Items:
          items:
            $ref: '#/components/schemas/ExtendedTimedValue'
          title: Items
          type: array
          x-required-post: true
        UnitsAbbreviation:
          title: UnitsAbbreviation
          type: string
          x-disallow-post: true
        WebException:
          $ref: '#/components/schemas/WebException'
      title: ExtendedTimedValues
      type: object
    Item[Attribute]:
      example:
        Identifier: \\server\path
        Object:
          Description: 2008 Water Use
          WebException:
            Errors:
            - An error has occurred.
            StatusCode: 500
          DefaultUnitsNameAbbreviation: L
          Step: false
          Span: 100.0
          Name: Water
          IsExcluded: false
          CategoryNames:
          - Energy Savings Targets
          IsConfigurationItem: false
          WebId: I1AbEDqD5loBNH0erqeqJodtALAYIKyyz2F5BGAxQAVXYRDBAGyPedZG1sUmxOOclp3Flwg
          Paths:
          - \\MyAssetServer\MyDatabase\MyElement|MyAttribute
          - \\MyAssetServer\MyDatabase\ReferencingElement\MyElement|MyAttribute
          IsManualDataEntry: false
          Path: \\MyAssetServer\MyDatabase\CityName\EngineeringProcess\Equipment\MachineName|Water(2008)
          ConfigString: "SELECT [Water Use] FROM [Energy Use 2008] WHERE [Asset ID]\
            \ = '%Element%'"
          IsHidden: false
          Zero: 0.0
          DefaultUnitsName: liter
          DisplayDigits: -5
          HasChildren: false
          TraitName: LimitLoLo
          Type: Int32
          Links:
            PlotData: PlotData
            EnumerationSet: EnumerationSet
            Categories: Categories
            Parent: Parent
            Element: Element
            Attributes: Attributes
            Point: Point
            Self: Self
            EventFrame: EventFrame
            Template: Template
            SummaryData: SummaryData
            Value: Value
            EndValue: EndValue
            Trait: Trait
            InterpolatedData: InterpolatedData
            EnumerationValues: EnumerationValues
            RecordedData: RecordedData
          Id: 75de231b-b591-49b1-b138-e725a77165c2
          DataReferencePlugIn: Table Lookup
          TypeQualifier: ""
          DataReference:
            Type: PI Point
            WebException:
              Errors:
              - An error has occurred.
              StatusCode: 500
            PIPoint:
              Path: \\MyPIServer\PointName
              Zero: 0.0
              DisplayDigits: -5
              Step: false
              Span: 100.0
              Name: PointName
              PointClass: classic
              WebId: I1DPa70Wf0zBA06CLkV9ovNQgQCAAAAA
              Descriptor: 12 Hour Sine Wave
              Future: false
              PointType: Float32
              Id: 82
              DigitalSetName: ""
              EngineeringUnits: ""
        IdentifierType: Path
        Exception:
          Errors:
          - An error has occurred.
      properties:
        Exception:
          $ref: '#/components/schemas/Errors'
        Identifier:
          example: \\server\path
          title: Identifier
          type: string
        IdentifierType:
          example: Path
          title: IdentifierType
          type: string
        Object:
          $ref: '#/components/schemas/Attribute'
      title: "Item[Attribute]"
      type: object
    Item[Element]:
      example:
        Identifier: \\server\path
        Object:
          Path: \\MyAssetServer\MyDatabase\CityName\EngineeringProcess\Equipment\MachineName
          Description: Manufacturing Equipment MachineName
          WebException:
            Errors:
            - An error has occurred.
            StatusCode: 500
          ExtendedProperties:
            key:
              WebException:
                Errors:
                - An error has occurred.
                StatusCode: 500
              Value: 12.3
              Exception:
                Errors:
                - An error has occurred.
          Name: MachineName
          Errors:
          - Message:
            - An error has occurred.
            FieldName: Value
          - Message:
            - An error has occurred.
            FieldName: Value
          HasChildren: false
          CategoryNames:
          - Equipment Assets
          WebId: I1EmDqD5loBNH0erqeqJodtALAYIKyyz2F5BGAxQAVXYRDBA
          Links:
            PlotData: PlotData
            Categories: Categories
            Parent: Parent
            Attributes: Attributes
            Analyses: Analyses
            Self: Self
            Elements: Elements
            Security: Security
            Template: Template
            SecurityEntries: SecurityEntries
            NotificationRules: NotificationRules
            Database: Database
            SummaryData: SummaryData
            Value: Value
            EventFrames: EventFrames
            EndValue: EndValue
            DefaultAttribute: DefaultAttribute
            InterpolatedData: InterpolatedData
            RecordedData: RecordedData
          TemplateName: MachineName
          Id: cbb28260-853d-11e4-80c5-00155d844304
          Paths:
          - Paths
          - Paths
        IdentifierType: Path
        Exception:
          Errors:
          - An error has occurred.
      properties:
        Exception:
          $ref: '#/components/schemas/Errors'
        Identifier:
          example: \\server\path
          title: Identifier
          type: string
        IdentifierType:
          example: Path
          title: IdentifierType
          type: string
        Object:
          $ref: '#/components/schemas/Element'
      title: "Item[Element]"
      type: object
    Item[EventFrame]:
      example:
        Identifier: \\server\path
        Object:
          IsAcknowledged: true
          Path: "\\\\MyAssetServer\\MyDatabase\\EventFrames[EF20140725-001]"
          CanBeAcknowledged: true
          AcknowledgedBy: MyDomain\UserA
          Description: Event Frame of Past Week
          WebException:
            Errors:
            - An error has occurred.
            StatusCode: 500
          EndTime: 2014-07-25T14:45:29Z
          StartTime: 2014-07-18T14:45:29Z
          IsLocked: false
          Severity: None
          Security:
            CanWrite: true
            Rights:
            - Read
            - WriteData
            CanReadData: true
            WebException:
              Errors:
              - An error has occurred.
              StatusCode: 500
            HasAdmin: true
            CanWriteData: true
            CanDelete: true
            CanRead: true
            CanAnnotate: true
            CanExecute: true
            CanSubscribe: true
            CanSubscribeOthers: true
          ExtendedProperties:
            key:
              WebException:
                Errors:
                - An error has occurred.
                StatusCode: 500
              Value: 12.3
              Exception:
                Errors:
                - An error has occurred.
          Name: EF20140725-001
          IsAnnotated: false
          AcknowledgedDate: 2014-07-30T11:04:23Z
          HasChildren: false
          CategoryNames:
          - Processing Plant
          AreValuesCaptured: false
          WebId: I1FmDqD5loBNH0erqeqJodtALADqD5loBNH0cAAAAAAASwAg
          Links:
            PlotData: PlotData
            PrimaryReferencedElement: PrimaryReferencedElement
            Categories: Categories
            Parent: Parent
            Attributes: Attributes
            ReferencedElements: ReferencedElements
            Self: Self
            Security: Security
            Template: Template
            SecurityEntries: SecurityEntries
            Annotations: Annotations
            Database: Database
            SummaryData: SummaryData
            Value: Value
            EventFrames: EventFrames
            EndValue: EndValue
            DefaultAttribute: DefaultAttribute
            InterpolatedData: InterpolatedData
            RecordedData: RecordedData
          TemplateName: Template
          Id: 96f9a00e-4d80-471f-0000-00000004b002
          RefElementWebIds:
          - I1EmDqD5loBNH0erqeqJodtALAaqQoQHk26BGgMQAVXYR0Ag
        IdentifierType: Path
        Exception:
          Errors:
          - An error has occurred.
      properties:
        Exception:
          $ref: '#/components/schemas/Errors'
        Identifier:
          example: \\server\path
          title: Identifier
          type: string
        IdentifierType:
          example: Path
          title: IdentifierType
          type: string
        Object:
          $ref: '#/components/schemas/EventFrame'
      title: "Item[EventFrame]"
      type: object
    Item[Point]:
      example:
        Identifier: \\server\path
        Object:
          Path: \\MyPIServer\PointName
          Zero: 0.0
          WebException:
            Errors:
            - An error has occurred.
            StatusCode: 500
          DisplayDigits: -5
          Step: false
          Span: 100.0
          Name: PointName
          PointClass: classic
          WebId: I1DPa70Wf0zBA06CLkV9ovNQgQCAAAAA
          Descriptor: 12 Hour Sine Wave
          Future: false
          Links:
            PlotData: PlotData
            DataServer: DataServer
            Attributes: Attributes
            SummaryData: SummaryData
            Value: Value
            EndValue: EndValue
            Self: Self
            InterpolatedData: InterpolatedData
            RecordedData: RecordedData
          PointType: Float32
          Id: 82
          DigitalSetName: ""
          EngineeringUnits: ""
        IdentifierType: Path
        Exception:
          Errors:
          - An error has occurred.
      properties:
        Exception:
          $ref: '#/components/schemas/Errors'
        Identifier:
          example: \\server\path
          title: Identifier
          type: string
        IdentifierType:
          example: Path
          title: IdentifierType
          type: string
        Object:
          $ref: '#/components/schemas/Point'
      title: "Item[Point]"
      type: object
    Items[AnalysisCategory]:
      example:
        Links:
          Last: Last
          Next: Next
          Previous: Previous
          First: First
        Items:
        - Path: "\\\\MyAssetServer\\Database\\CategoriesAnalysis[CategoryName]"
          Description: Relative energy use per ton of process feed.
          WebException:
            Errors:
            - An error has occurred.
            StatusCode: 500
          WebId: I1XCDqD5loBNH0erqeqJodtALAoko2-UoOVEibhTWQCk1MDw
          Links:
            SecurityEntries: SecurityEntries
            Database: Database
            Self: Self
            Security: Security
          Id: f9364aa2-0e4a-4854-9b85-35900a4d4c0f
          Name: CategoryName
        - Path: "\\\\MyAssetServer\\Database\\CategoriesAnalysis[CategoryName]"
          Description: Relative energy use per ton of process feed.
          WebException:
            Errors:
            - An error has occurred.
            StatusCode: 500
          WebId: I1XCDqD5loBNH0erqeqJodtALAoko2-UoOVEibhTWQCk1MDw
          Links:
            SecurityEntries: SecurityEntries
            Database: Database
            Self: Self
            Security: Security
          Id: f9364aa2-0e4a-4854-9b85-35900a4d4c0f
          Name: CategoryName
      properties:
        Items:
          items:
            $ref: '#/components/schemas/AnalysisCategory'
          title: Items
          type: array
        Links:
          $ref: '#/components/schemas/PaginationLinks'
      title: "Items[AnalysisCategory]"
      type: object
    Items[AnalysisRulePlugIn]:
      example:
        Links:
          Last: Last
          Next: Next
          Previous: Previous
          First: First
        Items:
        - AssemblyTime: 2016-05-25T14:01:07Z
          Path: "\\\\MyAssetServer\\PlugInsAnalysisRule[Imbalance]"
          Description: Calculates simple material imbalances on nodes of a model.
          WebException:
            Errors:
            - An error has occurred.
            StatusCode: 500
          LoadedAssemblyTime: 1970-01-01T00:00:00Z
          IsBrowsable: true
          Name: Imbalance
          IsNonEditableConfig: false
          LoadedVersion: ""
          Version: 2.8.5.7552
          WebId: I1XPDqD5loBNH0erqeqJodtALABWwqmmFvekaFShbb-52MAw
          AssemblyID: 1acd00c2-79d0-4818-a03c-0616c4513750
          AssemblyLoadProperties:
          - None
          CompatibilityVersion: 2
          Links:
            Self: Self
            AssetServer: AssetServer
          Id: 9a2a6c05-6f61-467a-854a-16dbfb9d8c03
          AssemblyFileName: OSIsoft.AF.Analysis.AnalysisRule.Imbalance.dll
        - AssemblyTime: 2016-05-25T14:01:07Z
          Path: "\\\\MyAssetServer\\PlugInsAnalysisRule[Imbalance]"
          Description: Calculates simple material imbalances on nodes of a model.
          WebException:
            Errors:
            - An error has occurred.
            StatusCode: 500
          LoadedAssemblyTime: 1970-01-01T00:00:00Z
          IsBrowsable: true
          Name: Imbalance
          IsNonEditableConfig: false
          LoadedVersion: ""
          Version: 2.8.5.7552
          WebId: I1XPDqD5loBNH0erqeqJodtALABWwqmmFvekaFShbb-52MAw
          AssemblyID: 1acd00c2-79d0-4818-a03c-0616c4513750
          AssemblyLoadProperties:
          - None
          CompatibilityVersion: 2
          Links:
            Self: Self
            AssetServer: AssetServer
          Id: 9a2a6c05-6f61-467a-854a-16dbfb9d8c03
          AssemblyFileName: OSIsoft.AF.Analysis.AnalysisRule.Imbalance.dll
      properties:
        Items:
          items:
            $ref: '#/components/schemas/AnalysisRulePlugIn'
          title: Items
          type: array
        Links:
          $ref: '#/components/schemas/PaginationLinks'
      title: "Items[AnalysisRulePlugIn]"
      type: object
    Items[AnalysisRule]:
      example:
        Links:
          Last: Last
          Next: Next
          Previous: Previous
          First: First
        Items:
        - Path: "\\\\MyAssetServer\\MyDatabase\\MyElement\\Analyses[MyAnalysis]\\\
            AnalysisRule"
          ConfigString: "a := TagVal('sinusoid'); b := Pow(a, 2); c := a + b;"
          Description: Runs a performance equation.
          WebException:
            Errors:
            - An error has occurred.
            StatusCode: 500
          VariableMapping: b||Attribute1;c||Attribute2
          EditorType: OSIsoft.AF.Analysis.AnalysisRule.PEAnalysisRuleEditor
          Name: PerformanceEquation
          HasChildren: false
          DisplayString: "a := TagVal('sinusoid'); b := Pow(a, 2); c := a + b;"
          SupportedBehaviors:
          - SupportsRunningCase
          - SupportStatePassing
          - OutputCorrectAfterSkipping
          WebId: I1XRXDqD5loBNH0erqeqJodtALAfyWdysKU5xGEQwAVXYTCAAfyWdysKU5xGEQwAVXYTCAA
          Links:
            AnalysisTemplate: AnalysisTemplate
            Parent: Parent
            Analysis: Analysis
            AnalysisRules: AnalysisRules
            Self: Self
            PlugIn: PlugIn
          IsInitializing: false
          Id: ca9d257f-94c2-11e7-8443-00155d84c200
          PlugInName: PerformanceEquation
          IsConfigured: false
        - Path: "\\\\MyAssetServer\\MyDatabase\\MyElement\\Analyses[MyAnalysis]\\\
            AnalysisRule"
          ConfigString: "a := TagVal('sinusoid'); b := Pow(a, 2); c := a + b;"
          Description: Runs a performance equation.
          WebException:
            Errors:
            - An error has occurred.
            StatusCode: 500
          VariableMapping: b||Attribute1;c||Attribute2
          EditorType: OSIsoft.AF.Analysis.AnalysisRule.PEAnalysisRuleEditor
          Name: PerformanceEquation
          HasChildren: false
          DisplayString: "a := TagVal('sinusoid'); b := Pow(a, 2); c := a + b;"
          SupportedBehaviors:
          - SupportsRunningCase
          - SupportStatePassing
          - OutputCorrectAfterSkipping
          WebId: I1XRXDqD5loBNH0erqeqJodtALAfyWdysKU5xGEQwAVXYTCAAfyWdysKU5xGEQwAVXYTCAA
          Links:
            AnalysisTemplate: AnalysisTemplate
            Parent: Parent
            Analysis: Analysis
            AnalysisRules: AnalysisRules
            Self: Self
            PlugIn: PlugIn
          IsInitializing: false
          Id: ca9d257f-94c2-11e7-8443-00155d84c200
          PlugInName: PerformanceEquation
          IsConfigured: false
      properties:
        Items:
          items:
            $ref: '#/components/schemas/AnalysisRule'
          title: Items
          type: array
        Links:
          $ref: '#/components/schemas/PaginationLinks'
      title: "Items[AnalysisRule]"
      type: object
    Items[AnalysisTemplate]:
      example:
        Links:
          Last: Last
          Next: Next
          Previous: Previous
          First: First
        Items:
        - Path: "\\\\MyAssetServer\\MyDatabase\\AnalysisTemplates[MyAnalysisTemplate]"
          Description: ""
          WebException:
            Errors:
            - An error has occurred.
            StatusCode: 500
          HasTarget: false
          OutputTime: ""
          HasNotificationTemplate: false
          TargetName: MyElementTemplate
          GroupId: 0
          Name: MyAnalysisTemplate
          CreateEnabled: true
          CategoryNames:
          - MyAnalysisCategory
          AnalysisRulePlugInName: PerformanceEquation
          TimeRulePlugInName: Periodic
          WebId: I1XTG_auSSsvuECG8ad_p8b25QEZgtYQY_J06YnELl5cALiA
          Links:
            SecurityEntries: SecurityEntries
            Target: Target
            TimeRulePlugIn: TimeRulePlugIn
            Categories: Categories
            Database: Database
            Self: Self
            Security: Security
            AnalysisRule: AnalysisRule
            TimeRule: TimeRule
            AnalysisRulePlugIn: AnalysisRulePlugIn
          Id: 612d9811-3f06-4e27-989c-42e5e5c00b88
        - Path: "\\\\MyAssetServer\\MyDatabase\\AnalysisTemplates[MyAnalysisTemplate]"
          Description: ""
          WebException:
            Errors:
            - An error has occurred.
            StatusCode: 500
          HasTarget: false
          OutputTime: ""
          HasNotificationTemplate: false
          TargetName: MyElementTemplate
          GroupId: 0
          Name: MyAnalysisTemplate
          CreateEnabled: true
          CategoryNames:
          - MyAnalysisCategory
          AnalysisRulePlugInName: PerformanceEquation
          TimeRulePlugInName: Periodic
          WebId: I1XTG_auSSsvuECG8ad_p8b25QEZgtYQY_J06YnELl5cALiA
          Links:
            SecurityEntries: SecurityEntries
            Target: Target
            TimeRulePlugIn: TimeRulePlugIn
            Categories: Categories
            Database: Database
            Self: Self
            Security: Security
            AnalysisRule: AnalysisRule
            TimeRule: TimeRule
            AnalysisRulePlugIn: AnalysisRulePlugIn
          Id: 612d9811-3f06-4e27-989c-42e5e5c00b88
      properties:
        Items:
          items:
            $ref: '#/components/schemas/AnalysisTemplate'
          title: Items
          type: array
        Links:
          $ref: '#/components/schemas/PaginationLinks'
      title: "Items[AnalysisTemplate]"
      type: object
    Items[Analysis]:
      example:
        Links:
          Last: Last
          Next: Next
          Previous: Previous
          First: First
        Items:
        - Path: "\\\\MyAssetServer\\MyDatabase\\MyElement\\Analyses[MyAnalysis]"
          Status: Disabled
          IsTimeRuleDefinedByTemplate: false
          Description: ""
          WebException:
            Errors:
            - An error has occurred.
            StatusCode: 500
          HasNotification: false
          Priority: High
          HasTarget: true
          OutputTime: ""
          HasTemplate: false
          PublishResults: false
          GroupId: 0
          Name: MyAnalysis
          TargetWebId: I1ETDqD5loBNH0erqeqJodtALAjFPVfUpY-02A8uioGDSgIg
          CategoryNames:
          - MyAnalysisCategory
          AutoCreated: false
          AnalysisRulePlugInName: PerformanceEquation
          TimeRulePlugInName: Periodic
          WebId: I1XsDqD5loBNH0erqeqJodtALAWDOFEb-U5xGEQwAVXYTCAA
          Links:
            SecurityEntries: SecurityEntries
            Target: Target
            TimeRulePlugIn: TimeRulePlugIn
            Categories: Categories
            Database: Database
            Self: Self
            Security: Security
            AnalysisRule: AnalysisRule
            TimeRule: TimeRule
            AnalysisRulePlugIn: AnalysisRulePlugIn
            Template: Template
          TemplateName: ""
          Id: 11853358-94bf-11e7-8443-00155d84c200
          MaximumQueueSize: 0
          IsConfigured: false
        - Path: "\\\\MyAssetServer\\MyDatabase\\MyElement\\Analyses[MyAnalysis]"
          Status: Disabled
          IsTimeRuleDefinedByTemplate: false
          Description: ""
          WebException:
            Errors:
            - An error has occurred.
            StatusCode: 500
          HasNotification: false
          Priority: High
          HasTarget: true
          OutputTime: ""
          HasTemplate: false
          PublishResults: false
          GroupId: 0
          Name: MyAnalysis
          TargetWebId: I1ETDqD5loBNH0erqeqJodtALAjFPVfUpY-02A8uioGDSgIg
          CategoryNames:
          - MyAnalysisCategory
          AutoCreated: false
          AnalysisRulePlugInName: PerformanceEquation
          TimeRulePlugInName: Periodic
          WebId: I1XsDqD5loBNH0erqeqJodtALAWDOFEb-U5xGEQwAVXYTCAA
          Links:
            SecurityEntries: SecurityEntries
            Target: Target
            TimeRulePlugIn: TimeRulePlugIn
            Categories: Categories
            Database: Database
            Self: Self
            Security: Security
            AnalysisRule: AnalysisRule
            TimeRule: TimeRule
            AnalysisRulePlugIn: AnalysisRulePlugIn
            Template: Template
          TemplateName: ""
          Id: 11853358-94bf-11e7-8443-00155d84c200
          MaximumQueueSize: 0
          IsConfigured: false
      properties:
        Items:
          items:
            $ref: '#/components/schemas/Analysis'
          title: Items
          type: array
        Links:
          $ref: '#/components/schemas/PaginationLinks'
      title: "Items[Analysis]"
      type: object
    Items[Annotation]:
      example:
        Links:
          Last: Last
          Next: Next
          Previous: Previous
          First: First
        Items:
        - CreationDate: 2016-06-21T14:45:50.2988321Z
          Errors:
          - Message:
            - An error has occurred.
            FieldName: Value
          - Message:
            - An error has occurred.
            FieldName: Value
          Description: Signifies a spike in temperature.
          WebException:
            Errors:
            - An error has occurred.
            StatusCode: 500
          ModifyDate: 2016-06-21T14:45:50.2988321Z
          Value: The temperature spiked because of a malfunction with a unit in our
            west plant.
          Links:
            MediaData: MediaData
            Owner: Owner
            MediaMetadata: MediaMetadata
            Self: Self
          Creator: MyDomain\UserA
          Id: 512b6616-ce39-4f70-9048-8c6a025fb592
          Modifier: MyDomain\UserA
          Name: Temperature Annotation
        - CreationDate: 2016-06-21T14:45:50.2988321Z
          Errors:
          - Message:
            - An error has occurred.
            FieldName: Value
          - Message:
            - An error has occurred.
            FieldName: Value
          Description: Signifies a spike in temperature.
          WebException:
            Errors:
            - An error has occurred.
            StatusCode: 500
          ModifyDate: 2016-06-21T14:45:50.2988321Z
          Value: The temperature spiked because of a malfunction with a unit in our
            west plant.
          Links:
            MediaData: MediaData
            Owner: Owner
            MediaMetadata: MediaMetadata
            Self: Self
          Creator: MyDomain\UserA
          Id: 512b6616-ce39-4f70-9048-8c6a025fb592
          Modifier: MyDomain\UserA
          Name: Temperature Annotation
      properties:
        Items:
          items:
            $ref: '#/components/schemas/Annotation'
          title: Items
          type: array
        Links:
          $ref: '#/components/schemas/PaginationLinks'
      title: "Items[Annotation]"
      type: object
    Items[AssetDatabase]:
      example:
        Links:
          Last: Last
          Next: Next
          Previous: Previous
          First: First
        Items:
        - Path: \\MyAssetServer\MyDatabase
          Description: PI BI Project Asset Model
          WebException:
            Errors:
            - An error has occurred.
            StatusCode: 500
          WebId: I1RDDqD5loBNH0erqeqJodtALAquulo6433EKdHra7fsmL0g
          Links:
            ElementTemplates: ElementTemplates
            AnalysisTemplates: AnalysisTemplates
            ElementCategories: ElementCategories
            Self: Self
            Elements: Elements
            Security: Security
            AssetServer: AssetServer
            EnumerationSets: EnumerationSets
            SecurityEntries: SecurityEntries
            AnalysisCategories: AnalysisCategories
            EventFrames: EventFrames
            Tables: Tables
            TableCategories: TableCategories
            AttributeCategories: AttributeCategories
          Id: a3a5ebaa-37ae-42dc-9d1e-b6bb7ec98bd2
          ExtendedProperties:
            key:
              WebException:
                Errors:
                - An error has occurred.
                StatusCode: 500
              Value: 12.3
              Exception:
                Errors:
                - An error has occurred.
          Name: MyDatabase
        - Path: \\MyAssetServer\MyDatabase
          Description: PI BI Project Asset Model
          WebException:
            Errors:
            - An error has occurred.
            StatusCode: 500
          WebId: I1RDDqD5loBNH0erqeqJodtALAquulo6433EKdHra7fsmL0g
          Links:
            ElementTemplates: ElementTemplates
            AnalysisTemplates: AnalysisTemplates
            ElementCategories: ElementCategories
            Self: Self
            Elements: Elements
            Security: Security
            AssetServer: AssetServer
            EnumerationSets: EnumerationSets
            SecurityEntries: SecurityEntries
            AnalysisCategories: AnalysisCategories
            EventFrames: EventFrames
            Tables: Tables
            TableCategories: TableCategories
            AttributeCategories: AttributeCategories
          Id: a3a5ebaa-37ae-42dc-9d1e-b6bb7ec98bd2
          ExtendedProperties:
            key:
              WebException:
                Errors:
                - An error has occurred.
                StatusCode: 500
              Value: 12.3
              Exception:
                Errors:
                - An error has occurred.
          Name: MyDatabase
      properties:
        Items:
          items:
            $ref: '#/components/schemas/AssetDatabase'
          title: Items
          type: array
        Links:
          $ref: '#/components/schemas/PaginationLinks'
      title: "Items[AssetDatabase]"
      type: object
    Items[AssetServer]:
      example:
        Links:
          Last: Last
          Next: Next
          Previous: Previous
          First: First
        Items:
        - Path: \\MyAssetServer
          Description: Sample Description
          ServerVersion: 2.5.0.5039
          WebException:
            Errors:
            - An error has occurred.
            StatusCode: 500
          WebId: I1RSDqD5loBNH0erqeqJodtALA
          Links:
            SecurityEntries: SecurityEntries
            Databases: Databases
            UnitClasses: UnitClasses
            NotificationPlugIns: NotificationPlugIns
            SecurityIdentities: SecurityIdentities
            AnalysisRulePlugIns: AnalysisRulePlugIns
            NotificationContactTemplates: NotificationContactTemplates
            SecurityMappings: SecurityMappings
            Self: Self
            TimeRulePlugIns: TimeRulePlugIns
            Security: Security
          Id: 96f9a00e-4d80-471f-aba9-ea89a1db402c
          ServerTime: 2014-07-22T14:00:00Z
          ExtendedProperties:
            key:
              WebException:
                Errors:
                - An error has occurred.
                StatusCode: 500
              Value: 12.3
              Exception:
                Errors:
                - An error has occurred.
          IsConnected: true
          Name: MyAssetServer
        - Path: \\MyAssetServer
          Description: Sample Description
          ServerVersion: 2.5.0.5039
          WebException:
            Errors:
            - An error has occurred.
            StatusCode: 500
          WebId: I1RSDqD5loBNH0erqeqJodtALA
          Links:
            SecurityEntries: SecurityEntries
            Databases: Databases
            UnitClasses: UnitClasses
            NotificationPlugIns: NotificationPlugIns
            SecurityIdentities: SecurityIdentities
            AnalysisRulePlugIns: AnalysisRulePlugIns
            NotificationContactTemplates: NotificationContactTemplates
            SecurityMappings: SecurityMappings
            Self: Self
            TimeRulePlugIns: TimeRulePlugIns
            Security: Security
          Id: 96f9a00e-4d80-471f-aba9-ea89a1db402c
          ServerTime: 2014-07-22T14:00:00Z
          ExtendedProperties:
            key:
              WebException:
                Errors:
                - An error has occurred.
                StatusCode: 500
              Value: 12.3
              Exception:
                Errors:
                - An error has occurred.
          IsConnected: true
          Name: MyAssetServer
      properties:
        Items:
          items:
            $ref: '#/components/schemas/AssetServer'
          title: Items
          type: array
        Links:
          $ref: '#/components/schemas/PaginationLinks'
      title: "Items[AssetServer]"
      type: object
    Items[AttributeCategory]:
      example:
        Links:
          Last: Last
          Next: Next
          Previous: Previous
          First: First
        Items:
        - Path: "\\\\MyAssetServer\\Database\\CategoriesAttribute[CategoryName]"
          Description: Relative energy use per ton of process feed.
          WebException:
            Errors:
            - An error has occurred.
            StatusCode: 500
          WebId: I1ACDqD5loBNH0erqeqJodtALAofQgBVRE3E-0dk03Hqa1ng
          Links:
            SecurityEntries: SecurityEntries
            Database: Database
            Self: Self
            Security: Security
          Id: 0520f4a1-4454-4fdc-b476-4d371ea6b59e
          Name: CategoryName
        - Path: "\\\\MyAssetServer\\Database\\CategoriesAttribute[CategoryName]"
          Description: Relative energy use per ton of process feed.
          WebException:
            Errors:
            - An error has occurred.
            StatusCode: 500
          WebId: I1ACDqD5loBNH0erqeqJodtALAofQgBVRE3E-0dk03Hqa1ng
          Links:
            SecurityEntries: SecurityEntries
            Database: Database
            Self: Self
            Security: Security
          Id: 0520f4a1-4454-4fdc-b476-4d371ea6b59e
          Name: CategoryName
      properties:
        Items:
          items:
            $ref: '#/components/schemas/AttributeCategory'
          title: Items
          type: array
        Links:
          $ref: '#/components/schemas/PaginationLinks'
      title: "Items[AttributeCategory]"
      type: object
    Items[AttributeTemplate]:
      example:
        Links:
          Last: Last
          Next: Next
          Previous: Previous
          First: First
        Items:
        - IsManualDataEntry: false
          Path: "\\\\MyAssetServer\\MyDatabase\\ElementTemplates[MachineName]|Water(2008)"
          ConfigString: "SELECT [Water Use] FROM [Energy Use 2008] WHERE [Asset ID]\
            \ = '%Element%'"
          IsHidden: false
          DefaultUnitsName: liter
          Description: 2008 Water Use
          WebException:
            Errors:
            - An error has occurred.
            StatusCode: 500
          DefaultUnitsNameAbbreviation: L
          Name: Water(2008)
          IsExcluded: false
          DefaultValue: 0
          HasChildren: false
          TraitName: LimitLoLo
          Type: Int32
          CategoryNames:
          - Energy Savings Targets
          IsConfigurationItem: false
          WebId: I1ATEG_auSSsvuECG8ad_p8b25QQkxqWDwIWU6zC4vmgpd4kgtSfQI9VdxUGA8fi1yf9DVg
          Links:
            AttributeTemplates: AttributeTemplates
            Categories: Categories
            Parent: Parent
            Self: Self
            Trait: Trait
            ElementTemplate: ElementTemplate
          Id: 23d027b5-5dd5-41c5-80f1-f8b5c9ff4356
          DataReferencePlugIn: Table Lookup
          TypeQualifier: ""
        - IsManualDataEntry: false
          Path: "\\\\MyAssetServer\\MyDatabase\\ElementTemplates[MachineName]|Water(2008)"
          ConfigString: "SELECT [Water Use] FROM [Energy Use 2008] WHERE [Asset ID]\
            \ = '%Element%'"
          IsHidden: false
          DefaultUnitsName: liter
          Description: 2008 Water Use
          WebException:
            Errors:
            - An error has occurred.
            StatusCode: 500
          DefaultUnitsNameAbbreviation: L
          Name: Water(2008)
          IsExcluded: false
          DefaultValue: 0
          HasChildren: false
          TraitName: LimitLoLo
          Type: Int32
          CategoryNames:
          - Energy Savings Targets
          IsConfigurationItem: false
          WebId: I1ATEG_auSSsvuECG8ad_p8b25QQkxqWDwIWU6zC4vmgpd4kgtSfQI9VdxUGA8fi1yf9DVg
          Links:
            AttributeTemplates: AttributeTemplates
            Categories: Categories
            Parent: Parent
            Self: Self
            Trait: Trait
            ElementTemplate: ElementTemplate
          Id: 23d027b5-5dd5-41c5-80f1-f8b5c9ff4356
          DataReferencePlugIn: Table Lookup
          TypeQualifier: ""
      properties:
        Items:
          items:
            $ref: '#/components/schemas/AttributeTemplate'
          title: Items
          type: array
        Links:
          $ref: '#/components/schemas/PaginationLinks'
      title: "Items[AttributeTemplate]"
      type: object
    Items[AttributeTrait]:
      example:
        Links:
          Last: Last
          Next: Next
          Previous: Previous
          First: First
        Items:
        - Abbreviation: LoLo
          RequireNumeric: true
          WebException:
            Errors:
            - An error has occurred.
            StatusCode: 500
          IsTypeInherited: true
          Links:
            Self: Self
          IsAllowedOnRootAttribute: false
          AllowChildAttributes: false
          AllowDuplicates: false
          IsUOMInherited: true
          Name: LimitLoLo
          RequireString: false
        - Abbreviation: LoLo
          RequireNumeric: true
          WebException:
            Errors:
            - An error has occurred.
            StatusCode: 500
          IsTypeInherited: true
          Links:
            Self: Self
          IsAllowedOnRootAttribute: false
          AllowChildAttributes: false
          AllowDuplicates: false
          IsUOMInherited: true
          Name: LimitLoLo
          RequireString: false
      properties:
        Items:
          items:
            $ref: '#/components/schemas/AttributeTrait'
          title: Items
          type: array
        Links:
          $ref: '#/components/schemas/PaginationLinks'
      title: "Items[AttributeTrait]"
      type: object
    Items[Attribute]:
      example:
        Links:
          Last: Last
          Next: Next
          Previous: Previous
          First: First
        Items:
        - Description: 2008 Water Use
          WebException:
            Errors:
            - An error has occurred.
            StatusCode: 500
          DefaultUnitsNameAbbreviation: L
          Step: false
          Span: 100.0
          Name: Water
          IsExcluded: false
          CategoryNames:
          - Energy Savings Targets
          IsConfigurationItem: false
          WebId: I1AbEDqD5loBNH0erqeqJodtALAYIKyyz2F5BGAxQAVXYRDBAGyPedZG1sUmxOOclp3Flwg
          Paths:
          - \\MyAssetServer\MyDatabase\MyElement|MyAttribute
          - \\MyAssetServer\MyDatabase\ReferencingElement\MyElement|MyAttribute
          IsManualDataEntry: false
          Path: \\MyAssetServer\MyDatabase\CityName\EngineeringProcess\Equipment\MachineName|Water(2008)
          ConfigString: "SELECT [Water Use] FROM [Energy Use 2008] WHERE [Asset ID]\
            \ = '%Element%'"
          IsHidden: false
          Zero: 0.0
          DefaultUnitsName: liter
          DisplayDigits: -5
          HasChildren: false
          TraitName: LimitLoLo
          Type: Int32
          Links:
            PlotData: PlotData
            EnumerationSet: EnumerationSet
            Categories: Categories
            Parent: Parent
            Element: Element
            Attributes: Attributes
            Point: Point
            Self: Self
            EventFrame: EventFrame
            Template: Template
            SummaryData: SummaryData
            Value: Value
            EndValue: EndValue
            Trait: Trait
            InterpolatedData: InterpolatedData
            EnumerationValues: EnumerationValues
            RecordedData: RecordedData
          Id: 75de231b-b591-49b1-b138-e725a77165c2
          DataReferencePlugIn: Table Lookup
          TypeQualifier: ""
          DataReference:
            Type: PI Point
            WebException:
              Errors:
              - An error has occurred.
              StatusCode: 500
            PIPoint:
              Path: \\MyPIServer\PointName
              Zero: 0.0
              DisplayDigits: -5
              Step: false
              Span: 100.0
              Name: PointName
              PointClass: classic
              WebId: I1DPa70Wf0zBA06CLkV9ovNQgQCAAAAA
              Descriptor: 12 Hour Sine Wave
              Future: false
              PointType: Float32
              Id: 82
              DigitalSetName: ""
              EngineeringUnits: ""
        - Description: 2008 Water Use
          WebException:
            Errors:
            - An error has occurred.
            StatusCode: 500
          DefaultUnitsNameAbbreviation: L
          Step: false
          Span: 100.0
          Name: Water
          IsExcluded: false
          CategoryNames:
          - Energy Savings Targets
          IsConfigurationItem: false
          WebId: I1AbEDqD5loBNH0erqeqJodtALAYIKyyz2F5BGAxQAVXYRDBAGyPedZG1sUmxOOclp3Flwg
          Paths:
          - \\MyAssetServer\MyDatabase\MyElement|MyAttribute
          - \\MyAssetServer\MyDatabase\ReferencingElement\MyElement|MyAttribute
          IsManualDataEntry: false
          Path: \\MyAssetServer\MyDatabase\CityName\EngineeringProcess\Equipment\MachineName|Water(2008)
          ConfigString: "SELECT [Water Use] FROM [Energy Use 2008] WHERE [Asset ID]\
            \ = '%Element%'"
          IsHidden: false
          Zero: 0.0
          DefaultUnitsName: liter
          DisplayDigits: -5
          HasChildren: false
          TraitName: LimitLoLo
          Type: Int32
          Links:
            PlotData: PlotData
            EnumerationSet: EnumerationSet
            Categories: Categories
            Parent: Parent
            Element: Element
            Attributes: Attributes
            Point: Point
            Self: Self
            EventFrame: EventFrame
            Template: Template
            SummaryData: SummaryData
            Value: Value
            EndValue: EndValue
            Trait: Trait
            InterpolatedData: InterpolatedData
            EnumerationValues: EnumerationValues
            RecordedData: RecordedData
          Id: 75de231b-b591-49b1-b138-e725a77165c2
          DataReferencePlugIn: Table Lookup
          TypeQualifier: ""
          DataReference:
            Type: PI Point
            WebException:
              Errors:
              - An error has occurred.
              StatusCode: 500
            PIPoint:
              Path: \\MyPIServer\PointName
              Zero: 0.0
              DisplayDigits: -5
              Step: false
              Span: 100.0
              Name: PointName
              PointClass: classic
              WebId: I1DPa70Wf0zBA06CLkV9ovNQgQCAAAAA
              Descriptor: 12 Hour Sine Wave
              Future: false
              PointType: Float32
              Id: 82
              DigitalSetName: ""
              EngineeringUnits: ""
      properties:
        Items:
          items:
            $ref: '#/components/schemas/Attribute'
          title: Items
          type: array
        Links:
          $ref: '#/components/schemas/PaginationLinks'
      title: "Items[Attribute]"
      type: object
    Items[CacheInstance]:
      example:
        Links:
          Last: Last
          Next: Next
          Previous: Previous
          First: First
        Items:
        - LastRefreshTime: 2014-07-20T14:08:00Z
          User: MyDomain\Username
          WebException:
            Errors:
            - An error has occurred.
            StatusCode: 500
          WillRefreshAfter: 2014-07-20T18:08:00Z
          ScheduledExpirationTime: 2014-07-20T23:08:00Z
          Id: 8a5033c9-b77f-431c-9820-c9f538d80dc6
        - LastRefreshTime: 2014-07-20T14:08:00Z
          User: MyDomain\Username
          WebException:
            Errors:
            - An error has occurred.
            StatusCode: 500
          WillRefreshAfter: 2014-07-20T18:08:00Z
          ScheduledExpirationTime: 2014-07-20T23:08:00Z
          Id: 8a5033c9-b77f-431c-9820-c9f538d80dc6
      properties:
        Items:
          items:
            $ref: '#/components/schemas/CacheInstance'
          title: Items
          type: array
        Links:
          $ref: '#/components/schemas/PaginationLinks'
      title: "Items[CacheInstance]"
      type: object
    Items[ChannelInstance]:
      example:
        Links:
          Last: Last
          Next: Next
          Previous: Previous
          First: First
        Items:
        - LastMessageSentTime: LastMessageSentTime
          WebException:
            Errors:
            - An error has occurred.
            StatusCode: 500
          StartTime: StartTime
          Id: Id
          SentMessageCount: 0
        - LastMessageSentTime: LastMessageSentTime
          WebException:
            Errors:
            - An error has occurred.
            StatusCode: 500
          StartTime: StartTime
          Id: Id
          SentMessageCount: 0
      properties:
        Items:
          items:
            $ref: '#/components/schemas/ChannelInstance'
          title: Items
          type: array
        Links:
          $ref: '#/components/schemas/PaginationLinks'
      title: "Items[ChannelInstance]"
      type: object
    Items[DataServer]:
      example:
        Links:
          Last: Last
          Next: Next
          Previous: Previous
          First: First
        Items:
        - Path: "\\\\PIServer[MyPIServer]"
          ServerVersion: 3.4.390.18
          WebException:
            Errors:
            - An error has occurred.
            StatusCode: 500
          WebId: I1DS1km7hQHxB0i6-VfC-9MwAA
          Links:
            EnumerationSets: EnumerationSets
            Points: Points
            Self: Self
          Id: 85bb49d6-f101-4807-baf9-57c2fbd33000
          ServerTime: 2014-07-22T14:00:00Z
          IsConnected: true
          Name: MyPIServer
        - Path: "\\\\PIServer[MyPIServer]"
          ServerVersion: 3.4.390.18
          WebException:
            Errors:
            - An error has occurred.
            StatusCode: 500
          WebId: I1DS1km7hQHxB0i6-VfC-9MwAA
          Links:
            EnumerationSets: EnumerationSets
            Points: Points
            Self: Self
          Id: 85bb49d6-f101-4807-baf9-57c2fbd33000
          ServerTime: 2014-07-22T14:00:00Z
          IsConnected: true
          Name: MyPIServer
      properties:
        Items:
          items:
            $ref: '#/components/schemas/DataServer'
          title: Items
          type: array
        Links:
          $ref: '#/components/schemas/PaginationLinks'
      title: "Items[DataServer]"
      type: object
    Items[ElementCategory]:
      example:
        Links:
          Last: Last
          Next: Next
          Previous: Previous
          First: First
        Items:
        - Path: "\\\\MyAssetServer\\Database\\CategoriesElement[CategoryName]"
          Description: Relative energy use per ton of process feed.
          WebException:
            Errors:
            - An error has occurred.
            StatusCode: 500
          WebId: I1ECDqD5loBNH0erqeqJodtALAQ_lRME1-QUKrnEUKhMgEUA
          Links:
            SecurityEntries: SecurityEntries
            Database: Database
            Self: Self
            Security: Security
          Id: 3051f943-7e4d-4241-ab9c-450a84c80450
          Name: CategoryName
        - Path: "\\\\MyAssetServer\\Database\\CategoriesElement[CategoryName]"
          Description: Relative energy use per ton of process feed.
          WebException:
            Errors:
            - An error has occurred.
            StatusCode: 500
          WebId: I1ECDqD5loBNH0erqeqJodtALAQ_lRME1-QUKrnEUKhMgEUA
          Links:
            SecurityEntries: SecurityEntries
            Database: Database
            Self: Self
            Security: Security
          Id: 3051f943-7e4d-4241-ab9c-450a84c80450
          Name: CategoryName
      properties:
        Items:
          items:
            $ref: '#/components/schemas/ElementCategory'
          title: Items
          type: array
        Links:
          $ref: '#/components/schemas/PaginationLinks'
      title: "Items[ElementCategory]"
      type: object
    Items[ElementTemplate]:
      example:
        Links:
          Last: Last
          Next: Next
          Previous: Previous
          First: First
        Items:
        - Path: "\\\\MyAssetServer\\MyDatabase\\ElementTemplates[Boiler]"
          CanBeAcknowledged: false
          Description: Manufacturing Machine MachineName
          WebException:
            Errors:
            - An error has occurred.
            StatusCode: 500
          NamingPattern: '%TEMPLATE%'
          Severity: None
          BaseTemplate: Equipment
          ExtendedProperties:
            key:
              WebException:
                Errors:
                - An error has occurred.
                StatusCode: 500
              Value: 12.3
              Exception:
                Errors:
                - An error has occurred.
          Name: MachineName
          CategoryNames:
          - Equipment Assets
          WebId: I1ETDqD5loBNH0erqeqJodtALAkpSYp6uykE2Ku0yChDU91g
          Links:
            AttributeTemplates: AttributeTemplates
            SecurityEntries: SecurityEntries
            DerivedTemplates: DerivedTemplates
            Categories: Categories
            BaseTemplates: BaseTemplates
            AnalysisTemplates: AnalysisTemplates
            Database: Database
            DefaultAttribute: DefaultAttribute
            Self: Self
            BaseTemplate: BaseTemplate
            Security: Security
            NotificationRuleTemplates: NotificationRuleTemplates
          Id: a7989492-b2ab-4d90-8abb-4c8284353dd6
          AllowElementToExtend: false
          InstanceType: Element
        - Path: "\\\\MyAssetServer\\MyDatabase\\ElementTemplates[Boiler]"
          CanBeAcknowledged: false
          Description: Manufacturing Machine MachineName
          WebException:
            Errors:
            - An error has occurred.
            StatusCode: 500
          NamingPattern: '%TEMPLATE%'
          Severity: None
          BaseTemplate: Equipment
          ExtendedProperties:
            key:
              WebException:
                Errors:
                - An error has occurred.
                StatusCode: 500
              Value: 12.3
              Exception:
                Errors:
                - An error has occurred.
          Name: MachineName
          CategoryNames:
          - Equipment Assets
          WebId: I1ETDqD5loBNH0erqeqJodtALAkpSYp6uykE2Ku0yChDU91g
          Links:
            AttributeTemplates: AttributeTemplates
            SecurityEntries: SecurityEntries
            DerivedTemplates: DerivedTemplates
            Categories: Categories
            BaseTemplates: BaseTemplates
            AnalysisTemplates: AnalysisTemplates
            Database: Database
            DefaultAttribute: DefaultAttribute
            Self: Self
            BaseTemplate: BaseTemplate
            Security: Security
            NotificationRuleTemplates: NotificationRuleTemplates
          Id: a7989492-b2ab-4d90-8abb-4c8284353dd6
          AllowElementToExtend: false
          InstanceType: Element
      properties:
        Items:
          items:
            $ref: '#/components/schemas/ElementTemplate'
          title: Items
          type: array
        Links:
          $ref: '#/components/schemas/PaginationLinks'
      title: "Items[ElementTemplate]"
      type: object
    Items[Element]:
      example:
        Links:
          Last: Last
          Next: Next
          Previous: Previous
          First: First
        Items:
        - Path: \\MyAssetServer\MyDatabase\CityName\EngineeringProcess\Equipment\MachineName
          Description: Manufacturing Equipment MachineName
          WebException:
            Errors:
            - An error has occurred.
            StatusCode: 500
          ExtendedProperties:
            key:
              WebException:
                Errors:
                - An error has occurred.
                StatusCode: 500
              Value: 12.3
              Exception:
                Errors:
                - An error has occurred.
          Name: MachineName
          Errors:
          - Message:
            - An error has occurred.
            FieldName: Value
          - Message:
            - An error has occurred.
            FieldName: Value
          HasChildren: false
          CategoryNames:
          - Equipment Assets
          WebId: I1EmDqD5loBNH0erqeqJodtALAYIKyyz2F5BGAxQAVXYRDBA
          Links:
            PlotData: PlotData
            Categories: Categories
            Parent: Parent
            Attributes: Attributes
            Analyses: Analyses
            Self: Self
            Elements: Elements
            Security: Security
            Template: Template
            SecurityEntries: SecurityEntries
            NotificationRules: NotificationRules
            Database: Database
            SummaryData: SummaryData
            Value: Value
            EventFrames: EventFrames
            EndValue: EndValue
            DefaultAttribute: DefaultAttribute
            InterpolatedData: InterpolatedData
            RecordedData: RecordedData
          TemplateName: MachineName
          Id: cbb28260-853d-11e4-80c5-00155d844304
          Paths:
          - Paths
          - Paths
        - Path: \\MyAssetServer\MyDatabase\CityName\EngineeringProcess\Equipment\MachineName
          Description: Manufacturing Equipment MachineName
          WebException:
            Errors:
            - An error has occurred.
            StatusCode: 500
          ExtendedProperties:
            key:
              WebException:
                Errors:
                - An error has occurred.
                StatusCode: 500
              Value: 12.3
              Exception:
                Errors:
                - An error has occurred.
          Name: MachineName
          Errors:
          - Message:
            - An error has occurred.
            FieldName: Value
          - Message:
            - An error has occurred.
            FieldName: Value
          HasChildren: false
          CategoryNames:
          - Equipment Assets
          WebId: I1EmDqD5loBNH0erqeqJodtALAYIKyyz2F5BGAxQAVXYRDBA
          Links:
            PlotData: PlotData
            Categories: Categories
            Parent: Parent
            Attributes: Attributes
            Analyses: Analyses
            Self: Self
            Elements: Elements
            Security: Security
            Template: Template
            SecurityEntries: SecurityEntries
            NotificationRules: NotificationRules
            Database: Database
            SummaryData: SummaryData
            Value: Value
            EventFrames: EventFrames
            EndValue: EndValue
            DefaultAttribute: DefaultAttribute
            InterpolatedData: InterpolatedData
            RecordedData: RecordedData
          TemplateName: MachineName
          Id: cbb28260-853d-11e4-80c5-00155d844304
          Paths:
          - Paths
          - Paths
      properties:
        Items:
          items:
            $ref: '#/components/schemas/Element'
          title: Items
          type: array
        Links:
          $ref: '#/components/schemas/PaginationLinks'
      title: "Items[Element]"
      type: object
    Items[EnumerationSet]:
      example:
        Links:
          Last: Last
          Next: Next
          Previous: Previous
          First: First
        Items:
        - Path: "\\\\MyAssetServer\\MyDatabase\\EnumerationSets[Model Number]"
          Description: Model numbers by brand of vehicle
          WebException:
            Errors:
            - An error has occurred.
            StatusCode: 500
          WebId: I1MSRDqD5loBNH0erqeqJodtALAT_x3jpGsKUCB1vtmvQHUMQ
          Links:
            SecurityEntries: SecurityEntries
            DataServer: DataServer
            Database: Database
            Values: Values
            Self: Self
            Security: Security
          Id: 8e77fc4f-ac91-4029-81d6-fb66bd01d431
          SerializeDescription: true
          Name: Model Number
        - Path: "\\\\MyAssetServer\\MyDatabase\\EnumerationSets[Model Number]"
          Description: Model numbers by brand of vehicle
          WebException:
            Errors:
            - An error has occurred.
            StatusCode: 500
          WebId: I1MSRDqD5loBNH0erqeqJodtALAT_x3jpGsKUCB1vtmvQHUMQ
          Links:
            SecurityEntries: SecurityEntries
            DataServer: DataServer
            Database: Database
            Values: Values
            Self: Self
            Security: Security
          Id: 8e77fc4f-ac91-4029-81d6-fb66bd01d431
          SerializeDescription: true
          Name: Model Number
      properties:
        Items:
          items:
            $ref: '#/components/schemas/EnumerationSet'
          title: Items
          type: array
        Links:
          $ref: '#/components/schemas/PaginationLinks'
      title: "Items[EnumerationSet]"
      type: object
    Items[EnumerationValue]:
      example:
        Links:
          Last: Last
          Next: Next
          Previous: Previous
          First: First
        Items:
        - Path: "\\\\MyAssetServer\\MyDatabase\\EnumerationSets[Model Number]\\CarBrand|Model3"
          SerializePath: true
          Description: Model Number of CarBrand
          WebException:
            Errors:
            - An error has occurred.
            StatusCode: 500
          Parent: CarBrand
          SerializeId: true
          Name: CarBrand|Model3
          SerializeWebId: true
          WebId: I1MVRDqD5loBNH0erqeqJodtALAT_x3jpGsKUCB1vtmvQHUMQlIYqmOlvs0ygEQnSeGSe7w
          Value: 2005
          Links:
            EnumerationSet: EnumerationSet
            Parent: Parent
            Self: Self
          SerializeLinks: true
          Id: 982a8694-6fe9-4cb3-a011-09d278649eef
          SerializeDescription: true
        - Path: "\\\\MyAssetServer\\MyDatabase\\EnumerationSets[Model Number]\\CarBrand|Model3"
          SerializePath: true
          Description: Model Number of CarBrand
          WebException:
            Errors:
            - An error has occurred.
            StatusCode: 500
          Parent: CarBrand
          SerializeId: true
          Name: CarBrand|Model3
          SerializeWebId: true
          WebId: I1MVRDqD5loBNH0erqeqJodtALAT_x3jpGsKUCB1vtmvQHUMQlIYqmOlvs0ygEQnSeGSe7w
          Value: 2005
          Links:
            EnumerationSet: EnumerationSet
            Parent: Parent
            Self: Self
          SerializeLinks: true
          Id: 982a8694-6fe9-4cb3-a011-09d278649eef
          SerializeDescription: true
      properties:
        Items:
          items:
            $ref: '#/components/schemas/EnumerationValue'
          title: Items
          type: array
        Links:
          $ref: '#/components/schemas/PaginationLinks'
      title: "Items[EnumerationValue]"
      type: object
    Items[EventFrame]:
      example:
        Links:
          Last: Last
          Next: Next
          Previous: Previous
          First: First
        Items:
        - IsAcknowledged: true
          Path: "\\\\MyAssetServer\\MyDatabase\\EventFrames[EF20140725-001]"
          CanBeAcknowledged: true
          AcknowledgedBy: MyDomain\UserA
          Description: Event Frame of Past Week
          WebException:
            Errors:
            - An error has occurred.
            StatusCode: 500
          EndTime: 2014-07-25T14:45:29Z
          StartTime: 2014-07-18T14:45:29Z
          IsLocked: false
          Severity: None
          Security:
            CanWrite: true
            Rights:
            - Read
            - WriteData
            CanReadData: true
            WebException:
              Errors:
              - An error has occurred.
              StatusCode: 500
            HasAdmin: true
            CanWriteData: true
            CanDelete: true
            CanRead: true
            CanAnnotate: true
            CanExecute: true
            CanSubscribe: true
            CanSubscribeOthers: true
          ExtendedProperties:
            key:
              WebException:
                Errors:
                - An error has occurred.
                StatusCode: 500
              Value: 12.3
              Exception:
                Errors:
                - An error has occurred.
          Name: EF20140725-001
          IsAnnotated: false
          AcknowledgedDate: 2014-07-30T11:04:23Z
          HasChildren: false
          CategoryNames:
          - Processing Plant
          AreValuesCaptured: false
          WebId: I1FmDqD5loBNH0erqeqJodtALADqD5loBNH0cAAAAAAASwAg
          Links:
            PlotData: PlotData
            PrimaryReferencedElement: PrimaryReferencedElement
            Categories: Categories
            Parent: Parent
            Attributes: Attributes
            ReferencedElements: ReferencedElements
            Self: Self
            Security: Security
            Template: Template
            SecurityEntries: SecurityEntries
            Annotations: Annotations
            Database: Database
            SummaryData: SummaryData
            Value: Value
            EventFrames: EventFrames
            EndValue: EndValue
            DefaultAttribute: DefaultAttribute
            InterpolatedData: InterpolatedData
            RecordedData: RecordedData
          TemplateName: Template
          Id: 96f9a00e-4d80-471f-0000-00000004b002
          RefElementWebIds:
          - I1EmDqD5loBNH0erqeqJodtALAaqQoQHk26BGgMQAVXYR0Ag
        - IsAcknowledged: true
          Path: "\\\\MyAssetServer\\MyDatabase\\EventFrames[EF20140725-001]"
          CanBeAcknowledged: true
          AcknowledgedBy: MyDomain\UserA
          Description: Event Frame of Past Week
          WebException:
            Errors:
            - An error has occurred.
            StatusCode: 500
          EndTime: 2014-07-25T14:45:29Z
          StartTime: 2014-07-18T14:45:29Z
          IsLocked: false
          Severity: None
          Security:
            CanWrite: true
            Rights:
            - Read
            - WriteData
            CanReadData: true
            WebException:
              Errors:
              - An error has occurred.
              StatusCode: 500
            HasAdmin: true
            CanWriteData: true
            CanDelete: true
            CanRead: true
            CanAnnotate: true
            CanExecute: true
            CanSubscribe: true
            CanSubscribeOthers: true
          ExtendedProperties:
            key:
              WebException:
                Errors:
                - An error has occurred.
                StatusCode: 500
              Value: 12.3
              Exception:
                Errors:
                - An error has occurred.
          Name: EF20140725-001
          IsAnnotated: false
          AcknowledgedDate: 2014-07-30T11:04:23Z
          HasChildren: false
          CategoryNames:
          - Processing Plant
          AreValuesCaptured: false
          WebId: I1FmDqD5loBNH0erqeqJodtALADqD5loBNH0cAAAAAAASwAg
          Links:
            PlotData: PlotData
            PrimaryReferencedElement: PrimaryReferencedElement
            Categories: Categories
            Parent: Parent
            Attributes: Attributes
            ReferencedElements: ReferencedElements
            Self: Self
            Security: Security
            Template: Template
            SecurityEntries: SecurityEntries
            Annotations: Annotations
            Database: Database
            SummaryData: SummaryData
            Value: Value
            EventFrames: EventFrames
            EndValue: EndValue
            DefaultAttribute: DefaultAttribute
            InterpolatedData: InterpolatedData
            RecordedData: RecordedData
          TemplateName: Template
          Id: 96f9a00e-4d80-471f-0000-00000004b002
          RefElementWebIds:
          - I1EmDqD5loBNH0erqeqJodtALAaqQoQHk26BGgMQAVXYR0Ag
      properties:
        Items:
          items:
            $ref: '#/components/schemas/EventFrame'
          title: Items
          type: array
        Links:
          $ref: '#/components/schemas/PaginationLinks'
      title: "Items[EventFrame]"
      type: object
    Items[Item[Attribute]]:
      example:
        Links:
          Last: Last
          Next: Next
          Previous: Previous
          First: First
        Items:
        - Identifier: \\server\path
          Object:
            Description: 2008 Water Use
            WebException:
              Errors:
              - An error has occurred.
              StatusCode: 500
            DefaultUnitsNameAbbreviation: L
            Step: false
            Span: 100.0
            Name: Water
            IsExcluded: false
            CategoryNames:
            - Energy Savings Targets
            IsConfigurationItem: false
            WebId: I1AbEDqD5loBNH0erqeqJodtALAYIKyyz2F5BGAxQAVXYRDBAGyPedZG1sUmxOOclp3Flwg
            Paths:
            - \\MyAssetServer\MyDatabase\MyElement|MyAttribute
            - \\MyAssetServer\MyDatabase\ReferencingElement\MyElement|MyAttribute
            IsManualDataEntry: false
            Path: \\MyAssetServer\MyDatabase\CityName\EngineeringProcess\Equipment\MachineName|Water(2008)
            ConfigString: "SELECT [Water Use] FROM [Energy Use 2008] WHERE [Asset\
              \ ID] = '%Element%'"
            IsHidden: false
            Zero: 0.0
            DefaultUnitsName: liter
            DisplayDigits: -5
            HasChildren: false
            TraitName: LimitLoLo
            Type: Int32
            Links:
              PlotData: PlotData
              EnumerationSet: EnumerationSet
              Categories: Categories
              Parent: Parent
              Element: Element
              Attributes: Attributes
              Point: Point
              Self: Self
              EventFrame: EventFrame
              Template: Template
              SummaryData: SummaryData
              Value: Value
              EndValue: EndValue
              Trait: Trait
              InterpolatedData: InterpolatedData
              EnumerationValues: EnumerationValues
              RecordedData: RecordedData
            Id: 75de231b-b591-49b1-b138-e725a77165c2
            DataReferencePlugIn: Table Lookup
            TypeQualifier: ""
            DataReference:
              Type: PI Point
              WebException:
                Errors:
                - An error has occurred.
                StatusCode: 500
              PIPoint:
                Path: \\MyPIServer\PointName
                Zero: 0.0
                DisplayDigits: -5
                Step: false
                Span: 100.0
                Name: PointName
                PointClass: classic
                WebId: I1DPa70Wf0zBA06CLkV9ovNQgQCAAAAA
                Descriptor: 12 Hour Sine Wave
                Future: false
                PointType: Float32
                Id: 82
                DigitalSetName: ""
                EngineeringUnits: ""
          IdentifierType: Path
          Exception:
            Errors:
            - An error has occurred.
        - Identifier: \\server\path
          Object:
            Description: 2008 Water Use
            WebException:
              Errors:
              - An error has occurred.
              StatusCode: 500
            DefaultUnitsNameAbbreviation: L
            Step: false
            Span: 100.0
            Name: Water
            IsExcluded: false
            CategoryNames:
            - Energy Savings Targets
            IsConfigurationItem: false
            WebId: I1AbEDqD5loBNH0erqeqJodtALAYIKyyz2F5BGAxQAVXYRDBAGyPedZG1sUmxOOclp3Flwg
            Paths:
            - \\MyAssetServer\MyDatabase\MyElement|MyAttribute
            - \\MyAssetServer\MyDatabase\ReferencingElement\MyElement|MyAttribute
            IsManualDataEntry: false
            Path: \\MyAssetServer\MyDatabase\CityName\EngineeringProcess\Equipment\MachineName|Water(2008)
            ConfigString: "SELECT [Water Use] FROM [Energy Use 2008] WHERE [Asset\
              \ ID] = '%Element%'"
            IsHidden: false
            Zero: 0.0
            DefaultUnitsName: liter
            DisplayDigits: -5
            HasChildren: false
            TraitName: LimitLoLo
            Type: Int32
            Links:
              PlotData: PlotData
              EnumerationSet: EnumerationSet
              Categories: Categories
              Parent: Parent
              Element: Element
              Attributes: Attributes
              Point: Point
              Self: Self
              EventFrame: EventFrame
              Template: Template
              SummaryData: SummaryData
              Value: Value
              EndValue: EndValue
              Trait: Trait
              InterpolatedData: InterpolatedData
              EnumerationValues: EnumerationValues
              RecordedData: RecordedData
            Id: 75de231b-b591-49b1-b138-e725a77165c2
            DataReferencePlugIn: Table Lookup
            TypeQualifier: ""
            DataReference:
              Type: PI Point
              WebException:
                Errors:
                - An error has occurred.
                StatusCode: 500
              PIPoint:
                Path: \\MyPIServer\PointName
                Zero: 0.0
                DisplayDigits: -5
                Step: false
                Span: 100.0
                Name: PointName
                PointClass: classic
                WebId: I1DPa70Wf0zBA06CLkV9ovNQgQCAAAAA
                Descriptor: 12 Hour Sine Wave
                Future: false
                PointType: Float32
                Id: 82
                DigitalSetName: ""
                EngineeringUnits: ""
          IdentifierType: Path
          Exception:
            Errors:
            - An error has occurred.
      properties:
        Items:
          items:
            $ref: "#/components/schemas/Item[Attribute]"
          title: Items
          type: array
        Links:
          $ref: '#/components/schemas/PaginationLinks'
      title: "Items[Item[Attribute]]"
      type: object
    Items[Item[Element]]:
      example:
        Links:
          Last: Last
          Next: Next
          Previous: Previous
          First: First
        Items:
        - Identifier: \\server\path
          Object:
            Path: \\MyAssetServer\MyDatabase\CityName\EngineeringProcess\Equipment\MachineName
            Description: Manufacturing Equipment MachineName
            WebException:
              Errors:
              - An error has occurred.
              StatusCode: 500
            ExtendedProperties:
              key:
                WebException:
                  Errors:
                  - An error has occurred.
                  StatusCode: 500
                Value: 12.3
                Exception:
                  Errors:
                  - An error has occurred.
            Name: MachineName
            Errors:
            - Message:
              - An error has occurred.
              FieldName: Value
            - Message:
              - An error has occurred.
              FieldName: Value
            HasChildren: false
            CategoryNames:
            - Equipment Assets
            WebId: I1EmDqD5loBNH0erqeqJodtALAYIKyyz2F5BGAxQAVXYRDBA
            Links:
              PlotData: PlotData
              Categories: Categories
              Parent: Parent
              Attributes: Attributes
              Analyses: Analyses
              Self: Self
              Elements: Elements
              Security: Security
              Template: Template
              SecurityEntries: SecurityEntries
              NotificationRules: NotificationRules
              Database: Database
              SummaryData: SummaryData
              Value: Value
              EventFrames: EventFrames
              EndValue: EndValue
              DefaultAttribute: DefaultAttribute
              InterpolatedData: InterpolatedData
              RecordedData: RecordedData
            TemplateName: MachineName
            Id: cbb28260-853d-11e4-80c5-00155d844304
            Paths:
            - Paths
            - Paths
          IdentifierType: Path
          Exception:
            Errors:
            - An error has occurred.
        - Identifier: \\server\path
          Object:
            Path: \\MyAssetServer\MyDatabase\CityName\EngineeringProcess\Equipment\MachineName
            Description: Manufacturing Equipment MachineName
            WebException:
              Errors:
              - An error has occurred.
              StatusCode: 500
            ExtendedProperties:
              key:
                WebException:
                  Errors:
                  - An error has occurred.
                  StatusCode: 500
                Value: 12.3
                Exception:
                  Errors:
                  - An error has occurred.
            Name: MachineName
            Errors:
            - Message:
              - An error has occurred.
              FieldName: Value
            - Message:
              - An error has occurred.
              FieldName: Value
            HasChildren: false
            CategoryNames:
            - Equipment Assets
            WebId: I1EmDqD5loBNH0erqeqJodtALAYIKyyz2F5BGAxQAVXYRDBA
            Links:
              PlotData: PlotData
              Categories: Categories
              Parent: Parent
              Attributes: Attributes
              Analyses: Analyses
              Self: Self
              Elements: Elements
              Security: Security
              Template: Template
              SecurityEntries: SecurityEntries
              NotificationRules: NotificationRules
              Database: Database
              SummaryData: SummaryData
              Value: Value
              EventFrames: EventFrames
              EndValue: EndValue
              DefaultAttribute: DefaultAttribute
              InterpolatedData: InterpolatedData
              RecordedData: RecordedData
            TemplateName: MachineName
            Id: cbb28260-853d-11e4-80c5-00155d844304
            Paths:
            - Paths
            - Paths
          IdentifierType: Path
          Exception:
            Errors:
            - An error has occurred.
      properties:
        Items:
          items:
            $ref: "#/components/schemas/Item[Element]"
          title: Items
          type: array
        Links:
          $ref: '#/components/schemas/PaginationLinks'
      title: "Items[Item[Element]]"
      type: object
    Items[Item[EventFrame]]:
      example:
        Links:
          Last: Last
          Next: Next
          Previous: Previous
          First: First
        Items:
        - Identifier: \\server\path
          Object:
            IsAcknowledged: true
            Path: "\\\\MyAssetServer\\MyDatabase\\EventFrames[EF20140725-001]"
            CanBeAcknowledged: true
            AcknowledgedBy: MyDomain\UserA
            Description: Event Frame of Past Week
            WebException:
              Errors:
              - An error has occurred.
              StatusCode: 500
            EndTime: 2014-07-25T14:45:29Z
            StartTime: 2014-07-18T14:45:29Z
            IsLocked: false
            Severity: None
            Security:
              CanWrite: true
              Rights:
              - Read
              - WriteData
              CanReadData: true
              WebException:
                Errors:
                - An error has occurred.
                StatusCode: 500
              HasAdmin: true
              CanWriteData: true
              CanDelete: true
              CanRead: true
              CanAnnotate: true
              CanExecute: true
              CanSubscribe: true
              CanSubscribeOthers: true
            ExtendedProperties:
              key:
                WebException:
                  Errors:
                  - An error has occurred.
                  StatusCode: 500
                Value: 12.3
                Exception:
                  Errors:
                  - An error has occurred.
            Name: EF20140725-001
            IsAnnotated: false
            AcknowledgedDate: 2014-07-30T11:04:23Z
            HasChildren: false
            CategoryNames:
            - Processing Plant
            AreValuesCaptured: false
            WebId: I1FmDqD5loBNH0erqeqJodtALADqD5loBNH0cAAAAAAASwAg
            Links:
              PlotData: PlotData
              PrimaryReferencedElement: PrimaryReferencedElement
              Categories: Categories
              Parent: Parent
              Attributes: Attributes
              ReferencedElements: ReferencedElements
              Self: Self
              Security: Security
              Template: Template
              SecurityEntries: SecurityEntries
              Annotations: Annotations
              Database: Database
              SummaryData: SummaryData
              Value: Value
              EventFrames: EventFrames
              EndValue: EndValue
              DefaultAttribute: DefaultAttribute
              InterpolatedData: InterpolatedData
              RecordedData: RecordedData
            TemplateName: Template
            Id: 96f9a00e-4d80-471f-0000-00000004b002
            RefElementWebIds:
            - I1EmDqD5loBNH0erqeqJodtALAaqQoQHk26BGgMQAVXYR0Ag
          IdentifierType: Path
          Exception:
            Errors:
            - An error has occurred.
        - Identifier: \\server\path
          Object:
            IsAcknowledged: true
            Path: "\\\\MyAssetServer\\MyDatabase\\EventFrames[EF20140725-001]"
            CanBeAcknowledged: true
            AcknowledgedBy: MyDomain\UserA
            Description: Event Frame of Past Week
            WebException:
              Errors:
              - An error has occurred.
              StatusCode: 500
            EndTime: 2014-07-25T14:45:29Z
            StartTime: 2014-07-18T14:45:29Z
            IsLocked: false
            Severity: None
            Security:
              CanWrite: true
              Rights:
              - Read
              - WriteData
              CanReadData: true
              WebException:
                Errors:
                - An error has occurred.
                StatusCode: 500
              HasAdmin: true
              CanWriteData: true
              CanDelete: true
              CanRead: true
              CanAnnotate: true
              CanExecute: true
              CanSubscribe: true
              CanSubscribeOthers: true
            ExtendedProperties:
              key:
                WebException:
                  Errors:
                  - An error has occurred.
                  StatusCode: 500
                Value: 12.3
                Exception:
                  Errors:
                  - An error has occurred.
            Name: EF20140725-001
            IsAnnotated: false
            AcknowledgedDate: 2014-07-30T11:04:23Z
            HasChildren: false
            CategoryNames:
            - Processing Plant
            AreValuesCaptured: false
            WebId: I1FmDqD5loBNH0erqeqJodtALADqD5loBNH0cAAAAAAASwAg
            Links:
              PlotData: PlotData
              PrimaryReferencedElement: PrimaryReferencedElement
              Categories: Categories
              Parent: Parent
              Attributes: Attributes
              ReferencedElements: ReferencedElements
              Self: Self
              Security: Security
              Template: Template
              SecurityEntries: SecurityEntries
              Annotations: Annotations
              Database: Database
              SummaryData: SummaryData
              Value: Value
              EventFrames: EventFrames
              EndValue: EndValue
              DefaultAttribute: DefaultAttribute
              InterpolatedData: InterpolatedData
              RecordedData: RecordedData
            TemplateName: Template
            Id: 96f9a00e-4d80-471f-0000-00000004b002
            RefElementWebIds:
            - I1EmDqD5loBNH0erqeqJodtALAaqQoQHk26BGgMQAVXYR0Ag
          IdentifierType: Path
          Exception:
            Errors:
            - An error has occurred.
      properties:
        Items:
          items:
            $ref: "#/components/schemas/Item[EventFrame]"
          title: Items
          type: array
        Links:
          $ref: '#/components/schemas/PaginationLinks'
      title: "Items[Item[EventFrame]]"
      type: object
    Items[Item[Point]]:
      example:
        Links:
          Last: Last
          Next: Next
          Previous: Previous
          First: First
        Items:
        - Identifier: \\server\path
          Object:
            Path: \\MyPIServer\PointName
            Zero: 0.0
            WebException:
              Errors:
              - An error has occurred.
              StatusCode: 500
            DisplayDigits: -5
            Step: false
            Span: 100.0
            Name: PointName
            PointClass: classic
            WebId: I1DPa70Wf0zBA06CLkV9ovNQgQCAAAAA
            Descriptor: 12 Hour Sine Wave
            Future: false
            Links:
              PlotData: PlotData
              DataServer: DataServer
              Attributes: Attributes
              SummaryData: SummaryData
              Value: Value
              EndValue: EndValue
              Self: Self
              InterpolatedData: InterpolatedData
              RecordedData: RecordedData
            PointType: Float32
            Id: 82
            DigitalSetName: ""
            EngineeringUnits: ""
          IdentifierType: Path
          Exception:
            Errors:
            - An error has occurred.
        - Identifier: \\server\path
          Object:
            Path: \\MyPIServer\PointName
            Zero: 0.0
            WebException:
              Errors:
              - An error has occurred.
              StatusCode: 500
            DisplayDigits: -5
            Step: false
            Span: 100.0
            Name: PointName
            PointClass: classic
            WebId: I1DPa70Wf0zBA06CLkV9ovNQgQCAAAAA
            Descriptor: 12 Hour Sine Wave
            Future: false
            Links:
              PlotData: PlotData
              DataServer: DataServer
              Attributes: Attributes
              SummaryData: SummaryData
              Value: Value
              EndValue: EndValue
              Self: Self
              InterpolatedData: InterpolatedData
              RecordedData: RecordedData
            PointType: Float32
            Id: 82
            DigitalSetName: ""
            EngineeringUnits: ""
          IdentifierType: Path
          Exception:
            Errors:
            - An error has occurred.
      properties:
        Items:
          items:
            $ref: "#/components/schemas/Item[Point]"
          title: Items
          type: array
        Links:
          $ref: '#/components/schemas/PaginationLinks'
      title: "Items[Item[Point]]"
      type: object
    Items[Items[Substatus]]:
      example:
        Links:
          Last: Last
          Next: Next
          Previous: Previous
          First: First
        Items:
        - Links:
            Last: Last
            Next: Next
            Previous: Previous
            First: First
          Items:
          - WebException:
              Errors:
              - An error has occurred.
              StatusCode: 500
            Message: Message
            Substatus: 200
          - WebException:
              Errors:
              - An error has occurred.
              StatusCode: 500
            Message: Message
            Substatus: 200
        - Links:
            Last: Last
            Next: Next
            Previous: Previous
            First: First
          Items:
          - WebException:
              Errors:
              - An error has occurred.
              StatusCode: 500
            Message: Message
            Substatus: 200
          - WebException:
              Errors:
              - An error has occurred.
              StatusCode: 500
            Message: Message
            Substatus: 200
      properties:
        Items:
          items:
            $ref: "#/components/schemas/Items[Substatus]"
          title: Items
          type: array
        Links:
          $ref: '#/components/schemas/PaginationLinks'
      title: "Items[Items[Substatus]]"
      type: object
    Items[NotificationContactTemplate]:
      example:
        Links:
          Last: Last
          Next: Next
          Previous: Previous
          First: First
        Items:
        - Path: "\\\\MyAssetServer\\NotificationContactTemplates[Plant Manager]"
          ConfigString: ""
          NotifyWhenInstanceEnded: true
          ContactType: Individual
          Description: ""
          WebException:
            Errors:
            - An error has occurred.
            StatusCode: 500
          MaximumRetries: 5
          Name: Plant Manager
          HasChildren: false
          EscalationTimeout: PT3S
          WebId: I1NCEDqD5loBNH0erqeqJodtALAYIKyyz2F5BGAxQAVXYRDBAGyPedZG1sUmxOOclp3Flwg
          MinimumAcknowledgements: 2
          Links:
            SecurityEntries: SecurityEntries
            NotificationPlugIn: NotificationPlugIn
            NotificationContactTemplates: NotificationContactTemplates
            Self: Self
            Security: Security
            AssetServer: AssetServer
          Available: true
          Id: cbb28260-853d-11e4-80c5-00155d844304
          RetryInterval: PT5S
          PlugInName: ""
        - Path: "\\\\MyAssetServer\\NotificationContactTemplates[Plant Manager]"
          ConfigString: ""
          NotifyWhenInstanceEnded: true
          ContactType: Individual
          Description: ""
          WebException:
            Errors:
            - An error has occurred.
            StatusCode: 500
          MaximumRetries: 5
          Name: Plant Manager
          HasChildren: false
          EscalationTimeout: PT3S
          WebId: I1NCEDqD5loBNH0erqeqJodtALAYIKyyz2F5BGAxQAVXYRDBAGyPedZG1sUmxOOclp3Flwg
          MinimumAcknowledgements: 2
          Links:
            SecurityEntries: SecurityEntries
            NotificationPlugIn: NotificationPlugIn
            NotificationContactTemplates: NotificationContactTemplates
            Self: Self
            Security: Security
            AssetServer: AssetServer
          Available: true
          Id: cbb28260-853d-11e4-80c5-00155d844304
          RetryInterval: PT5S
          PlugInName: ""
      properties:
        Items:
          items:
            $ref: '#/components/schemas/NotificationContactTemplate'
          title: Items
          type: array
        Links:
          $ref: '#/components/schemas/PaginationLinks'
      title: "Items[NotificationContactTemplate]"
      type: object
    Items[NotificationPlugIn]:
      example:
        Links:
          Last: Last
          Next: Next
          Previous: Previous
          First: First
        Items:
        - AssemblyTime: 2016-05-25T14:01:07Z
          Path: "\\\\MyAssetServer\\PlugInsDeliveryChannel[WebService]"
          Description: Delivery channel for calling a web service
          WebException:
            Errors:
            - An error has occurred.
            StatusCode: 500
          LoadedAssemblyTime: 1970-01-01T00:00:00Z
          IsBrowsable: true
          Name: WebService
          IsNonEditableConfig: false
          LoadedVersion: ""
          Version: 2.10.0.8516
          WebId: F1DCDqD5loBNH0erqeqJodtALA1jVcFNf02UGGrgjlCY06lgUkVTVFVOSVRcUExVR0lOU0RFTElWRVJZQ0hBTk5FTFtXRUJTRVJWSUNFXQ
          AssemblyID: 0b450496-63f6-4207-b4c5-2c1c73ca897a
          AssemblyLoadProperties:
          - NET4
          - SDK_NET4
          CompatibilityVersion: 2
          Links:
            Self: Self
            AssetServer: AssetServer
          Id: 145c35d6-f4d7-41d9-86ae-08e5098d3a96
          AssemblyFileName: OSIsoft.AF.Notification.DeliveryChannel.WebService.dll
        - AssemblyTime: 2016-05-25T14:01:07Z
          Path: "\\\\MyAssetServer\\PlugInsDeliveryChannel[WebService]"
          Description: Delivery channel for calling a web service
          WebException:
            Errors:
            - An error has occurred.
            StatusCode: 500
          LoadedAssemblyTime: 1970-01-01T00:00:00Z
          IsBrowsable: true
          Name: WebService
          IsNonEditableConfig: false
          LoadedVersion: ""
          Version: 2.10.0.8516
          WebId: F1DCDqD5loBNH0erqeqJodtALA1jVcFNf02UGGrgjlCY06lgUkVTVFVOSVRcUExVR0lOU0RFTElWRVJZQ0hBTk5FTFtXRUJTRVJWSUNFXQ
          AssemblyID: 0b450496-63f6-4207-b4c5-2c1c73ca897a
          AssemblyLoadProperties:
          - NET4
          - SDK_NET4
          CompatibilityVersion: 2
          Links:
            Self: Self
            AssetServer: AssetServer
          Id: 145c35d6-f4d7-41d9-86ae-08e5098d3a96
          AssemblyFileName: OSIsoft.AF.Notification.DeliveryChannel.WebService.dll
      properties:
        Items:
          items:
            $ref: '#/components/schemas/NotificationPlugIn'
          title: Items
          type: array
        Links:
          $ref: '#/components/schemas/PaginationLinks'
      title: "Items[NotificationPlugIn]"
      type: object
    Items[NotificationRuleSubscriber]:
      example:
        Links:
          Last: Last
          Next: Next
          Previous: Previous
          First: First
        Items:
        - Path: "\\\\MyAssetServer\\MyDatabase\\NotificationRules[NotificationSubscriptionRuleName]"
          ConfigString: ToEmail=mike@testemail.com
          NotifyOption: EventStart
          ContactType: Individual
          Description: Manufacturing Machine MachineName subscription
          WebException:
            Errors:
            - An error has occurred.
            StatusCode: 500
          MaximumRetries: 3
          Name: NotificationSubscriptionRuleName
          EscalationTimeout: PT3S
          ContactTemplateName: Plant Manager
          WebId: I1NSLDqD5loBNH0erqeqJodtALA5bYfWno26BGgMQAVXYR0AgPUJJXNlEW1w78rnCXDmcDA
          Id: e9a984d0-f47c-11e7-8454-00155d029708
          RetryInterval: PT3S
          PlugInName: Email
          DeliveryFormatName: DeliveryFormat
        - Path: "\\\\MyAssetServer\\MyDatabase\\NotificationRules[NotificationSubscriptionRuleName]"
          ConfigString: ToEmail=mike@testemail.com
          NotifyOption: EventStart
          ContactType: Individual
          Description: Manufacturing Machine MachineName subscription
          WebException:
            Errors:
            - An error has occurred.
            StatusCode: 500
          MaximumRetries: 3
          Name: NotificationSubscriptionRuleName
          EscalationTimeout: PT3S
          ContactTemplateName: Plant Manager
          WebId: I1NSLDqD5loBNH0erqeqJodtALA5bYfWno26BGgMQAVXYR0AgPUJJXNlEW1w78rnCXDmcDA
          Id: e9a984d0-f47c-11e7-8454-00155d029708
          RetryInterval: PT3S
          PlugInName: Email
          DeliveryFormatName: DeliveryFormat
      properties:
        Items:
          items:
            $ref: '#/components/schemas/NotificationRuleSubscriber'
          title: Items
          type: array
        Links:
          $ref: '#/components/schemas/PaginationLinks'
      title: "Items[NotificationRuleSubscriber]"
      type: object
    Items[NotificationRuleTemplate]:
      example:
        Links:
          Last: Last
          Next: Next
          Previous: Previous
          First: First
        Items:
        - Path: "\\\\MyAssetServer\\MyDatabase\\CityName\\ElementTemplates[Template3]\\\
            NotificationRuleTemplates[Notification Rule Template]"
          Status: Functioning
          MultiTriggerEventOption: HighestSeverity
          Description: Description entered by the user
          WebException:
            Errors:
            - An error has occurred.
            StatusCode: 500
          ResendInterval: PT5S
          Criteria: "Name: EventFrameCriteriaName"
          Name: MachineName
          CategoryNames:
          - MachineNameAlerts
          WebId: I1NTDqD5loBNH0erqeqJodtALAtdcX5JH_5xGEKAAVXTSaAg
          TemplateName: MachineName Notification Rule Template
          Id: e9a984d0-f47c-11e7-8454-00155d029708
          NonrepetitionInterval: PT3S
        - Path: "\\\\MyAssetServer\\MyDatabase\\CityName\\ElementTemplates[Template3]\\\
            NotificationRuleTemplates[Notification Rule Template]"
          Status: Functioning
          MultiTriggerEventOption: HighestSeverity
          Description: Description entered by the user
          WebException:
            Errors:
            - An error has occurred.
            StatusCode: 500
          ResendInterval: PT5S
          Criteria: "Name: EventFrameCriteriaName"
          Name: MachineName
          CategoryNames:
          - MachineNameAlerts
          WebId: I1NTDqD5loBNH0erqeqJodtALAtdcX5JH_5xGEKAAVXTSaAg
          TemplateName: MachineName Notification Rule Template
          Id: e9a984d0-f47c-11e7-8454-00155d029708
          NonrepetitionInterval: PT3S
      properties:
        Items:
          items:
            $ref: '#/components/schemas/NotificationRuleTemplate'
          title: Items
          type: array
        Links:
          $ref: '#/components/schemas/PaginationLinks'
      title: "Items[NotificationRuleTemplate]"
      type: object
    Items[NotificationRule]:
      example:
        Links:
          Last: Last
          Next: Next
          Previous: Previous
          First: First
        Items:
        - Path: "\\\\MyAssetServer\\MyDatabase\\CityName\\EngineeringProcess\\Equipment\\\
            MachineName\\NotificationRules[RuleName]"
          Status: Disabled
          MultiTriggerEventOption: HighestSeverity
          Description: Manufacturing Equipment MachineName
          WebException:
            Errors:
            - An error has occurred.
            StatusCode: 500
          ResendInterval: PT5S
          Criteria: "Name: EventFrameCriteriaName"
          Name: MachineName
          CategoryNames:
          - Equipment Assets
          AutoCreated: true
          WebId: I1NRDqD5loBNH0erqeqJodtALA5bYfWno26BGgMQAVXYR0Ag
          TemplateName: MachineName Notification Rule
          Id: e9a984d0-f47c-11e7-8454-00155d029708
          NonrepetitionInterval: PT3S
        - Path: "\\\\MyAssetServer\\MyDatabase\\CityName\\EngineeringProcess\\Equipment\\\
            MachineName\\NotificationRules[RuleName]"
          Status: Disabled
          MultiTriggerEventOption: HighestSeverity
          Description: Manufacturing Equipment MachineName
          WebException:
            Errors:
            - An error has occurred.
            StatusCode: 500
          ResendInterval: PT5S
          Criteria: "Name: EventFrameCriteriaName"
          Name: MachineName
          CategoryNames:
          - Equipment Assets
          AutoCreated: true
          WebId: I1NRDqD5loBNH0erqeqJodtALA5bYfWno26BGgMQAVXYR0Ag
          TemplateName: MachineName Notification Rule
          Id: e9a984d0-f47c-11e7-8454-00155d029708
          NonrepetitionInterval: PT3S
      properties:
        Items:
          items:
            $ref: '#/components/schemas/NotificationRule'
          title: Items
          type: array
        Links:
          $ref: '#/components/schemas/PaginationLinks'
      title: "Items[NotificationRule]"
      type: object
    Items[PointAttribute]:
      example:
        Links:
          Last: Last
          Next: Next
          Previous: Previous
          First: First
        Items:
        - WebException:
            Errors:
            - An error has occurred.
            StatusCode: 500
          Value: 50
          Links:
            Point: Point
            Self: Self
          Name: typicalvalue
        - WebException:
            Errors:
            - An error has occurred.
            StatusCode: 500
          Value: 50
          Links:
            Point: Point
            Self: Self
          Name: typicalvalue
      properties:
        Items:
          items:
            $ref: '#/components/schemas/PointAttribute'
          title: Items
          type: array
        Links:
          $ref: '#/components/schemas/PaginationLinks'
      title: "Items[PointAttribute]"
      type: object
    Items[Point]:
      example:
        Links:
          Last: Last
          Next: Next
          Previous: Previous
          First: First
        Items:
        - Path: \\MyPIServer\PointName
          Zero: 0.0
          WebException:
            Errors:
            - An error has occurred.
            StatusCode: 500
          DisplayDigits: -5
          Step: false
          Span: 100.0
          Name: PointName
          PointClass: classic
          WebId: I1DPa70Wf0zBA06CLkV9ovNQgQCAAAAA
          Descriptor: 12 Hour Sine Wave
          Future: false
          Links:
            PlotData: PlotData
            DataServer: DataServer
            Attributes: Attributes
            SummaryData: SummaryData
            Value: Value
            EndValue: EndValue
            Self: Self
            InterpolatedData: InterpolatedData
            RecordedData: RecordedData
          PointType: Float32
          Id: 82
          DigitalSetName: ""
          EngineeringUnits: ""
        - Path: \\MyPIServer\PointName
          Zero: 0.0
          WebException:
            Errors:
            - An error has occurred.
            StatusCode: 500
          DisplayDigits: -5
          Step: false
          Span: 100.0
          Name: PointName
          PointClass: classic
          WebId: I1DPa70Wf0zBA06CLkV9ovNQgQCAAAAA
          Descriptor: 12 Hour Sine Wave
          Future: false
          Links:
            PlotData: PlotData
            DataServer: DataServer
            Attributes: Attributes
            SummaryData: SummaryData
            Value: Value
            EndValue: EndValue
            Self: Self
            InterpolatedData: InterpolatedData
            RecordedData: RecordedData
          PointType: Float32
          Id: 82
          DigitalSetName: ""
          EngineeringUnits: ""
      properties:
        Items:
          items:
            $ref: '#/components/schemas/Point'
          title: Items
          type: array
        Links:
          $ref: '#/components/schemas/PaginationLinks'
      title: "Items[Point]"
      type: object
    Items[SecurityEntry]:
      example:
        Links:
          Last: Last
          Next: Next
          Previous: Previous
          First: First
        Items:
        - WebException:
            Errors:
            - An error has occurred.
            StatusCode: 500
          AllowRights:
          - Read
          - ReadData
          DenyRights:
          - Write
          - Execute
          - Admin
          Links:
            SecurableObject: SecurableObject
            SecurityIdentity: SecurityIdentity
            Self: Self
          SecurityIdentityName: domain\user1
          Name: domain\user1
        - WebException:
            Errors:
            - An error has occurred.
            StatusCode: 500
          AllowRights:
          - Read
          - ReadData
          DenyRights:
          - Write
          - Execute
          - Admin
          Links:
            SecurableObject: SecurableObject
            SecurityIdentity: SecurityIdentity
            Self: Self
          SecurityIdentityName: domain\user1
          Name: domain\user1
      properties:
        Items:
          items:
            $ref: '#/components/schemas/SecurityEntry'
          title: Items
          type: array
        Links:
          $ref: '#/components/schemas/PaginationLinks'
      title: "Items[SecurityEntry]"
      type: object
    Items[SecurityIdentity]:
      example:
        Links:
          Last: Last
          Next: Next
          Previous: Previous
          First: First
        Items:
        - Path: "\\\\MyAssetServer\\SecurityIdentities[MySecurityIdentity]"
          Description: ""
          WebException:
            Errors:
            - An error has occurred.
            StatusCode: 500
          IsEnabled: true
          WebId: I1SIDqD5loBNH0erqeqJodtALASe6l8zgYokqdeeFilFI9tw
          Links:
            SecurityEntries: SecurityEntries
            SecurityMappings: SecurityMappings
            Self: Self
            Security: Security
            AssetServer: AssetServer
          Id: f3a5ee49-1838-4aa2-9d79-e16294523db7
          Name: MySecurityIdentity
        - Path: "\\\\MyAssetServer\\SecurityIdentities[MySecurityIdentity]"
          Description: ""
          WebException:
            Errors:
            - An error has occurred.
            StatusCode: 500
          IsEnabled: true
          WebId: I1SIDqD5loBNH0erqeqJodtALASe6l8zgYokqdeeFilFI9tw
          Links:
            SecurityEntries: SecurityEntries
            SecurityMappings: SecurityMappings
            Self: Self
            Security: Security
            AssetServer: AssetServer
          Id: f3a5ee49-1838-4aa2-9d79-e16294523db7
          Name: MySecurityIdentity
      properties:
        Items:
          items:
            $ref: '#/components/schemas/SecurityIdentity'
          title: Items
          type: array
        Links:
          $ref: '#/components/schemas/PaginationLinks'
      title: "Items[SecurityIdentity]"
      type: object
    Items[SecurityMapping]:
      example:
        Links:
          Last: Last
          Next: Next
          Previous: Previous
          First: First
        Items:
        - Path: "\\\\MyAssetServer\\SecurityMappings[MySecurityMapping]"
          Account: domain\user
          Description: ""
          WebException:
            Errors:
            - An error has occurred.
            StatusCode: 500
          WebId: I1SMDqD5loBNH0erqeqJodtALAgu8UrMAZB0qWp9H7C4TAXQ
          SecurityIdentityWebId: I1SIEDqD5loBNH0erqeqJodtALAYIKyyz2F5BGAxQAVXYRDBAGyPedZG1sUmxOOclp3Flwg
          Links:
            SecurityIdentity: SecurityIdentity
            SecurityEntries: SecurityEntries
            Self: Self
            Security: Security
            AssetServer: AssetServer
          Id: ac14ef82-19c0-4a07-96a7-d1fb0b84c05d
          Name: MySecurityMapping
        - Path: "\\\\MyAssetServer\\SecurityMappings[MySecurityMapping]"
          Account: domain\user
          Description: ""
          WebException:
            Errors:
            - An error has occurred.
            StatusCode: 500
          WebId: I1SMDqD5loBNH0erqeqJodtALAgu8UrMAZB0qWp9H7C4TAXQ
          SecurityIdentityWebId: I1SIEDqD5loBNH0erqeqJodtALAYIKyyz2F5BGAxQAVXYRDBAGyPedZG1sUmxOOclp3Flwg
          Links:
            SecurityIdentity: SecurityIdentity
            SecurityEntries: SecurityEntries
            Self: Self
            Security: Security
            AssetServer: AssetServer
          Id: ac14ef82-19c0-4a07-96a7-d1fb0b84c05d
          Name: MySecurityMapping
      properties:
        Items:
          items:
            $ref: '#/components/schemas/SecurityMapping'
          title: Items
          type: array
        Links:
          $ref: '#/components/schemas/PaginationLinks'
      title: "Items[SecurityMapping]"
      type: object
    Items[SecurityRights]:
      example:
        Links:
          Last: Last
          Next: Next
          Previous: Previous
          First: First
        Items:
        - SecurityItem: Default
          CanReadData: true
          WebException:
            Errors:
            - An error has occurred.
            StatusCode: 500
          HasAdmin: true
          UserIdentity: domain\user
          CanDelete: true
          CanAnnotate: true
          CanSubscribe: true
          CanSubscribeOthers: true
          OwnerWebId: I1EmDqD5loBNH0erqeqJodtALAYIKyyz2F5BGAxQAVXYRDBA
          CanWrite: true
          Rights:
          - Read
          - WriteData
          CanWriteData: true
          Links:
            Owner: Owner
            Self: Self
          CanRead: true
          CanExecute: true
        - SecurityItem: Default
          CanReadData: true
          WebException:
            Errors:
            - An error has occurred.
            StatusCode: 500
          HasAdmin: true
          UserIdentity: domain\user
          CanDelete: true
          CanAnnotate: true
          CanSubscribe: true
          CanSubscribeOthers: true
          OwnerWebId: I1EmDqD5loBNH0erqeqJodtALAYIKyyz2F5BGAxQAVXYRDBA
          CanWrite: true
          Rights:
          - Read
          - WriteData
          CanWriteData: true
          Links:
            Owner: Owner
            Self: Self
          CanRead: true
          CanExecute: true
      properties:
        Items:
          items:
            $ref: '#/components/schemas/SecurityRights'
          title: Items
          type: array
        Links:
          $ref: '#/components/schemas/PaginationLinks'
      title: "Items[SecurityRights]"
      type: object
    Items[StreamSummaries]:
      example:
        Links:
          Last: Last
          Next: Next
          Previous: Previous
          First: First
        Items:
        - Path: \\MyAssetServer\MyDatabase\MyElement|Water
          WebException:
            Errors:
            - An error has occurred.
            StatusCode: 500
          WebId: I1AbEDqD5loBNH0erqeqJodtALAYIKyyz2F5BGAxQAVXYRDBAGyPedZG1sUmxOOclp3Flwg
          Links:
            Source: Source
          Items:
          - Type: Total
            WebException:
              Errors:
              - An error has occurred.
              StatusCode: 500
            Value:
              Annotated: false
              Errors:
              - Message:
                - An error has occurred.
                FieldName: Value
              - Message:
                - An error has occurred.
                FieldName: Value
              UnitsAbbreviation: m
              Substituted: false
              WebException:
                Errors:
                - An error has occurred.
                StatusCode: 500
              Value: 12.3
              Good: true
              Timestamp: 2014-07-22T14:00:00Z
              Questionable: false
          - Type: Total
            WebException:
              Errors:
              - An error has occurred.
              StatusCode: 500
            Value:
              Annotated: false
              Errors:
              - Message:
                - An error has occurred.
                FieldName: Value
              - Message:
                - An error has occurred.
                FieldName: Value
              UnitsAbbreviation: m
              Substituted: false
              WebException:
                Errors:
                - An error has occurred.
                StatusCode: 500
              Value: 12.3
              Good: true
              Timestamp: 2014-07-22T14:00:00Z
              Questionable: false
          Name: Water
        - Path: \\MyAssetServer\MyDatabase\MyElement|Water
          WebException:
            Errors:
            - An error has occurred.
            StatusCode: 500
          WebId: I1AbEDqD5loBNH0erqeqJodtALAYIKyyz2F5BGAxQAVXYRDBAGyPedZG1sUmxOOclp3Flwg
          Links:
            Source: Source
          Items:
          - Type: Total
            WebException:
              Errors:
              - An error has occurred.
              StatusCode: 500
            Value:
              Annotated: false
              Errors:
              - Message:
                - An error has occurred.
                FieldName: Value
              - Message:
                - An error has occurred.
                FieldName: Value
              UnitsAbbreviation: m
              Substituted: false
              WebException:
                Errors:
                - An error has occurred.
                StatusCode: 500
              Value: 12.3
              Good: true
              Timestamp: 2014-07-22T14:00:00Z
              Questionable: false
          - Type: Total
            WebException:
              Errors:
              - An error has occurred.
              StatusCode: 500
            Value:
              Annotated: false
              Errors:
              - Message:
                - An error has occurred.
                FieldName: Value
              - Message:
                - An error has occurred.
                FieldName: Value
              UnitsAbbreviation: m
              Substituted: false
              WebException:
                Errors:
                - An error has occurred.
                StatusCode: 500
              Value: 12.3
              Good: true
              Timestamp: 2014-07-22T14:00:00Z
              Questionable: false
          Name: Water
      properties:
        Items:
          items:
            $ref: '#/components/schemas/StreamSummaries'
          title: Items
          type: array
        Links:
          $ref: '#/components/schemas/PaginationLinks'
      title: "Items[StreamSummaries]"
      type: object
    Items[StreamUpdatesRegister]:
      example:
        Links:
          Last: Last
          Next: Next
          Previous: Previous
          First: First
        Items:
        - SourcePath: \\MyAssetServer\MyDatabase\MyElement|Water
          Status: Succeeded
          LatestMarker: 0cbbec466f3a42288c8c47112f54b852_12
          SourceName: Water
          Exception:
            Errors:
            - An error has occurred.
          Source: I1AbEDqD5loBNH0erqeqJodtALA9iLxz4m_5RGAxgAVXYUACw_yrS377vX0uZVHTgkanusw
        - SourcePath: \\MyAssetServer\MyDatabase\MyElement|Water
          Status: Succeeded
          LatestMarker: 0cbbec466f3a42288c8c47112f54b852_12
          SourceName: Water
          Exception:
            Errors:
            - An error has occurred.
          Source: I1AbEDqD5loBNH0erqeqJodtALA9iLxz4m_5RGAxgAVXYUACw_yrS377vX0uZVHTgkanusw
      properties:
        Items:
          items:
            $ref: '#/components/schemas/StreamUpdatesRegister'
          title: Items
          type: array
        Links:
          $ref: '#/components/schemas/PaginationLinks'
      title: "Items[StreamUpdatesRegister]"
      type: object
    Items[StreamUpdatesRetrieve]:
      example:
        Links:
          Last: Last
          Next: Next
          Previous: Previous
          First: First
        Items:
        - SourcePath: \\MyAssetServer\MyDatabase\MyElement|Water
          Status: Created
          Events:
          - Annotated: false
            Errors:
            - Message:
              - An error has occurred.
              FieldName: Value
            - Message:
              - An error has occurred.
              FieldName: Value
            UnitsAbbreviation: m
            Action: Add
            Substituted: false
            WebException:
              Errors:
              - An error has occurred.
              StatusCode: 500
            Value: 12.3
            Good: true
            PreviousEventAction: PreviousEventArchived
            Timestamp: 2014-07-22T14:00:00Z
            Questionable: false
          - Annotated: false
            Errors:
            - Message:
              - An error has occurred.
              FieldName: Value
            - Message:
              - An error has occurred.
              FieldName: Value
            UnitsAbbreviation: m
            Action: Add
            Substituted: false
            WebException:
              Errors:
              - An error has occurred.
              StatusCode: 500
            Value: 12.3
            Good: true
            PreviousEventAction: PreviousEventArchived
            Timestamp: 2014-07-22T14:00:00Z
            Questionable: false
          LatestMarker: 0cbbec466f3a42288c8c47112f54b852_12
          RequestedMarker: 0cbbec466f3a42288c8c47112f54b852_0
          SourceName: Water
          Exception:
            Errors:
            - An error has occurred.
          Source: I1AbEDqD5loBNH0erqeqJodtALAYIKyyz2F5BGAxQAVXYRDBAGyPedZG1sUmxOOclp3Flwg
        - SourcePath: \\MyAssetServer\MyDatabase\MyElement|Water
          Status: Created
          Events:
          - Annotated: false
            Errors:
            - Message:
              - An error has occurred.
              FieldName: Value
            - Message:
              - An error has occurred.
              FieldName: Value
            UnitsAbbreviation: m
            Action: Add
            Substituted: false
            WebException:
              Errors:
              - An error has occurred.
              StatusCode: 500
            Value: 12.3
            Good: true
            PreviousEventAction: PreviousEventArchived
            Timestamp: 2014-07-22T14:00:00Z
            Questionable: false
          - Annotated: false
            Errors:
            - Message:
              - An error has occurred.
              FieldName: Value
            - Message:
              - An error has occurred.
              FieldName: Value
            UnitsAbbreviation: m
            Action: Add
            Substituted: false
            WebException:
              Errors:
              - An error has occurred.
              StatusCode: 500
            Value: 12.3
            Good: true
            PreviousEventAction: PreviousEventArchived
            Timestamp: 2014-07-22T14:00:00Z
            Questionable: false
          LatestMarker: 0cbbec466f3a42288c8c47112f54b852_12
          RequestedMarker: 0cbbec466f3a42288c8c47112f54b852_0
          SourceName: Water
          Exception:
            Errors:
            - An error has occurred.
          Source: I1AbEDqD5loBNH0erqeqJodtALAYIKyyz2F5BGAxQAVXYRDBAGyPedZG1sUmxOOclp3Flwg
      properties:
        Items:
          items:
            $ref: '#/components/schemas/StreamUpdatesRetrieve'
          title: Items
          type: array
        Links:
          $ref: '#/components/schemas/PaginationLinks'
      title: "Items[StreamUpdatesRetrieve]"
      type: object
    Items[StreamValue]:
      example:
        Links:
          Last: Last
          Next: Next
          Previous: Previous
          First: First
        Items:
        - Path: \\MyAssetServer\MyDatabase\MyElement|Water
          WebException:
            Errors:
            - An error has occurred.
            StatusCode: 500
          WebId: I1AbEDqD5loBNH0erqeqJodtALAYIKyyz2F5BGAxQAVXYRDBAGyPedZG1sUmxOOclp3Flwg
          Value:
            Annotated: false
            Errors:
            - Message:
              - An error has occurred.
              FieldName: Value
            - Message:
              - An error has occurred.
              FieldName: Value
            UnitsAbbreviation: m
            Substituted: false
            WebException:
              Errors:
              - An error has occurred.
              StatusCode: 500
            Value: 12.3
            Good: true
            Timestamp: 2014-07-22T14:00:00Z
            Questionable: false
          Links:
            Source: Source
          Name: Water
        - Path: \\MyAssetServer\MyDatabase\MyElement|Water
          WebException:
            Errors:
            - An error has occurred.
            StatusCode: 500
          WebId: I1AbEDqD5loBNH0erqeqJodtALAYIKyyz2F5BGAxQAVXYRDBAGyPedZG1sUmxOOclp3Flwg
          Value:
            Annotated: false
            Errors:
            - Message:
              - An error has occurred.
              FieldName: Value
            - Message:
              - An error has occurred.
              FieldName: Value
            UnitsAbbreviation: m
            Substituted: false
            WebException:
              Errors:
              - An error has occurred.
              StatusCode: 500
            Value: 12.3
            Good: true
            Timestamp: 2014-07-22T14:00:00Z
            Questionable: false
          Links:
            Source: Source
          Name: Water
      properties:
        Items:
          items:
            $ref: '#/components/schemas/StreamValue'
          title: Items
          type: array
        Links:
          $ref: '#/components/schemas/PaginationLinks'
      title: "Items[StreamValue]"
      type: object
    Items[StreamValues]:
      example:
        Links:
          Last: Last
          Next: Next
          Previous: Previous
          First: First
        Items:
        - Path: \\MyAssetServer\MyDatabase\MyElement|Water
          UnitsAbbreviation: m
          WebException:
            Errors:
            - An error has occurred.
            StatusCode: 500
          WebId: I1AbEDqD5loBNH0erqeqJodtALAYIKyyz2F5BGAxQAVXYRDBAGyPedZG1sUmxOOclp3Flwg
          Links:
            Source: Source
          Items:
          - Annotated: false
            Errors:
            - Message:
              - An error has occurred.
              FieldName: Value
            - Message:
              - An error has occurred.
              FieldName: Value
            UnitsAbbreviation: m
            Substituted: false
            WebException:
              Errors:
              - An error has occurred.
              StatusCode: 500
            Value: 12.3
            Good: true
            Timestamp: 2014-07-22T14:00:00Z
            Questionable: false
          - Annotated: false
            Errors:
            - Message:
              - An error has occurred.
              FieldName: Value
            - Message:
              - An error has occurred.
              FieldName: Value
            UnitsAbbreviation: m
            Substituted: false
            WebException:
              Errors:
              - An error has occurred.
              StatusCode: 500
            Value: 12.3
            Good: true
            Timestamp: 2014-07-22T14:00:00Z
            Questionable: false
          Name: Water
        - Path: \\MyAssetServer\MyDatabase\MyElement|Water
          UnitsAbbreviation: m
          WebException:
            Errors:
            - An error has occurred.
            StatusCode: 500
          WebId: I1AbEDqD5loBNH0erqeqJodtALAYIKyyz2F5BGAxQAVXYRDBAGyPedZG1sUmxOOclp3Flwg
          Links:
            Source: Source
          Items:
          - Annotated: false
            Errors:
            - Message:
              - An error has occurred.
              FieldName: Value
            - Message:
              - An error has occurred.
              FieldName: Value
            UnitsAbbreviation: m
            Substituted: false
            WebException:
              Errors:
              - An error has occurred.
              StatusCode: 500
            Value: 12.3
            Good: true
            Timestamp: 2014-07-22T14:00:00Z
            Questionable: false
          - Annotated: false
            Errors:
            - Message:
              - An error has occurred.
              FieldName: Value
            - Message:
              - An error has occurred.
              FieldName: Value
            UnitsAbbreviation: m
            Substituted: false
            WebException:
              Errors:
              - An error has occurred.
              StatusCode: 500
            Value: 12.3
            Good: true
            Timestamp: 2014-07-22T14:00:00Z
            Questionable: false
          Name: Water
      properties:
        Items:
          items:
            $ref: '#/components/schemas/StreamValues'
          title: Items
          type: array
        Links:
          $ref: '#/components/schemas/PaginationLinks'
      title: "Items[StreamValues]"
      type: object
    Items[Substatus]:
      example:
        Links:
          Last: Last
          Next: Next
          Previous: Previous
          First: First
        Items:
        - WebException:
            Errors:
            - An error has occurred.
            StatusCode: 500
          Message: Message
          Substatus: 200
        - WebException:
            Errors:
            - An error has occurred.
            StatusCode: 500
          Message: Message
          Substatus: 200
      properties:
        Items:
          items:
            $ref: '#/components/schemas/Substatus'
          title: Items
          type: array
        Links:
          $ref: '#/components/schemas/PaginationLinks'
      title: "Items[Substatus]"
      type: object
    Items[SummaryValue]:
      example:
        Links:
          Last: Last
          Next: Next
          Previous: Previous
          First: First
        Items:
        - Type: Total
          WebException:
            Errors:
            - An error has occurred.
            StatusCode: 500
          Value:
            Annotated: false
            Errors:
            - Message:
              - An error has occurred.
              FieldName: Value
            - Message:
              - An error has occurred.
              FieldName: Value
            UnitsAbbreviation: m
            Substituted: false
            WebException:
              Errors:
              - An error has occurred.
              StatusCode: 500
            Value: 12.3
            Good: true
            Timestamp: 2014-07-22T14:00:00Z
            Questionable: false
        - Type: Total
          WebException:
            Errors:
            - An error has occurred.
            StatusCode: 500
          Value:
            Annotated: false
            Errors:
            - Message:
              - An error has occurred.
              FieldName: Value
            - Message:
              - An error has occurred.
              FieldName: Value
            UnitsAbbreviation: m
            Substituted: false
            WebException:
              Errors:
              - An error has occurred.
              StatusCode: 500
            Value: 12.3
            Good: true
            Timestamp: 2014-07-22T14:00:00Z
            Questionable: false
      properties:
        Items:
          items:
            $ref: '#/components/schemas/SummaryValue'
          title: Items
          type: array
        Links:
          $ref: '#/components/schemas/PaginationLinks'
      title: "Items[SummaryValue]"
      type: object
    Items[TableCategory]:
      example:
        Links:
          Last: Last
          Next: Next
          Previous: Previous
          First: First
        Items:
        - Path: "\\\\MyAssetServer\\Database\\CategoriesTable[CategoryName]"
          Description: Relative energy use per ton of process feed.
          WebException:
            Errors:
            - An error has occurred.
            StatusCode: 500
          WebId: I1BCDqD5loBNH0erqeqJodtALAwgzHiSFSd06HP4lKPqYefQ
          Links:
            SecurityEntries: SecurityEntries
            Database: Database
            Self: Self
            Security: Security
          Id: 89c70cc2-5221-4e77-873f-894a3ea61e7d
          Name: CategoryName
        - Path: "\\\\MyAssetServer\\Database\\CategoriesTable[CategoryName]"
          Description: Relative energy use per ton of process feed.
          WebException:
            Errors:
            - An error has occurred.
            StatusCode: 500
          WebId: I1BCDqD5loBNH0erqeqJodtALAwgzHiSFSd06HP4lKPqYefQ
          Links:
            SecurityEntries: SecurityEntries
            Database: Database
            Self: Self
            Security: Security
          Id: 89c70cc2-5221-4e77-873f-894a3ea61e7d
          Name: CategoryName
      properties:
        Items:
          items:
            $ref: '#/components/schemas/TableCategory'
          title: Items
          type: array
        Links:
          $ref: '#/components/schemas/PaginationLinks'
      title: "Items[TableCategory]"
      type: object
    Items[Table]:
      example:
        Links:
          Last: Last
          Next: Next
          Previous: Previous
          First: First
        Items:
        - Path: "\\\\MyAssetServer\\MyDatabase\\Tables[CarInfo]"
          TimeZone: Eastern Standard Time
          CategoryNames:
          - Table Category
          Description: Table of car info.
          WebException:
            Errors:
            - An error has occurred.
            StatusCode: 500
          ConvertToLocalTime: false
          WebId: I1BlDqD5loBNH0erqeqJodtALAmLr4X86Jmkeynt3QVwlqXw
          Links:
            SecurityEntries: SecurityEntries
            Categories: Categories
            Database: Database
            Data: Data
            Self: Self
            Security: Security
          Id: 5ff8ba98-89ce-479a-b29e-ddd057096a5f
          Name: CarInfo
        - Path: "\\\\MyAssetServer\\MyDatabase\\Tables[CarInfo]"
          TimeZone: Eastern Standard Time
          CategoryNames:
          - Table Category
          Description: Table of car info.
          WebException:
            Errors:
            - An error has occurred.
            StatusCode: 500
          ConvertToLocalTime: false
          WebId: I1BlDqD5loBNH0erqeqJodtALAmLr4X86Jmkeynt3QVwlqXw
          Links:
            SecurityEntries: SecurityEntries
            Categories: Categories
            Database: Database
            Data: Data
            Self: Self
            Security: Security
          Id: 5ff8ba98-89ce-479a-b29e-ddd057096a5f
          Name: CarInfo
      properties:
        Items:
          items:
            $ref: '#/components/schemas/Table'
          title: Items
          type: array
        Links:
          $ref: '#/components/schemas/PaginationLinks'
      title: "Items[Table]"
      type: object
    Items[TimeRulePlugIn]:
      example:
        Links:
          Last: Last
          Next: Next
          Previous: Previous
          First: First
        Items:
        - AssemblyTime: 2016-05-25T14:01:07Z
          Path: "\\\\MyAssetServer\\PlugInsTimeRule[Periodic]"
          Description: Creates regular periodic time periods.
          WebException:
            Errors:
            - An error has occurred.
            StatusCode: 500
          LoadedAssemblyTime: 1970-01-01T00:00:00Z
          IsBrowsable: true
          Name: Periodic
          IsNonEditableConfig: false
          LoadedVersion: ""
          Version: 2.8.5.7552
          WebId: I1TPDqD5loBNH0erqeqJodtALAFPRV1lWW1kqmFRgvo4IAwQ
          AssemblyID: 7a635b27-3c3c-4a5f-bba9-01f06e9e525b
          AssemblyLoadProperties:
          - None
          CompatibilityVersion: 2
          Links:
            Self: Self
            AssetServer: AssetServer
          Id: d655f414-9655-4ad6-a615-182fa38200c1
          AssemblyFileName: OSIsoft.AF.Time.TimeRule.Periodic.dll
        - AssemblyTime: 2016-05-25T14:01:07Z
          Path: "\\\\MyAssetServer\\PlugInsTimeRule[Periodic]"
          Description: Creates regular periodic time periods.
          WebException:
            Errors:
            - An error has occurred.
            StatusCode: 500
          LoadedAssemblyTime: 1970-01-01T00:00:00Z
          IsBrowsable: true
          Name: Periodic
          IsNonEditableConfig: false
          LoadedVersion: ""
          Version: 2.8.5.7552
          WebId: I1TPDqD5loBNH0erqeqJodtALAFPRV1lWW1kqmFRgvo4IAwQ
          AssemblyID: 7a635b27-3c3c-4a5f-bba9-01f06e9e525b
          AssemblyLoadProperties:
          - None
          CompatibilityVersion: 2
          Links:
            Self: Self
            AssetServer: AssetServer
          Id: d655f414-9655-4ad6-a615-182fa38200c1
          AssemblyFileName: OSIsoft.AF.Time.TimeRule.Periodic.dll
      properties:
        Items:
          items:
            $ref: '#/components/schemas/TimeRulePlugIn'
          title: Items
          type: array
        Links:
          $ref: '#/components/schemas/PaginationLinks'
      title: "Items[TimeRulePlugIn]"
      type: object
    Items[UnitClass]:
      example:
        Links:
          Last: Last
          Next: Next
          Previous: Previous
          First: First
        Items:
        - Path: "\\\\MyAssetServer\\UOMDatabase\\UOMClasses[Power]"
          Description: Power Unit Class
          WebException:
            Errors:
            - An error has occurred.
            StatusCode: 500
          CanonicalUnitAbbreviation: W
          WebId: I1UCDqD5loBNH0erqeqJodtALATbkl-fxulEulDQAVw5HySQ
          Links:
            CanonicalUnit: CanonicalUnit
            Self: Self
            AssetServer: AssetServer
            Units: Units
          Id: f925b94d-6efc-4b94-a50d-0015c391f249
          CanonicalUnitName: watt
          Name: Power
        - Path: "\\\\MyAssetServer\\UOMDatabase\\UOMClasses[Power]"
          Description: Power Unit Class
          WebException:
            Errors:
            - An error has occurred.
            StatusCode: 500
          CanonicalUnitAbbreviation: W
          WebId: I1UCDqD5loBNH0erqeqJodtALATbkl-fxulEulDQAVw5HySQ
          Links:
            CanonicalUnit: CanonicalUnit
            Self: Self
            AssetServer: AssetServer
            Units: Units
          Id: f925b94d-6efc-4b94-a50d-0015c391f249
          CanonicalUnitName: watt
          Name: Power
      properties:
        Items:
          items:
            $ref: '#/components/schemas/UnitClass'
          title: Items
          type: array
        Links:
          $ref: '#/components/schemas/PaginationLinks'
      title: "Items[UnitClass]"
      type: object
    Items[string]:
      example:
        Items:
        - Items
        - Items
      properties:
        Items:
          items:
            type: string
          title: Items
          type: array
      title: "Items[string]"
      type: object
    Landing:
      example:
        WebException:
          Errors:
          - An error has occurred.
          StatusCode: 500
        Links:
          DataServers: DataServers
          Search: Search
          AssetServers: AssetServers
          Self: Self
          System: System
      properties:
        Links:
          $ref: '#/components/schemas/LandingLinks'
        WebException:
          $ref: '#/components/schemas/WebException'
      title: Landing
      type: object
    LandingLinks:
      example:
        DataServers: DataServers
        Search: Search
        AssetServers: AssetServers
        Self: Self
        System: System
      properties:
        AssetServers:
          title: AssetServers
          type: string
          x-link-path: assetservers
          x-link-optional: false
        DataServers:
          title: DataServers
          type: string
          x-link-path: dataservers
          x-link-optional: false
        Search:
          title: Search
          type: string
          x-link-path: search
          x-link-optional: false
        Self:
          title: Self
          type: string
          x-link-path: ""
          x-link-optional: false
        System:
          title: System
          type: string
          x-link-path: system
          x-link-optional: false
      title: LandingLinks
      type: object
    MediaMetadata:
      example:
        Description: The description attached to this media.
        WebException:
          Errors:
          - An error has occurred.
          StatusCode: 500
        Size: 86753098675309
        Author: DOMAIN\username
        ChangeDate: 2014-07-22T14:00:00Z
        Links:
          MediaData: MediaData
          Owner: Owner
          Self: Self
        Name: ExampleFile.txt
      properties:
        Author:
          example: DOMAIN\username
          title: Author
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        ChangeDate:
          example: 2014-07-22T14:00:00Z
          format: date-time
          title: ChangeDate
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        Description:
          example: The description attached to this media.
          title: Description
          type: string
        Links:
          $ref: '#/components/schemas/MediaMetadataLinks'
        Name:
          example: ExampleFile.txt
          title: Name
          type: string
        Size:
          example: 86753098675309
          title: Size
          type: number
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        WebException:
          $ref: '#/components/schemas/WebException'
      title: MediaMetadata
      type: object
    MediaMetadataLinks:
      example:
        MediaData: MediaData
        Owner: Owner
        Self: Self
      properties:
        MediaData:
          title: MediaData
          type: string
          x-link-optional: false
        Owner:
          title: Owner
          type: string
          x-link-optional: false
        Self:
          title: Self
          type: string
          x-link-optional: false
      title: MediaMetadataLinks
      type: object
    NotificationContactTemplate:
      example:
        Path: "\\\\MyAssetServer\\NotificationContactTemplates[Plant Manager]"
        ConfigString: ""
        NotifyWhenInstanceEnded: true
        ContactType: Individual
        Description: ""
        WebException:
          Errors:
          - An error has occurred.
          StatusCode: 500
        MaximumRetries: 5
        Name: Plant Manager
        HasChildren: false
        EscalationTimeout: PT3S
        WebId: I1NCEDqD5loBNH0erqeqJodtALAYIKyyz2F5BGAxQAVXYRDBAGyPedZG1sUmxOOclp3Flwg
        MinimumAcknowledgements: 2
        Links:
          SecurityEntries: SecurityEntries
          NotificationPlugIn: NotificationPlugIn
          NotificationContactTemplates: NotificationContactTemplates
          Self: Self
          Security: Security
          AssetServer: AssetServer
        Available: true
        Id: cbb28260-853d-11e4-80c5-00155d844304
        RetryInterval: PT5S
        PlugInName: ""
      properties:
        Available:
          example: true
          title: Available
          type: boolean
        ConfigString:
          example: ""
          title: ConfigString
          type: string
        ContactType:
          example: Individual
          title: ContactType
          type: string
        Description:
          example: ""
          title: Description
          type: string
        EscalationTimeout:
          example: PT3S
          format: Duration
          title: EscalationTimeout
          type: string
        HasChildren:
          example: false
          title: HasChildren
          type: boolean
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        Id:
          example: cbb28260-853d-11e4-80c5-00155d844304
          format: uuid
          title: Id
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        Links:
          $ref: '#/components/schemas/NotificationContactTemplateLinks'
        MaximumRetries:
          example: 5
          title: MaximumRetries
          type: integer
        MinimumAcknowledgements:
          example: 2
          title: MinimumAcknowledgements
          type: integer
        Name:
          example: Plant Manager
          title: Name
          type: string
          x-required-post: true
        NotifyWhenInstanceEnded:
          example: true
          title: NotifyWhenInstanceEnded
          type: boolean
        Path:
          example: "\\\\MyAssetServer\\NotificationContactTemplates[Plant Manager]"
          format: path
          title: Path
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        PlugInName:
          example: ""
          title: PlugInName
          type: string
        RetryInterval:
          example: PT5S
          format: Duration
          title: RetryInterval
          type: string
        WebException:
          $ref: '#/components/schemas/WebException'
        WebId:
          example: I1NCEDqD5loBNH0erqeqJodtALAYIKyyz2F5BGAxQAVXYRDBAGyPedZG1sUmxOOclp3Flwg
          format: webid
          title: WebId
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
      title: NotificationContactTemplate
      type: object
    NotificationContactTemplateLinks:
      example:
        SecurityEntries: SecurityEntries
        NotificationPlugIn: NotificationPlugIn
        NotificationContactTemplates: NotificationContactTemplates
        Self: Self
        Security: Security
        AssetServer: AssetServer
      properties:
        AssetServer:
          title: AssetServer
          type: string
          x-link-path: "assetservers/{webId}"
          x-link-optional: false
        NotificationContactTemplates:
          title: NotificationContactTemplates
          type: string
          x-link-path: "notificationcontacttemplates/{webId}/notificationcontacttemplates"
          x-link-optional: false
        NotificationPlugIn:
          title: NotificationPlugIn
          type: string
          x-link-path: "notificationplugins/{webId}"
          x-link-optional: true
        Security:
          title: Security
          type: string
          x-link-path: "notificationcontacttemplates/{webId}/security"
          x-link-optional: false
        SecurityEntries:
          title: SecurityEntries
          type: string
          x-link-path: "notificationcontacttemplates/{webId}/securityentries"
          x-link-optional: false
        Self:
          title: Self
          type: string
          x-link-path: "notificationcontacttemplates/{webId}"
          x-link-optional: false
      title: NotificationContactTemplateLinks
      type: object
    NotificationPlugIn:
      example:
        AssemblyTime: 2016-05-25T14:01:07Z
        Path: "\\\\MyAssetServer\\PlugInsDeliveryChannel[WebService]"
        Description: Delivery channel for calling a web service
        WebException:
          Errors:
          - An error has occurred.
          StatusCode: 500
        LoadedAssemblyTime: 1970-01-01T00:00:00Z
        IsBrowsable: true
        Name: WebService
        IsNonEditableConfig: false
        LoadedVersion: ""
        Version: 2.10.0.8516
        WebId: F1DCDqD5loBNH0erqeqJodtALA1jVcFNf02UGGrgjlCY06lgUkVTVFVOSVRcUExVR0lOU0RFTElWRVJZQ0hBTk5FTFtXRUJTRVJWSUNFXQ
        AssemblyID: 0b450496-63f6-4207-b4c5-2c1c73ca897a
        AssemblyLoadProperties:
        - NET4
        - SDK_NET4
        CompatibilityVersion: 2
        Links:
          Self: Self
          AssetServer: AssetServer
        Id: 145c35d6-f4d7-41d9-86ae-08e5098d3a96
        AssemblyFileName: OSIsoft.AF.Notification.DeliveryChannel.WebService.dll
      properties:
        AssemblyFileName:
          example: OSIsoft.AF.Notification.DeliveryChannel.WebService.dll
          title: AssemblyFileName
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        AssemblyID:
          example: 0b450496-63f6-4207-b4c5-2c1c73ca897a
          format: uuid
          title: AssemblyID
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        AssemblyLoadProperties:
          example:
          - NET4
          - SDK_NET4
          items:
            type: string
          title: AssemblyLoadProperties
          type: array
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        AssemblyTime:
          example: 2016-05-25T14:01:07Z
          format: date-time
          title: AssemblyTime
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        CompatibilityVersion:
          example: 2
          format: int32
          title: CompatibilityVersion
          type: integer
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        Description:
          example: Delivery channel for calling a web service
          title: Description
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        Id:
          example: 145c35d6-f4d7-41d9-86ae-08e5098d3a96
          format: uuid
          title: Id
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        IsBrowsable:
          example: true
          title: IsBrowsable
          type: boolean
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        IsNonEditableConfig:
          example: false
          title: IsNonEditableConfig
          type: boolean
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        Links:
          $ref: '#/components/schemas/DeliveryChannelPlugInLinks'
        LoadedAssemblyTime:
          example: 1970-01-01T00:00:00Z
          format: date-time
          title: LoadedAssemblyTime
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        LoadedVersion:
          example: ""
          title: LoadedVersion
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        Name:
          example: WebService
          title: Name
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        Path:
          example: "\\\\MyAssetServer\\PlugInsDeliveryChannel[WebService]"
          format: path
          title: Path
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        Version:
          example: 2.10.0.8516
          title: Version
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        WebException:
          $ref: '#/components/schemas/WebException'
        WebId:
          example: F1DCDqD5loBNH0erqeqJodtALA1jVcFNf02UGGrgjlCY06lgUkVTVFVOSVRcUExVR0lOU0RFTElWRVJZQ0hBTk5FTFtXRUJTRVJWSUNFXQ
          format: webid
          title: WebId
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
      title: NotificationPlugIn
      type: object
    NotificationRule:
      example:
        Path: "\\\\MyAssetServer\\MyDatabase\\CityName\\EngineeringProcess\\Equipment\\\
          MachineName\\NotificationRules[RuleName]"
        Status: Disabled
        MultiTriggerEventOption: HighestSeverity
        Description: Manufacturing Equipment MachineName
        WebException:
          Errors:
          - An error has occurred.
          StatusCode: 500
        ResendInterval: PT5S
        Criteria: "Name: EventFrameCriteriaName"
        Name: MachineName
        CategoryNames:
        - Equipment Assets
        AutoCreated: true
        WebId: I1NRDqD5loBNH0erqeqJodtALA5bYfWno26BGgMQAVXYR0Ag
        TemplateName: MachineName Notification Rule
        Id: e9a984d0-f47c-11e7-8454-00155d029708
        NonrepetitionInterval: PT3S
      properties:
        AutoCreated:
          example: true
          title: AutoCreated
          type: boolean
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        CategoryNames:
          example:
          - Equipment Assets
          items:
            type: string
          title: CategoryNames
          type: array
        Criteria:
          example: "Name: EventFrameCriteriaName"
          title: Criteria
          type: string
        Description:
          example: Manufacturing Equipment MachineName
          title: Description
          type: string
        Id:
          example: e9a984d0-f47c-11e7-8454-00155d029708
          format: uuid
          title: Id
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        MultiTriggerEventOption:
          example: HighestSeverity
          title: MultiTriggerEventOption
          type: string
        Name:
          example: MachineName
          title: Name
          type: string
          x-required-post: true
        NonrepetitionInterval:
          example: PT3S
          format: Duration
          title: NonrepetitionInterval
          type: string
        Path:
          example: "\\\\MyAssetServer\\MyDatabase\\CityName\\EngineeringProcess\\\
            Equipment\\MachineName\\NotificationRules[RuleName]"
          format: path
          title: Path
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        ResendInterval:
          example: PT5S
          format: Duration
          title: ResendInterval
          type: string
        Status:
          example: Disabled
          title: Status
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        TemplateName:
          example: MachineName Notification Rule
          title: TemplateName
          type: string
        WebException:
          $ref: '#/components/schemas/WebException'
        WebId:
          example: I1NRDqD5loBNH0erqeqJodtALA5bYfWno26BGgMQAVXYR0Ag
          format: webid
          title: WebId
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
      title: NotificationRule
      type: object
    NotificationRuleSubscriber:
      example:
        Path: "\\\\MyAssetServer\\MyDatabase\\NotificationRules[NotificationSubscriptionRuleName]"
        ConfigString: ToEmail=mike@testemail.com
        NotifyOption: EventStart
        ContactType: Individual
        Description: Manufacturing Machine MachineName subscription
        WebException:
          Errors:
          - An error has occurred.
          StatusCode: 500
        MaximumRetries: 3
        Name: NotificationSubscriptionRuleName
        EscalationTimeout: PT3S
        ContactTemplateName: Plant Manager
        WebId: I1NSLDqD5loBNH0erqeqJodtALA5bYfWno26BGgMQAVXYR0AgPUJJXNlEW1w78rnCXDmcDA
        Id: e9a984d0-f47c-11e7-8454-00155d029708
        RetryInterval: PT3S
        PlugInName: Email
        DeliveryFormatName: DeliveryFormat
      properties:
        ConfigString:
          example: ToEmail=mike@testemail.com
          title: ConfigString
          type: string
        ContactTemplateName:
          example: Plant Manager
          title: ContactTemplateName
          type: string
          x-disallow-patch: true
          x-required-post: true
          x-disallow-put: true
        ContactType:
          example: Individual
          title: ContactType
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        DeliveryFormatName:
          example: DeliveryFormat
          title: DeliveryFormatName
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        Description:
          example: Manufacturing Machine MachineName subscription
          title: Description
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        EscalationTimeout:
          example: PT3S
          format: Duration
          title: EscalationTimeout
          type: string
        Id:
          example: e9a984d0-f47c-11e7-8454-00155d029708
          format: uuid
          title: Id
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        MaximumRetries:
          example: 3
          title: MaximumRetries
          type: integer
        Name:
          example: NotificationSubscriptionRuleName
          title: Name
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        NotifyOption:
          example: EventStart
          title: NotifyOption
          type: string
        Path:
          example: "\\\\MyAssetServer\\MyDatabase\\NotificationRules[NotificationSubscriptionRuleName]"
          format: path
          title: Path
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        PlugInName:
          example: Email
          title: PlugInName
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        RetryInterval:
          example: PT3S
          format: Duration
          title: RetryInterval
          type: string
        WebException:
          $ref: '#/components/schemas/WebException'
        WebId:
          example: I1NSLDqD5loBNH0erqeqJodtALA5bYfWno26BGgMQAVXYR0AgPUJJXNlEW1w78rnCXDmcDA
          format: webid
          title: WebId
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
      title: NotificationRuleSubscriber
      type: object
    NotificationRuleTemplate:
      example:
        Path: "\\\\MyAssetServer\\MyDatabase\\CityName\\ElementTemplates[Template3]\\\
          NotificationRuleTemplates[Notification Rule Template]"
        Status: Functioning
        MultiTriggerEventOption: HighestSeverity
        Description: Description entered by the user
        WebException:
          Errors:
          - An error has occurred.
          StatusCode: 500
        ResendInterval: PT5S
        Criteria: "Name: EventFrameCriteriaName"
        Name: MachineName
        CategoryNames:
        - MachineNameAlerts
        WebId: I1NTDqD5loBNH0erqeqJodtALAtdcX5JH_5xGEKAAVXTSaAg
        TemplateName: MachineName Notification Rule Template
        Id: e9a984d0-f47c-11e7-8454-00155d029708
        NonrepetitionInterval: PT3S
      properties:
        CategoryNames:
          example:
          - MachineNameAlerts
          items:
            type: string
          title: CategoryNames
          type: array
        Criteria:
          example: "Name: EventFrameCriteriaName"
          title: Criteria
          type: string
        Description:
          example: Description entered by the user
          title: Description
          type: string
        Id:
          example: e9a984d0-f47c-11e7-8454-00155d029708
          format: uuid
          title: Id
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        MultiTriggerEventOption:
          example: HighestSeverity
          title: MultiTriggerEventOption
          type: string
        Name:
          example: MachineName
          title: Name
          type: string
          x-required-post: true
        NonrepetitionInterval:
          example: PT3S
          format: Duration
          title: NonrepetitionInterval
          type: string
        Path:
          example: "\\\\MyAssetServer\\MyDatabase\\CityName\\ElementTemplates[Template3]\\\
            NotificationRuleTemplates[Notification Rule Template]"
          format: path
          title: Path
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        ResendInterval:
          example: PT5S
          format: Duration
          title: ResendInterval
          type: string
        Status:
          example: Functioning
          title: Status
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        TemplateName:
          example: MachineName Notification Rule Template
          title: TemplateName
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        WebException:
          $ref: '#/components/schemas/WebException'
        WebId:
          example: I1NTDqD5loBNH0erqeqJodtALAtdcX5JH_5xGEKAAVXTSaAg
          format: webid
          title: WebId
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
      title: NotificationRuleTemplate
      type: object
    PIPointDataReference:
      example:
        Path: \\MyPIServer\PointName
        Zero: 0.0
        DisplayDigits: -5
        Step: false
        Span: 100.0
        Name: PointName
        PointClass: classic
        WebId: I1DPa70Wf0zBA06CLkV9ovNQgQCAAAAA
        Descriptor: 12 Hour Sine Wave
        Future: false
        PointType: Float32
        Id: 82
        DigitalSetName: ""
        EngineeringUnits: ""
      properties:
        Descriptor:
          example: 12 Hour Sine Wave
          title: Descriptor
          type: string
        DigitalSetName:
          example: ""
          title: DigitalSetName
          type: string
          x-disallow-patch: true
        DisplayDigits:
          example: -5
          title: DisplayDigits
          type: integer
        EngineeringUnits:
          example: ""
          title: EngineeringUnits
          type: string
        Future:
          example: false
          title: Future
          type: boolean
          x-disallow-patch: true
        Id:
          example: 82
          format: int32
          title: Id
          type: integer
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        Name:
          example: PointName
          title: Name
          type: string
          x-required-post: true
        Path:
          example: \\MyPIServer\PointName
          format: path
          title: Path
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        PointClass:
          example: classic
          title: PointClass
          type: string
          x-disallow-patch: true
          x-required-post: true
        PointType:
          example: Float32
          title: PointType
          type: string
          x-disallow-patch: true
          x-required-post: true
        Span:
          example: 100.0
          title: Span
          type: number
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        Step:
          example: false
          title: Step
          type: boolean
        WebId:
          example: I1DPa70Wf0zBA06CLkV9ovNQgQCAAAAA
          format: webid
          title: WebId
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        Zero:
          example: 0.0
          title: Zero
          type: number
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
      title: PIPointDataReference
      type: object
    PaginationLinks:
      example:
        Last: Last
        Next: Next
        Previous: Previous
        First: First
      properties:
        First:
          title: First
          type: string
          x-link-optional: true
        Last:
          title: Last
          type: string
          x-link-optional: true
        Next:
          title: Next
          type: string
          x-link-optional: true
        Previous:
          title: Previous
          type: string
          x-link-optional: true
      title: PaginationLinks
      type: object
    Point:
      example:
        Path: \\MyPIServer\PointName
        Zero: 0.0
        WebException:
          Errors:
          - An error has occurred.
          StatusCode: 500
        DisplayDigits: -5
        Step: false
        Span: 100.0
        Name: PointName
        PointClass: classic
        WebId: I1DPa70Wf0zBA06CLkV9ovNQgQCAAAAA
        Descriptor: 12 Hour Sine Wave
        Future: false
        Links:
          PlotData: PlotData
          DataServer: DataServer
          Attributes: Attributes
          SummaryData: SummaryData
          Value: Value
          EndValue: EndValue
          Self: Self
          InterpolatedData: InterpolatedData
          RecordedData: RecordedData
        PointType: Float32
        Id: 82
        DigitalSetName: ""
        EngineeringUnits: ""
      properties:
        Descriptor:
          example: 12 Hour Sine Wave
          title: Descriptor
          type: string
        DigitalSetName:
          example: ""
          title: DigitalSetName
          type: string
          x-disallow-patch: true
        DisplayDigits:
          example: -5
          title: DisplayDigits
          type: integer
        EngineeringUnits:
          example: ""
          title: EngineeringUnits
          type: string
        Future:
          example: false
          title: Future
          type: boolean
          x-disallow-patch: true
        Id:
          example: 82
          format: int32
          title: Id
          type: integer
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        Links:
          $ref: '#/components/schemas/PointLinks'
        Name:
          example: PointName
          title: Name
          type: string
          x-required-post: true
        Path:
          example: \\MyPIServer\PointName
          format: path
          title: Path
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        PointClass:
          example: classic
          title: PointClass
          type: string
          x-disallow-patch: true
          x-required-post: true
        PointType:
          example: Float32
          title: PointType
          type: string
          x-disallow-patch: true
          x-required-post: true
        Span:
          example: 100.0
          title: Span
          type: number
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        Step:
          example: false
          title: Step
          type: boolean
        WebException:
          $ref: '#/components/schemas/WebException'
        WebId:
          example: I1DPa70Wf0zBA06CLkV9ovNQgQCAAAAA
          format: webid
          title: WebId
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        Zero:
          example: 0.0
          title: Zero
          type: number
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
      title: Point
      type: object
    PointAttribute:
      example:
        WebException:
          Errors:
          - An error has occurred.
          StatusCode: 500
        Value: 50
        Links:
          Point: Point
          Self: Self
        Name: typicalvalue
      properties:
        Links:
          $ref: '#/components/schemas/PointAttributeLinks'
        Name:
          example: typicalvalue
          title: Name
          type: string
          x-required-put: true
        Value:
          example: 50
          properties: {}
          title: Value
          type: object
          x-required-put: true
        WebException:
          $ref: '#/components/schemas/WebException'
      title: PointAttribute
      type: object
    PointAttributeLinks:
      example:
        Point: Point
        Self: Self
      properties:
        Point:
          title: Point
          type: string
          x-link-path: "points/{webId}"
          x-link-optional: false
        Self:
          title: Self
          type: string
          x-link-path: "points/{webId}/attributes/{name}"
          x-link-optional: false
      title: PointAttributeLinks
      type: object
    PointLinks:
      example:
        PlotData: PlotData
        DataServer: DataServer
        Attributes: Attributes
        SummaryData: SummaryData
        Value: Value
        EndValue: EndValue
        Self: Self
        InterpolatedData: InterpolatedData
        RecordedData: RecordedData
      properties:
        Attributes:
          title: Attributes
          type: string
          x-link-path: "points/{webId}/attributes"
          x-link-optional: false
        DataServer:
          title: DataServer
          type: string
          x-link-path: "dataservers/{webId}"
          x-link-optional: false
        EndValue:
          title: EndValue
          type: string
          x-link-path: "streams/{webId}/end"
          x-link-optional: false
        InterpolatedData:
          title: InterpolatedData
          type: string
          x-link-path: "streams/{webId}/interpolated"
          x-link-optional: false
        PlotData:
          title: PlotData
          type: string
          x-link-path: "streams/{webId}/plot"
          x-link-optional: false
        RecordedData:
          title: RecordedData
          type: string
          x-link-path: "streams/{webId}/recorded"
          x-link-optional: false
        Self:
          title: Self
          type: string
          x-link-path: "points/{webId}"
          x-link-optional: false
        SummaryData:
          title: SummaryData
          type: string
          x-link-path: "streams/{webId}/summary"
          x-link-optional: false
        Value:
          title: Value
          type: string
          x-link-path: "streams/{webId}/value"
          x-link-optional: false
      title: PointLinks
      type: object
    PropertyError:
      example:
        Message:
        - An error has occurred.
        FieldName: Value
      properties:
        FieldName:
          example: Value
          title: FieldName
          type: string
        Message:
          example:
          - An error has occurred.
          items:
            type: string
          title: Message
          type: array
      title: PropertyError
      type: object
    Request:
      example:
        Parameters:
        - Parameters
        - Parameters
        Content: Content
        Headers:
          key: Headers
        ParentIds:
        - ParentIds
        - ParentIds
        RequestTemplate:
          Resource: Resource
        Resource: Resource
        Method: GET
      properties:
        Content:
          title: Content
          type: string
        Headers:
          additionalProperties:
            type: string
          title: Headers
          type: object
        Method:
          example: GET
          title: Method
          type: string
          x-required-post: true
        Parameters:
          items:
            type: string
          title: Parameters
          type: array
        ParentIds:
          items:
            type: string
          title: ParentIds
          type: array
        RequestTemplate:
          $ref: '#/components/schemas/RequestTemplate'
        Resource:
          title: Resource
          type: string
      title: Request
      type: object
    RequestTemplate:
      example:
        Resource: Resource
      properties:
        Resource:
          title: Resource
          type: string
          x-required-post: true
      title: RequestTemplate
      type: object
    Response:
      properties:
        Content:
          properties: {}
          title: Content
          type: object
        Headers:
          additionalProperties:
            type: string
          title: Headers
          type: object
        Status:
          enum:
          - 100
          - 101
          - 200
          - 201
          - 202
          - 203
          - 204
          - 205
          - 206
          - 207
          - 300
          - 301
          - 302
          - 303
          - 304
          - 305
          - 306
          - 307
          - 400
          - 401
          - 402
          - 403
          - 404
          - 405
          - 406
          - 407
          - 408
          - 409
          - 410
          - 411
          - 412
          - 413
          - 414
          - 415
          - 416
          - 417
          - 426
          - 500
          - 501
          - 502
          - 503
          - 504
          - 505
          example: 200
          format: int32
          title: Status
          type: integer
      title: Response
      type: object
    SearchByAttribute:
      example:
        SearchRoot: I1RDDqD5loBNH0erqeqJodtALA8fbgUnyQW02v-gLGIxumSg
        WebException:
          Errors:
          - An error has occurred.
          StatusCode: 500
        ValueQueries:
        - AttributeValue: 12.3
          WebException:
            Errors:
            - An error has occurred.
            StatusCode: 500
          AttributeUOM: pound-force per square inch
          SearchOperator: LessThan
          AttributeName: Pressure
        - AttributeValue: 12.3
          WebException:
            Errors:
            - An error has occurred.
            StatusCode: 500
          AttributeUOM: pound-force per square inch
          SearchOperator: LessThan
          AttributeName: Pressure
        ElementTemplate: I1ETDqD5loBNH0erqeqJodtALAjFPVfUpY-02A8uioGDSgIg
      properties:
        ElementTemplate:
          example: I1ETDqD5loBNH0erqeqJodtALAjFPVfUpY-02A8uioGDSgIg
          format: webid
          title: ElementTemplate
          type: string
        SearchRoot:
          example: I1RDDqD5loBNH0erqeqJodtALA8fbgUnyQW02v-gLGIxumSg
          format: webid
          title: SearchRoot
          type: string
        ValueQueries:
          items:
            $ref: '#/components/schemas/ValueQuery'
          title: ValueQueries
          type: array
        WebException:
          $ref: '#/components/schemas/WebException'
      title: SearchByAttribute
      type: object
    Security:
      example:
        CanWrite: true
        Rights:
        - Read
        - WriteData
        CanReadData: true
        WebException:
          Errors:
          - An error has occurred.
          StatusCode: 500
        HasAdmin: true
        CanWriteData: true
        CanDelete: true
        CanRead: true
        CanAnnotate: true
        CanExecute: true
        CanSubscribe: true
        CanSubscribeOthers: true
      properties:
        CanAnnotate:
          example: true
          title: CanAnnotate
          type: boolean
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        CanDelete:
          example: true
          title: CanDelete
          type: boolean
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        CanExecute:
          example: true
          title: CanExecute
          type: boolean
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        CanRead:
          example: true
          title: CanRead
          type: boolean
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        CanReadData:
          example: true
          title: CanReadData
          type: boolean
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        CanSubscribe:
          example: true
          title: CanSubscribe
          type: boolean
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        CanSubscribeOthers:
          example: true
          title: CanSubscribeOthers
          type: boolean
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        CanWrite:
          example: true
          title: CanWrite
          type: boolean
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        CanWriteData:
          example: true
          title: CanWriteData
          type: boolean
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        HasAdmin:
          example: true
          title: HasAdmin
          type: boolean
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        Rights:
          example:
          - Read
          - WriteData
          items:
            type: string
          title: Rights
          type: array
        WebException:
          $ref: '#/components/schemas/WebException'
      title: Security
      type: object
    SecurityEntry:
      example:
        WebException:
          Errors:
          - An error has occurred.
          StatusCode: 500
        AllowRights:
        - Read
        - ReadData
        DenyRights:
        - Write
        - Execute
        - Admin
        Links:
          SecurableObject: SecurableObject
          SecurityIdentity: SecurityIdentity
          Self: Self
        SecurityIdentityName: domain\user1
        Name: domain\user1
      properties:
        AllowRights:
          example:
          - Read
          - ReadData
          items:
            type: string
          title: AllowRights
          type: array
        DenyRights:
          example:
          - Write
          - Execute
          - Admin
          items:
            type: string
          title: DenyRights
          type: array
        Links:
          $ref: '#/components/schemas/SecurityEntryLinks'
        Name:
          example: domain\user1
          title: Name
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        SecurityIdentityName:
          example: domain\user1
          title: SecurityIdentityName
          type: string
          x-required-post: true
          x-disallow-put: true
        WebException:
          $ref: '#/components/schemas/WebException'
      title: SecurityEntry
      type: object
    SecurityEntryLinks:
      example:
        SecurableObject: SecurableObject
        SecurityIdentity: SecurityIdentity
        Self: Self
      properties:
        SecurableObject:
          title: SecurableObject
          type: string
          x-link-optional: false
        SecurityIdentity:
          title: SecurityIdentity
          type: string
          x-link-path: "securityidentities/{webId}"
          x-link-optional: false
        Self:
          title: Self
          type: string
          x-link-optional: false
      title: SecurityEntryLinks
      type: object
    SecurityIdentity:
      example:
        Path: "\\\\MyAssetServer\\SecurityIdentities[MySecurityIdentity]"
        Description: ""
        WebException:
          Errors:
          - An error has occurred.
          StatusCode: 500
        IsEnabled: true
        WebId: I1SIDqD5loBNH0erqeqJodtALASe6l8zgYokqdeeFilFI9tw
        Links:
          SecurityEntries: SecurityEntries
          SecurityMappings: SecurityMappings
          Self: Self
          Security: Security
          AssetServer: AssetServer
        Id: f3a5ee49-1838-4aa2-9d79-e16294523db7
        Name: MySecurityIdentity
      properties:
        Description:
          example: ""
          title: Description
          type: string
        Id:
          example: f3a5ee49-1838-4aa2-9d79-e16294523db7
          format: uuid
          title: Id
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        IsEnabled:
          example: true
          title: IsEnabled
          type: boolean
        Links:
          $ref: '#/components/schemas/SecurityIdentityLinks'
        Name:
          example: MySecurityIdentity
          title: Name
          type: string
          x-required-post: true
        Path:
          example: "\\\\MyAssetServer\\SecurityIdentities[MySecurityIdentity]"
          format: path
          title: Path
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        WebException:
          $ref: '#/components/schemas/WebException'
        WebId:
          example: I1SIDqD5loBNH0erqeqJodtALASe6l8zgYokqdeeFilFI9tw
          format: webid
          title: WebId
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
      title: SecurityIdentity
      type: object
    SecurityIdentityLinks:
      example:
        SecurityEntries: SecurityEntries
        SecurityMappings: SecurityMappings
        Self: Self
        Security: Security
        AssetServer: AssetServer
      properties:
        AssetServer:
          title: AssetServer
          type: string
          x-link-path: "assetservers/{webId}"
          x-link-optional: false
        Security:
          title: Security
          type: string
          x-link-path: "securityidentities/{webId}/security"
          x-link-optional: false
        SecurityEntries:
          title: SecurityEntries
          type: string
          x-link-path: "securityidentities/{webId}/securityentries"
          x-link-optional: false
        SecurityMappings:
          title: SecurityMappings
          type: string
          x-link-path: "securityidentities/{webId}/securitymappings"
          x-link-optional: false
        Self:
          title: Self
          type: string
          x-link-path: "securityidentities/{webId}"
          x-link-optional: false
      title: SecurityIdentityLinks
      type: object
    SecurityMapping:
      example:
        Path: "\\\\MyAssetServer\\SecurityMappings[MySecurityMapping]"
        Account: domain\user
        Description: ""
        WebException:
          Errors:
          - An error has occurred.
          StatusCode: 500
        WebId: I1SMDqD5loBNH0erqeqJodtALAgu8UrMAZB0qWp9H7C4TAXQ
        SecurityIdentityWebId: I1SIEDqD5loBNH0erqeqJodtALAYIKyyz2F5BGAxQAVXYRDBAGyPedZG1sUmxOOclp3Flwg
        Links:
          SecurityIdentity: SecurityIdentity
          SecurityEntries: SecurityEntries
          Self: Self
          Security: Security
          AssetServer: AssetServer
        Id: ac14ef82-19c0-4a07-96a7-d1fb0b84c05d
        Name: MySecurityMapping
      properties:
        Account:
          example: domain\user
          title: Account
          type: string
          x-disallow-patch: true
          x-required-post: true
        Description:
          example: ""
          title: Description
          type: string
        Id:
          example: ac14ef82-19c0-4a07-96a7-d1fb0b84c05d
          format: uuid
          title: Id
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        Links:
          $ref: '#/components/schemas/SecurityMappingLinks'
        Name:
          example: MySecurityMapping
          title: Name
          type: string
        Path:
          example: "\\\\MyAssetServer\\SecurityMappings[MySecurityMapping]"
          format: path
          title: Path
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        SecurityIdentityWebId:
          example: I1SIEDqD5loBNH0erqeqJodtALAYIKyyz2F5BGAxQAVXYRDBAGyPedZG1sUmxOOclp3Flwg
          title: SecurityIdentityWebId
          type: string
          x-required-post: true
        WebException:
          $ref: '#/components/schemas/WebException'
        WebId:
          example: I1SMDqD5loBNH0erqeqJodtALAgu8UrMAZB0qWp9H7C4TAXQ
          format: webid
          title: WebId
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
      title: SecurityMapping
      type: object
    SecurityMappingLinks:
      example:
        SecurityIdentity: SecurityIdentity
        SecurityEntries: SecurityEntries
        Self: Self
        Security: Security
        AssetServer: AssetServer
      properties:
        AssetServer:
          title: AssetServer
          type: string
          x-link-path: "assetservers/{webId}"
          x-link-optional: false
        Security:
          title: Security
          type: string
          x-link-path: "securitymappings/{webId}/security"
          x-link-optional: false
        SecurityEntries:
          title: SecurityEntries
          type: string
          x-link-path: "securitymappings/{webId}/securityentries"
          x-link-optional: false
        SecurityIdentity:
          title: SecurityIdentity
          type: string
          x-link-path: "securityidentities/{webId}"
          x-link-optional: false
        Self:
          title: Self
          type: string
          x-link-path: "securitymappings/{webId}"
          x-link-optional: false
      title: SecurityMappingLinks
      type: object
    SecurityRights:
      example:
        SecurityItem: Default
        CanReadData: true
        WebException:
          Errors:
          - An error has occurred.
          StatusCode: 500
        HasAdmin: true
        UserIdentity: domain\user
        CanDelete: true
        CanAnnotate: true
        CanSubscribe: true
        CanSubscribeOthers: true
        OwnerWebId: I1EmDqD5loBNH0erqeqJodtALAYIKyyz2F5BGAxQAVXYRDBA
        CanWrite: true
        Rights:
        - Read
        - WriteData
        CanWriteData: true
        Links:
          Owner: Owner
          Self: Self
        CanRead: true
        CanExecute: true
      properties:
        CanAnnotate:
          example: true
          title: CanAnnotate
          type: boolean
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        CanDelete:
          example: true
          title: CanDelete
          type: boolean
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        CanExecute:
          example: true
          title: CanExecute
          type: boolean
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        CanRead:
          example: true
          title: CanRead
          type: boolean
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        CanReadData:
          example: true
          title: CanReadData
          type: boolean
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        CanSubscribe:
          example: true
          title: CanSubscribe
          type: boolean
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        CanSubscribeOthers:
          example: true
          title: CanSubscribeOthers
          type: boolean
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        CanWrite:
          example: true
          title: CanWrite
          type: boolean
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        CanWriteData:
          example: true
          title: CanWriteData
          type: boolean
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        HasAdmin:
          example: true
          title: HasAdmin
          type: boolean
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        Links:
          $ref: '#/components/schemas/SecurityRightsLinks'
        OwnerWebId:
          example: I1EmDqD5loBNH0erqeqJodtALAYIKyyz2F5BGAxQAVXYRDBA
          title: OwnerWebId
          type: string
        Rights:
          example:
          - Read
          - WriteData
          items:
            type: string
          title: Rights
          type: array
        SecurityItem:
          example: Default
          title: SecurityItem
          type: string
        UserIdentity:
          example: domain\user
          title: UserIdentity
          type: string
        WebException:
          $ref: '#/components/schemas/WebException'
      title: SecurityRights
      type: object
    SecurityRightsLinks:
      example:
        Owner: Owner
        Self: Self
      properties:
        Owner:
          title: Owner
          type: string
          x-link-optional: false
        Self:
          title: Self
          type: string
          x-link-optional: false
      title: SecurityRightsLinks
      type: object
    StreamAnnotation:
      example:
        CreationDate: 2016-06-21T14:45:50.2988321Z
        Errors:
        - Message:
          - An error has occurred.
          FieldName: Value
        - Message:
          - An error has occurred.
          FieldName: Value
        Description: Signifies a spike in temperature.
        WebException:
          Errors:
          - An error has occurred.
          StatusCode: 500
        ModifyDate: 2016-06-21T14:45:50.2988321Z
        Value: The temperature spiked because of a malfunction with a unit in our
          west plant.
        Creator: MyDomain\UserA
        Id: 512b6616-ce39-4f70-9048-8c6a025fb592
        Modifier: MyDomain\UserA
        Name: Temperature Annotation
      properties:
        CreationDate:
          example: 2016-06-21T14:45:50.2988321Z
          format: date-time
          title: CreationDate
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        Creator:
          example: MyDomain\UserA
          title: Creator
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        Description:
          example: Signifies a spike in temperature.
          title: Description
          type: string
        Errors:
          items:
            $ref: '#/components/schemas/PropertyError'
          title: Errors
          type: array
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        Id:
          example: 512b6616-ce39-4f70-9048-8c6a025fb592
          format: uuid
          title: Id
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        Modifier:
          example: MyDomain\UserA
          title: Modifier
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        ModifyDate:
          example: 2016-06-21T14:45:50.2988321Z
          format: date-time
          title: ModifyDate
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        Name:
          example: Temperature Annotation
          title: Name
          type: string
          x-required-post: true
        Value:
          example: The temperature spiked because of a malfunction with a unit in
            our west plant.
          properties: {}
          title: Value
          type: object
        WebException:
          $ref: '#/components/schemas/WebException'
      title: StreamAnnotation
      type: object
    StreamSummaries:
      example:
        Path: \\MyAssetServer\MyDatabase\MyElement|Water
        WebException:
          Errors:
          - An error has occurred.
          StatusCode: 500
        WebId: I1AbEDqD5loBNH0erqeqJodtALAYIKyyz2F5BGAxQAVXYRDBAGyPedZG1sUmxOOclp3Flwg
        Links:
          Source: Source
        Items:
        - Type: Total
          WebException:
            Errors:
            - An error has occurred.
            StatusCode: 500
          Value:
            Annotated: false
            Errors:
            - Message:
              - An error has occurred.
              FieldName: Value
            - Message:
              - An error has occurred.
              FieldName: Value
            UnitsAbbreviation: m
            Substituted: false
            WebException:
              Errors:
              - An error has occurred.
              StatusCode: 500
            Value: 12.3
            Good: true
            Timestamp: 2014-07-22T14:00:00Z
            Questionable: false
        - Type: Total
          WebException:
            Errors:
            - An error has occurred.
            StatusCode: 500
          Value:
            Annotated: false
            Errors:
            - Message:
              - An error has occurred.
              FieldName: Value
            - Message:
              - An error has occurred.
              FieldName: Value
            UnitsAbbreviation: m
            Substituted: false
            WebException:
              Errors:
              - An error has occurred.
              StatusCode: 500
            Value: 12.3
            Good: true
            Timestamp: 2014-07-22T14:00:00Z
            Questionable: false
        Name: Water
      properties:
        Items:
          items:
            $ref: '#/components/schemas/SummaryValue'
          title: Items
          type: array
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        Links:
          $ref: '#/components/schemas/StreamSummariesLinks'
        Name:
          example: Water
          title: Name
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        Path:
          example: \\MyAssetServer\MyDatabase\MyElement|Water
          format: path
          title: Path
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        WebException:
          $ref: '#/components/schemas/WebException'
        WebId:
          example: I1AbEDqD5loBNH0erqeqJodtALAYIKyyz2F5BGAxQAVXYRDBAGyPedZG1sUmxOOclp3Flwg
          format: webid
          title: WebId
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
      title: StreamSummaries
      type: object
    StreamSummariesLinks:
      example:
        Source: Source
      properties:
        Source:
          title: Source
          type: string
          x-link-optional: false
      title: StreamSummariesLinks
      type: object
    StreamUpdatesRegister:
      example:
        SourcePath: \\MyAssetServer\MyDatabase\MyElement|Water
        Status: Succeeded
        LatestMarker: 0cbbec466f3a42288c8c47112f54b852_12
        SourceName: Water
        Exception:
          Errors:
          - An error has occurred.
        Source: I1AbEDqD5loBNH0erqeqJodtALA9iLxz4m_5RGAxgAVXYUACw_yrS377vX0uZVHTgkanusw
      properties:
        Exception:
          $ref: '#/components/schemas/Errors'
        LatestMarker:
          example: 0cbbec466f3a42288c8c47112f54b852_12
          title: LatestMarker
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        Source:
          example: I1AbEDqD5loBNH0erqeqJodtALA9iLxz4m_5RGAxgAVXYUACw_yrS377vX0uZVHTgkanusw
          format: webid
          title: Source
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        SourceName:
          example: Water
          title: SourceName
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        SourcePath:
          example: \\MyAssetServer\MyDatabase\MyElement|Water
          format: path
          title: SourcePath
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        Status:
          example: Succeeded
          title: Status
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
      title: StreamUpdatesRegister
      type: object
    StreamUpdatesRetrieve:
      example:
        SourcePath: \\MyAssetServer\MyDatabase\MyElement|Water
        Status: Created
        Events:
        - Annotated: false
          Errors:
          - Message:
            - An error has occurred.
            FieldName: Value
          - Message:
            - An error has occurred.
            FieldName: Value
          UnitsAbbreviation: m
          Action: Add
          Substituted: false
          WebException:
            Errors:
            - An error has occurred.
            StatusCode: 500
          Value: 12.3
          Good: true
          PreviousEventAction: PreviousEventArchived
          Timestamp: 2014-07-22T14:00:00Z
          Questionable: false
        - Annotated: false
          Errors:
          - Message:
            - An error has occurred.
            FieldName: Value
          - Message:
            - An error has occurred.
            FieldName: Value
          UnitsAbbreviation: m
          Action: Add
          Substituted: false
          WebException:
            Errors:
            - An error has occurred.
            StatusCode: 500
          Value: 12.3
          Good: true
          PreviousEventAction: PreviousEventArchived
          Timestamp: 2014-07-22T14:00:00Z
          Questionable: false
        LatestMarker: 0cbbec466f3a42288c8c47112f54b852_12
        RequestedMarker: 0cbbec466f3a42288c8c47112f54b852_0
        SourceName: Water
        Exception:
          Errors:
          - An error has occurred.
        Source: I1AbEDqD5loBNH0erqeqJodtALAYIKyyz2F5BGAxQAVXYRDBAGyPedZG1sUmxOOclp3Flwg
      properties:
        Events:
          items:
            $ref: '#/components/schemas/DataPipeEvent'
          title: Events
          type: array
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        Exception:
          $ref: '#/components/schemas/Errors'
        LatestMarker:
          example: 0cbbec466f3a42288c8c47112f54b852_12
          title: LatestMarker
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        RequestedMarker:
          example: 0cbbec466f3a42288c8c47112f54b852_0
          title: RequestedMarker
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        Source:
          example: I1AbEDqD5loBNH0erqeqJodtALAYIKyyz2F5BGAxQAVXYRDBAGyPedZG1sUmxOOclp3Flwg
          format: webid
          title: Source
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        SourceName:
          example: Water
          title: SourceName
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        SourcePath:
          example: \\MyAssetServer\MyDatabase\MyElement|Water
          format: path
          title: SourcePath
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        Status:
          example: Created
          title: Status
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
      title: StreamUpdatesRetrieve
      type: object
    StreamValue:
      example:
        Path: \\MyAssetServer\MyDatabase\MyElement|Water
        WebException:
          Errors:
          - An error has occurred.
          StatusCode: 500
        WebId: I1AbEDqD5loBNH0erqeqJodtALAYIKyyz2F5BGAxQAVXYRDBAGyPedZG1sUmxOOclp3Flwg
        Value:
          Annotated: false
          Errors:
          - Message:
            - An error has occurred.
            FieldName: Value
          - Message:
            - An error has occurred.
            FieldName: Value
          UnitsAbbreviation: m
          Substituted: false
          WebException:
            Errors:
            - An error has occurred.
            StatusCode: 500
          Value: 12.3
          Good: true
          Timestamp: 2014-07-22T14:00:00Z
          Questionable: false
        Links:
          Source: Source
        Name: Water
      properties:
        Links:
          $ref: '#/components/schemas/StreamValueLinks'
        Name:
          example: Water
          title: Name
          type: string
          x-disallow-post: true
        Path:
          example: \\MyAssetServer\MyDatabase\MyElement|Water
          format: path
          title: Path
          type: string
          x-disallow-post: true
        Value:
          $ref: '#/components/schemas/TimedValue'
        WebException:
          $ref: '#/components/schemas/WebException'
        WebId:
          example: I1AbEDqD5loBNH0erqeqJodtALAYIKyyz2F5BGAxQAVXYRDBAGyPedZG1sUmxOOclp3Flwg
          format: webid
          title: WebId
          type: string
          x-required-post: true
      title: StreamValue
      type: object
    StreamValueLinks:
      example:
        Source: Source
      properties:
        Source:
          title: Source
          type: string
          x-link-optional: false
      title: StreamValueLinks
      type: object
    StreamValues:
      example:
        Path: \\MyAssetServer\MyDatabase\MyElement|Water
        UnitsAbbreviation: m
        WebException:
          Errors:
          - An error has occurred.
          StatusCode: 500
        WebId: I1AbEDqD5loBNH0erqeqJodtALAYIKyyz2F5BGAxQAVXYRDBAGyPedZG1sUmxOOclp3Flwg
        Links:
          Source: Source
        Items:
        - Annotated: false
          Errors:
          - Message:
            - An error has occurred.
            FieldName: Value
          - Message:
            - An error has occurred.
            FieldName: Value
          UnitsAbbreviation: m
          Substituted: false
          WebException:
            Errors:
            - An error has occurred.
            StatusCode: 500
          Value: 12.3
          Good: true
          Timestamp: 2014-07-22T14:00:00Z
          Questionable: false
        - Annotated: false
          Errors:
          - Message:
            - An error has occurred.
            FieldName: Value
          - Message:
            - An error has occurred.
            FieldName: Value
          UnitsAbbreviation: m
          Substituted: false
          WebException:
            Errors:
            - An error has occurred.
            StatusCode: 500
          Value: 12.3
          Good: true
          Timestamp: 2014-07-22T14:00:00Z
          Questionable: false
        Name: Water
      properties:
        Items:
          items:
            $ref: '#/components/schemas/TimedValue'
          title: Items
          type: array
          x-required-post: true
        Links:
          $ref: '#/components/schemas/StreamValuesLinks'
        Name:
          example: Water
          title: Name
          type: string
          x-disallow-post: true
        Path:
          example: \\MyAssetServer\MyDatabase\MyElement|Water
          format: path
          title: Path
          type: string
          x-disallow-post: true
        UnitsAbbreviation:
          example: m
          title: UnitsAbbreviation
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        WebException:
          $ref: '#/components/schemas/WebException'
        WebId:
          example: I1AbEDqD5loBNH0erqeqJodtALAYIKyyz2F5BGAxQAVXYRDBAGyPedZG1sUmxOOclp3Flwg
          format: webid
          title: WebId
          type: string
          x-required-post: true
      title: StreamValues
      type: object
    StreamValuesLinks:
      example:
        Source: Source
      properties:
        Source:
          title: Source
          type: string
          x-link-optional: false
      title: StreamValuesLinks
      type: object
    Substatus:
      example:
        WebException:
          Errors:
          - An error has occurred.
          StatusCode: 500
        Message: Message
        Substatus: 200
      properties:
        Message:
          title: Message
          type: string
        Substatus:
          enum:
          - 100
          - 101
          - 200
          - 201
          - 202
          - 203
          - 204
          - 205
          - 206
          - 207
          - 300
          - 301
          - 302
          - 303
          - 304
          - 305
          - 306
          - 307
          - 400
          - 401
          - 402
          - 403
          - 404
          - 405
          - 406
          - 407
          - 408
          - 409
          - 410
          - 411
          - 412
          - 413
          - 414
          - 415
          - 416
          - 417
          - 426
          - 500
          - 501
          - 502
          - 503
          - 504
          - 505
          example: 200
          format: int32
          title: Substatus
          type: integer
        WebException:
          $ref: '#/components/schemas/WebException'
      title: Substatus
      type: object
    SummaryValue:
      example:
        Type: Total
        WebException:
          Errors:
          - An error has occurred.
          StatusCode: 500
        Value:
          Annotated: false
          Errors:
          - Message:
            - An error has occurred.
            FieldName: Value
          - Message:
            - An error has occurred.
            FieldName: Value
          UnitsAbbreviation: m
          Substituted: false
          WebException:
            Errors:
            - An error has occurred.
            StatusCode: 500
          Value: 12.3
          Good: true
          Timestamp: 2014-07-22T14:00:00Z
          Questionable: false
      properties:
        Type:
          example: Total
          title: Type
          type: string
        Value:
          $ref: '#/components/schemas/TimedValue'
        WebException:
          $ref: '#/components/schemas/WebException'
      title: SummaryValue
      type: object
    SystemLanding:
      example:
        WebException:
          Errors:
          - An error has occurred.
          StatusCode: 500
        Links:
          Status: Status
          Versions: Versions
          Configuration: Configuration
          CacheInstances: CacheInstances
          UserInfo: UserInfo
          Self: Self
        ProductVersion: 1.8.0.201
        ProductTitle: PI Web API 2016 R2
      properties:
        Links:
          $ref: '#/components/schemas/SystemLandingLinks'
        ProductTitle:
          example: PI Web API 2016 R2
          title: ProductTitle
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        ProductVersion:
          example: 1.8.0.201
          title: ProductVersion
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        WebException:
          $ref: '#/components/schemas/WebException'
      title: SystemLanding
      type: object
    SystemLandingLinks:
      example:
        Status: Status
        Versions: Versions
        Configuration: Configuration
        CacheInstances: CacheInstances
        UserInfo: UserInfo
        Self: Self
      properties:
        CacheInstances:
          title: CacheInstances
          type: string
          x-link-path: system/cacheinstances
          x-link-optional: false
        Configuration:
          title: Configuration
          type: string
          x-link-path: system/configuration
          x-link-optional: false
        Self:
          title: Self
          type: string
          x-link-path: system
          x-link-optional: false
        Status:
          title: Status
          type: string
          x-link-path: system/status
          x-link-optional: false
        UserInfo:
          title: UserInfo
          type: string
          x-link-path: system/userinfo
          x-link-optional: false
        Versions:
          title: Versions
          type: string
          x-link-path: system/versions
          x-link-optional: false
      title: SystemLandingLinks
      type: object
    SystemStatus:
      example:
        WebException:
          Errors:
          - An error has occurred.
          StatusCode: 500
        State: Running
        CacheInstances: 0
        ServerTime: 2014-07-22T14:00:00Z
        UpTimeInMinutes: 32345.6
      properties:
        CacheInstances:
          example: 0
          format: int32
          title: CacheInstances
          type: integer
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        ServerTime:
          example: 2014-07-22T14:00:00Z
          format: date-time
          title: ServerTime
          type: string
        State:
          example: Running
          title: State
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        UpTimeInMinutes:
          example: 32345.6
          format: double
          title: UpTimeInMinutes
          type: number
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        WebException:
          $ref: '#/components/schemas/WebException'
      title: SystemStatus
      type: object
    Table:
      example:
        Path: "\\\\MyAssetServer\\MyDatabase\\Tables[CarInfo]"
        TimeZone: Eastern Standard Time
        CategoryNames:
        - Table Category
        Description: Table of car info.
        WebException:
          Errors:
          - An error has occurred.
          StatusCode: 500
        ConvertToLocalTime: false
        WebId: I1BlDqD5loBNH0erqeqJodtALAmLr4X86Jmkeynt3QVwlqXw
        Links:
          SecurityEntries: SecurityEntries
          Categories: Categories
          Database: Database
          Data: Data
          Self: Self
          Security: Security
        Id: 5ff8ba98-89ce-479a-b29e-ddd057096a5f
        Name: CarInfo
      properties:
        CategoryNames:
          example:
          - Table Category
          items:
            type: string
          title: CategoryNames
          type: array
        ConvertToLocalTime:
          example: false
          title: ConvertToLocalTime
          type: boolean
        Description:
          example: Table of car info.
          title: Description
          type: string
        Id:
          example: 5ff8ba98-89ce-479a-b29e-ddd057096a5f
          format: uuid
          title: Id
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        Links:
          $ref: '#/components/schemas/TableLinks'
        Name:
          example: CarInfo
          title: Name
          type: string
          x-required-post: true
        Path:
          example: "\\\\MyAssetServer\\MyDatabase\\Tables[CarInfo]"
          format: path
          title: Path
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        TimeZone:
          example: Eastern Standard Time
          title: TimeZone
          type: string
        WebException:
          $ref: '#/components/schemas/WebException'
        WebId:
          example: I1BlDqD5loBNH0erqeqJodtALAmLr4X86Jmkeynt3QVwlqXw
          format: webid
          title: WebId
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
      title: Table
      type: object
    TableCategory:
      example:
        Path: "\\\\MyAssetServer\\Database\\CategoriesTable[CategoryName]"
        Description: Relative energy use per ton of process feed.
        WebException:
          Errors:
          - An error has occurred.
          StatusCode: 500
        WebId: I1BCDqD5loBNH0erqeqJodtALAwgzHiSFSd06HP4lKPqYefQ
        Links:
          SecurityEntries: SecurityEntries
          Database: Database
          Self: Self
          Security: Security
        Id: 89c70cc2-5221-4e77-873f-894a3ea61e7d
        Name: CategoryName
      properties:
        Description:
          example: Relative energy use per ton of process feed.
          title: Description
          type: string
        Id:
          example: 89c70cc2-5221-4e77-873f-894a3ea61e7d
          format: uuid
          title: Id
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        Links:
          $ref: '#/components/schemas/TableCategoryLinks'
        Name:
          example: CategoryName
          title: Name
          type: string
          x-required-post: true
        Path:
          example: "\\\\MyAssetServer\\Database\\CategoriesTable[CategoryName]"
          format: path
          title: Path
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        WebException:
          $ref: '#/components/schemas/WebException'
        WebId:
          example: I1BCDqD5loBNH0erqeqJodtALAwgzHiSFSd06HP4lKPqYefQ
          format: webid
          title: WebId
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
      title: TableCategory
      type: object
    TableCategoryLinks:
      example:
        SecurityEntries: SecurityEntries
        Database: Database
        Self: Self
        Security: Security
      properties:
        Database:
          title: Database
          type: string
          x-link-path: "assetdatabases/{webId}"
          x-link-optional: false
        Security:
          title: Security
          type: string
          x-link-path: "tablecategories/{webId}/security"
          x-link-optional: false
        SecurityEntries:
          title: SecurityEntries
          type: string
          x-link-path: "tablecategories/{webId}/securityentries"
          x-link-optional: false
        Self:
          title: Self
          type: string
          x-link-path: "tablecategories/{webId}"
          x-link-optional: false
      title: TableCategoryLinks
      type: object
    TableData:
      example:
        WebException:
          Errors:
          - An error has occurred.
          StatusCode: 500
        Columns:
          key: Columns
        Rows:
        - key: "{}"
        - key: "{}"
      properties:
        Columns:
          additionalProperties:
            type: string
          title: Columns
          type: object
          x-required-put: true
        Rows:
          items:
            additionalProperties:
              properties: {}
              type: object
            type: object
          title: Rows
          type: array
          x-required-put: true
        WebException:
          $ref: '#/components/schemas/WebException'
      title: TableData
      type: object
    TableLinks:
      example:
        SecurityEntries: SecurityEntries
        Categories: Categories
        Database: Database
        Data: Data
        Self: Self
        Security: Security
      properties:
        Categories:
          title: Categories
          type: string
          x-link-path: "tables/{webId}/categories"
          x-link-optional: false
        Data:
          title: Data
          type: string
          x-link-path: "tables/{webId}/data"
          x-link-optional: false
        Database:
          title: Database
          type: string
          x-link-path: "assetdatabases/{webId}"
          x-link-optional: false
        Security:
          title: Security
          type: string
          x-link-path: "tables/{webId}/security"
          x-link-optional: false
        SecurityEntries:
          title: SecurityEntries
          type: string
          x-link-path: "tables/{webId}/securityentries"
          x-link-optional: false
        Self:
          title: Self
          type: string
          x-link-path: "tables/{webId}"
          x-link-optional: false
      title: TableLinks
      type: object
    TimeRule:
      example:
        Path: "\\\\MyAssetServer\\MyDatabase\\MyElement\\Analyses[MyAnalysis]\\TimeRule"
        ConfigString: Frequency=300
        Description: Creates regular periodic time periods.
        WebException:
          Errors:
          - An error has occurred.
          StatusCode: 500
        MergeDuplicatedItems: false
        EditorType: OSIsoft.AF.Time.TimeRule.PeriodicConfig
        ConfigStringStored: ""
        Name: Periodic
        DisplayString: Frequency=300
        WebId: I1TRXDqD5loBNH0erqeqJodtALAROsUFcWU5xGEQwAVXYTCAAROsUFcWU5xGEQwAVXYTCAA
        Links:
          AnalysisTemplate: AnalysisTemplate
          Analysis: Analysis
          Self: Self
          PlugIn: PlugIn
        IsInitializing: false
        Id: 1514eb44-94c5-11e7-8443-00155d84c200
        PlugInName: Periodic
        IsConfigured: true
      properties:
        ConfigString:
          example: Frequency=300
          title: ConfigString
          type: string
        ConfigStringStored:
          example: ""
          title: ConfigStringStored
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        Description:
          example: Creates regular periodic time periods.
          title: Description
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        DisplayString:
          example: Frequency=300
          title: DisplayString
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        EditorType:
          example: OSIsoft.AF.Time.TimeRule.PeriodicConfig
          title: EditorType
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        Id:
          example: 1514eb44-94c5-11e7-8443-00155d84c200
          format: uuid
          title: Id
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        IsConfigured:
          example: true
          title: IsConfigured
          type: boolean
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        IsInitializing:
          example: false
          title: IsInitializing
          type: boolean
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        Links:
          $ref: '#/components/schemas/TimeRuleLinks'
        MergeDuplicatedItems:
          example: false
          title: MergeDuplicatedItems
          type: boolean
        Name:
          example: Periodic
          title: Name
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        Path:
          example: "\\\\MyAssetServer\\MyDatabase\\MyElement\\Analyses[MyAnalysis]\\\
            TimeRule"
          format: path
          title: Path
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        PlugInName:
          example: Periodic
          title: PlugInName
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        WebException:
          $ref: '#/components/schemas/WebException'
        WebId:
          example: I1TRXDqD5loBNH0erqeqJodtALAROsUFcWU5xGEQwAVXYTCAAROsUFcWU5xGEQwAVXYTCAA
          format: webid
          title: WebId
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
      title: TimeRule
      type: object
    TimeRuleLinks:
      example:
        AnalysisTemplate: AnalysisTemplate
        Analysis: Analysis
        Self: Self
        PlugIn: PlugIn
      properties:
        Analysis:
          title: Analysis
          type: string
          x-link-path: "analyses/{webId}"
          x-link-optional: true
        AnalysisTemplate:
          title: AnalysisTemplate
          type: string
          x-link-path: "analysistemplates/{webId}"
          x-link-optional: true
        PlugIn:
          title: PlugIn
          type: string
          x-link-path: "timeruleplugins/{webId}"
          x-link-optional: true
        Self:
          title: Self
          type: string
          x-link-path: "timerules/{webId}"
          x-link-optional: false
      title: TimeRuleLinks
      type: object
    TimeRulePlugIn:
      example:
        AssemblyTime: 2016-05-25T14:01:07Z
        Path: "\\\\MyAssetServer\\PlugInsTimeRule[Periodic]"
        Description: Creates regular periodic time periods.
        WebException:
          Errors:
          - An error has occurred.
          StatusCode: 500
        LoadedAssemblyTime: 1970-01-01T00:00:00Z
        IsBrowsable: true
        Name: Periodic
        IsNonEditableConfig: false
        LoadedVersion: ""
        Version: 2.8.5.7552
        WebId: I1TPDqD5loBNH0erqeqJodtALAFPRV1lWW1kqmFRgvo4IAwQ
        AssemblyID: 7a635b27-3c3c-4a5f-bba9-01f06e9e525b
        AssemblyLoadProperties:
        - None
        CompatibilityVersion: 2
        Links:
          Self: Self
          AssetServer: AssetServer
        Id: d655f414-9655-4ad6-a615-182fa38200c1
        AssemblyFileName: OSIsoft.AF.Time.TimeRule.Periodic.dll
      properties:
        AssemblyFileName:
          example: OSIsoft.AF.Time.TimeRule.Periodic.dll
          title: AssemblyFileName
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        AssemblyID:
          example: 7a635b27-3c3c-4a5f-bba9-01f06e9e525b
          format: uuid
          title: AssemblyID
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        AssemblyLoadProperties:
          example:
          - None
          items:
            type: string
          title: AssemblyLoadProperties
          type: array
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        AssemblyTime:
          example: 2016-05-25T14:01:07Z
          format: date-time
          title: AssemblyTime
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        CompatibilityVersion:
          example: 2
          format: int32
          title: CompatibilityVersion
          type: integer
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        Description:
          example: Creates regular periodic time periods.
          title: Description
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        Id:
          example: d655f414-9655-4ad6-a615-182fa38200c1
          format: uuid
          title: Id
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        IsBrowsable:
          example: true
          title: IsBrowsable
          type: boolean
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        IsNonEditableConfig:
          example: false
          title: IsNonEditableConfig
          type: boolean
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        Links:
          $ref: '#/components/schemas/TimeRulePlugInLinks'
        LoadedAssemblyTime:
          example: 1970-01-01T00:00:00Z
          format: date-time
          title: LoadedAssemblyTime
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        LoadedVersion:
          example: ""
          title: LoadedVersion
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        Name:
          example: Periodic
          title: Name
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        Path:
          example: "\\\\MyAssetServer\\PlugInsTimeRule[Periodic]"
          format: path
          title: Path
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        Version:
          example: 2.8.5.7552
          title: Version
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        WebException:
          $ref: '#/components/schemas/WebException'
        WebId:
          example: I1TPDqD5loBNH0erqeqJodtALAFPRV1lWW1kqmFRgvo4IAwQ
          format: webid
          title: WebId
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
      title: TimeRulePlugIn
      type: object
    TimeRulePlugInLinks:
      example:
        Self: Self
        AssetServer: AssetServer
      properties:
        AssetServer:
          title: AssetServer
          type: string
          x-link-path: "assetservers/{webId}"
          x-link-optional: false
        Self:
          title: Self
          type: string
          x-link-path: "timeruleplugins/{webId}"
          x-link-optional: false
      title: TimeRulePlugInLinks
      type: object
    TimedValue:
      example:
        Annotated: false
        Errors:
        - Message:
          - An error has occurred.
          FieldName: Value
        - Message:
          - An error has occurred.
          FieldName: Value
        UnitsAbbreviation: m
        Substituted: false
        WebException:
          Errors:
          - An error has occurred.
          StatusCode: 500
        Value: 12.3
        Good: true
        Timestamp: 2014-07-22T14:00:00Z
        Questionable: false
      properties:
        Annotated:
          example: false
          title: Annotated
          type: boolean
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        Errors:
          items:
            $ref: '#/components/schemas/PropertyError'
          title: Errors
          type: array
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        Good:
          example: true
          title: Good
          type: boolean
        Questionable:
          example: false
          title: Questionable
          type: boolean
        Substituted:
          example: false
          title: Substituted
          type: boolean
          x-disallow-post: true
        Timestamp:
          example: 2014-07-22T14:00:00Z
          format: date-time
          title: Timestamp
          type: string
        UnitsAbbreviation:
          example: m
          title: UnitsAbbreviation
          type: string
        Value:
          example: 12.3
          properties: {}
          title: Value
          type: object
        WebException:
          $ref: '#/components/schemas/WebException'
      title: TimedValue
      type: object
    TimedValues:
      example:
        UnitsAbbreviation: UnitsAbbreviation
        WebException:
          Errors:
          - An error has occurred.
          StatusCode: 500
        Items:
        - Annotated: false
          Errors:
          - Message:
            - An error has occurred.
            FieldName: Value
          - Message:
            - An error has occurred.
            FieldName: Value
          UnitsAbbreviation: m
          Substituted: false
          WebException:
            Errors:
            - An error has occurred.
            StatusCode: 500
          Value: 12.3
          Good: true
          Timestamp: 2014-07-22T14:00:00Z
          Questionable: false
        - Annotated: false
          Errors:
          - Message:
            - An error has occurred.
            FieldName: Value
          - Message:
            - An error has occurred.
            FieldName: Value
          UnitsAbbreviation: m
          Substituted: false
          WebException:
            Errors:
            - An error has occurred.
            StatusCode: 500
          Value: 12.3
          Good: true
          Timestamp: 2014-07-22T14:00:00Z
          Questionable: false
      properties:
        Items:
          items:
            $ref: '#/components/schemas/TimedValue'
          title: Items
          type: array
          x-required-post: true
        UnitsAbbreviation:
          title: UnitsAbbreviation
          type: string
          x-disallow-post: true
        WebException:
          $ref: '#/components/schemas/WebException'
      title: TimedValues
      type: object
    Unit:
      example:
        Abbreviation: Hz
        Path: \\MyAssetServer\UOMDatabase\Hertz
        Description: Hertz Unit
        WebException:
          Errors:
          - An error has occurred.
          StatusCode: 500
        ReferenceOffset: 0.0
        Name: Hertz
        Offset: 0.0
        ReferenceUnitAbbreviation: ""
        ReferenceFactor: 1.0
        WebId: I1UtDqD5loBNH0erqeqJodtALAjqwhgeI8lEeV4xeD1db0_A
        Factor: 1.0
        Links:
          ReferenceUnit: ReferenceUnit
          Class: Class
          Self: Self
        Id: 8121ac8e-3ce2-4794-95e3-1783d5d6f4fc
      properties:
        Abbreviation:
          example: Hz
          title: Abbreviation
          type: string
          x-required-post: true
        Description:
          example: Hertz Unit
          title: Description
          type: string
        Factor:
          example: 1.0
          format: double
          title: Factor
          type: number
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        Id:
          example: 8121ac8e-3ce2-4794-95e3-1783d5d6f4fc
          format: uuid
          title: Id
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        Links:
          $ref: '#/components/schemas/UnitLinks'
        Name:
          example: Hertz
          title: Name
          type: string
          x-required-post: true
        Offset:
          example: 0.0
          format: double
          title: Offset
          type: number
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        Path:
          example: \\MyAssetServer\UOMDatabase\Hertz
          format: path
          title: Path
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        ReferenceFactor:
          example: 1.0
          format: double
          title: ReferenceFactor
          type: number
        ReferenceOffset:
          example: 0.0
          format: double
          title: ReferenceOffset
          type: number
        ReferenceUnitAbbreviation:
          example: ""
          title: ReferenceUnitAbbreviation
          type: string
        WebException:
          $ref: '#/components/schemas/WebException'
        WebId:
          example: I1UtDqD5loBNH0erqeqJodtALAjqwhgeI8lEeV4xeD1db0_A
          format: webid
          title: WebId
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
      title: Unit
      type: object
    UnitClass:
      example:
        Path: "\\\\MyAssetServer\\UOMDatabase\\UOMClasses[Power]"
        Description: Power Unit Class
        WebException:
          Errors:
          - An error has occurred.
          StatusCode: 500
        CanonicalUnitAbbreviation: W
        WebId: I1UCDqD5loBNH0erqeqJodtALATbkl-fxulEulDQAVw5HySQ
        Links:
          CanonicalUnit: CanonicalUnit
          Self: Self
          AssetServer: AssetServer
          Units: Units
        Id: f925b94d-6efc-4b94-a50d-0015c391f249
        CanonicalUnitName: watt
        Name: Power
      properties:
        CanonicalUnitAbbreviation:
          example: W
          title: CanonicalUnitAbbreviation
          type: string
          x-required-post: true
        CanonicalUnitName:
          example: watt
          title: CanonicalUnitName
          type: string
          x-required-post: true
        Description:
          example: Power Unit Class
          title: Description
          type: string
        Id:
          example: f925b94d-6efc-4b94-a50d-0015c391f249
          format: uuid
          title: Id
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        Links:
          $ref: '#/components/schemas/UnitClassLinks'
        Name:
          example: Power
          title: Name
          type: string
          x-required-post: true
        Path:
          example: "\\\\MyAssetServer\\UOMDatabase\\UOMClasses[Power]"
          format: path
          title: Path
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        WebException:
          $ref: '#/components/schemas/WebException'
        WebId:
          example: I1UCDqD5loBNH0erqeqJodtALATbkl-fxulEulDQAVw5HySQ
          format: webid
          title: WebId
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
      title: UnitClass
      type: object
    UnitClassLinks:
      example:
        CanonicalUnit: CanonicalUnit
        Self: Self
        AssetServer: AssetServer
        Units: Units
      properties:
        AssetServer:
          title: AssetServer
          type: string
          x-link-path: "assetservers/{webId}"
          x-link-optional: false
        CanonicalUnit:
          title: CanonicalUnit
          type: string
          x-link-path: "unitclasses/{webId}/canonicalunit"
          x-link-optional: false
        Self:
          title: Self
          type: string
          x-link-path: "unitclasses/{webId}"
          x-link-optional: false
        Units:
          title: Units
          type: string
          x-link-path: "unitclasses/{webId}/units"
          x-link-optional: false
      title: UnitClassLinks
      type: object
    UnitLinks:
      example:
        ReferenceUnit: ReferenceUnit
        Class: Class
        Self: Self
      properties:
        Class:
          title: Class
          type: string
          x-link-path: "unitclasses/{webId}"
          x-link-optional: false
        ReferenceUnit:
          title: ReferenceUnit
          type: string
          x-link-path: "units/{webId}"
          x-link-optional: true
        Self:
          title: Self
          type: string
          x-link-path: "units/{webId}"
          x-link-optional: false
      title: UnitLinks
      type: object
    UserInfo:
      example:
        IdentityType: WindowsIdentity
        WebException:
          Errors:
          - An error has occurred.
          StatusCode: 500
        IsAuthenticated: true
        ImpersonationLevel: None
        Name: MyDomain\Username
        SID: S-1-5-21-2083424470-1893017325-1469799231-71366
      properties:
        IdentityType:
          example: WindowsIdentity
          title: IdentityType
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        ImpersonationLevel:
          example: None
          title: ImpersonationLevel
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        IsAuthenticated:
          example: true
          title: IsAuthenticated
          type: boolean
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        Name:
          example: MyDomain\Username
          title: Name
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        SID:
          example: S-1-5-21-2083424470-1893017325-1469799231-71366
          format: sid
          title: SID
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        WebException:
          $ref: '#/components/schemas/WebException'
      title: UserInfo
      type: object
    Value:
      example:
        WebException:
          Errors:
          - An error has occurred.
          StatusCode: 500
        Value: 12.3
        Exception:
          Errors:
          - An error has occurred.
      properties:
        Exception:
          $ref: '#/components/schemas/Errors'
        Value:
          example: 12.3
          properties: {}
          title: Value
          type: object
        WebException:
          $ref: '#/components/schemas/WebException'
      title: Value
      type: object
    ValueQuery:
      example:
        AttributeValue: 12.3
        WebException:
          Errors:
          - An error has occurred.
          StatusCode: 500
        AttributeUOM: pound-force per square inch
        SearchOperator: LessThan
        AttributeName: Pressure
      properties:
        AttributeName:
          example: Pressure
          title: AttributeName
          type: string
        AttributeUOM:
          example: pound-force per square inch
          title: AttributeUOM
          type: string
        AttributeValue:
          example: 12.3
          properties: {}
          title: AttributeValue
          type: object
        SearchOperator:
          example: LessThan
          title: SearchOperator
          type: string
        WebException:
          $ref: '#/components/schemas/WebException'
      title: ValueQuery
      type: object
    Version:
      properties:
        Build:
          example: "201"
          title: Build
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        FullVersion:
          example: 1.10.0.201
          title: FullVersion
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        MajorMinorRevision:
          example: 1.10.0
          title: MajorMinorRevision
          type: string
          x-disallow-patch: true
          x-disallow-put: true
          x-disallow-post: true
        WebException:
          $ref: '#/components/schemas/WebException'
      title: Version
      type: object
    WebException:
      example:
        Errors:
        - An error has occurred.
        StatusCode: 500
      properties:
        Errors:
          example:
          - An error has occurred.
          items:
            type: string
          title: Errors
          type: array
        StatusCode:
          enum:
          - 100
          - 101
          - 200
          - 201
          - 202
          - 203
          - 204
          - 205
          - 206
          - 207
          - 300
          - 301
          - 302
          - 303
          - 304
          - 305
          - 306
          - 307
          - 400
          - 401
          - 402
          - 403
          - 404
          - 405
          - 406
          - 407
          - 408
          - 409
          - 410
          - 411
          - 412
          - 413
          - 414
          - 415
          - 416
          - 417
          - 426
          - 500
          - 501
          - 502
          - 503
          - 504
          - 505
          example: 500
          format: int32
          title: StatusCode
          type: integer
      title: WebException
      type: object
x-original-swagger-version: "2.0"
