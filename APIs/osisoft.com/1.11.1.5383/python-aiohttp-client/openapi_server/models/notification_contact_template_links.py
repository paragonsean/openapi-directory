# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class NotificationContactTemplateLinks(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, asset_server: str=None, notification_contact_templates: str=None, notification_plug_in: str=None, security: str=None, security_entries: str=None, _self: str=None):
        """NotificationContactTemplateLinks - a model defined in OpenAPI

        :param asset_server: The asset_server of this NotificationContactTemplateLinks.
        :param notification_contact_templates: The notification_contact_templates of this NotificationContactTemplateLinks.
        :param notification_plug_in: The notification_plug_in of this NotificationContactTemplateLinks.
        :param security: The security of this NotificationContactTemplateLinks.
        :param security_entries: The security_entries of this NotificationContactTemplateLinks.
        :param _self: The _self of this NotificationContactTemplateLinks.
        """
        self.openapi_types = {
            'asset_server': str,
            'notification_contact_templates': str,
            'notification_plug_in': str,
            'security': str,
            'security_entries': str,
            '_self': str
        }

        self.attribute_map = {
            'asset_server': 'AssetServer',
            'notification_contact_templates': 'NotificationContactTemplates',
            'notification_plug_in': 'NotificationPlugIn',
            'security': 'Security',
            'security_entries': 'SecurityEntries',
            '_self': 'Self'
        }

        self._asset_server = asset_server
        self._notification_contact_templates = notification_contact_templates
        self._notification_plug_in = notification_plug_in
        self._security = security
        self._security_entries = security_entries
        self.__self = _self

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NotificationContactTemplateLinks':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The NotificationContactTemplateLinks of this NotificationContactTemplateLinks.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def asset_server(self):
        """Gets the asset_server of this NotificationContactTemplateLinks.


        :return: The asset_server of this NotificationContactTemplateLinks.
        :rtype: str
        """
        return self._asset_server

    @asset_server.setter
    def asset_server(self, asset_server):
        """Sets the asset_server of this NotificationContactTemplateLinks.


        :param asset_server: The asset_server of this NotificationContactTemplateLinks.
        :type asset_server: str
        """

        self._asset_server = asset_server

    @property
    def notification_contact_templates(self):
        """Gets the notification_contact_templates of this NotificationContactTemplateLinks.


        :return: The notification_contact_templates of this NotificationContactTemplateLinks.
        :rtype: str
        """
        return self._notification_contact_templates

    @notification_contact_templates.setter
    def notification_contact_templates(self, notification_contact_templates):
        """Sets the notification_contact_templates of this NotificationContactTemplateLinks.


        :param notification_contact_templates: The notification_contact_templates of this NotificationContactTemplateLinks.
        :type notification_contact_templates: str
        """

        self._notification_contact_templates = notification_contact_templates

    @property
    def notification_plug_in(self):
        """Gets the notification_plug_in of this NotificationContactTemplateLinks.


        :return: The notification_plug_in of this NotificationContactTemplateLinks.
        :rtype: str
        """
        return self._notification_plug_in

    @notification_plug_in.setter
    def notification_plug_in(self, notification_plug_in):
        """Sets the notification_plug_in of this NotificationContactTemplateLinks.


        :param notification_plug_in: The notification_plug_in of this NotificationContactTemplateLinks.
        :type notification_plug_in: str
        """

        self._notification_plug_in = notification_plug_in

    @property
    def security(self):
        """Gets the security of this NotificationContactTemplateLinks.


        :return: The security of this NotificationContactTemplateLinks.
        :rtype: str
        """
        return self._security

    @security.setter
    def security(self, security):
        """Sets the security of this NotificationContactTemplateLinks.


        :param security: The security of this NotificationContactTemplateLinks.
        :type security: str
        """

        self._security = security

    @property
    def security_entries(self):
        """Gets the security_entries of this NotificationContactTemplateLinks.


        :return: The security_entries of this NotificationContactTemplateLinks.
        :rtype: str
        """
        return self._security_entries

    @security_entries.setter
    def security_entries(self, security_entries):
        """Sets the security_entries of this NotificationContactTemplateLinks.


        :param security_entries: The security_entries of this NotificationContactTemplateLinks.
        :type security_entries: str
        """

        self._security_entries = security_entries

    @property
    def _self(self):
        """Gets the _self of this NotificationContactTemplateLinks.


        :return: The _self of this NotificationContactTemplateLinks.
        :rtype: str
        """
        return self.__self

    @_self.setter
    def _self(self, _self):
        """Sets the _self of this NotificationContactTemplateLinks.


        :param _self: The _self of this NotificationContactTemplateLinks.
        :type _self: str
        """

        self.__self = _self
