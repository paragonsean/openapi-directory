# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AttributeLinks(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, attributes: str=None, categories: str=None, element: str=None, end_value: str=None, enumeration_set: str=None, enumeration_values: str=None, event_frame: str=None, interpolated_data: str=None, parent: str=None, plot_data: str=None, point: str=None, recorded_data: str=None, _self: str=None, summary_data: str=None, template: str=None, trait: str=None, value: str=None):
        """AttributeLinks - a model defined in OpenAPI

        :param attributes: The attributes of this AttributeLinks.
        :param categories: The categories of this AttributeLinks.
        :param element: The element of this AttributeLinks.
        :param end_value: The end_value of this AttributeLinks.
        :param enumeration_set: The enumeration_set of this AttributeLinks.
        :param enumeration_values: The enumeration_values of this AttributeLinks.
        :param event_frame: The event_frame of this AttributeLinks.
        :param interpolated_data: The interpolated_data of this AttributeLinks.
        :param parent: The parent of this AttributeLinks.
        :param plot_data: The plot_data of this AttributeLinks.
        :param point: The point of this AttributeLinks.
        :param recorded_data: The recorded_data of this AttributeLinks.
        :param _self: The _self of this AttributeLinks.
        :param summary_data: The summary_data of this AttributeLinks.
        :param template: The template of this AttributeLinks.
        :param trait: The trait of this AttributeLinks.
        :param value: The value of this AttributeLinks.
        """
        self.openapi_types = {
            'attributes': str,
            'categories': str,
            'element': str,
            'end_value': str,
            'enumeration_set': str,
            'enumeration_values': str,
            'event_frame': str,
            'interpolated_data': str,
            'parent': str,
            'plot_data': str,
            'point': str,
            'recorded_data': str,
            '_self': str,
            'summary_data': str,
            'template': str,
            'trait': str,
            'value': str
        }

        self.attribute_map = {
            'attributes': 'Attributes',
            'categories': 'Categories',
            'element': 'Element',
            'end_value': 'EndValue',
            'enumeration_set': 'EnumerationSet',
            'enumeration_values': 'EnumerationValues',
            'event_frame': 'EventFrame',
            'interpolated_data': 'InterpolatedData',
            'parent': 'Parent',
            'plot_data': 'PlotData',
            'point': 'Point',
            'recorded_data': 'RecordedData',
            '_self': 'Self',
            'summary_data': 'SummaryData',
            'template': 'Template',
            'trait': 'Trait',
            'value': 'Value'
        }

        self._attributes = attributes
        self._categories = categories
        self._element = element
        self._end_value = end_value
        self._enumeration_set = enumeration_set
        self._enumeration_values = enumeration_values
        self._event_frame = event_frame
        self._interpolated_data = interpolated_data
        self._parent = parent
        self._plot_data = plot_data
        self._point = point
        self._recorded_data = recorded_data
        self.__self = _self
        self._summary_data = summary_data
        self._template = template
        self._trait = trait
        self._value = value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AttributeLinks':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AttributeLinks of this AttributeLinks.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def attributes(self):
        """Gets the attributes of this AttributeLinks.


        :return: The attributes of this AttributeLinks.
        :rtype: str
        """
        return self._attributes

    @attributes.setter
    def attributes(self, attributes):
        """Sets the attributes of this AttributeLinks.


        :param attributes: The attributes of this AttributeLinks.
        :type attributes: str
        """

        self._attributes = attributes

    @property
    def categories(self):
        """Gets the categories of this AttributeLinks.


        :return: The categories of this AttributeLinks.
        :rtype: str
        """
        return self._categories

    @categories.setter
    def categories(self, categories):
        """Sets the categories of this AttributeLinks.


        :param categories: The categories of this AttributeLinks.
        :type categories: str
        """

        self._categories = categories

    @property
    def element(self):
        """Gets the element of this AttributeLinks.


        :return: The element of this AttributeLinks.
        :rtype: str
        """
        return self._element

    @element.setter
    def element(self, element):
        """Sets the element of this AttributeLinks.


        :param element: The element of this AttributeLinks.
        :type element: str
        """

        self._element = element

    @property
    def end_value(self):
        """Gets the end_value of this AttributeLinks.


        :return: The end_value of this AttributeLinks.
        :rtype: str
        """
        return self._end_value

    @end_value.setter
    def end_value(self, end_value):
        """Sets the end_value of this AttributeLinks.


        :param end_value: The end_value of this AttributeLinks.
        :type end_value: str
        """

        self._end_value = end_value

    @property
    def enumeration_set(self):
        """Gets the enumeration_set of this AttributeLinks.


        :return: The enumeration_set of this AttributeLinks.
        :rtype: str
        """
        return self._enumeration_set

    @enumeration_set.setter
    def enumeration_set(self, enumeration_set):
        """Sets the enumeration_set of this AttributeLinks.


        :param enumeration_set: The enumeration_set of this AttributeLinks.
        :type enumeration_set: str
        """

        self._enumeration_set = enumeration_set

    @property
    def enumeration_values(self):
        """Gets the enumeration_values of this AttributeLinks.


        :return: The enumeration_values of this AttributeLinks.
        :rtype: str
        """
        return self._enumeration_values

    @enumeration_values.setter
    def enumeration_values(self, enumeration_values):
        """Sets the enumeration_values of this AttributeLinks.


        :param enumeration_values: The enumeration_values of this AttributeLinks.
        :type enumeration_values: str
        """

        self._enumeration_values = enumeration_values

    @property
    def event_frame(self):
        """Gets the event_frame of this AttributeLinks.


        :return: The event_frame of this AttributeLinks.
        :rtype: str
        """
        return self._event_frame

    @event_frame.setter
    def event_frame(self, event_frame):
        """Sets the event_frame of this AttributeLinks.


        :param event_frame: The event_frame of this AttributeLinks.
        :type event_frame: str
        """

        self._event_frame = event_frame

    @property
    def interpolated_data(self):
        """Gets the interpolated_data of this AttributeLinks.


        :return: The interpolated_data of this AttributeLinks.
        :rtype: str
        """
        return self._interpolated_data

    @interpolated_data.setter
    def interpolated_data(self, interpolated_data):
        """Sets the interpolated_data of this AttributeLinks.


        :param interpolated_data: The interpolated_data of this AttributeLinks.
        :type interpolated_data: str
        """

        self._interpolated_data = interpolated_data

    @property
    def parent(self):
        """Gets the parent of this AttributeLinks.


        :return: The parent of this AttributeLinks.
        :rtype: str
        """
        return self._parent

    @parent.setter
    def parent(self, parent):
        """Sets the parent of this AttributeLinks.


        :param parent: The parent of this AttributeLinks.
        :type parent: str
        """

        self._parent = parent

    @property
    def plot_data(self):
        """Gets the plot_data of this AttributeLinks.


        :return: The plot_data of this AttributeLinks.
        :rtype: str
        """
        return self._plot_data

    @plot_data.setter
    def plot_data(self, plot_data):
        """Sets the plot_data of this AttributeLinks.


        :param plot_data: The plot_data of this AttributeLinks.
        :type plot_data: str
        """

        self._plot_data = plot_data

    @property
    def point(self):
        """Gets the point of this AttributeLinks.


        :return: The point of this AttributeLinks.
        :rtype: str
        """
        return self._point

    @point.setter
    def point(self, point):
        """Sets the point of this AttributeLinks.


        :param point: The point of this AttributeLinks.
        :type point: str
        """

        self._point = point

    @property
    def recorded_data(self):
        """Gets the recorded_data of this AttributeLinks.


        :return: The recorded_data of this AttributeLinks.
        :rtype: str
        """
        return self._recorded_data

    @recorded_data.setter
    def recorded_data(self, recorded_data):
        """Sets the recorded_data of this AttributeLinks.


        :param recorded_data: The recorded_data of this AttributeLinks.
        :type recorded_data: str
        """

        self._recorded_data = recorded_data

    @property
    def _self(self):
        """Gets the _self of this AttributeLinks.


        :return: The _self of this AttributeLinks.
        :rtype: str
        """
        return self.__self

    @_self.setter
    def _self(self, _self):
        """Sets the _self of this AttributeLinks.


        :param _self: The _self of this AttributeLinks.
        :type _self: str
        """

        self.__self = _self

    @property
    def summary_data(self):
        """Gets the summary_data of this AttributeLinks.


        :return: The summary_data of this AttributeLinks.
        :rtype: str
        """
        return self._summary_data

    @summary_data.setter
    def summary_data(self, summary_data):
        """Sets the summary_data of this AttributeLinks.


        :param summary_data: The summary_data of this AttributeLinks.
        :type summary_data: str
        """

        self._summary_data = summary_data

    @property
    def template(self):
        """Gets the template of this AttributeLinks.


        :return: The template of this AttributeLinks.
        :rtype: str
        """
        return self._template

    @template.setter
    def template(self, template):
        """Sets the template of this AttributeLinks.


        :param template: The template of this AttributeLinks.
        :type template: str
        """

        self._template = template

    @property
    def trait(self):
        """Gets the trait of this AttributeLinks.


        :return: The trait of this AttributeLinks.
        :rtype: str
        """
        return self._trait

    @trait.setter
    def trait(self, trait):
        """Sets the trait of this AttributeLinks.


        :param trait: The trait of this AttributeLinks.
        :type trait: str
        """

        self._trait = trait

    @property
    def value(self):
        """Gets the value of this AttributeLinks.


        :return: The value of this AttributeLinks.
        :rtype: str
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this AttributeLinks.


        :param value: The value of this AttributeLinks.
        :type value: str
        """

        self._value = value
