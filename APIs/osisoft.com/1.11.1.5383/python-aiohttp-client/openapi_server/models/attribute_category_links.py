# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AttributeCategoryLinks(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, database: str=None, security: str=None, security_entries: str=None, _self: str=None):
        """AttributeCategoryLinks - a model defined in OpenAPI

        :param database: The database of this AttributeCategoryLinks.
        :param security: The security of this AttributeCategoryLinks.
        :param security_entries: The security_entries of this AttributeCategoryLinks.
        :param _self: The _self of this AttributeCategoryLinks.
        """
        self.openapi_types = {
            'database': str,
            'security': str,
            'security_entries': str,
            '_self': str
        }

        self.attribute_map = {
            'database': 'Database',
            'security': 'Security',
            'security_entries': 'SecurityEntries',
            '_self': 'Self'
        }

        self._database = database
        self._security = security
        self._security_entries = security_entries
        self.__self = _self

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AttributeCategoryLinks':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AttributeCategoryLinks of this AttributeCategoryLinks.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def database(self):
        """Gets the database of this AttributeCategoryLinks.


        :return: The database of this AttributeCategoryLinks.
        :rtype: str
        """
        return self._database

    @database.setter
    def database(self, database):
        """Sets the database of this AttributeCategoryLinks.


        :param database: The database of this AttributeCategoryLinks.
        :type database: str
        """

        self._database = database

    @property
    def security(self):
        """Gets the security of this AttributeCategoryLinks.


        :return: The security of this AttributeCategoryLinks.
        :rtype: str
        """
        return self._security

    @security.setter
    def security(self, security):
        """Sets the security of this AttributeCategoryLinks.


        :param security: The security of this AttributeCategoryLinks.
        :type security: str
        """

        self._security = security

    @property
    def security_entries(self):
        """Gets the security_entries of this AttributeCategoryLinks.


        :return: The security_entries of this AttributeCategoryLinks.
        :rtype: str
        """
        return self._security_entries

    @security_entries.setter
    def security_entries(self, security_entries):
        """Sets the security_entries of this AttributeCategoryLinks.


        :param security_entries: The security_entries of this AttributeCategoryLinks.
        :type security_entries: str
        """

        self._security_entries = security_entries

    @property
    def _self(self):
        """Gets the _self of this AttributeCategoryLinks.


        :return: The _self of this AttributeCategoryLinks.
        :rtype: str
        """
        return self.__self

    @_self.setter
    def _self(self, _self):
        """Sets the _self of this AttributeCategoryLinks.


        :param _self: The _self of this AttributeCategoryLinks.
        :type _self: str
        """

        self.__self = _self
