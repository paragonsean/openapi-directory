# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.pi_point_data_reference import PIPointDataReference
from openapi_server.models.web_exception import WebException
from openapi_server import util


class DataReference(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, pi_point: PIPointDataReference=None, type: str=None, web_exception: WebException=None):
        """DataReference - a model defined in OpenAPI

        :param pi_point: The pi_point of this DataReference.
        :param type: The type of this DataReference.
        :param web_exception: The web_exception of this DataReference.
        """
        self.openapi_types = {
            'pi_point': PIPointDataReference,
            'type': str,
            'web_exception': WebException
        }

        self.attribute_map = {
            'pi_point': 'PIPoint',
            'type': 'Type',
            'web_exception': 'WebException'
        }

        self._pi_point = pi_point
        self._type = type
        self._web_exception = web_exception

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DataReference':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DataReference of this DataReference.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def pi_point(self):
        """Gets the pi_point of this DataReference.


        :return: The pi_point of this DataReference.
        :rtype: PIPointDataReference
        """
        return self._pi_point

    @pi_point.setter
    def pi_point(self, pi_point):
        """Sets the pi_point of this DataReference.


        :param pi_point: The pi_point of this DataReference.
        :type pi_point: PIPointDataReference
        """

        self._pi_point = pi_point

    @property
    def type(self):
        """Gets the type of this DataReference.


        :return: The type of this DataReference.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this DataReference.


        :param type: The type of this DataReference.
        :type type: str
        """

        self._type = type

    @property
    def web_exception(self):
        """Gets the web_exception of this DataReference.


        :return: The web_exception of this DataReference.
        :rtype: WebException
        """
        return self._web_exception

    @web_exception.setter
    def web_exception(self, web_exception):
        """Sets the web_exception of this DataReference.


        :param web_exception: The web_exception of this DataReference.
        :type web_exception: WebException
        """

        self._web_exception = web_exception
