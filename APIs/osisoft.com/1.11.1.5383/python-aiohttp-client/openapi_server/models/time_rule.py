# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.time_rule_links import TimeRuleLinks
from openapi_server.models.web_exception import WebException
from openapi_server import util


class TimeRule(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, config_string: str=None, config_string_stored: str=None, description: str=None, display_string: str=None, editor_type: str=None, id: str=None, is_configured: bool=None, is_initializing: bool=None, links: TimeRuleLinks=None, merge_duplicated_items: bool=None, name: str=None, path: str=None, plug_in_name: str=None, web_exception: WebException=None, web_id: str=None):
        """TimeRule - a model defined in OpenAPI

        :param config_string: The config_string of this TimeRule.
        :param config_string_stored: The config_string_stored of this TimeRule.
        :param description: The description of this TimeRule.
        :param display_string: The display_string of this TimeRule.
        :param editor_type: The editor_type of this TimeRule.
        :param id: The id of this TimeRule.
        :param is_configured: The is_configured of this TimeRule.
        :param is_initializing: The is_initializing of this TimeRule.
        :param links: The links of this TimeRule.
        :param merge_duplicated_items: The merge_duplicated_items of this TimeRule.
        :param name: The name of this TimeRule.
        :param path: The path of this TimeRule.
        :param plug_in_name: The plug_in_name of this TimeRule.
        :param web_exception: The web_exception of this TimeRule.
        :param web_id: The web_id of this TimeRule.
        """
        self.openapi_types = {
            'config_string': str,
            'config_string_stored': str,
            'description': str,
            'display_string': str,
            'editor_type': str,
            'id': str,
            'is_configured': bool,
            'is_initializing': bool,
            'links': TimeRuleLinks,
            'merge_duplicated_items': bool,
            'name': str,
            'path': str,
            'plug_in_name': str,
            'web_exception': WebException,
            'web_id': str
        }

        self.attribute_map = {
            'config_string': 'ConfigString',
            'config_string_stored': 'ConfigStringStored',
            'description': 'Description',
            'display_string': 'DisplayString',
            'editor_type': 'EditorType',
            'id': 'Id',
            'is_configured': 'IsConfigured',
            'is_initializing': 'IsInitializing',
            'links': 'Links',
            'merge_duplicated_items': 'MergeDuplicatedItems',
            'name': 'Name',
            'path': 'Path',
            'plug_in_name': 'PlugInName',
            'web_exception': 'WebException',
            'web_id': 'WebId'
        }

        self._config_string = config_string
        self._config_string_stored = config_string_stored
        self._description = description
        self._display_string = display_string
        self._editor_type = editor_type
        self._id = id
        self._is_configured = is_configured
        self._is_initializing = is_initializing
        self._links = links
        self._merge_duplicated_items = merge_duplicated_items
        self._name = name
        self._path = path
        self._plug_in_name = plug_in_name
        self._web_exception = web_exception
        self._web_id = web_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TimeRule':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TimeRule of this TimeRule.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def config_string(self):
        """Gets the config_string of this TimeRule.


        :return: The config_string of this TimeRule.
        :rtype: str
        """
        return self._config_string

    @config_string.setter
    def config_string(self, config_string):
        """Sets the config_string of this TimeRule.


        :param config_string: The config_string of this TimeRule.
        :type config_string: str
        """

        self._config_string = config_string

    @property
    def config_string_stored(self):
        """Gets the config_string_stored of this TimeRule.


        :return: The config_string_stored of this TimeRule.
        :rtype: str
        """
        return self._config_string_stored

    @config_string_stored.setter
    def config_string_stored(self, config_string_stored):
        """Sets the config_string_stored of this TimeRule.


        :param config_string_stored: The config_string_stored of this TimeRule.
        :type config_string_stored: str
        """

        self._config_string_stored = config_string_stored

    @property
    def description(self):
        """Gets the description of this TimeRule.


        :return: The description of this TimeRule.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this TimeRule.


        :param description: The description of this TimeRule.
        :type description: str
        """

        self._description = description

    @property
    def display_string(self):
        """Gets the display_string of this TimeRule.


        :return: The display_string of this TimeRule.
        :rtype: str
        """
        return self._display_string

    @display_string.setter
    def display_string(self, display_string):
        """Sets the display_string of this TimeRule.


        :param display_string: The display_string of this TimeRule.
        :type display_string: str
        """

        self._display_string = display_string

    @property
    def editor_type(self):
        """Gets the editor_type of this TimeRule.


        :return: The editor_type of this TimeRule.
        :rtype: str
        """
        return self._editor_type

    @editor_type.setter
    def editor_type(self, editor_type):
        """Sets the editor_type of this TimeRule.


        :param editor_type: The editor_type of this TimeRule.
        :type editor_type: str
        """

        self._editor_type = editor_type

    @property
    def id(self):
        """Gets the id of this TimeRule.


        :return: The id of this TimeRule.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this TimeRule.


        :param id: The id of this TimeRule.
        :type id: str
        """

        self._id = id

    @property
    def is_configured(self):
        """Gets the is_configured of this TimeRule.


        :return: The is_configured of this TimeRule.
        :rtype: bool
        """
        return self._is_configured

    @is_configured.setter
    def is_configured(self, is_configured):
        """Sets the is_configured of this TimeRule.


        :param is_configured: The is_configured of this TimeRule.
        :type is_configured: bool
        """

        self._is_configured = is_configured

    @property
    def is_initializing(self):
        """Gets the is_initializing of this TimeRule.


        :return: The is_initializing of this TimeRule.
        :rtype: bool
        """
        return self._is_initializing

    @is_initializing.setter
    def is_initializing(self, is_initializing):
        """Sets the is_initializing of this TimeRule.


        :param is_initializing: The is_initializing of this TimeRule.
        :type is_initializing: bool
        """

        self._is_initializing = is_initializing

    @property
    def links(self):
        """Gets the links of this TimeRule.


        :return: The links of this TimeRule.
        :rtype: TimeRuleLinks
        """
        return self._links

    @links.setter
    def links(self, links):
        """Sets the links of this TimeRule.


        :param links: The links of this TimeRule.
        :type links: TimeRuleLinks
        """

        self._links = links

    @property
    def merge_duplicated_items(self):
        """Gets the merge_duplicated_items of this TimeRule.


        :return: The merge_duplicated_items of this TimeRule.
        :rtype: bool
        """
        return self._merge_duplicated_items

    @merge_duplicated_items.setter
    def merge_duplicated_items(self, merge_duplicated_items):
        """Sets the merge_duplicated_items of this TimeRule.


        :param merge_duplicated_items: The merge_duplicated_items of this TimeRule.
        :type merge_duplicated_items: bool
        """

        self._merge_duplicated_items = merge_duplicated_items

    @property
    def name(self):
        """Gets the name of this TimeRule.


        :return: The name of this TimeRule.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this TimeRule.


        :param name: The name of this TimeRule.
        :type name: str
        """

        self._name = name

    @property
    def path(self):
        """Gets the path of this TimeRule.


        :return: The path of this TimeRule.
        :rtype: str
        """
        return self._path

    @path.setter
    def path(self, path):
        """Sets the path of this TimeRule.


        :param path: The path of this TimeRule.
        :type path: str
        """

        self._path = path

    @property
    def plug_in_name(self):
        """Gets the plug_in_name of this TimeRule.


        :return: The plug_in_name of this TimeRule.
        :rtype: str
        """
        return self._plug_in_name

    @plug_in_name.setter
    def plug_in_name(self, plug_in_name):
        """Sets the plug_in_name of this TimeRule.


        :param plug_in_name: The plug_in_name of this TimeRule.
        :type plug_in_name: str
        """

        self._plug_in_name = plug_in_name

    @property
    def web_exception(self):
        """Gets the web_exception of this TimeRule.


        :return: The web_exception of this TimeRule.
        :rtype: WebException
        """
        return self._web_exception

    @web_exception.setter
    def web_exception(self, web_exception):
        """Sets the web_exception of this TimeRule.


        :param web_exception: The web_exception of this TimeRule.
        :type web_exception: WebException
        """

        self._web_exception = web_exception

    @property
    def web_id(self):
        """Gets the web_id of this TimeRule.


        :return: The web_id of this TimeRule.
        :rtype: str
        """
        return self._web_id

    @web_id.setter
    def web_id(self, web_id):
        """Sets the web_id of this TimeRule.


        :param web_id: The web_id of this TimeRule.
        :type web_id: str
        """

        self._web_id = web_id
