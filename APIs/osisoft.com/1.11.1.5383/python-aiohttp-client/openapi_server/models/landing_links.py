# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class LandingLinks(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, asset_servers: str=None, data_servers: str=None, search: str=None, _self: str=None, system: str=None):
        """LandingLinks - a model defined in OpenAPI

        :param asset_servers: The asset_servers of this LandingLinks.
        :param data_servers: The data_servers of this LandingLinks.
        :param search: The search of this LandingLinks.
        :param _self: The _self of this LandingLinks.
        :param system: The system of this LandingLinks.
        """
        self.openapi_types = {
            'asset_servers': str,
            'data_servers': str,
            'search': str,
            '_self': str,
            'system': str
        }

        self.attribute_map = {
            'asset_servers': 'AssetServers',
            'data_servers': 'DataServers',
            'search': 'Search',
            '_self': 'Self',
            'system': 'System'
        }

        self._asset_servers = asset_servers
        self._data_servers = data_servers
        self._search = search
        self.__self = _self
        self._system = system

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LandingLinks':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LandingLinks of this LandingLinks.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def asset_servers(self):
        """Gets the asset_servers of this LandingLinks.


        :return: The asset_servers of this LandingLinks.
        :rtype: str
        """
        return self._asset_servers

    @asset_servers.setter
    def asset_servers(self, asset_servers):
        """Sets the asset_servers of this LandingLinks.


        :param asset_servers: The asset_servers of this LandingLinks.
        :type asset_servers: str
        """

        self._asset_servers = asset_servers

    @property
    def data_servers(self):
        """Gets the data_servers of this LandingLinks.


        :return: The data_servers of this LandingLinks.
        :rtype: str
        """
        return self._data_servers

    @data_servers.setter
    def data_servers(self, data_servers):
        """Sets the data_servers of this LandingLinks.


        :param data_servers: The data_servers of this LandingLinks.
        :type data_servers: str
        """

        self._data_servers = data_servers

    @property
    def search(self):
        """Gets the search of this LandingLinks.


        :return: The search of this LandingLinks.
        :rtype: str
        """
        return self._search

    @search.setter
    def search(self, search):
        """Sets the search of this LandingLinks.


        :param search: The search of this LandingLinks.
        :type search: str
        """

        self._search = search

    @property
    def _self(self):
        """Gets the _self of this LandingLinks.


        :return: The _self of this LandingLinks.
        :rtype: str
        """
        return self.__self

    @_self.setter
    def _self(self, _self):
        """Sets the _self of this LandingLinks.


        :param _self: The _self of this LandingLinks.
        :type _self: str
        """

        self.__self = _self

    @property
    def system(self):
        """Gets the system of this LandingLinks.


        :return: The system of this LandingLinks.
        :rtype: str
        """
        return self._system

    @system.setter
    def system(self, system):
        """Sets the system of this LandingLinks.


        :param system: The system of this LandingLinks.
        :type system: str
        """

        self._system = system
