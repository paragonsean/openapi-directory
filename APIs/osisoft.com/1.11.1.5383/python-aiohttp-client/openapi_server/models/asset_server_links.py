# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AssetServerLinks(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, analysis_rule_plug_ins: str=None, databases: str=None, notification_contact_templates: str=None, notification_plug_ins: str=None, security: str=None, security_entries: str=None, security_identities: str=None, security_mappings: str=None, _self: str=None, time_rule_plug_ins: str=None, unit_classes: str=None):
        """AssetServerLinks - a model defined in OpenAPI

        :param analysis_rule_plug_ins: The analysis_rule_plug_ins of this AssetServerLinks.
        :param databases: The databases of this AssetServerLinks.
        :param notification_contact_templates: The notification_contact_templates of this AssetServerLinks.
        :param notification_plug_ins: The notification_plug_ins of this AssetServerLinks.
        :param security: The security of this AssetServerLinks.
        :param security_entries: The security_entries of this AssetServerLinks.
        :param security_identities: The security_identities of this AssetServerLinks.
        :param security_mappings: The security_mappings of this AssetServerLinks.
        :param _self: The _self of this AssetServerLinks.
        :param time_rule_plug_ins: The time_rule_plug_ins of this AssetServerLinks.
        :param unit_classes: The unit_classes of this AssetServerLinks.
        """
        self.openapi_types = {
            'analysis_rule_plug_ins': str,
            'databases': str,
            'notification_contact_templates': str,
            'notification_plug_ins': str,
            'security': str,
            'security_entries': str,
            'security_identities': str,
            'security_mappings': str,
            '_self': str,
            'time_rule_plug_ins': str,
            'unit_classes': str
        }

        self.attribute_map = {
            'analysis_rule_plug_ins': 'AnalysisRulePlugIns',
            'databases': 'Databases',
            'notification_contact_templates': 'NotificationContactTemplates',
            'notification_plug_ins': 'NotificationPlugIns',
            'security': 'Security',
            'security_entries': 'SecurityEntries',
            'security_identities': 'SecurityIdentities',
            'security_mappings': 'SecurityMappings',
            '_self': 'Self',
            'time_rule_plug_ins': 'TimeRulePlugIns',
            'unit_classes': 'UnitClasses'
        }

        self._analysis_rule_plug_ins = analysis_rule_plug_ins
        self._databases = databases
        self._notification_contact_templates = notification_contact_templates
        self._notification_plug_ins = notification_plug_ins
        self._security = security
        self._security_entries = security_entries
        self._security_identities = security_identities
        self._security_mappings = security_mappings
        self.__self = _self
        self._time_rule_plug_ins = time_rule_plug_ins
        self._unit_classes = unit_classes

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AssetServerLinks':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AssetServerLinks of this AssetServerLinks.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def analysis_rule_plug_ins(self):
        """Gets the analysis_rule_plug_ins of this AssetServerLinks.


        :return: The analysis_rule_plug_ins of this AssetServerLinks.
        :rtype: str
        """
        return self._analysis_rule_plug_ins

    @analysis_rule_plug_ins.setter
    def analysis_rule_plug_ins(self, analysis_rule_plug_ins):
        """Sets the analysis_rule_plug_ins of this AssetServerLinks.


        :param analysis_rule_plug_ins: The analysis_rule_plug_ins of this AssetServerLinks.
        :type analysis_rule_plug_ins: str
        """

        self._analysis_rule_plug_ins = analysis_rule_plug_ins

    @property
    def databases(self):
        """Gets the databases of this AssetServerLinks.


        :return: The databases of this AssetServerLinks.
        :rtype: str
        """
        return self._databases

    @databases.setter
    def databases(self, databases):
        """Sets the databases of this AssetServerLinks.


        :param databases: The databases of this AssetServerLinks.
        :type databases: str
        """

        self._databases = databases

    @property
    def notification_contact_templates(self):
        """Gets the notification_contact_templates of this AssetServerLinks.


        :return: The notification_contact_templates of this AssetServerLinks.
        :rtype: str
        """
        return self._notification_contact_templates

    @notification_contact_templates.setter
    def notification_contact_templates(self, notification_contact_templates):
        """Sets the notification_contact_templates of this AssetServerLinks.


        :param notification_contact_templates: The notification_contact_templates of this AssetServerLinks.
        :type notification_contact_templates: str
        """

        self._notification_contact_templates = notification_contact_templates

    @property
    def notification_plug_ins(self):
        """Gets the notification_plug_ins of this AssetServerLinks.


        :return: The notification_plug_ins of this AssetServerLinks.
        :rtype: str
        """
        return self._notification_plug_ins

    @notification_plug_ins.setter
    def notification_plug_ins(self, notification_plug_ins):
        """Sets the notification_plug_ins of this AssetServerLinks.


        :param notification_plug_ins: The notification_plug_ins of this AssetServerLinks.
        :type notification_plug_ins: str
        """

        self._notification_plug_ins = notification_plug_ins

    @property
    def security(self):
        """Gets the security of this AssetServerLinks.


        :return: The security of this AssetServerLinks.
        :rtype: str
        """
        return self._security

    @security.setter
    def security(self, security):
        """Sets the security of this AssetServerLinks.


        :param security: The security of this AssetServerLinks.
        :type security: str
        """

        self._security = security

    @property
    def security_entries(self):
        """Gets the security_entries of this AssetServerLinks.


        :return: The security_entries of this AssetServerLinks.
        :rtype: str
        """
        return self._security_entries

    @security_entries.setter
    def security_entries(self, security_entries):
        """Sets the security_entries of this AssetServerLinks.


        :param security_entries: The security_entries of this AssetServerLinks.
        :type security_entries: str
        """

        self._security_entries = security_entries

    @property
    def security_identities(self):
        """Gets the security_identities of this AssetServerLinks.


        :return: The security_identities of this AssetServerLinks.
        :rtype: str
        """
        return self._security_identities

    @security_identities.setter
    def security_identities(self, security_identities):
        """Sets the security_identities of this AssetServerLinks.


        :param security_identities: The security_identities of this AssetServerLinks.
        :type security_identities: str
        """

        self._security_identities = security_identities

    @property
    def security_mappings(self):
        """Gets the security_mappings of this AssetServerLinks.


        :return: The security_mappings of this AssetServerLinks.
        :rtype: str
        """
        return self._security_mappings

    @security_mappings.setter
    def security_mappings(self, security_mappings):
        """Sets the security_mappings of this AssetServerLinks.


        :param security_mappings: The security_mappings of this AssetServerLinks.
        :type security_mappings: str
        """

        self._security_mappings = security_mappings

    @property
    def _self(self):
        """Gets the _self of this AssetServerLinks.


        :return: The _self of this AssetServerLinks.
        :rtype: str
        """
        return self.__self

    @_self.setter
    def _self(self, _self):
        """Sets the _self of this AssetServerLinks.


        :param _self: The _self of this AssetServerLinks.
        :type _self: str
        """

        self.__self = _self

    @property
    def time_rule_plug_ins(self):
        """Gets the time_rule_plug_ins of this AssetServerLinks.


        :return: The time_rule_plug_ins of this AssetServerLinks.
        :rtype: str
        """
        return self._time_rule_plug_ins

    @time_rule_plug_ins.setter
    def time_rule_plug_ins(self, time_rule_plug_ins):
        """Sets the time_rule_plug_ins of this AssetServerLinks.


        :param time_rule_plug_ins: The time_rule_plug_ins of this AssetServerLinks.
        :type time_rule_plug_ins: str
        """

        self._time_rule_plug_ins = time_rule_plug_ins

    @property
    def unit_classes(self):
        """Gets the unit_classes of this AssetServerLinks.


        :return: The unit_classes of this AssetServerLinks.
        :rtype: str
        """
        return self._unit_classes

    @unit_classes.setter
    def unit_classes(self, unit_classes):
        """Sets the unit_classes of this AssetServerLinks.


        :param unit_classes: The unit_classes of this AssetServerLinks.
        :type unit_classes: str
        """

        self._unit_classes = unit_classes
