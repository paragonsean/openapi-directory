# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.timed_value import TimedValue
from openapi_server.models.web_exception import WebException
from openapi_server import util


class SummaryValue(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, type: str=None, value: TimedValue=None, web_exception: WebException=None):
        """SummaryValue - a model defined in OpenAPI

        :param type: The type of this SummaryValue.
        :param value: The value of this SummaryValue.
        :param web_exception: The web_exception of this SummaryValue.
        """
        self.openapi_types = {
            'type': str,
            'value': TimedValue,
            'web_exception': WebException
        }

        self.attribute_map = {
            'type': 'Type',
            'value': 'Value',
            'web_exception': 'WebException'
        }

        self._type = type
        self._value = value
        self._web_exception = web_exception

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SummaryValue':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SummaryValue of this SummaryValue.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def type(self):
        """Gets the type of this SummaryValue.


        :return: The type of this SummaryValue.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this SummaryValue.


        :param type: The type of this SummaryValue.
        :type type: str
        """

        self._type = type

    @property
    def value(self):
        """Gets the value of this SummaryValue.


        :return: The value of this SummaryValue.
        :rtype: TimedValue
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this SummaryValue.


        :param value: The value of this SummaryValue.
        :type value: TimedValue
        """

        self._value = value

    @property
    def web_exception(self):
        """Gets the web_exception of this SummaryValue.


        :return: The web_exception of this SummaryValue.
        :rtype: WebException
        """
        return self._web_exception

    @web_exception.setter
    def web_exception(self, web_exception):
        """Sets the web_exception of this SummaryValue.


        :param web_exception: The web_exception of this SummaryValue.
        :type web_exception: WebException
        """

        self._web_exception = web_exception
