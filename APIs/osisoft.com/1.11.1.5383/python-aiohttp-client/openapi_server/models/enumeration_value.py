# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.enumeration_value_links import EnumerationValueLinks
from openapi_server.models.web_exception import WebException
from openapi_server import util


class EnumerationValue(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description: str=None, id: str=None, links: EnumerationValueLinks=None, name: str=None, parent: str=None, path: str=None, serialize_description: bool=None, serialize_id: bool=None, serialize_links: bool=None, serialize_path: bool=None, serialize_web_id: bool=None, value: int=None, web_exception: WebException=None, web_id: str=None):
        """EnumerationValue - a model defined in OpenAPI

        :param description: The description of this EnumerationValue.
        :param id: The id of this EnumerationValue.
        :param links: The links of this EnumerationValue.
        :param name: The name of this EnumerationValue.
        :param parent: The parent of this EnumerationValue.
        :param path: The path of this EnumerationValue.
        :param serialize_description: The serialize_description of this EnumerationValue.
        :param serialize_id: The serialize_id of this EnumerationValue.
        :param serialize_links: The serialize_links of this EnumerationValue.
        :param serialize_path: The serialize_path of this EnumerationValue.
        :param serialize_web_id: The serialize_web_id of this EnumerationValue.
        :param value: The value of this EnumerationValue.
        :param web_exception: The web_exception of this EnumerationValue.
        :param web_id: The web_id of this EnumerationValue.
        """
        self.openapi_types = {
            'description': str,
            'id': str,
            'links': EnumerationValueLinks,
            'name': str,
            'parent': str,
            'path': str,
            'serialize_description': bool,
            'serialize_id': bool,
            'serialize_links': bool,
            'serialize_path': bool,
            'serialize_web_id': bool,
            'value': int,
            'web_exception': WebException,
            'web_id': str
        }

        self.attribute_map = {
            'description': 'Description',
            'id': 'Id',
            'links': 'Links',
            'name': 'Name',
            'parent': 'Parent',
            'path': 'Path',
            'serialize_description': 'SerializeDescription',
            'serialize_id': 'SerializeId',
            'serialize_links': 'SerializeLinks',
            'serialize_path': 'SerializePath',
            'serialize_web_id': 'SerializeWebId',
            'value': 'Value',
            'web_exception': 'WebException',
            'web_id': 'WebId'
        }

        self._description = description
        self._id = id
        self._links = links
        self._name = name
        self._parent = parent
        self._path = path
        self._serialize_description = serialize_description
        self._serialize_id = serialize_id
        self._serialize_links = serialize_links
        self._serialize_path = serialize_path
        self._serialize_web_id = serialize_web_id
        self._value = value
        self._web_exception = web_exception
        self._web_id = web_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EnumerationValue':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EnumerationValue of this EnumerationValue.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self):
        """Gets the description of this EnumerationValue.


        :return: The description of this EnumerationValue.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this EnumerationValue.


        :param description: The description of this EnumerationValue.
        :type description: str
        """

        self._description = description

    @property
    def id(self):
        """Gets the id of this EnumerationValue.


        :return: The id of this EnumerationValue.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this EnumerationValue.


        :param id: The id of this EnumerationValue.
        :type id: str
        """

        self._id = id

    @property
    def links(self):
        """Gets the links of this EnumerationValue.


        :return: The links of this EnumerationValue.
        :rtype: EnumerationValueLinks
        """
        return self._links

    @links.setter
    def links(self, links):
        """Sets the links of this EnumerationValue.


        :param links: The links of this EnumerationValue.
        :type links: EnumerationValueLinks
        """

        self._links = links

    @property
    def name(self):
        """Gets the name of this EnumerationValue.


        :return: The name of this EnumerationValue.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this EnumerationValue.


        :param name: The name of this EnumerationValue.
        :type name: str
        """

        self._name = name

    @property
    def parent(self):
        """Gets the parent of this EnumerationValue.


        :return: The parent of this EnumerationValue.
        :rtype: str
        """
        return self._parent

    @parent.setter
    def parent(self, parent):
        """Sets the parent of this EnumerationValue.


        :param parent: The parent of this EnumerationValue.
        :type parent: str
        """

        self._parent = parent

    @property
    def path(self):
        """Gets the path of this EnumerationValue.


        :return: The path of this EnumerationValue.
        :rtype: str
        """
        return self._path

    @path.setter
    def path(self, path):
        """Sets the path of this EnumerationValue.


        :param path: The path of this EnumerationValue.
        :type path: str
        """

        self._path = path

    @property
    def serialize_description(self):
        """Gets the serialize_description of this EnumerationValue.


        :return: The serialize_description of this EnumerationValue.
        :rtype: bool
        """
        return self._serialize_description

    @serialize_description.setter
    def serialize_description(self, serialize_description):
        """Sets the serialize_description of this EnumerationValue.


        :param serialize_description: The serialize_description of this EnumerationValue.
        :type serialize_description: bool
        """

        self._serialize_description = serialize_description

    @property
    def serialize_id(self):
        """Gets the serialize_id of this EnumerationValue.


        :return: The serialize_id of this EnumerationValue.
        :rtype: bool
        """
        return self._serialize_id

    @serialize_id.setter
    def serialize_id(self, serialize_id):
        """Sets the serialize_id of this EnumerationValue.


        :param serialize_id: The serialize_id of this EnumerationValue.
        :type serialize_id: bool
        """

        self._serialize_id = serialize_id

    @property
    def serialize_links(self):
        """Gets the serialize_links of this EnumerationValue.


        :return: The serialize_links of this EnumerationValue.
        :rtype: bool
        """
        return self._serialize_links

    @serialize_links.setter
    def serialize_links(self, serialize_links):
        """Sets the serialize_links of this EnumerationValue.


        :param serialize_links: The serialize_links of this EnumerationValue.
        :type serialize_links: bool
        """

        self._serialize_links = serialize_links

    @property
    def serialize_path(self):
        """Gets the serialize_path of this EnumerationValue.


        :return: The serialize_path of this EnumerationValue.
        :rtype: bool
        """
        return self._serialize_path

    @serialize_path.setter
    def serialize_path(self, serialize_path):
        """Sets the serialize_path of this EnumerationValue.


        :param serialize_path: The serialize_path of this EnumerationValue.
        :type serialize_path: bool
        """

        self._serialize_path = serialize_path

    @property
    def serialize_web_id(self):
        """Gets the serialize_web_id of this EnumerationValue.


        :return: The serialize_web_id of this EnumerationValue.
        :rtype: bool
        """
        return self._serialize_web_id

    @serialize_web_id.setter
    def serialize_web_id(self, serialize_web_id):
        """Sets the serialize_web_id of this EnumerationValue.


        :param serialize_web_id: The serialize_web_id of this EnumerationValue.
        :type serialize_web_id: bool
        """

        self._serialize_web_id = serialize_web_id

    @property
    def value(self):
        """Gets the value of this EnumerationValue.


        :return: The value of this EnumerationValue.
        :rtype: int
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this EnumerationValue.


        :param value: The value of this EnumerationValue.
        :type value: int
        """

        self._value = value

    @property
    def web_exception(self):
        """Gets the web_exception of this EnumerationValue.


        :return: The web_exception of this EnumerationValue.
        :rtype: WebException
        """
        return self._web_exception

    @web_exception.setter
    def web_exception(self, web_exception):
        """Sets the web_exception of this EnumerationValue.


        :param web_exception: The web_exception of this EnumerationValue.
        :type web_exception: WebException
        """

        self._web_exception = web_exception

    @property
    def web_id(self):
        """Gets the web_id of this EnumerationValue.


        :return: The web_id of this EnumerationValue.
        :rtype: str
        """
        return self._web_id

    @web_id.setter
    def web_id(self, web_id):
        """Sets the web_id of this EnumerationValue.


        :param web_id: The web_id of this EnumerationValue.
        :type web_id: str
        """

        self._web_id = web_id
