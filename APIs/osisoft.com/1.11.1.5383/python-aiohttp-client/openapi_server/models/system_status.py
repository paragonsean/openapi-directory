# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.web_exception import WebException
from openapi_server import util


class SystemStatus(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cache_instances: int=None, server_time: datetime=None, state: str=None, up_time_in_minutes: float=None, web_exception: WebException=None):
        """SystemStatus - a model defined in OpenAPI

        :param cache_instances: The cache_instances of this SystemStatus.
        :param server_time: The server_time of this SystemStatus.
        :param state: The state of this SystemStatus.
        :param up_time_in_minutes: The up_time_in_minutes of this SystemStatus.
        :param web_exception: The web_exception of this SystemStatus.
        """
        self.openapi_types = {
            'cache_instances': int,
            'server_time': datetime,
            'state': str,
            'up_time_in_minutes': float,
            'web_exception': WebException
        }

        self.attribute_map = {
            'cache_instances': 'CacheInstances',
            'server_time': 'ServerTime',
            'state': 'State',
            'up_time_in_minutes': 'UpTimeInMinutes',
            'web_exception': 'WebException'
        }

        self._cache_instances = cache_instances
        self._server_time = server_time
        self._state = state
        self._up_time_in_minutes = up_time_in_minutes
        self._web_exception = web_exception

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SystemStatus':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SystemStatus of this SystemStatus.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cache_instances(self):
        """Gets the cache_instances of this SystemStatus.


        :return: The cache_instances of this SystemStatus.
        :rtype: int
        """
        return self._cache_instances

    @cache_instances.setter
    def cache_instances(self, cache_instances):
        """Sets the cache_instances of this SystemStatus.


        :param cache_instances: The cache_instances of this SystemStatus.
        :type cache_instances: int
        """

        self._cache_instances = cache_instances

    @property
    def server_time(self):
        """Gets the server_time of this SystemStatus.


        :return: The server_time of this SystemStatus.
        :rtype: datetime
        """
        return self._server_time

    @server_time.setter
    def server_time(self, server_time):
        """Sets the server_time of this SystemStatus.


        :param server_time: The server_time of this SystemStatus.
        :type server_time: datetime
        """

        self._server_time = server_time

    @property
    def state(self):
        """Gets the state of this SystemStatus.


        :return: The state of this SystemStatus.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this SystemStatus.


        :param state: The state of this SystemStatus.
        :type state: str
        """

        self._state = state

    @property
    def up_time_in_minutes(self):
        """Gets the up_time_in_minutes of this SystemStatus.


        :return: The up_time_in_minutes of this SystemStatus.
        :rtype: float
        """
        return self._up_time_in_minutes

    @up_time_in_minutes.setter
    def up_time_in_minutes(self, up_time_in_minutes):
        """Sets the up_time_in_minutes of this SystemStatus.


        :param up_time_in_minutes: The up_time_in_minutes of this SystemStatus.
        :type up_time_in_minutes: float
        """

        self._up_time_in_minutes = up_time_in_minutes

    @property
    def web_exception(self):
        """Gets the web_exception of this SystemStatus.


        :return: The web_exception of this SystemStatus.
        :rtype: WebException
        """
        return self._web_exception

    @web_exception.setter
    def web_exception(self, web_exception):
        """Sets the web_exception of this SystemStatus.


        :param web_exception: The web_exception of this SystemStatus.
        :type web_exception: WebException
        """

        self._web_exception = web_exception
