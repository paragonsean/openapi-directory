# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class MediaMetadataLinks(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, media_data: str=None, owner: str=None, _self: str=None):
        """MediaMetadataLinks - a model defined in OpenAPI

        :param media_data: The media_data of this MediaMetadataLinks.
        :param owner: The owner of this MediaMetadataLinks.
        :param _self: The _self of this MediaMetadataLinks.
        """
        self.openapi_types = {
            'media_data': str,
            'owner': str,
            '_self': str
        }

        self.attribute_map = {
            'media_data': 'MediaData',
            'owner': 'Owner',
            '_self': 'Self'
        }

        self._media_data = media_data
        self._owner = owner
        self.__self = _self

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MediaMetadataLinks':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MediaMetadataLinks of this MediaMetadataLinks.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def media_data(self):
        """Gets the media_data of this MediaMetadataLinks.


        :return: The media_data of this MediaMetadataLinks.
        :rtype: str
        """
        return self._media_data

    @media_data.setter
    def media_data(self, media_data):
        """Sets the media_data of this MediaMetadataLinks.


        :param media_data: The media_data of this MediaMetadataLinks.
        :type media_data: str
        """

        self._media_data = media_data

    @property
    def owner(self):
        """Gets the owner of this MediaMetadataLinks.


        :return: The owner of this MediaMetadataLinks.
        :rtype: str
        """
        return self._owner

    @owner.setter
    def owner(self, owner):
        """Sets the owner of this MediaMetadataLinks.


        :param owner: The owner of this MediaMetadataLinks.
        :type owner: str
        """

        self._owner = owner

    @property
    def _self(self):
        """Gets the _self of this MediaMetadataLinks.


        :return: The _self of this MediaMetadataLinks.
        :rtype: str
        """
        return self.__self

    @_self.setter
    def _self(self, _self):
        """Sets the _self of this MediaMetadataLinks.


        :param _self: The _self of this MediaMetadataLinks.
        :type _self: str
        """

        self.__self = _self
