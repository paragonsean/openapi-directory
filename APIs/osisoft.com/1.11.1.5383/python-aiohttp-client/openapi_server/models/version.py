# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.web_exception import WebException
from openapi_server import util


class Version(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, build: str=None, full_version: str=None, major_minor_revision: str=None, web_exception: WebException=None):
        """Version - a model defined in OpenAPI

        :param build: The build of this Version.
        :param full_version: The full_version of this Version.
        :param major_minor_revision: The major_minor_revision of this Version.
        :param web_exception: The web_exception of this Version.
        """
        self.openapi_types = {
            'build': str,
            'full_version': str,
            'major_minor_revision': str,
            'web_exception': WebException
        }

        self.attribute_map = {
            'build': 'Build',
            'full_version': 'FullVersion',
            'major_minor_revision': 'MajorMinorRevision',
            'web_exception': 'WebException'
        }

        self._build = build
        self._full_version = full_version
        self._major_minor_revision = major_minor_revision
        self._web_exception = web_exception

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Version':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Version of this Version.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def build(self):
        """Gets the build of this Version.


        :return: The build of this Version.
        :rtype: str
        """
        return self._build

    @build.setter
    def build(self, build):
        """Sets the build of this Version.


        :param build: The build of this Version.
        :type build: str
        """

        self._build = build

    @property
    def full_version(self):
        """Gets the full_version of this Version.


        :return: The full_version of this Version.
        :rtype: str
        """
        return self._full_version

    @full_version.setter
    def full_version(self, full_version):
        """Sets the full_version of this Version.


        :param full_version: The full_version of this Version.
        :type full_version: str
        """

        self._full_version = full_version

    @property
    def major_minor_revision(self):
        """Gets the major_minor_revision of this Version.


        :return: The major_minor_revision of this Version.
        :rtype: str
        """
        return self._major_minor_revision

    @major_minor_revision.setter
    def major_minor_revision(self, major_minor_revision):
        """Sets the major_minor_revision of this Version.


        :param major_minor_revision: The major_minor_revision of this Version.
        :type major_minor_revision: str
        """

        self._major_minor_revision = major_minor_revision

    @property
    def web_exception(self):
        """Gets the web_exception of this Version.


        :return: The web_exception of this Version.
        :rtype: WebException
        """
        return self._web_exception

    @web_exception.setter
    def web_exception(self, web_exception):
        """Sets the web_exception of this Version.


        :param web_exception: The web_exception of this Version.
        :type web_exception: WebException
        """

        self._web_exception = web_exception
