# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.property_error import PropertyError
from openapi_server.models.web_exception import WebException
from openapi_server import util


class StreamAnnotation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, creation_date: datetime=None, creator: str=None, description: str=None, errors: List[PropertyError]=None, id: str=None, modifier: str=None, modify_date: datetime=None, name: str=None, value: object=None, web_exception: WebException=None):
        """StreamAnnotation - a model defined in OpenAPI

        :param creation_date: The creation_date of this StreamAnnotation.
        :param creator: The creator of this StreamAnnotation.
        :param description: The description of this StreamAnnotation.
        :param errors: The errors of this StreamAnnotation.
        :param id: The id of this StreamAnnotation.
        :param modifier: The modifier of this StreamAnnotation.
        :param modify_date: The modify_date of this StreamAnnotation.
        :param name: The name of this StreamAnnotation.
        :param value: The value of this StreamAnnotation.
        :param web_exception: The web_exception of this StreamAnnotation.
        """
        self.openapi_types = {
            'creation_date': datetime,
            'creator': str,
            'description': str,
            'errors': List[PropertyError],
            'id': str,
            'modifier': str,
            'modify_date': datetime,
            'name': str,
            'value': object,
            'web_exception': WebException
        }

        self.attribute_map = {
            'creation_date': 'CreationDate',
            'creator': 'Creator',
            'description': 'Description',
            'errors': 'Errors',
            'id': 'Id',
            'modifier': 'Modifier',
            'modify_date': 'ModifyDate',
            'name': 'Name',
            'value': 'Value',
            'web_exception': 'WebException'
        }

        self._creation_date = creation_date
        self._creator = creator
        self._description = description
        self._errors = errors
        self._id = id
        self._modifier = modifier
        self._modify_date = modify_date
        self._name = name
        self._value = value
        self._web_exception = web_exception

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StreamAnnotation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StreamAnnotation of this StreamAnnotation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def creation_date(self):
        """Gets the creation_date of this StreamAnnotation.


        :return: The creation_date of this StreamAnnotation.
        :rtype: datetime
        """
        return self._creation_date

    @creation_date.setter
    def creation_date(self, creation_date):
        """Sets the creation_date of this StreamAnnotation.


        :param creation_date: The creation_date of this StreamAnnotation.
        :type creation_date: datetime
        """

        self._creation_date = creation_date

    @property
    def creator(self):
        """Gets the creator of this StreamAnnotation.


        :return: The creator of this StreamAnnotation.
        :rtype: str
        """
        return self._creator

    @creator.setter
    def creator(self, creator):
        """Sets the creator of this StreamAnnotation.


        :param creator: The creator of this StreamAnnotation.
        :type creator: str
        """

        self._creator = creator

    @property
    def description(self):
        """Gets the description of this StreamAnnotation.


        :return: The description of this StreamAnnotation.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this StreamAnnotation.


        :param description: The description of this StreamAnnotation.
        :type description: str
        """

        self._description = description

    @property
    def errors(self):
        """Gets the errors of this StreamAnnotation.


        :return: The errors of this StreamAnnotation.
        :rtype: List[PropertyError]
        """
        return self._errors

    @errors.setter
    def errors(self, errors):
        """Sets the errors of this StreamAnnotation.


        :param errors: The errors of this StreamAnnotation.
        :type errors: List[PropertyError]
        """

        self._errors = errors

    @property
    def id(self):
        """Gets the id of this StreamAnnotation.


        :return: The id of this StreamAnnotation.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this StreamAnnotation.


        :param id: The id of this StreamAnnotation.
        :type id: str
        """

        self._id = id

    @property
    def modifier(self):
        """Gets the modifier of this StreamAnnotation.


        :return: The modifier of this StreamAnnotation.
        :rtype: str
        """
        return self._modifier

    @modifier.setter
    def modifier(self, modifier):
        """Sets the modifier of this StreamAnnotation.


        :param modifier: The modifier of this StreamAnnotation.
        :type modifier: str
        """

        self._modifier = modifier

    @property
    def modify_date(self):
        """Gets the modify_date of this StreamAnnotation.


        :return: The modify_date of this StreamAnnotation.
        :rtype: datetime
        """
        return self._modify_date

    @modify_date.setter
    def modify_date(self, modify_date):
        """Sets the modify_date of this StreamAnnotation.


        :param modify_date: The modify_date of this StreamAnnotation.
        :type modify_date: datetime
        """

        self._modify_date = modify_date

    @property
    def name(self):
        """Gets the name of this StreamAnnotation.


        :return: The name of this StreamAnnotation.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this StreamAnnotation.


        :param name: The name of this StreamAnnotation.
        :type name: str
        """

        self._name = name

    @property
    def value(self):
        """Gets the value of this StreamAnnotation.


        :return: The value of this StreamAnnotation.
        :rtype: object
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this StreamAnnotation.


        :param value: The value of this StreamAnnotation.
        :type value: object
        """

        self._value = value

    @property
    def web_exception(self):
        """Gets the web_exception of this StreamAnnotation.


        :return: The web_exception of this StreamAnnotation.
        :rtype: WebException
        """
        return self._web_exception

    @web_exception.setter
    def web_exception(self, web_exception):
        """Sets the web_exception of this StreamAnnotation.


        :param web_exception: The web_exception of this StreamAnnotation.
        :type web_exception: WebException
        """

        self._web_exception = web_exception
