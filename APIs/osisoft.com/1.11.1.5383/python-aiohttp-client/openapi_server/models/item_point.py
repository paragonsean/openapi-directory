# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.errors import Errors
from openapi_server.models.point import Point
from openapi_server import util


class ItemPoint(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, exception: Errors=None, identifier: str=None, identifier_type: str=None, object: Point=None):
        """ItemPoint - a model defined in OpenAPI

        :param exception: The exception of this ItemPoint.
        :param identifier: The identifier of this ItemPoint.
        :param identifier_type: The identifier_type of this ItemPoint.
        :param object: The object of this ItemPoint.
        """
        self.openapi_types = {
            'exception': Errors,
            'identifier': str,
            'identifier_type': str,
            'object': Point
        }

        self.attribute_map = {
            'exception': 'Exception',
            'identifier': 'Identifier',
            'identifier_type': 'IdentifierType',
            'object': 'Object'
        }

        self._exception = exception
        self._identifier = identifier
        self._identifier_type = identifier_type
        self._object = object

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ItemPoint':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Item[Point] of this ItemPoint.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def exception(self):
        """Gets the exception of this ItemPoint.


        :return: The exception of this ItemPoint.
        :rtype: Errors
        """
        return self._exception

    @exception.setter
    def exception(self, exception):
        """Sets the exception of this ItemPoint.


        :param exception: The exception of this ItemPoint.
        :type exception: Errors
        """

        self._exception = exception

    @property
    def identifier(self):
        """Gets the identifier of this ItemPoint.


        :return: The identifier of this ItemPoint.
        :rtype: str
        """
        return self._identifier

    @identifier.setter
    def identifier(self, identifier):
        """Sets the identifier of this ItemPoint.


        :param identifier: The identifier of this ItemPoint.
        :type identifier: str
        """

        self._identifier = identifier

    @property
    def identifier_type(self):
        """Gets the identifier_type of this ItemPoint.


        :return: The identifier_type of this ItemPoint.
        :rtype: str
        """
        return self._identifier_type

    @identifier_type.setter
    def identifier_type(self, identifier_type):
        """Sets the identifier_type of this ItemPoint.


        :param identifier_type: The identifier_type of this ItemPoint.
        :type identifier_type: str
        """

        self._identifier_type = identifier_type

    @property
    def object(self):
        """Gets the object of this ItemPoint.


        :return: The object of this ItemPoint.
        :rtype: Point
        """
        return self._object

    @object.setter
    def object(self, object):
        """Sets the object of this ItemPoint.


        :param object: The object of this ItemPoint.
        :type object: Point
        """

        self._object = object
