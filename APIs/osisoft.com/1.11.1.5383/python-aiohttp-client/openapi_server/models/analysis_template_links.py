# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AnalysisTemplateLinks(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, analysis_rule: str=None, analysis_rule_plug_in: str=None, categories: str=None, database: str=None, security: str=None, security_entries: str=None, _self: str=None, target: str=None, time_rule: str=None, time_rule_plug_in: str=None):
        """AnalysisTemplateLinks - a model defined in OpenAPI

        :param analysis_rule: The analysis_rule of this AnalysisTemplateLinks.
        :param analysis_rule_plug_in: The analysis_rule_plug_in of this AnalysisTemplateLinks.
        :param categories: The categories of this AnalysisTemplateLinks.
        :param database: The database of this AnalysisTemplateLinks.
        :param security: The security of this AnalysisTemplateLinks.
        :param security_entries: The security_entries of this AnalysisTemplateLinks.
        :param _self: The _self of this AnalysisTemplateLinks.
        :param target: The target of this AnalysisTemplateLinks.
        :param time_rule: The time_rule of this AnalysisTemplateLinks.
        :param time_rule_plug_in: The time_rule_plug_in of this AnalysisTemplateLinks.
        """
        self.openapi_types = {
            'analysis_rule': str,
            'analysis_rule_plug_in': str,
            'categories': str,
            'database': str,
            'security': str,
            'security_entries': str,
            '_self': str,
            'target': str,
            'time_rule': str,
            'time_rule_plug_in': str
        }

        self.attribute_map = {
            'analysis_rule': 'AnalysisRule',
            'analysis_rule_plug_in': 'AnalysisRulePlugIn',
            'categories': 'Categories',
            'database': 'Database',
            'security': 'Security',
            'security_entries': 'SecurityEntries',
            '_self': 'Self',
            'target': 'Target',
            'time_rule': 'TimeRule',
            'time_rule_plug_in': 'TimeRulePlugIn'
        }

        self._analysis_rule = analysis_rule
        self._analysis_rule_plug_in = analysis_rule_plug_in
        self._categories = categories
        self._database = database
        self._security = security
        self._security_entries = security_entries
        self.__self = _self
        self._target = target
        self._time_rule = time_rule
        self._time_rule_plug_in = time_rule_plug_in

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AnalysisTemplateLinks':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AnalysisTemplateLinks of this AnalysisTemplateLinks.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def analysis_rule(self):
        """Gets the analysis_rule of this AnalysisTemplateLinks.


        :return: The analysis_rule of this AnalysisTemplateLinks.
        :rtype: str
        """
        return self._analysis_rule

    @analysis_rule.setter
    def analysis_rule(self, analysis_rule):
        """Sets the analysis_rule of this AnalysisTemplateLinks.


        :param analysis_rule: The analysis_rule of this AnalysisTemplateLinks.
        :type analysis_rule: str
        """

        self._analysis_rule = analysis_rule

    @property
    def analysis_rule_plug_in(self):
        """Gets the analysis_rule_plug_in of this AnalysisTemplateLinks.


        :return: The analysis_rule_plug_in of this AnalysisTemplateLinks.
        :rtype: str
        """
        return self._analysis_rule_plug_in

    @analysis_rule_plug_in.setter
    def analysis_rule_plug_in(self, analysis_rule_plug_in):
        """Sets the analysis_rule_plug_in of this AnalysisTemplateLinks.


        :param analysis_rule_plug_in: The analysis_rule_plug_in of this AnalysisTemplateLinks.
        :type analysis_rule_plug_in: str
        """

        self._analysis_rule_plug_in = analysis_rule_plug_in

    @property
    def categories(self):
        """Gets the categories of this AnalysisTemplateLinks.


        :return: The categories of this AnalysisTemplateLinks.
        :rtype: str
        """
        return self._categories

    @categories.setter
    def categories(self, categories):
        """Sets the categories of this AnalysisTemplateLinks.


        :param categories: The categories of this AnalysisTemplateLinks.
        :type categories: str
        """

        self._categories = categories

    @property
    def database(self):
        """Gets the database of this AnalysisTemplateLinks.


        :return: The database of this AnalysisTemplateLinks.
        :rtype: str
        """
        return self._database

    @database.setter
    def database(self, database):
        """Sets the database of this AnalysisTemplateLinks.


        :param database: The database of this AnalysisTemplateLinks.
        :type database: str
        """

        self._database = database

    @property
    def security(self):
        """Gets the security of this AnalysisTemplateLinks.


        :return: The security of this AnalysisTemplateLinks.
        :rtype: str
        """
        return self._security

    @security.setter
    def security(self, security):
        """Sets the security of this AnalysisTemplateLinks.


        :param security: The security of this AnalysisTemplateLinks.
        :type security: str
        """

        self._security = security

    @property
    def security_entries(self):
        """Gets the security_entries of this AnalysisTemplateLinks.


        :return: The security_entries of this AnalysisTemplateLinks.
        :rtype: str
        """
        return self._security_entries

    @security_entries.setter
    def security_entries(self, security_entries):
        """Sets the security_entries of this AnalysisTemplateLinks.


        :param security_entries: The security_entries of this AnalysisTemplateLinks.
        :type security_entries: str
        """

        self._security_entries = security_entries

    @property
    def _self(self):
        """Gets the _self of this AnalysisTemplateLinks.


        :return: The _self of this AnalysisTemplateLinks.
        :rtype: str
        """
        return self.__self

    @_self.setter
    def _self(self, _self):
        """Sets the _self of this AnalysisTemplateLinks.


        :param _self: The _self of this AnalysisTemplateLinks.
        :type _self: str
        """

        self.__self = _self

    @property
    def target(self):
        """Gets the target of this AnalysisTemplateLinks.


        :return: The target of this AnalysisTemplateLinks.
        :rtype: str
        """
        return self._target

    @target.setter
    def target(self, target):
        """Sets the target of this AnalysisTemplateLinks.


        :param target: The target of this AnalysisTemplateLinks.
        :type target: str
        """

        self._target = target

    @property
    def time_rule(self):
        """Gets the time_rule of this AnalysisTemplateLinks.


        :return: The time_rule of this AnalysisTemplateLinks.
        :rtype: str
        """
        return self._time_rule

    @time_rule.setter
    def time_rule(self, time_rule):
        """Sets the time_rule of this AnalysisTemplateLinks.


        :param time_rule: The time_rule of this AnalysisTemplateLinks.
        :type time_rule: str
        """

        self._time_rule = time_rule

    @property
    def time_rule_plug_in(self):
        """Gets the time_rule_plug_in of this AnalysisTemplateLinks.


        :return: The time_rule_plug_in of this AnalysisTemplateLinks.
        :rtype: str
        """
        return self._time_rule_plug_in

    @time_rule_plug_in.setter
    def time_rule_plug_in(self, time_rule_plug_in):
        """Sets the time_rule_plug_in of this AnalysisTemplateLinks.


        :param time_rule_plug_in: The time_rule_plug_in of this AnalysisTemplateLinks.
        :type time_rule_plug_in: str
        """

        self._time_rule_plug_in = time_rule_plug_in
