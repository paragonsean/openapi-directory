# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.web_exception import WebException
from openapi_server import util


class TableData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, columns: Dict[str, str]=None, rows: List[Dict[str, object]]=None, web_exception: WebException=None):
        """TableData - a model defined in OpenAPI

        :param columns: The columns of this TableData.
        :param rows: The rows of this TableData.
        :param web_exception: The web_exception of this TableData.
        """
        self.openapi_types = {
            'columns': Dict[str, str],
            'rows': List[Dict[str, object]],
            'web_exception': WebException
        }

        self.attribute_map = {
            'columns': 'Columns',
            'rows': 'Rows',
            'web_exception': 'WebException'
        }

        self._columns = columns
        self._rows = rows
        self._web_exception = web_exception

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TableData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TableData of this TableData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def columns(self):
        """Gets the columns of this TableData.


        :return: The columns of this TableData.
        :rtype: Dict[str, str]
        """
        return self._columns

    @columns.setter
    def columns(self, columns):
        """Sets the columns of this TableData.


        :param columns: The columns of this TableData.
        :type columns: Dict[str, str]
        """

        self._columns = columns

    @property
    def rows(self):
        """Gets the rows of this TableData.


        :return: The rows of this TableData.
        :rtype: List[Dict[str, object]]
        """
        return self._rows

    @rows.setter
    def rows(self, rows):
        """Sets the rows of this TableData.


        :param rows: The rows of this TableData.
        :type rows: List[Dict[str, object]]
        """

        self._rows = rows

    @property
    def web_exception(self):
        """Gets the web_exception of this TableData.


        :return: The web_exception of this TableData.
        :rtype: WebException
        """
        return self._web_exception

    @web_exception.setter
    def web_exception(self, web_exception):
        """Sets the web_exception of this TableData.


        :param web_exception: The web_exception of this TableData.
        :type web_exception: WebException
        """

        self._web_exception = web_exception
