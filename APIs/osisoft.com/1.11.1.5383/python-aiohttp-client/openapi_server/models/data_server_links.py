# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DataServerLinks(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, enumeration_sets: str=None, points: str=None, _self: str=None):
        """DataServerLinks - a model defined in OpenAPI

        :param enumeration_sets: The enumeration_sets of this DataServerLinks.
        :param points: The points of this DataServerLinks.
        :param _self: The _self of this DataServerLinks.
        """
        self.openapi_types = {
            'enumeration_sets': str,
            'points': str,
            '_self': str
        }

        self.attribute_map = {
            'enumeration_sets': 'EnumerationSets',
            'points': 'Points',
            '_self': 'Self'
        }

        self._enumeration_sets = enumeration_sets
        self._points = points
        self.__self = _self

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DataServerLinks':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DataServerLinks of this DataServerLinks.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def enumeration_sets(self):
        """Gets the enumeration_sets of this DataServerLinks.


        :return: The enumeration_sets of this DataServerLinks.
        :rtype: str
        """
        return self._enumeration_sets

    @enumeration_sets.setter
    def enumeration_sets(self, enumeration_sets):
        """Sets the enumeration_sets of this DataServerLinks.


        :param enumeration_sets: The enumeration_sets of this DataServerLinks.
        :type enumeration_sets: str
        """

        self._enumeration_sets = enumeration_sets

    @property
    def points(self):
        """Gets the points of this DataServerLinks.


        :return: The points of this DataServerLinks.
        :rtype: str
        """
        return self._points

    @points.setter
    def points(self, points):
        """Sets the points of this DataServerLinks.


        :param points: The points of this DataServerLinks.
        :type points: str
        """

        self._points = points

    @property
    def _self(self):
        """Gets the _self of this DataServerLinks.


        :return: The _self of this DataServerLinks.
        :rtype: str
        """
        return self.__self

    @_self.setter
    def _self(self, _self):
        """Sets the _self of this DataServerLinks.


        :param _self: The _self of this DataServerLinks.
        :type _self: str
        """

        self.__self = _self
