# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PointLinks(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, attributes: str=None, data_server: str=None, end_value: str=None, interpolated_data: str=None, plot_data: str=None, recorded_data: str=None, _self: str=None, summary_data: str=None, value: str=None):
        """PointLinks - a model defined in OpenAPI

        :param attributes: The attributes of this PointLinks.
        :param data_server: The data_server of this PointLinks.
        :param end_value: The end_value of this PointLinks.
        :param interpolated_data: The interpolated_data of this PointLinks.
        :param plot_data: The plot_data of this PointLinks.
        :param recorded_data: The recorded_data of this PointLinks.
        :param _self: The _self of this PointLinks.
        :param summary_data: The summary_data of this PointLinks.
        :param value: The value of this PointLinks.
        """
        self.openapi_types = {
            'attributes': str,
            'data_server': str,
            'end_value': str,
            'interpolated_data': str,
            'plot_data': str,
            'recorded_data': str,
            '_self': str,
            'summary_data': str,
            'value': str
        }

        self.attribute_map = {
            'attributes': 'Attributes',
            'data_server': 'DataServer',
            'end_value': 'EndValue',
            'interpolated_data': 'InterpolatedData',
            'plot_data': 'PlotData',
            'recorded_data': 'RecordedData',
            '_self': 'Self',
            'summary_data': 'SummaryData',
            'value': 'Value'
        }

        self._attributes = attributes
        self._data_server = data_server
        self._end_value = end_value
        self._interpolated_data = interpolated_data
        self._plot_data = plot_data
        self._recorded_data = recorded_data
        self.__self = _self
        self._summary_data = summary_data
        self._value = value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PointLinks':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PointLinks of this PointLinks.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def attributes(self):
        """Gets the attributes of this PointLinks.


        :return: The attributes of this PointLinks.
        :rtype: str
        """
        return self._attributes

    @attributes.setter
    def attributes(self, attributes):
        """Sets the attributes of this PointLinks.


        :param attributes: The attributes of this PointLinks.
        :type attributes: str
        """

        self._attributes = attributes

    @property
    def data_server(self):
        """Gets the data_server of this PointLinks.


        :return: The data_server of this PointLinks.
        :rtype: str
        """
        return self._data_server

    @data_server.setter
    def data_server(self, data_server):
        """Sets the data_server of this PointLinks.


        :param data_server: The data_server of this PointLinks.
        :type data_server: str
        """

        self._data_server = data_server

    @property
    def end_value(self):
        """Gets the end_value of this PointLinks.


        :return: The end_value of this PointLinks.
        :rtype: str
        """
        return self._end_value

    @end_value.setter
    def end_value(self, end_value):
        """Sets the end_value of this PointLinks.


        :param end_value: The end_value of this PointLinks.
        :type end_value: str
        """

        self._end_value = end_value

    @property
    def interpolated_data(self):
        """Gets the interpolated_data of this PointLinks.


        :return: The interpolated_data of this PointLinks.
        :rtype: str
        """
        return self._interpolated_data

    @interpolated_data.setter
    def interpolated_data(self, interpolated_data):
        """Sets the interpolated_data of this PointLinks.


        :param interpolated_data: The interpolated_data of this PointLinks.
        :type interpolated_data: str
        """

        self._interpolated_data = interpolated_data

    @property
    def plot_data(self):
        """Gets the plot_data of this PointLinks.


        :return: The plot_data of this PointLinks.
        :rtype: str
        """
        return self._plot_data

    @plot_data.setter
    def plot_data(self, plot_data):
        """Sets the plot_data of this PointLinks.


        :param plot_data: The plot_data of this PointLinks.
        :type plot_data: str
        """

        self._plot_data = plot_data

    @property
    def recorded_data(self):
        """Gets the recorded_data of this PointLinks.


        :return: The recorded_data of this PointLinks.
        :rtype: str
        """
        return self._recorded_data

    @recorded_data.setter
    def recorded_data(self, recorded_data):
        """Sets the recorded_data of this PointLinks.


        :param recorded_data: The recorded_data of this PointLinks.
        :type recorded_data: str
        """

        self._recorded_data = recorded_data

    @property
    def _self(self):
        """Gets the _self of this PointLinks.


        :return: The _self of this PointLinks.
        :rtype: str
        """
        return self.__self

    @_self.setter
    def _self(self, _self):
        """Sets the _self of this PointLinks.


        :param _self: The _self of this PointLinks.
        :type _self: str
        """

        self.__self = _self

    @property
    def summary_data(self):
        """Gets the summary_data of this PointLinks.


        :return: The summary_data of this PointLinks.
        :rtype: str
        """
        return self._summary_data

    @summary_data.setter
    def summary_data(self, summary_data):
        """Sets the summary_data of this PointLinks.


        :param summary_data: The summary_data of this PointLinks.
        :type summary_data: str
        """

        self._summary_data = summary_data

    @property
    def value(self):
        """Gets the value of this PointLinks.


        :return: The value of this PointLinks.
        :rtype: str
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this PointLinks.


        :param value: The value of this PointLinks.
        :type value: str
        """

        self._value = value
