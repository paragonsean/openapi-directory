# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TimeRuleLinks(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, analysis: str=None, analysis_template: str=None, plug_in: str=None, _self: str=None):
        """TimeRuleLinks - a model defined in OpenAPI

        :param analysis: The analysis of this TimeRuleLinks.
        :param analysis_template: The analysis_template of this TimeRuleLinks.
        :param plug_in: The plug_in of this TimeRuleLinks.
        :param _self: The _self of this TimeRuleLinks.
        """
        self.openapi_types = {
            'analysis': str,
            'analysis_template': str,
            'plug_in': str,
            '_self': str
        }

        self.attribute_map = {
            'analysis': 'Analysis',
            'analysis_template': 'AnalysisTemplate',
            'plug_in': 'PlugIn',
            '_self': 'Self'
        }

        self._analysis = analysis
        self._analysis_template = analysis_template
        self._plug_in = plug_in
        self.__self = _self

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TimeRuleLinks':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TimeRuleLinks of this TimeRuleLinks.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def analysis(self):
        """Gets the analysis of this TimeRuleLinks.


        :return: The analysis of this TimeRuleLinks.
        :rtype: str
        """
        return self._analysis

    @analysis.setter
    def analysis(self, analysis):
        """Sets the analysis of this TimeRuleLinks.


        :param analysis: The analysis of this TimeRuleLinks.
        :type analysis: str
        """

        self._analysis = analysis

    @property
    def analysis_template(self):
        """Gets the analysis_template of this TimeRuleLinks.


        :return: The analysis_template of this TimeRuleLinks.
        :rtype: str
        """
        return self._analysis_template

    @analysis_template.setter
    def analysis_template(self, analysis_template):
        """Sets the analysis_template of this TimeRuleLinks.


        :param analysis_template: The analysis_template of this TimeRuleLinks.
        :type analysis_template: str
        """

        self._analysis_template = analysis_template

    @property
    def plug_in(self):
        """Gets the plug_in of this TimeRuleLinks.


        :return: The plug_in of this TimeRuleLinks.
        :rtype: str
        """
        return self._plug_in

    @plug_in.setter
    def plug_in(self, plug_in):
        """Sets the plug_in of this TimeRuleLinks.


        :param plug_in: The plug_in of this TimeRuleLinks.
        :type plug_in: str
        """

        self._plug_in = plug_in

    @property
    def _self(self):
        """Gets the _self of this TimeRuleLinks.


        :return: The _self of this TimeRuleLinks.
        :rtype: str
        """
        return self.__self

    @_self.setter
    def _self(self, _self):
        """Sets the _self of this TimeRuleLinks.


        :param _self: The _self of this TimeRuleLinks.
        :type _self: str
        """

        self.__self = _self
