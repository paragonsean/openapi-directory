# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.web_exception import WebException
from openapi_server import util


class ChannelInstance(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, last_message_sent_time: str=None, sent_message_count: int=None, start_time: str=None, web_exception: WebException=None):
        """ChannelInstance - a model defined in OpenAPI

        :param id: The id of this ChannelInstance.
        :param last_message_sent_time: The last_message_sent_time of this ChannelInstance.
        :param sent_message_count: The sent_message_count of this ChannelInstance.
        :param start_time: The start_time of this ChannelInstance.
        :param web_exception: The web_exception of this ChannelInstance.
        """
        self.openapi_types = {
            'id': str,
            'last_message_sent_time': str,
            'sent_message_count': int,
            'start_time': str,
            'web_exception': WebException
        }

        self.attribute_map = {
            'id': 'Id',
            'last_message_sent_time': 'LastMessageSentTime',
            'sent_message_count': 'SentMessageCount',
            'start_time': 'StartTime',
            'web_exception': 'WebException'
        }

        self._id = id
        self._last_message_sent_time = last_message_sent_time
        self._sent_message_count = sent_message_count
        self._start_time = start_time
        self._web_exception = web_exception

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ChannelInstance':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ChannelInstance of this ChannelInstance.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this ChannelInstance.


        :return: The id of this ChannelInstance.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ChannelInstance.


        :param id: The id of this ChannelInstance.
        :type id: str
        """

        self._id = id

    @property
    def last_message_sent_time(self):
        """Gets the last_message_sent_time of this ChannelInstance.


        :return: The last_message_sent_time of this ChannelInstance.
        :rtype: str
        """
        return self._last_message_sent_time

    @last_message_sent_time.setter
    def last_message_sent_time(self, last_message_sent_time):
        """Sets the last_message_sent_time of this ChannelInstance.


        :param last_message_sent_time: The last_message_sent_time of this ChannelInstance.
        :type last_message_sent_time: str
        """

        self._last_message_sent_time = last_message_sent_time

    @property
    def sent_message_count(self):
        """Gets the sent_message_count of this ChannelInstance.


        :return: The sent_message_count of this ChannelInstance.
        :rtype: int
        """
        return self._sent_message_count

    @sent_message_count.setter
    def sent_message_count(self, sent_message_count):
        """Sets the sent_message_count of this ChannelInstance.


        :param sent_message_count: The sent_message_count of this ChannelInstance.
        :type sent_message_count: int
        """

        self._sent_message_count = sent_message_count

    @property
    def start_time(self):
        """Gets the start_time of this ChannelInstance.


        :return: The start_time of this ChannelInstance.
        :rtype: str
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """Sets the start_time of this ChannelInstance.


        :param start_time: The start_time of this ChannelInstance.
        :type start_time: str
        """

        self._start_time = start_time

    @property
    def web_exception(self):
        """Gets the web_exception of this ChannelInstance.


        :return: The web_exception of this ChannelInstance.
        :rtype: WebException
        """
        return self._web_exception

    @web_exception.setter
    def web_exception(self, web_exception):
        """Sets the web_exception of this ChannelInstance.


        :param web_exception: The web_exception of this ChannelInstance.
        :type web_exception: WebException
        """

        self._web_exception = web_exception
