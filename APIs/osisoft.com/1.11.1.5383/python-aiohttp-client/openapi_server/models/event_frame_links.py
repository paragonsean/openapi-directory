# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EventFrameLinks(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, annotations: str=None, attributes: str=None, categories: str=None, database: str=None, default_attribute: str=None, end_value: str=None, event_frames: str=None, interpolated_data: str=None, parent: str=None, plot_data: str=None, primary_referenced_element: str=None, recorded_data: str=None, referenced_elements: str=None, security: str=None, security_entries: str=None, _self: str=None, summary_data: str=None, template: str=None, value: str=None):
        """EventFrameLinks - a model defined in OpenAPI

        :param annotations: The annotations of this EventFrameLinks.
        :param attributes: The attributes of this EventFrameLinks.
        :param categories: The categories of this EventFrameLinks.
        :param database: The database of this EventFrameLinks.
        :param default_attribute: The default_attribute of this EventFrameLinks.
        :param end_value: The end_value of this EventFrameLinks.
        :param event_frames: The event_frames of this EventFrameLinks.
        :param interpolated_data: The interpolated_data of this EventFrameLinks.
        :param parent: The parent of this EventFrameLinks.
        :param plot_data: The plot_data of this EventFrameLinks.
        :param primary_referenced_element: The primary_referenced_element of this EventFrameLinks.
        :param recorded_data: The recorded_data of this EventFrameLinks.
        :param referenced_elements: The referenced_elements of this EventFrameLinks.
        :param security: The security of this EventFrameLinks.
        :param security_entries: The security_entries of this EventFrameLinks.
        :param _self: The _self of this EventFrameLinks.
        :param summary_data: The summary_data of this EventFrameLinks.
        :param template: The template of this EventFrameLinks.
        :param value: The value of this EventFrameLinks.
        """
        self.openapi_types = {
            'annotations': str,
            'attributes': str,
            'categories': str,
            'database': str,
            'default_attribute': str,
            'end_value': str,
            'event_frames': str,
            'interpolated_data': str,
            'parent': str,
            'plot_data': str,
            'primary_referenced_element': str,
            'recorded_data': str,
            'referenced_elements': str,
            'security': str,
            'security_entries': str,
            '_self': str,
            'summary_data': str,
            'template': str,
            'value': str
        }

        self.attribute_map = {
            'annotations': 'Annotations',
            'attributes': 'Attributes',
            'categories': 'Categories',
            'database': 'Database',
            'default_attribute': 'DefaultAttribute',
            'end_value': 'EndValue',
            'event_frames': 'EventFrames',
            'interpolated_data': 'InterpolatedData',
            'parent': 'Parent',
            'plot_data': 'PlotData',
            'primary_referenced_element': 'PrimaryReferencedElement',
            'recorded_data': 'RecordedData',
            'referenced_elements': 'ReferencedElements',
            'security': 'Security',
            'security_entries': 'SecurityEntries',
            '_self': 'Self',
            'summary_data': 'SummaryData',
            'template': 'Template',
            'value': 'Value'
        }

        self._annotations = annotations
        self._attributes = attributes
        self._categories = categories
        self._database = database
        self._default_attribute = default_attribute
        self._end_value = end_value
        self._event_frames = event_frames
        self._interpolated_data = interpolated_data
        self._parent = parent
        self._plot_data = plot_data
        self._primary_referenced_element = primary_referenced_element
        self._recorded_data = recorded_data
        self._referenced_elements = referenced_elements
        self._security = security
        self._security_entries = security_entries
        self.__self = _self
        self._summary_data = summary_data
        self._template = template
        self._value = value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EventFrameLinks':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EventFrameLinks of this EventFrameLinks.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def annotations(self):
        """Gets the annotations of this EventFrameLinks.


        :return: The annotations of this EventFrameLinks.
        :rtype: str
        """
        return self._annotations

    @annotations.setter
    def annotations(self, annotations):
        """Sets the annotations of this EventFrameLinks.


        :param annotations: The annotations of this EventFrameLinks.
        :type annotations: str
        """

        self._annotations = annotations

    @property
    def attributes(self):
        """Gets the attributes of this EventFrameLinks.


        :return: The attributes of this EventFrameLinks.
        :rtype: str
        """
        return self._attributes

    @attributes.setter
    def attributes(self, attributes):
        """Sets the attributes of this EventFrameLinks.


        :param attributes: The attributes of this EventFrameLinks.
        :type attributes: str
        """

        self._attributes = attributes

    @property
    def categories(self):
        """Gets the categories of this EventFrameLinks.


        :return: The categories of this EventFrameLinks.
        :rtype: str
        """
        return self._categories

    @categories.setter
    def categories(self, categories):
        """Sets the categories of this EventFrameLinks.


        :param categories: The categories of this EventFrameLinks.
        :type categories: str
        """

        self._categories = categories

    @property
    def database(self):
        """Gets the database of this EventFrameLinks.


        :return: The database of this EventFrameLinks.
        :rtype: str
        """
        return self._database

    @database.setter
    def database(self, database):
        """Sets the database of this EventFrameLinks.


        :param database: The database of this EventFrameLinks.
        :type database: str
        """

        self._database = database

    @property
    def default_attribute(self):
        """Gets the default_attribute of this EventFrameLinks.


        :return: The default_attribute of this EventFrameLinks.
        :rtype: str
        """
        return self._default_attribute

    @default_attribute.setter
    def default_attribute(self, default_attribute):
        """Sets the default_attribute of this EventFrameLinks.


        :param default_attribute: The default_attribute of this EventFrameLinks.
        :type default_attribute: str
        """

        self._default_attribute = default_attribute

    @property
    def end_value(self):
        """Gets the end_value of this EventFrameLinks.


        :return: The end_value of this EventFrameLinks.
        :rtype: str
        """
        return self._end_value

    @end_value.setter
    def end_value(self, end_value):
        """Sets the end_value of this EventFrameLinks.


        :param end_value: The end_value of this EventFrameLinks.
        :type end_value: str
        """

        self._end_value = end_value

    @property
    def event_frames(self):
        """Gets the event_frames of this EventFrameLinks.


        :return: The event_frames of this EventFrameLinks.
        :rtype: str
        """
        return self._event_frames

    @event_frames.setter
    def event_frames(self, event_frames):
        """Sets the event_frames of this EventFrameLinks.


        :param event_frames: The event_frames of this EventFrameLinks.
        :type event_frames: str
        """

        self._event_frames = event_frames

    @property
    def interpolated_data(self):
        """Gets the interpolated_data of this EventFrameLinks.


        :return: The interpolated_data of this EventFrameLinks.
        :rtype: str
        """
        return self._interpolated_data

    @interpolated_data.setter
    def interpolated_data(self, interpolated_data):
        """Sets the interpolated_data of this EventFrameLinks.


        :param interpolated_data: The interpolated_data of this EventFrameLinks.
        :type interpolated_data: str
        """

        self._interpolated_data = interpolated_data

    @property
    def parent(self):
        """Gets the parent of this EventFrameLinks.


        :return: The parent of this EventFrameLinks.
        :rtype: str
        """
        return self._parent

    @parent.setter
    def parent(self, parent):
        """Sets the parent of this EventFrameLinks.


        :param parent: The parent of this EventFrameLinks.
        :type parent: str
        """

        self._parent = parent

    @property
    def plot_data(self):
        """Gets the plot_data of this EventFrameLinks.


        :return: The plot_data of this EventFrameLinks.
        :rtype: str
        """
        return self._plot_data

    @plot_data.setter
    def plot_data(self, plot_data):
        """Sets the plot_data of this EventFrameLinks.


        :param plot_data: The plot_data of this EventFrameLinks.
        :type plot_data: str
        """

        self._plot_data = plot_data

    @property
    def primary_referenced_element(self):
        """Gets the primary_referenced_element of this EventFrameLinks.


        :return: The primary_referenced_element of this EventFrameLinks.
        :rtype: str
        """
        return self._primary_referenced_element

    @primary_referenced_element.setter
    def primary_referenced_element(self, primary_referenced_element):
        """Sets the primary_referenced_element of this EventFrameLinks.


        :param primary_referenced_element: The primary_referenced_element of this EventFrameLinks.
        :type primary_referenced_element: str
        """

        self._primary_referenced_element = primary_referenced_element

    @property
    def recorded_data(self):
        """Gets the recorded_data of this EventFrameLinks.


        :return: The recorded_data of this EventFrameLinks.
        :rtype: str
        """
        return self._recorded_data

    @recorded_data.setter
    def recorded_data(self, recorded_data):
        """Sets the recorded_data of this EventFrameLinks.


        :param recorded_data: The recorded_data of this EventFrameLinks.
        :type recorded_data: str
        """

        self._recorded_data = recorded_data

    @property
    def referenced_elements(self):
        """Gets the referenced_elements of this EventFrameLinks.


        :return: The referenced_elements of this EventFrameLinks.
        :rtype: str
        """
        return self._referenced_elements

    @referenced_elements.setter
    def referenced_elements(self, referenced_elements):
        """Sets the referenced_elements of this EventFrameLinks.


        :param referenced_elements: The referenced_elements of this EventFrameLinks.
        :type referenced_elements: str
        """

        self._referenced_elements = referenced_elements

    @property
    def security(self):
        """Gets the security of this EventFrameLinks.


        :return: The security of this EventFrameLinks.
        :rtype: str
        """
        return self._security

    @security.setter
    def security(self, security):
        """Sets the security of this EventFrameLinks.


        :param security: The security of this EventFrameLinks.
        :type security: str
        """

        self._security = security

    @property
    def security_entries(self):
        """Gets the security_entries of this EventFrameLinks.


        :return: The security_entries of this EventFrameLinks.
        :rtype: str
        """
        return self._security_entries

    @security_entries.setter
    def security_entries(self, security_entries):
        """Sets the security_entries of this EventFrameLinks.


        :param security_entries: The security_entries of this EventFrameLinks.
        :type security_entries: str
        """

        self._security_entries = security_entries

    @property
    def _self(self):
        """Gets the _self of this EventFrameLinks.


        :return: The _self of this EventFrameLinks.
        :rtype: str
        """
        return self.__self

    @_self.setter
    def _self(self, _self):
        """Sets the _self of this EventFrameLinks.


        :param _self: The _self of this EventFrameLinks.
        :type _self: str
        """

        self.__self = _self

    @property
    def summary_data(self):
        """Gets the summary_data of this EventFrameLinks.


        :return: The summary_data of this EventFrameLinks.
        :rtype: str
        """
        return self._summary_data

    @summary_data.setter
    def summary_data(self, summary_data):
        """Sets the summary_data of this EventFrameLinks.


        :param summary_data: The summary_data of this EventFrameLinks.
        :type summary_data: str
        """

        self._summary_data = summary_data

    @property
    def template(self):
        """Gets the template of this EventFrameLinks.


        :return: The template of this EventFrameLinks.
        :rtype: str
        """
        return self._template

    @template.setter
    def template(self, template):
        """Sets the template of this EventFrameLinks.


        :param template: The template of this EventFrameLinks.
        :type template: str
        """

        self._template = template

    @property
    def value(self):
        """Gets the value of this EventFrameLinks.


        :return: The value of this EventFrameLinks.
        :rtype: str
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this EventFrameLinks.


        :param value: The value of this EventFrameLinks.
        :type value: str
        """

        self._value = value
