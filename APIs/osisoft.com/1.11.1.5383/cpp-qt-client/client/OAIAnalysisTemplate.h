/**
 * PI Web API 2018 SP1 Swagger Spec
 * Swagger Spec file that describes PI Web API
 *
 * The version of the OpenAPI document: 1.11.1.5383
 * Contact: techsupport@osisoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAnalysisTemplate.h
 *
 * 
 */

#ifndef OAIAnalysisTemplate_H
#define OAIAnalysisTemplate_H

#include <QJsonObject>

#include "OAIAnalysisTemplateLinks.h"
#include "OAIWebException.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAnalysisTemplateLinks;
class OAIWebException;

class OAIAnalysisTemplate : public OAIObject {
public:
    OAIAnalysisTemplate();
    OAIAnalysisTemplate(QString json);
    ~OAIAnalysisTemplate() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAnalysisRulePlugInName() const;
    void setAnalysisRulePlugInName(const QString &analysis_rule_plug_in_name);
    bool is_analysis_rule_plug_in_name_Set() const;
    bool is_analysis_rule_plug_in_name_Valid() const;

    QList<QString> getCategoryNames() const;
    void setCategoryNames(const QList<QString> &category_names);
    bool is_category_names_Set() const;
    bool is_category_names_Valid() const;

    bool isCreateEnabled() const;
    void setCreateEnabled(const bool &create_enabled);
    bool is_create_enabled_Set() const;
    bool is_create_enabled_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    qint32 getGroupId() const;
    void setGroupId(const qint32 &group_id);
    bool is_group_id_Set() const;
    bool is_group_id_Valid() const;

    bool isHasNotificationTemplate() const;
    void setHasNotificationTemplate(const bool &has_notification_template);
    bool is_has_notification_template_Set() const;
    bool is_has_notification_template_Valid() const;

    bool isHasTarget() const;
    void setHasTarget(const bool &has_target);
    bool is_has_target_Set() const;
    bool is_has_target_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    OAIAnalysisTemplateLinks getLinks() const;
    void setLinks(const OAIAnalysisTemplateLinks &links);
    bool is_links_Set() const;
    bool is_links_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getOutputTime() const;
    void setOutputTime(const QString &output_time);
    bool is_output_time_Set() const;
    bool is_output_time_Valid() const;

    QString getPath() const;
    void setPath(const QString &path);
    bool is_path_Set() const;
    bool is_path_Valid() const;

    QString getTargetName() const;
    void setTargetName(const QString &target_name);
    bool is_target_name_Set() const;
    bool is_target_name_Valid() const;

    QString getTimeRulePlugInName() const;
    void setTimeRulePlugInName(const QString &time_rule_plug_in_name);
    bool is_time_rule_plug_in_name_Set() const;
    bool is_time_rule_plug_in_name_Valid() const;

    OAIWebException getWebException() const;
    void setWebException(const OAIWebException &web_exception);
    bool is_web_exception_Set() const;
    bool is_web_exception_Valid() const;

    QString getWebId() const;
    void setWebId(const QString &web_id);
    bool is_web_id_Set() const;
    bool is_web_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_analysis_rule_plug_in_name;
    bool m_analysis_rule_plug_in_name_isSet;
    bool m_analysis_rule_plug_in_name_isValid;

    QList<QString> m_category_names;
    bool m_category_names_isSet;
    bool m_category_names_isValid;

    bool m_create_enabled;
    bool m_create_enabled_isSet;
    bool m_create_enabled_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    qint32 m_group_id;
    bool m_group_id_isSet;
    bool m_group_id_isValid;

    bool m_has_notification_template;
    bool m_has_notification_template_isSet;
    bool m_has_notification_template_isValid;

    bool m_has_target;
    bool m_has_target_isSet;
    bool m_has_target_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    OAIAnalysisTemplateLinks m_links;
    bool m_links_isSet;
    bool m_links_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_output_time;
    bool m_output_time_isSet;
    bool m_output_time_isValid;

    QString m_path;
    bool m_path_isSet;
    bool m_path_isValid;

    QString m_target_name;
    bool m_target_name_isSet;
    bool m_target_name_isValid;

    QString m_time_rule_plug_in_name;
    bool m_time_rule_plug_in_name_isSet;
    bool m_time_rule_plug_in_name_isValid;

    OAIWebException m_web_exception;
    bool m_web_exception_isSet;
    bool m_web_exception_isValid;

    QString m_web_id;
    bool m_web_id_isSet;
    bool m_web_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAnalysisTemplate)

#endif // OAIAnalysisTemplate_H
