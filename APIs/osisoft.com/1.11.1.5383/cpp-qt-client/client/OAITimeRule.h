/**
 * PI Web API 2018 SP1 Swagger Spec
 * Swagger Spec file that describes PI Web API
 *
 * The version of the OpenAPI document: 1.11.1.5383
 * Contact: techsupport@osisoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITimeRule.h
 *
 * 
 */

#ifndef OAITimeRule_H
#define OAITimeRule_H

#include <QJsonObject>

#include "OAITimeRuleLinks.h"
#include "OAIWebException.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITimeRuleLinks;
class OAIWebException;

class OAITimeRule : public OAIObject {
public:
    OAITimeRule();
    OAITimeRule(QString json);
    ~OAITimeRule() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getConfigString() const;
    void setConfigString(const QString &config_string);
    bool is_config_string_Set() const;
    bool is_config_string_Valid() const;

    QString getConfigStringStored() const;
    void setConfigStringStored(const QString &config_string_stored);
    bool is_config_string_stored_Set() const;
    bool is_config_string_stored_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getDisplayString() const;
    void setDisplayString(const QString &display_string);
    bool is_display_string_Set() const;
    bool is_display_string_Valid() const;

    QString getEditorType() const;
    void setEditorType(const QString &editor_type);
    bool is_editor_type_Set() const;
    bool is_editor_type_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    bool isIsConfigured() const;
    void setIsConfigured(const bool &is_configured);
    bool is_is_configured_Set() const;
    bool is_is_configured_Valid() const;

    bool isIsInitializing() const;
    void setIsInitializing(const bool &is_initializing);
    bool is_is_initializing_Set() const;
    bool is_is_initializing_Valid() const;

    OAITimeRuleLinks getLinks() const;
    void setLinks(const OAITimeRuleLinks &links);
    bool is_links_Set() const;
    bool is_links_Valid() const;

    bool isMergeDuplicatedItems() const;
    void setMergeDuplicatedItems(const bool &merge_duplicated_items);
    bool is_merge_duplicated_items_Set() const;
    bool is_merge_duplicated_items_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getPath() const;
    void setPath(const QString &path);
    bool is_path_Set() const;
    bool is_path_Valid() const;

    QString getPlugInName() const;
    void setPlugInName(const QString &plug_in_name);
    bool is_plug_in_name_Set() const;
    bool is_plug_in_name_Valid() const;

    OAIWebException getWebException() const;
    void setWebException(const OAIWebException &web_exception);
    bool is_web_exception_Set() const;
    bool is_web_exception_Valid() const;

    QString getWebId() const;
    void setWebId(const QString &web_id);
    bool is_web_id_Set() const;
    bool is_web_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_config_string;
    bool m_config_string_isSet;
    bool m_config_string_isValid;

    QString m_config_string_stored;
    bool m_config_string_stored_isSet;
    bool m_config_string_stored_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_display_string;
    bool m_display_string_isSet;
    bool m_display_string_isValid;

    QString m_editor_type;
    bool m_editor_type_isSet;
    bool m_editor_type_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    bool m_is_configured;
    bool m_is_configured_isSet;
    bool m_is_configured_isValid;

    bool m_is_initializing;
    bool m_is_initializing_isSet;
    bool m_is_initializing_isValid;

    OAITimeRuleLinks m_links;
    bool m_links_isSet;
    bool m_links_isValid;

    bool m_merge_duplicated_items;
    bool m_merge_duplicated_items_isSet;
    bool m_merge_duplicated_items_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_path;
    bool m_path_isSet;
    bool m_path_isValid;

    QString m_plug_in_name;
    bool m_plug_in_name_isSet;
    bool m_plug_in_name_isValid;

    OAIWebException m_web_exception;
    bool m_web_exception_isSet;
    bool m_web_exception_isValid;

    QString m_web_id;
    bool m_web_id_isSet;
    bool m_web_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITimeRule)

#endif // OAITimeRule_H
