/**
 * PI Web API 2018 SP1 Swagger Spec
 * Swagger Spec file that describes PI Web API
 *
 * The version of the OpenAPI document: 1.11.1.5383
 * Contact: techsupport@osisoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAnalysisRule.h
 *
 * 
 */

#ifndef OAIAnalysisRule_H
#define OAIAnalysisRule_H

#include <QJsonObject>

#include "OAIAnalysisRuleLinks.h"
#include "OAIWebException.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAnalysisRuleLinks;
class OAIWebException;

class OAIAnalysisRule : public OAIObject {
public:
    OAIAnalysisRule();
    OAIAnalysisRule(QString json);
    ~OAIAnalysisRule() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getConfigString() const;
    void setConfigString(const QString &config_string);
    bool is_config_string_Set() const;
    bool is_config_string_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getDisplayString() const;
    void setDisplayString(const QString &display_string);
    bool is_display_string_Set() const;
    bool is_display_string_Valid() const;

    QString getEditorType() const;
    void setEditorType(const QString &editor_type);
    bool is_editor_type_Set() const;
    bool is_editor_type_Valid() const;

    bool isHasChildren() const;
    void setHasChildren(const bool &has_children);
    bool is_has_children_Set() const;
    bool is_has_children_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    bool isIsConfigured() const;
    void setIsConfigured(const bool &is_configured);
    bool is_is_configured_Set() const;
    bool is_is_configured_Valid() const;

    bool isIsInitializing() const;
    void setIsInitializing(const bool &is_initializing);
    bool is_is_initializing_Set() const;
    bool is_is_initializing_Valid() const;

    OAIAnalysisRuleLinks getLinks() const;
    void setLinks(const OAIAnalysisRuleLinks &links);
    bool is_links_Set() const;
    bool is_links_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getPath() const;
    void setPath(const QString &path);
    bool is_path_Set() const;
    bool is_path_Valid() const;

    QString getPlugInName() const;
    void setPlugInName(const QString &plug_in_name);
    bool is_plug_in_name_Set() const;
    bool is_plug_in_name_Valid() const;

    QList<QString> getSupportedBehaviors() const;
    void setSupportedBehaviors(const QList<QString> &supported_behaviors);
    bool is_supported_behaviors_Set() const;
    bool is_supported_behaviors_Valid() const;

    QString getVariableMapping() const;
    void setVariableMapping(const QString &variable_mapping);
    bool is_variable_mapping_Set() const;
    bool is_variable_mapping_Valid() const;

    OAIWebException getWebException() const;
    void setWebException(const OAIWebException &web_exception);
    bool is_web_exception_Set() const;
    bool is_web_exception_Valid() const;

    QString getWebId() const;
    void setWebId(const QString &web_id);
    bool is_web_id_Set() const;
    bool is_web_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_config_string;
    bool m_config_string_isSet;
    bool m_config_string_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_display_string;
    bool m_display_string_isSet;
    bool m_display_string_isValid;

    QString m_editor_type;
    bool m_editor_type_isSet;
    bool m_editor_type_isValid;

    bool m_has_children;
    bool m_has_children_isSet;
    bool m_has_children_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    bool m_is_configured;
    bool m_is_configured_isSet;
    bool m_is_configured_isValid;

    bool m_is_initializing;
    bool m_is_initializing_isSet;
    bool m_is_initializing_isValid;

    OAIAnalysisRuleLinks m_links;
    bool m_links_isSet;
    bool m_links_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_path;
    bool m_path_isSet;
    bool m_path_isValid;

    QString m_plug_in_name;
    bool m_plug_in_name_isSet;
    bool m_plug_in_name_isValid;

    QList<QString> m_supported_behaviors;
    bool m_supported_behaviors_isSet;
    bool m_supported_behaviors_isValid;

    QString m_variable_mapping;
    bool m_variable_mapping_isSet;
    bool m_variable_mapping_isValid;

    OAIWebException m_web_exception;
    bool m_web_exception_isSet;
    bool m_web_exception_isValid;

    QString m_web_id;
    bool m_web_id_isSet;
    bool m_web_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAnalysisRule)

#endif // OAIAnalysisRule_H
