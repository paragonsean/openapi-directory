/**
 * PI Web API 2018 SP1 Swagger Spec
 * Swagger Spec file that describes PI Web API
 *
 * The version of the OpenAPI document: 1.11.1.5383
 * Contact: techsupport@osisoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPoint.h
 *
 * 
 */

#ifndef OAIPoint_H
#define OAIPoint_H

#include <QJsonObject>

#include "OAIPointLinks.h"
#include "OAIWebException.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPointLinks;
class OAIWebException;

class OAIPoint : public OAIObject {
public:
    OAIPoint();
    OAIPoint(QString json);
    ~OAIPoint() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDescriptor() const;
    void setDescriptor(const QString &descriptor);
    bool is_descriptor_Set() const;
    bool is_descriptor_Valid() const;

    QString getDigitalSetName() const;
    void setDigitalSetName(const QString &digital_set_name);
    bool is_digital_set_name_Set() const;
    bool is_digital_set_name_Valid() const;

    qint32 getDisplayDigits() const;
    void setDisplayDigits(const qint32 &display_digits);
    bool is_display_digits_Set() const;
    bool is_display_digits_Valid() const;

    QString getEngineeringUnits() const;
    void setEngineeringUnits(const QString &engineering_units);
    bool is_engineering_units_Set() const;
    bool is_engineering_units_Valid() const;

    bool isFuture() const;
    void setFuture(const bool &future);
    bool is_future_Set() const;
    bool is_future_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    OAIPointLinks getLinks() const;
    void setLinks(const OAIPointLinks &links);
    bool is_links_Set() const;
    bool is_links_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getPath() const;
    void setPath(const QString &path);
    bool is_path_Set() const;
    bool is_path_Valid() const;

    QString getPointClass() const;
    void setPointClass(const QString &point_class);
    bool is_point_class_Set() const;
    bool is_point_class_Valid() const;

    QString getPointType() const;
    void setPointType(const QString &point_type);
    bool is_point_type_Set() const;
    bool is_point_type_Valid() const;

    double getSpan() const;
    void setSpan(const double &span);
    bool is_span_Set() const;
    bool is_span_Valid() const;

    bool isStep() const;
    void setStep(const bool &step);
    bool is_step_Set() const;
    bool is_step_Valid() const;

    OAIWebException getWebException() const;
    void setWebException(const OAIWebException &web_exception);
    bool is_web_exception_Set() const;
    bool is_web_exception_Valid() const;

    QString getWebId() const;
    void setWebId(const QString &web_id);
    bool is_web_id_Set() const;
    bool is_web_id_Valid() const;

    double getZero() const;
    void setZero(const double &zero);
    bool is_zero_Set() const;
    bool is_zero_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_descriptor;
    bool m_descriptor_isSet;
    bool m_descriptor_isValid;

    QString m_digital_set_name;
    bool m_digital_set_name_isSet;
    bool m_digital_set_name_isValid;

    qint32 m_display_digits;
    bool m_display_digits_isSet;
    bool m_display_digits_isValid;

    QString m_engineering_units;
    bool m_engineering_units_isSet;
    bool m_engineering_units_isValid;

    bool m_future;
    bool m_future_isSet;
    bool m_future_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    OAIPointLinks m_links;
    bool m_links_isSet;
    bool m_links_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_path;
    bool m_path_isSet;
    bool m_path_isValid;

    QString m_point_class;
    bool m_point_class_isSet;
    bool m_point_class_isValid;

    QString m_point_type;
    bool m_point_type_isSet;
    bool m_point_type_isValid;

    double m_span;
    bool m_span_isSet;
    bool m_span_isValid;

    bool m_step;
    bool m_step_isSet;
    bool m_step_isValid;

    OAIWebException m_web_exception;
    bool m_web_exception_isSet;
    bool m_web_exception_isValid;

    QString m_web_id;
    bool m_web_id_isSet;
    bool m_web_id_isValid;

    double m_zero;
    bool m_zero_isSet;
    bool m_zero_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPoint)

#endif // OAIPoint_H
