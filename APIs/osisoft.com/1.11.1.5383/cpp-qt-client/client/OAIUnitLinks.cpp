/**
 * PI Web API 2018 SP1 Swagger Spec
 * Swagger Spec file that describes PI Web API
 *
 * The version of the OpenAPI document: 1.11.1.5383
 * Contact: techsupport@osisoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUnitLinks.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUnitLinks::OAIUnitLinks(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUnitLinks::OAIUnitLinks() {
    this->initializeModel();
}

OAIUnitLinks::~OAIUnitLinks() {}

void OAIUnitLinks::initializeModel() {

    m_r_class_isSet = false;
    m_r_class_isValid = false;

    m_reference_unit_isSet = false;
    m_reference_unit_isValid = false;

    m_self_isSet = false;
    m_self_isValid = false;
}

void OAIUnitLinks::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUnitLinks::fromJsonObject(QJsonObject json) {

    m_r_class_isValid = ::OpenAPI::fromJsonValue(m_r_class, json[QString("Class")]);
    m_r_class_isSet = !json[QString("Class")].isNull() && m_r_class_isValid;

    m_reference_unit_isValid = ::OpenAPI::fromJsonValue(m_reference_unit, json[QString("ReferenceUnit")]);
    m_reference_unit_isSet = !json[QString("ReferenceUnit")].isNull() && m_reference_unit_isValid;

    m_self_isValid = ::OpenAPI::fromJsonValue(m_self, json[QString("Self")]);
    m_self_isSet = !json[QString("Self")].isNull() && m_self_isValid;
}

QString OAIUnitLinks::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUnitLinks::asJsonObject() const {
    QJsonObject obj;
    if (m_r_class_isSet) {
        obj.insert(QString("Class"), ::OpenAPI::toJsonValue(m_r_class));
    }
    if (m_reference_unit_isSet) {
        obj.insert(QString("ReferenceUnit"), ::OpenAPI::toJsonValue(m_reference_unit));
    }
    if (m_self_isSet) {
        obj.insert(QString("Self"), ::OpenAPI::toJsonValue(m_self));
    }
    return obj;
}

QString OAIUnitLinks::getRClass() const {
    return m_r_class;
}
void OAIUnitLinks::setRClass(const QString &r_class) {
    m_r_class = r_class;
    m_r_class_isSet = true;
}

bool OAIUnitLinks::is_r_class_Set() const{
    return m_r_class_isSet;
}

bool OAIUnitLinks::is_r_class_Valid() const{
    return m_r_class_isValid;
}

QString OAIUnitLinks::getReferenceUnit() const {
    return m_reference_unit;
}
void OAIUnitLinks::setReferenceUnit(const QString &reference_unit) {
    m_reference_unit = reference_unit;
    m_reference_unit_isSet = true;
}

bool OAIUnitLinks::is_reference_unit_Set() const{
    return m_reference_unit_isSet;
}

bool OAIUnitLinks::is_reference_unit_Valid() const{
    return m_reference_unit_isValid;
}

QString OAIUnitLinks::getSelf() const {
    return m_self;
}
void OAIUnitLinks::setSelf(const QString &self) {
    m_self = self;
    m_self_isSet = true;
}

bool OAIUnitLinks::is_self_Set() const{
    return m_self_isSet;
}

bool OAIUnitLinks::is_self_Valid() const{
    return m_self_isValid;
}

bool OAIUnitLinks::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_r_class_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_reference_unit_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_self_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUnitLinks::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
