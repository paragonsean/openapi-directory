/**
 * PI Web API 2018 SP1 Swagger Spec
 * Swagger Spec file that describes PI Web API
 *
 * The version of the OpenAPI document: 1.11.1.5383
 * Contact: techsupport@osisoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAINotificationContactTemplateLinks.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAINotificationContactTemplateLinks::OAINotificationContactTemplateLinks(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAINotificationContactTemplateLinks::OAINotificationContactTemplateLinks() {
    this->initializeModel();
}

OAINotificationContactTemplateLinks::~OAINotificationContactTemplateLinks() {}

void OAINotificationContactTemplateLinks::initializeModel() {

    m_asset_server_isSet = false;
    m_asset_server_isValid = false;

    m_notification_contact_templates_isSet = false;
    m_notification_contact_templates_isValid = false;

    m_notification_plug_in_isSet = false;
    m_notification_plug_in_isValid = false;

    m_security_isSet = false;
    m_security_isValid = false;

    m_security_entries_isSet = false;
    m_security_entries_isValid = false;

    m_self_isSet = false;
    m_self_isValid = false;
}

void OAINotificationContactTemplateLinks::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAINotificationContactTemplateLinks::fromJsonObject(QJsonObject json) {

    m_asset_server_isValid = ::OpenAPI::fromJsonValue(m_asset_server, json[QString("AssetServer")]);
    m_asset_server_isSet = !json[QString("AssetServer")].isNull() && m_asset_server_isValid;

    m_notification_contact_templates_isValid = ::OpenAPI::fromJsonValue(m_notification_contact_templates, json[QString("NotificationContactTemplates")]);
    m_notification_contact_templates_isSet = !json[QString("NotificationContactTemplates")].isNull() && m_notification_contact_templates_isValid;

    m_notification_plug_in_isValid = ::OpenAPI::fromJsonValue(m_notification_plug_in, json[QString("NotificationPlugIn")]);
    m_notification_plug_in_isSet = !json[QString("NotificationPlugIn")].isNull() && m_notification_plug_in_isValid;

    m_security_isValid = ::OpenAPI::fromJsonValue(m_security, json[QString("Security")]);
    m_security_isSet = !json[QString("Security")].isNull() && m_security_isValid;

    m_security_entries_isValid = ::OpenAPI::fromJsonValue(m_security_entries, json[QString("SecurityEntries")]);
    m_security_entries_isSet = !json[QString("SecurityEntries")].isNull() && m_security_entries_isValid;

    m_self_isValid = ::OpenAPI::fromJsonValue(m_self, json[QString("Self")]);
    m_self_isSet = !json[QString("Self")].isNull() && m_self_isValid;
}

QString OAINotificationContactTemplateLinks::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAINotificationContactTemplateLinks::asJsonObject() const {
    QJsonObject obj;
    if (m_asset_server_isSet) {
        obj.insert(QString("AssetServer"), ::OpenAPI::toJsonValue(m_asset_server));
    }
    if (m_notification_contact_templates_isSet) {
        obj.insert(QString("NotificationContactTemplates"), ::OpenAPI::toJsonValue(m_notification_contact_templates));
    }
    if (m_notification_plug_in_isSet) {
        obj.insert(QString("NotificationPlugIn"), ::OpenAPI::toJsonValue(m_notification_plug_in));
    }
    if (m_security_isSet) {
        obj.insert(QString("Security"), ::OpenAPI::toJsonValue(m_security));
    }
    if (m_security_entries_isSet) {
        obj.insert(QString("SecurityEntries"), ::OpenAPI::toJsonValue(m_security_entries));
    }
    if (m_self_isSet) {
        obj.insert(QString("Self"), ::OpenAPI::toJsonValue(m_self));
    }
    return obj;
}

QString OAINotificationContactTemplateLinks::getAssetServer() const {
    return m_asset_server;
}
void OAINotificationContactTemplateLinks::setAssetServer(const QString &asset_server) {
    m_asset_server = asset_server;
    m_asset_server_isSet = true;
}

bool OAINotificationContactTemplateLinks::is_asset_server_Set() const{
    return m_asset_server_isSet;
}

bool OAINotificationContactTemplateLinks::is_asset_server_Valid() const{
    return m_asset_server_isValid;
}

QString OAINotificationContactTemplateLinks::getNotificationContactTemplates() const {
    return m_notification_contact_templates;
}
void OAINotificationContactTemplateLinks::setNotificationContactTemplates(const QString &notification_contact_templates) {
    m_notification_contact_templates = notification_contact_templates;
    m_notification_contact_templates_isSet = true;
}

bool OAINotificationContactTemplateLinks::is_notification_contact_templates_Set() const{
    return m_notification_contact_templates_isSet;
}

bool OAINotificationContactTemplateLinks::is_notification_contact_templates_Valid() const{
    return m_notification_contact_templates_isValid;
}

QString OAINotificationContactTemplateLinks::getNotificationPlugIn() const {
    return m_notification_plug_in;
}
void OAINotificationContactTemplateLinks::setNotificationPlugIn(const QString &notification_plug_in) {
    m_notification_plug_in = notification_plug_in;
    m_notification_plug_in_isSet = true;
}

bool OAINotificationContactTemplateLinks::is_notification_plug_in_Set() const{
    return m_notification_plug_in_isSet;
}

bool OAINotificationContactTemplateLinks::is_notification_plug_in_Valid() const{
    return m_notification_plug_in_isValid;
}

QString OAINotificationContactTemplateLinks::getSecurity() const {
    return m_security;
}
void OAINotificationContactTemplateLinks::setSecurity(const QString &security) {
    m_security = security;
    m_security_isSet = true;
}

bool OAINotificationContactTemplateLinks::is_security_Set() const{
    return m_security_isSet;
}

bool OAINotificationContactTemplateLinks::is_security_Valid() const{
    return m_security_isValid;
}

QString OAINotificationContactTemplateLinks::getSecurityEntries() const {
    return m_security_entries;
}
void OAINotificationContactTemplateLinks::setSecurityEntries(const QString &security_entries) {
    m_security_entries = security_entries;
    m_security_entries_isSet = true;
}

bool OAINotificationContactTemplateLinks::is_security_entries_Set() const{
    return m_security_entries_isSet;
}

bool OAINotificationContactTemplateLinks::is_security_entries_Valid() const{
    return m_security_entries_isValid;
}

QString OAINotificationContactTemplateLinks::getSelf() const {
    return m_self;
}
void OAINotificationContactTemplateLinks::setSelf(const QString &self) {
    m_self = self;
    m_self_isSet = true;
}

bool OAINotificationContactTemplateLinks::is_self_Set() const{
    return m_self_isSet;
}

bool OAINotificationContactTemplateLinks::is_self_Valid() const{
    return m_self_isValid;
}

bool OAINotificationContactTemplateLinks::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_asset_server_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_notification_contact_templates_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_notification_plug_in_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_security_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_security_entries_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_self_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAINotificationContactTemplateLinks::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
