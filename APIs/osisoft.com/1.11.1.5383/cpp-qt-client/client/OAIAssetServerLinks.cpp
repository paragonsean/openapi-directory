/**
 * PI Web API 2018 SP1 Swagger Spec
 * Swagger Spec file that describes PI Web API
 *
 * The version of the OpenAPI document: 1.11.1.5383
 * Contact: techsupport@osisoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAssetServerLinks.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAssetServerLinks::OAIAssetServerLinks(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAssetServerLinks::OAIAssetServerLinks() {
    this->initializeModel();
}

OAIAssetServerLinks::~OAIAssetServerLinks() {}

void OAIAssetServerLinks::initializeModel() {

    m_analysis_rule_plug_ins_isSet = false;
    m_analysis_rule_plug_ins_isValid = false;

    m_databases_isSet = false;
    m_databases_isValid = false;

    m_notification_contact_templates_isSet = false;
    m_notification_contact_templates_isValid = false;

    m_notification_plug_ins_isSet = false;
    m_notification_plug_ins_isValid = false;

    m_security_isSet = false;
    m_security_isValid = false;

    m_security_entries_isSet = false;
    m_security_entries_isValid = false;

    m_security_identities_isSet = false;
    m_security_identities_isValid = false;

    m_security_mappings_isSet = false;
    m_security_mappings_isValid = false;

    m_self_isSet = false;
    m_self_isValid = false;

    m_time_rule_plug_ins_isSet = false;
    m_time_rule_plug_ins_isValid = false;

    m_unit_classes_isSet = false;
    m_unit_classes_isValid = false;
}

void OAIAssetServerLinks::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAssetServerLinks::fromJsonObject(QJsonObject json) {

    m_analysis_rule_plug_ins_isValid = ::OpenAPI::fromJsonValue(m_analysis_rule_plug_ins, json[QString("AnalysisRulePlugIns")]);
    m_analysis_rule_plug_ins_isSet = !json[QString("AnalysisRulePlugIns")].isNull() && m_analysis_rule_plug_ins_isValid;

    m_databases_isValid = ::OpenAPI::fromJsonValue(m_databases, json[QString("Databases")]);
    m_databases_isSet = !json[QString("Databases")].isNull() && m_databases_isValid;

    m_notification_contact_templates_isValid = ::OpenAPI::fromJsonValue(m_notification_contact_templates, json[QString("NotificationContactTemplates")]);
    m_notification_contact_templates_isSet = !json[QString("NotificationContactTemplates")].isNull() && m_notification_contact_templates_isValid;

    m_notification_plug_ins_isValid = ::OpenAPI::fromJsonValue(m_notification_plug_ins, json[QString("NotificationPlugIns")]);
    m_notification_plug_ins_isSet = !json[QString("NotificationPlugIns")].isNull() && m_notification_plug_ins_isValid;

    m_security_isValid = ::OpenAPI::fromJsonValue(m_security, json[QString("Security")]);
    m_security_isSet = !json[QString("Security")].isNull() && m_security_isValid;

    m_security_entries_isValid = ::OpenAPI::fromJsonValue(m_security_entries, json[QString("SecurityEntries")]);
    m_security_entries_isSet = !json[QString("SecurityEntries")].isNull() && m_security_entries_isValid;

    m_security_identities_isValid = ::OpenAPI::fromJsonValue(m_security_identities, json[QString("SecurityIdentities")]);
    m_security_identities_isSet = !json[QString("SecurityIdentities")].isNull() && m_security_identities_isValid;

    m_security_mappings_isValid = ::OpenAPI::fromJsonValue(m_security_mappings, json[QString("SecurityMappings")]);
    m_security_mappings_isSet = !json[QString("SecurityMappings")].isNull() && m_security_mappings_isValid;

    m_self_isValid = ::OpenAPI::fromJsonValue(m_self, json[QString("Self")]);
    m_self_isSet = !json[QString("Self")].isNull() && m_self_isValid;

    m_time_rule_plug_ins_isValid = ::OpenAPI::fromJsonValue(m_time_rule_plug_ins, json[QString("TimeRulePlugIns")]);
    m_time_rule_plug_ins_isSet = !json[QString("TimeRulePlugIns")].isNull() && m_time_rule_plug_ins_isValid;

    m_unit_classes_isValid = ::OpenAPI::fromJsonValue(m_unit_classes, json[QString("UnitClasses")]);
    m_unit_classes_isSet = !json[QString("UnitClasses")].isNull() && m_unit_classes_isValid;
}

QString OAIAssetServerLinks::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAssetServerLinks::asJsonObject() const {
    QJsonObject obj;
    if (m_analysis_rule_plug_ins_isSet) {
        obj.insert(QString("AnalysisRulePlugIns"), ::OpenAPI::toJsonValue(m_analysis_rule_plug_ins));
    }
    if (m_databases_isSet) {
        obj.insert(QString("Databases"), ::OpenAPI::toJsonValue(m_databases));
    }
    if (m_notification_contact_templates_isSet) {
        obj.insert(QString("NotificationContactTemplates"), ::OpenAPI::toJsonValue(m_notification_contact_templates));
    }
    if (m_notification_plug_ins_isSet) {
        obj.insert(QString("NotificationPlugIns"), ::OpenAPI::toJsonValue(m_notification_plug_ins));
    }
    if (m_security_isSet) {
        obj.insert(QString("Security"), ::OpenAPI::toJsonValue(m_security));
    }
    if (m_security_entries_isSet) {
        obj.insert(QString("SecurityEntries"), ::OpenAPI::toJsonValue(m_security_entries));
    }
    if (m_security_identities_isSet) {
        obj.insert(QString("SecurityIdentities"), ::OpenAPI::toJsonValue(m_security_identities));
    }
    if (m_security_mappings_isSet) {
        obj.insert(QString("SecurityMappings"), ::OpenAPI::toJsonValue(m_security_mappings));
    }
    if (m_self_isSet) {
        obj.insert(QString("Self"), ::OpenAPI::toJsonValue(m_self));
    }
    if (m_time_rule_plug_ins_isSet) {
        obj.insert(QString("TimeRulePlugIns"), ::OpenAPI::toJsonValue(m_time_rule_plug_ins));
    }
    if (m_unit_classes_isSet) {
        obj.insert(QString("UnitClasses"), ::OpenAPI::toJsonValue(m_unit_classes));
    }
    return obj;
}

QString OAIAssetServerLinks::getAnalysisRulePlugIns() const {
    return m_analysis_rule_plug_ins;
}
void OAIAssetServerLinks::setAnalysisRulePlugIns(const QString &analysis_rule_plug_ins) {
    m_analysis_rule_plug_ins = analysis_rule_plug_ins;
    m_analysis_rule_plug_ins_isSet = true;
}

bool OAIAssetServerLinks::is_analysis_rule_plug_ins_Set() const{
    return m_analysis_rule_plug_ins_isSet;
}

bool OAIAssetServerLinks::is_analysis_rule_plug_ins_Valid() const{
    return m_analysis_rule_plug_ins_isValid;
}

QString OAIAssetServerLinks::getDatabases() const {
    return m_databases;
}
void OAIAssetServerLinks::setDatabases(const QString &databases) {
    m_databases = databases;
    m_databases_isSet = true;
}

bool OAIAssetServerLinks::is_databases_Set() const{
    return m_databases_isSet;
}

bool OAIAssetServerLinks::is_databases_Valid() const{
    return m_databases_isValid;
}

QString OAIAssetServerLinks::getNotificationContactTemplates() const {
    return m_notification_contact_templates;
}
void OAIAssetServerLinks::setNotificationContactTemplates(const QString &notification_contact_templates) {
    m_notification_contact_templates = notification_contact_templates;
    m_notification_contact_templates_isSet = true;
}

bool OAIAssetServerLinks::is_notification_contact_templates_Set() const{
    return m_notification_contact_templates_isSet;
}

bool OAIAssetServerLinks::is_notification_contact_templates_Valid() const{
    return m_notification_contact_templates_isValid;
}

QString OAIAssetServerLinks::getNotificationPlugIns() const {
    return m_notification_plug_ins;
}
void OAIAssetServerLinks::setNotificationPlugIns(const QString &notification_plug_ins) {
    m_notification_plug_ins = notification_plug_ins;
    m_notification_plug_ins_isSet = true;
}

bool OAIAssetServerLinks::is_notification_plug_ins_Set() const{
    return m_notification_plug_ins_isSet;
}

bool OAIAssetServerLinks::is_notification_plug_ins_Valid() const{
    return m_notification_plug_ins_isValid;
}

QString OAIAssetServerLinks::getSecurity() const {
    return m_security;
}
void OAIAssetServerLinks::setSecurity(const QString &security) {
    m_security = security;
    m_security_isSet = true;
}

bool OAIAssetServerLinks::is_security_Set() const{
    return m_security_isSet;
}

bool OAIAssetServerLinks::is_security_Valid() const{
    return m_security_isValid;
}

QString OAIAssetServerLinks::getSecurityEntries() const {
    return m_security_entries;
}
void OAIAssetServerLinks::setSecurityEntries(const QString &security_entries) {
    m_security_entries = security_entries;
    m_security_entries_isSet = true;
}

bool OAIAssetServerLinks::is_security_entries_Set() const{
    return m_security_entries_isSet;
}

bool OAIAssetServerLinks::is_security_entries_Valid() const{
    return m_security_entries_isValid;
}

QString OAIAssetServerLinks::getSecurityIdentities() const {
    return m_security_identities;
}
void OAIAssetServerLinks::setSecurityIdentities(const QString &security_identities) {
    m_security_identities = security_identities;
    m_security_identities_isSet = true;
}

bool OAIAssetServerLinks::is_security_identities_Set() const{
    return m_security_identities_isSet;
}

bool OAIAssetServerLinks::is_security_identities_Valid() const{
    return m_security_identities_isValid;
}

QString OAIAssetServerLinks::getSecurityMappings() const {
    return m_security_mappings;
}
void OAIAssetServerLinks::setSecurityMappings(const QString &security_mappings) {
    m_security_mappings = security_mappings;
    m_security_mappings_isSet = true;
}

bool OAIAssetServerLinks::is_security_mappings_Set() const{
    return m_security_mappings_isSet;
}

bool OAIAssetServerLinks::is_security_mappings_Valid() const{
    return m_security_mappings_isValid;
}

QString OAIAssetServerLinks::getSelf() const {
    return m_self;
}
void OAIAssetServerLinks::setSelf(const QString &self) {
    m_self = self;
    m_self_isSet = true;
}

bool OAIAssetServerLinks::is_self_Set() const{
    return m_self_isSet;
}

bool OAIAssetServerLinks::is_self_Valid() const{
    return m_self_isValid;
}

QString OAIAssetServerLinks::getTimeRulePlugIns() const {
    return m_time_rule_plug_ins;
}
void OAIAssetServerLinks::setTimeRulePlugIns(const QString &time_rule_plug_ins) {
    m_time_rule_plug_ins = time_rule_plug_ins;
    m_time_rule_plug_ins_isSet = true;
}

bool OAIAssetServerLinks::is_time_rule_plug_ins_Set() const{
    return m_time_rule_plug_ins_isSet;
}

bool OAIAssetServerLinks::is_time_rule_plug_ins_Valid() const{
    return m_time_rule_plug_ins_isValid;
}

QString OAIAssetServerLinks::getUnitClasses() const {
    return m_unit_classes;
}
void OAIAssetServerLinks::setUnitClasses(const QString &unit_classes) {
    m_unit_classes = unit_classes;
    m_unit_classes_isSet = true;
}

bool OAIAssetServerLinks::is_unit_classes_Set() const{
    return m_unit_classes_isSet;
}

bool OAIAssetServerLinks::is_unit_classes_Valid() const{
    return m_unit_classes_isValid;
}

bool OAIAssetServerLinks::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_analysis_rule_plug_ins_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_databases_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_notification_contact_templates_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_notification_plug_ins_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_security_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_security_entries_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_security_identities_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_security_mappings_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_self_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_time_rule_plug_ins_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_unit_classes_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAssetServerLinks::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
