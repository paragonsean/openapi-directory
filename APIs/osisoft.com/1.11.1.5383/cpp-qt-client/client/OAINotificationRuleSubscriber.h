/**
 * PI Web API 2018 SP1 Swagger Spec
 * Swagger Spec file that describes PI Web API
 *
 * The version of the OpenAPI document: 1.11.1.5383
 * Contact: techsupport@osisoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAINotificationRuleSubscriber.h
 *
 * 
 */

#ifndef OAINotificationRuleSubscriber_H
#define OAINotificationRuleSubscriber_H

#include <QJsonObject>

#include "OAIWebException.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIWebException;

class OAINotificationRuleSubscriber : public OAIObject {
public:
    OAINotificationRuleSubscriber();
    OAINotificationRuleSubscriber(QString json);
    ~OAINotificationRuleSubscriber() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getConfigString() const;
    void setConfigString(const QString &config_string);
    bool is_config_string_Set() const;
    bool is_config_string_Valid() const;

    QString getContactTemplateName() const;
    void setContactTemplateName(const QString &contact_template_name);
    bool is_contact_template_name_Set() const;
    bool is_contact_template_name_Valid() const;

    QString getContactType() const;
    void setContactType(const QString &contact_type);
    bool is_contact_type_Set() const;
    bool is_contact_type_Valid() const;

    QString getDeliveryFormatName() const;
    void setDeliveryFormatName(const QString &delivery_format_name);
    bool is_delivery_format_name_Set() const;
    bool is_delivery_format_name_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getEscalationTimeout() const;
    void setEscalationTimeout(const QString &escalation_timeout);
    bool is_escalation_timeout_Set() const;
    bool is_escalation_timeout_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    qint32 getMaximumRetries() const;
    void setMaximumRetries(const qint32 &maximum_retries);
    bool is_maximum_retries_Set() const;
    bool is_maximum_retries_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getNotifyOption() const;
    void setNotifyOption(const QString &notify_option);
    bool is_notify_option_Set() const;
    bool is_notify_option_Valid() const;

    QString getPath() const;
    void setPath(const QString &path);
    bool is_path_Set() const;
    bool is_path_Valid() const;

    QString getPlugInName() const;
    void setPlugInName(const QString &plug_in_name);
    bool is_plug_in_name_Set() const;
    bool is_plug_in_name_Valid() const;

    QString getRetryInterval() const;
    void setRetryInterval(const QString &retry_interval);
    bool is_retry_interval_Set() const;
    bool is_retry_interval_Valid() const;

    OAIWebException getWebException() const;
    void setWebException(const OAIWebException &web_exception);
    bool is_web_exception_Set() const;
    bool is_web_exception_Valid() const;

    QString getWebId() const;
    void setWebId(const QString &web_id);
    bool is_web_id_Set() const;
    bool is_web_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_config_string;
    bool m_config_string_isSet;
    bool m_config_string_isValid;

    QString m_contact_template_name;
    bool m_contact_template_name_isSet;
    bool m_contact_template_name_isValid;

    QString m_contact_type;
    bool m_contact_type_isSet;
    bool m_contact_type_isValid;

    QString m_delivery_format_name;
    bool m_delivery_format_name_isSet;
    bool m_delivery_format_name_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_escalation_timeout;
    bool m_escalation_timeout_isSet;
    bool m_escalation_timeout_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    qint32 m_maximum_retries;
    bool m_maximum_retries_isSet;
    bool m_maximum_retries_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_notify_option;
    bool m_notify_option_isSet;
    bool m_notify_option_isValid;

    QString m_path;
    bool m_path_isSet;
    bool m_path_isValid;

    QString m_plug_in_name;
    bool m_plug_in_name_isSet;
    bool m_plug_in_name_isValid;

    QString m_retry_interval;
    bool m_retry_interval_isSet;
    bool m_retry_interval_isValid;

    OAIWebException m_web_exception;
    bool m_web_exception_isSet;
    bool m_web_exception_isValid;

    QString m_web_id;
    bool m_web_id_isSet;
    bool m_web_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINotificationRuleSubscriber)

#endif // OAINotificationRuleSubscriber_H
