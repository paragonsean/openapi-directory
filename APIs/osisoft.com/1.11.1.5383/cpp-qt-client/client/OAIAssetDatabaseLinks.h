/**
 * PI Web API 2018 SP1 Swagger Spec
 * Swagger Spec file that describes PI Web API
 *
 * The version of the OpenAPI document: 1.11.1.5383
 * Contact: techsupport@osisoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAssetDatabaseLinks.h
 *
 * 
 */

#ifndef OAIAssetDatabaseLinks_H
#define OAIAssetDatabaseLinks_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAssetDatabaseLinks : public OAIObject {
public:
    OAIAssetDatabaseLinks();
    OAIAssetDatabaseLinks(QString json);
    ~OAIAssetDatabaseLinks() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAnalysisCategories() const;
    void setAnalysisCategories(const QString &analysis_categories);
    bool is_analysis_categories_Set() const;
    bool is_analysis_categories_Valid() const;

    QString getAnalysisTemplates() const;
    void setAnalysisTemplates(const QString &analysis_templates);
    bool is_analysis_templates_Set() const;
    bool is_analysis_templates_Valid() const;

    QString getAssetServer() const;
    void setAssetServer(const QString &asset_server);
    bool is_asset_server_Set() const;
    bool is_asset_server_Valid() const;

    QString getAttributeCategories() const;
    void setAttributeCategories(const QString &attribute_categories);
    bool is_attribute_categories_Set() const;
    bool is_attribute_categories_Valid() const;

    QString getElementCategories() const;
    void setElementCategories(const QString &element_categories);
    bool is_element_categories_Set() const;
    bool is_element_categories_Valid() const;

    QString getElementTemplates() const;
    void setElementTemplates(const QString &element_templates);
    bool is_element_templates_Set() const;
    bool is_element_templates_Valid() const;

    QString getElements() const;
    void setElements(const QString &elements);
    bool is_elements_Set() const;
    bool is_elements_Valid() const;

    QString getEnumerationSets() const;
    void setEnumerationSets(const QString &enumeration_sets);
    bool is_enumeration_sets_Set() const;
    bool is_enumeration_sets_Valid() const;

    QString getEventFrames() const;
    void setEventFrames(const QString &event_frames);
    bool is_event_frames_Set() const;
    bool is_event_frames_Valid() const;

    QString getSecurity() const;
    void setSecurity(const QString &security);
    bool is_security_Set() const;
    bool is_security_Valid() const;

    QString getSecurityEntries() const;
    void setSecurityEntries(const QString &security_entries);
    bool is_security_entries_Set() const;
    bool is_security_entries_Valid() const;

    QString getSelf() const;
    void setSelf(const QString &self);
    bool is_self_Set() const;
    bool is_self_Valid() const;

    QString getTableCategories() const;
    void setTableCategories(const QString &table_categories);
    bool is_table_categories_Set() const;
    bool is_table_categories_Valid() const;

    QString getTables() const;
    void setTables(const QString &tables);
    bool is_tables_Set() const;
    bool is_tables_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_analysis_categories;
    bool m_analysis_categories_isSet;
    bool m_analysis_categories_isValid;

    QString m_analysis_templates;
    bool m_analysis_templates_isSet;
    bool m_analysis_templates_isValid;

    QString m_asset_server;
    bool m_asset_server_isSet;
    bool m_asset_server_isValid;

    QString m_attribute_categories;
    bool m_attribute_categories_isSet;
    bool m_attribute_categories_isValid;

    QString m_element_categories;
    bool m_element_categories_isSet;
    bool m_element_categories_isValid;

    QString m_element_templates;
    bool m_element_templates_isSet;
    bool m_element_templates_isValid;

    QString m_elements;
    bool m_elements_isSet;
    bool m_elements_isValid;

    QString m_enumeration_sets;
    bool m_enumeration_sets_isSet;
    bool m_enumeration_sets_isValid;

    QString m_event_frames;
    bool m_event_frames_isSet;
    bool m_event_frames_isValid;

    QString m_security;
    bool m_security_isSet;
    bool m_security_isValid;

    QString m_security_entries;
    bool m_security_entries_isSet;
    bool m_security_entries_isValid;

    QString m_self;
    bool m_self_isSet;
    bool m_self_isValid;

    QString m_table_categories;
    bool m_table_categories_isSet;
    bool m_table_categories_isValid;

    QString m_tables;
    bool m_tables_isSet;
    bool m_tables_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAssetDatabaseLinks)

#endif // OAIAssetDatabaseLinks_H
