/**
 * PI Web API 2018 SP1 Swagger Spec
 * Swagger Spec file that describes PI Web API
 *
 * The version of the OpenAPI document: 1.11.1.5383
 * Contact: techsupport@osisoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEnumerationValueLinks.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEnumerationValueLinks::OAIEnumerationValueLinks(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEnumerationValueLinks::OAIEnumerationValueLinks() {
    this->initializeModel();
}

OAIEnumerationValueLinks::~OAIEnumerationValueLinks() {}

void OAIEnumerationValueLinks::initializeModel() {

    m_enumeration_set_isSet = false;
    m_enumeration_set_isValid = false;

    m_parent_isSet = false;
    m_parent_isValid = false;

    m_self_isSet = false;
    m_self_isValid = false;
}

void OAIEnumerationValueLinks::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEnumerationValueLinks::fromJsonObject(QJsonObject json) {

    m_enumeration_set_isValid = ::OpenAPI::fromJsonValue(m_enumeration_set, json[QString("EnumerationSet")]);
    m_enumeration_set_isSet = !json[QString("EnumerationSet")].isNull() && m_enumeration_set_isValid;

    m_parent_isValid = ::OpenAPI::fromJsonValue(m_parent, json[QString("Parent")]);
    m_parent_isSet = !json[QString("Parent")].isNull() && m_parent_isValid;

    m_self_isValid = ::OpenAPI::fromJsonValue(m_self, json[QString("Self")]);
    m_self_isSet = !json[QString("Self")].isNull() && m_self_isValid;
}

QString OAIEnumerationValueLinks::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEnumerationValueLinks::asJsonObject() const {
    QJsonObject obj;
    if (m_enumeration_set_isSet) {
        obj.insert(QString("EnumerationSet"), ::OpenAPI::toJsonValue(m_enumeration_set));
    }
    if (m_parent_isSet) {
        obj.insert(QString("Parent"), ::OpenAPI::toJsonValue(m_parent));
    }
    if (m_self_isSet) {
        obj.insert(QString("Self"), ::OpenAPI::toJsonValue(m_self));
    }
    return obj;
}

QString OAIEnumerationValueLinks::getEnumerationSet() const {
    return m_enumeration_set;
}
void OAIEnumerationValueLinks::setEnumerationSet(const QString &enumeration_set) {
    m_enumeration_set = enumeration_set;
    m_enumeration_set_isSet = true;
}

bool OAIEnumerationValueLinks::is_enumeration_set_Set() const{
    return m_enumeration_set_isSet;
}

bool OAIEnumerationValueLinks::is_enumeration_set_Valid() const{
    return m_enumeration_set_isValid;
}

QString OAIEnumerationValueLinks::getParent() const {
    return m_parent;
}
void OAIEnumerationValueLinks::setParent(const QString &parent) {
    m_parent = parent;
    m_parent_isSet = true;
}

bool OAIEnumerationValueLinks::is_parent_Set() const{
    return m_parent_isSet;
}

bool OAIEnumerationValueLinks::is_parent_Valid() const{
    return m_parent_isValid;
}

QString OAIEnumerationValueLinks::getSelf() const {
    return m_self;
}
void OAIEnumerationValueLinks::setSelf(const QString &self) {
    m_self = self;
    m_self_isSet = true;
}

bool OAIEnumerationValueLinks::is_self_Set() const{
    return m_self_isSet;
}

bool OAIEnumerationValueLinks::is_self_Valid() const{
    return m_self_isValid;
}

bool OAIEnumerationValueLinks::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_enumeration_set_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_parent_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_self_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEnumerationValueLinks::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
