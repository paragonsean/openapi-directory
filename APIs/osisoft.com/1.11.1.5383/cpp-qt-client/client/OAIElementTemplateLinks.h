/**
 * PI Web API 2018 SP1 Swagger Spec
 * Swagger Spec file that describes PI Web API
 *
 * The version of the OpenAPI document: 1.11.1.5383
 * Contact: techsupport@osisoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIElementTemplateLinks.h
 *
 * 
 */

#ifndef OAIElementTemplateLinks_H
#define OAIElementTemplateLinks_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIElementTemplateLinks : public OAIObject {
public:
    OAIElementTemplateLinks();
    OAIElementTemplateLinks(QString json);
    ~OAIElementTemplateLinks() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAnalysisTemplates() const;
    void setAnalysisTemplates(const QString &analysis_templates);
    bool is_analysis_templates_Set() const;
    bool is_analysis_templates_Valid() const;

    QString getAttributeTemplates() const;
    void setAttributeTemplates(const QString &attribute_templates);
    bool is_attribute_templates_Set() const;
    bool is_attribute_templates_Valid() const;

    QString getBaseTemplate() const;
    void setBaseTemplate(const QString &base_template);
    bool is_base_template_Set() const;
    bool is_base_template_Valid() const;

    QString getBaseTemplates() const;
    void setBaseTemplates(const QString &base_templates);
    bool is_base_templates_Set() const;
    bool is_base_templates_Valid() const;

    QString getCategories() const;
    void setCategories(const QString &categories);
    bool is_categories_Set() const;
    bool is_categories_Valid() const;

    QString getDatabase() const;
    void setDatabase(const QString &database);
    bool is_database_Set() const;
    bool is_database_Valid() const;

    QString getDefaultAttribute() const;
    void setDefaultAttribute(const QString &default_attribute);
    bool is_default_attribute_Set() const;
    bool is_default_attribute_Valid() const;

    QString getDerivedTemplates() const;
    void setDerivedTemplates(const QString &derived_templates);
    bool is_derived_templates_Set() const;
    bool is_derived_templates_Valid() const;

    QString getNotificationRuleTemplates() const;
    void setNotificationRuleTemplates(const QString &notification_rule_templates);
    bool is_notification_rule_templates_Set() const;
    bool is_notification_rule_templates_Valid() const;

    QString getSecurity() const;
    void setSecurity(const QString &security);
    bool is_security_Set() const;
    bool is_security_Valid() const;

    QString getSecurityEntries() const;
    void setSecurityEntries(const QString &security_entries);
    bool is_security_entries_Set() const;
    bool is_security_entries_Valid() const;

    QString getSelf() const;
    void setSelf(const QString &self);
    bool is_self_Set() const;
    bool is_self_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_analysis_templates;
    bool m_analysis_templates_isSet;
    bool m_analysis_templates_isValid;

    QString m_attribute_templates;
    bool m_attribute_templates_isSet;
    bool m_attribute_templates_isValid;

    QString m_base_template;
    bool m_base_template_isSet;
    bool m_base_template_isValid;

    QString m_base_templates;
    bool m_base_templates_isSet;
    bool m_base_templates_isValid;

    QString m_categories;
    bool m_categories_isSet;
    bool m_categories_isValid;

    QString m_database;
    bool m_database_isSet;
    bool m_database_isValid;

    QString m_default_attribute;
    bool m_default_attribute_isSet;
    bool m_default_attribute_isValid;

    QString m_derived_templates;
    bool m_derived_templates_isSet;
    bool m_derived_templates_isValid;

    QString m_notification_rule_templates;
    bool m_notification_rule_templates_isSet;
    bool m_notification_rule_templates_isValid;

    QString m_security;
    bool m_security_isSet;
    bool m_security_isValid;

    QString m_security_entries;
    bool m_security_entries_isSet;
    bool m_security_entries_isValid;

    QString m_self;
    bool m_self_isSet;
    bool m_self_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIElementTemplateLinks)

#endif // OAIElementTemplateLinks_H
