/**
 * PI Web API 2018 SP1 Swagger Spec
 * Swagger Spec file that describes PI Web API
 *
 * The version of the OpenAPI document: 1.11.1.5383
 * Contact: techsupport@osisoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIValueQuery.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIValueQuery::OAIValueQuery(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIValueQuery::OAIValueQuery() {
    this->initializeModel();
}

OAIValueQuery::~OAIValueQuery() {}

void OAIValueQuery::initializeModel() {

    m_attribute_name_isSet = false;
    m_attribute_name_isValid = false;

    m_attribute_uom_isSet = false;
    m_attribute_uom_isValid = false;

    m_attribute_value_isSet = false;
    m_attribute_value_isValid = false;

    m_search_operator_isSet = false;
    m_search_operator_isValid = false;

    m_web_exception_isSet = false;
    m_web_exception_isValid = false;
}

void OAIValueQuery::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIValueQuery::fromJsonObject(QJsonObject json) {

    m_attribute_name_isValid = ::OpenAPI::fromJsonValue(m_attribute_name, json[QString("AttributeName")]);
    m_attribute_name_isSet = !json[QString("AttributeName")].isNull() && m_attribute_name_isValid;

    m_attribute_uom_isValid = ::OpenAPI::fromJsonValue(m_attribute_uom, json[QString("AttributeUOM")]);
    m_attribute_uom_isSet = !json[QString("AttributeUOM")].isNull() && m_attribute_uom_isValid;

    m_attribute_value_isValid = ::OpenAPI::fromJsonValue(m_attribute_value, json[QString("AttributeValue")]);
    m_attribute_value_isSet = !json[QString("AttributeValue")].isNull() && m_attribute_value_isValid;

    m_search_operator_isValid = ::OpenAPI::fromJsonValue(m_search_operator, json[QString("SearchOperator")]);
    m_search_operator_isSet = !json[QString("SearchOperator")].isNull() && m_search_operator_isValid;

    m_web_exception_isValid = ::OpenAPI::fromJsonValue(m_web_exception, json[QString("WebException")]);
    m_web_exception_isSet = !json[QString("WebException")].isNull() && m_web_exception_isValid;
}

QString OAIValueQuery::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIValueQuery::asJsonObject() const {
    QJsonObject obj;
    if (m_attribute_name_isSet) {
        obj.insert(QString("AttributeName"), ::OpenAPI::toJsonValue(m_attribute_name));
    }
    if (m_attribute_uom_isSet) {
        obj.insert(QString("AttributeUOM"), ::OpenAPI::toJsonValue(m_attribute_uom));
    }
    if (m_attribute_value_isSet) {
        obj.insert(QString("AttributeValue"), ::OpenAPI::toJsonValue(m_attribute_value));
    }
    if (m_search_operator_isSet) {
        obj.insert(QString("SearchOperator"), ::OpenAPI::toJsonValue(m_search_operator));
    }
    if (m_web_exception.isSet()) {
        obj.insert(QString("WebException"), ::OpenAPI::toJsonValue(m_web_exception));
    }
    return obj;
}

QString OAIValueQuery::getAttributeName() const {
    return m_attribute_name;
}
void OAIValueQuery::setAttributeName(const QString &attribute_name) {
    m_attribute_name = attribute_name;
    m_attribute_name_isSet = true;
}

bool OAIValueQuery::is_attribute_name_Set() const{
    return m_attribute_name_isSet;
}

bool OAIValueQuery::is_attribute_name_Valid() const{
    return m_attribute_name_isValid;
}

QString OAIValueQuery::getAttributeUom() const {
    return m_attribute_uom;
}
void OAIValueQuery::setAttributeUom(const QString &attribute_uom) {
    m_attribute_uom = attribute_uom;
    m_attribute_uom_isSet = true;
}

bool OAIValueQuery::is_attribute_uom_Set() const{
    return m_attribute_uom_isSet;
}

bool OAIValueQuery::is_attribute_uom_Valid() const{
    return m_attribute_uom_isValid;
}

OAIObject OAIValueQuery::getAttributeValue() const {
    return m_attribute_value;
}
void OAIValueQuery::setAttributeValue(const OAIObject &attribute_value) {
    m_attribute_value = attribute_value;
    m_attribute_value_isSet = true;
}

bool OAIValueQuery::is_attribute_value_Set() const{
    return m_attribute_value_isSet;
}

bool OAIValueQuery::is_attribute_value_Valid() const{
    return m_attribute_value_isValid;
}

QString OAIValueQuery::getSearchOperator() const {
    return m_search_operator;
}
void OAIValueQuery::setSearchOperator(const QString &search_operator) {
    m_search_operator = search_operator;
    m_search_operator_isSet = true;
}

bool OAIValueQuery::is_search_operator_Set() const{
    return m_search_operator_isSet;
}

bool OAIValueQuery::is_search_operator_Valid() const{
    return m_search_operator_isValid;
}

OAIWebException OAIValueQuery::getWebException() const {
    return m_web_exception;
}
void OAIValueQuery::setWebException(const OAIWebException &web_exception) {
    m_web_exception = web_exception;
    m_web_exception_isSet = true;
}

bool OAIValueQuery::is_web_exception_Set() const{
    return m_web_exception_isSet;
}

bool OAIValueQuery::is_web_exception_Valid() const{
    return m_web_exception_isValid;
}

bool OAIValueQuery::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_attribute_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_attribute_uom_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_attribute_value_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_search_operator_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_web_exception.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIValueQuery::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
