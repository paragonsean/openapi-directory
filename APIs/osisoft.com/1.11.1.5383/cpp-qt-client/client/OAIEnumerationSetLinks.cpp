/**
 * PI Web API 2018 SP1 Swagger Spec
 * Swagger Spec file that describes PI Web API
 *
 * The version of the OpenAPI document: 1.11.1.5383
 * Contact: techsupport@osisoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEnumerationSetLinks.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEnumerationSetLinks::OAIEnumerationSetLinks(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEnumerationSetLinks::OAIEnumerationSetLinks() {
    this->initializeModel();
}

OAIEnumerationSetLinks::~OAIEnumerationSetLinks() {}

void OAIEnumerationSetLinks::initializeModel() {

    m_data_server_isSet = false;
    m_data_server_isValid = false;

    m_database_isSet = false;
    m_database_isValid = false;

    m_security_isSet = false;
    m_security_isValid = false;

    m_security_entries_isSet = false;
    m_security_entries_isValid = false;

    m_self_isSet = false;
    m_self_isValid = false;

    m_values_isSet = false;
    m_values_isValid = false;
}

void OAIEnumerationSetLinks::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEnumerationSetLinks::fromJsonObject(QJsonObject json) {

    m_data_server_isValid = ::OpenAPI::fromJsonValue(m_data_server, json[QString("DataServer")]);
    m_data_server_isSet = !json[QString("DataServer")].isNull() && m_data_server_isValid;

    m_database_isValid = ::OpenAPI::fromJsonValue(m_database, json[QString("Database")]);
    m_database_isSet = !json[QString("Database")].isNull() && m_database_isValid;

    m_security_isValid = ::OpenAPI::fromJsonValue(m_security, json[QString("Security")]);
    m_security_isSet = !json[QString("Security")].isNull() && m_security_isValid;

    m_security_entries_isValid = ::OpenAPI::fromJsonValue(m_security_entries, json[QString("SecurityEntries")]);
    m_security_entries_isSet = !json[QString("SecurityEntries")].isNull() && m_security_entries_isValid;

    m_self_isValid = ::OpenAPI::fromJsonValue(m_self, json[QString("Self")]);
    m_self_isSet = !json[QString("Self")].isNull() && m_self_isValid;

    m_values_isValid = ::OpenAPI::fromJsonValue(m_values, json[QString("Values")]);
    m_values_isSet = !json[QString("Values")].isNull() && m_values_isValid;
}

QString OAIEnumerationSetLinks::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEnumerationSetLinks::asJsonObject() const {
    QJsonObject obj;
    if (m_data_server_isSet) {
        obj.insert(QString("DataServer"), ::OpenAPI::toJsonValue(m_data_server));
    }
    if (m_database_isSet) {
        obj.insert(QString("Database"), ::OpenAPI::toJsonValue(m_database));
    }
    if (m_security_isSet) {
        obj.insert(QString("Security"), ::OpenAPI::toJsonValue(m_security));
    }
    if (m_security_entries_isSet) {
        obj.insert(QString("SecurityEntries"), ::OpenAPI::toJsonValue(m_security_entries));
    }
    if (m_self_isSet) {
        obj.insert(QString("Self"), ::OpenAPI::toJsonValue(m_self));
    }
    if (m_values_isSet) {
        obj.insert(QString("Values"), ::OpenAPI::toJsonValue(m_values));
    }
    return obj;
}

QString OAIEnumerationSetLinks::getDataServer() const {
    return m_data_server;
}
void OAIEnumerationSetLinks::setDataServer(const QString &data_server) {
    m_data_server = data_server;
    m_data_server_isSet = true;
}

bool OAIEnumerationSetLinks::is_data_server_Set() const{
    return m_data_server_isSet;
}

bool OAIEnumerationSetLinks::is_data_server_Valid() const{
    return m_data_server_isValid;
}

QString OAIEnumerationSetLinks::getDatabase() const {
    return m_database;
}
void OAIEnumerationSetLinks::setDatabase(const QString &database) {
    m_database = database;
    m_database_isSet = true;
}

bool OAIEnumerationSetLinks::is_database_Set() const{
    return m_database_isSet;
}

bool OAIEnumerationSetLinks::is_database_Valid() const{
    return m_database_isValid;
}

QString OAIEnumerationSetLinks::getSecurity() const {
    return m_security;
}
void OAIEnumerationSetLinks::setSecurity(const QString &security) {
    m_security = security;
    m_security_isSet = true;
}

bool OAIEnumerationSetLinks::is_security_Set() const{
    return m_security_isSet;
}

bool OAIEnumerationSetLinks::is_security_Valid() const{
    return m_security_isValid;
}

QString OAIEnumerationSetLinks::getSecurityEntries() const {
    return m_security_entries;
}
void OAIEnumerationSetLinks::setSecurityEntries(const QString &security_entries) {
    m_security_entries = security_entries;
    m_security_entries_isSet = true;
}

bool OAIEnumerationSetLinks::is_security_entries_Set() const{
    return m_security_entries_isSet;
}

bool OAIEnumerationSetLinks::is_security_entries_Valid() const{
    return m_security_entries_isValid;
}

QString OAIEnumerationSetLinks::getSelf() const {
    return m_self;
}
void OAIEnumerationSetLinks::setSelf(const QString &self) {
    m_self = self;
    m_self_isSet = true;
}

bool OAIEnumerationSetLinks::is_self_Set() const{
    return m_self_isSet;
}

bool OAIEnumerationSetLinks::is_self_Valid() const{
    return m_self_isValid;
}

QString OAIEnumerationSetLinks::getValues() const {
    return m_values;
}
void OAIEnumerationSetLinks::setValues(const QString &values) {
    m_values = values;
    m_values_isSet = true;
}

bool OAIEnumerationSetLinks::is_values_Set() const{
    return m_values_isSet;
}

bool OAIEnumerationSetLinks::is_values_Valid() const{
    return m_values_isValid;
}

bool OAIEnumerationSetLinks::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_data_server_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_database_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_security_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_security_entries_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_self_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_values_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEnumerationSetLinks::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
