/**
 * PI Web API 2018 SP1 Swagger Spec
 * Swagger Spec file that describes PI Web API
 *
 * The version of the OpenAPI document: 1.11.1.5383
 * Contact: techsupport@osisoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIExtendedTimedValue.h
 *
 * 
 */

#ifndef OAIExtendedTimedValue_H
#define OAIExtendedTimedValue_H

#include <QJsonObject>

#include "OAIObject.h"
#include "OAIPropertyError.h"
#include "OAIStreamAnnotation.h"
#include "OAIWebException.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIStreamAnnotation;
class OAIPropertyError;
class OAIWebException;

class OAIExtendedTimedValue : public OAIObject {
public:
    OAIExtendedTimedValue();
    OAIExtendedTimedValue(QString json);
    ~OAIExtendedTimedValue() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isAnnotated() const;
    void setAnnotated(const bool &annotated);
    bool is_annotated_Set() const;
    bool is_annotated_Valid() const;

    QList<OAIStreamAnnotation> getAnnotations() const;
    void setAnnotations(const QList<OAIStreamAnnotation> &annotations);
    bool is_annotations_Set() const;
    bool is_annotations_Valid() const;

    QList<OAIPropertyError> getErrors() const;
    void setErrors(const QList<OAIPropertyError> &errors);
    bool is_errors_Set() const;
    bool is_errors_Valid() const;

    bool isGood() const;
    void setGood(const bool &good);
    bool is_good_Set() const;
    bool is_good_Valid() const;

    bool isQuestionable() const;
    void setQuestionable(const bool &questionable);
    bool is_questionable_Set() const;
    bool is_questionable_Valid() const;

    bool isSubstituted() const;
    void setSubstituted(const bool &substituted);
    bool is_substituted_Set() const;
    bool is_substituted_Valid() const;

    QDateTime getTimestamp() const;
    void setTimestamp(const QDateTime &timestamp);
    bool is_timestamp_Set() const;
    bool is_timestamp_Valid() const;

    QString getUnitsAbbreviation() const;
    void setUnitsAbbreviation(const QString &units_abbreviation);
    bool is_units_abbreviation_Set() const;
    bool is_units_abbreviation_Valid() const;

    OAIObject getValue() const;
    void setValue(const OAIObject &value);
    bool is_value_Set() const;
    bool is_value_Valid() const;

    OAIWebException getWebException() const;
    void setWebException(const OAIWebException &web_exception);
    bool is_web_exception_Set() const;
    bool is_web_exception_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_annotated;
    bool m_annotated_isSet;
    bool m_annotated_isValid;

    QList<OAIStreamAnnotation> m_annotations;
    bool m_annotations_isSet;
    bool m_annotations_isValid;

    QList<OAIPropertyError> m_errors;
    bool m_errors_isSet;
    bool m_errors_isValid;

    bool m_good;
    bool m_good_isSet;
    bool m_good_isValid;

    bool m_questionable;
    bool m_questionable_isSet;
    bool m_questionable_isValid;

    bool m_substituted;
    bool m_substituted_isSet;
    bool m_substituted_isValid;

    QDateTime m_timestamp;
    bool m_timestamp_isSet;
    bool m_timestamp_isValid;

    QString m_units_abbreviation;
    bool m_units_abbreviation_isSet;
    bool m_units_abbreviation_isValid;

    OAIObject m_value;
    bool m_value_isSet;
    bool m_value_isValid;

    OAIWebException m_web_exception;
    bool m_web_exception_isSet;
    bool m_web_exception_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIExtendedTimedValue)

#endif // OAIExtendedTimedValue_H
