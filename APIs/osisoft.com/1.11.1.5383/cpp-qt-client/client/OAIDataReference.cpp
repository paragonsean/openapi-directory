/**
 * PI Web API 2018 SP1 Swagger Spec
 * Swagger Spec file that describes PI Web API
 *
 * The version of the OpenAPI document: 1.11.1.5383
 * Contact: techsupport@osisoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDataReference.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDataReference::OAIDataReference(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDataReference::OAIDataReference() {
    this->initializeModel();
}

OAIDataReference::~OAIDataReference() {}

void OAIDataReference::initializeModel() {

    m_pi_point_isSet = false;
    m_pi_point_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;

    m_web_exception_isSet = false;
    m_web_exception_isValid = false;
}

void OAIDataReference::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDataReference::fromJsonObject(QJsonObject json) {

    m_pi_point_isValid = ::OpenAPI::fromJsonValue(m_pi_point, json[QString("PIPoint")]);
    m_pi_point_isSet = !json[QString("PIPoint")].isNull() && m_pi_point_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("Type")]);
    m_type_isSet = !json[QString("Type")].isNull() && m_type_isValid;

    m_web_exception_isValid = ::OpenAPI::fromJsonValue(m_web_exception, json[QString("WebException")]);
    m_web_exception_isSet = !json[QString("WebException")].isNull() && m_web_exception_isValid;
}

QString OAIDataReference::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDataReference::asJsonObject() const {
    QJsonObject obj;
    if (m_pi_point.isSet()) {
        obj.insert(QString("PIPoint"), ::OpenAPI::toJsonValue(m_pi_point));
    }
    if (m_type_isSet) {
        obj.insert(QString("Type"), ::OpenAPI::toJsonValue(m_type));
    }
    if (m_web_exception.isSet()) {
        obj.insert(QString("WebException"), ::OpenAPI::toJsonValue(m_web_exception));
    }
    return obj;
}

OAIPIPointDataReference OAIDataReference::getPiPoint() const {
    return m_pi_point;
}
void OAIDataReference::setPiPoint(const OAIPIPointDataReference &pi_point) {
    m_pi_point = pi_point;
    m_pi_point_isSet = true;
}

bool OAIDataReference::is_pi_point_Set() const{
    return m_pi_point_isSet;
}

bool OAIDataReference::is_pi_point_Valid() const{
    return m_pi_point_isValid;
}

QString OAIDataReference::getType() const {
    return m_type;
}
void OAIDataReference::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIDataReference::is_type_Set() const{
    return m_type_isSet;
}

bool OAIDataReference::is_type_Valid() const{
    return m_type_isValid;
}

OAIWebException OAIDataReference::getWebException() const {
    return m_web_exception;
}
void OAIDataReference::setWebException(const OAIWebException &web_exception) {
    m_web_exception = web_exception;
    m_web_exception_isSet = true;
}

bool OAIDataReference::is_web_exception_Set() const{
    return m_web_exception_isSet;
}

bool OAIDataReference::is_web_exception_Valid() const{
    return m_web_exception_isValid;
}

bool OAIDataReference::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_pi_point.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_web_exception.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDataReference::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
