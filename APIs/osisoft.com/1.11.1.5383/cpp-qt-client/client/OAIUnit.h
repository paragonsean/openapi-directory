/**
 * PI Web API 2018 SP1 Swagger Spec
 * Swagger Spec file that describes PI Web API
 *
 * The version of the OpenAPI document: 1.11.1.5383
 * Contact: techsupport@osisoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUnit.h
 *
 * 
 */

#ifndef OAIUnit_H
#define OAIUnit_H

#include <QJsonObject>

#include "OAIUnitLinks.h"
#include "OAIWebException.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUnitLinks;
class OAIWebException;

class OAIUnit : public OAIObject {
public:
    OAIUnit();
    OAIUnit(QString json);
    ~OAIUnit() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAbbreviation() const;
    void setAbbreviation(const QString &abbreviation);
    bool is_abbreviation_Set() const;
    bool is_abbreviation_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    double getFactor() const;
    void setFactor(const double &factor);
    bool is_factor_Set() const;
    bool is_factor_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    OAIUnitLinks getLinks() const;
    void setLinks(const OAIUnitLinks &links);
    bool is_links_Set() const;
    bool is_links_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    double getOffset() const;
    void setOffset(const double &offset);
    bool is_offset_Set() const;
    bool is_offset_Valid() const;

    QString getPath() const;
    void setPath(const QString &path);
    bool is_path_Set() const;
    bool is_path_Valid() const;

    double getReferenceFactor() const;
    void setReferenceFactor(const double &reference_factor);
    bool is_reference_factor_Set() const;
    bool is_reference_factor_Valid() const;

    double getReferenceOffset() const;
    void setReferenceOffset(const double &reference_offset);
    bool is_reference_offset_Set() const;
    bool is_reference_offset_Valid() const;

    QString getReferenceUnitAbbreviation() const;
    void setReferenceUnitAbbreviation(const QString &reference_unit_abbreviation);
    bool is_reference_unit_abbreviation_Set() const;
    bool is_reference_unit_abbreviation_Valid() const;

    OAIWebException getWebException() const;
    void setWebException(const OAIWebException &web_exception);
    bool is_web_exception_Set() const;
    bool is_web_exception_Valid() const;

    QString getWebId() const;
    void setWebId(const QString &web_id);
    bool is_web_id_Set() const;
    bool is_web_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_abbreviation;
    bool m_abbreviation_isSet;
    bool m_abbreviation_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    double m_factor;
    bool m_factor_isSet;
    bool m_factor_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    OAIUnitLinks m_links;
    bool m_links_isSet;
    bool m_links_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    double m_offset;
    bool m_offset_isSet;
    bool m_offset_isValid;

    QString m_path;
    bool m_path_isSet;
    bool m_path_isValid;

    double m_reference_factor;
    bool m_reference_factor_isSet;
    bool m_reference_factor_isValid;

    double m_reference_offset;
    bool m_reference_offset_isSet;
    bool m_reference_offset_isValid;

    QString m_reference_unit_abbreviation;
    bool m_reference_unit_abbreviation_isSet;
    bool m_reference_unit_abbreviation_isValid;

    OAIWebException m_web_exception;
    bool m_web_exception_isSet;
    bool m_web_exception_isValid;

    QString m_web_id;
    bool m_web_id_isSet;
    bool m_web_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUnit)

#endif // OAIUnit_H
