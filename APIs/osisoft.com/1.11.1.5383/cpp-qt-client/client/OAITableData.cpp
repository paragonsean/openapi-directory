/**
 * PI Web API 2018 SP1 Swagger Spec
 * Swagger Spec file that describes PI Web API
 *
 * The version of the OpenAPI document: 1.11.1.5383
 * Contact: techsupport@osisoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITableData.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITableData::OAITableData(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITableData::OAITableData() {
    this->initializeModel();
}

OAITableData::~OAITableData() {}

void OAITableData::initializeModel() {

    m_columns_isSet = false;
    m_columns_isValid = false;

    m_rows_isSet = false;
    m_rows_isValid = false;

    m_web_exception_isSet = false;
    m_web_exception_isValid = false;
}

void OAITableData::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITableData::fromJsonObject(QJsonObject json) {

    m_columns_isValid = ::OpenAPI::fromJsonValue(m_columns, json[QString("Columns")]);
    m_columns_isSet = !json[QString("Columns")].isNull() && m_columns_isValid;

    if(json["Rows"].isArray()){
        auto arr = json["Rows"].toArray();
        m_rows_isValid = true;
        if(arr.count() > 0) {
            for (const QJsonValue jval : arr) {
                QMap<QString, OAIObject> item;
                m_rows_isValid &= ::OpenAPI::fromJsonValue(item, jval);
                m_rows_isSet = !jval.isNull() && m_rows_isValid;
                m_rows.push_back(item);
            }
        }
    }

    m_web_exception_isValid = ::OpenAPI::fromJsonValue(m_web_exception, json[QString("WebException")]);
    m_web_exception_isSet = !json[QString("WebException")].isNull() && m_web_exception_isValid;
}

QString OAITableData::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITableData::asJsonObject() const {
    QJsonObject obj;
    if (m_columns.size() > 0) {
        obj.insert(QString("Columns"), ::OpenAPI::toJsonValue(m_columns));
    }
    if (m_rows.size() > 0) {
        
        obj.insert(QString("Rows"), toJsonValue(m_rows));
    }
    if (m_web_exception.isSet()) {
        obj.insert(QString("WebException"), ::OpenAPI::toJsonValue(m_web_exception));
    }
    return obj;
}

QMap<QString, QString> OAITableData::getColumns() const {
    return m_columns;
}
void OAITableData::setColumns(const QMap<QString, QString> &columns) {
    m_columns = columns;
    m_columns_isSet = true;
}

bool OAITableData::is_columns_Set() const{
    return m_columns_isSet;
}

bool OAITableData::is_columns_Valid() const{
    return m_columns_isValid;
}

QList<QMap<QString, OAIObject>> OAITableData::getRows() const {
    return m_rows;
}
void OAITableData::setRows(const QList<QMap<QString, OAIObject>> &rows) {
    m_rows = rows;
    m_rows_isSet = true;
}

bool OAITableData::is_rows_Set() const{
    return m_rows_isSet;
}

bool OAITableData::is_rows_Valid() const{
    return m_rows_isValid;
}

OAIWebException OAITableData::getWebException() const {
    return m_web_exception;
}
void OAITableData::setWebException(const OAIWebException &web_exception) {
    m_web_exception = web_exception;
    m_web_exception_isSet = true;
}

bool OAITableData::is_web_exception_Set() const{
    return m_web_exception_isSet;
}

bool OAITableData::is_web_exception_Valid() const{
    return m_web_exception_isValid;
}

bool OAITableData::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_columns.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_rows.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_web_exception.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITableData::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
