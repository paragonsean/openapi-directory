/**
 * PI Web API 2018 SP1 Swagger Spec
 * Swagger Spec file that describes PI Web API
 *
 * The version of the OpenAPI document: 1.11.1.5383
 * Contact: techsupport@osisoft.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAINotificationRuleTemplate.h
 *
 * 
 */

#ifndef OAINotificationRuleTemplate_H
#define OAINotificationRuleTemplate_H

#include <QJsonObject>

#include "OAIWebException.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIWebException;

class OAINotificationRuleTemplate : public OAIObject {
public:
    OAINotificationRuleTemplate();
    OAINotificationRuleTemplate(QString json);
    ~OAINotificationRuleTemplate() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getCategoryNames() const;
    void setCategoryNames(const QList<QString> &category_names);
    bool is_category_names_Set() const;
    bool is_category_names_Valid() const;

    QString getCriteria() const;
    void setCriteria(const QString &criteria);
    bool is_criteria_Set() const;
    bool is_criteria_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getMultiTriggerEventOption() const;
    void setMultiTriggerEventOption(const QString &multi_trigger_event_option);
    bool is_multi_trigger_event_option_Set() const;
    bool is_multi_trigger_event_option_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getNonrepetitionInterval() const;
    void setNonrepetitionInterval(const QString &nonrepetition_interval);
    bool is_nonrepetition_interval_Set() const;
    bool is_nonrepetition_interval_Valid() const;

    QString getPath() const;
    void setPath(const QString &path);
    bool is_path_Set() const;
    bool is_path_Valid() const;

    QString getResendInterval() const;
    void setResendInterval(const QString &resend_interval);
    bool is_resend_interval_Set() const;
    bool is_resend_interval_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getTemplateName() const;
    void setTemplateName(const QString &template_name);
    bool is_template_name_Set() const;
    bool is_template_name_Valid() const;

    OAIWebException getWebException() const;
    void setWebException(const OAIWebException &web_exception);
    bool is_web_exception_Set() const;
    bool is_web_exception_Valid() const;

    QString getWebId() const;
    void setWebId(const QString &web_id);
    bool is_web_id_Set() const;
    bool is_web_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_category_names;
    bool m_category_names_isSet;
    bool m_category_names_isValid;

    QString m_criteria;
    bool m_criteria_isSet;
    bool m_criteria_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_multi_trigger_event_option;
    bool m_multi_trigger_event_option_isSet;
    bool m_multi_trigger_event_option_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_nonrepetition_interval;
    bool m_nonrepetition_interval_isSet;
    bool m_nonrepetition_interval_isValid;

    QString m_path;
    bool m_path_isSet;
    bool m_path_isValid;

    QString m_resend_interval;
    bool m_resend_interval_isSet;
    bool m_resend_interval_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_template_name;
    bool m_template_name_isSet;
    bool m_template_name_isValid;

    OAIWebException m_web_exception;
    bool m_web_exception_isSet;
    bool m_web_exception_isValid;

    QString m_web_id;
    bool m_web_id_isSet;
    bool m_web_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINotificationRuleTemplate)

#endif // OAINotificationRuleTemplate_H
