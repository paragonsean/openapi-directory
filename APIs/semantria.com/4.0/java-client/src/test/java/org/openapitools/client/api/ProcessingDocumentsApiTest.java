/*
 * Semantria
 * Semantria applies Text and Sentiment Analysis to tweets, facebook posts, surveys, reviews or enterprise content.
 *
 * The version of the OpenAPI document: 4.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Document;
import org.openapitools.client.model.DocumentAnalyticData;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ProcessingDocumentsApi
 */
@Disabled
public class ProcessingDocumentsApiTest {

    private final ProcessingDocumentsApi api = new ProcessingDocumentsApi();

    /**
     * Cancel document analysis
     *
     * This method cancels document analysis by unique ID on Semantria side if it is waiting for analysis in queue.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cancelDocumentTest() throws ApiException {
        String documentId = null;
        String contentType = null;
        String configId = null;
        api.cancelDocument(documentId, contentType, configId);
        // TODO: test validations
    }

    /**
     * Queue batch of documents for analysis
     *
     * This method queues batch of documents for analysis. The rules are the same as for single document mode but here the documents ordered into the batch.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void queueBatchOfDocumentsTest() throws ApiException {
        String contentType = null;
        Object batchOfDocuments = null;
        String configId = null;
        Document response = api.queueBatchOfDocuments(contentType, batchOfDocuments, configId);
        // TODO: test validations
    }

    /**
     * Queue document for analysis
     *
     * This method queues document onto the server for analysis. Queued document analyzes individually and will have its own set of results. If unique configuration ID provided, Semantria uses settings of that configuration during analysis, in opposite the primary configuration uses. Document IDs are unique in scope of configuration. If the same ID appears twice, Semantria overrides existing document with the new Data.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void queueDocumentTest() throws ApiException {
        String contentType = null;
        Object document = null;
        String configId = null;
        Document response = api.queueDocument(contentType, document, configId);
        // TODO: test validations
    }

    /**
     * Retrieve document analysis or its status in queue
     *
     * This method retrieves analysis results for the single document by its unique ID or the documentâ€™s status in queue if it did not analyzed yet. Semantria guarantees delivering of all documents back to the client even if they FAILED on Semantria side due to some reason.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void receiveDocumentAnalyticDataTest() throws ApiException {
        String documentId = null;
        String contentType = null;
        String configId = null;
        DocumentAnalyticData response = api.receiveDocumentAnalyticData(documentId, contentType, configId);
        // TODO: test validations
    }

    /**
     * Retrieve documents analysis
     *
     * This method retrieves analysis results for processed documents from Semantria. FAILED documents will have FAILED status in response. Semantria responds with limited amount of results per API call. If configuration ID provided, Semantria responds with the document, which were queued using the same configuration ID, in opposite Primary.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void retrieveProcessedDocumentsTest() throws ApiException {
        String contentType = null;
        String configId = null;
        DocumentAnalyticData response = api.retrieveProcessedDocuments(contentType, configId);
        // TODO: test validations
    }

}
