/*
 * Semantria
 * Semantria applies Text and Sentiment Analysis to tweets, facebook posts, surveys, reviews or enterprise content.
 *
 * The version of the OpenAPI document: 4.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for StatisticConfiguration
 */
public class StatisticConfigurationTest {
    private final StatisticConfiguration model = new StatisticConfiguration();

    /**
     * Model tests for StatisticConfiguration
     */
    @Test
    public void testStatisticConfiguration() {
        // TODO: test StatisticConfiguration
    }

    /**
     * Test the property 'callsData'
     */
    @Test
    public void callsDataTest() {
        // TODO: test callsData
    }

    /**
     * Test the property 'callsPolling'
     */
    @Test
    public void callsPollingTest() {
        // TODO: test callsPolling
    }

    /**
     * Test the property 'callsSettings'
     */
    @Test
    public void callsSettingsTest() {
        // TODO: test callsSettings
    }

    /**
     * Test the property 'collsFailed'
     */
    @Test
    public void collsFailedTest() {
        // TODO: test collsFailed
    }

    /**
     * Test the property 'collsProcessed'
     */
    @Test
    public void collsProcessedTest() {
        // TODO: test collsProcessed
    }

    /**
     * Test the property 'collsResponded'
     */
    @Test
    public void collsRespondedTest() {
        // TODO: test collsResponded
    }

    /**
     * Test the property 'configId'
     */
    @Test
    public void configIdTest() {
        // TODO: test configId
    }

    /**
     * Test the property 'docsFailed'
     */
    @Test
    public void docsFailedTest() {
        // TODO: test docsFailed
    }

    /**
     * Test the property 'docsProcessed'
     */
    @Test
    public void docsProcessedTest() {
        // TODO: test docsProcessed
    }

    /**
     * Test the property 'docsResponded'
     */
    @Test
    public void docsRespondedTest() {
        // TODO: test docsResponded
    }

    /**
     * Test the property 'latestUsedApp'
     */
    @Test
    public void latestUsedAppTest() {
        // TODO: test latestUsedApp
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'overallBatches'
     */
    @Test
    public void overallBatchesTest() {
        // TODO: test overallBatches
    }

    /**
     * Test the property 'overallCalls'
     */
    @Test
    public void overallCallsTest() {
        // TODO: test overallCalls
    }

    /**
     * Test the property 'overallDocs'
     */
    @Test
    public void overallDocsTest() {
        // TODO: test overallDocs
    }

    /**
     * Test the property 'overallExceeded'
     */
    @Test
    public void overallExceededTest() {
        // TODO: test overallExceeded
    }

    /**
     * Test the property 'overallTexts'
     */
    @Test
    public void overallTextsTest() {
        // TODO: test overallTexts
    }

    /**
     * Test the property 'overcallColls'
     */
    @Test
    public void overcallCollsTest() {
        // TODO: test overcallColls
    }

    /**
     * Test the property 'usedApps'
     */
    @Test
    public void usedAppsTest() {
        // TODO: test usedApps
    }

}
