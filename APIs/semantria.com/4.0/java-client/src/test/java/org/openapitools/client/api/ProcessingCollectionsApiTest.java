/*
 * Semantria
 * Semantria applies Text and Sentiment Analysis to tweets, facebook posts, surveys, reviews or enterprise content.
 *
 * The version of the OpenAPI document: 4.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Collection;
import org.openapitools.client.model.CollectionAnalyticData;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ProcessingCollectionsApi
 */
@Disabled
public class ProcessingCollectionsApiTest {

    private final ProcessingCollectionsApi api = new ProcessingCollectionsApi();

    /**
     * Cancel collection analysis
     *
     * This method cancels collection analysis by unique ID on Semantria side if it is waiting for analysis in queue.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cancelCollectionTest() throws ApiException {
        String collectionId = null;
        String contentType = null;
        String configId = null;
        api.cancelCollection(collectionId, contentType, configId);
        // TODO: test validations
    }

    /**
     * Queue collection for analysis
     *
     * This method queues collection of documents onto the server for analysis. Queued collection of documents analyzes in common context as entire thing. If unique configuration ID provided, Semantria uses settings of that configuration during analysis, in opposite the primary configuration uses. Collection IDs are unique in scope of configuration. If the same ID appears twice, Semantria overrides existing collection with the new Data
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void queueCollectionTest() throws ApiException {
        String contentType = null;
        Object collection = null;
        String configId = null;
        Collection response = api.queueCollection(contentType, collection, configId);
        // TODO: test validations
    }

    /**
     * Retrieve collection analysis or its status in queue
     *
     * This method retrieves analysis results for documents collection by its unique ID or the collectionâ€™s status in queue if it did not analyzed yet. Semantria guarantees delivering of all collections back to the client even if they FAILED on Semantria side due to some reason.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void receiveCollectionAnalyticDataTest() throws ApiException {
        String collectionId = null;
        String contentType = null;
        String configId = null;
        CollectionAnalyticData response = api.receiveCollectionAnalyticData(collectionId, contentType, configId);
        // TODO: test validations
    }

    /**
     * Retrieve collections analysis
     *
     * This method retrieves analysis results for processed collections from Semantria. FAILED collections will have FAILED status in response. Semantria responds with limited amount of results per API call. If configuration ID provided, Semantria responds with the collections, which were queued using the same configuration ID, in opposite Primary configuration uses.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void retrieveProcessedCollectionsTest() throws ApiException {
        String contentType = null;
        String configId = null;
        CollectionAnalyticData response = api.retrieveProcessedCollections(contentType, configId);
        // TODO: test validations
    }

}
