/**
 * Semantria
 * Semantria applies Text and Sentiment Analysis to tweets, facebook posts, surveys, reviews or enterprise content.
 *
 * The version of the OpenAPI document: 4.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIOpinion.h
 *
 * 
 */

#ifndef OAIOpinion_H
#define OAIOpinion_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIOpinion : public OAIObject {
public:
    OAIOpinion();
    OAIOpinion(QString json);
    ~OAIOpinion() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getQuotation() const;
    void setQuotation(const QString &quotation);
    bool is_quotation_Set() const;
    bool is_quotation_Valid() const;

    QString getSentimentPolarity() const;
    void setSentimentPolarity(const QString &sentiment_polarity);
    bool is_sentiment_polarity_Set() const;
    bool is_sentiment_polarity_Valid() const;

    double getSentimentScore() const;
    void setSentimentScore(const double &sentiment_score);
    bool is_sentiment_score_Set() const;
    bool is_sentiment_score_Valid() const;

    float getSpeaker() const;
    void setSpeaker(const float &speaker);
    bool is_speaker_Set() const;
    bool is_speaker_Valid() const;

    QString getTopic() const;
    void setTopic(const QString &topic);
    bool is_topic_Set() const;
    bool is_topic_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_quotation;
    bool m_quotation_isSet;
    bool m_quotation_isValid;

    QString m_sentiment_polarity;
    bool m_sentiment_polarity_isSet;
    bool m_sentiment_polarity_isValid;

    double m_sentiment_score;
    bool m_sentiment_score_isSet;
    bool m_sentiment_score_isValid;

    float m_speaker;
    bool m_speaker_isSet;
    bool m_speaker_isValid;

    QString m_topic;
    bool m_topic_isSet;
    bool m_topic_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIOpinion)

#endif // OAIOpinion_H
