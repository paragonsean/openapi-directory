/**
 * Semantria
 * Semantria applies Text and Sentiment Analysis to tweets, facebook posts, surveys, reviews or enterprise content.
 *
 * The version of the OpenAPI document: 4.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEntity.h
 *
 * 
 */

#ifndef OAIEntity_H
#define OAIEntity_H

#include <QJsonObject>

#include "OAIMention.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIMention;

class OAIEntity : public OAIObject {
public:
    OAIEntity();
    OAIEntity(QString json);
    ~OAIEntity() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getCount() const;
    void setCount(const qint32 &count);
    bool is_count_Set() const;
    bool is_count_Valid() const;

    QString getEntityType() const;
    void setEntityType(const QString &entity_type);
    bool is_entity_type_Set() const;
    bool is_entity_type_Valid() const;

    QString getLabel() const;
    void setLabel(const QString &label);
    bool is_label_Set() const;
    bool is_label_Valid() const;

    QList<OAIMention> getMentions() const;
    void setMentions(const QList<OAIMention> &mentions);
    bool is_mentions_Set() const;
    bool is_mentions_Valid() const;

    qint32 getNegativeCount() const;
    void setNegativeCount(const qint32 &negative_count);
    bool is_negative_count_Set() const;
    bool is_negative_count_Valid() const;

    qint32 getNeutralCount() const;
    void setNeutralCount(const qint32 &neutral_count);
    bool is_neutral_count_Set() const;
    bool is_neutral_count_Valid() const;

    qint32 getPositiveCount() const;
    void setPositiveCount(const qint32 &positive_count);
    bool is_positive_count_Set() const;
    bool is_positive_count_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_count;
    bool m_count_isSet;
    bool m_count_isValid;

    QString m_entity_type;
    bool m_entity_type_isSet;
    bool m_entity_type_isValid;

    QString m_label;
    bool m_label_isSet;
    bool m_label_isValid;

    QList<OAIMention> m_mentions;
    bool m_mentions_isSet;
    bool m_mentions_isValid;

    qint32 m_negative_count;
    bool m_negative_count_isSet;
    bool m_negative_count_isValid;

    qint32 m_neutral_count;
    bool m_neutral_count_isSet;
    bool m_neutral_count_isValid;

    qint32 m_positive_count;
    bool m_positive_count_isSet;
    bool m_positive_count_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEntity)

#endif // OAIEntity_H
