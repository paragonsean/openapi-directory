/**
 * Semantria
 * Semantria applies Text and Sentiment Analysis to tweets, facebook posts, surveys, reviews or enterprise content.
 *
 * The version of the OpenAPI document: 4.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIModelSentiment.h
 *
 * 
 */

#ifndef OAIModelSentiment_H
#define OAIModelSentiment_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIModelSentiment : public OAIObject {
public:
    OAIModelSentiment();
    OAIModelSentiment(QString json);
    ~OAIModelSentiment() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getMixedScore() const;
    void setMixedScore(const double &mixed_score);
    bool is_mixed_score_Set() const;
    bool is_mixed_score_Valid() const;

    QString getModelName() const;
    void setModelName(const QString &model_name);
    bool is_model_name_Set() const;
    bool is_model_name_Valid() const;

    double getNegativeScore() const;
    void setNegativeScore(const double &negative_score);
    bool is_negative_score_Set() const;
    bool is_negative_score_Valid() const;

    double getNeutralScore() const;
    void setNeutralScore(const double &neutral_score);
    bool is_neutral_score_Set() const;
    bool is_neutral_score_Valid() const;

    double getPositiveScore() const;
    void setPositiveScore(const double &positive_score);
    bool is_positive_score_Set() const;
    bool is_positive_score_Valid() const;

    QString getSentimentPolarity() const;
    void setSentimentPolarity(const QString &sentiment_polarity);
    bool is_sentiment_polarity_Set() const;
    bool is_sentiment_polarity_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_mixed_score;
    bool m_mixed_score_isSet;
    bool m_mixed_score_isValid;

    QString m_model_name;
    bool m_model_name_isSet;
    bool m_model_name_isValid;

    double m_negative_score;
    bool m_negative_score_isSet;
    bool m_negative_score_isValid;

    double m_neutral_score;
    bool m_neutral_score_isSet;
    bool m_neutral_score_isValid;

    double m_positive_score;
    bool m_positive_score_isSet;
    bool m_positive_score_isValid;

    QString m_sentiment_polarity;
    bool m_sentiment_polarity_isSet;
    bool m_sentiment_polarity_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIModelSentiment)

#endif // OAIModelSentiment_H
