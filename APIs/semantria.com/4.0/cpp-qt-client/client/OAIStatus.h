/**
 * Semantria
 * Semantria applies Text and Sentiment Analysis to tweets, facebook posts, surveys, reviews or enterprise content.
 *
 * The version of the OpenAPI document: 4.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIStatus.h
 *
 * 
 */

#ifndef OAIStatus_H
#define OAIStatus_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIStatus : public OAIObject {
public:
    OAIStatus();
    OAIStatus(QString json);
    ~OAIStatus() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getApiVersion() const;
    void setApiVersion(const QString &api_version);
    bool is_api_version_Set() const;
    bool is_api_version_Valid() const;

    QString getServiceStatus() const;
    void setServiceStatus(const QString &service_status);
    bool is_service_status_Set() const;
    bool is_service_status_Valid() const;

    QString getServiceVersion() const;
    void setServiceVersion(const QString &service_version);
    bool is_service_version_Set() const;
    bool is_service_version_Valid() const;

    QString getSupportedCompression() const;
    void setSupportedCompression(const QString &supported_compression);
    bool is_supported_compression_Set() const;
    bool is_supported_compression_Valid() const;

    QString getSupportedEncoding() const;
    void setSupportedEncoding(const QString &supported_encoding);
    bool is_supported_encoding_Set() const;
    bool is_supported_encoding_Valid() const;

    QList<QString> getSupportedLanguages() const;
    void setSupportedLanguages(const QList<QString> &supported_languages);
    bool is_supported_languages_Set() const;
    bool is_supported_languages_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_api_version;
    bool m_api_version_isSet;
    bool m_api_version_isValid;

    QString m_service_status;
    bool m_service_status_isSet;
    bool m_service_status_isValid;

    QString m_service_version;
    bool m_service_version_isSet;
    bool m_service_version_isValid;

    QString m_supported_compression;
    bool m_supported_compression_isSet;
    bool m_supported_compression_isValid;

    QString m_supported_encoding;
    bool m_supported_encoding_isSet;
    bool m_supported_encoding_isValid;

    QList<QString> m_supported_languages;
    bool m_supported_languages_isSet;
    bool m_supported_languages_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIStatus)

#endif // OAIStatus_H
