/**
 * Semantria
 * Semantria applies Text and Sentiment Analysis to tweets, facebook posts, surveys, reviews or enterprise content.
 *
 * The version of the OpenAPI document: 4.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISubscription.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISubscription::OAISubscription(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISubscription::OAISubscription() {
    this->initializeModel();
}

OAISubscription::~OAISubscription() {}

void OAISubscription::initializeModel() {

    m_basic_settings_isSet = false;
    m_basic_settings_isValid = false;

    m_billing_settings_isSet = false;
    m_billing_settings_isValid = false;

    m_feature_settings_isSet = false;
    m_feature_settings_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;
}

void OAISubscription::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISubscription::fromJsonObject(QJsonObject json) {

    m_basic_settings_isValid = ::OpenAPI::fromJsonValue(m_basic_settings, json[QString("basic_settings")]);
    m_basic_settings_isSet = !json[QString("basic_settings")].isNull() && m_basic_settings_isValid;

    m_billing_settings_isValid = ::OpenAPI::fromJsonValue(m_billing_settings, json[QString("billing_settings")]);
    m_billing_settings_isSet = !json[QString("billing_settings")].isNull() && m_billing_settings_isValid;

    m_feature_settings_isValid = ::OpenAPI::fromJsonValue(m_feature_settings, json[QString("feature_settings")]);
    m_feature_settings_isSet = !json[QString("feature_settings")].isNull() && m_feature_settings_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;
}

QString OAISubscription::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISubscription::asJsonObject() const {
    QJsonObject obj;
    if (m_basic_settings.isSet()) {
        obj.insert(QString("basic_settings"), ::OpenAPI::toJsonValue(m_basic_settings));
    }
    if (m_billing_settings.isSet()) {
        obj.insert(QString("billing_settings"), ::OpenAPI::toJsonValue(m_billing_settings));
    }
    if (m_feature_settings.isSet()) {
        obj.insert(QString("feature_settings"), ::OpenAPI::toJsonValue(m_feature_settings));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    return obj;
}

OAISubscriptionBasicSection OAISubscription::getBasicSettings() const {
    return m_basic_settings;
}
void OAISubscription::setBasicSettings(const OAISubscriptionBasicSection &basic_settings) {
    m_basic_settings = basic_settings;
    m_basic_settings_isSet = true;
}

bool OAISubscription::is_basic_settings_Set() const{
    return m_basic_settings_isSet;
}

bool OAISubscription::is_basic_settings_Valid() const{
    return m_basic_settings_isValid;
}

OAISubscriptionBillingSection OAISubscription::getBillingSettings() const {
    return m_billing_settings;
}
void OAISubscription::setBillingSettings(const OAISubscriptionBillingSection &billing_settings) {
    m_billing_settings = billing_settings;
    m_billing_settings_isSet = true;
}

bool OAISubscription::is_billing_settings_Set() const{
    return m_billing_settings_isSet;
}

bool OAISubscription::is_billing_settings_Valid() const{
    return m_billing_settings_isValid;
}

OAISubscriptionFeatureSection OAISubscription::getFeatureSettings() const {
    return m_feature_settings;
}
void OAISubscription::setFeatureSettings(const OAISubscriptionFeatureSection &feature_settings) {
    m_feature_settings = feature_settings;
    m_feature_settings_isSet = true;
}

bool OAISubscription::is_feature_settings_Set() const{
    return m_feature_settings_isSet;
}

bool OAISubscription::is_feature_settings_Valid() const{
    return m_feature_settings_isValid;
}

QString OAISubscription::getName() const {
    return m_name;
}
void OAISubscription::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAISubscription::is_name_Set() const{
    return m_name_isSet;
}

bool OAISubscription::is_name_Valid() const{
    return m_name_isValid;
}

QString OAISubscription::getStatus() const {
    return m_status;
}
void OAISubscription::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAISubscription::is_status_Set() const{
    return m_status_isSet;
}

bool OAISubscription::is_status_Valid() const{
    return m_status_isValid;
}

bool OAISubscription::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_basic_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_billing_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_feature_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISubscription::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_basic_settings_isValid && m_billing_settings_isValid && m_feature_settings_isValid && m_name_isValid && m_status_isValid && true;
}

} // namespace OpenAPI
