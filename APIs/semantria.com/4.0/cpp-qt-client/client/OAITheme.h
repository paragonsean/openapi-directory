/**
 * Semantria
 * Semantria applies Text and Sentiment Analysis to tweets, facebook posts, surveys, reviews or enterprise content.
 *
 * The version of the OpenAPI document: 4.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITheme.h
 *
 * 
 */

#ifndef OAITheme_H
#define OAITheme_H

#include <QJsonObject>

#include "OAIMention.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIMention;

class OAITheme : public OAIObject {
public:
    OAITheme();
    OAITheme(QString json);
    ~OAITheme() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIMention> getMentions() const;
    void setMentions(const QList<OAIMention> &mentions);
    bool is_mentions_Set() const;
    bool is_mentions_Valid() const;

    QString getNormalized() const;
    void setNormalized(const QString &normalized);
    bool is_normalized_Set() const;
    bool is_normalized_Valid() const;

    qint32 getPhrasesCount() const;
    void setPhrasesCount(const qint32 &phrases_count);
    bool is_phrases_count_Set() const;
    bool is_phrases_count_Valid() const;

    QString getSentimentPolarity() const;
    void setSentimentPolarity(const QString &sentiment_polarity);
    bool is_sentiment_polarity_Set() const;
    bool is_sentiment_polarity_Valid() const;

    double getSentimentScore() const;
    void setSentimentScore(const double &sentiment_score);
    bool is_sentiment_score_Set() const;
    bool is_sentiment_score_Valid() const;

    QString getStemmed() const;
    void setStemmed(const QString &stemmed);
    bool is_stemmed_Set() const;
    bool is_stemmed_Valid() const;

    qint32 getThemesCount() const;
    void setThemesCount(const qint32 &themes_count);
    bool is_themes_count_Set() const;
    bool is_themes_count_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIMention> m_mentions;
    bool m_mentions_isSet;
    bool m_mentions_isValid;

    QString m_normalized;
    bool m_normalized_isSet;
    bool m_normalized_isValid;

    qint32 m_phrases_count;
    bool m_phrases_count_isSet;
    bool m_phrases_count_isValid;

    QString m_sentiment_polarity;
    bool m_sentiment_polarity_isSet;
    bool m_sentiment_polarity_isValid;

    double m_sentiment_score;
    bool m_sentiment_score_isSet;
    bool m_sentiment_score_isValid;

    QString m_stemmed;
    bool m_stemmed_isSet;
    bool m_stemmed_isValid;

    qint32 m_themes_count;
    bool m_themes_count_isSet;
    bool m_themes_count_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITheme)

#endif // OAITheme_H
