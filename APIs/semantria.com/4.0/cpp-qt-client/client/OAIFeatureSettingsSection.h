/**
 * Semantria
 * Semantria applies Text and Sentiment Analysis to tweets, facebook posts, surveys, reviews or enterprise content.
 *
 * The version of the OpenAPI document: 4.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFeatureSettingsSection.h
 *
 * 
 */

#ifndef OAIFeatureSettingsSection_H
#define OAIFeatureSettingsSection_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIFeatureSettingsSection : public OAIObject {
public:
    OAIFeatureSettingsSection();
    OAIFeatureSettingsSection(QString json);
    ~OAIFeatureSettingsSection() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isBlacklist() const;
    void setBlacklist(const bool &blacklist);
    bool is_blacklist_Set() const;
    bool is_blacklist_Valid() const;

    bool isQueries() const;
    void setQueries(const bool &queries);
    bool is_queries_Set() const;
    bool is_queries_Valid() const;

    bool isSentimentPhrases() const;
    void setSentimentPhrases(const bool &sentiment_phrases);
    bool is_sentiment_phrases_Set() const;
    bool is_sentiment_phrases_Valid() const;

    bool isTaxonomy() const;
    void setTaxonomy(const bool &taxonomy);
    bool is_taxonomy_Set() const;
    bool is_taxonomy_Valid() const;

    bool isUserCategories() const;
    void setUserCategories(const bool &user_categories);
    bool is_user_categories_Set() const;
    bool is_user_categories_Valid() const;

    bool isUserEntities() const;
    void setUserEntities(const bool &user_entities);
    bool is_user_entities_Set() const;
    bool is_user_entities_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_blacklist;
    bool m_blacklist_isSet;
    bool m_blacklist_isValid;

    bool m_queries;
    bool m_queries_isSet;
    bool m_queries_isValid;

    bool m_sentiment_phrases;
    bool m_sentiment_phrases_isSet;
    bool m_sentiment_phrases_isValid;

    bool m_taxonomy;
    bool m_taxonomy_isSet;
    bool m_taxonomy_isValid;

    bool m_user_categories;
    bool m_user_categories_isSet;
    bool m_user_categories_isValid;

    bool m_user_entities;
    bool m_user_entities_isSet;
    bool m_user_entities_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFeatureSettingsSection)

#endif // OAIFeatureSettingsSection_H
