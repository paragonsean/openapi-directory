/**
 * Semantria
 * Semantria applies Text and Sentiment Analysis to tweets, facebook posts, surveys, reviews or enterprise content.
 *
 * The version of the OpenAPI document: 4.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ConfigurationCollectionSection model module.
 * @module model/ConfigurationCollectionSection
 * @version 4.0
 */
class ConfigurationCollectionSection {
    /**
     * Constructs a new <code>ConfigurationCollectionSection</code>.
     * @alias module:model/ConfigurationCollectionSection
     * @param attributeMentionsLimit {Number} Limits the number of mentions of attribute responded from the server. Default: 0
     * @param conceptTopicsLimit {Number} Limits the number of concept topics responded from the service. Default: 5
     * @param facetAttsLimit {Number} Limits the number of facets which will be responded from the server. Default: 5
     * @param facetMentionsLimit {Number} Limits the number of mentions of facet responded from the server. Default: 0
     * @param facetsLimit {Number} Limits the number of facets which will be responded from the server.  Default: 15
     * @param namedEntitiesLimit {Number} Limits the number of named entities responded from the service. Default: 5
     * @param namedMentionsLimit {Number} Limits the number of mentions of theme responded from the server. Default: 0
     * @param queryTopicsLimit {Number} Limits the number of query topics responded from the service. Default: 5
     * @param themeMentionsLimit {Number} Limits the number of entity mentions responded from the server. Default: 0
     * @param themesLimit {Number} Limits the number of themes responded from the service. Default: 5
     * @param userEntitiesLimit {Number} Limits the number of user entities the service responds. Default: 15
     * @param userMentionsLimit {Number} Limits the number of user entity mentions the service responds. Default: 0
     */
    constructor(attributeMentionsLimit, conceptTopicsLimit, facetAttsLimit, facetMentionsLimit, facetsLimit, namedEntitiesLimit, namedMentionsLimit, queryTopicsLimit, themeMentionsLimit, themesLimit, userEntitiesLimit, userMentionsLimit) { 
        
        ConfigurationCollectionSection.initialize(this, attributeMentionsLimit, conceptTopicsLimit, facetAttsLimit, facetMentionsLimit, facetsLimit, namedEntitiesLimit, namedMentionsLimit, queryTopicsLimit, themeMentionsLimit, themesLimit, userEntitiesLimit, userMentionsLimit);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, attributeMentionsLimit, conceptTopicsLimit, facetAttsLimit, facetMentionsLimit, facetsLimit, namedEntitiesLimit, namedMentionsLimit, queryTopicsLimit, themeMentionsLimit, themesLimit, userEntitiesLimit, userMentionsLimit) { 
        obj['attribute_mentions_limit'] = attributeMentionsLimit;
        obj['concept_topics_limit'] = conceptTopicsLimit;
        obj['facet_atts_limit'] = facetAttsLimit;
        obj['facet_mentions_limit'] = facetMentionsLimit;
        obj['facets_limit'] = facetsLimit;
        obj['named_entities_limit'] = namedEntitiesLimit;
        obj['named_mentions_limit'] = namedMentionsLimit;
        obj['query_topics_limit'] = queryTopicsLimit;
        obj['theme_mentions_limit'] = themeMentionsLimit;
        obj['themes_limit'] = themesLimit;
        obj['user_entities_limit'] = userEntitiesLimit;
        obj['user_mentions_limit'] = userMentionsLimit;
    }

    /**
     * Constructs a <code>ConfigurationCollectionSection</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ConfigurationCollectionSection} obj Optional instance to populate.
     * @return {module:model/ConfigurationCollectionSection} The populated <code>ConfigurationCollectionSection</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ConfigurationCollectionSection();

            if (data.hasOwnProperty('attribute_mentions_limit')) {
                obj['attribute_mentions_limit'] = ApiClient.convertToType(data['attribute_mentions_limit'], 'Number');
            }
            if (data.hasOwnProperty('concept_topics_limit')) {
                obj['concept_topics_limit'] = ApiClient.convertToType(data['concept_topics_limit'], 'Number');
            }
            if (data.hasOwnProperty('facet_atts_limit')) {
                obj['facet_atts_limit'] = ApiClient.convertToType(data['facet_atts_limit'], 'Number');
            }
            if (data.hasOwnProperty('facet_mentions_limit')) {
                obj['facet_mentions_limit'] = ApiClient.convertToType(data['facet_mentions_limit'], 'Number');
            }
            if (data.hasOwnProperty('facets_limit')) {
                obj['facets_limit'] = ApiClient.convertToType(data['facets_limit'], 'Number');
            }
            if (data.hasOwnProperty('named_entities_limit')) {
                obj['named_entities_limit'] = ApiClient.convertToType(data['named_entities_limit'], 'Number');
            }
            if (data.hasOwnProperty('named_mentions_limit')) {
                obj['named_mentions_limit'] = ApiClient.convertToType(data['named_mentions_limit'], 'Number');
            }
            if (data.hasOwnProperty('query_topics_limit')) {
                obj['query_topics_limit'] = ApiClient.convertToType(data['query_topics_limit'], 'Number');
            }
            if (data.hasOwnProperty('theme_mentions_limit')) {
                obj['theme_mentions_limit'] = ApiClient.convertToType(data['theme_mentions_limit'], 'Number');
            }
            if (data.hasOwnProperty('themes_limit')) {
                obj['themes_limit'] = ApiClient.convertToType(data['themes_limit'], 'Number');
            }
            if (data.hasOwnProperty('user_entities_limit')) {
                obj['user_entities_limit'] = ApiClient.convertToType(data['user_entities_limit'], 'Number');
            }
            if (data.hasOwnProperty('user_mentions_limit')) {
                obj['user_mentions_limit'] = ApiClient.convertToType(data['user_mentions_limit'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ConfigurationCollectionSection</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ConfigurationCollectionSection</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ConfigurationCollectionSection.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }

        return true;
    }


}

ConfigurationCollectionSection.RequiredProperties = ["attribute_mentions_limit", "concept_topics_limit", "facet_atts_limit", "facet_mentions_limit", "facets_limit", "named_entities_limit", "named_mentions_limit", "query_topics_limit", "theme_mentions_limit", "themes_limit", "user_entities_limit", "user_mentions_limit"];

/**
 * Limits the number of mentions of attribute responded from the server. Default: 0
 * @member {Number} attribute_mentions_limit
 */
ConfigurationCollectionSection.prototype['attribute_mentions_limit'] = undefined;

/**
 * Limits the number of concept topics responded from the service. Default: 5
 * @member {Number} concept_topics_limit
 */
ConfigurationCollectionSection.prototype['concept_topics_limit'] = undefined;

/**
 * Limits the number of facets which will be responded from the server. Default: 5
 * @member {Number} facet_atts_limit
 */
ConfigurationCollectionSection.prototype['facet_atts_limit'] = undefined;

/**
 * Limits the number of mentions of facet responded from the server. Default: 0
 * @member {Number} facet_mentions_limit
 */
ConfigurationCollectionSection.prototype['facet_mentions_limit'] = undefined;

/**
 * Limits the number of facets which will be responded from the server.  Default: 15
 * @member {Number} facets_limit
 */
ConfigurationCollectionSection.prototype['facets_limit'] = undefined;

/**
 * Limits the number of named entities responded from the service. Default: 5
 * @member {Number} named_entities_limit
 */
ConfigurationCollectionSection.prototype['named_entities_limit'] = undefined;

/**
 * Limits the number of mentions of theme responded from the server. Default: 0
 * @member {Number} named_mentions_limit
 */
ConfigurationCollectionSection.prototype['named_mentions_limit'] = undefined;

/**
 * Limits the number of query topics responded from the service. Default: 5
 * @member {Number} query_topics_limit
 */
ConfigurationCollectionSection.prototype['query_topics_limit'] = undefined;

/**
 * Limits the number of entity mentions responded from the server. Default: 0
 * @member {Number} theme_mentions_limit
 */
ConfigurationCollectionSection.prototype['theme_mentions_limit'] = undefined;

/**
 * Limits the number of themes responded from the service. Default: 5
 * @member {Number} themes_limit
 */
ConfigurationCollectionSection.prototype['themes_limit'] = undefined;

/**
 * Limits the number of user entities the service responds. Default: 15
 * @member {Number} user_entities_limit
 */
ConfigurationCollectionSection.prototype['user_entities_limit'] = undefined;

/**
 * Limits the number of user entity mentions the service responds. Default: 0
 * @member {Number} user_mentions_limit
 */
ConfigurationCollectionSection.prototype['user_mentions_limit'] = undefined;






export default ConfigurationCollectionSection;

