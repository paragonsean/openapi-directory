/**
 * Semantria
 * Semantria applies Text and Sentiment Analysis to tweets, facebook posts, surveys, reviews or enterprise content.
 *
 * The version of the OpenAPI document: 4.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SubscriptionBillingSection model module.
 * @module model/SubscriptionBillingSection
 * @version 4.0
 */
class SubscriptionBillingSection {
    /**
     * Constructs a new <code>SubscriptionBillingSection</code>.
     * @alias module:model/SubscriptionBillingSection
     * @param appSeatsAllocated {Number} Number of allocated application cells permitted to work with the API
     * @param appSeatsPermitted {Number} Number of permitted application to work with the same API account
     * @param dataCallsBalance {Number} Represents actual value of remained data API calls
     * @param dataCallsLimit {Number} Represents the limit of data API calls per \"data_calls_limit_interval\" value
     * @param dataCallsLimitInterval {Number} Represents an interval for the \"data_calls_limit\" value of current subscription
     * @param docsBalance {Number} Current transaction balance. Applicable for pay-as-you-go subscriptions only
     * @param docsLimit {Number} Represents the transactions limit per \"docs_limit_interval\" value
     * @param docsLimitInterval {Number} Represents the timeframe for the \"docs_limit\" value of current subscription
     * @param docsSuggested {Number} Represents the amount of favorable documents suggested for throughput subscriptions
     * @param docsSuggestedInterval {Number} Represents the timeframe for the “docs_suggested” value of the current subscription
     * @param expirationDate {String} Expiration date of current subscription. Defined as a Unix time stamp
     * @param limitType {String} Subscription type can have either pay-as-you-go or throughput value
     * @param pollingCallsBalance {Number} Represents actual value of remained polling API calls
     * @param pollingCallsLimit {Number} Represents the limit of polling API calls per \"polling_calls_limit_interval\" value
     * @param pollingCallsLimitInterval {Number} Represents an interval for the \"polling_calls_limit\" value of current subscription
     * @param priority {String} Processing priority of current subscriber. Can have low, normal or high value
     * @param settingsCallsBalance {Number} Represents actual value of remained settings API calls
     * @param settingsCallsLimit {Number} Represents the limit of settings API calls per \"settings_calls_limit_interval\" value
     * @param settingsCallsLimitInterval {Number} Represents an interval for the \"settings_calls_limit\" value of current subscription
     */
    constructor(appSeatsAllocated, appSeatsPermitted, dataCallsBalance, dataCallsLimit, dataCallsLimitInterval, docsBalance, docsLimit, docsLimitInterval, docsSuggested, docsSuggestedInterval, expirationDate, limitType, pollingCallsBalance, pollingCallsLimit, pollingCallsLimitInterval, priority, settingsCallsBalance, settingsCallsLimit, settingsCallsLimitInterval) { 
        
        SubscriptionBillingSection.initialize(this, appSeatsAllocated, appSeatsPermitted, dataCallsBalance, dataCallsLimit, dataCallsLimitInterval, docsBalance, docsLimit, docsLimitInterval, docsSuggested, docsSuggestedInterval, expirationDate, limitType, pollingCallsBalance, pollingCallsLimit, pollingCallsLimitInterval, priority, settingsCallsBalance, settingsCallsLimit, settingsCallsLimitInterval);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, appSeatsAllocated, appSeatsPermitted, dataCallsBalance, dataCallsLimit, dataCallsLimitInterval, docsBalance, docsLimit, docsLimitInterval, docsSuggested, docsSuggestedInterval, expirationDate, limitType, pollingCallsBalance, pollingCallsLimit, pollingCallsLimitInterval, priority, settingsCallsBalance, settingsCallsLimit, settingsCallsLimitInterval) { 
        obj['app_seats_allocated'] = appSeatsAllocated;
        obj['app_seats_permitted'] = appSeatsPermitted;
        obj['data_calls_balance'] = dataCallsBalance;
        obj['data_calls_limit'] = dataCallsLimit;
        obj['data_calls_limit_interval'] = dataCallsLimitInterval;
        obj['docs_balance'] = docsBalance;
        obj['docs_limit'] = docsLimit;
        obj['docs_limit_interval'] = docsLimitInterval;
        obj['docs_suggested'] = docsSuggested;
        obj['docs_suggested_interval'] = docsSuggestedInterval;
        obj['expiration_date'] = expirationDate;
        obj['limit_type'] = limitType;
        obj['polling_calls_balance'] = pollingCallsBalance;
        obj['polling_calls_limit'] = pollingCallsLimit;
        obj['polling_calls_limit_interval'] = pollingCallsLimitInterval;
        obj['priority'] = priority;
        obj['settings_calls_balance'] = settingsCallsBalance;
        obj['settings_calls_limit'] = settingsCallsLimit;
        obj['settings_calls_limit_interval'] = settingsCallsLimitInterval;
    }

    /**
     * Constructs a <code>SubscriptionBillingSection</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SubscriptionBillingSection} obj Optional instance to populate.
     * @return {module:model/SubscriptionBillingSection} The populated <code>SubscriptionBillingSection</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SubscriptionBillingSection();

            if (data.hasOwnProperty('app_seats_allocated')) {
                obj['app_seats_allocated'] = ApiClient.convertToType(data['app_seats_allocated'], 'Number');
            }
            if (data.hasOwnProperty('app_seats_permitted')) {
                obj['app_seats_permitted'] = ApiClient.convertToType(data['app_seats_permitted'], 'Number');
            }
            if (data.hasOwnProperty('data_calls_balance')) {
                obj['data_calls_balance'] = ApiClient.convertToType(data['data_calls_balance'], 'Number');
            }
            if (data.hasOwnProperty('data_calls_limit')) {
                obj['data_calls_limit'] = ApiClient.convertToType(data['data_calls_limit'], 'Number');
            }
            if (data.hasOwnProperty('data_calls_limit_interval')) {
                obj['data_calls_limit_interval'] = ApiClient.convertToType(data['data_calls_limit_interval'], 'Number');
            }
            if (data.hasOwnProperty('docs_balance')) {
                obj['docs_balance'] = ApiClient.convertToType(data['docs_balance'], 'Number');
            }
            if (data.hasOwnProperty('docs_limit')) {
                obj['docs_limit'] = ApiClient.convertToType(data['docs_limit'], 'Number');
            }
            if (data.hasOwnProperty('docs_limit_interval')) {
                obj['docs_limit_interval'] = ApiClient.convertToType(data['docs_limit_interval'], 'Number');
            }
            if (data.hasOwnProperty('docs_suggested')) {
                obj['docs_suggested'] = ApiClient.convertToType(data['docs_suggested'], 'Number');
            }
            if (data.hasOwnProperty('docs_suggested_interval')) {
                obj['docs_suggested_interval'] = ApiClient.convertToType(data['docs_suggested_interval'], 'Number');
            }
            if (data.hasOwnProperty('expiration_date')) {
                obj['expiration_date'] = ApiClient.convertToType(data['expiration_date'], 'String');
            }
            if (data.hasOwnProperty('limit_type')) {
                obj['limit_type'] = ApiClient.convertToType(data['limit_type'], 'String');
            }
            if (data.hasOwnProperty('polling_calls_balance')) {
                obj['polling_calls_balance'] = ApiClient.convertToType(data['polling_calls_balance'], 'Number');
            }
            if (data.hasOwnProperty('polling_calls_limit')) {
                obj['polling_calls_limit'] = ApiClient.convertToType(data['polling_calls_limit'], 'Number');
            }
            if (data.hasOwnProperty('polling_calls_limit_interval')) {
                obj['polling_calls_limit_interval'] = ApiClient.convertToType(data['polling_calls_limit_interval'], 'Number');
            }
            if (data.hasOwnProperty('priority')) {
                obj['priority'] = ApiClient.convertToType(data['priority'], 'String');
            }
            if (data.hasOwnProperty('settings_calls_balance')) {
                obj['settings_calls_balance'] = ApiClient.convertToType(data['settings_calls_balance'], 'Number');
            }
            if (data.hasOwnProperty('settings_calls_limit')) {
                obj['settings_calls_limit'] = ApiClient.convertToType(data['settings_calls_limit'], 'Number');
            }
            if (data.hasOwnProperty('settings_calls_limit_interval')) {
                obj['settings_calls_limit_interval'] = ApiClient.convertToType(data['settings_calls_limit_interval'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SubscriptionBillingSection</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SubscriptionBillingSection</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of SubscriptionBillingSection.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['expiration_date'] && !(typeof data['expiration_date'] === 'string' || data['expiration_date'] instanceof String)) {
            throw new Error("Expected the field `expiration_date` to be a primitive type in the JSON string but got " + data['expiration_date']);
        }
        // ensure the json data is a string
        if (data['limit_type'] && !(typeof data['limit_type'] === 'string' || data['limit_type'] instanceof String)) {
            throw new Error("Expected the field `limit_type` to be a primitive type in the JSON string but got " + data['limit_type']);
        }
        // ensure the json data is a string
        if (data['priority'] && !(typeof data['priority'] === 'string' || data['priority'] instanceof String)) {
            throw new Error("Expected the field `priority` to be a primitive type in the JSON string but got " + data['priority']);
        }

        return true;
    }


}

SubscriptionBillingSection.RequiredProperties = ["app_seats_allocated", "app_seats_permitted", "data_calls_balance", "data_calls_limit", "data_calls_limit_interval", "docs_balance", "docs_limit", "docs_limit_interval", "docs_suggested", "docs_suggested_interval", "expiration_date", "limit_type", "polling_calls_balance", "polling_calls_limit", "polling_calls_limit_interval", "priority", "settings_calls_balance", "settings_calls_limit", "settings_calls_limit_interval"];

/**
 * Number of allocated application cells permitted to work with the API
 * @member {Number} app_seats_allocated
 */
SubscriptionBillingSection.prototype['app_seats_allocated'] = undefined;

/**
 * Number of permitted application to work with the same API account
 * @member {Number} app_seats_permitted
 */
SubscriptionBillingSection.prototype['app_seats_permitted'] = undefined;

/**
 * Represents actual value of remained data API calls
 * @member {Number} data_calls_balance
 */
SubscriptionBillingSection.prototype['data_calls_balance'] = undefined;

/**
 * Represents the limit of data API calls per \"data_calls_limit_interval\" value
 * @member {Number} data_calls_limit
 */
SubscriptionBillingSection.prototype['data_calls_limit'] = undefined;

/**
 * Represents an interval for the \"data_calls_limit\" value of current subscription
 * @member {Number} data_calls_limit_interval
 */
SubscriptionBillingSection.prototype['data_calls_limit_interval'] = undefined;

/**
 * Current transaction balance. Applicable for pay-as-you-go subscriptions only
 * @member {Number} docs_balance
 */
SubscriptionBillingSection.prototype['docs_balance'] = undefined;

/**
 * Represents the transactions limit per \"docs_limit_interval\" value
 * @member {Number} docs_limit
 */
SubscriptionBillingSection.prototype['docs_limit'] = undefined;

/**
 * Represents the timeframe for the \"docs_limit\" value of current subscription
 * @member {Number} docs_limit_interval
 */
SubscriptionBillingSection.prototype['docs_limit_interval'] = undefined;

/**
 * Represents the amount of favorable documents suggested for throughput subscriptions
 * @member {Number} docs_suggested
 */
SubscriptionBillingSection.prototype['docs_suggested'] = undefined;

/**
 * Represents the timeframe for the “docs_suggested” value of the current subscription
 * @member {Number} docs_suggested_interval
 */
SubscriptionBillingSection.prototype['docs_suggested_interval'] = undefined;

/**
 * Expiration date of current subscription. Defined as a Unix time stamp
 * @member {String} expiration_date
 */
SubscriptionBillingSection.prototype['expiration_date'] = undefined;

/**
 * Subscription type can have either pay-as-you-go or throughput value
 * @member {String} limit_type
 */
SubscriptionBillingSection.prototype['limit_type'] = undefined;

/**
 * Represents actual value of remained polling API calls
 * @member {Number} polling_calls_balance
 */
SubscriptionBillingSection.prototype['polling_calls_balance'] = undefined;

/**
 * Represents the limit of polling API calls per \"polling_calls_limit_interval\" value
 * @member {Number} polling_calls_limit
 */
SubscriptionBillingSection.prototype['polling_calls_limit'] = undefined;

/**
 * Represents an interval for the \"polling_calls_limit\" value of current subscription
 * @member {Number} polling_calls_limit_interval
 */
SubscriptionBillingSection.prototype['polling_calls_limit_interval'] = undefined;

/**
 * Processing priority of current subscriber. Can have low, normal or high value
 * @member {String} priority
 */
SubscriptionBillingSection.prototype['priority'] = undefined;

/**
 * Represents actual value of remained settings API calls
 * @member {Number} settings_calls_balance
 */
SubscriptionBillingSection.prototype['settings_calls_balance'] = undefined;

/**
 * Represents the limit of settings API calls per \"settings_calls_limit_interval\" value
 * @member {Number} settings_calls_limit
 */
SubscriptionBillingSection.prototype['settings_calls_limit'] = undefined;

/**
 * Represents an interval for the \"settings_calls_limit\" value of current subscription
 * @member {Number} settings_calls_limit_interval
 */
SubscriptionBillingSection.prototype['settings_calls_limit_interval'] = undefined;






export default SubscriptionBillingSection;

