/**
 * Semantria
 * Semantria applies Text and Sentiment Analysis to tweets, facebook posts, surveys, reviews or enterprise content.
 *
 * The version of the OpenAPI document: 4.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import Attribute from './model/Attribute';
import AutoCategory from './model/AutoCategory';
import BlacklistItemInsertVersion from './model/BlacklistItemInsertVersion';
import BlacklistItemResponseVersion from './model/BlacklistItemResponseVersion';
import BlacklistItemUpdateVersion from './model/BlacklistItemUpdateVersion';
import CategoryInsertVersion from './model/CategoryInsertVersion';
import CategoryResponseVersion from './model/CategoryResponseVersion';
import CategoryUpdateVersion from './model/CategoryUpdateVersion';
import Collection from './model/Collection';
import CollectionAnalyticData from './model/CollectionAnalyticData';
import ConfigurationCollectionSection from './model/ConfigurationCollectionSection';
import ConfigurationDocumentSection from './model/ConfigurationDocumentSection';
import ConfigurationInsertVersion from './model/ConfigurationInsertVersion';
import ConfigurationResponseVersion from './model/ConfigurationResponseVersion';
import ConfigurationUpdateVersion from './model/ConfigurationUpdateVersion';
import Details from './model/Details';
import Document from './model/Document';
import DocumentAnalyticData from './model/DocumentAnalyticData';
import Entity from './model/Entity';
import EntityInsertVersion from './model/EntityInsertVersion';
import EntityResponseVersion from './model/EntityResponseVersion';
import EntityUpdateVersion from './model/EntityUpdateVersion';
import Facet from './model/Facet';
import Feature from './model/Feature';
import FeatureDetailedModeSection from './model/FeatureDetailedModeSection';
import FeatureDiscoveryModeSection from './model/FeatureDiscoveryModeSection';
import FeatureSettingsSection from './model/FeatureSettingsSection';
import FeatureTemplateSection from './model/FeatureTemplateSection';
import Intention from './model/Intention';
import Location from './model/Location';
import Mention from './model/Mention';
import ModelSentiment from './model/ModelSentiment';
import Opinion from './model/Opinion';
import Phrase from './model/Phrase';
import PhraseInsertVersion from './model/PhraseInsertVersion';
import PhraseResponseVersion from './model/PhraseResponseVersion';
import PhraseUpdateVersion from './model/PhraseUpdateVersion';
import QueryInsertVersion from './model/QueryInsertVersion';
import QueryResponseVersion from './model/QueryResponseVersion';
import QueryUpdateVersion from './model/QueryUpdateVersion';
import Relation from './model/Relation';
import RelationEntity from './model/RelationEntity';
import Statistic from './model/Statistic';
import StatisticConfiguration from './model/StatisticConfiguration';
import Status from './model/Status';
import SubCategory from './model/SubCategory';
import Subscription from './model/Subscription';
import SubscriptionBasicSection from './model/SubscriptionBasicSection';
import SubscriptionBillingSection from './model/SubscriptionBillingSection';
import SubscriptionFeatureSection from './model/SubscriptionFeatureSection';
import SubscriptionFeatureSectionCollection from './model/SubscriptionFeatureSectionCollection';
import SubscriptionFeatureSectionDocument from './model/SubscriptionFeatureSectionDocument';
import SubscriptionFeatureSectionTemplate from './model/SubscriptionFeatureSectionTemplate';
import TaxonomyNodeInsertVersion from './model/TaxonomyNodeInsertVersion';
import TaxonomyNodeResponseVersion from './model/TaxonomyNodeResponseVersion';
import TaxonomyNodeUpdateVersion from './model/TaxonomyNodeUpdateVersion';
import TaxonomyTopic from './model/TaxonomyTopic';
import Theme from './model/Theme';
import Topic from './model/Topic';
import Word from './model/Word';
import BlacklistApi from './api/BlacklistApi';
import CategoriesApi from './api/CategoriesApi';
import ConfigurationApi from './api/ConfigurationApi';
import EntitiesApi from './api/EntitiesApi';
import FeaturesApi from './api/FeaturesApi';
import PhrasesApi from './api/PhrasesApi';
import ProcessingCollectionsApi from './api/ProcessingCollectionsApi';
import ProcessingDocumentsApi from './api/ProcessingDocumentsApi';
import QueriesApi from './api/QueriesApi';
import StatisticsApi from './api/StatisticsApi';
import StatusApi from './api/StatusApi';
import SubscriptionApi from './api/SubscriptionApi';
import TaxonomyApi from './api/TaxonomyApi';


/**
* Semantria applies Text and Sentiment Analysis to tweets, facebook posts, surveys, reviews or enterprise content..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var Semantria = require('index'); // See note below*.
* var xxxSvc = new Semantria.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new Semantria.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new Semantria.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new Semantria.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 4.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The Attribute model constructor.
     * @property {module:model/Attribute}
     */
    Attribute,

    /**
     * The AutoCategory model constructor.
     * @property {module:model/AutoCategory}
     */
    AutoCategory,

    /**
     * The BlacklistItemInsertVersion model constructor.
     * @property {module:model/BlacklistItemInsertVersion}
     */
    BlacklistItemInsertVersion,

    /**
     * The BlacklistItemResponseVersion model constructor.
     * @property {module:model/BlacklistItemResponseVersion}
     */
    BlacklistItemResponseVersion,

    /**
     * The BlacklistItemUpdateVersion model constructor.
     * @property {module:model/BlacklistItemUpdateVersion}
     */
    BlacklistItemUpdateVersion,

    /**
     * The CategoryInsertVersion model constructor.
     * @property {module:model/CategoryInsertVersion}
     */
    CategoryInsertVersion,

    /**
     * The CategoryResponseVersion model constructor.
     * @property {module:model/CategoryResponseVersion}
     */
    CategoryResponseVersion,

    /**
     * The CategoryUpdateVersion model constructor.
     * @property {module:model/CategoryUpdateVersion}
     */
    CategoryUpdateVersion,

    /**
     * The Collection model constructor.
     * @property {module:model/Collection}
     */
    Collection,

    /**
     * The CollectionAnalyticData model constructor.
     * @property {module:model/CollectionAnalyticData}
     */
    CollectionAnalyticData,

    /**
     * The ConfigurationCollectionSection model constructor.
     * @property {module:model/ConfigurationCollectionSection}
     */
    ConfigurationCollectionSection,

    /**
     * The ConfigurationDocumentSection model constructor.
     * @property {module:model/ConfigurationDocumentSection}
     */
    ConfigurationDocumentSection,

    /**
     * The ConfigurationInsertVersion model constructor.
     * @property {module:model/ConfigurationInsertVersion}
     */
    ConfigurationInsertVersion,

    /**
     * The ConfigurationResponseVersion model constructor.
     * @property {module:model/ConfigurationResponseVersion}
     */
    ConfigurationResponseVersion,

    /**
     * The ConfigurationUpdateVersion model constructor.
     * @property {module:model/ConfigurationUpdateVersion}
     */
    ConfigurationUpdateVersion,

    /**
     * The Details model constructor.
     * @property {module:model/Details}
     */
    Details,

    /**
     * The Document model constructor.
     * @property {module:model/Document}
     */
    Document,

    /**
     * The DocumentAnalyticData model constructor.
     * @property {module:model/DocumentAnalyticData}
     */
    DocumentAnalyticData,

    /**
     * The Entity model constructor.
     * @property {module:model/Entity}
     */
    Entity,

    /**
     * The EntityInsertVersion model constructor.
     * @property {module:model/EntityInsertVersion}
     */
    EntityInsertVersion,

    /**
     * The EntityResponseVersion model constructor.
     * @property {module:model/EntityResponseVersion}
     */
    EntityResponseVersion,

    /**
     * The EntityUpdateVersion model constructor.
     * @property {module:model/EntityUpdateVersion}
     */
    EntityUpdateVersion,

    /**
     * The Facet model constructor.
     * @property {module:model/Facet}
     */
    Facet,

    /**
     * The Feature model constructor.
     * @property {module:model/Feature}
     */
    Feature,

    /**
     * The FeatureDetailedModeSection model constructor.
     * @property {module:model/FeatureDetailedModeSection}
     */
    FeatureDetailedModeSection,

    /**
     * The FeatureDiscoveryModeSection model constructor.
     * @property {module:model/FeatureDiscoveryModeSection}
     */
    FeatureDiscoveryModeSection,

    /**
     * The FeatureSettingsSection model constructor.
     * @property {module:model/FeatureSettingsSection}
     */
    FeatureSettingsSection,

    /**
     * The FeatureTemplateSection model constructor.
     * @property {module:model/FeatureTemplateSection}
     */
    FeatureTemplateSection,

    /**
     * The Intention model constructor.
     * @property {module:model/Intention}
     */
    Intention,

    /**
     * The Location model constructor.
     * @property {module:model/Location}
     */
    Location,

    /**
     * The Mention model constructor.
     * @property {module:model/Mention}
     */
    Mention,

    /**
     * The ModelSentiment model constructor.
     * @property {module:model/ModelSentiment}
     */
    ModelSentiment,

    /**
     * The Opinion model constructor.
     * @property {module:model/Opinion}
     */
    Opinion,

    /**
     * The Phrase model constructor.
     * @property {module:model/Phrase}
     */
    Phrase,

    /**
     * The PhraseInsertVersion model constructor.
     * @property {module:model/PhraseInsertVersion}
     */
    PhraseInsertVersion,

    /**
     * The PhraseResponseVersion model constructor.
     * @property {module:model/PhraseResponseVersion}
     */
    PhraseResponseVersion,

    /**
     * The PhraseUpdateVersion model constructor.
     * @property {module:model/PhraseUpdateVersion}
     */
    PhraseUpdateVersion,

    /**
     * The QueryInsertVersion model constructor.
     * @property {module:model/QueryInsertVersion}
     */
    QueryInsertVersion,

    /**
     * The QueryResponseVersion model constructor.
     * @property {module:model/QueryResponseVersion}
     */
    QueryResponseVersion,

    /**
     * The QueryUpdateVersion model constructor.
     * @property {module:model/QueryUpdateVersion}
     */
    QueryUpdateVersion,

    /**
     * The Relation model constructor.
     * @property {module:model/Relation}
     */
    Relation,

    /**
     * The RelationEntity model constructor.
     * @property {module:model/RelationEntity}
     */
    RelationEntity,

    /**
     * The Statistic model constructor.
     * @property {module:model/Statistic}
     */
    Statistic,

    /**
     * The StatisticConfiguration model constructor.
     * @property {module:model/StatisticConfiguration}
     */
    StatisticConfiguration,

    /**
     * The Status model constructor.
     * @property {module:model/Status}
     */
    Status,

    /**
     * The SubCategory model constructor.
     * @property {module:model/SubCategory}
     */
    SubCategory,

    /**
     * The Subscription model constructor.
     * @property {module:model/Subscription}
     */
    Subscription,

    /**
     * The SubscriptionBasicSection model constructor.
     * @property {module:model/SubscriptionBasicSection}
     */
    SubscriptionBasicSection,

    /**
     * The SubscriptionBillingSection model constructor.
     * @property {module:model/SubscriptionBillingSection}
     */
    SubscriptionBillingSection,

    /**
     * The SubscriptionFeatureSection model constructor.
     * @property {module:model/SubscriptionFeatureSection}
     */
    SubscriptionFeatureSection,

    /**
     * The SubscriptionFeatureSectionCollection model constructor.
     * @property {module:model/SubscriptionFeatureSectionCollection}
     */
    SubscriptionFeatureSectionCollection,

    /**
     * The SubscriptionFeatureSectionDocument model constructor.
     * @property {module:model/SubscriptionFeatureSectionDocument}
     */
    SubscriptionFeatureSectionDocument,

    /**
     * The SubscriptionFeatureSectionTemplate model constructor.
     * @property {module:model/SubscriptionFeatureSectionTemplate}
     */
    SubscriptionFeatureSectionTemplate,

    /**
     * The TaxonomyNodeInsertVersion model constructor.
     * @property {module:model/TaxonomyNodeInsertVersion}
     */
    TaxonomyNodeInsertVersion,

    /**
     * The TaxonomyNodeResponseVersion model constructor.
     * @property {module:model/TaxonomyNodeResponseVersion}
     */
    TaxonomyNodeResponseVersion,

    /**
     * The TaxonomyNodeUpdateVersion model constructor.
     * @property {module:model/TaxonomyNodeUpdateVersion}
     */
    TaxonomyNodeUpdateVersion,

    /**
     * The TaxonomyTopic model constructor.
     * @property {module:model/TaxonomyTopic}
     */
    TaxonomyTopic,

    /**
     * The Theme model constructor.
     * @property {module:model/Theme}
     */
    Theme,

    /**
     * The Topic model constructor.
     * @property {module:model/Topic}
     */
    Topic,

    /**
     * The Word model constructor.
     * @property {module:model/Word}
     */
    Word,

    /**
    * The BlacklistApi service constructor.
    * @property {module:api/BlacklistApi}
    */
    BlacklistApi,

    /**
    * The CategoriesApi service constructor.
    * @property {module:api/CategoriesApi}
    */
    CategoriesApi,

    /**
    * The ConfigurationApi service constructor.
    * @property {module:api/ConfigurationApi}
    */
    ConfigurationApi,

    /**
    * The EntitiesApi service constructor.
    * @property {module:api/EntitiesApi}
    */
    EntitiesApi,

    /**
    * The FeaturesApi service constructor.
    * @property {module:api/FeaturesApi}
    */
    FeaturesApi,

    /**
    * The PhrasesApi service constructor.
    * @property {module:api/PhrasesApi}
    */
    PhrasesApi,

    /**
    * The ProcessingCollectionsApi service constructor.
    * @property {module:api/ProcessingCollectionsApi}
    */
    ProcessingCollectionsApi,

    /**
    * The ProcessingDocumentsApi service constructor.
    * @property {module:api/ProcessingDocumentsApi}
    */
    ProcessingDocumentsApi,

    /**
    * The QueriesApi service constructor.
    * @property {module:api/QueriesApi}
    */
    QueriesApi,

    /**
    * The StatisticsApi service constructor.
    * @property {module:api/StatisticsApi}
    */
    StatisticsApi,

    /**
    * The StatusApi service constructor.
    * @property {module:api/StatusApi}
    */
    StatusApi,

    /**
    * The SubscriptionApi service constructor.
    * @property {module:api/SubscriptionApi}
    */
    SubscriptionApi,

    /**
    * The TaxonomyApi service constructor.
    * @property {module:api/TaxonomyApi}
    */
    TaxonomyApi
};
