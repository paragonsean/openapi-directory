openapi: 3.0.1
info:
  contact: {}
  description: "Semantria applies Text and Sentiment Analysis to tweets, facebook\
    \ posts, surveys, reviews or enterprise content."
  title: Semantria
  version: "4.0"
  x-apisguru-categories:
  - social
  - text
  x-logo:
    url: https://twitter.com/semantria/profile_image?size=original
  x-origin:
  - converter:
      url: https://github.com/lucybot/api-spec-converter
      version: 2.7.11
    format: swagger
    url: https://semantria.com/developer/api-docs-prod
    version: "1.2"
  x-providerName: semantria.com
externalDocs:
  url: https://semantria.com/support/developer/
servers:
- url: https://api.semantria.com/
tags:
- description: Blacklisted output
  name: Blacklist
- description: User categories
  name: Categories
- description: Configurations
  name: Configuration
- description: User entities
  name: Entities
- description: Supported features
  name: Features
- description: Sentiment-Bearing Phrases
  name: Phrases
- description: Discovery analysis
  name: ProcessingCollections
- description: Basic analysis
  name: ProcessingDocuments
- description: Queries
  name: Queries
- description: Usage statistics
  name: Statistics
- description: API status
  name: Status
- description: Subscription details
  name: Subscription
- description: Taxonomy
  name: Taxonomy
paths:
  /blacklist.{content_type}:
    delete:
      description: This method removes certain blacklisted items by their values on
        Semantria side.
      operationId: delete_blacklist_items
      parameters:
      - description: Identifier of configuration blacklist items linked to.
        in: query
        name: config_id
        schema:
          type: string
      - in: path
        name: content_type
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              items:
                type: string
              type: array
        description: List of unique blacklisted item identifiers (string).
        required: true
        x-body-name: Blacklisted item IDs
      responses:
        "200":
          content: {}
          description: No response was specified
        "202":
          content: {}
          description: Client request accepted and queued.
        "400":
          content: {}
          description: Incoming request body is incorrect. Server responds with details.
        "401":
          content: {}
          description: Authentication failed.
        "402":
          content: {}
          description: Unauthorized. Limit of system calls is reached or subscription
            is expired.
        "403":
          content: {}
          description: Forbidden. Server responds if client tries to remove primary
            configuration.
        "500":
          content: {}
          description: Server side issue. Server may respond with the details in response
            body.
      summary: Remove items from blacklist
      tags:
      - Blacklist
      x-codegen-request-body-name: Blacklisted item IDs
      x-openapi-router-controller: openapi_server.controllers.blacklist_controller
    get:
      description: This method retrieves all backlisted items available on Semantria
        side.
      operationId: get_blacklist
      parameters:
      - description: Identifier of configuration blacklist linked to.
        in: query
        name: config_id
        schema:
          type: string
      - in: path
        name: content_type
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/BlacklistItem_ResponseVersion'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/BlacklistItem_ResponseVersion'
                type: array
          description: Client request accepted and queued. Server responds with the
            blacklist.
        "202":
          content: {}
          description: "Client request accepted, no blacklist found. Server responds\
            \ with empty body."
        "401":
          content: {}
          description: Authentication failed.
        "402":
          content: {}
          description: Unauthorized. Limit of system calls is reached or subscription
            is expired.
        "500":
          content: {}
          description: Server side issue. Server may respond with the details in response
            body.
      summary: Retrieve blacklisted items
      tags:
      - Blacklist
      x-openapi-router-controller: openapi_server.controllers.blacklist_controller
    post:
      description: This method adds new unique items to the backlist on Semantria
        side.
      operationId: add_blacklist
      parameters:
      - description: Identifier of configuration blacklist linked to.
        in: query
        name: config_id
        schema:
          type: string
      - in: path
        name: content_type
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Request%20class'
        description: List of parametrized JSON or XML objects.
        required: true
        x-body-name: Blacklisted items
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/BlacklistItem_ResponseVersion'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/BlacklistItem_ResponseVersion'
                type: array
          description: No response was specified
        "202":
          content: {}
          description: Client request accepted and queued.
        "400":
          content: {}
          description: Incoming request body is incorrect. Server responds with details.
        "401":
          content: {}
          description: Authentication failed.
        "402":
          content: {}
          description: Unauthorized. Limit of system calls is reached or subscription
            is expired.
        "406":
          content: {}
          description: Number of allowed blacklisted items per configuration achieved.
        "500":
          content: {}
          description: Server side issue. Server may respond with the details in response
            body.
      summary: Add items to blacklist
      tags:
      - Blacklist
      x-codegen-request-body-name: Blacklisted items
      x-openapi-router-controller: openapi_server.controllers.blacklist_controller
    put:
      description: This method updates existing items by unique IDs in the backlist
        on Semantria side.
      operationId: update_blacklist
      parameters:
      - description: Identifier of configuration blacklist linked to.
        in: query
        name: config_id
        schema:
          type: string
      - in: path
        name: content_type
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Request%20class'
        description: List of parametrized JSON or XML objects.
        required: true
        x-body-name: Blacklisted items
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/BlacklistItem_ResponseVersion'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/BlacklistItem_ResponseVersion'
                type: array
          description: No response was specified
        "202":
          content: {}
          description: Client request accepted and queued.
        "400":
          content: {}
          description: Incoming request body is incorrect. Server responds with details.
        "401":
          content: {}
          description: Authentication failed.
        "402":
          content: {}
          description: Unauthorized. Limit of system calls is reached or subscription
            is expired.
        "406":
          content: {}
          description: Number of allowed blacklisted items per configuration achieved.
        "500":
          content: {}
          description: Server side issue. Server may respond with the details in response
            body.
      summary: Update items in blacklist
      tags:
      - Blacklist
      x-codegen-request-body-name: Blacklisted items
      x-openapi-router-controller: openapi_server.controllers.blacklist_controller
  /categories.{content_type}:
    delete:
      description: This method removes certain user categories by their IDs on Semantria
        side.
      operationId: delete_categories
      parameters:
      - description: Identifier of configuration user categories linked to.
        in: query
        name: config_id
        schema:
          type: string
      - in: path
        name: content_type
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              items:
                type: string
              type: array
        description: List of user category identifiers.
        required: true
        x-body-name: Category IDs
      responses:
        "200":
          content: {}
          description: No response was specified
        "202":
          content: {}
          description: Client request accepted and queued.
        "400":
          content: {}
          description: Incoming request body is incorrect. Server responds with details.
        "401":
          content: {}
          description: Authentication failed.
        "402":
          content: {}
          description: Unauthorized. Limit of system calls is reached or subscription
            is expired.
        "403":
          content: {}
          description: Forbidden. Server responds if client tries to remove primary
            configuration.
        "500":
          content: {}
          description: Server side issue. Server may respond with the details in response
            body.
      summary: Remove user categories
      tags:
      - Categories
      x-codegen-request-body-name: Category IDs
      x-openapi-router-controller: openapi_server.controllers.categories_controller
    get:
      description: This method retrieves list of user categories available on Semantria
        side.
      operationId: get_categories
      parameters:
      - description: Identifier of configuration user categories linked to.
        in: query
        name: config_id
        schema:
          type: string
      - in: path
        name: content_type
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Category_ResponseVersion'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Category_ResponseVersion'
                type: array
          description: Client request accepted and queued. Server responds with the
            categories list.
        "202":
          content: {}
          description: "Client request accepted, no categories found. Server responds\
            \ with empty body."
        "401":
          content: {}
          description: Authentication failed.
        "402":
          content: {}
          description: Unauthorized. Limit of system calls is reached or subscription
            is expired.
        "500":
          content: {}
          description: Server side issue. Server may respond with the details in response
            body.
      summary: Retrieve user categories
      tags:
      - Categories
      x-openapi-router-controller: openapi_server.controllers.categories_controller
    post:
      description: This method adds user categories on Semantria side.
      operationId: add_categories
      parameters:
      - description: Identifier of configuration user categories linked to.
        in: query
        name: config_id
        schema:
          type: string
      - in: path
        name: content_type
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Request%20class'
        description: List of parametrized JSON or XML objects.
        required: true
        x-body-name: Categories
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Category_ResponseVersion'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Category_ResponseVersion'
                type: array
          description: No response was specified
        "202":
          content: {}
          description: Client request accepted and queued.
        "400":
          content: {}
          description: Incoming request body is incorrect. Server responds with details.
        "401":
          content: {}
          description: Authentication failed.
        "402":
          content: {}
          description: Unauthorized. Limit of system calls is reached or subscription
            is expired.
        "406":
          content: {}
          description: Number of allowed categories per configuration or samples per
            category achieved.
        "500":
          content: {}
          description: Server side issue. Server may respond with the details in response
            body.
      summary: Add user categories
      tags:
      - Categories
      x-codegen-request-body-name: Categories
      x-openapi-router-controller: openapi_server.controllers.categories_controller
    put:
      description: This method updates user categories by unique IDs on Semantria
        side.
      operationId: update_categories
      parameters:
      - description: Identifier of configuration user categories linked to.
        in: query
        name: config_id
        schema:
          type: string
      - in: path
        name: content_type
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Request%20class'
        description: List of parametrized JSON or XML objects.
        required: true
        x-body-name: Categories
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Category_ResponseVersion'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Category_ResponseVersion'
                type: array
          description: No response was specified
        "202":
          content: {}
          description: Client request accepted and queued.
        "400":
          content: {}
          description: Incoming request body is incorrect. Server responds with details.
        "401":
          content: {}
          description: Authentication failed.
        "402":
          content: {}
          description: Unauthorized. Limit of system calls is reached or subscription
            is expired.
        "406":
          content: {}
          description: Number of allowed categories per configuration or samples per
            category achieved.
        "500":
          content: {}
          description: Server side issue. Server may respond with the details in response
            body.
      summary: Updates user categories
      tags:
      - Categories
      x-codegen-request-body-name: Categories
      x-openapi-router-controller: openapi_server.controllers.categories_controller
  /collection.{content_type}:
    post:
      description: "This method queues collection of documents onto the server for\
        \ analysis. Queued collection of documents analyzes in common context as entire\
        \ thing. If unique configuration ID provided, Semantria uses settings of that\
        \ configuration during analysis, in opposite the primary configuration uses.\
        \ Collection IDs are unique in scope of configuration. If the same ID appears\
        \ twice, Semantria overrides existing collection with the new Data"
      operationId: queue_collection
      parameters:
      - description: Identifier of configuration used for analysis.
        in: query
        name: config_id
        schema:
          type: string
      - in: path
        name: content_type
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Request%20class'
        description: Parametrized JSON or XML object.
        required: true
        x-body-name: Collection
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collection'
            application/xml:
              schema:
                $ref: '#/components/schemas/Collection'
          description: Client request accepted and queued. Server responds with the
            sentiment-bearing phrases list.
        "202":
          content: {}
          description: Client request accepted and queued for processing.
        "401":
          content: {}
          description: Authentication failed.
        "402":
          content: {}
          description: Unauthorized. Limit of system calls is reached or subscription
            is expired.
        "406":
          content: {}
          description: Documents limit per collection is achieved.
        "413":
          content: {}
          description: Characters limit for single document exceeded.
        "500":
          content: {}
          description: Server side issue. Server may respond with the details in response
            body.
      summary: Queue collection for analysis
      tags:
      - ProcessingCollections
      x-codegen-request-body-name: Collection
      x-openapi-router-controller: openapi_server.controllers.processing_collections_controller
  /collection/processed.{content_type}:
    get:
      description: "This method retrieves analysis results for processed collections\
        \ from Semantria. FAILED collections will have FAILED status in response.\
        \ Semantria responds with limited amount of results per API call. If configuration\
        \ ID provided, Semantria responds with the collections, which were queued\
        \ using the same configuration ID, in opposite Primary configuration uses."
      operationId: retrieve_processed_collections
      parameters:
      - description: Identifier of configuration used for analysis.
        in: query
        name: config_id
        schema:
          type: string
      - in: path
        name: content_type
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionAnalyticData'
            application/xml:
              schema:
                $ref: '#/components/schemas/CollectionAnalyticData'
          description: Client request accepted and queued. Server responds with processed
            collections.
        "202":
          content: {}
          description: "Client request accepted, no processed collections found on\
            \ the server."
        "401":
          content: {}
          description: Authentication failed.
        "402":
          content: {}
          description: Unauthorized. Limit of system calls is reached or subscription
            is expired.
        "500":
          content: {}
          description: Server side issue. Server may respond with the details in response
            body.
      summary: Retrieve collections analysis
      tags:
      - ProcessingCollections
      x-openapi-router-controller: openapi_server.controllers.processing_collections_controller
  /collection/{collection_id}.{content_type}:
    delete:
      description: This method cancels collection analysis by unique ID on Semantria
        side if it is waiting for analysis in queue.
      operationId: cancel_collection
      parameters:
      - description: Identifier of configuration used for analysis.
        in: query
        name: config_id
        schema:
          type: string
      - description: Collection ID
        in: path
        name: collection_id
        required: true
        schema:
          type: string
      - in: path
        name: content_type
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Client request accepted. Document canceled from processing
            on the server.
        "401":
          content: {}
          description: Authentication failed.
        "402":
          content: {}
          description: Unauthorized. Limit of system calls is reached or subscription
            is expired.
        "404":
          content: {}
          description: No collections with provided ID found on server.
        "500":
          content: {}
          description: Server side issue. Server may respond with the details in response
            body.
      summary: Cancel collection analysis
      tags:
      - ProcessingCollections
      x-openapi-router-controller: openapi_server.controllers.processing_collections_controller
    get:
      description: This method retrieves analysis results for documents collection
        by its unique ID or the collection’s status in queue if it did not analyzed
        yet. Semantria guarantees delivering of all collections back to the client
        even if they FAILED on Semantria side due to some reason.
      operationId: receive_collection_analytic_data
      parameters:
      - description: Identifier of configuration used for analysis.
        in: query
        name: config_id
        schema:
          type: string
      - description: Collection ID
        in: path
        name: collection_id
        required: true
        schema:
          type: string
      - in: path
        name: content_type
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionAnalyticData'
            application/xml:
              schema:
                $ref: '#/components/schemas/CollectionAnalyticData'
          description: Client request accepted. Server responds with processed document
            or its status.
        "401":
          content: {}
          description: Authentication failed.
        "402":
          content: {}
          description: Unauthorized. Limit of system calls is reached or subscription
            is expired.
        "404":
          content: {}
          description: No collections with provided ID found on server.
        "500":
          content: {}
          description: Server side issue. Server may respond with the details in response
            body.
      summary: Retrieve collection analysis or its status in queue
      tags:
      - ProcessingCollections
      x-openapi-router-controller: openapi_server.controllers.processing_collections_controller
  /configurations.{content_type}:
    delete:
      description: This method removes certain configuration by unique ID on Semantria
        side.
      operationId: delete_configurations
      parameters:
      - in: path
        name: content_type
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              items:
                type: string
              type: array
        description: List of configuration identifiers.
        required: true
        x-body-name: Configuration IDs
      responses:
        "200":
          content: {}
          description: No response was specified
        "202":
          content: {}
          description: Client request accepted and queued.
        "400":
          content: {}
          description: Incoming request body is incorrect. Server responds with details.
        "401":
          content: {}
          description: Authentication failed.
        "402":
          content: {}
          description: Unauthorized. Limit of system calls is reached or subscription
            is expired.
        "403":
          content: {}
          description: Forbidden. Server responds if client tries to remove primary
            configuration.
        "500":
          content: {}
          description: Server side issue. Server may respond with the details in response
            body.
      summary: Remove user configurations
      tags:
      - Configuration
      x-codegen-request-body-name: Configuration IDs
      x-openapi-router-controller: openapi_server.controllers.configuration_controller
    get:
      description: This method retrieves all user configurations available on Semantria
        side.
      operationId: get_configurations
      parameters:
      - in: path
        name: content_type
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Configuration_ResponseVersion'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Configuration_ResponseVersion'
                type: array
          description: Client request accepted. Server responds with status object.
        "401":
          content: {}
          description: Authentication failed.
        "402":
          content: {}
          description: Unauthorized. Limit of system calls is reached or subscription
            is expired.
        "500":
          content: {}
          description: Server side issue. Server may respond with the details in response
            body.
      summary: Retrieve user configurations
      tags:
      - Configuration
      x-openapi-router-controller: openapi_server.controllers.configuration_controller
    post:
      description: This method creates configurations on Semantria side.
      operationId: add_configurations
      parameters:
      - in: path
        name: content_type
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Request%20class'
        description: List of parametrized JSON or XML objects.
        required: true
        x-body-name: Configurations
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Configuration_ResponseVersion'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Configuration_ResponseVersion'
                type: array
          description: No response was specified
        "202":
          content: {}
          description: Client request accepted and queued.
        "400":
          content: {}
          description: Incoming request body is incorrect. Server responds with details.
        "401":
          content: {}
          description: Authentication failed.
        "402":
          content: {}
          description: Unauthorized. Limit of system calls is reached or subscription
            is expired.
        "406":
          content: {}
          description: Number of allowed configurations for user subscription is reached.
        "500":
          content: {}
          description: Server side issue. Server may respond with the details in response
            body.
      summary: Create user configurations
      tags:
      - Configuration
      x-codegen-request-body-name: Configurations
      x-openapi-router-controller: openapi_server.controllers.configuration_controller
    put:
      description: This method updates specific configurations by unique IDs on Semantria
        side.
      operationId: update_configurations
      parameters:
      - in: path
        name: content_type
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Request%20class'
        description: List of parametrized JSON or XML objects.
        required: true
        x-body-name: Configurations
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Configuration_ResponseVersion'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Configuration_ResponseVersion'
                type: array
          description: No response was specified
        "202":
          content: {}
          description: Client request accepted and queued.
        "400":
          content: {}
          description: Incoming request body is incorrect. Server responds with details.
        "401":
          content: {}
          description: Authentication failed.
        "402":
          content: {}
          description: Unauthorized. Limit of system calls is reached or subscription
            is expired.
        "406":
          content: {}
          description: Number of allowed configurations for user subscription is reached.
        "500":
          content: {}
          description: Server side issue. Server may respond with the details in response
            body.
      summary: Update user configurations
      tags:
      - Configuration
      x-codegen-request-body-name: Configurations
      x-openapi-router-controller: openapi_server.controllers.configuration_controller
  /document.{content_type}:
    post:
      description: "This method queues document onto the server for analysis. Queued\
        \ document analyzes individually and will have its own set of results. If\
        \ unique configuration ID provided, Semantria uses settings of that configuration\
        \ during analysis, in opposite the primary configuration uses. Document IDs\
        \ are unique in scope of configuration. If the same ID appears twice, Semantria\
        \ overrides existing document with the new Data."
      operationId: queue_document
      parameters:
      - description: Identifier of configuration used for analysis.
        in: query
        name: config_id
        schema:
          type: string
      - in: path
        name: content_type
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Request%20class'
        description: Parametrized JSON or XML object.
        required: true
        x-body-name: Document
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
            application/xml:
              schema:
                $ref: '#/components/schemas/Document'
          description: Client request accepted and queued. Server responds with the
            sentiment-bearing phrases list.
        "202":
          content: {}
          description: Client request accepted and queued for processing.
        "401":
          content: {}
          description: Authentication failed.
        "402":
          content: {}
          description: Unauthorized. Limit of system calls is reached or subscription
            is expired.
        "413":
          content: {}
          description: Characters limit for the document exceeded.
        "500":
          content: {}
          description: Server side issue. Server may respond with the details in response
            body.
      summary: Queue document for analysis
      tags:
      - ProcessingDocuments
      x-codegen-request-body-name: Document
      x-openapi-router-controller: openapi_server.controllers.processing_documents_controller
  /document/batch.{content_type}:
    post:
      description: This method queues batch of documents for analysis. The rules are
        the same as for single document mode but here the documents ordered into the
        batch.
      operationId: queue_batch_of_documents
      parameters:
      - description: Identifier of configuration used for analysis.
        in: query
        name: config_id
        schema:
          type: string
      - in: path
        name: content_type
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Request%20class'
        description: List of parametrized JSON or XML objects.
        required: true
        x-body-name: Batch of Documents
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
            application/xml:
              schema:
                $ref: '#/components/schemas/Document'
          description: Client request accepted and queued. Server responds with the
            sentiment-bearing phrases list.
        "202":
          content: {}
          description: Client request accepted and queued for processing.
        "401":
          content: {}
          description: Authentication failed.
        "402":
          content: {}
          description: Unauthorized. Limit of system calls is reached or subscription
            is expired.
        "403":
          content: {}
          description: Request is forbidden for selected processing mode.
        "406":
          content: {}
          description: Documents limit per batch is achieved.
        "413":
          content: {}
          description: Characters limit for the document exceeded.
        "500":
          content: {}
          description: Server side issue. Server may respond with the details in response
            body.
      summary: Queue batch of documents for analysis
      tags:
      - ProcessingDocuments
      x-codegen-request-body-name: Batch of Documents
      x-openapi-router-controller: openapi_server.controllers.processing_documents_controller
  /document/processed.{content_type}:
    get:
      description: "This method retrieves analysis results for processed documents\
        \ from Semantria. FAILED documents will have FAILED status in response. Semantria\
        \ responds with limited amount of results per API call. If configuration ID\
        \ provided, Semantria responds with the document, which were queued using\
        \ the same configuration ID, in opposite Primary."
      operationId: retrieve_processed_documents
      parameters:
      - description: Identifier of configuration used for analysis.
        in: query
        name: config_id
        schema:
          type: string
      - in: path
        name: content_type
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentAnalyticData'
            application/xml:
              schema:
                $ref: '#/components/schemas/DocumentAnalyticData'
          description: Client request accepted and queued. Server responds with processed
            documents.
        "202":
          content: {}
          description: "Client request accepted, no processed documents found on the\
            \ server."
        "401":
          content: {}
          description: Authentication failed.
        "402":
          content: {}
          description: Unauthorized. Limit of system calls is reached or subscription
            is expired.
        "500":
          content: {}
          description: Server side issue. Server may respond with the details in response
            body.
      summary: Retrieve documents analysis
      tags:
      - ProcessingDocuments
      x-openapi-router-controller: openapi_server.controllers.processing_documents_controller
  /document/{document_id}.{content_type}:
    delete:
      description: This method cancels document analysis by unique ID on Semantria
        side if it is waiting for analysis in queue.
      operationId: cancel_document
      parameters:
      - description: Identifier of configuration used for analysis.
        in: query
        name: config_id
        schema:
          type: string
      - description: Document ID
        in: path
        name: document_id
        required: true
        schema:
          type: string
      - in: path
        name: content_type
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: Client request accepted. Document canceled from processing
            on the server.
        "401":
          content: {}
          description: Authentication failed.
        "402":
          content: {}
          description: Unauthorized. Limit of system calls is reached or subscription
            is expired.
        "404":
          content: {}
          description: No documents with provided ID found on server.
        "500":
          content: {}
          description: Server side issue. Server may respond with the details in response
            body.
      summary: Cancel document analysis
      tags:
      - ProcessingDocuments
      x-openapi-router-controller: openapi_server.controllers.processing_documents_controller
    get:
      description: This method retrieves analysis results for the single document
        by its unique ID or the document’s status in queue if it did not analyzed
        yet. Semantria guarantees delivering of all documents back to the client even
        if they FAILED on Semantria side due to some reason.
      operationId: receive_document_analytic_data
      parameters:
      - description: Identifier of configuration used for analysis.
        in: query
        name: config_id
        schema:
          type: string
      - description: Document ID
        in: path
        name: document_id
        required: true
        schema:
          type: string
      - in: path
        name: content_type
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentAnalyticData'
            application/xml:
              schema:
                $ref: '#/components/schemas/DocumentAnalyticData'
          description: Client request accepted. Server responds with processed document
            or its status.
        "401":
          content: {}
          description: Authentication failed.
        "402":
          content: {}
          description: Unauthorized. Limit of system calls is reached or subscription
            is expired.
        "404":
          content: {}
          description: No documents with provided ID found on server.
        "500":
          content: {}
          description: Server side issue. Server may respond with the details in response
            body.
      summary: Retrieve document analysis or its status in queue
      tags:
      - ProcessingDocuments
      x-openapi-router-controller: openapi_server.controllers.processing_documents_controller
  /entities.{content_type}:
    delete:
      description: This method removes certain user entities by their names on Semantria
        side.
      operationId: delete_entities
      parameters:
      - in: path
        name: content_type
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: No response was specified
        "202":
          content: {}
          description: Client request accepted and queued.
        "400":
          content: {}
          description: Incoming request body is incorrect. Server responds with details.
        "401":
          content: {}
          description: Authentication failed.
        "402":
          content: {}
          description: Unauthorized. Limit of system calls is reached or subscription
            is expired.
        "403":
          content: {}
          description: Forbidden. Server responds if client tries to remove primary
            configuration.
        "500":
          content: {}
          description: Server side issue. Server may respond with the details in response
            body.
      summary: Remove user entities
      tags:
      - Entities
      x-openapi-router-controller: openapi_server.controllers.entities_controller
    get:
      description: This method retrieves list of user entities available on Semantria
        side.
      operationId: get_entities
      parameters:
      - description: Identifier of configuration user entities linked to.
        in: query
        name: config_id
        schema:
          type: string
      - in: path
        name: content_type
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Entity_ResponseVersion'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Entity_ResponseVersion'
                type: array
          description: Client request accepted and queued. Server responds with the
            entities list.
        "202":
          content: {}
          description: Client request accepted and no entities found. Server responds
            with empty body.
        "401":
          content: {}
          description: Authentication failed.
        "402":
          content: {}
          description: Unauthorized. Limit of system calls is reached or subscription
            is expired.
        "500":
          content: {}
          description: Server side issue. Server may respond with the details in response
            body.
      summary: Retrieve user entities
      tags:
      - Entities
      x-openapi-router-controller: openapi_server.controllers.entities_controller
    post:
      description: This method adds user entities on Semantria side.
      operationId: add_entities
      parameters:
      - description: Identifier of configuration user entities linked to.
        in: query
        name: config_id
        schema:
          type: string
      - in: path
        name: content_type
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Request%20class'
        description: List of parametrized JSON or XML objects.
        required: true
        x-body-name: User entities
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Entity_ResponseVersion'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Entity_ResponseVersion'
                type: array
          description: No response was specified
        "202":
          content: {}
          description: Client request accepted and queued.
        "400":
          content: {}
          description: Incoming request body is incorrect. Server responds with details.
        "401":
          content: {}
          description: Authentication failed.
        "402":
          content: {}
          description: Unauthorized. Limit of system calls is reached or subscription
            is expired.
        "406":
          content: {}
          description: Number of allowed entities per configuration achieved.
        "500":
          content: {}
          description: Server side issue. Server may respond with the details in response
            body.
      summary: Add user entities
      tags:
      - Entities
      x-codegen-request-body-name: User entities
      x-openapi-router-controller: openapi_server.controllers.entities_controller
    put:
      description: This method updates user entities by unique IDs on Semantria side.
      operationId: update_entities
      parameters:
      - description: Identifier of configuration user entities linked to.
        in: query
        name: config_id
        schema:
          type: string
      - in: path
        name: content_type
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Request%20class'
        description: List of parametrized JSON or XML objects.
        required: true
        x-body-name: User entities
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Entity_ResponseVersion'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Entity_ResponseVersion'
                type: array
          description: No response was specified
        "202":
          content: {}
          description: Client request accepted and queued.
        "400":
          content: {}
          description: Incoming request body is incorrect. Server responds with details.
        "401":
          content: {}
          description: Authentication failed.
        "402":
          content: {}
          description: Unauthorized. Limit of system calls is reached or subscription
            is expired.
        "406":
          content: {}
          description: Number of allowed entities per configuration achieved.
        "500":
          content: {}
          description: Server side issue. Server may respond with the details in response
            body.
      summary: Update user entities
      tags:
      - Entities
      x-codegen-request-body-name: User entities
      x-openapi-router-controller: openapi_server.controllers.entities_controller
  /features.{content_type}:
    get:
      description: This method returns list of supported features per languages supported
        by Semantria API. Let the users know about API capabilities.
      operationId: get_features
      parameters:
      - description: Filter features by specified language
        in: query
        name: language
        schema:
          type: string
      - in: path
        name: content_type
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Feature'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Feature'
                type: array
          description: Client request accepted and queued. Server responds with subscription
            details.
        "401":
          content: {}
          description: Authentication failed.
        "402":
          content: {}
          description: Unauthorized. Limit of system calls is reached or subscription
            is expired.
        "500":
          content: {}
          description: Server side issue. Server may respond with the details in response
            body.
      summary: Retrieve supported features
      tags:
      - Features
      x-openapi-router-controller: openapi_server.controllers.features_controller
  /phrases.{content_type}:
    delete:
      description: This method removes certain sentiment-bearing phrases by their
        names on Semantria side.
      operationId: delete_phrases
      parameters:
      - description: Identifier of configuration phrases linked to.
        in: query
        name: config_id
        schema:
          type: string
      - in: path
        name: content_type
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              items:
                type: string
              type: array
        description: List of sentiment-bearing phrase identifiers.
        required: true
        x-body-name: Sentiment phrase IDs
      responses:
        "200":
          content: {}
          description: No response was specified
        "202":
          content: {}
          description: Client request accepted and queued.
        "400":
          content: {}
          description: Incoming request body is incorrect. Server responds with details.
        "401":
          content: {}
          description: Authentication failed.
        "402":
          content: {}
          description: Unauthorized. Limit of system calls is reached or subscription
            is expired.
        "403":
          content: {}
          description: Forbidden. Server responds if client tries to remove primary
            configuration.
        "500":
          content: {}
          description: Server side issue. Server may respond with the details in response
            body.
      summary: Remove sentiment-bearing phrases
      tags:
      - Phrases
      x-codegen-request-body-name: Sentiment phrase IDs
      x-openapi-router-controller: openapi_server.controllers.phrases_controller
    get:
      description: This method retrieves list of sentiment-bearing phrases available
        on Semantria side.
      operationId: get_phrases
      parameters:
      - description: Identifier of configuration phrases linked to.
        in: query
        name: config_id
        schema:
          type: string
      - in: path
        name: content_type
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Phrase_ResponseVersion'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Phrase_ResponseVersion'
                type: array
          description: Client request accepted and queued. Server responds with the
            sentiment-bearing phrases list.
        "202":
          content: {}
          description: Client request accepted and no sentiment-bearing phrases found.
            Server responds with empty body.
        "401":
          content: {}
          description: Authentication failed.
        "402":
          content: {}
          description: Unauthorized. Limit of system calls is reached or subscription
            is expired.
        "500":
          content: {}
          description: Server side issue. Server may respond with the details in response
            body.
      summary: Retrieve sentiment-bearing phrases
      tags:
      - Phrases
      x-openapi-router-controller: openapi_server.controllers.phrases_controller
    post:
      description: This method adds sentiment-bearing phrases on Semantria side.
      operationId: add_phrases
      parameters:
      - description: Identifier of configuration phrases linked to.
        in: query
        name: config_id
        schema:
          type: string
      - in: path
        name: content_type
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Request%20class'
        description: List of parametrized JSON or XML objects.
        required: true
        x-body-name: Sentiment phrases
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Phrase_ResponseVersion'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Phrase_ResponseVersion'
                type: array
          description: No response was specified
        "202":
          content: {}
          description: Client request accepted and queued.
        "400":
          content: {}
          description: Incoming request body is incorrect. Server responds with details.
        "401":
          content: {}
          description: Authentication failed.
        "402":
          content: {}
          description: Unauthorized. Limit of system calls is reached or subscription
            is expired.
        "406":
          content: {}
          description: Number of allowed sentiment-bearing phrases per configuration
            achieved.
        "500":
          content: {}
          description: Server side issue. Server may respond with the details in response
            body.
      summary: Add sentiment-bearing phrases
      tags:
      - Phrases
      x-codegen-request-body-name: Sentiment phrases
      x-openapi-router-controller: openapi_server.controllers.phrases_controller
    put:
      description: This method updates sentiment-bearing phrases by unique IDs on
        Semantria side.
      operationId: update_phrases
      parameters:
      - description: Identifier of configuration phrases linked to.
        in: query
        name: config_id
        schema:
          type: string
      - in: path
        name: content_type
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Request%20class'
        description: List of parametrized JSON or XML objects.
        required: true
        x-body-name: Sentiment phrases
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Phrase_ResponseVersion'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Phrase_ResponseVersion'
                type: array
          description: No response was specified
        "202":
          content: {}
          description: Client request accepted and queued.
        "400":
          content: {}
          description: Incoming request body is incorrect. Server responds with details.
        "401":
          content: {}
          description: Authentication failed.
        "402":
          content: {}
          description: Unauthorized. Limit of system calls is reached or subscription
            is expired.
        "406":
          content: {}
          description: Number of allowed sentiment-bearing phrases per configuration
            achieved.
        "500":
          content: {}
          description: Server side issue. Server may respond with the details in response
            body.
      summary: Updates sentiment-bearing phrases
      tags:
      - Phrases
      x-codegen-request-body-name: Sentiment phrases
      x-openapi-router-controller: openapi_server.controllers.phrases_controller
  /queries.{content_type}:
    delete:
      description: This method removes certain queries by their IDs on Semantria side.
      operationId: delete_queries
      parameters:
      - description: Identifier of configuration queries linked to.
        in: query
        name: config_id
        schema:
          type: string
      - in: path
        name: content_type
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              items:
                type: string
              type: array
        description: List of query identifiers.
        required: true
        x-body-name: Query IDs
      responses:
        "200":
          content: {}
          description: No response was specified
        "202":
          content: {}
          description: Client request accepted and queued.
        "400":
          content: {}
          description: Incoming request body is incorrect. Server responds with details.
        "401":
          content: {}
          description: Authentication failed.
        "402":
          content: {}
          description: Unauthorized. Limit of system calls is reached or subscription
            is expired.
        "403":
          content: {}
          description: Forbidden. Server responds if client tries to remove primary
            configuration.
        "500":
          content: {}
          description: Server side issue. Server may respond with the details in response
            body.
      summary: Remove queries
      tags:
      - Queries
      x-codegen-request-body-name: Query IDs
      x-openapi-router-controller: openapi_server.controllers.queries_controller
    get:
      description: This method retrieves list of queries available on Semantria side.
      operationId: get_queries
      parameters:
      - description: Identifier of configuration queries linked to.
        in: query
        name: config_id
        schema:
          type: string
      - in: path
        name: content_type
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Query_ResponseVersion'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Query_ResponseVersion'
                type: array
          description: Client request accepted and queued. Server responds with the
            queries list.
        "202":
          content: {}
          description: Client request accepted and no queries found. Server responds
            with empty body.
        "401":
          content: {}
          description: Authentication failed.
        "402":
          content: {}
          description: Unauthorized. Limit of system calls is reached or subscription
            is expired.
        "500":
          content: {}
          description: Server side issue. Server may respond with the details in response
            body.
      summary: Retrieve queries
      tags:
      - Queries
      x-openapi-router-controller: openapi_server.controllers.queries_controller
    post:
      description: This method adds queries on Semantria side.
      operationId: add_queries
      parameters:
      - description: Identifier of configuration queries linked to.
        in: query
        name: config_id
        schema:
          type: string
      - in: path
        name: content_type
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Request%20class'
        description: List of parametrized JSON or XML objects.
        required: true
        x-body-name: Queries
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Query_ResponseVersion'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Query_ResponseVersion'
                type: array
          description: No response was specified
        "202":
          content: {}
          description: Client request accepted and queued.
        "400":
          content: {}
          description: Incoming request body is incorrect. Server responds with details.
        "401":
          content: {}
          description: Authentication failed.
        "402":
          content: {}
          description: Unauthorized. Limit of system calls is reached or subscription
            is expired.
        "406":
          content: {}
          description: Number of allowed queries per configuration achieved.
        "500":
          content: {}
          description: Server side issue. Server may respond with the details in response
            body.
      summary: Add or update queries
      tags:
      - Queries
      x-codegen-request-body-name: Queries
      x-openapi-router-controller: openapi_server.controllers.queries_controller
    put:
      description: This method updates queries by unique IDs on Semantria side.
      operationId: update_queries
      parameters:
      - description: Identifier of configuration queries linked to.
        in: query
        name: config_id
        schema:
          type: string
      - in: path
        name: content_type
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Request%20class'
        description: List of parametrized JSON or XML objects.
        required: true
        x-body-name: Queries
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Query_ResponseVersion'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/Query_ResponseVersion'
                type: array
          description: No response was specified
        "202":
          content: {}
          description: Client request accepted and queued.
        "400":
          content: {}
          description: Incoming request body is incorrect. Server responds with details.
        "401":
          content: {}
          description: Authentication failed.
        "402":
          content: {}
          description: Unauthorized. Limit of system calls is reached or subscription
            is expired.
        "406":
          content: {}
          description: Number of allowed queries per configuration achieved.
        "500":
          content: {}
          description: Server side issue. Server may respond with the details in response
            body.
      summary: Update queries
      tags:
      - Queries
      x-codegen-request-body-name: Queries
      x-openapi-router-controller: openapi_server.controllers.queries_controller
  /statistics.{content_type}:
    get:
      description: "This method retrieves overall and per configuration usage statistics\
        \ for specific timeframe. Statistics ordered per available configurations.\
        \ Available interval values are current <b>hour</b>, <b>day</b>, <b>week</b>,\
        \ <b>month</b> and <b>year</b>."
      operationId: get_statistic
      parameters:
      - description: Configuration identifier for usage statistics retrieving.
        in: query
        name: config_id
        schema:
          type: string
      - description: "Hour, Day, Week, Month, Year values are supported."
        in: query
        name: interval
        schema:
          type: string
      - in: path
        name: content_type
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Statistic'
            application/xml:
              schema:
                $ref: '#/components/schemas/Statistic'
          description: Client request accepted. Server responds with statistics details.
        "401":
          content: {}
          description: Authentication failed.
        "402":
          content: {}
          description: Unauthorized. Limit of system calls is reached or subscription
            is expired.
        "500":
          content: {}
          description: Server side issue. Server may respond with the details in response
            body.
      summary: Retrieve usage statistics
      tags:
      - Statistics
      x-openapi-router-controller: openapi_server.controllers.statistics_controller
  /status.{content_type}:
    get:
      description: "This method retrieves API status information such as the app version,\
        \ current API version, supported languages and encodings, the overall service\
        \ status, etc."
      operationId: get_status
      parameters:
      - in: path
        name: content_type
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
            application/xml:
              schema:
                $ref: '#/components/schemas/Status'
          description: Client request accepted. Server responds with status object.
        "401":
          content: {}
          description: Authentication failed.
        "402":
          content: {}
          description: Unauthorized. Limit of system calls is reached or subscription
            is expired.
        "500":
          content: {}
          description: Server side issue. Server may respond with the details in response
            body.
      summary: Retrieve API status
      tags:
      - Status
      x-openapi-router-controller: openapi_server.controllers.status_controller
  /subscription.{content_type}:
    get:
      description: "This method retrieves user's subscription details that consist\
        \ of the list of allowed features, configured limits and options on Semantria\
        \ side."
      operationId: get_subscription
      parameters:
      - in: path
        name: content_type
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
            application/xml:
              schema:
                $ref: '#/components/schemas/Subscription'
          description: Client request accepted and queued. Server responds with subscription
            details.
        "401":
          content: {}
          description: Authentication failed.
        "402":
          content: {}
          description: Unauthorized. Limit of system calls is reached or subscription
            is expired.
        "500":
          content: {}
          description: Server side issue. Server may respond with the details in response
            body.
      summary: Retrieve subscription details
      tags:
      - Subscription
      x-openapi-router-controller: openapi_server.controllers.subscription_controller
  /taxonomy.{content_type}:
    delete:
      description: This method removes certain taxonomy nodes by their IDs on Semantria
        side.
      operationId: delete_taxonomy
      parameters:
      - description: Identifier of configuration queries linked to.
        in: query
        name: config_id
        schema:
          type: string
      - in: path
        name: content_type
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              items:
                type: string
              type: array
        description: List of taxonomy node identifiers.
        required: true
        x-body-name: Taxonomy node IDs
      responses:
        "200":
          content: {}
          description: No response was specified
        "202":
          content: {}
          description: Client request accepted and queued.
        "400":
          content: {}
          description: Incoming request body is incorrect. Server responds with details.
        "401":
          content: {}
          description: Authentication failed.
        "402":
          content: {}
          description: Unauthorized. Limit of system calls is reached or subscription
            is expired.
        "403":
          content: {}
          description: Forbidden. Server responds if client tries to remove primary
            configuration.
        "500":
          content: {}
          description: Server side issue. Server may respond with the details in response
            body.
      summary: Remove taxonomy nodes
      tags:
      - Taxonomy
      x-codegen-request-body-name: Taxonomy node IDs
      x-openapi-router-controller: openapi_server.controllers.taxonomy_controller
    get:
      description: This method retrieves list of taxonomy available on Semantria side.
      operationId: get_taxonomy
      parameters:
      - description: Identifier of configuration taxonomy linked to.
        in: query
        name: config_id
        schema:
          type: string
      - in: path
        name: content_type
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TaxonomyNode_ResponseVersion'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/TaxonomyNode_ResponseVersion'
                type: array
          description: Client request accepted and queued. Server responds with the
            taxonomy list.
        "202":
          content: {}
          description: Client request accepted and no taxonomy found. Server responds
            with empty body.
        "401":
          content: {}
          description: Authentication failed.
        "402":
          content: {}
          description: Unauthorized. Limit of system calls is reached or subscription
            is expired.
        "500":
          content: {}
          description: Server side issue. Server may respond with the details in response
            body.
      summary: Retrieve taxonomy
      tags:
      - Taxonomy
      x-openapi-router-controller: openapi_server.controllers.taxonomy_controller
    post:
      description: This method adds taxonomy nodes on Semantria side.
      operationId: add_taxonomy
      parameters:
      - description: Identifier of configuration queries linked to.
        in: query
        name: config_id
        schema:
          type: string
      - in: path
        name: content_type
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Request%20class'
        description: List of parametrized JSON or XML objects.
        required: true
        x-body-name: Taxonomy
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TaxonomyNode_ResponseVersion'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/TaxonomyNode_ResponseVersion'
                type: array
          description: No response was specified
        "202":
          content: {}
          description: Client request accepted and queued.
        "400":
          content: {}
          description: Incoming request body is incorrect. Server responds with details.
        "401":
          content: {}
          description: Authentication failed.
        "402":
          content: {}
          description: Unauthorized. Limit of system calls is reached or subscription
            is expired.
        "406":
          content: {}
          description: Number of allowed queries per configuration achieved.
        "500":
          content: {}
          description: Server side issue. Server may respond with the details in response
            body.
      summary: Add taxonomy nodes
      tags:
      - Taxonomy
      x-codegen-request-body-name: Taxonomy
      x-openapi-router-controller: openapi_server.controllers.taxonomy_controller
    put:
      description: This method updates taxonomy nodes on Semantria side.
      operationId: update_taxonomy
      parameters:
      - description: Identifier of configuration queries linked to.
        in: query
        name: config_id
        schema:
          type: string
      - in: path
        name: content_type
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Request%20class'
        description: List of parametrized JSON or XML objects.
        required: true
        x-body-name: Taxonomy
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TaxonomyNode_ResponseVersion'
                type: array
            application/xml:
              schema:
                items:
                  $ref: '#/components/schemas/TaxonomyNode_ResponseVersion'
                type: array
          description: No response was specified
        "202":
          content: {}
          description: Client request accepted and queued.
        "400":
          content: {}
          description: Incoming request body is incorrect. Server responds with details.
        "401":
          content: {}
          description: Authentication failed.
        "402":
          content: {}
          description: Unauthorized. Limit of system calls is reached or subscription
            is expired.
        "406":
          content: {}
          description: Number of allowed queries per configuration achieved.
        "500":
          content: {}
          description: Server side issue. Server may respond with the details in response
            body.
      summary: Update taxonomy nodes
      tags:
      - Taxonomy
      x-codegen-request-body-name: Taxonomy
      x-openapi-router-controller: openapi_server.controllers.taxonomy_controller
components:
  schemas:
    Attribute:
      example:
        mentions:
        - is_negated: true
          negating_phrase: negating_phrase
          locations:
          - offset: 5
            length: 1
            index: 6
          - offset: 5
            length: 1
            index: 6
          label: label
        - is_negated: true
          negating_phrase: negating_phrase
          locations:
          - offset: 5
            length: 1
            index: 6
          - offset: 5
            length: 1
            index: 6
          label: label
        count: 0
        label: label
      properties:
        count:
          description: The count of occurrences of the attribute across the documents
          minimum: 0
          title: count
          type: integer
        label:
          description: The text of the attribute
          title: label
          type: string
        mentions:
          description: Returns genuine forms of attribute mentioned across the documents
          items:
            $ref: '#/components/schemas/Mention'
          title: mentions
          type: array
      required:
      - count
      - label
      - mentions
      title: Attribute
      type: object
    AutoCategory:
      example:
        sentiment_score: 6.027456183070403
        strength_score: 1.4658129805029452
        categories:
        - strength_score: 0.8008281904610115
          title: title
          type: type
        - strength_score: 0.8008281904610115
          title: title
          type: type
        title: title
        type: type
        sentiment_polarity: negative
      properties:
        categories:
          description: List of sub-categories of the current category if applicable
          items:
            $ref: '#/components/schemas/SubCategory'
          title: categories
          type: array
        sentiment_polarity:
          description: "Verbal representation of sentiment score. Can be \"negative\"\
            , \"positive\" or \"neutral\""
          enum:
          - negative
          - positive
          - neutral
          title: sentiment_polarity
          type: string
        sentiment_score:
          description: The sentiment score associated with this category
          format: double
          title: sentiment_score
          type: number
        strength_score:
          description: Strength of the category matches with the document content
          format: double
          title: strength_score
          type: number
        title:
          description: "The category title, which is its label in the text"
          title: title
          type: string
        type:
          description: Type of category; can be either "node" (root level) or "leaf"
            (nested) value
          title: type
          type: string
      required:
      - categories
      - sentiment_polarity
      - sentiment_score
      - strength_score
      - title
      - type
      title: AutoCategory
      type: object
    BlacklistItem_InsertVersion:
      properties:
        name:
          description: Blacklist item name
          type: string
      required:
      - name
      type: object
    BlacklistItem_ResponseVersion:
      example:
        name: name
        modified: modified
        id: id
      properties:
        id:
          description: Unique blacklist item identifier
          title: id
          type: string
        modified:
          description: The timestamp of the latest update of the record. Creation
            date of update didn't occur
          title: modified
          type: string
        name:
          description: Blacklist item name
          title: name
          type: string
      required:
      - id
      - modified
      - name
      title: BlacklistItem_ResponseVersion
      type: object
    BlacklistItem_UpdateVersion:
      properties:
        id:
          description: Unique blacklist item identifier
          type: string
        name:
          description: Blacklist item name
          type: string
      required:
      - id
      - name
      type: object
    Category_InsertVersion:
      properties:
        name:
          description: Category name
          type: string
        samples:
          description: Category samples
          items:
            type: string
          type: array
        weight:
          description: Category weight
          format: float
          type: number
      required:
      - name
      - samples
      - weight
      type: object
    Category_ResponseVersion:
      example:
        name: name
        modified: modified
        weight: 0.8008282
        id: id
        samples:
        - samples
        - samples
      properties:
        id:
          description: Unique category identifier
          title: id
          type: string
        modified:
          description: The timestamp of the latest update of the record. Creation
            date of update didn't occur
          title: modified
          type: string
        name:
          description: Category name
          title: name
          type: string
        samples:
          description: Category samples
          items:
            type: string
          title: samples
          type: array
        weight:
          description: Category weight
          format: float
          title: weight
          type: number
      required:
      - id
      - modified
      - name
      - samples
      - weight
      title: Category_ResponseVersion
      type: object
    Category_UpdateVersion:
      properties:
        id:
          description: Unique category identifier
          type: string
        name:
          description: Category name
          type: string
        samples:
          description: Category samples
          items:
            type: string
          type: array
        weight:
          description: Category weight
          format: float
          type: number
      required:
      - id
      - name
      - samples
      - weight
      type: object
    Collection:
      example:
        documents:
        - documents
        - documents
        job_id: job_id
        id: id
        tag: tag
      properties:
        documents:
          description: List of documents text that need to be analyzed by the service
          items:
            type: string
          title: documents
          type: array
        id:
          description: Up to 32 symbols unique identifier of document assigned and
            tracked by client
          title: id
          type: string
        job_id:
          description: Specific marker of incoming job that can be used then for collections
            retrieving
          title: job_id
          type: string
        tag:
          description: Any text of up to 50 characters used like marker
          title: tag
          type: string
      required:
      - documents
      - id
      - job_id
      - tag
      title: Collection
      type: object
    CollectionAnalyticData:
      example:
        themes:
        - sentiment_score: 6.84685269835264
          themes_count: 0
          stemmed: stemmed
          phrases_count: 0
          normalized: normalized
          mentions:
          - is_negated: true
            negating_phrase: negating_phrase
            locations:
            - offset: 5
              length: 1
              index: 6
            - offset: 5
              length: 1
              index: 6
            label: label
          - is_negated: true
            negating_phrase: negating_phrase
            locations:
            - offset: 5
              length: 1
              index: 6
            - offset: 5
              length: 1
              index: 6
            label: label
          title: title
          sentiment_polarity: negative
        - sentiment_score: 6.84685269835264
          themes_count: 0
          stemmed: stemmed
          phrases_count: 0
          normalized: normalized
          mentions:
          - is_negated: true
            negating_phrase: negating_phrase
            locations:
            - offset: 5
              length: 1
              index: 6
            - offset: 5
              length: 1
              index: 6
            label: label
          - is_negated: true
            negating_phrase: negating_phrase
            locations:
            - offset: 5
              length: 1
              index: 6
            - offset: 5
              length: 1
              index: 6
            label: label
          title: title
          sentiment_polarity: negative
        config_id: config_id
        entities:
        - entity_type: entity_type
          positive_count: 0
          mentions:
          - is_negated: true
            negating_phrase: negating_phrase
            locations:
            - offset: 5
              length: 1
              index: 6
            - offset: 5
              length: 1
              index: 6
            label: label
          - is_negated: true
            negating_phrase: negating_phrase
            locations:
            - offset: 5
              length: 1
              index: 6
            - offset: 5
              length: 1
              index: 6
            label: label
          neutral_count: 0
          count: 0
          negative_count: 0
          label: label
          title: title
          type: named
        - entity_type: entity_type
          positive_count: 0
          mentions:
          - is_negated: true
            negating_phrase: negating_phrase
            locations:
            - offset: 5
              length: 1
              index: 6
            - offset: 5
              length: 1
              index: 6
            label: label
          - is_negated: true
            negating_phrase: negating_phrase
            locations:
            - offset: 5
              length: 1
              index: 6
            - offset: 5
              length: 1
              index: 6
            label: label
          neutral_count: 0
          count: 0
          negative_count: 0
          label: label
          title: title
          type: named
        job_id: job_id
        topics:
        - sentiment_score: 1.0246457001441578
          id: id
          title: title
          type: concept
          hitcount: 0
          sentiment_polarity: negative
        - sentiment_score: 1.0246457001441578
          id: id
          title: title
          type: concept
          hitcount: 0
          sentiment_polarity: negative
        id: id
        tag: tag
        taxonomy:
        - sentiment_score: 1.0246457001441578
          id: id
          title: title
          type: concept
          hitcount: 0
          sentiment_polarity: negative
        - sentiment_score: 1.0246457001441578
          id: id
          title: title
          type: concept
          hitcount: 0
          sentiment_polarity: negative
        facets:
        - positive_count: 0
          mentions:
          - is_negated: true
            negating_phrase: negating_phrase
            locations:
            - offset: 5
              length: 1
              index: 6
            - offset: 5
              length: 1
              index: 6
            label: label
          - is_negated: true
            negating_phrase: negating_phrase
            locations:
            - offset: 5
              length: 1
              index: 6
            - offset: 5
              length: 1
              index: 6
            label: label
          neutral_count: 0
          count: 0
          negative_count: 0
          attributes:
          - mentions:
            - is_negated: true
              negating_phrase: negating_phrase
              locations:
              - offset: 5
                length: 1
                index: 6
              - offset: 5
                length: 1
                index: 6
              label: label
            - is_negated: true
              negating_phrase: negating_phrase
              locations:
              - offset: 5
                length: 1
                index: 6
              - offset: 5
                length: 1
                index: 6
              label: label
            count: 0
            label: label
          - mentions:
            - is_negated: true
              negating_phrase: negating_phrase
              locations:
              - offset: 5
                length: 1
                index: 6
              - offset: 5
                length: 1
                index: 6
              label: label
            - is_negated: true
              negating_phrase: negating_phrase
              locations:
              - offset: 5
                length: 1
                index: 6
              - offset: 5
                length: 1
                index: 6
              label: label
            count: 0
            label: label
          label: label
        - positive_count: 0
          mentions:
          - is_negated: true
            negating_phrase: negating_phrase
            locations:
            - offset: 5
              length: 1
              index: 6
            - offset: 5
              length: 1
              index: 6
            label: label
          - is_negated: true
            negating_phrase: negating_phrase
            locations:
            - offset: 5
              length: 1
              index: 6
            - offset: 5
              length: 1
              index: 6
            label: label
          neutral_count: 0
          count: 0
          negative_count: 0
          attributes:
          - mentions:
            - is_negated: true
              negating_phrase: negating_phrase
              locations:
              - offset: 5
                length: 1
                index: 6
              - offset: 5
                length: 1
                index: 6
              label: label
            - is_negated: true
              negating_phrase: negating_phrase
              locations:
              - offset: 5
                length: 1
                index: 6
              - offset: 5
                length: 1
                index: 6
              label: label
            count: 0
            label: label
          - mentions:
            - is_negated: true
              negating_phrase: negating_phrase
              locations:
              - offset: 5
                length: 1
                index: 6
              - offset: 5
                length: 1
                index: 6
              label: label
            - is_negated: true
              negating_phrase: negating_phrase
              locations:
              - offset: 5
                length: 1
                index: 6
              - offset: 5
                length: 1
                index: 6
              label: label
            count: 0
            label: label
          label: label
        status: queued
      properties:
        config_id:
          description: Unique configuration identifier. Usually 36 alphanumeric characters
          title: config_id
          type: string
        entities:
          description: Returns the named entities and user defined entities from the
            text
          items:
            $ref: '#/components/schemas/Entity'
          title: entities
          type: array
        facets:
          description: Returns the facets extracted across all documents in the collection
          items:
            $ref: '#/components/schemas/Facet'
          title: facets
          type: array
        id:
          description: Unique collection identifier. Can be up to 36 alphanumeric
            characters
          title: id
          type: string
        job_id:
          description: "Specific marker of a job collection belongs to, can be used\
            \ for collections ordering on client side."
          title: job_id
          type: string
        status:
          description: Status of the collection
          enum:
          - queued
          - processed
          - failed
          title: status
          type: string
        tag:
          description: Any text of up to 50 characters used like marker
          title: tag
          type: string
        taxonomy:
          description: Returns the taxonomy determined for the text
          items:
            $ref: '#/components/schemas/Topic'
          title: taxonomy
          type: array
        themes:
          description: Returns themes across the documents
          items:
            $ref: '#/components/schemas/Theme'
          title: themes
          type: array
        topics:
          description: Returns the concept and query defined topics determined for
            the text
          items:
            $ref: '#/components/schemas/Topic'
          title: topics
          type: array
      required:
      - config_id
      - entities
      - facets
      - id
      - job_id
      - status
      - tag
      - taxonomy
      - themes
      - topics
      title: CollectionAnalyticData
      type: object
    ConfigurationCollectionSection:
      example:
        themes_limit: 14
        facets_limit: 14
        facet_mentions_limit: 4
        user_entities_limit: 2
        named_entities_limit: 18
        user_mentions_limit: 2
        attribute_mentions_limit: 2
        facet_atts_limit: 11
        named_mentions_limit: 7
        concept_topics_limit: 11
        theme_mentions_limit: 8
        query_topics_limit: 4
      properties:
        attribute_mentions_limit:
          description: "Limits the number of mentions of attribute responded from\
            \ the server. Default: 0"
          maximum: 20
          minimum: 0
          title: attribute_mentions_limit
          type: integer
        concept_topics_limit:
          description: "Limits the number of concept topics responded from the service.\
            \ Default: 5"
          maximum: 20
          minimum: 0
          title: concept_topics_limit
          type: integer
        facet_atts_limit:
          description: "Limits the number of facets which will be responded from the\
            \ server. Default: 5"
          maximum: 20
          minimum: 0
          title: facet_atts_limit
          type: integer
        facet_mentions_limit:
          description: "Limits the number of mentions of facet responded from the\
            \ server. Default: 0"
          maximum: 20
          minimum: 0
          title: facet_mentions_limit
          type: integer
        facets_limit:
          description: "Limits the number of facets which will be responded from the\
            \ server.  Default: 15"
          maximum: 20
          minimum: 0
          title: facets_limit
          type: integer
        named_entities_limit:
          description: "Limits the number of named entities responded from the service.\
            \ Default: 5"
          maximum: 20
          minimum: 0
          title: named_entities_limit
          type: integer
        named_mentions_limit:
          description: "Limits the number of mentions of theme responded from the\
            \ server. Default: 0"
          maximum: 20
          minimum: 0
          title: named_mentions_limit
          type: integer
        query_topics_limit:
          description: "Limits the number of query topics responded from the service.\
            \ Default: 5"
          maximum: 20
          minimum: 0
          title: query_topics_limit
          type: integer
        theme_mentions_limit:
          description: "Limits the number of entity mentions responded from the server.\
            \ Default: 0"
          maximum: 20
          minimum: 0
          title: theme_mentions_limit
          type: integer
        themes_limit:
          description: "Limits the number of themes responded from the service. Default:\
            \ 5"
          maximum: 20
          minimum: 0
          title: themes_limit
          type: integer
        user_entities_limit:
          description: "Limits the number of user entities the service responds. Default:\
            \ 15"
          maximum: 20
          minimum: 0
          title: user_entities_limit
          type: integer
        user_mentions_limit:
          description: "Limits the number of user entity mentions the service responds.\
            \ Default: 0"
          maximum: 20
          minimum: 0
          title: user_mentions_limit
          type: integer
      required:
      - attribute_mentions_limit
      - concept_topics_limit
      - facet_atts_limit
      - facet_mentions_limit
      - facets_limit
      - named_entities_limit
      - named_mentions_limit
      - query_topics_limit
      - theme_mentions_limit
      - themes_limit
      - user_entities_limit
      - user_mentions_limit
      title: ConfigurationCollectionSection
      type: object
    ConfigurationDocumentSection:
      example:
        themes_limit: 7
        user_opinions_limit: 5
        user_relations_limit: 13
        user_mentions_limit: 2
        possible_phrases_limit: 13
        named_opinions_limit: 10
        intentions: true
        named_relations_limit: 19
        concept_topics_limit: 13
        theme_mentions_limit: 12
        detect_language: true
        query_topics_limit: 17
        user_entities_limit: 13
        named_entities_limit: 2
        summary_limit: 18
        entity_themes_limit: 14
        pos_types: All
        named_mentions_limit: 9
        auto_categories_limit: 2
        phrases_limit: 18
        model_sentiment: true
      properties:
        auto_categories_limit:
          description: "Limits the number of auto categories the service responds.\
            \ Default: 5"
          maximum: 20
          minimum: 0
          title: auto_categories_limit
          type: integer
        concept_topics_limit:
          description: "Limits the number of concept topics the service responds.\
            \ Default: 5"
          maximum: 20
          minimum: 0
          title: concept_topics_limit
          type: integer
        detect_language:
          description: "Switches on language detection feature. Default: true"
          title: detect_language
          type: boolean
        entity_themes_limit:
          description: "Limits the number of entity themes the service responds. Default:\
            \ 0"
          maximum: 20
          minimum: 0
          title: entity_themes_limit
          type: integer
        intentions:
          description: "Switches on intentions detection feature. Default: false"
          title: intentions
          type: boolean
        model_sentiment:
          description: "Switches on/off model-based sentiment feature. Default: false"
          title: model_sentiment
          type: boolean
        named_entities_limit:
          description: "Limits the number of named entities the service responds.\
            \ Default: 5"
          maximum: 20
          minimum: 0
          title: named_entities_limit
          type: integer
        named_mentions_limit:
          description: "Limits the number of named entity related mentions. Default:\
            \ 0"
          maximum: 20
          minimum: 0
          title: named_mentions_limit
          type: integer
        named_opinions_limit:
          description: "Limits the number of named entity opinions the service responds.\
            \ Default: 0"
          maximum: 20
          minimum: 0
          title: named_opinions_limit
          type: integer
        named_relations_limit:
          description: "Limits the number of named entity relations the service responds.\
            \ Default: 0"
          maximum: 20
          minimum: 0
          title: named_relations_limit
          type: integer
        phrases_limit:
          description: "Limits the number of responded sentiment-bearing phrases for\
            \ document. Default: 0"
          maximum: 20
          minimum: 0
          title: phrases_limit
          type: integer
        pos_types:
          description: Defines parts-of-speech which will be responded by the server
          enum:
          - All
          - Noun
          - Verb
          - Adjective
          - Determiner
          - Misc
          - Twitter
          - Chinese
          title: pos_types
          type: string
        possible_phrases_limit:
          description: "Limits the number of responded possible phrases which may\
            \ affect on sentiment score extraction. Default: 0"
          maximum: 20
          minimum: 0
          title: possible_phrases_limit
          type: integer
        query_topics_limit:
          description: "Limits the number of query topics the service responds. Default:\
            \ 5"
          maximum: 20
          minimum: 0
          title: query_topics_limit
          type: integer
        summary_limit:
          description: "Limits the number of sentences for the document summary feature.\
            \ Default: 3"
          maximum: 20
          minimum: 0
          title: summary_limit
          type: integer
        theme_mentions_limit:
          description: "Limits the number of document and entity related theme mentions.\
            \ Default: 0"
          maximum: 20
          minimum: 0
          title: theme_mentions_limit
          type: integer
        themes_limit:
          description: "Limits the number of document themes the service responds.\
            \ Default: 0"
          maximum: 20
          minimum: 0
          title: themes_limit
          type: integer
        user_entities_limit:
          description: "Limits the number of user entities the service responds. Default:\
            \ 5"
          maximum: 20
          minimum: 0
          title: user_entities_limit
          type: integer
        user_mentions_limit:
          description: "Limits the number of user entity related mentions. Default:\
            \ 0"
          maximum: 20
          minimum: 0
          title: user_mentions_limit
          type: integer
        user_opinions_limit:
          description: "Limits the number of concept topics the service responds.\
            \ Default: 0"
          maximum: 20
          minimum: 0
          title: user_opinions_limit
          type: integer
        user_relations_limit:
          description: "Limits the number of user entity relations the service responds.\
            \ Default: 0"
          maximum: 20
          minimum: 0
          title: user_relations_limit
          type: integer
      required:
      - auto_categories_limit
      - concept_topics_limit
      - detect_language
      - entity_themes_limit
      - intentions
      - model_sentiment
      - named_entities_limit
      - named_mentions_limit
      - named_opinions_limit
      - named_relations_limit
      - phrases_limit
      - pos_types
      - possible_phrases_limit
      - query_topics_limit
      - summary_limit
      - theme_mentions_limit
      - themes_limit
      - user_entities_limit
      - user_mentions_limit
      - user_opinions_limit
      - user_relations_limit
      title: ConfigurationDocumentSection
      type: object
    Configuration_InsertVersion:
      properties:
        auto_response:
          description: "Defines whether or not the service should respond with processed\
            \ results automatically. Default: false"
          type: boolean
        callback:
          description: Defines a callback URL for automatic data responding
          type: string
        categories_threshold:
          description: "Defines low threshold for strength score of user categories\
            \ to be reported in the output. Default: 0.45"
          format: double
          type: number
        chars_threshold:
          description: "Defines the threshold for alphanumeric characters in the text\
            \ in percent. Default: 80"
          maximum: 100
          minimum: 0
          type: integer
        collection:
          $ref: '#/components/schemas/ConfigurationCollectionSection'
        document:
          $ref: '#/components/schemas/ConfigurationDocumentSection'
        entities_threshold:
          description: Defines low threshold for evidence score of named and user
            entities to be reported in the output.
          type: integer
        is_primary:
          description: "Identifies whether the current configuration is primary or\
            \ not. Default: false"
          type: boolean
        language:
          description: "Defines target language that will be used for task processing.\
            \ Default: English"
          type: string
        name:
          description: Configuration name
          type: string
        one_sentence:
          description: "Leads the service to consider the entire document as single\
            \ sentence. Default: false"
          type: boolean
        process_html:
          description: "Leads the service to clean HTML tags before processing. Default:\
            \ false"
          type: boolean
      required:
      - auto_response
      - callback
      - categories_threshold
      - chars_threshold
      - collection
      - document
      - entities_threshold
      - is_primary
      - language
      - name
      - one_sentence
      - process_html
      type: object
    Configuration_ResponseVersion:
      example:
        is_primary: true
        categories_threshold: 0.8008281904610115
        document:
          themes_limit: 7
          user_opinions_limit: 5
          user_relations_limit: 13
          user_mentions_limit: 2
          possible_phrases_limit: 13
          named_opinions_limit: 10
          intentions: true
          named_relations_limit: 19
          concept_topics_limit: 13
          theme_mentions_limit: 12
          detect_language: true
          query_topics_limit: 17
          user_entities_limit: 13
          named_entities_limit: 2
          summary_limit: 18
          entity_themes_limit: 14
          pos_types: All
          named_mentions_limit: 9
          auto_categories_limit: 2
          phrases_limit: 18
          model_sentiment: true
        language: language
        collection:
          themes_limit: 14
          facets_limit: 14
          facet_mentions_limit: 4
          user_entities_limit: 2
          named_entities_limit: 18
          user_mentions_limit: 2
          attribute_mentions_limit: 2
          facet_atts_limit: 11
          named_mentions_limit: 7
          concept_topics_limit: 11
          theme_mentions_limit: 8
          query_topics_limit: 4
        version: version
        process_html: true
        one_sentence: true
        from_template_config_id: from_template_config_id
        config_id: config_id
        entities_threshold: 6
        name: name
        callback: callback
        modified: modified
        auto_response: true
        chars_threshold: 60
      properties:
        auto_response:
          description: "Defines whether or not the service should respond with processed\
            \ results automatically. Default: false"
          title: auto_response
          type: boolean
        callback:
          description: Defines a callback URL for automatic data responding
          title: callback
          type: string
        categories_threshold:
          description: "Defines low threshold for strength score of user categories\
            \ to be reported in the output. Default: 0.45"
          format: double
          title: categories_threshold
          type: number
        chars_threshold:
          description: "Defines the threshold for alphanumeric characters in the text\
            \ in percent. Default: 80"
          maximum: 100
          minimum: 0
          title: chars_threshold
          type: integer
        collection:
          $ref: '#/components/schemas/ConfigurationCollectionSection'
        config_id:
          description: Unique configuration identifier
          title: config_id
          type: string
        document:
          $ref: '#/components/schemas/ConfigurationDocumentSection'
        entities_threshold:
          description: "Defines low threshold for evidence score of named and user\
            \ entities to be reported in the output. Default: 55"
          title: entities_threshold
          type: integer
        from_template_config_id:
          description: Unique identifier of configuration (template) the current configuration
            has been clonned from
          title: from_template_config_id
          type: string
        is_primary:
          description: "Identifies whether the current configuration is primary or\
            \ not. Default: false"
          title: is_primary
          type: boolean
        language:
          description: "Defines target language that will be used for task processing.\
            \ Default: English"
          title: language
          type: string
        modified:
          description: The timestamp of the latest update of the record. Creation
            date of update didn't occur
          title: modified
          type: string
        name:
          description: Configuration name
          title: name
          type: string
        one_sentence:
          description: "Leads the service to consider the entire document as single\
            \ sentence. Default: false"
          title: one_sentence
          type: boolean
        process_html:
          description: "Leads the service to clean HTML tags before processing. Default:\
            \ false"
          title: process_html
          type: boolean
        version:
          description: "Version of the vertical pack, for versioning purposes"
          title: version
          type: string
      required:
      - auto_response
      - callback
      - categories_threshold
      - chars_threshold
      - collection
      - config_id
      - document
      - entities_threshold
      - from_template_config_id
      - is_primary
      - language
      - modified
      - name
      - one_sentence
      - process_html
      - version
      title: Configuration_ResponseVersion
      type: object
    Configuration_UpdateVersion:
      properties:
        auto_response:
          description: "Defines whether or not the service should respond with processed\
            \ results automatically. Default: false"
          type: boolean
        callback:
          description: Defines a callback URL for automatic data responding
          type: string
        categories_threshold:
          description: "Defines low threshold for strength score of user categories\
            \ to be reported in the output. Default: 0.45"
          format: double
          type: number
        chars_threshold:
          description: "Defines the threshold for alphanumeric characters in the text\
            \ in percent. Default: 80"
          maximum: 100
          minimum: 0
          type: integer
        collection:
          $ref: '#/components/schemas/ConfigurationCollectionSection'
        config_id:
          description: Unique configuration identifier
          type: string
        document:
          $ref: '#/components/schemas/ConfigurationDocumentSection'
        entities_threshold:
          description: "Defines low threshold for evidence score of named and user\
            \ entities to be reported in the output. Default: 55"
          type: integer
        is_primary:
          description: "Identifies whether the current configuration is primary or\
            \ not. Default: false"
          type: boolean
        language:
          description: "Defines target language that will be used for task processing.\
            \ Default: English"
          type: string
        name:
          description: Configuration name
          type: string
        one_sentence:
          description: "Leads the service to consider the entire document as single\
            \ sentence. Default: false"
          type: boolean
        process_html:
          description: "Leads the service to clean HTML tags before processing. Default:\
            \ false"
          type: boolean
      required:
      - auto_response
      - callback
      - categories_threshold
      - chars_threshold
      - collection
      - config_id
      - document
      - entities_threshold
      - is_primary
      - language
      - name
      - one_sentence
      - process_html
      type: object
    Details:
      example:
        words:
        - is_negated: true
          sentiment_score: 5.962133916683182
          stemmed: stemmed
          tag: tag
          title: title
          type: type
        - is_negated: true
          sentiment_score: 5.962133916683182
          stemmed: stemmed
          tag: tag
          title: title
          type: type
        is_imperative: true
        is_polar: true
      properties:
        is_imperative:
          description: Represents whether sentence (group of words) is imperative
            or not
          title: is_imperative
          type: boolean
        is_polar:
          description: Represents whether or not sentence content contains sentiment
            polarity
          title: is_polar
          type: boolean
        words:
          description: Returns list of words grouped by the parent sentence
          items:
            $ref: '#/components/schemas/Word'
          title: words
          type: array
      required:
      - is_imperative
      - is_polar
      - words
      title: Details
      type: object
    Document:
      example:
        job_id: job_id
        id: id
        tag: tag
        text: text
      properties:
        id:
          description: Up to 32 symbols unique identifier of document assigned and
            tracked by client.
          title: id
          type: string
        job_id:
          description: Specific marker of incoming job that can be used then for documents
            retrieving
          title: job_id
          type: string
        tag:
          description: Any text of up to 50 characters used like marker.
          title: tag
          type: string
        text:
          description: Document text that needs to be analyzed by the service.
          title: text
          type: string
      required:
      - id
      - job_id
      - tag
      - text
      title: Document
      type: object
    DocumentAnalyticData:
      example:
        summary: summary
        sentiment_score: 1.0246457001441578
        source_text: source_text
        topics:
        - sentiment_score: 1.0246457001441578
          id: id
          title: title
          type: concept
          hitcount: 0
          sentiment_polarity: negative
        - sentiment_score: 1.0246457001441578
          id: id
          title: title
          type: concept
          hitcount: 0
          sentiment_polarity: negative
        auto_categories:
        - sentiment_score: 6.027456183070403
          strength_score: 1.4658129805029452
          categories:
          - strength_score: 0.8008281904610115
            title: title
            type: type
          - strength_score: 0.8008281904610115
            title: title
            type: type
          title: title
          type: type
          sentiment_polarity: negative
        - sentiment_score: 6.027456183070403
          strength_score: 1.4658129805029452
          categories:
          - strength_score: 0.8008281904610115
            title: title
            type: type
          - strength_score: 0.8008281904610115
            title: title
            type: type
          title: title
          type: type
          sentiment_polarity: negative
        intentions:
        - evidence_phrase: evidence_phrase
          what: what
          type: type
          who: who
        - evidence_phrase: evidence_phrase
          what: what
          type: type
          who: who
        language: language
        taxonomy:
        - sentiment_score: 1.0246457001441578
          id: id
          title: title
          type: concept
          hitcount: 0
          sentiment_polarity: negative
        - sentiment_score: 1.0246457001441578
          id: id
          title: title
          type: concept
          hitcount: 0
          sentiment_polarity: negative
        themes:
        - sentiment_score: 6.84685269835264
          themes_count: 0
          stemmed: stemmed
          phrases_count: 0
          normalized: normalized
          mentions:
          - is_negated: true
            negating_phrase: negating_phrase
            locations:
            - offset: 5
              length: 1
              index: 6
            - offset: 5
              length: 1
              index: 6
            label: label
          - is_negated: true
            negating_phrase: negating_phrase
            locations:
            - offset: 5
              length: 1
              index: 6
            - offset: 5
              length: 1
              index: 6
            label: label
          title: title
          sentiment_polarity: negative
        - sentiment_score: 6.84685269835264
          themes_count: 0
          stemmed: stemmed
          phrases_count: 0
          normalized: normalized
          mentions:
          - is_negated: true
            negating_phrase: negating_phrase
            locations:
            - offset: 5
              length: 1
              index: 6
            - offset: 5
              length: 1
              index: 6
            label: label
          - is_negated: true
            negating_phrase: negating_phrase
            locations:
            - offset: 5
              length: 1
              index: 6
            - offset: 5
              length: 1
              index: 6
            label: label
          title: title
          sentiment_polarity: negative
        config_id: config_id
        entities:
        - entity_type: entity_type
          positive_count: 0
          mentions:
          - is_negated: true
            negating_phrase: negating_phrase
            locations:
            - offset: 5
              length: 1
              index: 6
            - offset: 5
              length: 1
              index: 6
            label: label
          - is_negated: true
            negating_phrase: negating_phrase
            locations:
            - offset: 5
              length: 1
              index: 6
            - offset: 5
              length: 1
              index: 6
            label: label
          neutral_count: 0
          count: 0
          negative_count: 0
          label: label
          title: title
          type: named
        - entity_type: entity_type
          positive_count: 0
          mentions:
          - is_negated: true
            negating_phrase: negating_phrase
            locations:
            - offset: 5
              length: 1
              index: 6
            - offset: 5
              length: 1
              index: 6
            label: label
          - is_negated: true
            negating_phrase: negating_phrase
            locations:
            - offset: 5
              length: 1
              index: 6
            - offset: 5
              length: 1
              index: 6
            label: label
          neutral_count: 0
          count: 0
          negative_count: 0
          label: label
          title: title
          type: named
        job_id: job_id
        language_score: 5.637376656633329
        opinions:
        - sentiment_score: 2.027123023002322
          speaker: 4.145608
          topic: topic
          type: named
          quotation: quotation
          sentiment_polarity: negative
        - sentiment_score: 2.027123023002322
          speaker: 4.145608
          topic: topic
          type: named
          quotation: quotation
          sentiment_polarity: negative
        details:
        - words:
          - is_negated: true
            sentiment_score: 5.962133916683182
            stemmed: stemmed
            tag: tag
            title: title
            type: type
          - is_negated: true
            sentiment_score: 5.962133916683182
            stemmed: stemmed
            tag: tag
            title: title
            type: type
          is_imperative: true
          is_polar: true
        - words:
          - is_negated: true
            sentiment_score: 5.962133916683182
            stemmed: stemmed
            tag: tag
            title: title
            type: type
          - is_negated: true
            sentiment_score: 5.962133916683182
            stemmed: stemmed
            tag: tag
            title: title
            type: type
          is_imperative: true
          is_polar: true
        id: id
        phrases:
        - is_negated: true
          sentiment_score: 7.386281948385884
          negating_phrase: negating_phrase
          intensifying_phrase: intensifying_phrase
          is_intensified: true
          title: title
          type: type
          sentiment_polarity: negative
        - is_negated: true
          sentiment_score: 7.386281948385884
          negating_phrase: negating_phrase
          intensifying_phrase: intensifying_phrase
          is_intensified: true
          title: title
          type: type
          sentiment_polarity: negative
        relations:
        - entities:
          - entity_type: entity_type
            title: title
          - entity_type: entity_type
            title: title
          confidence_score: 1.2315135
          extra: extra
          relation_type: relation_type
          type: named
        - entities:
          - entity_type: entity_type
            title: title
          - entity_type: entity_type
            title: title
          confidence_score: 1.2315135
          extra: extra
          relation_type: relation_type
          type: named
        sentiment_polarity: negative
        model_sentiment:
          model_name: model_name
          neutral_score: 9.301444243932576
          mixed_score: 2.3021358869347655
          positive_score: 3.616076749251911
          sentiment_polarity: negative
          negative_score: 7.061401241503109
        status: queued
      properties:
        auto_categories:
          description: Auto-generated categories applicable for the document
          items:
            $ref: '#/components/schemas/AutoCategory'
          title: auto_categories
          type: array
        config_id:
          description: Unique configuration identifier. Usually 36 alphanumeric characters
          title: config_id
          type: string
        details:
          description: Returns sentences from the original document with POS tags
            within
          items:
            $ref: '#/components/schemas/Details'
          title: details
          type: array
        entities:
          description: Returns the named entities and user defined entities from the
            text
          items:
            $ref: '#/components/schemas/Entity'
          title: entities
          type: array
        id:
          description: Unique document identifier. Can be up to 36 alphanumeric characters
          title: id
          type: string
        intentions:
          description: Returns intentions list detected by the engine
          items:
            $ref: '#/components/schemas/Intention'
          title: intentions
          type: array
        job_id:
          description: "Specific marker of a job document belongs to, can be used\
            \ for documents ordering on client side"
          title: job_id
          type: string
        language:
          description: Determined language of source text
          title: language
          type: string
        language_score:
          description: The percentage score of the best match of language among detected
            languages
          format: double
          title: language_score
          type: number
        model_sentiment:
          $ref: '#/components/schemas/ModelSentiment'
        opinions:
          description: Returns the list of opinions extracted from the source text
          items:
            $ref: '#/components/schemas/Opinion'
          title: opinions
          type: array
        phrases:
          description: Returns sentiment-bearing phrases of the document
          items:
            $ref: '#/components/schemas/Phrase'
          title: phrases
          type: array
        relations:
          description: Returns relations which represent a connection between one
            or more Entity objects
          items:
            $ref: '#/components/schemas/Relation'
          title: relations
          type: array
        sentiment_polarity:
          description: "Verbal representation of sentiment score. Can be \"negative\"\
            , \"positive\" or \"neutral\""
          enum:
          - negative
          - positive
          - neutral
          title: sentiment_polarity
          type: string
        sentiment_score:
          description: A sentiment analysis of the document text
          format: double
          title: sentiment_score
          type: number
        source_text:
          description: Original source text passed by client for this document
          title: source_text
          type: string
        status:
          description: Status of the document
          enum:
          - queued
          - processed
          - failed
          title: status
          type: string
        summary:
          description: A summary of the document text
          title: summary
          type: string
        taxonomy:
          description: Returns the taxonomy determined for the text
          items:
            $ref: '#/components/schemas/Topic'
          title: taxonomy
          type: array
        themes:
          description: Returns themes of the document
          items:
            $ref: '#/components/schemas/Theme'
          title: themes
          type: array
        topics:
          description: Returns the concept and query defined topics determined for
            the text
          items:
            $ref: '#/components/schemas/Topic'
          title: topics
          type: array
      required:
      - auto_categories
      - config_id
      - details
      - entities
      - id
      - intentions
      - job_id
      - language
      - language_score
      - model_sentiment
      - opinions
      - phrases
      - relations
      - sentiment_polarity
      - sentiment_score
      - source_text
      - status
      - summary
      - taxonomy
      - themes
      - topics
      title: DocumentAnalyticData
      type: object
    Entity:
      example:
        entity_type: entity_type
        positive_count: 0
        mentions:
        - is_negated: true
          negating_phrase: negating_phrase
          locations:
          - offset: 5
            length: 1
            index: 6
          - offset: 5
            length: 1
            index: 6
          label: label
        - is_negated: true
          negating_phrase: negating_phrase
          locations:
          - offset: 5
            length: 1
            index: 6
          - offset: 5
            length: 1
            index: 6
          label: label
        neutral_count: 0
        count: 0
        negative_count: 0
        label: label
        title: title
        type: named
      properties:
        count:
          description: The count of occurrences of the entity across the documents
          minimum: 0
          title: count
          type: integer
        entity_type:
          description: "Type of the entity (Company, Person, Place, Product, etc.)"
          title: entity_type
          type: string
        label:
          description: "Descriptive label for the entity, if applicable"
          title: label
          type: string
        mentions:
          description: Returns the genuine forms of entity mentioned across the documents
          items:
            $ref: '#/components/schemas/Mention'
          title: mentions
          type: array
        negative_count:
          description: The count of negative occurrences of the entity across the
            documents
          minimum: 0
          title: negative_count
          type: integer
        neutral_count:
          description: The count of neutral occurrences of the entity across the documents
          minimum: 0
          title: neutral_count
          type: integer
        positive_count:
          description: The count of positive occurrences of the entity across the
            documents
          minimum: 0
          title: positive_count
          type: integer
        title:
          description: Normalized form of the entity. It is the normalized entity
            title
          title: title
          type: string
        type:
          description: Type of the entity; can be either “named” or “user” (reserved
            for future usage)
          enum:
          - named
          - user
          title: type
          type: string
      required:
      - count
      - entity_type
      - label
      - mentions
      - negative_count
      - neutral_count
      - positive_count
      - title
      - type
      title: Entity
      type: object
    Entity_InsertVersion:
      properties:
        label:
          description: "Descriptive label for the entity, e.g. Wikipedia URL"
          type: string
        name:
          description: Entity name
          type: string
        normalized:
          description: Normalized form of the entity. Will replace entity name in
            the output
          type: string
        type:
          description: "Type of the entity (Company, Person, any custom type)"
          type: string
      required:
      - label
      - name
      - normalized
      - type
      type: object
    Entity_ResponseVersion:
      example:
        normalized: normalized
        name: name
        modified: modified
        id: id
        label: label
        type: type
      properties:
        id:
          description: Unique user entity identifier
          title: id
          type: string
        label:
          description: "Descriptive label for the entity, e.g. Wikipedia URL"
          title: label
          type: string
        modified:
          description: The timestamp of the latest update of the record. Creation
            date of update didn't occur
          title: modified
          type: string
        name:
          description: Entity name
          title: name
          type: string
        normalized:
          description: Normalized form of the entity. Will replace entity name in
            the output
          title: normalized
          type: string
        type:
          description: "Type of the entity (Company, Person, any custom type)"
          title: type
          type: string
      required:
      - id
      - label
      - modified
      - name
      - normalized
      - type
      title: Entity_ResponseVersion
      type: object
    Entity_UpdateVersion:
      properties:
        id:
          description: Unique user entity identifier
          type: string
        label:
          description: "Descriptive label for the entity, e.g. Wikipedia URL"
          type: string
        name:
          description: Entity name
          type: string
        normalized:
          description: Normalized form of the entity. Will replace entity name in
            the output
          type: string
        type:
          description: "Type of the entity (Company, Person, any custom type)"
          type: string
      required:
      - id
      - label
      - name
      - normalized
      - type
      type: object
    Facet:
      example:
        positive_count: 0
        mentions:
        - is_negated: true
          negating_phrase: negating_phrase
          locations:
          - offset: 5
            length: 1
            index: 6
          - offset: 5
            length: 1
            index: 6
          label: label
        - is_negated: true
          negating_phrase: negating_phrase
          locations:
          - offset: 5
            length: 1
            index: 6
          - offset: 5
            length: 1
            index: 6
          label: label
        neutral_count: 0
        count: 0
        negative_count: 0
        attributes:
        - mentions:
          - is_negated: true
            negating_phrase: negating_phrase
            locations:
            - offset: 5
              length: 1
              index: 6
            - offset: 5
              length: 1
              index: 6
            label: label
          - is_negated: true
            negating_phrase: negating_phrase
            locations:
            - offset: 5
              length: 1
              index: 6
            - offset: 5
              length: 1
              index: 6
            label: label
          count: 0
          label: label
        - mentions:
          - is_negated: true
            negating_phrase: negating_phrase
            locations:
            - offset: 5
              length: 1
              index: 6
            - offset: 5
              length: 1
              index: 6
            label: label
          - is_negated: true
            negating_phrase: negating_phrase
            locations:
            - offset: 5
              length: 1
              index: 6
            - offset: 5
              length: 1
              index: 6
            label: label
          count: 0
          label: label
        label: label
      properties:
        attributes:
          description: Returns the attributes associated with this facet
          items:
            $ref: '#/components/schemas/Attribute'
          title: attributes
          type: array
        count:
          description: The count of occurrences of the facet in the text
          minimum: 0
          title: count
          type: integer
        label:
          description: The text of the facet
          title: label
          type: string
        mentions:
          description: Returns genuine forms of facet mentioned across the documents
          items:
            $ref: '#/components/schemas/Mention'
          title: mentions
          type: array
        negative_count:
          description: The count of negative occurrences of the facet across the documents
          minimum: 0
          title: negative_count
          type: integer
        neutral_count:
          description: The count of neutral occurrences of the facet across the documents
          minimum: 0
          title: neutral_count
          type: integer
        positive_count:
          description: The count of positive occurrences of the facet across the documents
          minimum: 0
          title: positive_count
          type: integer
      required:
      - attributes
      - count
      - label
      - mentions
      - negative_count
      - neutral_count
      - positive_count
      title: Facet
      type: object
    Feature:
      example:
        detailed_mode:
          sentiment: true
          summarization: true
          pos_tagging: true
          user_entities: true
          language_detection: true
          entity_themes: true
          auto_categories: true
          intentions: true
          taxonomy: true
          user_categories: true
          queries: true
          sentiment_phrases: true
          entity_relations: true
          entity_mentions: true
          themes: true
          theme_mentions: true
          entity_opinions: true
          named_entities: true
          model_sentiment: true
        html_processing: true
        settings:
          user_entities: true
          blacklist: true
          taxonomy: true
          user_categories: true
          queries: true
          sentiment_phrases: true
        one_sentence_mode: true
        discovery_mode:
          entity_mentions: true
          themes: true
          theme_mentions: true
          user_entities: true
          taxonomy: true
          user_categories: true
          facet_attributes: true
          facet_mentioins: true
          queries: true
          named_entities: true
          facets: true
        templates:
          config_id: config_id
          is_free: true
          name: name
          description: description
          language: language
          id: id
          type: language-default
          version: version
        language: language
        id: id
      properties:
        detailed_mode:
          $ref: '#/components/schemas/FeatureDetailedModeSection'
        discovery_mode:
          $ref: '#/components/schemas/FeatureDiscoveryModeSection'
        html_processing:
          description: Represents whether HTML processing supported for certain language
            or not
          title: html_processing
          type: boolean
        id:
          description: Unique language identifier
          title: id
          type: string
        language:
          description: Represents language following options relevant to
          title: language
          type: string
        one_sentence_mode:
          description: Considers entire text as one sentence and uses optimized chunker
            for short content like tweets.
          title: one_sentence_mode
          type: boolean
        settings:
          $ref: '#/components/schemas/FeatureSettingsSection'
        templates:
          $ref: '#/components/schemas/FeatureTemplateSection'
      required:
      - detailed_mode
      - discovery_mode
      - html_processing
      - id
      - language
      - one_sentence_mode
      - settings
      - templates
      title: Feature
      type: object
    FeatureDetailedModeSection:
      example:
        sentiment: true
        summarization: true
        pos_tagging: true
        user_entities: true
        language_detection: true
        entity_themes: true
        auto_categories: true
        intentions: true
        taxonomy: true
        user_categories: true
        queries: true
        sentiment_phrases: true
        entity_relations: true
        entity_mentions: true
        themes: true
        theme_mentions: true
        entity_opinions: true
        named_entities: true
        model_sentiment: true
      properties:
        auto_categories:
          description: Represents whether auto-categories of entities supported for
            certain language or not
          title: auto_categories
          type: boolean
        entity_mentions:
          description: Represents whether mentions of entities supported for certain
            language or not
          title: entity_mentions
          type: boolean
        entity_opinions:
          description: Represents whether opinions of entities supported for certain
            language or not
          title: entity_opinions
          type: boolean
        entity_relations:
          description: Represents whether relations of entities supported for certain
            language or not
          title: entity_relations
          type: boolean
        entity_themes:
          description: Represents whether themes of entities supported for certain
            language or not
          title: entity_themes
          type: boolean
        intentions:
          description: Represents whether intentions detection supported for certain
            language or not
          title: intentions
          type: boolean
        language_detection:
          description: Represents whether language detection feature supported or
            not
          title: language_detection
          type: boolean
        model_sentiment:
          description: Represents whether model-based sentiment supported for certain
            language or not
          title: model_sentiment
          type: boolean
        named_entities:
          description: Represents whether named entities extraction supported for
            certain language or not
          title: named_entities
          type: boolean
        pos_tagging:
          description: Represents whether POS tagging supported for certain language
            or not
          title: pos_tagging
          type: boolean
        queries:
          description: Represents whether queries of entities supported for certain
            language or not
          title: queries
          type: boolean
        sentiment:
          description: Represents whether sentiment detection supported for certain
            language or not
          title: sentiment
          type: boolean
        sentiment_phrases:
          description: Represents whether sentiment phrases detection supported for
            certain language or not
          title: sentiment_phrases
          type: boolean
        summarization:
          description: Represents whether summarization supported for certain language
            or not
          title: summarization
          type: boolean
        taxonomy:
          description: Represents whether taxonomy feature supported for certain language
            or not
          title: taxonomy
          type: boolean
        theme_mentions:
          description: Represents whether mentions of themes supported for certain
            language or not
          title: theme_mentions
          type: boolean
        themes:
          description: Represents whether themes extraction supported for certain
            language or not
          title: themes
          type: boolean
        user_categories:
          description: Represents whether user categories of entities supported for
            certain language or not
          title: user_categories
          type: boolean
        user_entities:
          description: Represents whether user entities extraction supported for certain
            language or not
          title: user_entities
          type: boolean
      required:
      - auto_categories
      - entity_mentions
      - entity_opinions
      - entity_relations
      - entity_themes
      - intentions
      - language_detection
      - model_sentiment
      - named_entities
      - pos_tagging
      - queries
      - sentiment
      - sentiment_phrases
      - summarization
      - taxonomy
      - theme_mentions
      - themes
      - user_categories
      - user_entities
      title: FeatureDetailedModeSection
      type: object
    FeatureDiscoveryModeSection:
      example:
        entity_mentions: true
        themes: true
        theme_mentions: true
        user_entities: true
        taxonomy: true
        user_categories: true
        facet_attributes: true
        facet_mentioins: true
        queries: true
        named_entities: true
        facets: true
      properties:
        entity_mentions:
          description: Represents whether mentions of entities supported for certain
            language or not
          title: entity_mentions
          type: boolean
        facet_attributes:
          description: Represents whether attributes of facets supported for certain
            language or not
          title: facet_attributes
          type: boolean
        facet_mentioins:
          description: Represents whether mentions of facets supported for certain
            language or not
          title: facet_mentioins
          type: boolean
        facets:
          description: Represents whether facets detection supported for certain language
            or not
          title: facets
          type: boolean
        named_entities:
          description: Represents whether named entities extraction supported for
            certain language or not
          title: named_entities
          type: boolean
        queries:
          description: Represents whether queries extraction supported for certain
            language or not
          title: queries
          type: boolean
        taxonomy:
          description: Represents whether taxonomy feature supported for certain language
            or not
          title: taxonomy
          type: boolean
        theme_mentions:
          description: Represents whether mentions of themes supported for certain
            language or not
          title: theme_mentions
          type: boolean
        themes:
          description: Represents whether themes extraction supported for certain
            language or not
          title: themes
          type: boolean
        user_categories:
          description: Represents whether user categories extraction supported for
            certain language or not
          title: user_categories
          type: boolean
        user_entities:
          description: Represents whether user entities extraction supported for certain
            language or not
          title: user_entities
          type: boolean
      required:
      - entity_mentions
      - facet_attributes
      - facet_mentioins
      - facets
      - named_entities
      - queries
      - taxonomy
      - theme_mentions
      - themes
      - user_categories
      - user_entities
      title: FeatureDiscoveryModeSection
      type: object
    FeatureSettingsSection:
      example:
        user_entities: true
        blacklist: true
        taxonomy: true
        user_categories: true
        queries: true
        sentiment_phrases: true
      properties:
        blacklist:
          description: Represents whether blacklist feature supported for certain
            language or not
          title: blacklist
          type: boolean
        queries:
          description: Represents whether queries definition supported for certain
            language or not
          title: queries
          type: boolean
        sentiment_phrases:
          description: Represents whether sentiment-bearing phrases adjustmment supported
            for certain language or not
          title: sentiment_phrases
          type: boolean
        taxonomy:
          description: Represents whether taxonomy feature supported for certain language
            or not
          title: taxonomy
          type: boolean
        user_categories:
          description: Represents whether user categories definition supported for
            certain language or not
          title: user_categories
          type: boolean
        user_entities:
          description: Represents whether user entities definition supported for certain
            language or not
          title: user_entities
          type: boolean
      required:
      - blacklist
      - queries
      - sentiment_phrases
      - taxonomy
      - user_categories
      - user_entities
      title: FeatureSettingsSection
      type: object
    FeatureTemplateSection:
      example:
        config_id: config_id
        is_free: true
        name: name
        description: description
        language: language
        id: id
        type: language-default
        version: version
      properties:
        config_id:
          description: Unique identifier of configuration associated with the vertical
            pack. Required for cloning
          title: config_id
          type: string
        description:
          description: "Verbal description of template features, belonging to domain\
            \ area, etc."
          title: description
          type: string
        id:
          description: Unique document identifier. Can be up to 36 alphanumeric characters
          title: id
          type: string
        is_free:
          description: Shows whether Vertical pack is free or requires subscription
          title: is_free
          type: boolean
        language:
          description: The language supported by the vertical pack
          title: language
          type: string
        name:
          description: Name of the vertical pack
          title: name
          type: string
        type:
          description: "The type of the vertical pack, can be either \"vertical-pack\"\
            \ or \"language-default\""
          enum:
          - language-default
          - vertical-pack
          title: type
          type: string
        version:
          description: "Version of the vertical pack, for versioning purposes."
          title: version
          type: string
      required:
      - config_id
      - description
      - id
      - is_free
      - language
      - name
      - type
      - version
      title: FeatureTemplateSection
      type: object
    Intention:
      example:
        evidence_phrase: evidence_phrase
        what: what
        type: type
        who: who
      properties:
        evidence_phrase:
          description: The phrase which expressed the intention
          title: evidence_phrase
          type: string
        type:
          description: "The classification of the intention detected (buy, quit, etc.)"
          title: type
          type: string
        what:
          description: The object of the intention (if detected)
          title: what
          type: string
        who:
          description: The author of the intention (if detected)
          title: who
          type: string
      required:
      - evidence_phrase
      - type
      - what
      - who
      title: Intention
      type: object
    JSON:
      type: object
    Location:
      example:
        offset: 5
        length: 1
        index: 6
      properties:
        index:
          description: Document index within collection where the mention appeared
          title: index
          type: integer
        length:
          description: The length of the mention in bytes
          title: length
          type: integer
        offset:
          description: The amount of bytes offset in the original text before the
            start of the mention
          title: offset
          type: integer
      required:
      - index
      - length
      - offset
      title: Location
      type: object
    Mention:
      example:
        is_negated: true
        negating_phrase: negating_phrase
        locations:
        - offset: 5
          length: 1
          index: 6
        - offset: 5
          length: 1
          index: 6
        label: label
      properties:
        is_negated:
          description: Indicates whether or not the mention has been negated
          title: is_negated
          type: boolean
        label:
          description: The text of the attribute mention
          title: label
          type: string
        locations:
          description: List of coordinates of the mentions found within the collection
          items:
            $ref: '#/components/schemas/Location'
          title: locations
          type: array
        negating_phrase:
          description: "If the mention has been negated, this gives the negating phrase"
          title: negating_phrase
          type: string
      required:
      - is_negated
      - label
      - locations
      - negating_phrase
      title: Mention
      type: object
    ModelSentiment:
      example:
        model_name: model_name
        neutral_score: 9.301444243932576
        mixed_score: 2.3021358869347655
        positive_score: 3.616076749251911
        sentiment_polarity: negative
        negative_score: 7.061401241503109
      properties:
        mixed_score:
          description: Mixed sentiment score associated with the document
          format: double
          title: mixed_score
          type: number
        model_name:
          description: Name of the sentiment model used for scoring
          title: model_name
          type: string
        negative_score:
          description: Negative (probable negative score) sentiment score associated
            with the document
          format: double
          title: negative_score
          type: number
        neutral_score:
          description: Neutral (probable neutral score) sentiment score associated
            with the document
          format: double
          title: neutral_score
          type: number
        positive_score:
          description: Positive (probable positive score) sentiment score associated
            with the document
          format: double
          title: positive_score
          type: number
        sentiment_polarity:
          description: "Verbal representation of sentiment score that matches the\
            \ best on the document. Can be \"negative\", \"positive\" or \"neutral\""
          enum:
          - negative
          - positive
          - neutral
          title: sentiment_polarity
          type: string
      required:
      - mixed_score
      - model_name
      - negative_score
      - neutral_score
      - positive_score
      - sentiment_polarity
      title: ModelSentiment
      type: object
    Opinion:
      example:
        sentiment_score: 2.027123023002322
        speaker: 4.145608
        topic: topic
        type: named
        quotation: quotation
        sentiment_polarity: negative
      properties:
        quotation:
          description: The text of the expressed opinion
          title: quotation
          type: string
        sentiment_polarity:
          description: "Verbal representation of sentiment score. Can be \"negative\"\
            , \"positive\" or \"neutral\""
          enum:
          - negative
          - positive
          - neutral
          title: sentiment_polarity
          type: string
        sentiment_score:
          description: The sentiment score associated with the opinion
          format: double
          title: sentiment_score
          type: number
        speaker:
          description: An entity title identifying the author of the opinion
          format: float
          title: speaker
          type: number
        topic:
          description: "An entity title identifying the subject of the opinion, if\
            \ applicable"
          title: topic
          type: string
        type:
          description: Type of opinion according to extracted entity
          enum:
          - named
          - user
          title: type
          type: string
      required:
      - quotation
      - sentiment_polarity
      - sentiment_score
      - speaker
      - topic
      - type
      title: Opinion
      type: object
    Phrase:
      example:
        is_negated: true
        sentiment_score: 7.386281948385884
        negating_phrase: negating_phrase
        intensifying_phrase: intensifying_phrase
        is_intensified: true
        title: title
        type: type
        sentiment_polarity: negative
      properties:
        intensifying_phrase:
          description: "If the phrase has been intensified, this gives the intensifying\
            \ phrase"
          title: intensifying_phrase
          type: string
        is_intensified:
          description: Specifies whether the phrase has been intensified or not
          title: is_intensified
          type: boolean
        is_negated:
          description: Specifies whether the phrase has been negated or not
          title: is_negated
          type: boolean
        negating_phrase:
          description: "If the phrase has been negated, this gives the negating phrase"
          title: negating_phrase
          type: string
        sentiment_polarity:
          description: "Verbal representation of sentiment score. Can be \"negative\"\
            , \"positive\" or \"neutral\""
          enum:
          - negative
          - positive
          - neutral
          title: sentiment_polarity
          type: string
        sentiment_score:
          description: The sentiment score associated with this phrase
          format: double
          title: sentiment_score
          type: number
        title:
          description: The text of the sentiment-bearing phrase
          title: title
          type: string
        type:
          description: Type of phrase; can be either "possible" or "detected" value
          title: type
          type: string
      required:
      - intensifying_phrase
      - is_intensified
      - is_negated
      - negating_phrase
      - sentiment_polarity
      - sentiment_score
      - title
      - type
      title: Phrase
      type: object
    Phrase_InsertVersion:
      properties:
        name:
          description: Sentiment-bearing phrase name
          type: string
        weight:
          description: Sentiment-bearing phrase weight
          format: float
          type: number
      required:
      - name
      - weight
      type: object
    Phrase_ResponseVersion:
      example:
        name: name
        modified: modified
        weight: 0.8008282
        id: id
      properties:
        id:
          description: Unique sentiment-bearing phrase identifier
          title: id
          type: string
        modified:
          description: The timestamp of the latest update of the record. Creation
            date of update didn't occur
          title: modified
          type: string
        name:
          description: Sentiment-bearing phrase name
          title: name
          type: string
        weight:
          description: Sentiment-bearing phrase weight
          format: float
          title: weight
          type: number
      required:
      - id
      - modified
      - name
      - weight
      title: Phrase_ResponseVersion
      type: object
    Phrase_UpdateVersion:
      properties:
        id:
          description: Unique sentiment-bearing phrase identifier
          type: string
        name:
          description: Sentiment-bearing phrase name
          type: string
        weight:
          description: Sentiment-bearing phrase weight
          format: float
          type: number
      required:
      - id
      - name
      - weight
      type: object
    Query_InsertVersion:
      properties:
        name:
          description: Query name
          type: string
        query:
          description: Boolean query used for content categorization
          type: string
      required:
      - name
      - query
      type: object
    Query_ResponseVersion:
      example:
        query: query
        name: name
        modified: modified
        id: id
      properties:
        id:
          description: Unique query identifier
          title: id
          type: string
        modified:
          description: The timestamp of the latest update of the record. Creation
            date of update didn't occur
          title: modified
          type: string
        name:
          description: Query name
          title: name
          type: string
        query:
          description: Boolean query used for content categorization
          title: query
          type: string
      required:
      - id
      - modified
      - name
      - query
      title: Query_ResponseVersion
      type: object
    Query_UpdateVersion:
      properties:
        id:
          description: Unique query identifier
          type: string
        name:
          description: Query name
          type: string
        query:
          description: Boolean query used for content categorization
          type: string
      required:
      - id
      - name
      - query
      type: object
    Relation:
      example:
        entities:
        - entity_type: entity_type
          title: title
        - entity_type: entity_type
          title: title
        confidence_score: 1.2315135
        extra: extra
        relation_type: relation_type
        type: named
      properties:
        confidence_score:
          description: A measure of confidence in the relationship extraction
          format: float
          title: confidence_score
          type: number
        entities:
          description: Returns entities which presents parent relationship
          items:
            $ref: '#/components/schemas/RelationEntity'
          title: entities
          type: array
        extra:
          description: Extra information that has been extracted about the relationship
          title: extra
          type: string
        relation_type:
          description: A label describing the nature of the relationship
          title: relation_type
          type: string
        type:
          description: Type of relation according to extracted entities
          enum:
          - named
          - user
          title: type
          type: string
      required:
      - confidence_score
      - entities
      - extra
      - relation_type
      - type
      title: Relation
      type: object
    RelationEntity:
      example:
        entity_type: entity_type
        title: title
      properties:
        entity_type:
          description: "Type of the entity (Company, Person, Place, Product, etc.)"
          title: entity_type
          type: string
        title:
          description: Normalized entity title based on existing entity normalization
            rules
          title: title
          type: string
      required:
      - entity_type
      - title
      title: RelationEntity
      type: object
    Request class:
      type: object
    Request_class:
      type: object
    Statistic:
      example:
        overall_batches: 0
        overall_docs: 0
        latest_used_app: latest_used_app
        used_apps: used_apps
        configurations:
        - overall_batches: 0
          overall_docs: 0
          latest_used_app: latest_used_app
          used_apps: used_apps
          docs_processed: 0
          overall_texts: 0
          calls_data: 0
          colls_processed: 0
          overall_calls: 0
          overcall_colls: 0
          calls_settings: 0
          calls_polling: 0
          colls_failed: 0
          docs_failed: 0
          config_id: config_id
          name: name
          colls_responded: 0
          overall_exceeded: 0
          docs_responded: 0
        - overall_batches: 0
          overall_docs: 0
          latest_used_app: latest_used_app
          used_apps: used_apps
          docs_processed: 0
          overall_texts: 0
          calls_data: 0
          colls_processed: 0
          overall_calls: 0
          overcall_colls: 0
          calls_settings: 0
          calls_polling: 0
          colls_failed: 0
          docs_failed: 0
          config_id: config_id
          name: name
          colls_responded: 0
          overall_exceeded: 0
          docs_responded: 0
        docs_processed: 0
        overall_texts: 0
        calls_data: 0
        colls_processed: 0
        overall_calls: 0
        overcall_colls: 0
        calls_settings: 0
        calls_polling: 0
        colls_failed: 0
        docs_failed: 0
        colls_documents: 0
        name: name
        colls_responded: 0
        overall_exceeded: 0
        docs_responded: 0
        status: status
      properties:
        calls_data:
          description: Total number of data API calls made. These affect you API balance
          minimum: 0
          title: calls_data
          type: integer
        calls_polling:
          description: Total number of polling API calls made. These do not affect
            API balance
          minimum: 0
          title: calls_polling
          type: integer
        calls_settings:
          description: Total number of settings API calls made. These do not affect
            API balance
          minimum: 0
          title: calls_settings
          type: integer
        colls_documents:
          description: Total number of documents that have been queued into collections
          minimum: 0
          title: colls_documents
          type: integer
        colls_failed:
          description: Total number of collections that have failed to be processed
          minimum: 0
          title: colls_failed
          type: integer
        colls_processed:
          description: Total numbers of collections that have been successfully processed
          minimum: 0
          title: colls_processed
          type: integer
        colls_responded:
          description: Total number of successfully processed collections that have
            been returned
          minimum: 0
          title: colls_responded
          type: integer
        configurations:
          description: Includes statistics per specific configuration
          items:
            $ref: '#/components/schemas/StatisticConfiguration'
          title: configurations
          type: array
        docs_failed:
          description: Total number of documents that have failed to be processed
          minimum: 0
          title: docs_failed
          type: integer
        docs_processed:
          description: Total number of documents that have been successfully processed
          minimum: 0
          title: docs_processed
          type: integer
        docs_responded:
          description: Total number of successfully processed documents that have
            been returned
          minimum: 0
          title: docs_responded
          type: integer
        latest_used_app:
          description: The latest application that used the API on this account
          title: latest_used_app
          type: string
        name:
          description: Semantria subscriber name. Usually email
          title: name
          type: string
        overall_batches:
          description: Total number of queued batches of texts processed
          minimum: 0
          title: overall_batches
          type: integer
        overall_calls:
          description: Total number of API calls made
          minimum: 0
          title: overall_calls
          type: integer
        overall_docs:
          description: Total number of documents that have been queued
          minimum: 0
          title: overall_docs
          type: integer
        overall_exceeded:
          description: Total number of documents that have exceeded the favorable
            (suggested) limit
          minimum: 0
          title: overall_exceeded
          type: integer
        overall_texts:
          description: Total number of texts processed
          minimum: 0
          title: overall_texts
          type: integer
        overcall_colls:
          description: Total numbers of collections that have been queued
          minimum: 0
          title: overcall_colls
          type: integer
        status:
          description: "Semantria subscriber status. Can be active, expired, disabled,\
            \ etc"
          title: status
          type: string
        used_apps:
          description: A list of all the applications that have used the API on this
            account
          title: used_apps
          type: string
      required:
      - calls_data
      - calls_polling
      - calls_settings
      - colls_documents
      - colls_failed
      - colls_processed
      - colls_responded
      - configurations
      - docs_failed
      - docs_processed
      - docs_responded
      - latest_used_app
      - name
      - overall_batches
      - overall_calls
      - overall_docs
      - overall_exceeded
      - overall_texts
      - overcall_colls
      - status
      - used_apps
      title: Statistic
      type: object
    StatisticConfiguration:
      example:
        overall_batches: 0
        overall_docs: 0
        latest_used_app: latest_used_app
        used_apps: used_apps
        docs_processed: 0
        overall_texts: 0
        calls_data: 0
        colls_processed: 0
        overall_calls: 0
        overcall_colls: 0
        calls_settings: 0
        calls_polling: 0
        colls_failed: 0
        docs_failed: 0
        config_id: config_id
        name: name
        colls_responded: 0
        overall_exceeded: 0
        docs_responded: 0
      properties:
        calls_data:
          description: Total number of data API calls made. These affect you API balance
          minimum: 0
          title: calls_data
          type: integer
        calls_polling:
          description: Total number of polling API calls made. These do not affect
            API balance
          minimum: 0
          title: calls_polling
          type: integer
        calls_settings:
          description: Total number of settings API calls made. These do not affect
            API balance
          minimum: 0
          title: calls_settings
          type: integer
        colls_failed:
          description: Total number of collections that have failed to be processed
          minimum: 0
          title: colls_failed
          type: integer
        colls_processed:
          description: Total numbers of collections that have been successfully processed
          minimum: 0
          title: colls_processed
          type: integer
        colls_responded:
          description: Total number of successfully processed collections that have
            been returned
          minimum: 0
          title: colls_responded
          type: integer
        config_id:
          description: Unique identifier of configuration
          title: config_id
          type: string
        docs_failed:
          description: Total number of documents that have failed to be processed
          minimum: 0
          title: docs_failed
          type: integer
        docs_processed:
          description: Total number of documents that have been successfully processed
          minimum: 0
          title: docs_processed
          type: integer
        docs_responded:
          description: Total number of successfully processed documents that have
            been returned
          minimum: 0
          title: docs_responded
          type: integer
        latest_used_app:
          description: The latest application that used the API on this account
          title: latest_used_app
          type: string
        name:
          description: The name of configuration
          title: name
          type: string
        overall_batches:
          description: Total number of queued batches of texts processed
          minimum: 0
          title: overall_batches
          type: integer
        overall_calls:
          description: Total number of API calls made
          minimum: 0
          title: overall_calls
          type: integer
        overall_docs:
          description: Total number of documents that have been queued
          minimum: 0
          title: overall_docs
          type: integer
        overall_exceeded:
          description: Total number of documents that have exceeded the favorable
            (suggested) limit
          minimum: 0
          title: overall_exceeded
          type: integer
        overall_texts:
          description: Total number of texts processed
          minimum: 0
          title: overall_texts
          type: integer
        overcall_colls:
          description: Total numbers of collections that have been queued
          minimum: 0
          title: overcall_colls
          type: integer
        used_apps:
          description: A list of all the applications that have used the API on this
            account
          title: used_apps
          type: string
      required:
      - calls_data
      - calls_polling
      - calls_settings
      - colls_failed
      - colls_processed
      - colls_responded
      - config_id
      - docs_failed
      - docs_processed
      - docs_responded
      - latest_used_app
      - name
      - overall_batches
      - overall_calls
      - overall_docs
      - overall_exceeded
      - overall_texts
      - overcall_colls
      - used_apps
      title: StatisticConfiguration
      type: object
    Status:
      example:
        supported_languages:
        - supported_languages
        - supported_languages
        service_status: available
        service_version: service_version
        api_version: api_version
        supported_compression: supported_compression
        supported_encoding: supported_encoding
      properties:
        api_version:
          description: Represents current version of the exposed API
          title: api_version
          type: string
        service_status:
          description: Represents the availability of the service
          enum:
          - available
          - pending
          - sold
          title: service_status
          type: string
        service_version:
          description: Represents current version of the Semantria service
          title: service_version
          type: string
        supported_compression:
          description: Exposes supported compression algorithms. Currently only gzip
            and deflate are supported
          title: supported_compression
          type: string
        supported_encoding:
          description: Exposes supported content encoding. Currently only UTF-8 is
            supported
          title: supported_encoding
          type: string
        supported_languages:
          description: Exposes list of supported languages
          items:
            type: string
          title: supported_languages
          type: array
      required:
      - api_version
      - service_status
      - service_version
      - supported_compression
      - supported_encoding
      - supported_languages
      title: Status
      type: object
    SubCategory:
      example:
        strength_score: 0.8008281904610115
        title: title
        type: type
      properties:
        strength_score:
          description: Strength of the category matches with the document content
          format: double
          title: strength_score
          type: number
        title:
          description: "The category title, which is its label in the text"
          title: title
          type: string
        type:
          description: Type of category; can be either "node" (root level) or "leaf"
            (nested) value
          title: type
          type: string
      required:
      - strength_score
      - title
      - type
      title: SubCategory
      type: object
    Subscription:
      example:
        basic_settings:
          auto_response_limit: 0
          output_data_limit: 0
          batch_limit: 0
          entities_limit: 0
          sentiment_limit: 0
          collection_limit: 0
          queries_limit: 0
          characters_limit: 0
          return_source_text: true
          categories_limit: 0
          configurations_limit: 0
          processed_batch_limit: 0
          callback_batch_limit: 0
          blacklist_limit: 0
          category_samples_limit: 0
        billing_settings:
          settings_calls_limit_interval: 0
          limit_type: limit_type
          data_calls_limit: 0
          polling_calls_limit: 0
          polling_calls_limit_interval: 0
          settings_calls_balance: 0
          docs_limit: 0
          docs_suggested: 0
          expiration_date: expiration_date
          priority: priority
          polling_calls_balance: 0
          docs_balance: 0
          docs_limit_interval: 0
          data_calls_balance: 0
          app_seats_allocated: 0
          app_seats_permitted: 0
          docs_suggested_interval: 0
          settings_calls_limit: 0
          data_calls_limit_interval: 0
        name: name
        feature_settings:
          html_processing: true
          supported_languages: supported_languages
          document:
            summary: true
            named_relations: true
            pos_tagging: true
            user_entities: true
            language_detection: true
            entity_themes: true
            auto_categories: true
            phrases_detection: true
            intentions: true
            sentiment_phrases: true
            user_relations: true
            themes: true
            mentions: true
            query_topics: true
            opinions: true
            concept_topics: true
            named_entities: true
            model_sentiment: true
          templates:
            config_id: config_id
            is_free: true
            name: name
            description: description
            language: language
            id: id
            type: language-default
            version: version
          collection:
            themes: true
            user_entities: true
            mentions: true
            query_topics: true
            concept_topics: true
            named_entities: true
            facets: true
        status: status
      properties:
        basic_settings:
          $ref: '#/components/schemas/SubscriptionBasicSection'
        billing_settings:
          $ref: '#/components/schemas/SubscriptionBillingSection'
        feature_settings:
          $ref: '#/components/schemas/SubscriptionFeatureSection'
        name:
          description: Semantria subscriber name. Usually email
          title: name
          type: string
        status:
          description: "Semantria subscriber status. Can be active, expired, disabled,\
            \ etc"
          title: status
          type: string
      required:
      - basic_settings
      - billing_settings
      - feature_settings
      - name
      - status
      title: Subscription
      type: object
    SubscriptionBasicSection:
      example:
        auto_response_limit: 0
        output_data_limit: 0
        batch_limit: 0
        entities_limit: 0
        sentiment_limit: 0
        collection_limit: 0
        queries_limit: 0
        characters_limit: 0
        return_source_text: true
        categories_limit: 0
        configurations_limit: 0
        processed_batch_limit: 0
        callback_batch_limit: 0
        blacklist_limit: 0
        category_samples_limit: 0
      properties:
        auto_response_limit:
          description: Represents the maximum size of outgoing batch for auto-response
            feature
          minimum: 0
          title: auto_response_limit
          type: integer
        batch_limit:
          description: Represents the maximum size of the incoming batch in documents
          minimum: 0
          title: batch_limit
          type: integer
        blacklist_limit:
          description: Represents the maximum number of allowed blacklist items
          minimum: 0
          title: blacklist_limit
          type: integer
        callback_batch_limit:
          description: Represents the maximum size of outgoing batch for callback
            data retrieving mode
          minimum: 0
          title: callback_batch_limit
          type: integer
        categories_limit:
          description: Represents the maximum number of allowed categories
          minimum: 0
          title: categories_limit
          type: integer
        category_samples_limit:
          description: Represents the maximum number of allowed category samples
          minimum: 0
          title: category_samples_limit
          type: integer
        characters_limit:
          description: Represents the maximum length of the document allowed for processing
          minimum: 0
          title: characters_limit
          type: integer
        collection_limit:
          description: Represents the maximum size of collection in documents
          minimum: 0
          title: collection_limit
          type: integer
        configurations_limit:
          description: Represents the maximum number of allowed configurations
          minimum: 0
          title: configurations_limit
          type: integer
        entities_limit:
          description: Represents the maximum number of allowed entities
          minimum: 0
          title: entities_limit
          type: integer
        output_data_limit:
          description: Represent the maximum number allowed as output limit of configuration
          minimum: 0
          title: output_data_limit
          type: integer
        processed_batch_limit:
          description: Represents the maximum size of outgoing batch for pulling data
            retrieving mode
          minimum: 0
          title: processed_batch_limit
          type: integer
        queries_limit:
          description: Represents the maximum number of allowed queries
          minimum: 0
          title: queries_limit
          type: integer
        return_source_text:
          description: Indicates whether responding of source text along with the
            analysis data is allowed or not
          title: return_source_text
          type: boolean
        sentiment_limit:
          description: Represents the maximum number of allowed sentiment-bearing
            phrases
          minimum: 0
          title: sentiment_limit
          type: integer
      required:
      - auto_response_limit
      - batch_limit
      - blacklist_limit
      - callback_batch_limit
      - categories_limit
      - category_samples_limit
      - characters_limit
      - collection_limit
      - configurations_limit
      - entities_limit
      - output_data_limit
      - processed_batch_limit
      - queries_limit
      - return_source_text
      - sentiment_limit
      title: SubscriptionBasicSection
      type: object
    SubscriptionBillingSection:
      example:
        settings_calls_limit_interval: 0
        limit_type: limit_type
        data_calls_limit: 0
        polling_calls_limit: 0
        polling_calls_limit_interval: 0
        settings_calls_balance: 0
        docs_limit: 0
        docs_suggested: 0
        expiration_date: expiration_date
        priority: priority
        polling_calls_balance: 0
        docs_balance: 0
        docs_limit_interval: 0
        data_calls_balance: 0
        app_seats_allocated: 0
        app_seats_permitted: 0
        docs_suggested_interval: 0
        settings_calls_limit: 0
        data_calls_limit_interval: 0
      properties:
        app_seats_allocated:
          description: Number of allocated application cells permitted to work with
            the API
          minimum: 0
          title: app_seats_allocated
          type: integer
        app_seats_permitted:
          description: Number of permitted application to work with the same API account
          minimum: 0
          title: app_seats_permitted
          type: integer
        data_calls_balance:
          description: Represents actual value of remained data API calls
          minimum: 0
          title: data_calls_balance
          type: integer
        data_calls_limit:
          description: Represents the limit of data API calls per "data_calls_limit_interval"
            value
          minimum: 0
          title: data_calls_limit
          type: integer
        data_calls_limit_interval:
          description: Represents an interval for the "data_calls_limit" value of
            current subscription
          minimum: 0
          title: data_calls_limit_interval
          type: integer
        docs_balance:
          description: Current transaction balance. Applicable for pay-as-you-go subscriptions
            only
          minimum: 0
          title: docs_balance
          type: integer
        docs_limit:
          description: Represents the transactions limit per "docs_limit_interval"
            value
          minimum: 0
          title: docs_limit
          type: integer
        docs_limit_interval:
          description: Represents the timeframe for the "docs_limit" value of current
            subscription
          minimum: 0
          title: docs_limit_interval
          type: integer
        docs_suggested:
          description: Represents the amount of favorable documents suggested for
            throughput subscriptions
          minimum: 0
          title: docs_suggested
          type: integer
        docs_suggested_interval:
          description: Represents the timeframe for the “docs_suggested” value of
            the current subscription
          minimum: 0
          title: docs_suggested_interval
          type: integer
        expiration_date:
          description: Expiration date of current subscription. Defined as a Unix
            time stamp
          title: expiration_date
          type: string
        limit_type:
          description: Subscription type can have either pay-as-you-go or throughput
            value
          title: limit_type
          type: string
        polling_calls_balance:
          description: Represents actual value of remained polling API calls
          minimum: 0
          title: polling_calls_balance
          type: integer
        polling_calls_limit:
          description: Represents the limit of polling API calls per "polling_calls_limit_interval"
            value
          minimum: 0
          title: polling_calls_limit
          type: integer
        polling_calls_limit_interval:
          description: Represents an interval for the "polling_calls_limit" value
            of current subscription
          minimum: 0
          title: polling_calls_limit_interval
          type: integer
        priority:
          description: "Processing priority of current subscriber. Can have low, normal\
            \ or high value"
          title: priority
          type: string
        settings_calls_balance:
          description: Represents actual value of remained settings API calls
          minimum: 0
          title: settings_calls_balance
          type: integer
        settings_calls_limit:
          description: Represents the limit of settings API calls per "settings_calls_limit_interval"
            value
          minimum: 0
          title: settings_calls_limit
          type: integer
        settings_calls_limit_interval:
          description: Represents an interval for the "settings_calls_limit" value
            of current subscription
          minimum: 0
          title: settings_calls_limit_interval
          type: integer
      required:
      - app_seats_allocated
      - app_seats_permitted
      - data_calls_balance
      - data_calls_limit
      - data_calls_limit_interval
      - docs_balance
      - docs_limit
      - docs_limit_interval
      - docs_suggested
      - docs_suggested_interval
      - expiration_date
      - limit_type
      - polling_calls_balance
      - polling_calls_limit
      - polling_calls_limit_interval
      - priority
      - settings_calls_balance
      - settings_calls_limit
      - settings_calls_limit_interval
      title: SubscriptionBillingSection
      type: object
    SubscriptionFeatureSection:
      example:
        html_processing: true
        supported_languages: supported_languages
        document:
          summary: true
          named_relations: true
          pos_tagging: true
          user_entities: true
          language_detection: true
          entity_themes: true
          auto_categories: true
          phrases_detection: true
          intentions: true
          sentiment_phrases: true
          user_relations: true
          themes: true
          mentions: true
          query_topics: true
          opinions: true
          concept_topics: true
          named_entities: true
          model_sentiment: true
        templates:
          config_id: config_id
          is_free: true
          name: name
          description: description
          language: language
          id: id
          type: language-default
          version: version
        collection:
          themes: true
          user_entities: true
          mentions: true
          query_topics: true
          concept_topics: true
          named_entities: true
          facets: true
      properties:
        collection:
          $ref: '#/components/schemas/SubscriptionFeatureSectionCollection'
        document:
          $ref: '#/components/schemas/SubscriptionFeatureSectionDocument'
        html_processing:
          description: Identifies whether HTML processing feature is supported or
            not
          title: html_processing
          type: boolean
        supported_languages:
          description: Lists all languages which are allowed for current subscription
          title: supported_languages
          type: string
        templates:
          $ref: '#/components/schemas/SubscriptionFeatureSectionTemplate'
      required:
      - collection
      - document
      - html_processing
      - supported_languages
      - templates
      title: SubscriptionFeatureSection
      type: object
    SubscriptionFeatureSectionCollection:
      example:
        themes: true
        user_entities: true
        mentions: true
        query_topics: true
        concept_topics: true
        named_entities: true
        facets: true
      properties:
        concept_topics:
          description: Indicates whether concept topics are allowed or not
          title: concept_topics
          type: boolean
        facets:
          description: Indicates whether facets extraction feature is allowed or not
          title: facets
          type: boolean
        mentions:
          description: Indicates whether mentions are allowed for facets and attributes
            or not
          title: mentions
          type: boolean
        named_entities:
          description: Indicates whether named entities feature is allowed or not
          title: named_entities
          type: boolean
        query_topics:
          description: Indicates whether query defined topics are allowed or not
          title: query_topics
          type: boolean
        themes:
          description: Indicates whether themes extraction feature is allowed or not
          title: themes
          type: boolean
        user_entities:
          description: Indicates whether user entities feature is allowed or not
          title: user_entities
          type: boolean
      required:
      - concept_topics
      - facets
      - mentions
      - named_entities
      - query_topics
      - themes
      - user_entities
      title: SubscriptionFeatureSectionCollection
      type: object
    SubscriptionFeatureSectionDocument:
      example:
        summary: true
        named_relations: true
        pos_tagging: true
        user_entities: true
        language_detection: true
        entity_themes: true
        auto_categories: true
        phrases_detection: true
        intentions: true
        sentiment_phrases: true
        user_relations: true
        themes: true
        mentions: true
        query_topics: true
        opinions: true
        concept_topics: true
        named_entities: true
        model_sentiment: true
      properties:
        auto_categories:
          description: Indicates whether auto categories feature is allowed or not
          title: auto_categories
          type: boolean
        concept_topics:
          description: Indicates whether concept topics are allowed or not
          title: concept_topics
          type: boolean
        entity_themes:
          description: Indicates whether entity themes feature is allowed or not
          title: entity_themes
          type: boolean
        intentions:
          description: Indicates whether intentions feature is allowed or not.
          title: intentions
          type: boolean
        language_detection:
          description: Indicates whether language detection feature is allowed or
            not
          title: language_detection
          type: boolean
        mentions:
          description: Indicates whether mentions for entities and themes are allowed
            or not
          title: mentions
          type: boolean
        model_sentiment:
          description: Indicates whether model-based sentiment feature is allowed
            or not
          title: model_sentiment
          type: boolean
        named_entities:
          description: Indicates whether named entities feature is allowed or not
          title: named_entities
          type: boolean
        named_relations:
          description: Indicates whether relations for named entities are allowed
            or not
          title: named_relations
          type: boolean
        opinions:
          description: Indicates whether opinions feature is allowed or not
          title: opinions
          type: boolean
        phrases_detection:
          description: Indicates whether possible phrases detection feature is allowed
            or not
          title: phrases_detection
          type: boolean
        pos_tagging:
          description: Indicates whether part of speech tagging feature is allowed
            or not
          title: pos_tagging
          type: boolean
        query_topics:
          description: Indicates whether query defined topics are allowed or not
          title: query_topics
          type: boolean
        sentiment_phrases:
          description: Indicates whether sentiment-bearing phrases output is allowed
            or not
          title: sentiment_phrases
          type: boolean
        summary:
          description: Indicates whether summarization feature is allowed or not
          title: summary
          type: boolean
        themes:
          description: Indicates whether document themes feature is allowed or not
          title: themes
          type: boolean
        user_entities:
          description: Indicates whether user entities feature is allowed or not
          title: user_entities
          type: boolean
        user_relations:
          description: Indicates whether relations for user entities are allowed or
            not
          title: user_relations
          type: boolean
      required:
      - auto_categories
      - concept_topics
      - entity_themes
      - intentions
      - language_detection
      - mentions
      - model_sentiment
      - named_entities
      - named_relations
      - opinions
      - phrases_detection
      - pos_tagging
      - query_topics
      - sentiment_phrases
      - summary
      - themes
      - user_entities
      - user_relations
      title: SubscriptionFeatureSectionDocument
      type: object
    SubscriptionFeatureSectionTemplate:
      example:
        config_id: config_id
        is_free: true
        name: name
        description: description
        language: language
        id: id
        type: language-default
        version: version
      properties:
        config_id:
          description: Unique identifier of configuration associated with the vertical
            pack. Required for cloning
          title: config_id
          type: string
        description:
          description: "Verbal description of template features, belonging to domain\
            \ area, etc."
          title: description
          type: string
        id:
          description: Unique document identifier. Can be up to 36 alphanumeric characters
          title: id
          type: string
        is_free:
          description: Shows whether Vertical pack is free or requires subscription
          title: is_free
          type: boolean
        language:
          description: The language supported by the vertical pack
          title: language
          type: string
        name:
          description: Name of the vertical pack
          title: name
          type: string
        type:
          description: "The type of the vertical pack, can be either \"vertical-pack\"\
            \ or \"language-default\""
          enum:
          - language-default
          - vertical-pack
          title: type
          type: string
        version:
          description: "Version of the vertical pack, for versioning purposes."
          title: version
          type: string
      required:
      - config_id
      - description
      - id
      - is_free
      - language
      - name
      - type
      - version
      title: SubscriptionFeatureSectionTemplate
      type: object
    TaxonomyNode:
      title: TaxonomyNode
      type: object
    TaxonomyNode_InsertVersion:
      properties:
        enforce_parent_matching:
          description: Enforces parent nodes to match on a content if the current
            node matches
          type: boolean
        name:
          description: Taxonomy name
          type: string
        nodes:
          description: The list of sub-nodes associated with the current taxonomy
            node
          items:
            $ref: '#/components/schemas/TaxonomyNode'
          type: array
        topics:
          description: The list of the topics associated with the current taxonomy
            node
          items:
            $ref: '#/components/schemas/TaxonomyTopic'
          type: array
      required:
      - name
      type: object
    TaxonomyNode_ResponseVersion:
      example:
        nodes:
        - null
        - null
        enforce_parent_matching: true
        topics:
        - id: id
          type: type
        - id: id
          type: type
        name: name
        modified: modified
        id: id
      properties:
        enforce_parent_matching:
          description: Enforces parent nodes to match on a content if the current
            node matches
          title: enforce_parent_matching
          type: boolean
        id:
          description: Unique taxonomy node identifier
          title: id
          type: string
        modified:
          description: The timestamp of the latest update of the record. Creation
            date of update didn't occur
          title: modified
          type: string
        name:
          description: Taxonomy name
          title: name
          type: string
        nodes:
          description: The list of sub-nodes associated with the current taxonomy
            node
          items:
            $ref: '#/components/schemas/TaxonomyNode'
          title: nodes
          type: array
        topics:
          description: The list of the topics associated with the current taxonomy
            node
          items:
            $ref: '#/components/schemas/TaxonomyTopic'
          title: topics
          type: array
      required:
      - id
      - modified
      - name
      title: TaxonomyNode_ResponseVersion
      type: object
    TaxonomyNode_UpdateVersion:
      properties:
        enforce_parent_matching:
          description: Enforces parent nodes to match on a content if the current
            node matches
          type: boolean
        id:
          description: Unique taxonomy node identifier
          type: string
        name:
          description: Taxonomy name
          type: string
        nodes:
          description: The list of sub-nodes associated with the current taxonomy
            node
          items:
            $ref: '#/components/schemas/TaxonomyNode'
          type: array
        topics:
          description: The list of the topics associated with the current taxonomy
            node
          items:
            $ref: '#/components/schemas/TaxonomyTopic'
          type: array
      required:
      - id
      - name
      type: object
    TaxonomyTopic:
      example:
        id: id
        type: type
      properties:
        id:
          description: Unique taxonomy topic identifier
          title: id
          type: string
        type:
          description: Type of the topic (category or query) associated with the certain
            taxonomy node
          title: type
          type: string
      required:
      - type
      title: TaxonomyTopic
      type: object
    Theme:
      example:
        sentiment_score: 6.84685269835264
        themes_count: 0
        stemmed: stemmed
        phrases_count: 0
        normalized: normalized
        mentions:
        - is_negated: true
          negating_phrase: negating_phrase
          locations:
          - offset: 5
            length: 1
            index: 6
          - offset: 5
            length: 1
            index: 6
          label: label
        - is_negated: true
          negating_phrase: negating_phrase
          locations:
          - offset: 5
            length: 1
            index: 6
          - offset: 5
            length: 1
            index: 6
          label: label
        title: title
        sentiment_polarity: negative
      properties:
        mentions:
          description: Returns the concept and query defined topics determined for
            the text
          items:
            $ref: '#/components/schemas/Mention'
          title: mentions
          type: array
        normalized:
          description: The normalized form of the theme
          title: normalized
          type: string
        phrases_count:
          description: Count of sentiment-bearing phrases was used in calculating
            theme's sentiment
          minimum: 0
          title: phrases_count
          type: integer
        sentiment_polarity:
          description: "Verbal representation of sentiment score. Can be \"negative\"\
            , \"positive\" or \"neutral\""
          enum:
          - negative
          - positive
          - neutral
          title: sentiment_polarity
          type: string
        sentiment_score:
          description: Sentiment score for theme’s sentences across the documents
          format: double
          title: sentiment_score
          type: number
        stemmed:
          description: The stemmed form of the theme
          title: stemmed
          type: string
        themes_count:
          description: Count of themes across the documents that got rolled into this
            one
          minimum: 0
          title: themes_count
          type: integer
        title:
          description: The text of the theme across the documents
          title: title
          type: string
      required:
      - mentions
      - normalized
      - phrases_count
      - sentiment_polarity
      - sentiment_score
      - stemmed
      - themes_count
      - title
      title: Theme
      type: object
    Topic:
      example:
        sentiment_score: 1.0246457001441578
        id: id
        title: title
        type: concept
        hitcount: 0
        sentiment_polarity: negative
      properties:
        hitcount:
          description: The number of documents within the collection that match the
            topic
          minimum: 0
          title: hitcount
          type: integer
        id:
          description: Unique topic identifier
          title: id
          type: string
        sentiment_polarity:
          description: "Verbal representation of sentiment score. Can be \"negative\"\
            , \"positive\" or \"neutral\""
          enum:
          - negative
          - positive
          - neutral
          title: sentiment_polarity
          type: string
        sentiment_score:
          description: The sentiment score for documents content associated with the
            topic
          format: double
          title: sentiment_score
          type: number
        title:
          description: "The topic title, which is its label in the text"
          title: title
          type: string
        type:
          description: Type of the topic; can be either "concept" or "query"
          enum:
          - concept
          - query
          title: type
          type: string
      required:
      - hitcount
      - id
      - sentiment_polarity
      - sentiment_score
      - title
      - type
      title: Topic
      type: object
    Word:
      example:
        is_negated: true
        sentiment_score: 5.962133916683182
        stemmed: stemmed
        tag: tag
        title: title
        type: type
      properties:
        is_negated:
          description: A flag indicating if the token is or is part of a sentiment
            inverting construction
          title: is_negated
          type: boolean
        sentiment_score:
          description: The sentiment score associated with the word
          format: double
          title: sentiment_score
          type: number
        stemmed:
          description: The stemmed form of the word
          title: stemmed
          type: string
        tag:
          description: POS marker of the word
          title: tag
          type: string
        title:
          description: The original word representation in text
          title: title
          type: string
        type:
          description: Verbal representation of part of speech in addition to certain
            tag
          title: type
          type: string
      required:
      - is_negated
      - sentiment_score
      - stemmed
      - tag
      - title
      - type
      title: Word
      type: object
x-original-swagger-version: "2.0"
