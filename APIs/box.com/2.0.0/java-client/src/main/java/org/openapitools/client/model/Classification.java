/*
 * Box Platform API
 * [Box Platform](https://box.dev) provides functionality to provide access to content stored within [Box](https://box.com). It provides endpoints for basic manipulation of files and folders, management of users within an enterprise, as well as more complex topics such as legal holds and retention policies.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: devrel@box.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * An instance of the classification metadata template, containing the classification applied to the file or folder.  To get more details about the classification applied to an item, request the classification metadata template.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:18:30.779851-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class Classification {
  public static final String SERIALIZED_NAME_$_CAN_EDIT = "$canEdit";
  @SerializedName(SERIALIZED_NAME_$_CAN_EDIT)
  private Boolean $canEdit;

  public static final String SERIALIZED_NAME_$_PARENT = "$parent";
  @SerializedName(SERIALIZED_NAME_$_PARENT)
  private String $parent;

  public static final String SERIALIZED_NAME_$_SCOPE = "$scope";
  @SerializedName(SERIALIZED_NAME_$_SCOPE)
  private String $scope;

  /**
   * &#x60;securityClassification-6VMVochwUWo&#x60;
   */
  @JsonAdapter(TemplateEnum.Adapter.class)
  public enum TemplateEnum {
    SECURITY_CLASSIFICATION_6_VM_VOCHW_UWO("securityClassification-6VMVochwUWo");

    private String value;

    TemplateEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TemplateEnum fromValue(String value) {
      for (TemplateEnum b : TemplateEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<TemplateEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TemplateEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TemplateEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return TemplateEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      TemplateEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_$_TEMPLATE = "$template";
  @SerializedName(SERIALIZED_NAME_$_TEMPLATE)
  private TemplateEnum $template;

  public static final String SERIALIZED_NAME_$_TYPE = "$type";
  @SerializedName(SERIALIZED_NAME_$_TYPE)
  private String $type;

  public static final String SERIALIZED_NAME_$_TYPE_VERSION = "$typeVersion";
  @SerializedName(SERIALIZED_NAME_$_TYPE_VERSION)
  private BigDecimal $typeVersion;

  public static final String SERIALIZED_NAME_$_VERSION = "$version";
  @SerializedName(SERIALIZED_NAME_$_VERSION)
  private Integer $version;

  public static final String SERIALIZED_NAME_BOX_SECURITY_CLASSIFICATION_KEY = "Box__Security__Classification__Key";
  @SerializedName(SERIALIZED_NAME_BOX_SECURITY_CLASSIFICATION_KEY)
  private String boxSecurityClassificationKey;

  public Classification() {
  }

  public Classification $canEdit(Boolean $canEdit) {
    this.$canEdit = $canEdit;
    return this;
  }

  /**
   * Whether an end user can change the classification.
   * @return $canEdit
   */
  @javax.annotation.Nullable
  public Boolean get$CanEdit() {
    return $canEdit;
  }

  public void set$CanEdit(Boolean $canEdit) {
    this.$canEdit = $canEdit;
  }


  public Classification $parent(String $parent) {
    this.$parent = $parent;
    return this;
  }

  /**
   * The identifier of the item that this metadata instance has been attached to. This combines the &#x60;type&#x60; and the &#x60;id&#x60; of the parent in the form &#x60;{type}_{id}&#x60;.
   * @return $parent
   */
  @javax.annotation.Nullable
  public String get$Parent() {
    return $parent;
  }

  public void set$Parent(String $parent) {
    this.$parent = $parent;
  }


  public Classification $scope(String $scope) {
    this.$scope = $scope;
    return this;
  }

  /**
   * The scope of the enterprise that this classification has been applied for.  This will be in the format &#x60;enterprise_{enterprise_id}&#x60;.
   * @return $scope
   */
  @javax.annotation.Nullable
  public String get$Scope() {
    return $scope;
  }

  public void set$Scope(String $scope) {
    this.$scope = $scope;
  }


  public Classification $template(TemplateEnum $template) {
    this.$template = $template;
    return this;
  }

  /**
   * &#x60;securityClassification-6VMVochwUWo&#x60;
   * @return $template
   */
  @javax.annotation.Nullable
  public TemplateEnum get$Template() {
    return $template;
  }

  public void set$Template(TemplateEnum $template) {
    this.$template = $template;
  }


  public Classification $type(String $type) {
    this.$type = $type;
    return this;
  }

  /**
   * The unique ID of this classification instance. This will be include the name of the classification template and a unique ID.
   * @return $type
   */
  @javax.annotation.Nullable
  public String get$Type() {
    return $type;
  }

  public void set$Type(String $type) {
    this.$type = $type;
  }


  public Classification $typeVersion(BigDecimal $typeVersion) {
    this.$typeVersion = $typeVersion;
    return this;
  }

  /**
   * The version of the metadata template. This version starts at 0 and increases every time the template is updated. This is mostly for internal use.
   * @return $typeVersion
   */
  @javax.annotation.Nullable
  public BigDecimal get$TypeVersion() {
    return $typeVersion;
  }

  public void set$TypeVersion(BigDecimal $typeVersion) {
    this.$typeVersion = $typeVersion;
  }


  public Classification $version(Integer $version) {
    this.$version = $version;
    return this;
  }

  /**
   * The version of the metadata instance. This version starts at 0 and increases every time a classification is updated.
   * @return $version
   */
  @javax.annotation.Nullable
  public Integer get$Version() {
    return $version;
  }

  public void set$Version(Integer $version) {
    this.$version = $version;
  }


  public Classification boxSecurityClassificationKey(String boxSecurityClassificationKey) {
    this.boxSecurityClassificationKey = boxSecurityClassificationKey;
    return this;
  }

  /**
   * The name of the classification applied to the item.
   * @return boxSecurityClassificationKey
   */
  @javax.annotation.Nullable
  public String getBoxSecurityClassificationKey() {
    return boxSecurityClassificationKey;
  }

  public void setBoxSecurityClassificationKey(String boxSecurityClassificationKey) {
    this.boxSecurityClassificationKey = boxSecurityClassificationKey;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Classification classification = (Classification) o;
    return Objects.equals(this.$canEdit, classification.$canEdit) &&
        Objects.equals(this.$parent, classification.$parent) &&
        Objects.equals(this.$scope, classification.$scope) &&
        Objects.equals(this.$template, classification.$template) &&
        Objects.equals(this.$type, classification.$type) &&
        Objects.equals(this.$typeVersion, classification.$typeVersion) &&
        Objects.equals(this.$version, classification.$version) &&
        Objects.equals(this.boxSecurityClassificationKey, classification.boxSecurityClassificationKey);
  }

  @Override
  public int hashCode() {
    return Objects.hash($canEdit, $parent, $scope, $template, $type, $typeVersion, $version, boxSecurityClassificationKey);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Classification {\n");
    sb.append("    $canEdit: ").append(toIndentedString($canEdit)).append("\n");
    sb.append("    $parent: ").append(toIndentedString($parent)).append("\n");
    sb.append("    $scope: ").append(toIndentedString($scope)).append("\n");
    sb.append("    $template: ").append(toIndentedString($template)).append("\n");
    sb.append("    $type: ").append(toIndentedString($type)).append("\n");
    sb.append("    $typeVersion: ").append(toIndentedString($typeVersion)).append("\n");
    sb.append("    $version: ").append(toIndentedString($version)).append("\n");
    sb.append("    boxSecurityClassificationKey: ").append(toIndentedString(boxSecurityClassificationKey)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("$canEdit");
    openapiFields.add("$parent");
    openapiFields.add("$scope");
    openapiFields.add("$template");
    openapiFields.add("$type");
    openapiFields.add("$typeVersion");
    openapiFields.add("$version");
    openapiFields.add("Box__Security__Classification__Key");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to Classification
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!Classification.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Classification is not found in the empty JSON string", Classification.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!Classification.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Classification` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("$parent") != null && !jsonObj.get("$parent").isJsonNull()) && !jsonObj.get("$parent").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `$parent` to be a primitive type in the JSON string but got `%s`", jsonObj.get("$parent").toString()));
      }
      if ((jsonObj.get("$scope") != null && !jsonObj.get("$scope").isJsonNull()) && !jsonObj.get("$scope").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `$scope` to be a primitive type in the JSON string but got `%s`", jsonObj.get("$scope").toString()));
      }
      if ((jsonObj.get("$template") != null && !jsonObj.get("$template").isJsonNull()) && !jsonObj.get("$template").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `$template` to be a primitive type in the JSON string but got `%s`", jsonObj.get("$template").toString()));
      }
      // validate the optional field `$template`
      if (jsonObj.get("$template") != null && !jsonObj.get("$template").isJsonNull()) {
        TemplateEnum.validateJsonElement(jsonObj.get("$template"));
      }
      if ((jsonObj.get("$type") != null && !jsonObj.get("$type").isJsonNull()) && !jsonObj.get("$type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `$type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("$type").toString()));
      }
      if ((jsonObj.get("Box__Security__Classification__Key") != null && !jsonObj.get("Box__Security__Classification__Key").isJsonNull()) && !jsonObj.get("Box__Security__Classification__Key").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Box__Security__Classification__Key` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Box__Security__Classification__Key").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Classification.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Classification' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Classification> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Classification.class));

       return (TypeAdapter<T>) new TypeAdapter<Classification>() {
           @Override
           public void write(JsonWriter out, Classification value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Classification read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of Classification given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of Classification
   * @throws IOException if the JSON string is invalid with respect to Classification
   */
  public static Classification fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Classification.class);
  }

  /**
   * Convert an instance of Classification to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

