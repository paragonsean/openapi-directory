/*
 * Nordigen Account Information Services API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0 (v2)
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * * &#x60;INIT&#x60; - Initiated. Payment has been initiated. * &#x60;ERRE&#x60; - ExecutionError. We experienced error on payment execution. * &#x60;ERRS&#x60; - StatusError. We experienced error retrieving payment status. Try again. * &#x60;ACCC&#x60; - AcceptedSettlementCompleted. Settlement on the creditor&#39;s account has been completed * &#x60;ACCP&#x60; - AcceptedCustomerProfile. Preceding check of technical validation was successful. Customer profile check was successful * &#x60;ACSC&#x60; - AcceptedSettlementCompleted. Settlement on the debtor’s account has been completed * &#x60;ACSP&#x60; - AcceptedSettlementInProcess. All preceding checks such as technical validation and customer profile were successful and therefore the payment initiation has been accepted for execution * &#x60;ACTC&#x60; - AcceptedTechnicalValidation. Authentication and syntactical and semantical validation are successful * &#x60;ACWC&#x60; - AcceptedWithChange. Instruction is accepted but a change will be made, such as date or remittance not sent * &#x60;ACWP&#x60; - AcceptedWithoutPosting. Payment instruction included in the credit transfer is accepted without being posted to the creditor customer’s account * &#x60;RCVD&#x60; - Received. Payment initiation has been received by the receiving agent * &#x60;PDNG&#x60; - Pending. Payment initiation or individual transaction included in the payment initiation is pending. Further checks and status update will be performed * &#x60;RJCT&#x60; - Rejected. Payment initiation or individual transaction included in the payment initiation has been rejected. * &#x60;CANC&#x60; - Cancelled. Payment initiation has been cancelled before execution * &#x60;ACFC&#x60; - AcceptedFundsChecked. Pre-ceeding check of technical validation and customer profile was successful and an automatic funds check was positive * &#x60;PATC&#x60; - PartiallyAcceptedTechnicalCorrect. The payment initiation needs multiple authentications, where some but not yet all have been performed * &#x60;PART&#x60; - PartiallyAccepted. A number of transactions have been accepted, whereas another number of transactions have not yet achieved &#39;accepted&#39; status
 */
@JsonAdapter(PaymentStatusEnum.Adapter.class)
public enum PaymentStatusEnum {
  
  INIT("INIT"),
  
  ERRE("ERRE"),
  
  ERRS("ERRS"),
  
  ACCC("ACCC"),
  
  ACCP("ACCP"),
  
  ACSC("ACSC"),
  
  ACSP("ACSP"),
  
  ACTC("ACTC"),
  
  ACWC("ACWC"),
  
  ACWP("ACWP"),
  
  RCVD("RCVD"),
  
  PDNG("PDNG"),
  
  RJCT("RJCT"),
  
  CANC("CANC"),
  
  ACFC("ACFC"),
  
  PATC("PATC"),
  
  PART("PART");

  private String value;

  PaymentStatusEnum(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static PaymentStatusEnum fromValue(String value) {
    for (PaymentStatusEnum b : PaymentStatusEnum.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<PaymentStatusEnum> {
    @Override
    public void write(final JsonWriter jsonWriter, final PaymentStatusEnum enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public PaymentStatusEnum read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return PaymentStatusEnum.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    PaymentStatusEnum.fromValue(value);
  }
}

