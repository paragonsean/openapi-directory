/*
 * Nordigen Account Information Services API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0 (v2)
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.net.URI;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;
import org.openapitools.client.model.Status1c5Enum;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Create requisition.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:30:06.529199-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class SpectacularRequisition {
  public static final String SERIALIZED_NAME_ACCOUNT_SELECTION = "account_selection";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_SELECTION)
  private Boolean accountSelection = false;

  public static final String SERIALIZED_NAME_ACCOUNTS = "accounts";
  @SerializedName(SERIALIZED_NAME_ACCOUNTS)
  private List<Object> accounts = new ArrayList<>();

  public static final String SERIALIZED_NAME_AGREEMENT = "agreement";
  @SerializedName(SERIALIZED_NAME_AGREEMENT)
  private UUID agreement;

  public static final String SERIALIZED_NAME_CREATED = "created";
  @SerializedName(SERIALIZED_NAME_CREATED)
  private OffsetDateTime created;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private UUID id;

  public static final String SERIALIZED_NAME_INSTITUTION_ID = "institution_id";
  @SerializedName(SERIALIZED_NAME_INSTITUTION_ID)
  private String institutionId;

  public static final String SERIALIZED_NAME_LINK = "link";
  @SerializedName(SERIALIZED_NAME_LINK)
  private URI link = URI.create("https://ob.nordigen.com/psd2/start/3fa85f64-5717-4562-b3fc-2c963f66afa6/{$INSTITUTION_ID}");

  public static final String SERIALIZED_NAME_REDIRECT = "redirect";
  @SerializedName(SERIALIZED_NAME_REDIRECT)
  private URI redirect;

  public static final String SERIALIZED_NAME_REDIRECT_IMMEDIATE = "redirect_immediate";
  @SerializedName(SERIALIZED_NAME_REDIRECT_IMMEDIATE)
  private Boolean redirectImmediate = false;

  public static final String SERIALIZED_NAME_REFERENCE = "reference";
  @SerializedName(SERIALIZED_NAME_REFERENCE)
  private String reference;

  public static final String SERIALIZED_NAME_SSN = "ssn";
  @SerializedName(SERIALIZED_NAME_SSN)
  private String ssn;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private Status1c5Enum status;

  public static final String SERIALIZED_NAME_USER_LANGUAGE = "user_language";
  @SerializedName(SERIALIZED_NAME_USER_LANGUAGE)
  private String userLanguage;

  public SpectacularRequisition() {
  }

  public SpectacularRequisition(
     List<Object> accounts, 
     OffsetDateTime created, 
     UUID id, 
     URI link, 
     Status1c5Enum status
  ) {
    this();
    this.accounts = accounts;
    this.created = created;
    this.id = id;
    this.link = link;
    this.status = status;
  }

  public SpectacularRequisition accountSelection(Boolean accountSelection) {
    this.accountSelection = accountSelection;
    return this;
  }

  /**
   * option to enable account selection view for the end user
   * @return accountSelection
   */
  @javax.annotation.Nullable
  public Boolean getAccountSelection() {
    return accountSelection;
  }

  public void setAccountSelection(Boolean accountSelection) {
    this.accountSelection = accountSelection;
  }


  /**
   * array of account IDs retrieved within a scope of this requisition
   * @return accounts
   */
  @javax.annotation.Nullable
  public List<Object> getAccounts() {
    return accounts;
  }



  public SpectacularRequisition agreement(UUID agreement) {
    this.agreement = agreement;
    return this;
  }

  /**
   * EUA associated with this requisition
   * @return agreement
   */
  @javax.annotation.Nullable
  public UUID getAgreement() {
    return agreement;
  }

  public void setAgreement(UUID agreement) {
    this.agreement = agreement;
  }


  /**
   * The date &amp; time at which the requisition was created.
   * @return created
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreated() {
    return created;
  }



  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public UUID getId() {
    return id;
  }



  public SpectacularRequisition institutionId(String institutionId) {
    this.institutionId = institutionId;
    return this;
  }

  /**
   * an Institution ID for this Requisition
   * @return institutionId
   */
  @javax.annotation.Nonnull
  public String getInstitutionId() {
    return institutionId;
  }

  public void setInstitutionId(String institutionId) {
    this.institutionId = institutionId;
  }


  /**
   * link to initiate authorization with Institution
   * @return link
   */
  @javax.annotation.Nullable
  public URI getLink() {
    return link;
  }



  public SpectacularRequisition redirect(URI redirect) {
    this.redirect = redirect;
    return this;
  }

  /**
   * redirect URL to your application after end-user authorization with ASPSP
   * @return redirect
   */
  @javax.annotation.Nullable
  public URI getRedirect() {
    return redirect;
  }

  public void setRedirect(URI redirect) {
    this.redirect = redirect;
  }


  public SpectacularRequisition redirectImmediate(Boolean redirectImmediate) {
    this.redirectImmediate = redirectImmediate;
    return this;
  }

  /**
   * enable redirect back to the client after account list received
   * @return redirectImmediate
   */
  @javax.annotation.Nullable
  public Boolean getRedirectImmediate() {
    return redirectImmediate;
  }

  public void setRedirectImmediate(Boolean redirectImmediate) {
    this.redirectImmediate = redirectImmediate;
  }


  public SpectacularRequisition reference(String reference) {
    this.reference = reference;
    return this;
  }

  /**
   * additional ID to identify the end user
   * @return reference
   */
  @javax.annotation.Nullable
  public String getReference() {
    return reference;
  }

  public void setReference(String reference) {
    this.reference = reference;
  }


  public SpectacularRequisition ssn(String ssn) {
    this.ssn = ssn;
    return this;
  }

  /**
   * optional SSN field to verify ownership of the account
   * @return ssn
   */
  @javax.annotation.Nullable
  public String getSsn() {
    return ssn;
  }

  public void setSsn(String ssn) {
    this.ssn = ssn;
  }


  /**
   * status of this requisition
   * @return status
   */
  @javax.annotation.Nullable
  public Status1c5Enum getStatus() {
    return status;
  }



  public SpectacularRequisition userLanguage(String userLanguage) {
    this.userLanguage = userLanguage;
    return this;
  }

  /**
   * A two-letter country code (ISO 639-1)
   * @return userLanguage
   */
  @javax.annotation.Nullable
  public String getUserLanguage() {
    return userLanguage;
  }

  public void setUserLanguage(String userLanguage) {
    this.userLanguage = userLanguage;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SpectacularRequisition spectacularRequisition = (SpectacularRequisition) o;
    return Objects.equals(this.accountSelection, spectacularRequisition.accountSelection) &&
        Objects.equals(this.accounts, spectacularRequisition.accounts) &&
        Objects.equals(this.agreement, spectacularRequisition.agreement) &&
        Objects.equals(this.created, spectacularRequisition.created) &&
        Objects.equals(this.id, spectacularRequisition.id) &&
        Objects.equals(this.institutionId, spectacularRequisition.institutionId) &&
        Objects.equals(this.link, spectacularRequisition.link) &&
        Objects.equals(this.redirect, spectacularRequisition.redirect) &&
        Objects.equals(this.redirectImmediate, spectacularRequisition.redirectImmediate) &&
        Objects.equals(this.reference, spectacularRequisition.reference) &&
        Objects.equals(this.ssn, spectacularRequisition.ssn) &&
        Objects.equals(this.status, spectacularRequisition.status) &&
        Objects.equals(this.userLanguage, spectacularRequisition.userLanguage);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountSelection, accounts, agreement, created, id, institutionId, link, redirect, redirectImmediate, reference, ssn, status, userLanguage);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SpectacularRequisition {\n");
    sb.append("    accountSelection: ").append(toIndentedString(accountSelection)).append("\n");
    sb.append("    accounts: ").append(toIndentedString(accounts)).append("\n");
    sb.append("    agreement: ").append(toIndentedString(agreement)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    institutionId: ").append(toIndentedString(institutionId)).append("\n");
    sb.append("    link: ").append(toIndentedString(link)).append("\n");
    sb.append("    redirect: ").append(toIndentedString(redirect)).append("\n");
    sb.append("    redirectImmediate: ").append(toIndentedString(redirectImmediate)).append("\n");
    sb.append("    reference: ").append(toIndentedString(reference)).append("\n");
    sb.append("    ssn: ").append(toIndentedString(ssn)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    userLanguage: ").append(toIndentedString(userLanguage)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("account_selection");
    openapiFields.add("accounts");
    openapiFields.add("agreement");
    openapiFields.add("created");
    openapiFields.add("id");
    openapiFields.add("institution_id");
    openapiFields.add("link");
    openapiFields.add("redirect");
    openapiFields.add("redirect_immediate");
    openapiFields.add("reference");
    openapiFields.add("ssn");
    openapiFields.add("status");
    openapiFields.add("user_language");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("institution_id");
    openapiRequiredFields.add("redirect");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to SpectacularRequisition
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!SpectacularRequisition.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in SpectacularRequisition is not found in the empty JSON string", SpectacularRequisition.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!SpectacularRequisition.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `SpectacularRequisition` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : SpectacularRequisition.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // ensure the optional json data is an array if present
      if (jsonObj.get("accounts") != null && !jsonObj.get("accounts").isJsonNull() && !jsonObj.get("accounts").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `accounts` to be an array in the JSON string but got `%s`", jsonObj.get("accounts").toString()));
      }
      if ((jsonObj.get("agreement") != null && !jsonObj.get("agreement").isJsonNull()) && !jsonObj.get("agreement").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `agreement` to be a primitive type in the JSON string but got `%s`", jsonObj.get("agreement").toString()));
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if (!jsonObj.get("institution_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `institution_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("institution_id").toString()));
      }
      if ((jsonObj.get("link") != null && !jsonObj.get("link").isJsonNull()) && !jsonObj.get("link").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `link` to be a primitive type in the JSON string but got `%s`", jsonObj.get("link").toString()));
      }
      if ((jsonObj.get("redirect") != null && !jsonObj.get("redirect").isJsonNull()) && !jsonObj.get("redirect").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `redirect` to be a primitive type in the JSON string but got `%s`", jsonObj.get("redirect").toString()));
      }
      if ((jsonObj.get("reference") != null && !jsonObj.get("reference").isJsonNull()) && !jsonObj.get("reference").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `reference` to be a primitive type in the JSON string but got `%s`", jsonObj.get("reference").toString()));
      }
      if ((jsonObj.get("ssn") != null && !jsonObj.get("ssn").isJsonNull()) && !jsonObj.get("ssn").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ssn` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ssn").toString()));
      }
      // validate the optional field `status`
      if (jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) {
        Status1c5Enum.validateJsonElement(jsonObj.get("status"));
      }
      if ((jsonObj.get("user_language") != null && !jsonObj.get("user_language").isJsonNull()) && !jsonObj.get("user_language").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `user_language` to be a primitive type in the JSON string but got `%s`", jsonObj.get("user_language").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SpectacularRequisition.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SpectacularRequisition' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SpectacularRequisition> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SpectacularRequisition.class));

       return (TypeAdapter<T>) new TypeAdapter<SpectacularRequisition>() {
           @Override
           public void write(JsonWriter out, SpectacularRequisition value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public SpectacularRequisition read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of SpectacularRequisition given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of SpectacularRequisition
   * @throws IOException if the JSON string is invalid with respect to SpectacularRequisition
   */
  public static SpectacularRequisition fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SpectacularRequisition.class);
  }

  /**
   * Convert an instance of SpectacularRequisition to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

