/**
 * Nordigen Account Information Services API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0 (v2)
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIStatus1c5Enum.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIStatus1c5Enum::OAIStatus1c5Enum(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIStatus1c5Enum::OAIStatus1c5Enum() {
    this->initializeModel();
}

OAIStatus1c5Enum::~OAIStatus1c5Enum() {}

void OAIStatus1c5Enum::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIStatus1c5Enum::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIStatus1c5Enum::fromJson(QString jsonString) {
    
    if ( jsonString.compare("CR", Qt::CaseInsensitive) == 0) {
        m_value = eOAIStatus1c5Enum::CR;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ID", Qt::CaseInsensitive) == 0) {
        m_value = eOAIStatus1c5Enum::ID;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("LN", Qt::CaseInsensitive) == 0) {
        m_value = eOAIStatus1c5Enum::LN;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("RJ", Qt::CaseInsensitive) == 0) {
        m_value = eOAIStatus1c5Enum::RJ;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ER", Qt::CaseInsensitive) == 0) {
        m_value = eOAIStatus1c5Enum::ER;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SU", Qt::CaseInsensitive) == 0) {
        m_value = eOAIStatus1c5Enum::SU;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("EX", Qt::CaseInsensitive) == 0) {
        m_value = eOAIStatus1c5Enum::EX;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("GC", Qt::CaseInsensitive) == 0) {
        m_value = eOAIStatus1c5Enum::GC;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("UA", Qt::CaseInsensitive) == 0) {
        m_value = eOAIStatus1c5Enum::UA;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("GA", Qt::CaseInsensitive) == 0) {
        m_value = eOAIStatus1c5Enum::GA;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SA", Qt::CaseInsensitive) == 0) {
        m_value = eOAIStatus1c5Enum::SA;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIStatus1c5Enum::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIStatus1c5Enum::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIStatus1c5Enum::CR:
            val = "CR";
            break;
        case eOAIStatus1c5Enum::ID:
            val = "ID";
            break;
        case eOAIStatus1c5Enum::LN:
            val = "LN";
            break;
        case eOAIStatus1c5Enum::RJ:
            val = "RJ";
            break;
        case eOAIStatus1c5Enum::ER:
            val = "ER";
            break;
        case eOAIStatus1c5Enum::SU:
            val = "SU";
            break;
        case eOAIStatus1c5Enum::EX:
            val = "EX";
            break;
        case eOAIStatus1c5Enum::GC:
            val = "GC";
            break;
        case eOAIStatus1c5Enum::UA:
            val = "UA";
            break;
        case eOAIStatus1c5Enum::GA:
            val = "GA";
            break;
        case eOAIStatus1c5Enum::SA:
            val = "SA";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIStatus1c5Enum::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIStatus1c5Enum::eOAIStatus1c5Enum OAIStatus1c5Enum::getValue() const {
    return m_value;
}

void OAIStatus1c5Enum::setValue(const OAIStatus1c5Enum::eOAIStatus1c5Enum& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIStatus1c5Enum::isSet() const {
    
    return m_value_isSet;
}

bool OAIStatus1c5Enum::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
