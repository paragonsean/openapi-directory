/**
 * Nordigen Account Information Services API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0 (v2)
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPaymentStatusEnum.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPaymentStatusEnum::OAIPaymentStatusEnum(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPaymentStatusEnum::OAIPaymentStatusEnum() {
    this->initializeModel();
}

OAIPaymentStatusEnum::~OAIPaymentStatusEnum() {}

void OAIPaymentStatusEnum::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIPaymentStatusEnum::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIPaymentStatusEnum::fromJson(QString jsonString) {
    
    if ( jsonString.compare("INIT", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPaymentStatusEnum::INIT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ERRE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPaymentStatusEnum::ERRE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ERRS", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPaymentStatusEnum::ERRS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ACCC", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPaymentStatusEnum::ACCC;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ACCP", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPaymentStatusEnum::ACCP;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ACSC", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPaymentStatusEnum::ACSC;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ACSP", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPaymentStatusEnum::ACSP;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ACTC", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPaymentStatusEnum::ACTC;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ACWC", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPaymentStatusEnum::ACWC;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ACWP", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPaymentStatusEnum::ACWP;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("RCVD", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPaymentStatusEnum::RCVD;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("PDNG", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPaymentStatusEnum::PDNG;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("RJCT", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPaymentStatusEnum::RJCT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CANC", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPaymentStatusEnum::CANC;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ACFC", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPaymentStatusEnum::ACFC;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("PATC", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPaymentStatusEnum::PATC;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("PART", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPaymentStatusEnum::PART;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIPaymentStatusEnum::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIPaymentStatusEnum::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIPaymentStatusEnum::INIT:
            val = "INIT";
            break;
        case eOAIPaymentStatusEnum::ERRE:
            val = "ERRE";
            break;
        case eOAIPaymentStatusEnum::ERRS:
            val = "ERRS";
            break;
        case eOAIPaymentStatusEnum::ACCC:
            val = "ACCC";
            break;
        case eOAIPaymentStatusEnum::ACCP:
            val = "ACCP";
            break;
        case eOAIPaymentStatusEnum::ACSC:
            val = "ACSC";
            break;
        case eOAIPaymentStatusEnum::ACSP:
            val = "ACSP";
            break;
        case eOAIPaymentStatusEnum::ACTC:
            val = "ACTC";
            break;
        case eOAIPaymentStatusEnum::ACWC:
            val = "ACWC";
            break;
        case eOAIPaymentStatusEnum::ACWP:
            val = "ACWP";
            break;
        case eOAIPaymentStatusEnum::RCVD:
            val = "RCVD";
            break;
        case eOAIPaymentStatusEnum::PDNG:
            val = "PDNG";
            break;
        case eOAIPaymentStatusEnum::RJCT:
            val = "RJCT";
            break;
        case eOAIPaymentStatusEnum::CANC:
            val = "CANC";
            break;
        case eOAIPaymentStatusEnum::ACFC:
            val = "ACFC";
            break;
        case eOAIPaymentStatusEnum::PATC:
            val = "PATC";
            break;
        case eOAIPaymentStatusEnum::PART:
            val = "PART";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIPaymentStatusEnum::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIPaymentStatusEnum::eOAIPaymentStatusEnum OAIPaymentStatusEnum::getValue() const {
    return m_value;
}

void OAIPaymentStatusEnum::setValue(const OAIPaymentStatusEnum::eOAIPaymentStatusEnum& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIPaymentStatusEnum::isSet() const {
    
    return m_value_isSet;
}

bool OAIPaymentStatusEnum::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
