/**
 * Nordigen Account Information Services API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0 (v2)
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEndUserAgreementRequest.h
 *
 * Represents an end-user agreement.
 */

#ifndef OAIEndUserAgreementRequest_H
#define OAIEndUserAgreementRequest_H

#include <QJsonObject>

#include <QJsonValue>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIEndUserAgreementRequest : public OAIObject {
public:
    OAIEndUserAgreementRequest();
    OAIEndUserAgreementRequest(QString json);
    ~OAIEndUserAgreementRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QList<QJsonValue>> getAccessScope() const;
    void setAccessScope(const QList<QList<QJsonValue>> &access_scope);
    bool is_access_scope_Set() const;
    bool is_access_scope_Valid() const;

    qint32 getAccessValidForDays() const;
    void setAccessValidForDays(const qint32 &access_valid_for_days);
    bool is_access_valid_for_days_Set() const;
    bool is_access_valid_for_days_Valid() const;

    QString getInstitutionId() const;
    void setInstitutionId(const QString &institution_id);
    bool is_institution_id_Set() const;
    bool is_institution_id_Valid() const;

    qint32 getMaxHistoricalDays() const;
    void setMaxHistoricalDays(const qint32 &max_historical_days);
    bool is_max_historical_days_Set() const;
    bool is_max_historical_days_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QList<QJsonValue>> m_access_scope;
    bool m_access_scope_isSet;
    bool m_access_scope_isValid;

    qint32 m_access_valid_for_days;
    bool m_access_valid_for_days_isSet;
    bool m_access_valid_for_days_isValid;

    QString m_institution_id;
    bool m_institution_id_isSet;
    bool m_institution_id_isValid;

    qint32 m_max_historical_days;
    bool m_max_historical_days_isSet;
    bool m_max_historical_days_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEndUserAgreementRequest)

#endif // OAIEndUserAgreementRequest_H
