/**
 * Nordigen Account Information Services API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0 (v2)
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAccount.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAccount::OAIAccount(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAccount::OAIAccount() {
    this->initializeModel();
}

OAIAccount::~OAIAccount() {}

void OAIAccount::initializeModel() {

    m_created_isSet = false;
    m_created_isValid = false;

    m_iban_isSet = false;
    m_iban_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_institution_id_isSet = false;
    m_institution_id_isValid = false;

    m_last_accessed_isSet = false;
    m_last_accessed_isValid = false;

    m_owner_name_isSet = false;
    m_owner_name_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;
}

void OAIAccount::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAccount::fromJsonObject(QJsonObject json) {

    m_created_isValid = ::OpenAPI::fromJsonValue(m_created, json[QString("created")]);
    m_created_isSet = !json[QString("created")].isNull() && m_created_isValid;

    m_iban_isValid = ::OpenAPI::fromJsonValue(m_iban, json[QString("iban")]);
    m_iban_isSet = !json[QString("iban")].isNull() && m_iban_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_institution_id_isValid = ::OpenAPI::fromJsonValue(m_institution_id, json[QString("institution_id")]);
    m_institution_id_isSet = !json[QString("institution_id")].isNull() && m_institution_id_isValid;

    m_last_accessed_isValid = ::OpenAPI::fromJsonValue(m_last_accessed, json[QString("last_accessed")]);
    m_last_accessed_isSet = !json[QString("last_accessed")].isNull() && m_last_accessed_isValid;

    m_owner_name_isValid = ::OpenAPI::fromJsonValue(m_owner_name, json[QString("owner_name")]);
    m_owner_name_isSet = !json[QString("owner_name")].isNull() && m_owner_name_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;
}

QString OAIAccount::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAccount::asJsonObject() const {
    QJsonObject obj;
    if (m_created_isSet) {
        obj.insert(QString("created"), ::OpenAPI::toJsonValue(m_created));
    }
    if (m_iban_isSet) {
        obj.insert(QString("iban"), ::OpenAPI::toJsonValue(m_iban));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_institution_id_isSet) {
        obj.insert(QString("institution_id"), ::OpenAPI::toJsonValue(m_institution_id));
    }
    if (m_last_accessed_isSet) {
        obj.insert(QString("last_accessed"), ::OpenAPI::toJsonValue(m_last_accessed));
    }
    if (m_owner_name_isSet) {
        obj.insert(QString("owner_name"), ::OpenAPI::toJsonValue(m_owner_name));
    }
    if (m_status.isSet()) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    return obj;
}

QDateTime OAIAccount::getCreated() const {
    return m_created;
}
void OAIAccount::setCreated(const QDateTime &created) {
    m_created = created;
    m_created_isSet = true;
}

bool OAIAccount::is_created_Set() const{
    return m_created_isSet;
}

bool OAIAccount::is_created_Valid() const{
    return m_created_isValid;
}

QString OAIAccount::getIban() const {
    return m_iban;
}
void OAIAccount::setIban(const QString &iban) {
    m_iban = iban;
    m_iban_isSet = true;
}

bool OAIAccount::is_iban_Set() const{
    return m_iban_isSet;
}

bool OAIAccount::is_iban_Valid() const{
    return m_iban_isValid;
}

QString OAIAccount::getId() const {
    return m_id;
}
void OAIAccount::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIAccount::is_id_Set() const{
    return m_id_isSet;
}

bool OAIAccount::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIAccount::getInstitutionId() const {
    return m_institution_id;
}
void OAIAccount::setInstitutionId(const QString &institution_id) {
    m_institution_id = institution_id;
    m_institution_id_isSet = true;
}

bool OAIAccount::is_institution_id_Set() const{
    return m_institution_id_isSet;
}

bool OAIAccount::is_institution_id_Valid() const{
    return m_institution_id_isValid;
}

QDateTime OAIAccount::getLastAccessed() const {
    return m_last_accessed;
}
void OAIAccount::setLastAccessed(const QDateTime &last_accessed) {
    m_last_accessed = last_accessed;
    m_last_accessed_isSet = true;
}

bool OAIAccount::is_last_accessed_Set() const{
    return m_last_accessed_isSet;
}

bool OAIAccount::is_last_accessed_Valid() const{
    return m_last_accessed_isValid;
}

QString OAIAccount::getOwnerName() const {
    return m_owner_name;
}
void OAIAccount::setOwnerName(const QString &owner_name) {
    m_owner_name = owner_name;
    m_owner_name_isSet = true;
}

bool OAIAccount::is_owner_name_Set() const{
    return m_owner_name_isSet;
}

bool OAIAccount::is_owner_name_Valid() const{
    return m_owner_name_isValid;
}

OAIAccountStatusEnum OAIAccount::getStatus() const {
    return m_status;
}
void OAIAccount::setStatus(const OAIAccountStatusEnum &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIAccount::is_status_Set() const{
    return m_status_isSet;
}

bool OAIAccount::is_status_Valid() const{
    return m_status_isValid;
}

bool OAIAccount::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_created_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_iban_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_institution_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_accessed_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_owner_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAccount::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
