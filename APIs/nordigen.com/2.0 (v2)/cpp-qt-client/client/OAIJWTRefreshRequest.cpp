/**
 * Nordigen Account Information Services API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0 (v2)
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIJWTRefreshRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIJWTRefreshRequest::OAIJWTRefreshRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIJWTRefreshRequest::OAIJWTRefreshRequest() {
    this->initializeModel();
}

OAIJWTRefreshRequest::~OAIJWTRefreshRequest() {}

void OAIJWTRefreshRequest::initializeModel() {

    m_refresh_isSet = false;
    m_refresh_isValid = false;
}

void OAIJWTRefreshRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIJWTRefreshRequest::fromJsonObject(QJsonObject json) {

    m_refresh_isValid = ::OpenAPI::fromJsonValue(m_refresh, json[QString("refresh")]);
    m_refresh_isSet = !json[QString("refresh")].isNull() && m_refresh_isValid;
}

QString OAIJWTRefreshRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIJWTRefreshRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_refresh_isSet) {
        obj.insert(QString("refresh"), ::OpenAPI::toJsonValue(m_refresh));
    }
    return obj;
}

QString OAIJWTRefreshRequest::getRefresh() const {
    return m_refresh;
}
void OAIJWTRefreshRequest::setRefresh(const QString &refresh) {
    m_refresh = refresh;
    m_refresh_isSet = true;
}

bool OAIJWTRefreshRequest::is_refresh_Set() const{
    return m_refresh_isSet;
}

bool OAIJWTRefreshRequest::is_refresh_Valid() const{
    return m_refresh_isValid;
}

bool OAIJWTRefreshRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_refresh_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIJWTRefreshRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_refresh_isValid && true;
}

} // namespace OpenAPI
