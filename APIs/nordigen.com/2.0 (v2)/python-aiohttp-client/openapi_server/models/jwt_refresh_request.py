# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class JWTRefreshRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, refresh: str=None):
        """JWTRefreshRequest - a model defined in OpenAPI

        :param refresh: The refresh of this JWTRefreshRequest.
        """
        self.openapi_types = {
            'refresh': str
        }

        self.attribute_map = {
            'refresh': 'refresh'
        }

        self._refresh = refresh

    @classmethod
    def from_dict(cls, dikt: dict) -> 'JWTRefreshRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The JWTRefreshRequest of this JWTRefreshRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def refresh(self):
        """Gets the refresh of this JWTRefreshRequest.


        :return: The refresh of this JWTRefreshRequest.
        :rtype: str
        """
        return self._refresh

    @refresh.setter
    def refresh(self, refresh):
        """Sets the refresh of this JWTRefreshRequest.


        :param refresh: The refresh of this JWTRefreshRequest.
        :type refresh: str
        """
        if refresh is None:
            raise ValueError("Invalid value for `refresh`, must not be `None`")
        if refresh is not None and len(refresh) < 1:
            raise ValueError("Invalid value for `refresh`, length must be greater than or equal to `1`")

        self._refresh = refresh
