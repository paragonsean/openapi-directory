# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.country_enum import CountryEnum
from openapi_server import util


class PremiumAccountQuery(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, country: CountryEnum=None, date_from: date=None, date_to: date=None):
        """PremiumAccountQuery - a model defined in OpenAPI

        :param country: The country of this PremiumAccountQuery.
        :param date_from: The date_from of this PremiumAccountQuery.
        :param date_to: The date_to of this PremiumAccountQuery.
        """
        self.openapi_types = {
            'country': CountryEnum,
            'date_from': date,
            'date_to': date
        }

        self.attribute_map = {
            'country': 'country',
            'date_from': 'date_from',
            'date_to': 'date_to'
        }

        self._country = country
        self._date_from = date_from
        self._date_to = date_to

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PremiumAccountQuery':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PremiumAccountQuery of this PremiumAccountQuery.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def country(self):
        """Gets the country of this PremiumAccountQuery.


        :return: The country of this PremiumAccountQuery.
        :rtype: CountryEnum
        """
        return self._country

    @country.setter
    def country(self, country):
        """Sets the country of this PremiumAccountQuery.


        :param country: The country of this PremiumAccountQuery.
        :type country: CountryEnum
        """

        self._country = country

    @property
    def date_from(self):
        """Gets the date_from of this PremiumAccountQuery.


        :return: The date_from of this PremiumAccountQuery.
        :rtype: date
        """
        return self._date_from

    @date_from.setter
    def date_from(self, date_from):
        """Sets the date_from of this PremiumAccountQuery.


        :param date_from: The date_from of this PremiumAccountQuery.
        :type date_from: date
        """

        self._date_from = date_from

    @property
    def date_to(self):
        """Gets the date_to of this PremiumAccountQuery.


        :return: The date_to of this PremiumAccountQuery.
        :rtype: date
        """
        return self._date_to

    @date_to.setter
    def date_to(self, date_to):
        """Sets the date_to of this PremiumAccountQuery.


        :param date_to: The date_to of this PremiumAccountQuery.
        :type date_to: date
        """

        self._date_to = date_to
