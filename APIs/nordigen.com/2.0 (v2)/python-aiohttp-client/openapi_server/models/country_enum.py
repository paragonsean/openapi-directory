# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CountryEnum(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    AT = 'AT'
    BE = 'BE'
    BG = 'BG'
    HR = 'HR'
    CY = 'CY'
    CZ = 'CZ'
    DK = 'DK'
    EE = 'EE'
    FI = 'FI'
    FR = 'FR'
    DE = 'DE'
    GR = 'GR'
    HU = 'HU'
    IS = 'IS'
    IE = 'IE'
    IT = 'IT'
    LV = 'LV'
    LI = 'LI'
    LT = 'LT'
    LU = 'LU'
    MT = 'MT'
    NL = 'NL'
    FALSE = 'false'
    PL = 'PL'
    PT = 'PT'
    RO = 'RO'
    SK = 'SK'
    SI = 'SI'
    ES = 'ES'
    SE = 'SE'
    GB = 'GB'
    US = 'US'

    def __init__(self):
        """CountryEnum - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CountryEnum':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CountryEnum of this CountryEnum.
        """
        return util.deserialize_model(dikt, cls)
