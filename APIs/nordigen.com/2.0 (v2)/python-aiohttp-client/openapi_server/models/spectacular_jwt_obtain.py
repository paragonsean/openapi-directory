# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SpectacularJWTObtain(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, access: str=None, access_expires: int=86400, refresh: str=None, refresh_expires: int=2592000):
        """SpectacularJWTObtain - a model defined in OpenAPI

        :param access: The access of this SpectacularJWTObtain.
        :param access_expires: The access_expires of this SpectacularJWTObtain.
        :param refresh: The refresh of this SpectacularJWTObtain.
        :param refresh_expires: The refresh_expires of this SpectacularJWTObtain.
        """
        self.openapi_types = {
            'access': str,
            'access_expires': int,
            'refresh': str,
            'refresh_expires': int
        }

        self.attribute_map = {
            'access': 'access',
            'access_expires': 'access_expires',
            'refresh': 'refresh',
            'refresh_expires': 'refresh_expires'
        }

        self._access = access
        self._access_expires = access_expires
        self._refresh = refresh
        self._refresh_expires = refresh_expires

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SpectacularJWTObtain':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SpectacularJWTObtain of this SpectacularJWTObtain.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def access(self):
        """Gets the access of this SpectacularJWTObtain.

        Your access token

        :return: The access of this SpectacularJWTObtain.
        :rtype: str
        """
        return self._access

    @access.setter
    def access(self, access):
        """Sets the access of this SpectacularJWTObtain.

        Your access token

        :param access: The access of this SpectacularJWTObtain.
        :type access: str
        """

        self._access = access

    @property
    def access_expires(self):
        """Gets the access_expires of this SpectacularJWTObtain.

        Access token expires in seconds

        :return: The access_expires of this SpectacularJWTObtain.
        :rtype: int
        """
        return self._access_expires

    @access_expires.setter
    def access_expires(self, access_expires):
        """Sets the access_expires of this SpectacularJWTObtain.

        Access token expires in seconds

        :param access_expires: The access_expires of this SpectacularJWTObtain.
        :type access_expires: int
        """

        self._access_expires = access_expires

    @property
    def refresh(self):
        """Gets the refresh of this SpectacularJWTObtain.

        Your refresh token

        :return: The refresh of this SpectacularJWTObtain.
        :rtype: str
        """
        return self._refresh

    @refresh.setter
    def refresh(self, refresh):
        """Sets the refresh of this SpectacularJWTObtain.

        Your refresh token

        :param refresh: The refresh of this SpectacularJWTObtain.
        :type refresh: str
        """

        self._refresh = refresh

    @property
    def refresh_expires(self):
        """Gets the refresh_expires of this SpectacularJWTObtain.

        Refresh token expires in seconds

        :return: The refresh_expires of this SpectacularJWTObtain.
        :rtype: int
        """
        return self._refresh_expires

    @refresh_expires.setter
    def refresh_expires(self, refresh_expires):
        """Sets the refresh_expires of this SpectacularJWTObtain.

        Refresh token expires in seconds

        :param refresh_expires: The refresh_expires of this SpectacularJWTObtain.
        :type refresh_expires: int
        """

        self._refresh_expires = refresh_expires
