/**
 * Nordigen Account Information Services API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0 (v2)
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AccountStatusEnum from './AccountStatusEnum';

/**
 * The Account model module.
 * @module model/Account
 * @version 2.0 (v2)
 */
class Account {
    /**
     * Constructs a new <code>Account</code>.
     * The representation of a bank account.
     * @alias module:model/Account
     */
    constructor() { 
        
        Account.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Account</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Account} obj Optional instance to populate.
     * @return {module:model/Account} The populated <code>Account</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Account();

            if (data.hasOwnProperty('created')) {
                obj['created'] = ApiClient.convertToType(data['created'], 'Date');
            }
            if (data.hasOwnProperty('iban')) {
                obj['iban'] = ApiClient.convertToType(data['iban'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('institution_id')) {
                obj['institution_id'] = ApiClient.convertToType(data['institution_id'], 'String');
            }
            if (data.hasOwnProperty('last_accessed')) {
                obj['last_accessed'] = ApiClient.convertToType(data['last_accessed'], 'Date');
            }
            if (data.hasOwnProperty('owner_name')) {
                obj['owner_name'] = ApiClient.convertToType(data['owner_name'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], AccountStatusEnum);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Account</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Account</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['iban'] && !(typeof data['iban'] === 'string' || data['iban'] instanceof String)) {
            throw new Error("Expected the field `iban` to be a primitive type in the JSON string but got " + data['iban']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['institution_id'] && !(typeof data['institution_id'] === 'string' || data['institution_id'] instanceof String)) {
            throw new Error("Expected the field `institution_id` to be a primitive type in the JSON string but got " + data['institution_id']);
        }
        // ensure the json data is a string
        if (data['owner_name'] && !(typeof data['owner_name'] === 'string' || data['owner_name'] instanceof String)) {
            throw new Error("Expected the field `owner_name` to be a primitive type in the JSON string but got " + data['owner_name']);
        }

        return true;
    }


}



/**
 * The date & time at which the account object was created.
 * @member {Date} created
 */
Account.prototype['created'] = undefined;

/**
 * The Account IBAN
 * @member {String} iban
 */
Account.prototype['iban'] = undefined;

/**
 * The ID of this Account, used to refer to this account in other API calls.
 * @member {String} id
 */
Account.prototype['id'] = undefined;

/**
 * The ASPSP associated with this account.
 * @member {String} institution_id
 */
Account.prototype['institution_id'] = undefined;

/**
 * The date & time at which the account object was last accessed.
 * @member {Date} last_accessed
 */
Account.prototype['last_accessed'] = undefined;

/**
 * The name of the account owner.
 * @member {String} owner_name
 */
Account.prototype['owner_name'] = undefined;

/**
 * The processing status of this account.
 * @member {module:model/AccountStatusEnum} status
 */
Account.prototype['status'] = undefined;






export default Account;

