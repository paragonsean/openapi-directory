/**
 * Nordigen Account Information Services API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0 (v2)
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The IntegrationRetrieve model module.
 * @module model/IntegrationRetrieve
 * @version 2.0 (v2)
 */
class IntegrationRetrieve {
    /**
     * Constructs a new <code>IntegrationRetrieve</code>.
     * IntegrationSerializer for Retrieve endpoint.
     * @alias module:model/IntegrationRetrieve
     * @param countries {Array.<String>} 
     * @param id {String} 
     * @param logo {String} 
     * @param name {String} 
     * @param supportedFeatures {Array.<Object>} 
     * @param supportedPayments {Object.<String, Object>} 
     */
    constructor(countries, id, logo, name, supportedFeatures, supportedPayments) { 
        
        IntegrationRetrieve.initialize(this, countries, id, logo, name, supportedFeatures, supportedPayments);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, countries, id, logo, name, supportedFeatures, supportedPayments) { 
        obj['countries'] = countries;
        obj['id'] = id;
        obj['logo'] = logo;
        obj['name'] = name;
        obj['supported_features'] = supportedFeatures;
        obj['supported_payments'] = supportedPayments;
        obj['transaction_total_days'] = '90';
    }

    /**
     * Constructs a <code>IntegrationRetrieve</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IntegrationRetrieve} obj Optional instance to populate.
     * @return {module:model/IntegrationRetrieve} The populated <code>IntegrationRetrieve</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IntegrationRetrieve();

            if (data.hasOwnProperty('bic')) {
                obj['bic'] = ApiClient.convertToType(data['bic'], 'String');
            }
            if (data.hasOwnProperty('countries')) {
                obj['countries'] = ApiClient.convertToType(data['countries'], ['String']);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('logo')) {
                obj['logo'] = ApiClient.convertToType(data['logo'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('supported_features')) {
                obj['supported_features'] = ApiClient.convertToType(data['supported_features'], [Object]);
            }
            if (data.hasOwnProperty('supported_payments')) {
                obj['supported_payments'] = ApiClient.convertToType(data['supported_payments'], {'String': Object});
            }
            if (data.hasOwnProperty('transaction_total_days')) {
                obj['transaction_total_days'] = ApiClient.convertToType(data['transaction_total_days'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IntegrationRetrieve</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IntegrationRetrieve</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of IntegrationRetrieve.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['bic'] && !(typeof data['bic'] === 'string' || data['bic'] instanceof String)) {
            throw new Error("Expected the field `bic` to be a primitive type in the JSON string but got " + data['bic']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['countries'])) {
            throw new Error("Expected the field `countries` to be an array in the JSON data but got " + data['countries']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['logo'] && !(typeof data['logo'] === 'string' || data['logo'] instanceof String)) {
            throw new Error("Expected the field `logo` to be a primitive type in the JSON string but got " + data['logo']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['supported_features'])) {
            throw new Error("Expected the field `supported_features` to be an array in the JSON data but got " + data['supported_features']);
        }
        // ensure the json data is a string
        if (data['transaction_total_days'] && !(typeof data['transaction_total_days'] === 'string' || data['transaction_total_days'] instanceof String)) {
            throw new Error("Expected the field `transaction_total_days` to be a primitive type in the JSON string but got " + data['transaction_total_days']);
        }

        return true;
    }


}

IntegrationRetrieve.RequiredProperties = ["countries", "id", "logo", "name", "supported_features", "supported_payments"];

/**
 * @member {String} bic
 */
IntegrationRetrieve.prototype['bic'] = undefined;

/**
 * @member {Array.<String>} countries
 */
IntegrationRetrieve.prototype['countries'] = undefined;

/**
 * @member {String} id
 */
IntegrationRetrieve.prototype['id'] = undefined;

/**
 * @member {String} logo
 */
IntegrationRetrieve.prototype['logo'] = undefined;

/**
 * @member {String} name
 */
IntegrationRetrieve.prototype['name'] = undefined;

/**
 * @member {Array.<Object>} supported_features
 */
IntegrationRetrieve.prototype['supported_features'] = undefined;

/**
 * @member {Object.<String, Object>} supported_payments
 */
IntegrationRetrieve.prototype['supported_payments'] = undefined;

/**
 * @member {String} transaction_total_days
 * @default '90'
 */
IntegrationRetrieve.prototype['transaction_total_days'] = '90';






export default IntegrationRetrieve;

