/**
 * Nordigen Account Information Services API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0 (v2)
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import JWTObtainPairRequest from '../model/JWTObtainPairRequest';
import JWTRefreshRequest from '../model/JWTRefreshRequest';
import SpectacularJWTObtain from '../model/SpectacularJWTObtain';
import SpectacularJWTRefresh from '../model/SpectacularJWTRefresh';

/**
* Token service.
* @module api/TokenApi
* @version 2.0 (v2)
*/
export default class TokenApi {

    /**
    * Constructs a new TokenApi. 
    * @alias module:api/TokenApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the jWTObtain operation.
     * @callback module:api/TokenApi~jWTObtainCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SpectacularJWTObtain} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Obtain JWT pair
     * @param {module:model/JWTObtainPairRequest} jWTObtainPairRequest 
     * @param {module:api/TokenApi~jWTObtainCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SpectacularJWTObtain}
     */
    jWTObtain(jWTObtainPairRequest, callback) {
      let postBody = jWTObtainPairRequest;
      // verify the required parameter 'jWTObtainPairRequest' is set
      if (jWTObtainPairRequest === undefined || jWTObtainPairRequest === null) {
        throw new Error("Missing the required parameter 'jWTObtainPairRequest' when calling jWTObtain");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['jwtAuth'];
      let contentTypes = ['application/json', 'application/x-www-form-urlencoded', 'multipart/form-data'];
      let accepts = ['application/json'];
      let returnType = SpectacularJWTObtain;
      return this.apiClient.callApi(
        '/api/v2/token/new/', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the jWTRefresh operation.
     * @callback module:api/TokenApi~jWTRefreshCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SpectacularJWTRefresh} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Refresh access token
     * @param {module:model/JWTRefreshRequest} jWTRefreshRequest 
     * @param {module:api/TokenApi~jWTRefreshCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SpectacularJWTRefresh}
     */
    jWTRefresh(jWTRefreshRequest, callback) {
      let postBody = jWTRefreshRequest;
      // verify the required parameter 'jWTRefreshRequest' is set
      if (jWTRefreshRequest === undefined || jWTRefreshRequest === null) {
        throw new Error("Missing the required parameter 'jWTRefreshRequest' when calling jWTRefresh");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['jwtAuth'];
      let contentTypes = ['application/json', 'application/x-www-form-urlencoded', 'multipart/form-data'];
      let accepts = ['application/json'];
      let returnType = SpectacularJWTRefresh;
      return this.apiClient.callApi(
        '/api/v2/token/refresh/', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
