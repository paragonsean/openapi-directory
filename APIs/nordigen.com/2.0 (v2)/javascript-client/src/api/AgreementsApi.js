/**
 * Nordigen Account Information Services API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0 (v2)
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import EndUserAgreement from '../model/EndUserAgreement';
import EndUserAgreementRequest from '../model/EndUserAgreementRequest';
import EnduserAcceptanceDetailsRequest from '../model/EnduserAcceptanceDetailsRequest';
import PaginatedEndUserAgreementList from '../model/PaginatedEndUserAgreementList';

/**
* Agreements service.
* @module api/AgreementsApi
* @version 2.0 (v2)
*/
export default class AgreementsApi {

    /**
    * Constructs a new AgreementsApi. 
    * @alias module:api/AgreementsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the acceptEUA operation.
     * @callback module:api/AgreementsApi~acceptEUACallback
     * @param {String} error Error message, if any.
     * @param {module:model/EndUserAgreement} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Accept an end-user agreement via the API
     * @param {String} id A UUID string identifying this end user agreement.
     * @param {module:model/EnduserAcceptanceDetailsRequest} enduserAcceptanceDetailsRequest 
     * @param {module:api/AgreementsApi~acceptEUACallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/EndUserAgreement}
     */
    acceptEUA(id, enduserAcceptanceDetailsRequest, callback) {
      let postBody = enduserAcceptanceDetailsRequest;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling acceptEUA");
      }
      // verify the required parameter 'enduserAcceptanceDetailsRequest' is set
      if (enduserAcceptanceDetailsRequest === undefined || enduserAcceptanceDetailsRequest === null) {
        throw new Error("Missing the required parameter 'enduserAcceptanceDetailsRequest' when calling acceptEUA");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['jwtAuth'];
      let contentTypes = ['application/json', 'application/x-www-form-urlencoded', 'multipart/form-data'];
      let accepts = ['application/json'];
      let returnType = EndUserAgreement;
      return this.apiClient.callApi(
        '/api/v2/agreements/enduser/{id}/accept/', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the createEUAV2 operation.
     * @callback module:api/AgreementsApi~createEUAV2Callback
     * @param {String} error Error message, if any.
     * @param {module:model/EndUserAgreement} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * API endpoints related to end-user agreements.
     * @param {module:model/EndUserAgreementRequest} endUserAgreementRequest 
     * @param {module:api/AgreementsApi~createEUAV2Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/EndUserAgreement}
     */
    createEUAV2(endUserAgreementRequest, callback) {
      let postBody = endUserAgreementRequest;
      // verify the required parameter 'endUserAgreementRequest' is set
      if (endUserAgreementRequest === undefined || endUserAgreementRequest === null) {
        throw new Error("Missing the required parameter 'endUserAgreementRequest' when calling createEUAV2");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['jwtAuth'];
      let contentTypes = ['application/json', 'application/x-www-form-urlencoded', 'multipart/form-data'];
      let accepts = ['application/json'];
      let returnType = EndUserAgreement;
      return this.apiClient.callApi(
        '/api/v2/agreements/enduser/', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteEUAByIdV2 operation.
     * @callback module:api/AgreementsApi~deleteEUAByIdV2Callback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete an end user agreement
     * @param {String} id A UUID string identifying this end user agreement.
     * @param {module:api/AgreementsApi~deleteEUAByIdV2Callback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteEUAByIdV2(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling deleteEUAByIdV2");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['jwtAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/v2/agreements/enduser/{id}/', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the retrieveAllEUAsForAnEndUserV2 operation.
     * @callback module:api/AgreementsApi~retrieveAllEUAsForAnEndUserV2Callback
     * @param {String} error Error message, if any.
     * @param {module:model/PaginatedEndUserAgreementList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * API endpoints related to end-user agreements.
     * @param {Object} opts Optional parameters
     * @param {Number} [limit = 100)] Number of results to return per page.
     * @param {Number} [offset = 1)] The initial index from which to return the results.
     * @param {module:api/AgreementsApi~retrieveAllEUAsForAnEndUserV2Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PaginatedEndUserAgreementList}
     */
    retrieveAllEUAsForAnEndUserV2(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'limit': opts['limit'],
        'offset': opts['offset']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['jwtAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PaginatedEndUserAgreementList;
      return this.apiClient.callApi(
        '/api/v2/agreements/enduser/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the retrieveEUAByIdV2 operation.
     * @callback module:api/AgreementsApi~retrieveEUAByIdV2Callback
     * @param {String} error Error message, if any.
     * @param {module:model/EndUserAgreement} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve end user agreement by ID
     * @param {String} id A UUID string identifying this end user agreement.
     * @param {module:api/AgreementsApi~retrieveEUAByIdV2Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/EndUserAgreement}
     */
    retrieveEUAByIdV2(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling retrieveEUAByIdV2");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['jwtAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = EndUserAgreement;
      return this.apiClient.callApi(
        '/api/v2/agreements/enduser/{id}/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
