/**
 * Nordigen Account Information Services API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0 (v2)
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.NordigenAccountInformationServicesApi);
  }
}(this, function(expect, NordigenAccountInformationServicesApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new NordigenAccountInformationServicesApi.PaymentsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('PaymentsApi', function() {
    describe('createPayment', function() {
      it('should call createPayment successfully', function(done) {
        //uncomment below and update the code to test createPayment
        //instance.createPayment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deletePeriodicPayment', function() {
      it('should call deletePeriodicPayment successfully', function(done) {
        //uncomment below and update the code to test deletePeriodicPayment
        //instance.deletePeriodicPayment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listMinimumRequiredFieldsForInstitution', function() {
      it('should call listMinimumRequiredFieldsForInstitution successfully', function(done) {
        //uncomment below and update the code to test listMinimumRequiredFieldsForInstitution
        //instance.listMinimumRequiredFieldsForInstitution(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listPayments', function() {
      it('should call listPayments successfully', function(done) {
        //uncomment below and update the code to test listPayments
        //instance.listPayments(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('paymentsCreditorsCreate', function() {
      it('should call paymentsCreditorsCreate successfully', function(done) {
        //uncomment below and update the code to test paymentsCreditorsCreate
        //instance.paymentsCreditorsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('paymentsCreditorsDestroy', function() {
      it('should call paymentsCreditorsDestroy successfully', function(done) {
        //uncomment below and update the code to test paymentsCreditorsDestroy
        //instance.paymentsCreditorsDestroy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('paymentsCreditorsList', function() {
      it('should call paymentsCreditorsList successfully', function(done) {
        //uncomment below and update the code to test paymentsCreditorsList
        //instance.paymentsCreditorsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('paymentsCreditorsRetrieve', function() {
      it('should call paymentsCreditorsRetrieve successfully', function(done) {
        //uncomment below and update the code to test paymentsCreditorsRetrieve
        //instance.paymentsCreditorsRetrieve(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('paymentsSubmitCreate', function() {
      it('should call paymentsSubmitCreate successfully', function(done) {
        //uncomment below and update the code to test paymentsSubmitCreate
        //instance.paymentsSubmitCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('retrieveAllPaymentCreditorAccounts', function() {
      it('should call retrieveAllPaymentCreditorAccounts successfully', function(done) {
        //uncomment below and update the code to test retrieveAllPaymentCreditorAccounts
        //instance.retrieveAllPaymentCreditorAccounts(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('retrievePayment', function() {
      it('should call retrievePayment successfully', function(done) {
        //uncomment below and update the code to test retrievePayment
        //instance.retrievePayment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
