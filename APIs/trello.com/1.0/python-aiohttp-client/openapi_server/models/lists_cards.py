# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ListsCards(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, desc: str=None, due: str=None, id_members: str=None, labels: str=None, name: str=None):
        """ListsCards - a model defined in OpenAPI

        :param desc: The desc of this ListsCards.
        :param due: The due of this ListsCards.
        :param id_members: The id_members of this ListsCards.
        :param labels: The labels of this ListsCards.
        :param name: The name of this ListsCards.
        """
        self.openapi_types = {
            'desc': str,
            'due': str,
            'id_members': str,
            'labels': str,
            'name': str
        }

        self.attribute_map = {
            'desc': 'desc',
            'due': 'due',
            'id_members': 'idMembers',
            'labels': 'labels',
            'name': 'name'
        }

        self._desc = desc
        self._due = due
        self._id_members = id_members
        self._labels = labels
        self._name = name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListsCards':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The lists_cards of this ListsCards.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def desc(self):
        """Gets the desc of this ListsCards.

        a string with a length from 0 to 16384

        :return: The desc of this ListsCards.
        :rtype: str
        """
        return self._desc

    @desc.setter
    def desc(self, desc):
        """Sets the desc of this ListsCards.

        a string with a length from 0 to 16384

        :param desc: The desc of this ListsCards.
        :type desc: str
        """

        self._desc = desc

    @property
    def due(self):
        """Gets the due of this ListsCards.

        A date, or null

        :return: The due of this ListsCards.
        :rtype: str
        """
        return self._due

    @due.setter
    def due(self, due):
        """Sets the due of this ListsCards.

        A date, or null

        :param due: The due of this ListsCards.
        :type due: str
        """

        self._due = due

    @property
    def id_members(self):
        """Gets the id_members of this ListsCards.

        A comma-separated list of objectIds, 24-character hex strings

        :return: The id_members of this ListsCards.
        :rtype: str
        """
        return self._id_members

    @id_members.setter
    def id_members(self, id_members):
        """Sets the id_members of this ListsCards.

        A comma-separated list of objectIds, 24-character hex strings

        :param id_members: The id_members of this ListsCards.
        :type id_members: str
        """

        self._id_members = id_members

    @property
    def labels(self):
        """Gets the labels of this ListsCards.

        all or a comma-separated list of: blue, green, orange, purple, red or yellow

        :return: The labels of this ListsCards.
        :rtype: str
        """
        return self._labels

    @labels.setter
    def labels(self, labels):
        """Sets the labels of this ListsCards.

        all or a comma-separated list of: blue, green, orange, purple, red or yellow

        :param labels: The labels of this ListsCards.
        :type labels: str
        """

        self._labels = labels

    @property
    def name(self):
        """Gets the name of this ListsCards.

        a string with a length from 1 to 16384

        :return: The name of this ListsCards.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ListsCards.

        a string with a length from 1 to 16384

        :param name: The name of this ListsCards.
        :type name: str
        """

        self._name = name
