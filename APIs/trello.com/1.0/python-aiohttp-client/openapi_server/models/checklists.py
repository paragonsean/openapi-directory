# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Checklists(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id_board: str=None, id_card: str=None, id_checklist_source: str=None, name: str=None, pos: str=None):
        """Checklists - a model defined in OpenAPI

        :param id_board: The id_board of this Checklists.
        :param id_card: The id_card of this Checklists.
        :param id_checklist_source: The id_checklist_source of this Checklists.
        :param name: The name of this Checklists.
        :param pos: The pos of this Checklists.
        """
        self.openapi_types = {
            'id_board': str,
            'id_card': str,
            'id_checklist_source': str,
            'name': str,
            'pos': str
        }

        self.attribute_map = {
            'id_board': 'idBoard',
            'id_card': 'idCard',
            'id_checklist_source': 'idChecklistSource',
            'name': 'name',
            'pos': 'pos'
        }

        self._id_board = id_board
        self._id_card = id_card
        self._id_checklist_source = id_checklist_source
        self._name = name
        self._pos = pos

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Checklists':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The checklists of this Checklists.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id_board(self):
        """Gets the id_board of this Checklists.

        id of the board that the checklist should be added to

        :return: The id_board of this Checklists.
        :rtype: str
        """
        return self._id_board

    @id_board.setter
    def id_board(self, id_board):
        """Sets the id_board of this Checklists.

        id of the board that the checklist should be added to

        :param id_board: The id_board of this Checklists.
        :type id_board: str
        """

        self._id_board = id_board

    @property
    def id_card(self):
        """Gets the id_card of this Checklists.

        id of the card that the checklist should be added to

        :return: The id_card of this Checklists.
        :rtype: str
        """
        return self._id_card

    @id_card.setter
    def id_card(self, id_card):
        """Sets the id_card of this Checklists.

        id of the card that the checklist should be added to

        :param id_card: The id_card of this Checklists.
        :type id_card: str
        """

        self._id_card = id_card

    @property
    def id_checklist_source(self):
        """Gets the id_checklist_source of this Checklists.

        The id of the source checklist to copy into a new checklist.

        :return: The id_checklist_source of this Checklists.
        :rtype: str
        """
        return self._id_checklist_source

    @id_checklist_source.setter
    def id_checklist_source(self, id_checklist_source):
        """Sets the id_checklist_source of this Checklists.

        The id of the source checklist to copy into a new checklist.

        :param id_checklist_source: The id_checklist_source of this Checklists.
        :type id_checklist_source: str
        """

        self._id_checklist_source = id_checklist_source

    @property
    def name(self):
        """Gets the name of this Checklists.

        a string with a length from 0 to 16384

        :return: The name of this Checklists.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Checklists.

        a string with a length from 0 to 16384

        :param name: The name of this Checklists.
        :type name: str
        """

        self._name = name

    @property
    def pos(self):
        """Gets the pos of this Checklists.

        A position. top , bottom , or a positive number.

        :return: The pos of this Checklists.
        :rtype: str
        """
        return self._pos

    @pos.setter
    def pos(self, pos):
        """Sets the pos of this Checklists.

        A position. top , bottom , or a positive number.

        :param pos: The pos of this Checklists.
        :type pos: str
        """

        self._pos = pos
