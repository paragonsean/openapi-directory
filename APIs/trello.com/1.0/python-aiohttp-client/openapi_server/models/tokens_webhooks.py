# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TokensWebhooks(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, callback_url: str=None, description: str=None, id_model: str=None):
        """TokensWebhooks - a model defined in OpenAPI

        :param callback_url: The callback_url of this TokensWebhooks.
        :param description: The description of this TokensWebhooks.
        :param id_model: The id_model of this TokensWebhooks.
        """
        self.openapi_types = {
            'callback_url': str,
            'description': str,
            'id_model': str
        }

        self.attribute_map = {
            'callback_url': 'callbackURL',
            'description': 'description',
            'id_model': 'idModel'
        }

        self._callback_url = callback_url
        self._description = description
        self._id_model = id_model

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TokensWebhooks':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The tokens_webhooks of this TokensWebhooks.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def callback_url(self):
        """Gets the callback_url of this TokensWebhooks.

        A valid URL that is reachable with a HEAD request

        :return: The callback_url of this TokensWebhooks.
        :rtype: str
        """
        return self._callback_url

    @callback_url.setter
    def callback_url(self, callback_url):
        """Sets the callback_url of this TokensWebhooks.

        A valid URL that is reachable with a HEAD request

        :param callback_url: The callback_url of this TokensWebhooks.
        :type callback_url: str
        """

        self._callback_url = callback_url

    @property
    def description(self):
        """Gets the description of this TokensWebhooks.

        a string with a length from 0 to 16384

        :return: The description of this TokensWebhooks.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this TokensWebhooks.

        a string with a length from 0 to 16384

        :param description: The description of this TokensWebhooks.
        :type description: str
        """

        self._description = description

    @property
    def id_model(self):
        """Gets the id_model of this TokensWebhooks.

        id of the model to be monitored

        :return: The id_model of this TokensWebhooks.
        :rtype: str
        """
        return self._id_model

    @id_model.setter
    def id_model(self, id_model):
        """Sets the id_model of this TokensWebhooks.

        id of the model to be monitored

        :param id_model: The id_model of this TokensWebhooks.
        :type id_model: str
        """

        self._id_model = id_model
