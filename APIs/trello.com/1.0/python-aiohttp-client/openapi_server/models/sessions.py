# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Sessions(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id_board: str=None, status: str=None):
        """Sessions - a model defined in OpenAPI

        :param id_board: The id_board of this Sessions.
        :param status: The status of this Sessions.
        """
        self.openapi_types = {
            'id_board': str,
            'status': str
        }

        self.attribute_map = {
            'id_board': 'idBoard',
            'status': 'status'
        }

        self._id_board = id_board
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Sessions':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The sessions of this Sessions.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id_board(self):
        """Gets the id_board of this Sessions.

        The id of the board you&#39;re viewing.  Boards with no viewers will not get updates about members&#39; statuses.

        :return: The id_board of this Sessions.
        :rtype: str
        """
        return self._id_board

    @id_board.setter
    def id_board(self, id_board):
        """Sets the id_board of this Sessions.

        The id of the board you&#39;re viewing.  Boards with no viewers will not get updates about members&#39; statuses.

        :param id_board: The id_board of this Sessions.
        :type id_board: str
        """

        self._id_board = id_board

    @property
    def status(self):
        """Gets the status of this Sessions.

        One of: active, disconnected or idle

        :return: The status of this Sessions.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this Sessions.

        One of: active, disconnected or idle

        :param status: The status of this Sessions.
        :type status: str
        """

        self._status = status
