# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Organizations(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, desc: str=None, display_name: str=None, name: str=None, prefs_associated_domain: str=None, prefs_board_visibility_restrict_org: str=None, prefs_board_visibility_restrict_private: str=None, prefs_board_visibility_restrict_public: str=None, prefs_external_members_disabled: str=None, prefs_google_apps_version: str=None, prefs_org_invite_restrict: str=None, prefs_permission_level: str=None, website: str=None):
        """Organizations - a model defined in OpenAPI

        :param desc: The desc of this Organizations.
        :param display_name: The display_name of this Organizations.
        :param name: The name of this Organizations.
        :param prefs_associated_domain: The prefs_associated_domain of this Organizations.
        :param prefs_board_visibility_restrict_org: The prefs_board_visibility_restrict_org of this Organizations.
        :param prefs_board_visibility_restrict_private: The prefs_board_visibility_restrict_private of this Organizations.
        :param prefs_board_visibility_restrict_public: The prefs_board_visibility_restrict_public of this Organizations.
        :param prefs_external_members_disabled: The prefs_external_members_disabled of this Organizations.
        :param prefs_google_apps_version: The prefs_google_apps_version of this Organizations.
        :param prefs_org_invite_restrict: The prefs_org_invite_restrict of this Organizations.
        :param prefs_permission_level: The prefs_permission_level of this Organizations.
        :param website: The website of this Organizations.
        """
        self.openapi_types = {
            'desc': str,
            'display_name': str,
            'name': str,
            'prefs_associated_domain': str,
            'prefs_board_visibility_restrict_org': str,
            'prefs_board_visibility_restrict_private': str,
            'prefs_board_visibility_restrict_public': str,
            'prefs_external_members_disabled': str,
            'prefs_google_apps_version': str,
            'prefs_org_invite_restrict': str,
            'prefs_permission_level': str,
            'website': str
        }

        self.attribute_map = {
            'desc': 'desc',
            'display_name': 'displayName',
            'name': 'name',
            'prefs_associated_domain': 'prefs/associatedDomain',
            'prefs_board_visibility_restrict_org': 'prefs/boardVisibilityRestrict/org',
            'prefs_board_visibility_restrict_private': 'prefs/boardVisibilityRestrict/private',
            'prefs_board_visibility_restrict_public': 'prefs/boardVisibilityRestrict/public',
            'prefs_external_members_disabled': 'prefs/externalMembersDisabled',
            'prefs_google_apps_version': 'prefs/googleAppsVersion',
            'prefs_org_invite_restrict': 'prefs/orgInviteRestrict',
            'prefs_permission_level': 'prefs/permissionLevel',
            'website': 'website'
        }

        self._desc = desc
        self._display_name = display_name
        self._name = name
        self._prefs_associated_domain = prefs_associated_domain
        self._prefs_board_visibility_restrict_org = prefs_board_visibility_restrict_org
        self._prefs_board_visibility_restrict_private = prefs_board_visibility_restrict_private
        self._prefs_board_visibility_restrict_public = prefs_board_visibility_restrict_public
        self._prefs_external_members_disabled = prefs_external_members_disabled
        self._prefs_google_apps_version = prefs_google_apps_version
        self._prefs_org_invite_restrict = prefs_org_invite_restrict
        self._prefs_permission_level = prefs_permission_level
        self._website = website

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Organizations':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The organizations of this Organizations.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def desc(self):
        """Gets the desc of this Organizations.

        a string with a length from 0 to 16384

        :return: The desc of this Organizations.
        :rtype: str
        """
        return self._desc

    @desc.setter
    def desc(self, desc):
        """Sets the desc of this Organizations.

        a string with a length from 0 to 16384

        :param desc: The desc of this Organizations.
        :type desc: str
        """

        self._desc = desc

    @property
    def display_name(self):
        """Gets the display_name of this Organizations.

        A string with a length of at least 1.  Cannot begin or end with a space.

        :return: The display_name of this Organizations.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this Organizations.

        A string with a length of at least 1.  Cannot begin or end with a space.

        :param display_name: The display_name of this Organizations.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def name(self):
        """Gets the name of this Organizations.

        a string with a length from 0 to 16384

        :return: The name of this Organizations.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Organizations.

        a string with a length from 0 to 16384

        :param name: The name of this Organizations.
        :type name: str
        """

        self._name = name

    @property
    def prefs_associated_domain(self):
        """Gets the prefs_associated_domain of this Organizations.

        The google apps domain to link this org to.

        :return: The prefs_associated_domain of this Organizations.
        :rtype: str
        """
        return self._prefs_associated_domain

    @prefs_associated_domain.setter
    def prefs_associated_domain(self, prefs_associated_domain):
        """Sets the prefs_associated_domain of this Organizations.

        The google apps domain to link this org to.

        :param prefs_associated_domain: The prefs_associated_domain of this Organizations.
        :type prefs_associated_domain: str
        """

        self._prefs_associated_domain = prefs_associated_domain

    @property
    def prefs_board_visibility_restrict_org(self):
        """Gets the prefs_board_visibility_restrict_org of this Organizations.

        One of: admin, none or org

        :return: The prefs_board_visibility_restrict_org of this Organizations.
        :rtype: str
        """
        return self._prefs_board_visibility_restrict_org

    @prefs_board_visibility_restrict_org.setter
    def prefs_board_visibility_restrict_org(self, prefs_board_visibility_restrict_org):
        """Sets the prefs_board_visibility_restrict_org of this Organizations.

        One of: admin, none or org

        :param prefs_board_visibility_restrict_org: The prefs_board_visibility_restrict_org of this Organizations.
        :type prefs_board_visibility_restrict_org: str
        """

        self._prefs_board_visibility_restrict_org = prefs_board_visibility_restrict_org

    @property
    def prefs_board_visibility_restrict_private(self):
        """Gets the prefs_board_visibility_restrict_private of this Organizations.

        One of: admin, none or org

        :return: The prefs_board_visibility_restrict_private of this Organizations.
        :rtype: str
        """
        return self._prefs_board_visibility_restrict_private

    @prefs_board_visibility_restrict_private.setter
    def prefs_board_visibility_restrict_private(self, prefs_board_visibility_restrict_private):
        """Sets the prefs_board_visibility_restrict_private of this Organizations.

        One of: admin, none or org

        :param prefs_board_visibility_restrict_private: The prefs_board_visibility_restrict_private of this Organizations.
        :type prefs_board_visibility_restrict_private: str
        """

        self._prefs_board_visibility_restrict_private = prefs_board_visibility_restrict_private

    @property
    def prefs_board_visibility_restrict_public(self):
        """Gets the prefs_board_visibility_restrict_public of this Organizations.

        One of: admin, none or org

        :return: The prefs_board_visibility_restrict_public of this Organizations.
        :rtype: str
        """
        return self._prefs_board_visibility_restrict_public

    @prefs_board_visibility_restrict_public.setter
    def prefs_board_visibility_restrict_public(self, prefs_board_visibility_restrict_public):
        """Sets the prefs_board_visibility_restrict_public of this Organizations.

        One of: admin, none or org

        :param prefs_board_visibility_restrict_public: The prefs_board_visibility_restrict_public of this Organizations.
        :type prefs_board_visibility_restrict_public: str
        """

        self._prefs_board_visibility_restrict_public = prefs_board_visibility_restrict_public

    @property
    def prefs_external_members_disabled(self):
        """Gets the prefs_external_members_disabled of this Organizations.

         true or false

        :return: The prefs_external_members_disabled of this Organizations.
        :rtype: str
        """
        return self._prefs_external_members_disabled

    @prefs_external_members_disabled.setter
    def prefs_external_members_disabled(self, prefs_external_members_disabled):
        """Sets the prefs_external_members_disabled of this Organizations.

         true or false

        :param prefs_external_members_disabled: The prefs_external_members_disabled of this Organizations.
        :type prefs_external_members_disabled: str
        """

        self._prefs_external_members_disabled = prefs_external_members_disabled

    @property
    def prefs_google_apps_version(self):
        """Gets the prefs_google_apps_version of this Organizations.

        a number from 1 to 2

        :return: The prefs_google_apps_version of this Organizations.
        :rtype: str
        """
        return self._prefs_google_apps_version

    @prefs_google_apps_version.setter
    def prefs_google_apps_version(self, prefs_google_apps_version):
        """Sets the prefs_google_apps_version of this Organizations.

        a number from 1 to 2

        :param prefs_google_apps_version: The prefs_google_apps_version of this Organizations.
        :type prefs_google_apps_version: str
        """

        self._prefs_google_apps_version = prefs_google_apps_version

    @property
    def prefs_org_invite_restrict(self):
        """Gets the prefs_org_invite_restrict of this Organizations.

        An email address with optional expansion tokens

        :return: The prefs_org_invite_restrict of this Organizations.
        :rtype: str
        """
        return self._prefs_org_invite_restrict

    @prefs_org_invite_restrict.setter
    def prefs_org_invite_restrict(self, prefs_org_invite_restrict):
        """Sets the prefs_org_invite_restrict of this Organizations.

        An email address with optional expansion tokens

        :param prefs_org_invite_restrict: The prefs_org_invite_restrict of this Organizations.
        :type prefs_org_invite_restrict: str
        """

        self._prefs_org_invite_restrict = prefs_org_invite_restrict

    @property
    def prefs_permission_level(self):
        """Gets the prefs_permission_level of this Organizations.

        One of: private or public

        :return: The prefs_permission_level of this Organizations.
        :rtype: str
        """
        return self._prefs_permission_level

    @prefs_permission_level.setter
    def prefs_permission_level(self, prefs_permission_level):
        """Sets the prefs_permission_level of this Organizations.

        One of: private or public

        :param prefs_permission_level: The prefs_permission_level of this Organizations.
        :type prefs_permission_level: str
        """

        self._prefs_permission_level = prefs_permission_level

    @property
    def website(self):
        """Gets the website of this Organizations.

        A URL starting with http:// or https:// or null

        :return: The website of this Organizations.
        :rtype: str
        """
        return self._website

    @website.setter
    def website(self, website):
        """Sets the website of this Organizations.

        A URL starting with http:// or https:// or null

        :param website: The website of this Organizations.
        :type website: str
        """

        self._website = website
