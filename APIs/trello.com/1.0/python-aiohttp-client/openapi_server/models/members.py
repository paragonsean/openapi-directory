# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Members(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, avatar_source: str=None, bio: str=None, full_name: str=None, initials: str=None, prefs_color_blind: str=None, prefs_locale: str=None, prefs_minutes_between_summaries: str=None, username: str=None):
        """Members - a model defined in OpenAPI

        :param avatar_source: The avatar_source of this Members.
        :param bio: The bio of this Members.
        :param full_name: The full_name of this Members.
        :param initials: The initials of this Members.
        :param prefs_color_blind: The prefs_color_blind of this Members.
        :param prefs_locale: The prefs_locale of this Members.
        :param prefs_minutes_between_summaries: The prefs_minutes_between_summaries of this Members.
        :param username: The username of this Members.
        """
        self.openapi_types = {
            'avatar_source': str,
            'bio': str,
            'full_name': str,
            'initials': str,
            'prefs_color_blind': str,
            'prefs_locale': str,
            'prefs_minutes_between_summaries': str,
            'username': str
        }

        self.attribute_map = {
            'avatar_source': 'avatarSource',
            'bio': 'bio',
            'full_name': 'fullName',
            'initials': 'initials',
            'prefs_color_blind': 'prefs/colorBlind',
            'prefs_locale': 'prefs/locale',
            'prefs_minutes_between_summaries': 'prefs/minutesBetweenSummaries',
            'username': 'username'
        }

        self._avatar_source = avatar_source
        self._bio = bio
        self._full_name = full_name
        self._initials = initials
        self._prefs_color_blind = prefs_color_blind
        self._prefs_locale = prefs_locale
        self._prefs_minutes_between_summaries = prefs_minutes_between_summaries
        self._username = username

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Members':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The members of this Members.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def avatar_source(self):
        """Gets the avatar_source of this Members.

        One of: gravatar, none or upload

        :return: The avatar_source of this Members.
        :rtype: str
        """
        return self._avatar_source

    @avatar_source.setter
    def avatar_source(self, avatar_source):
        """Sets the avatar_source of this Members.

        One of: gravatar, none or upload

        :param avatar_source: The avatar_source of this Members.
        :type avatar_source: str
        """

        self._avatar_source = avatar_source

    @property
    def bio(self):
        """Gets the bio of this Members.

        a string with a length from 0 to 16384

        :return: The bio of this Members.
        :rtype: str
        """
        return self._bio

    @bio.setter
    def bio(self, bio):
        """Sets the bio of this Members.

        a string with a length from 0 to 16384

        :param bio: The bio of this Members.
        :type bio: str
        """

        self._bio = bio

    @property
    def full_name(self):
        """Gets the full_name of this Members.

        A string with a length of at least 1.  Cannot begin or end with a space.

        :return: The full_name of this Members.
        :rtype: str
        """
        return self._full_name

    @full_name.setter
    def full_name(self, full_name):
        """Sets the full_name of this Members.

        A string with a length of at least 1.  Cannot begin or end with a space.

        :param full_name: The full_name of this Members.
        :type full_name: str
        """

        self._full_name = full_name

    @property
    def initials(self):
        """Gets the initials of this Members.

        A string with a length from 1 to 4.  Cannot begin or end with a space

        :return: The initials of this Members.
        :rtype: str
        """
        return self._initials

    @initials.setter
    def initials(self, initials):
        """Sets the initials of this Members.

        A string with a length from 1 to 4.  Cannot begin or end with a space

        :param initials: The initials of this Members.
        :type initials: str
        """

        self._initials = initials

    @property
    def prefs_color_blind(self):
        """Gets the prefs_color_blind of this Members.

         true or false

        :return: The prefs_color_blind of this Members.
        :rtype: str
        """
        return self._prefs_color_blind

    @prefs_color_blind.setter
    def prefs_color_blind(self, prefs_color_blind):
        """Sets the prefs_color_blind of this Members.

         true or false

        :param prefs_color_blind: The prefs_color_blind of this Members.
        :type prefs_color_blind: str
        """

        self._prefs_color_blind = prefs_color_blind

    @property
    def prefs_locale(self):
        """Gets the prefs_locale of this Members.

        a string with a length from 0 to 255

        :return: The prefs_locale of this Members.
        :rtype: str
        """
        return self._prefs_locale

    @prefs_locale.setter
    def prefs_locale(self, prefs_locale):
        """Sets the prefs_locale of this Members.

        a string with a length from 0 to 255

        :param prefs_locale: The prefs_locale of this Members.
        :type prefs_locale: str
        """

        self._prefs_locale = prefs_locale

    @property
    def prefs_minutes_between_summaries(self):
        """Gets the prefs_minutes_between_summaries of this Members.

        -1 (disabled), 1 or 60

        :return: The prefs_minutes_between_summaries of this Members.
        :rtype: str
        """
        return self._prefs_minutes_between_summaries

    @prefs_minutes_between_summaries.setter
    def prefs_minutes_between_summaries(self, prefs_minutes_between_summaries):
        """Sets the prefs_minutes_between_summaries of this Members.

        -1 (disabled), 1 or 60

        :param prefs_minutes_between_summaries: The prefs_minutes_between_summaries of this Members.
        :type prefs_minutes_between_summaries: str
        """

        self._prefs_minutes_between_summaries = prefs_minutes_between_summaries

    @property
    def username(self):
        """Gets the username of this Members.

        A string with a length of at least 3.  Only lowercase letters, underscores, and numbers are allowed.  Must be unique.

        :return: The username of this Members.
        :rtype: str
        """
        return self._username

    @username.setter
    def username(self, username):
        """Sets the username of this Members.

        A string with a length of at least 3.  Only lowercase letters, underscores, and numbers are allowed.  Must be unique.

        :param username: The username of this Members.
        :type username: str
        """

        self._username = username
