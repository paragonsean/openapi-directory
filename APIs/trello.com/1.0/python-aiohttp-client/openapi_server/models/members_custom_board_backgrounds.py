# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class MembersCustomBoardBackgrounds(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, brightness: str=None, file: str=None, tile: str=None):
        """MembersCustomBoardBackgrounds - a model defined in OpenAPI

        :param brightness: The brightness of this MembersCustomBoardBackgrounds.
        :param file: The file of this MembersCustomBoardBackgrounds.
        :param tile: The tile of this MembersCustomBoardBackgrounds.
        """
        self.openapi_types = {
            'brightness': str,
            'file': str,
            'tile': str
        }

        self.attribute_map = {
            'brightness': 'brightness',
            'file': 'file',
            'tile': 'tile'
        }

        self._brightness = brightness
        self._file = file
        self._tile = tile

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MembersCustomBoardBackgrounds':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The members_customBoardBackgrounds of this MembersCustomBoardBackgrounds.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def brightness(self):
        """Gets the brightness of this MembersCustomBoardBackgrounds.

        One of: dark, light or unknown

        :return: The brightness of this MembersCustomBoardBackgrounds.
        :rtype: str
        """
        return self._brightness

    @brightness.setter
    def brightness(self, brightness):
        """Sets the brightness of this MembersCustomBoardBackgrounds.

        One of: dark, light or unknown

        :param brightness: The brightness of this MembersCustomBoardBackgrounds.
        :type brightness: str
        """

        self._brightness = brightness

    @property
    def file(self):
        """Gets the file of this MembersCustomBoardBackgrounds.

        A file

        :return: The file of this MembersCustomBoardBackgrounds.
        :rtype: str
        """
        return self._file

    @file.setter
    def file(self, file):
        """Sets the file of this MembersCustomBoardBackgrounds.

        A file

        :param file: The file of this MembersCustomBoardBackgrounds.
        :type file: str
        """

        self._file = file

    @property
    def tile(self):
        """Gets the tile of this MembersCustomBoardBackgrounds.

         true or false

        :return: The tile of this MembersCustomBoardBackgrounds.
        :rtype: str
        """
        return self._tile

    @tile.setter
    def tile(self, tile):
        """Sets the tile of this MembersCustomBoardBackgrounds.

         true or false

        :param tile: The tile of this MembersCustomBoardBackgrounds.
        :type tile: str
        """

        self._tile = tile
