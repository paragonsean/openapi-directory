/**
 * Trello
 * This document describes the REST API of Trello as published by Trello.com.  - <a href='https://trello.com/docs/index.html' target='_blank'>Official Documentation</a>  - <a href='https://trello.com/docs/api' target='_blank'>The HTML pages that were scraped in order to generate this specification.</a>
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIWebhooks.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIWebhooks::OAIWebhooks(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIWebhooks::OAIWebhooks() {
    this->initializeModel();
}

OAIWebhooks::~OAIWebhooks() {}

void OAIWebhooks::initializeModel() {

    m_active_isSet = false;
    m_active_isValid = false;

    m_callback_url_isSet = false;
    m_callback_url_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_id_model_isSet = false;
    m_id_model_isValid = false;
}

void OAIWebhooks::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIWebhooks::fromJsonObject(QJsonObject json) {

    m_active_isValid = ::OpenAPI::fromJsonValue(m_active, json[QString("active")]);
    m_active_isSet = !json[QString("active")].isNull() && m_active_isValid;

    m_callback_url_isValid = ::OpenAPI::fromJsonValue(m_callback_url, json[QString("callbackURL")]);
    m_callback_url_isSet = !json[QString("callbackURL")].isNull() && m_callback_url_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_id_model_isValid = ::OpenAPI::fromJsonValue(m_id_model, json[QString("idModel")]);
    m_id_model_isSet = !json[QString("idModel")].isNull() && m_id_model_isValid;
}

QString OAIWebhooks::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIWebhooks::asJsonObject() const {
    QJsonObject obj;
    if (m_active_isSet) {
        obj.insert(QString("active"), ::OpenAPI::toJsonValue(m_active));
    }
    if (m_callback_url_isSet) {
        obj.insert(QString("callbackURL"), ::OpenAPI::toJsonValue(m_callback_url));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_id_model_isSet) {
        obj.insert(QString("idModel"), ::OpenAPI::toJsonValue(m_id_model));
    }
    return obj;
}

QString OAIWebhooks::getActive() const {
    return m_active;
}
void OAIWebhooks::setActive(const QString &active) {
    m_active = active;
    m_active_isSet = true;
}

bool OAIWebhooks::is_active_Set() const{
    return m_active_isSet;
}

bool OAIWebhooks::is_active_Valid() const{
    return m_active_isValid;
}

QString OAIWebhooks::getCallbackUrl() const {
    return m_callback_url;
}
void OAIWebhooks::setCallbackUrl(const QString &callback_url) {
    m_callback_url = callback_url;
    m_callback_url_isSet = true;
}

bool OAIWebhooks::is_callback_url_Set() const{
    return m_callback_url_isSet;
}

bool OAIWebhooks::is_callback_url_Valid() const{
    return m_callback_url_isValid;
}

QString OAIWebhooks::getDescription() const {
    return m_description;
}
void OAIWebhooks::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIWebhooks::is_description_Set() const{
    return m_description_isSet;
}

bool OAIWebhooks::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIWebhooks::getIdModel() const {
    return m_id_model;
}
void OAIWebhooks::setIdModel(const QString &id_model) {
    m_id_model = id_model;
    m_id_model_isSet = true;
}

bool OAIWebhooks::is_id_model_Set() const{
    return m_id_model_isSet;
}

bool OAIWebhooks::is_id_model_Valid() const{
    return m_id_model_isValid;
}

bool OAIWebhooks::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_active_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_callback_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_model_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIWebhooks::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
