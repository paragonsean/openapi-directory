/**
 * Trello
 * This document describes the REST API of Trello as published by Trello.com.  - <a href='https://trello.com/docs/index.html' target='_blank'>Official Documentation</a>  - <a href='https://trello.com/docs/api' target='_blank'>The HTML pages that were scraped in order to generate this specification.</a>
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBoards_memberships.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBoards_memberships::OAIBoards_memberships(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBoards_memberships::OAIBoards_memberships() {
    this->initializeModel();
}

OAIBoards_memberships::~OAIBoards_memberships() {}

void OAIBoards_memberships::initializeModel() {

    m_member_fields_isSet = false;
    m_member_fields_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAIBoards_memberships::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBoards_memberships::fromJsonObject(QJsonObject json) {

    m_member_fields_isValid = ::OpenAPI::fromJsonValue(m_member_fields, json[QString("member_fields")]);
    m_member_fields_isSet = !json[QString("member_fields")].isNull() && m_member_fields_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;
}

QString OAIBoards_memberships::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBoards_memberships::asJsonObject() const {
    QJsonObject obj;
    if (m_member_fields_isSet) {
        obj.insert(QString("member_fields"), ::OpenAPI::toJsonValue(m_member_fields));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

QString OAIBoards_memberships::getMemberFields() const {
    return m_member_fields;
}
void OAIBoards_memberships::setMemberFields(const QString &member_fields) {
    m_member_fields = member_fields;
    m_member_fields_isSet = true;
}

bool OAIBoards_memberships::is_member_fields_Set() const{
    return m_member_fields_isSet;
}

bool OAIBoards_memberships::is_member_fields_Valid() const{
    return m_member_fields_isValid;
}

QString OAIBoards_memberships::getType() const {
    return m_type;
}
void OAIBoards_memberships::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIBoards_memberships::is_type_Set() const{
    return m_type_isSet;
}

bool OAIBoards_memberships::is_type_Valid() const{
    return m_type_isValid;
}

bool OAIBoards_memberships::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_member_fields_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBoards_memberships::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
