/**
 * Trello
 * This document describes the REST API of Trello as published by Trello.com.  - <a href='https://trello.com/docs/index.html' target='_blank'>Official Documentation</a>  - <a href='https://trello.com/docs/api' target='_blank'>The HTML pages that were scraped in order to generate this specification.</a>
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIChecklists_checkItems.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIChecklists_checkItems::OAIChecklists_checkItems(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIChecklists_checkItems::OAIChecklists_checkItems() {
    this->initializeModel();
}

OAIChecklists_checkItems::~OAIChecklists_checkItems() {}

void OAIChecklists_checkItems::initializeModel() {

    m_checked_isSet = false;
    m_checked_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_pos_isSet = false;
    m_pos_isValid = false;
}

void OAIChecklists_checkItems::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIChecklists_checkItems::fromJsonObject(QJsonObject json) {

    m_checked_isValid = ::OpenAPI::fromJsonValue(m_checked, json[QString("checked")]);
    m_checked_isSet = !json[QString("checked")].isNull() && m_checked_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_pos_isValid = ::OpenAPI::fromJsonValue(m_pos, json[QString("pos")]);
    m_pos_isSet = !json[QString("pos")].isNull() && m_pos_isValid;
}

QString OAIChecklists_checkItems::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIChecklists_checkItems::asJsonObject() const {
    QJsonObject obj;
    if (m_checked_isSet) {
        obj.insert(QString("checked"), ::OpenAPI::toJsonValue(m_checked));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_pos_isSet) {
        obj.insert(QString("pos"), ::OpenAPI::toJsonValue(m_pos));
    }
    return obj;
}

QString OAIChecklists_checkItems::getChecked() const {
    return m_checked;
}
void OAIChecklists_checkItems::setChecked(const QString &checked) {
    m_checked = checked;
    m_checked_isSet = true;
}

bool OAIChecklists_checkItems::is_checked_Set() const{
    return m_checked_isSet;
}

bool OAIChecklists_checkItems::is_checked_Valid() const{
    return m_checked_isValid;
}

QString OAIChecklists_checkItems::getName() const {
    return m_name;
}
void OAIChecklists_checkItems::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIChecklists_checkItems::is_name_Set() const{
    return m_name_isSet;
}

bool OAIChecklists_checkItems::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIChecklists_checkItems::getPos() const {
    return m_pos;
}
void OAIChecklists_checkItems::setPos(const QString &pos) {
    m_pos = pos;
    m_pos_isSet = true;
}

bool OAIChecklists_checkItems::is_pos_Set() const{
    return m_pos_isSet;
}

bool OAIChecklists_checkItems::is_pos_Valid() const{
    return m_pos_isValid;
}

bool OAIChecklists_checkItems::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_checked_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pos_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIChecklists_checkItems::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
