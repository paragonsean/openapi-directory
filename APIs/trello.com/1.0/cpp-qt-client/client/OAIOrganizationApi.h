/**
 * Trello
 * This document describes the REST API of Trello as published by Trello.com.  - <a href='https://trello.com/docs/index.html' target='_blank'>Official Documentation</a>  - <a href='https://trello.com/docs/api' target='_blank'>The HTML pages that were scraped in order to generate this specification.</a>
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#ifndef OAI_OAIOrganizationApi_H
#define OAI_OAIOrganizationApi_H

#include "OAIHelpers.h"
#include "OAIHttpRequest.h"
#include "OAIServerConfiguration.h"
#include "OAIOauth.h"

#include "OAIOrganizations.h"
#include "OAIOrganizations_desc.h"
#include "OAIOrganizations_displayName.h"
#include "OAIOrganizations_logo.h"
#include "OAIOrganizations_members.h"
#include "OAIOrganizations_members_deactivated.h"
#include "OAIOrganizations_memberships.h"
#include "OAIOrganizations_name.h"
#include "OAIOrganizations_website.h"
#include "OAIPrefs_associatedDomain.h"
#include "OAIPrefs_boardVisibilityRestrict.h"
#include "OAIPrefs_externalMembersDisabled.h"
#include "OAIPrefs_googleAppsVersion.h"
#include "OAIPrefs_orgInviteRestrict.h"
#include "OAIPrefs_permissionLevel.h"
#include <QString>

#include <QObject>
#include <QByteArray>
#include <QStringList>
#include <QList>
#include <QNetworkAccessManager>

namespace OpenAPI {

class OAIOrganizationApi : public QObject {
    Q_OBJECT

public:
    OAIOrganizationApi(const int timeOut = 0);
    ~OAIOrganizationApi();

    void initializeServerConfigs();
    int setDefaultServerValue(int serverIndex,const QString &operation, const QString &variable,const QString &val);
    void setServerIndex(const QString &operation, int serverIndex);
    void setApiKey(const QString &apiKeyName, const QString &apiKey);
    void setBearerToken(const QString &token);
    void setUsername(const QString &username);
    void setPassword(const QString &password);
    void setTimeOut(const int timeOut);
    void setWorkingDirectory(const QString &path);
    void setNetworkAccessManager(QNetworkAccessManager* manager);
    int addServerConfiguration(const QString &operation, const QUrl &url, const QString &description = "", const QMap<QString, OAIServerVariable> &variables = QMap<QString, OAIServerVariable>());
    void setNewServerForAllOperations(const QUrl &url, const QString &description = "", const QMap<QString, OAIServerVariable> &variables =  QMap<QString, OAIServerVariable>());
    void setNewServer(const QString &operation, const QUrl &url, const QString &description = "", const QMap<QString, OAIServerVariable> &variables =  QMap<QString, OAIServerVariable>());
    void addHeaders(const QString &key, const QString &value);
    void enableRequestCompression();
    void enableResponseCompression();
    void abortRequests();
    QString getParamStylePrefix(const QString &style);
    QString getParamStyleSuffix(const QString &style);
    QString getParamStyleDelimiter(const QString &style, const QString &name, bool isExplode);

    /**
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  oai_organizations OAIOrganizations [required]
    */
    virtual void addOrganizations(const QString &key, const QString &token, const OAIOrganizations &oai_organizations);

    /**
    * @param[in]  id_org QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  oai_organizations_logo OAIOrganizations_logo [required]
    */
    virtual void addOrganizationsLogoByIdOrg(const QString &id_org, const QString &key, const QString &token, const OAIOrganizations_logo &oai_organizations_logo);

    /**
    * @param[in]  id_org QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    */
    virtual void deleteOrganizationsByIdOrg(const QString &id_org, const QString &key, const QString &token);

    /**
    * @param[in]  id_org QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    */
    virtual void deleteOrganizationsLogoByIdOrg(const QString &id_org, const QString &key, const QString &token);

    /**
    * @param[in]  id_org QString [required]
    * @param[in]  id_member QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    */
    virtual void deleteOrganizationsMembersAllByIdOrgByIdMember(const QString &id_org, const QString &id_member, const QString &key, const QString &token);

    /**
    * @param[in]  id_org QString [required]
    * @param[in]  id_member QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    */
    virtual void deleteOrganizationsMembersByIdOrgByIdMember(const QString &id_org, const QString &id_member, const QString &key, const QString &token);

    /**
    * @param[in]  id_org QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    */
    virtual void deleteOrganizationsPrefsAssociatedDomainByIdOrg(const QString &id_org, const QString &key, const QString &token);

    /**
    * @param[in]  id_org QString [required]
    * @param[in]  value QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    */
    virtual void deleteOrganizationsPrefsOrgInviteRestrictByIdOrg(const QString &id_org, const QString &value, const QString &key, const QString &token);

    /**
    * @param[in]  id_org QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  entities QString [optional]
    * @param[in]  display QString [optional]
    * @param[in]  filter QString [optional]
    * @param[in]  fields QString [optional]
    * @param[in]  limit QString [optional]
    * @param[in]  format QString [optional]
    * @param[in]  since QString [optional]
    * @param[in]  before QString [optional]
    * @param[in]  page QString [optional]
    * @param[in]  id_models QString [optional]
    * @param[in]  member QString [optional]
    * @param[in]  member_fields QString [optional]
    * @param[in]  member_creator QString [optional]
    * @param[in]  member_creator_fields QString [optional]
    */
    virtual void getOrganizationsActionsByIdOrg(const QString &id_org, const QString &key, const QString &token, const ::OpenAPI::OptionalParam<QString> &entities = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &display = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &filter = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &fields = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &limit = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &format = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &since = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &before = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &page = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &id_models = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &member = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &member_fields = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &member_creator = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &member_creator_fields = ::OpenAPI::OptionalParam<QString>());

    /**
    * @param[in]  id_org QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  filter QString [optional]
    * @param[in]  fields QString [optional]
    * @param[in]  actions QString [optional]
    * @param[in]  actions_entities QString [optional]
    * @param[in]  actions_limit QString [optional]
    * @param[in]  actions_format QString [optional]
    * @param[in]  actions_since QString [optional]
    * @param[in]  action_fields QString [optional]
    * @param[in]  memberships QString [optional]
    * @param[in]  organization QString [optional]
    * @param[in]  organization_fields QString [optional]
    * @param[in]  lists QString [optional]
    */
    virtual void getOrganizationsBoardsByIdOrg(const QString &id_org, const QString &key, const QString &token, const ::OpenAPI::OptionalParam<QString> &filter = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &fields = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &actions = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &actions_entities = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &actions_limit = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &actions_format = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &actions_since = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &action_fields = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &memberships = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &organization = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &organization_fields = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &lists = ::OpenAPI::OptionalParam<QString>());

    /**
    * @param[in]  id_org QString [required]
    * @param[in]  filter QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    */
    virtual void getOrganizationsBoardsByIdOrgByFilter(const QString &id_org, const QString &filter, const QString &key, const QString &token);

    /**
    * @param[in]  id_org QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  actions QString [optional]
    * @param[in]  actions_entities QString [optional]
    * @param[in]  actions_display QString [optional]
    * @param[in]  actions_limit QString [optional]
    * @param[in]  action_fields QString [optional]
    * @param[in]  memberships QString [optional]
    * @param[in]  memberships_member QString [optional]
    * @param[in]  memberships_member_fields QString [optional]
    * @param[in]  members QString [optional]
    * @param[in]  member_fields QString [optional]
    * @param[in]  member_activity QString [optional]
    * @param[in]  members_invited QString [optional]
    * @param[in]  members_invited_fields QString [optional]
    * @param[in]  boards QString [optional]
    * @param[in]  board_fields QString [optional]
    * @param[in]  board_actions QString [optional]
    * @param[in]  board_actions_entities QString [optional]
    * @param[in]  board_actions_display QString [optional]
    * @param[in]  board_actions_format QString [optional]
    * @param[in]  board_actions_since QString [optional]
    * @param[in]  board_actions_limit QString [optional]
    * @param[in]  board_action_fields QString [optional]
    * @param[in]  board_lists QString [optional]
    * @param[in]  paid_account QString [optional]
    * @param[in]  fields QString [optional]
    */
    virtual void getOrganizationsByIdOrg(const QString &id_org, const QString &key, const QString &token, const ::OpenAPI::OptionalParam<QString> &actions = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &actions_entities = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &actions_display = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &actions_limit = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &action_fields = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &memberships = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &memberships_member = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &memberships_member_fields = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &members = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &member_fields = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &member_activity = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &members_invited = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &members_invited_fields = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &boards = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &board_fields = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &board_actions = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &board_actions_entities = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &board_actions_display = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &board_actions_format = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &board_actions_since = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &board_actions_limit = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &board_action_fields = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &board_lists = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &paid_account = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &fields = ::OpenAPI::OptionalParam<QString>());

    /**
    * @param[in]  id_org QString [required]
    * @param[in]  field QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    */
    virtual void getOrganizationsByIdOrgByField(const QString &id_org, const QString &field, const QString &key, const QString &token);

    /**
    * @param[in]  id_org QString [required]
    * @param[in]  tags QString [required]
    * @param[in]  ix_last_update QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    */
    virtual void getOrganizationsDeltasByIdOrg(const QString &id_org, const QString &tags, const QString &ix_last_update, const QString &key, const QString &token);

    /**
    * @param[in]  id_org QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  filter QString [optional]
    * @param[in]  fields QString [optional]
    * @param[in]  activity QString [optional]
    */
    virtual void getOrganizationsMembersByIdOrg(const QString &id_org, const QString &key, const QString &token, const ::OpenAPI::OptionalParam<QString> &filter = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &fields = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &activity = ::OpenAPI::OptionalParam<QString>());

    /**
    * @param[in]  id_org QString [required]
    * @param[in]  filter QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    */
    virtual void getOrganizationsMembersByIdOrgByFilter(const QString &id_org, const QString &filter, const QString &key, const QString &token);

    /**
    * @param[in]  id_org QString [required]
    * @param[in]  id_member QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  actions QString [optional]
    * @param[in]  attachments QString [optional]
    * @param[in]  attachment_fields QString [optional]
    * @param[in]  members QString [optional]
    * @param[in]  member_fields QString [optional]
    * @param[in]  check_item_states QString [optional]
    * @param[in]  checklists QString [optional]
    * @param[in]  board QString [optional]
    * @param[in]  board_fields QString [optional]
    * @param[in]  list QString [optional]
    * @param[in]  list_fields QString [optional]
    * @param[in]  filter QString [optional]
    * @param[in]  fields QString [optional]
    */
    virtual void getOrganizationsMembersCardsByIdOrgByIdMember(const QString &id_org, const QString &id_member, const QString &key, const QString &token, const ::OpenAPI::OptionalParam<QString> &actions = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &attachments = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &attachment_fields = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &members = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &member_fields = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &check_item_states = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &checklists = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &board = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &board_fields = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &list = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &list_fields = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &filter = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &fields = ::OpenAPI::OptionalParam<QString>());

    /**
    * @param[in]  id_org QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  fields QString [optional]
    */
    virtual void getOrganizationsMembersInvitedByIdOrg(const QString &id_org, const QString &key, const QString &token, const ::OpenAPI::OptionalParam<QString> &fields = ::OpenAPI::OptionalParam<QString>());

    /**
    * @param[in]  id_org QString [required]
    * @param[in]  field QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    */
    virtual void getOrganizationsMembersInvitedByIdOrgByField(const QString &id_org, const QString &field, const QString &key, const QString &token);

    /**
    * @param[in]  id_org QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  filter QString [optional]
    * @param[in]  member QString [optional]
    * @param[in]  member_fields QString [optional]
    */
    virtual void getOrganizationsMembershipsByIdOrg(const QString &id_org, const QString &key, const QString &token, const ::OpenAPI::OptionalParam<QString> &filter = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &member = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &member_fields = ::OpenAPI::OptionalParam<QString>());

    /**
    * @param[in]  id_org QString [required]
    * @param[in]  id_membership QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  member QString [optional]
    * @param[in]  member_fields QString [optional]
    */
    virtual void getOrganizationsMembershipsByIdOrgByIdMembership(const QString &id_org, const QString &id_membership, const QString &key, const QString &token, const ::OpenAPI::OptionalParam<QString> &member = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &member_fields = ::OpenAPI::OptionalParam<QString>());

    /**
    * @param[in]  id_org QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  oai_organizations OAIOrganizations [required]
    */
    virtual void updateOrganizationsByIdOrg(const QString &id_org, const QString &key, const QString &token, const OAIOrganizations &oai_organizations);

    /**
    * @param[in]  id_org QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  oai_organizations_desc OAIOrganizations_desc [required]
    */
    virtual void updateOrganizationsDescByIdOrg(const QString &id_org, const QString &key, const QString &token, const OAIOrganizations_desc &oai_organizations_desc);

    /**
    * @param[in]  id_org QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  oai_organizations_display_name OAIOrganizations_displayName [required]
    */
    virtual void updateOrganizationsDisplayNameByIdOrg(const QString &id_org, const QString &key, const QString &token, const OAIOrganizations_displayName &oai_organizations_display_name);

    /**
    * @param[in]  id_org QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  oai_organizations_members OAIOrganizations_members [required]
    */
    virtual void updateOrganizationsMembersByIdOrg(const QString &id_org, const QString &key, const QString &token, const OAIOrganizations_members &oai_organizations_members);

    /**
    * @param[in]  id_org QString [required]
    * @param[in]  id_member QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  oai_organizations_members OAIOrganizations_members [required]
    */
    virtual void updateOrganizationsMembersByIdOrgByIdMember(const QString &id_org, const QString &id_member, const QString &key, const QString &token, const OAIOrganizations_members &oai_organizations_members);

    /**
    * @param[in]  id_org QString [required]
    * @param[in]  id_member QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  oai_organizations_members_deactivated OAIOrganizations_members_deactivated [required]
    */
    virtual void updateOrganizationsMembersDeactivatedByIdOrgByIdMember(const QString &id_org, const QString &id_member, const QString &key, const QString &token, const OAIOrganizations_members_deactivated &oai_organizations_members_deactivated);

    /**
    * @param[in]  id_org QString [required]
    * @param[in]  id_membership QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  oai_organizations_memberships OAIOrganizations_memberships [required]
    */
    virtual void updateOrganizationsMembershipsByIdOrgByIdMembership(const QString &id_org, const QString &id_membership, const QString &key, const QString &token, const OAIOrganizations_memberships &oai_organizations_memberships);

    /**
    * @param[in]  id_org QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  oai_organizations_name OAIOrganizations_name [required]
    */
    virtual void updateOrganizationsNameByIdOrg(const QString &id_org, const QString &key, const QString &token, const OAIOrganizations_name &oai_organizations_name);

    /**
    * @param[in]  id_org QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  oai_prefs_associated_domain OAIPrefs_associatedDomain [required]
    */
    virtual void updateOrganizationsPrefsAssociatedDomainByIdOrg(const QString &id_org, const QString &key, const QString &token, const OAIPrefs_associatedDomain &oai_prefs_associated_domain);

    /**
    * @param[in]  id_org QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  oai_prefs_board_visibility_restrict OAIPrefs_boardVisibilityRestrict [required]
    */
    virtual void updateOrganizationsPrefsBoardVisibilityRestrictOrgByIdOrg(const QString &id_org, const QString &key, const QString &token, const OAIPrefs_boardVisibilityRestrict &oai_prefs_board_visibility_restrict);

    /**
    * @param[in]  id_org QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  oai_prefs_board_visibility_restrict OAIPrefs_boardVisibilityRestrict [required]
    */
    virtual void updateOrganizationsPrefsBoardVisibilityRestrictPrivateByIdOrg(const QString &id_org, const QString &key, const QString &token, const OAIPrefs_boardVisibilityRestrict &oai_prefs_board_visibility_restrict);

    /**
    * @param[in]  id_org QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  oai_prefs_board_visibility_restrict OAIPrefs_boardVisibilityRestrict [required]
    */
    virtual void updateOrganizationsPrefsBoardVisibilityRestrictPublicByIdOrg(const QString &id_org, const QString &key, const QString &token, const OAIPrefs_boardVisibilityRestrict &oai_prefs_board_visibility_restrict);

    /**
    * @param[in]  id_org QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  oai_prefs_external_members_disabled OAIPrefs_externalMembersDisabled [required]
    */
    virtual void updateOrganizationsPrefsExternalMembersDisabledByIdOrg(const QString &id_org, const QString &key, const QString &token, const OAIPrefs_externalMembersDisabled &oai_prefs_external_members_disabled);

    /**
    * @param[in]  id_org QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  oai_prefs_google_apps_version OAIPrefs_googleAppsVersion [required]
    */
    virtual void updateOrganizationsPrefsGoogleAppsVersionByIdOrg(const QString &id_org, const QString &key, const QString &token, const OAIPrefs_googleAppsVersion &oai_prefs_google_apps_version);

    /**
    * @param[in]  id_org QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  oai_prefs_org_invite_restrict OAIPrefs_orgInviteRestrict [required]
    */
    virtual void updateOrganizationsPrefsOrgInviteRestrictByIdOrg(const QString &id_org, const QString &key, const QString &token, const OAIPrefs_orgInviteRestrict &oai_prefs_org_invite_restrict);

    /**
    * @param[in]  id_org QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  oai_prefs_permission_level OAIPrefs_permissionLevel [required]
    */
    virtual void updateOrganizationsPrefsPermissionLevelByIdOrg(const QString &id_org, const QString &key, const QString &token, const OAIPrefs_permissionLevel &oai_prefs_permission_level);

    /**
    * @param[in]  id_org QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  oai_organizations_website OAIOrganizations_website [required]
    */
    virtual void updateOrganizationsWebsiteByIdOrg(const QString &id_org, const QString &key, const QString &token, const OAIOrganizations_website &oai_organizations_website);


private:
    QMap<QString,int> _serverIndices;
    QMap<QString,QList<OAIServerConfiguration>> _serverConfigs;
    QMap<QString, QString> _apiKeys;
    QString _bearerToken;
    QString _username;
    QString _password;
    int _timeOut;
    QString _workingDirectory;
    QNetworkAccessManager* _manager;
    QMap<QString, QString> _defaultHeaders;
    bool _isResponseCompressionEnabled;
    bool _isRequestCompressionEnabled;
    OAIHttpRequestInput _latestInput;
    OAIHttpRequestWorker *_latestWorker;
    QStringList _latestScope;
    OauthCode _authFlow;
    OauthImplicit _implicitFlow;
    OauthCredentials _credentialFlow;
    OauthPassword _passwordFlow;
    int _OauthMethod = 0;

    void addOrganizationsCallback(OAIHttpRequestWorker *worker);
    void addOrganizationsLogoByIdOrgCallback(OAIHttpRequestWorker *worker);
    void deleteOrganizationsByIdOrgCallback(OAIHttpRequestWorker *worker);
    void deleteOrganizationsLogoByIdOrgCallback(OAIHttpRequestWorker *worker);
    void deleteOrganizationsMembersAllByIdOrgByIdMemberCallback(OAIHttpRequestWorker *worker);
    void deleteOrganizationsMembersByIdOrgByIdMemberCallback(OAIHttpRequestWorker *worker);
    void deleteOrganizationsPrefsAssociatedDomainByIdOrgCallback(OAIHttpRequestWorker *worker);
    void deleteOrganizationsPrefsOrgInviteRestrictByIdOrgCallback(OAIHttpRequestWorker *worker);
    void getOrganizationsActionsByIdOrgCallback(OAIHttpRequestWorker *worker);
    void getOrganizationsBoardsByIdOrgCallback(OAIHttpRequestWorker *worker);
    void getOrganizationsBoardsByIdOrgByFilterCallback(OAIHttpRequestWorker *worker);
    void getOrganizationsByIdOrgCallback(OAIHttpRequestWorker *worker);
    void getOrganizationsByIdOrgByFieldCallback(OAIHttpRequestWorker *worker);
    void getOrganizationsDeltasByIdOrgCallback(OAIHttpRequestWorker *worker);
    void getOrganizationsMembersByIdOrgCallback(OAIHttpRequestWorker *worker);
    void getOrganizationsMembersByIdOrgByFilterCallback(OAIHttpRequestWorker *worker);
    void getOrganizationsMembersCardsByIdOrgByIdMemberCallback(OAIHttpRequestWorker *worker);
    void getOrganizationsMembersInvitedByIdOrgCallback(OAIHttpRequestWorker *worker);
    void getOrganizationsMembersInvitedByIdOrgByFieldCallback(OAIHttpRequestWorker *worker);
    void getOrganizationsMembershipsByIdOrgCallback(OAIHttpRequestWorker *worker);
    void getOrganizationsMembershipsByIdOrgByIdMembershipCallback(OAIHttpRequestWorker *worker);
    void updateOrganizationsByIdOrgCallback(OAIHttpRequestWorker *worker);
    void updateOrganizationsDescByIdOrgCallback(OAIHttpRequestWorker *worker);
    void updateOrganizationsDisplayNameByIdOrgCallback(OAIHttpRequestWorker *worker);
    void updateOrganizationsMembersByIdOrgCallback(OAIHttpRequestWorker *worker);
    void updateOrganizationsMembersByIdOrgByIdMemberCallback(OAIHttpRequestWorker *worker);
    void updateOrganizationsMembersDeactivatedByIdOrgByIdMemberCallback(OAIHttpRequestWorker *worker);
    void updateOrganizationsMembershipsByIdOrgByIdMembershipCallback(OAIHttpRequestWorker *worker);
    void updateOrganizationsNameByIdOrgCallback(OAIHttpRequestWorker *worker);
    void updateOrganizationsPrefsAssociatedDomainByIdOrgCallback(OAIHttpRequestWorker *worker);
    void updateOrganizationsPrefsBoardVisibilityRestrictOrgByIdOrgCallback(OAIHttpRequestWorker *worker);
    void updateOrganizationsPrefsBoardVisibilityRestrictPrivateByIdOrgCallback(OAIHttpRequestWorker *worker);
    void updateOrganizationsPrefsBoardVisibilityRestrictPublicByIdOrgCallback(OAIHttpRequestWorker *worker);
    void updateOrganizationsPrefsExternalMembersDisabledByIdOrgCallback(OAIHttpRequestWorker *worker);
    void updateOrganizationsPrefsGoogleAppsVersionByIdOrgCallback(OAIHttpRequestWorker *worker);
    void updateOrganizationsPrefsOrgInviteRestrictByIdOrgCallback(OAIHttpRequestWorker *worker);
    void updateOrganizationsPrefsPermissionLevelByIdOrgCallback(OAIHttpRequestWorker *worker);
    void updateOrganizationsWebsiteByIdOrgCallback(OAIHttpRequestWorker *worker);

Q_SIGNALS:

    void addOrganizationsSignal();
    void addOrganizationsLogoByIdOrgSignal();
    void deleteOrganizationsByIdOrgSignal();
    void deleteOrganizationsLogoByIdOrgSignal();
    void deleteOrganizationsMembersAllByIdOrgByIdMemberSignal();
    void deleteOrganizationsMembersByIdOrgByIdMemberSignal();
    void deleteOrganizationsPrefsAssociatedDomainByIdOrgSignal();
    void deleteOrganizationsPrefsOrgInviteRestrictByIdOrgSignal();
    void getOrganizationsActionsByIdOrgSignal();
    void getOrganizationsBoardsByIdOrgSignal();
    void getOrganizationsBoardsByIdOrgByFilterSignal();
    void getOrganizationsByIdOrgSignal();
    void getOrganizationsByIdOrgByFieldSignal();
    void getOrganizationsDeltasByIdOrgSignal();
    void getOrganizationsMembersByIdOrgSignal();
    void getOrganizationsMembersByIdOrgByFilterSignal();
    void getOrganizationsMembersCardsByIdOrgByIdMemberSignal();
    void getOrganizationsMembersInvitedByIdOrgSignal();
    void getOrganizationsMembersInvitedByIdOrgByFieldSignal();
    void getOrganizationsMembershipsByIdOrgSignal();
    void getOrganizationsMembershipsByIdOrgByIdMembershipSignal();
    void updateOrganizationsByIdOrgSignal();
    void updateOrganizationsDescByIdOrgSignal();
    void updateOrganizationsDisplayNameByIdOrgSignal();
    void updateOrganizationsMembersByIdOrgSignal();
    void updateOrganizationsMembersByIdOrgByIdMemberSignal();
    void updateOrganizationsMembersDeactivatedByIdOrgByIdMemberSignal();
    void updateOrganizationsMembershipsByIdOrgByIdMembershipSignal();
    void updateOrganizationsNameByIdOrgSignal();
    void updateOrganizationsPrefsAssociatedDomainByIdOrgSignal();
    void updateOrganizationsPrefsBoardVisibilityRestrictOrgByIdOrgSignal();
    void updateOrganizationsPrefsBoardVisibilityRestrictPrivateByIdOrgSignal();
    void updateOrganizationsPrefsBoardVisibilityRestrictPublicByIdOrgSignal();
    void updateOrganizationsPrefsExternalMembersDisabledByIdOrgSignal();
    void updateOrganizationsPrefsGoogleAppsVersionByIdOrgSignal();
    void updateOrganizationsPrefsOrgInviteRestrictByIdOrgSignal();
    void updateOrganizationsPrefsPermissionLevelByIdOrgSignal();
    void updateOrganizationsWebsiteByIdOrgSignal();


    void addOrganizationsSignalFull(OAIHttpRequestWorker *worker);
    void addOrganizationsLogoByIdOrgSignalFull(OAIHttpRequestWorker *worker);
    void deleteOrganizationsByIdOrgSignalFull(OAIHttpRequestWorker *worker);
    void deleteOrganizationsLogoByIdOrgSignalFull(OAIHttpRequestWorker *worker);
    void deleteOrganizationsMembersAllByIdOrgByIdMemberSignalFull(OAIHttpRequestWorker *worker);
    void deleteOrganizationsMembersByIdOrgByIdMemberSignalFull(OAIHttpRequestWorker *worker);
    void deleteOrganizationsPrefsAssociatedDomainByIdOrgSignalFull(OAIHttpRequestWorker *worker);
    void deleteOrganizationsPrefsOrgInviteRestrictByIdOrgSignalFull(OAIHttpRequestWorker *worker);
    void getOrganizationsActionsByIdOrgSignalFull(OAIHttpRequestWorker *worker);
    void getOrganizationsBoardsByIdOrgSignalFull(OAIHttpRequestWorker *worker);
    void getOrganizationsBoardsByIdOrgByFilterSignalFull(OAIHttpRequestWorker *worker);
    void getOrganizationsByIdOrgSignalFull(OAIHttpRequestWorker *worker);
    void getOrganizationsByIdOrgByFieldSignalFull(OAIHttpRequestWorker *worker);
    void getOrganizationsDeltasByIdOrgSignalFull(OAIHttpRequestWorker *worker);
    void getOrganizationsMembersByIdOrgSignalFull(OAIHttpRequestWorker *worker);
    void getOrganizationsMembersByIdOrgByFilterSignalFull(OAIHttpRequestWorker *worker);
    void getOrganizationsMembersCardsByIdOrgByIdMemberSignalFull(OAIHttpRequestWorker *worker);
    void getOrganizationsMembersInvitedByIdOrgSignalFull(OAIHttpRequestWorker *worker);
    void getOrganizationsMembersInvitedByIdOrgByFieldSignalFull(OAIHttpRequestWorker *worker);
    void getOrganizationsMembershipsByIdOrgSignalFull(OAIHttpRequestWorker *worker);
    void getOrganizationsMembershipsByIdOrgByIdMembershipSignalFull(OAIHttpRequestWorker *worker);
    void updateOrganizationsByIdOrgSignalFull(OAIHttpRequestWorker *worker);
    void updateOrganizationsDescByIdOrgSignalFull(OAIHttpRequestWorker *worker);
    void updateOrganizationsDisplayNameByIdOrgSignalFull(OAIHttpRequestWorker *worker);
    void updateOrganizationsMembersByIdOrgSignalFull(OAIHttpRequestWorker *worker);
    void updateOrganizationsMembersByIdOrgByIdMemberSignalFull(OAIHttpRequestWorker *worker);
    void updateOrganizationsMembersDeactivatedByIdOrgByIdMemberSignalFull(OAIHttpRequestWorker *worker);
    void updateOrganizationsMembershipsByIdOrgByIdMembershipSignalFull(OAIHttpRequestWorker *worker);
    void updateOrganizationsNameByIdOrgSignalFull(OAIHttpRequestWorker *worker);
    void updateOrganizationsPrefsAssociatedDomainByIdOrgSignalFull(OAIHttpRequestWorker *worker);
    void updateOrganizationsPrefsBoardVisibilityRestrictOrgByIdOrgSignalFull(OAIHttpRequestWorker *worker);
    void updateOrganizationsPrefsBoardVisibilityRestrictPrivateByIdOrgSignalFull(OAIHttpRequestWorker *worker);
    void updateOrganizationsPrefsBoardVisibilityRestrictPublicByIdOrgSignalFull(OAIHttpRequestWorker *worker);
    void updateOrganizationsPrefsExternalMembersDisabledByIdOrgSignalFull(OAIHttpRequestWorker *worker);
    void updateOrganizationsPrefsGoogleAppsVersionByIdOrgSignalFull(OAIHttpRequestWorker *worker);
    void updateOrganizationsPrefsOrgInviteRestrictByIdOrgSignalFull(OAIHttpRequestWorker *worker);
    void updateOrganizationsPrefsPermissionLevelByIdOrgSignalFull(OAIHttpRequestWorker *worker);
    void updateOrganizationsWebsiteByIdOrgSignalFull(OAIHttpRequestWorker *worker);

    Q_DECL_DEPRECATED_X("Use addOrganizationsSignalError() instead")
    void addOrganizationsSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void addOrganizationsSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use addOrganizationsLogoByIdOrgSignalError() instead")
    void addOrganizationsLogoByIdOrgSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void addOrganizationsLogoByIdOrgSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteOrganizationsByIdOrgSignalError() instead")
    void deleteOrganizationsByIdOrgSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void deleteOrganizationsByIdOrgSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteOrganizationsLogoByIdOrgSignalError() instead")
    void deleteOrganizationsLogoByIdOrgSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void deleteOrganizationsLogoByIdOrgSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteOrganizationsMembersAllByIdOrgByIdMemberSignalError() instead")
    void deleteOrganizationsMembersAllByIdOrgByIdMemberSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void deleteOrganizationsMembersAllByIdOrgByIdMemberSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteOrganizationsMembersByIdOrgByIdMemberSignalError() instead")
    void deleteOrganizationsMembersByIdOrgByIdMemberSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void deleteOrganizationsMembersByIdOrgByIdMemberSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteOrganizationsPrefsAssociatedDomainByIdOrgSignalError() instead")
    void deleteOrganizationsPrefsAssociatedDomainByIdOrgSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void deleteOrganizationsPrefsAssociatedDomainByIdOrgSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteOrganizationsPrefsOrgInviteRestrictByIdOrgSignalError() instead")
    void deleteOrganizationsPrefsOrgInviteRestrictByIdOrgSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void deleteOrganizationsPrefsOrgInviteRestrictByIdOrgSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getOrganizationsActionsByIdOrgSignalError() instead")
    void getOrganizationsActionsByIdOrgSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void getOrganizationsActionsByIdOrgSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getOrganizationsBoardsByIdOrgSignalError() instead")
    void getOrganizationsBoardsByIdOrgSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void getOrganizationsBoardsByIdOrgSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getOrganizationsBoardsByIdOrgByFilterSignalError() instead")
    void getOrganizationsBoardsByIdOrgByFilterSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void getOrganizationsBoardsByIdOrgByFilterSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getOrganizationsByIdOrgSignalError() instead")
    void getOrganizationsByIdOrgSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void getOrganizationsByIdOrgSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getOrganizationsByIdOrgByFieldSignalError() instead")
    void getOrganizationsByIdOrgByFieldSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void getOrganizationsByIdOrgByFieldSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getOrganizationsDeltasByIdOrgSignalError() instead")
    void getOrganizationsDeltasByIdOrgSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void getOrganizationsDeltasByIdOrgSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getOrganizationsMembersByIdOrgSignalError() instead")
    void getOrganizationsMembersByIdOrgSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void getOrganizationsMembersByIdOrgSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getOrganizationsMembersByIdOrgByFilterSignalError() instead")
    void getOrganizationsMembersByIdOrgByFilterSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void getOrganizationsMembersByIdOrgByFilterSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getOrganizationsMembersCardsByIdOrgByIdMemberSignalError() instead")
    void getOrganizationsMembersCardsByIdOrgByIdMemberSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void getOrganizationsMembersCardsByIdOrgByIdMemberSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getOrganizationsMembersInvitedByIdOrgSignalError() instead")
    void getOrganizationsMembersInvitedByIdOrgSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void getOrganizationsMembersInvitedByIdOrgSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getOrganizationsMembersInvitedByIdOrgByFieldSignalError() instead")
    void getOrganizationsMembersInvitedByIdOrgByFieldSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void getOrganizationsMembersInvitedByIdOrgByFieldSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getOrganizationsMembershipsByIdOrgSignalError() instead")
    void getOrganizationsMembershipsByIdOrgSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void getOrganizationsMembershipsByIdOrgSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getOrganizationsMembershipsByIdOrgByIdMembershipSignalError() instead")
    void getOrganizationsMembershipsByIdOrgByIdMembershipSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void getOrganizationsMembershipsByIdOrgByIdMembershipSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateOrganizationsByIdOrgSignalError() instead")
    void updateOrganizationsByIdOrgSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void updateOrganizationsByIdOrgSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateOrganizationsDescByIdOrgSignalError() instead")
    void updateOrganizationsDescByIdOrgSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void updateOrganizationsDescByIdOrgSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateOrganizationsDisplayNameByIdOrgSignalError() instead")
    void updateOrganizationsDisplayNameByIdOrgSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void updateOrganizationsDisplayNameByIdOrgSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateOrganizationsMembersByIdOrgSignalError() instead")
    void updateOrganizationsMembersByIdOrgSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void updateOrganizationsMembersByIdOrgSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateOrganizationsMembersByIdOrgByIdMemberSignalError() instead")
    void updateOrganizationsMembersByIdOrgByIdMemberSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void updateOrganizationsMembersByIdOrgByIdMemberSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateOrganizationsMembersDeactivatedByIdOrgByIdMemberSignalError() instead")
    void updateOrganizationsMembersDeactivatedByIdOrgByIdMemberSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void updateOrganizationsMembersDeactivatedByIdOrgByIdMemberSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateOrganizationsMembershipsByIdOrgByIdMembershipSignalError() instead")
    void updateOrganizationsMembershipsByIdOrgByIdMembershipSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void updateOrganizationsMembershipsByIdOrgByIdMembershipSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateOrganizationsNameByIdOrgSignalError() instead")
    void updateOrganizationsNameByIdOrgSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void updateOrganizationsNameByIdOrgSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateOrganizationsPrefsAssociatedDomainByIdOrgSignalError() instead")
    void updateOrganizationsPrefsAssociatedDomainByIdOrgSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void updateOrganizationsPrefsAssociatedDomainByIdOrgSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateOrganizationsPrefsBoardVisibilityRestrictOrgByIdOrgSignalError() instead")
    void updateOrganizationsPrefsBoardVisibilityRestrictOrgByIdOrgSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void updateOrganizationsPrefsBoardVisibilityRestrictOrgByIdOrgSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateOrganizationsPrefsBoardVisibilityRestrictPrivateByIdOrgSignalError() instead")
    void updateOrganizationsPrefsBoardVisibilityRestrictPrivateByIdOrgSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void updateOrganizationsPrefsBoardVisibilityRestrictPrivateByIdOrgSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateOrganizationsPrefsBoardVisibilityRestrictPublicByIdOrgSignalError() instead")
    void updateOrganizationsPrefsBoardVisibilityRestrictPublicByIdOrgSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void updateOrganizationsPrefsBoardVisibilityRestrictPublicByIdOrgSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateOrganizationsPrefsExternalMembersDisabledByIdOrgSignalError() instead")
    void updateOrganizationsPrefsExternalMembersDisabledByIdOrgSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void updateOrganizationsPrefsExternalMembersDisabledByIdOrgSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateOrganizationsPrefsGoogleAppsVersionByIdOrgSignalError() instead")
    void updateOrganizationsPrefsGoogleAppsVersionByIdOrgSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void updateOrganizationsPrefsGoogleAppsVersionByIdOrgSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateOrganizationsPrefsOrgInviteRestrictByIdOrgSignalError() instead")
    void updateOrganizationsPrefsOrgInviteRestrictByIdOrgSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void updateOrganizationsPrefsOrgInviteRestrictByIdOrgSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateOrganizationsPrefsPermissionLevelByIdOrgSignalError() instead")
    void updateOrganizationsPrefsPermissionLevelByIdOrgSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void updateOrganizationsPrefsPermissionLevelByIdOrgSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateOrganizationsWebsiteByIdOrgSignalError() instead")
    void updateOrganizationsWebsiteByIdOrgSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void updateOrganizationsWebsiteByIdOrgSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);

    Q_DECL_DEPRECATED_X("Use addOrganizationsSignalErrorFull() instead")
    void addOrganizationsSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void addOrganizationsSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use addOrganizationsLogoByIdOrgSignalErrorFull() instead")
    void addOrganizationsLogoByIdOrgSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void addOrganizationsLogoByIdOrgSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteOrganizationsByIdOrgSignalErrorFull() instead")
    void deleteOrganizationsByIdOrgSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void deleteOrganizationsByIdOrgSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteOrganizationsLogoByIdOrgSignalErrorFull() instead")
    void deleteOrganizationsLogoByIdOrgSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void deleteOrganizationsLogoByIdOrgSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteOrganizationsMembersAllByIdOrgByIdMemberSignalErrorFull() instead")
    void deleteOrganizationsMembersAllByIdOrgByIdMemberSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void deleteOrganizationsMembersAllByIdOrgByIdMemberSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteOrganizationsMembersByIdOrgByIdMemberSignalErrorFull() instead")
    void deleteOrganizationsMembersByIdOrgByIdMemberSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void deleteOrganizationsMembersByIdOrgByIdMemberSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteOrganizationsPrefsAssociatedDomainByIdOrgSignalErrorFull() instead")
    void deleteOrganizationsPrefsAssociatedDomainByIdOrgSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void deleteOrganizationsPrefsAssociatedDomainByIdOrgSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteOrganizationsPrefsOrgInviteRestrictByIdOrgSignalErrorFull() instead")
    void deleteOrganizationsPrefsOrgInviteRestrictByIdOrgSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void deleteOrganizationsPrefsOrgInviteRestrictByIdOrgSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getOrganizationsActionsByIdOrgSignalErrorFull() instead")
    void getOrganizationsActionsByIdOrgSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getOrganizationsActionsByIdOrgSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getOrganizationsBoardsByIdOrgSignalErrorFull() instead")
    void getOrganizationsBoardsByIdOrgSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getOrganizationsBoardsByIdOrgSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getOrganizationsBoardsByIdOrgByFilterSignalErrorFull() instead")
    void getOrganizationsBoardsByIdOrgByFilterSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getOrganizationsBoardsByIdOrgByFilterSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getOrganizationsByIdOrgSignalErrorFull() instead")
    void getOrganizationsByIdOrgSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getOrganizationsByIdOrgSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getOrganizationsByIdOrgByFieldSignalErrorFull() instead")
    void getOrganizationsByIdOrgByFieldSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getOrganizationsByIdOrgByFieldSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getOrganizationsDeltasByIdOrgSignalErrorFull() instead")
    void getOrganizationsDeltasByIdOrgSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getOrganizationsDeltasByIdOrgSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getOrganizationsMembersByIdOrgSignalErrorFull() instead")
    void getOrganizationsMembersByIdOrgSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getOrganizationsMembersByIdOrgSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getOrganizationsMembersByIdOrgByFilterSignalErrorFull() instead")
    void getOrganizationsMembersByIdOrgByFilterSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getOrganizationsMembersByIdOrgByFilterSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getOrganizationsMembersCardsByIdOrgByIdMemberSignalErrorFull() instead")
    void getOrganizationsMembersCardsByIdOrgByIdMemberSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getOrganizationsMembersCardsByIdOrgByIdMemberSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getOrganizationsMembersInvitedByIdOrgSignalErrorFull() instead")
    void getOrganizationsMembersInvitedByIdOrgSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getOrganizationsMembersInvitedByIdOrgSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getOrganizationsMembersInvitedByIdOrgByFieldSignalErrorFull() instead")
    void getOrganizationsMembersInvitedByIdOrgByFieldSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getOrganizationsMembersInvitedByIdOrgByFieldSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getOrganizationsMembershipsByIdOrgSignalErrorFull() instead")
    void getOrganizationsMembershipsByIdOrgSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getOrganizationsMembershipsByIdOrgSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getOrganizationsMembershipsByIdOrgByIdMembershipSignalErrorFull() instead")
    void getOrganizationsMembershipsByIdOrgByIdMembershipSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getOrganizationsMembershipsByIdOrgByIdMembershipSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateOrganizationsByIdOrgSignalErrorFull() instead")
    void updateOrganizationsByIdOrgSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void updateOrganizationsByIdOrgSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateOrganizationsDescByIdOrgSignalErrorFull() instead")
    void updateOrganizationsDescByIdOrgSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void updateOrganizationsDescByIdOrgSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateOrganizationsDisplayNameByIdOrgSignalErrorFull() instead")
    void updateOrganizationsDisplayNameByIdOrgSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void updateOrganizationsDisplayNameByIdOrgSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateOrganizationsMembersByIdOrgSignalErrorFull() instead")
    void updateOrganizationsMembersByIdOrgSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void updateOrganizationsMembersByIdOrgSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateOrganizationsMembersByIdOrgByIdMemberSignalErrorFull() instead")
    void updateOrganizationsMembersByIdOrgByIdMemberSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void updateOrganizationsMembersByIdOrgByIdMemberSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateOrganizationsMembersDeactivatedByIdOrgByIdMemberSignalErrorFull() instead")
    void updateOrganizationsMembersDeactivatedByIdOrgByIdMemberSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void updateOrganizationsMembersDeactivatedByIdOrgByIdMemberSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateOrganizationsMembershipsByIdOrgByIdMembershipSignalErrorFull() instead")
    void updateOrganizationsMembershipsByIdOrgByIdMembershipSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void updateOrganizationsMembershipsByIdOrgByIdMembershipSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateOrganizationsNameByIdOrgSignalErrorFull() instead")
    void updateOrganizationsNameByIdOrgSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void updateOrganizationsNameByIdOrgSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateOrganizationsPrefsAssociatedDomainByIdOrgSignalErrorFull() instead")
    void updateOrganizationsPrefsAssociatedDomainByIdOrgSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void updateOrganizationsPrefsAssociatedDomainByIdOrgSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateOrganizationsPrefsBoardVisibilityRestrictOrgByIdOrgSignalErrorFull() instead")
    void updateOrganizationsPrefsBoardVisibilityRestrictOrgByIdOrgSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void updateOrganizationsPrefsBoardVisibilityRestrictOrgByIdOrgSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateOrganizationsPrefsBoardVisibilityRestrictPrivateByIdOrgSignalErrorFull() instead")
    void updateOrganizationsPrefsBoardVisibilityRestrictPrivateByIdOrgSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void updateOrganizationsPrefsBoardVisibilityRestrictPrivateByIdOrgSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateOrganizationsPrefsBoardVisibilityRestrictPublicByIdOrgSignalErrorFull() instead")
    void updateOrganizationsPrefsBoardVisibilityRestrictPublicByIdOrgSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void updateOrganizationsPrefsBoardVisibilityRestrictPublicByIdOrgSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateOrganizationsPrefsExternalMembersDisabledByIdOrgSignalErrorFull() instead")
    void updateOrganizationsPrefsExternalMembersDisabledByIdOrgSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void updateOrganizationsPrefsExternalMembersDisabledByIdOrgSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateOrganizationsPrefsGoogleAppsVersionByIdOrgSignalErrorFull() instead")
    void updateOrganizationsPrefsGoogleAppsVersionByIdOrgSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void updateOrganizationsPrefsGoogleAppsVersionByIdOrgSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateOrganizationsPrefsOrgInviteRestrictByIdOrgSignalErrorFull() instead")
    void updateOrganizationsPrefsOrgInviteRestrictByIdOrgSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void updateOrganizationsPrefsOrgInviteRestrictByIdOrgSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateOrganizationsPrefsPermissionLevelByIdOrgSignalErrorFull() instead")
    void updateOrganizationsPrefsPermissionLevelByIdOrgSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void updateOrganizationsPrefsPermissionLevelByIdOrgSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateOrganizationsWebsiteByIdOrgSignalErrorFull() instead")
    void updateOrganizationsWebsiteByIdOrgSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void updateOrganizationsWebsiteByIdOrgSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);

    void abortRequestsSignal();
    void allPendingRequestsCompleted();

public Q_SLOTS:
    void tokenAvailable();
};

} // namespace OpenAPI
#endif
