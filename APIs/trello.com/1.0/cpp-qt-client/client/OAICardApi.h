/**
 * Trello
 * This document describes the REST API of Trello as published by Trello.com.  - <a href='https://trello.com/docs/index.html' target='_blank'>Official Documentation</a>  - <a href='https://trello.com/docs/api' target='_blank'>The HTML pages that were scraped in order to generate this specification.</a>
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#ifndef OAI_OAICardApi_H
#define OAI_OAICardApi_H

#include "OAIHelpers.h"
#include "OAIHttpRequest.h"
#include "OAIServerConfiguration.h"
#include "OAIOauth.h"

#include "OAIActions_comments.h"
#include "OAICards.h"
#include "OAICards_actions_comments.h"
#include "OAICards_attachments.h"
#include "OAICards_checklist_checkItem.h"
#include "OAICards_checklist_checkItem_name.h"
#include "OAICards_checklist_checkItem_pos.h"
#include "OAICards_checklist_checkItem_state.h"
#include "OAICards_checklist_idChecklistCurrent_checkItem.h"
#include "OAICards_checklists.h"
#include "OAICards_closed.h"
#include "OAICards_desc.h"
#include "OAICards_due.h"
#include "OAICards_idAttachmentCover.h"
#include "OAICards_idBoard.h"
#include "OAICards_idLabels.h"
#include "OAICards_idList.h"
#include "OAICards_idMembers.h"
#include "OAICards_labels.h"
#include "OAICards_membersVoted.h"
#include "OAICards_name.h"
#include "OAICards_pos.h"
#include "OAICards_stickers.h"
#include "OAICards_subscribed.h"
#include <QString>

#include <QObject>
#include <QByteArray>
#include <QStringList>
#include <QList>
#include <QNetworkAccessManager>

namespace OpenAPI {

class OAICardApi : public QObject {
    Q_OBJECT

public:
    OAICardApi(const int timeOut = 0);
    ~OAICardApi();

    void initializeServerConfigs();
    int setDefaultServerValue(int serverIndex,const QString &operation, const QString &variable,const QString &val);
    void setServerIndex(const QString &operation, int serverIndex);
    void setApiKey(const QString &apiKeyName, const QString &apiKey);
    void setBearerToken(const QString &token);
    void setUsername(const QString &username);
    void setPassword(const QString &password);
    void setTimeOut(const int timeOut);
    void setWorkingDirectory(const QString &path);
    void setNetworkAccessManager(QNetworkAccessManager* manager);
    int addServerConfiguration(const QString &operation, const QUrl &url, const QString &description = "", const QMap<QString, OAIServerVariable> &variables = QMap<QString, OAIServerVariable>());
    void setNewServerForAllOperations(const QUrl &url, const QString &description = "", const QMap<QString, OAIServerVariable> &variables =  QMap<QString, OAIServerVariable>());
    void setNewServer(const QString &operation, const QUrl &url, const QString &description = "", const QMap<QString, OAIServerVariable> &variables =  QMap<QString, OAIServerVariable>());
    void addHeaders(const QString &key, const QString &value);
    void enableRequestCompression();
    void enableResponseCompression();
    void abortRequests();
    QString getParamStylePrefix(const QString &style);
    QString getParamStyleSuffix(const QString &style);
    QString getParamStyleDelimiter(const QString &style, const QString &name, bool isExplode);

    /**
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  oai_cards OAICards [required]
    */
    virtual void addCards(const QString &key, const QString &token, const OAICards &oai_cards);

    /**
    * @param[in]  id_card QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  oai_actions_comments OAIActions_comments [required]
    */
    virtual void addCardsActionsCommentsByIdCard(const QString &id_card, const QString &key, const QString &token, const OAIActions_comments &oai_actions_comments);

    /**
    * @param[in]  id_card QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  oai_cards_attachments OAICards_attachments [required]
    */
    virtual void addCardsAttachmentsByIdCard(const QString &id_card, const QString &key, const QString &token, const OAICards_attachments &oai_cards_attachments);

    /**
    * @param[in]  id_card QString [required]
    * @param[in]  id_checklist QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  oai_cards_checklist_check_item OAICards_checklist_checkItem [required]
    */
    virtual void addCardsChecklistCheckItemByIdCardByIdChecklist(const QString &id_card, const QString &id_checklist, const QString &key, const QString &token, const OAICards_checklist_checkItem &oai_cards_checklist_check_item);

    /**
    * @param[in]  id_card QString [required]
    * @param[in]  id_checklist QString [required]
    * @param[in]  id_check_item QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    */
    virtual void addCardsChecklistCheckItemConvertToCardByIdCardByIdChecklistByIdCheckItem(const QString &id_card, const QString &id_checklist, const QString &id_check_item, const QString &key, const QString &token);

    /**
    * @param[in]  id_card QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  oai_cards_checklists OAICards_checklists [required]
    */
    virtual void addCardsChecklistsByIdCard(const QString &id_card, const QString &key, const QString &token, const OAICards_checklists &oai_cards_checklists);

    /**
    * @param[in]  id_card QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  oai_cards_id_labels OAICards_idLabels [required]
    */
    virtual void addCardsIdLabelsByIdCard(const QString &id_card, const QString &key, const QString &token, const OAICards_idLabels &oai_cards_id_labels);

    /**
    * @param[in]  id_card QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  oai_cards_id_members OAICards_idMembers [required]
    */
    virtual void addCardsIdMembersByIdCard(const QString &id_card, const QString &key, const QString &token, const OAICards_idMembers &oai_cards_id_members);

    /**
    * @param[in]  id_card QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  oai_cards_labels OAICards_labels [required]
    */
    virtual void addCardsLabelsByIdCard(const QString &id_card, const QString &key, const QString &token, const OAICards_labels &oai_cards_labels);

    /**
    * @param[in]  id_card QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    */
    virtual void addCardsMarkAssociatedNotificationsReadByIdCard(const QString &id_card, const QString &key, const QString &token);

    /**
    * @param[in]  id_card QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  oai_cards_members_voted OAICards_membersVoted [required]
    */
    virtual void addCardsMembersVotedByIdCard(const QString &id_card, const QString &key, const QString &token, const OAICards_membersVoted &oai_cards_members_voted);

    /**
    * @param[in]  id_card QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  oai_cards_stickers OAICards_stickers [required]
    */
    virtual void addCardsStickersByIdCard(const QString &id_card, const QString &key, const QString &token, const OAICards_stickers &oai_cards_stickers);

    /**
    * @param[in]  id_card QString [required]
    * @param[in]  id_action QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    */
    virtual void deleteCardsActionsCommentsByIdCardByIdAction(const QString &id_card, const QString &id_action, const QString &key, const QString &token);

    /**
    * @param[in]  id_card QString [required]
    * @param[in]  id_attachment QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    */
    virtual void deleteCardsAttachmentsByIdCardByIdAttachment(const QString &id_card, const QString &id_attachment, const QString &key, const QString &token);

    /**
    * @param[in]  id_card QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    */
    virtual void deleteCardsByIdCard(const QString &id_card, const QString &key, const QString &token);

    /**
    * @param[in]  id_card QString [required]
    * @param[in]  id_checklist QString [required]
    * @param[in]  id_check_item QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    */
    virtual void deleteCardsChecklistCheckItemByIdCardByIdChecklistByIdCheckItem(const QString &id_card, const QString &id_checklist, const QString &id_check_item, const QString &key, const QString &token);

    /**
    * @param[in]  id_card QString [required]
    * @param[in]  id_checklist QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    */
    virtual void deleteCardsChecklistsByIdCardByIdChecklist(const QString &id_card, const QString &id_checklist, const QString &key, const QString &token);

    /**
    * @param[in]  id_card QString [required]
    * @param[in]  id_label QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    */
    virtual void deleteCardsIdLabelsByIdCardByIdLabel(const QString &id_card, const QString &id_label, const QString &key, const QString &token);

    /**
    * @param[in]  id_card QString [required]
    * @param[in]  id_member QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    */
    virtual void deleteCardsIdMembersByIdCardByIdMember(const QString &id_card, const QString &id_member, const QString &key, const QString &token);

    /**
    * @param[in]  id_card QString [required]
    * @param[in]  color QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    */
    virtual void deleteCardsLabelsByIdCardByColor(const QString &id_card, const QString &color, const QString &key, const QString &token);

    /**
    * @param[in]  id_card QString [required]
    * @param[in]  id_member QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    */
    virtual void deleteCardsMembersVotedByIdCardByIdMember(const QString &id_card, const QString &id_member, const QString &key, const QString &token);

    /**
    * @param[in]  id_card QString [required]
    * @param[in]  id_sticker QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    */
    virtual void deleteCardsStickersByIdCardByIdSticker(const QString &id_card, const QString &id_sticker, const QString &key, const QString &token);

    /**
    * @param[in]  id_card QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  entities QString [optional]
    * @param[in]  display QString [optional]
    * @param[in]  filter QString [optional]
    * @param[in]  fields QString [optional]
    * @param[in]  limit QString [optional]
    * @param[in]  format QString [optional]
    * @param[in]  since QString [optional]
    * @param[in]  before QString [optional]
    * @param[in]  page QString [optional]
    * @param[in]  id_models QString [optional]
    * @param[in]  member QString [optional]
    * @param[in]  member_fields QString [optional]
    * @param[in]  member_creator QString [optional]
    * @param[in]  member_creator_fields QString [optional]
    */
    virtual void getCardsActionsByIdCard(const QString &id_card, const QString &key, const QString &token, const ::OpenAPI::OptionalParam<QString> &entities = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &display = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &filter = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &fields = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &limit = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &format = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &since = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &before = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &page = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &id_models = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &member = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &member_fields = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &member_creator = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &member_creator_fields = ::OpenAPI::OptionalParam<QString>());

    /**
    * @param[in]  id_card QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  fields QString [optional]
    * @param[in]  filter QString [optional]
    */
    virtual void getCardsAttachmentsByIdCard(const QString &id_card, const QString &key, const QString &token, const ::OpenAPI::OptionalParam<QString> &fields = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &filter = ::OpenAPI::OptionalParam<QString>());

    /**
    * @param[in]  id_card QString [required]
    * @param[in]  id_attachment QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  fields QString [optional]
    */
    virtual void getCardsAttachmentsByIdCardByIdAttachment(const QString &id_card, const QString &id_attachment, const QString &key, const QString &token, const ::OpenAPI::OptionalParam<QString> &fields = ::OpenAPI::OptionalParam<QString>());

    /**
    * @param[in]  id_card QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  fields QString [optional]
    */
    virtual void getCardsBoardByIdCard(const QString &id_card, const QString &key, const QString &token, const ::OpenAPI::OptionalParam<QString> &fields = ::OpenAPI::OptionalParam<QString>());

    /**
    * @param[in]  id_card QString [required]
    * @param[in]  field QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    */
    virtual void getCardsBoardByIdCardByField(const QString &id_card, const QString &field, const QString &key, const QString &token);

    /**
    * @param[in]  id_card QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  actions QString [optional]
    * @param[in]  actions_entities QString [optional]
    * @param[in]  actions_display QString [optional]
    * @param[in]  actions_limit QString [optional]
    * @param[in]  action_fields QString [optional]
    * @param[in]  action_member_creator_fields QString [optional]
    * @param[in]  attachments QString [optional]
    * @param[in]  attachment_fields QString [optional]
    * @param[in]  members QString [optional]
    * @param[in]  member_fields QString [optional]
    * @param[in]  members_voted QString [optional]
    * @param[in]  member_voted_fields QString [optional]
    * @param[in]  check_item_states QString [optional]
    * @param[in]  check_item_state_fields QString [optional]
    * @param[in]  checklists QString [optional]
    * @param[in]  checklist_fields QString [optional]
    * @param[in]  board QString [optional]
    * @param[in]  board_fields QString [optional]
    * @param[in]  list QString [optional]
    * @param[in]  list_fields QString [optional]
    * @param[in]  stickers QString [optional]
    * @param[in]  sticker_fields QString [optional]
    * @param[in]  fields QString [optional]
    */
    virtual void getCardsByIdCard(const QString &id_card, const QString &key, const QString &token, const ::OpenAPI::OptionalParam<QString> &actions = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &actions_entities = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &actions_display = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &actions_limit = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &action_fields = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &action_member_creator_fields = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &attachments = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &attachment_fields = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &members = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &member_fields = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &members_voted = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &member_voted_fields = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &check_item_states = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &check_item_state_fields = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &checklists = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &checklist_fields = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &board = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &board_fields = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &list = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &list_fields = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &stickers = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &sticker_fields = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &fields = ::OpenAPI::OptionalParam<QString>());

    /**
    * @param[in]  id_card QString [required]
    * @param[in]  field QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    */
    virtual void getCardsByIdCardByField(const QString &id_card, const QString &field, const QString &key, const QString &token);

    /**
    * @param[in]  id_card QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  fields QString [optional]
    */
    virtual void getCardsCheckItemStatesByIdCard(const QString &id_card, const QString &key, const QString &token, const ::OpenAPI::OptionalParam<QString> &fields = ::OpenAPI::OptionalParam<QString>());

    /**
    * @param[in]  id_card QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  cards QString [optional]
    * @param[in]  card_fields QString [optional]
    * @param[in]  check_items QString [optional]
    * @param[in]  check_item_fields QString [optional]
    * @param[in]  filter QString [optional]
    * @param[in]  fields QString [optional]
    */
    virtual void getCardsChecklistsByIdCard(const QString &id_card, const QString &key, const QString &token, const ::OpenAPI::OptionalParam<QString> &cards = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &card_fields = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &check_items = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &check_item_fields = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &filter = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &fields = ::OpenAPI::OptionalParam<QString>());

    /**
    * @param[in]  id_card QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  fields QString [optional]
    */
    virtual void getCardsListByIdCard(const QString &id_card, const QString &key, const QString &token, const ::OpenAPI::OptionalParam<QString> &fields = ::OpenAPI::OptionalParam<QString>());

    /**
    * @param[in]  id_card QString [required]
    * @param[in]  field QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    */
    virtual void getCardsListByIdCardByField(const QString &id_card, const QString &field, const QString &key, const QString &token);

    /**
    * @param[in]  id_card QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  fields QString [optional]
    */
    virtual void getCardsMembersByIdCard(const QString &id_card, const QString &key, const QString &token, const ::OpenAPI::OptionalParam<QString> &fields = ::OpenAPI::OptionalParam<QString>());

    /**
    * @param[in]  id_card QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  fields QString [optional]
    */
    virtual void getCardsMembersVotedByIdCard(const QString &id_card, const QString &key, const QString &token, const ::OpenAPI::OptionalParam<QString> &fields = ::OpenAPI::OptionalParam<QString>());

    /**
    * @param[in]  id_card QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  fields QString [optional]
    */
    virtual void getCardsStickersByIdCard(const QString &id_card, const QString &key, const QString &token, const ::OpenAPI::OptionalParam<QString> &fields = ::OpenAPI::OptionalParam<QString>());

    /**
    * @param[in]  id_card QString [required]
    * @param[in]  id_sticker QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  fields QString [optional]
    */
    virtual void getCardsStickersByIdCardByIdSticker(const QString &id_card, const QString &id_sticker, const QString &key, const QString &token, const ::OpenAPI::OptionalParam<QString> &fields = ::OpenAPI::OptionalParam<QString>());

    /**
    * @param[in]  id_card QString [required]
    * @param[in]  id_action QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  oai_cards_actions_comments OAICards_actions_comments [required]
    */
    virtual void updateCardsActionsCommentsByIdCardByIdAction(const QString &id_card, const QString &id_action, const QString &key, const QString &token, const OAICards_actions_comments &oai_cards_actions_comments);

    /**
    * @param[in]  id_card QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  oai_cards OAICards [required]
    */
    virtual void updateCardsByIdCard(const QString &id_card, const QString &key, const QString &token, const OAICards &oai_cards);

    /**
    * @param[in]  id_card QString [required]
    * @param[in]  id_checklist_current QString [required]
    * @param[in]  id_check_item QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  oai_cards_checklist_id_checklist_current_check_item OAICards_checklist_idChecklistCurrent_checkItem [required]
    */
    virtual void updateCardsChecklistCheckItemByIdCardByIdChecklistCurrentByIdCheckItem(const QString &id_card, const QString &id_checklist_current, const QString &id_check_item, const QString &key, const QString &token, const OAICards_checklist_idChecklistCurrent_checkItem &oai_cards_checklist_id_checklist_current_check_item);

    /**
    * @param[in]  id_card QString [required]
    * @param[in]  id_checklist QString [required]
    * @param[in]  id_check_item QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  oai_cards_checklist_check_item_name OAICards_checklist_checkItem_name [required]
    */
    virtual void updateCardsChecklistCheckItemNameByIdCardByIdChecklistByIdCheckItem(const QString &id_card, const QString &id_checklist, const QString &id_check_item, const QString &key, const QString &token, const OAICards_checklist_checkItem_name &oai_cards_checklist_check_item_name);

    /**
    * @param[in]  id_card QString [required]
    * @param[in]  id_checklist QString [required]
    * @param[in]  id_check_item QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  oai_cards_checklist_check_item_pos OAICards_checklist_checkItem_pos [required]
    */
    virtual void updateCardsChecklistCheckItemPosByIdCardByIdChecklistByIdCheckItem(const QString &id_card, const QString &id_checklist, const QString &id_check_item, const QString &key, const QString &token, const OAICards_checklist_checkItem_pos &oai_cards_checklist_check_item_pos);

    /**
    * @param[in]  id_card QString [required]
    * @param[in]  id_checklist QString [required]
    * @param[in]  id_check_item QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  oai_cards_checklist_check_item_state OAICards_checklist_checkItem_state [required]
    */
    virtual void updateCardsChecklistCheckItemStateByIdCardByIdChecklistByIdCheckItem(const QString &id_card, const QString &id_checklist, const QString &id_check_item, const QString &key, const QString &token, const OAICards_checklist_checkItem_state &oai_cards_checklist_check_item_state);

    /**
    * @param[in]  id_card QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  oai_cards_closed OAICards_closed [required]
    */
    virtual void updateCardsClosedByIdCard(const QString &id_card, const QString &key, const QString &token, const OAICards_closed &oai_cards_closed);

    /**
    * @param[in]  id_card QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  oai_cards_desc OAICards_desc [required]
    */
    virtual void updateCardsDescByIdCard(const QString &id_card, const QString &key, const QString &token, const OAICards_desc &oai_cards_desc);

    /**
    * @param[in]  id_card QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  oai_cards_due OAICards_due [required]
    */
    virtual void updateCardsDueByIdCard(const QString &id_card, const QString &key, const QString &token, const OAICards_due &oai_cards_due);

    /**
    * @param[in]  id_card QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  oai_cards_id_attachment_cover OAICards_idAttachmentCover [required]
    */
    virtual void updateCardsIdAttachmentCoverByIdCard(const QString &id_card, const QString &key, const QString &token, const OAICards_idAttachmentCover &oai_cards_id_attachment_cover);

    /**
    * @param[in]  id_card QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  oai_cards_id_board OAICards_idBoard [required]
    */
    virtual void updateCardsIdBoardByIdCard(const QString &id_card, const QString &key, const QString &token, const OAICards_idBoard &oai_cards_id_board);

    /**
    * @param[in]  id_card QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  oai_cards_id_list OAICards_idList [required]
    */
    virtual void updateCardsIdListByIdCard(const QString &id_card, const QString &key, const QString &token, const OAICards_idList &oai_cards_id_list);

    /**
    * @param[in]  id_card QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  oai_cards_id_members OAICards_idMembers [required]
    */
    virtual void updateCardsIdMembersByIdCard(const QString &id_card, const QString &key, const QString &token, const OAICards_idMembers &oai_cards_id_members);

    /**
    * @param[in]  id_card QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  oai_cards_labels OAICards_labels [required]
    */
    virtual void updateCardsLabelsByIdCard(const QString &id_card, const QString &key, const QString &token, const OAICards_labels &oai_cards_labels);

    /**
    * @param[in]  id_card QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  oai_cards_name OAICards_name [required]
    */
    virtual void updateCardsNameByIdCard(const QString &id_card, const QString &key, const QString &token, const OAICards_name &oai_cards_name);

    /**
    * @param[in]  id_card QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  oai_cards_pos OAICards_pos [required]
    */
    virtual void updateCardsPosByIdCard(const QString &id_card, const QString &key, const QString &token, const OAICards_pos &oai_cards_pos);

    /**
    * @param[in]  id_card QString [required]
    * @param[in]  id_sticker QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  oai_cards_stickers OAICards_stickers [required]
    */
    virtual void updateCardsStickersByIdCardByIdSticker(const QString &id_card, const QString &id_sticker, const QString &key, const QString &token, const OAICards_stickers &oai_cards_stickers);

    /**
    * @param[in]  id_card QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  oai_cards_subscribed OAICards_subscribed [required]
    */
    virtual void updateCardsSubscribedByIdCard(const QString &id_card, const QString &key, const QString &token, const OAICards_subscribed &oai_cards_subscribed);


private:
    QMap<QString,int> _serverIndices;
    QMap<QString,QList<OAIServerConfiguration>> _serverConfigs;
    QMap<QString, QString> _apiKeys;
    QString _bearerToken;
    QString _username;
    QString _password;
    int _timeOut;
    QString _workingDirectory;
    QNetworkAccessManager* _manager;
    QMap<QString, QString> _defaultHeaders;
    bool _isResponseCompressionEnabled;
    bool _isRequestCompressionEnabled;
    OAIHttpRequestInput _latestInput;
    OAIHttpRequestWorker *_latestWorker;
    QStringList _latestScope;
    OauthCode _authFlow;
    OauthImplicit _implicitFlow;
    OauthCredentials _credentialFlow;
    OauthPassword _passwordFlow;
    int _OauthMethod = 0;

    void addCardsCallback(OAIHttpRequestWorker *worker);
    void addCardsActionsCommentsByIdCardCallback(OAIHttpRequestWorker *worker);
    void addCardsAttachmentsByIdCardCallback(OAIHttpRequestWorker *worker);
    void addCardsChecklistCheckItemByIdCardByIdChecklistCallback(OAIHttpRequestWorker *worker);
    void addCardsChecklistCheckItemConvertToCardByIdCardByIdChecklistByIdCheckItemCallback(OAIHttpRequestWorker *worker);
    void addCardsChecklistsByIdCardCallback(OAIHttpRequestWorker *worker);
    void addCardsIdLabelsByIdCardCallback(OAIHttpRequestWorker *worker);
    void addCardsIdMembersByIdCardCallback(OAIHttpRequestWorker *worker);
    void addCardsLabelsByIdCardCallback(OAIHttpRequestWorker *worker);
    void addCardsMarkAssociatedNotificationsReadByIdCardCallback(OAIHttpRequestWorker *worker);
    void addCardsMembersVotedByIdCardCallback(OAIHttpRequestWorker *worker);
    void addCardsStickersByIdCardCallback(OAIHttpRequestWorker *worker);
    void deleteCardsActionsCommentsByIdCardByIdActionCallback(OAIHttpRequestWorker *worker);
    void deleteCardsAttachmentsByIdCardByIdAttachmentCallback(OAIHttpRequestWorker *worker);
    void deleteCardsByIdCardCallback(OAIHttpRequestWorker *worker);
    void deleteCardsChecklistCheckItemByIdCardByIdChecklistByIdCheckItemCallback(OAIHttpRequestWorker *worker);
    void deleteCardsChecklistsByIdCardByIdChecklistCallback(OAIHttpRequestWorker *worker);
    void deleteCardsIdLabelsByIdCardByIdLabelCallback(OAIHttpRequestWorker *worker);
    void deleteCardsIdMembersByIdCardByIdMemberCallback(OAIHttpRequestWorker *worker);
    void deleteCardsLabelsByIdCardByColorCallback(OAIHttpRequestWorker *worker);
    void deleteCardsMembersVotedByIdCardByIdMemberCallback(OAIHttpRequestWorker *worker);
    void deleteCardsStickersByIdCardByIdStickerCallback(OAIHttpRequestWorker *worker);
    void getCardsActionsByIdCardCallback(OAIHttpRequestWorker *worker);
    void getCardsAttachmentsByIdCardCallback(OAIHttpRequestWorker *worker);
    void getCardsAttachmentsByIdCardByIdAttachmentCallback(OAIHttpRequestWorker *worker);
    void getCardsBoardByIdCardCallback(OAIHttpRequestWorker *worker);
    void getCardsBoardByIdCardByFieldCallback(OAIHttpRequestWorker *worker);
    void getCardsByIdCardCallback(OAIHttpRequestWorker *worker);
    void getCardsByIdCardByFieldCallback(OAIHttpRequestWorker *worker);
    void getCardsCheckItemStatesByIdCardCallback(OAIHttpRequestWorker *worker);
    void getCardsChecklistsByIdCardCallback(OAIHttpRequestWorker *worker);
    void getCardsListByIdCardCallback(OAIHttpRequestWorker *worker);
    void getCardsListByIdCardByFieldCallback(OAIHttpRequestWorker *worker);
    void getCardsMembersByIdCardCallback(OAIHttpRequestWorker *worker);
    void getCardsMembersVotedByIdCardCallback(OAIHttpRequestWorker *worker);
    void getCardsStickersByIdCardCallback(OAIHttpRequestWorker *worker);
    void getCardsStickersByIdCardByIdStickerCallback(OAIHttpRequestWorker *worker);
    void updateCardsActionsCommentsByIdCardByIdActionCallback(OAIHttpRequestWorker *worker);
    void updateCardsByIdCardCallback(OAIHttpRequestWorker *worker);
    void updateCardsChecklistCheckItemByIdCardByIdChecklistCurrentByIdCheckItemCallback(OAIHttpRequestWorker *worker);
    void updateCardsChecklistCheckItemNameByIdCardByIdChecklistByIdCheckItemCallback(OAIHttpRequestWorker *worker);
    void updateCardsChecklistCheckItemPosByIdCardByIdChecklistByIdCheckItemCallback(OAIHttpRequestWorker *worker);
    void updateCardsChecklistCheckItemStateByIdCardByIdChecklistByIdCheckItemCallback(OAIHttpRequestWorker *worker);
    void updateCardsClosedByIdCardCallback(OAIHttpRequestWorker *worker);
    void updateCardsDescByIdCardCallback(OAIHttpRequestWorker *worker);
    void updateCardsDueByIdCardCallback(OAIHttpRequestWorker *worker);
    void updateCardsIdAttachmentCoverByIdCardCallback(OAIHttpRequestWorker *worker);
    void updateCardsIdBoardByIdCardCallback(OAIHttpRequestWorker *worker);
    void updateCardsIdListByIdCardCallback(OAIHttpRequestWorker *worker);
    void updateCardsIdMembersByIdCardCallback(OAIHttpRequestWorker *worker);
    void updateCardsLabelsByIdCardCallback(OAIHttpRequestWorker *worker);
    void updateCardsNameByIdCardCallback(OAIHttpRequestWorker *worker);
    void updateCardsPosByIdCardCallback(OAIHttpRequestWorker *worker);
    void updateCardsStickersByIdCardByIdStickerCallback(OAIHttpRequestWorker *worker);
    void updateCardsSubscribedByIdCardCallback(OAIHttpRequestWorker *worker);

Q_SIGNALS:

    void addCardsSignal();
    void addCardsActionsCommentsByIdCardSignal();
    void addCardsAttachmentsByIdCardSignal();
    void addCardsChecklistCheckItemByIdCardByIdChecklistSignal();
    void addCardsChecklistCheckItemConvertToCardByIdCardByIdChecklistByIdCheckItemSignal();
    void addCardsChecklistsByIdCardSignal();
    void addCardsIdLabelsByIdCardSignal();
    void addCardsIdMembersByIdCardSignal();
    void addCardsLabelsByIdCardSignal();
    void addCardsMarkAssociatedNotificationsReadByIdCardSignal();
    void addCardsMembersVotedByIdCardSignal();
    void addCardsStickersByIdCardSignal();
    void deleteCardsActionsCommentsByIdCardByIdActionSignal();
    void deleteCardsAttachmentsByIdCardByIdAttachmentSignal();
    void deleteCardsByIdCardSignal();
    void deleteCardsChecklistCheckItemByIdCardByIdChecklistByIdCheckItemSignal();
    void deleteCardsChecklistsByIdCardByIdChecklistSignal();
    void deleteCardsIdLabelsByIdCardByIdLabelSignal();
    void deleteCardsIdMembersByIdCardByIdMemberSignal();
    void deleteCardsLabelsByIdCardByColorSignal();
    void deleteCardsMembersVotedByIdCardByIdMemberSignal();
    void deleteCardsStickersByIdCardByIdStickerSignal();
    void getCardsActionsByIdCardSignal();
    void getCardsAttachmentsByIdCardSignal();
    void getCardsAttachmentsByIdCardByIdAttachmentSignal();
    void getCardsBoardByIdCardSignal();
    void getCardsBoardByIdCardByFieldSignal();
    void getCardsByIdCardSignal();
    void getCardsByIdCardByFieldSignal();
    void getCardsCheckItemStatesByIdCardSignal();
    void getCardsChecklistsByIdCardSignal();
    void getCardsListByIdCardSignal();
    void getCardsListByIdCardByFieldSignal();
    void getCardsMembersByIdCardSignal();
    void getCardsMembersVotedByIdCardSignal();
    void getCardsStickersByIdCardSignal();
    void getCardsStickersByIdCardByIdStickerSignal();
    void updateCardsActionsCommentsByIdCardByIdActionSignal();
    void updateCardsByIdCardSignal();
    void updateCardsChecklistCheckItemByIdCardByIdChecklistCurrentByIdCheckItemSignal();
    void updateCardsChecklistCheckItemNameByIdCardByIdChecklistByIdCheckItemSignal();
    void updateCardsChecklistCheckItemPosByIdCardByIdChecklistByIdCheckItemSignal();
    void updateCardsChecklistCheckItemStateByIdCardByIdChecklistByIdCheckItemSignal();
    void updateCardsClosedByIdCardSignal();
    void updateCardsDescByIdCardSignal();
    void updateCardsDueByIdCardSignal();
    void updateCardsIdAttachmentCoverByIdCardSignal();
    void updateCardsIdBoardByIdCardSignal();
    void updateCardsIdListByIdCardSignal();
    void updateCardsIdMembersByIdCardSignal();
    void updateCardsLabelsByIdCardSignal();
    void updateCardsNameByIdCardSignal();
    void updateCardsPosByIdCardSignal();
    void updateCardsStickersByIdCardByIdStickerSignal();
    void updateCardsSubscribedByIdCardSignal();


    void addCardsSignalFull(OAIHttpRequestWorker *worker);
    void addCardsActionsCommentsByIdCardSignalFull(OAIHttpRequestWorker *worker);
    void addCardsAttachmentsByIdCardSignalFull(OAIHttpRequestWorker *worker);
    void addCardsChecklistCheckItemByIdCardByIdChecklistSignalFull(OAIHttpRequestWorker *worker);
    void addCardsChecklistCheckItemConvertToCardByIdCardByIdChecklistByIdCheckItemSignalFull(OAIHttpRequestWorker *worker);
    void addCardsChecklistsByIdCardSignalFull(OAIHttpRequestWorker *worker);
    void addCardsIdLabelsByIdCardSignalFull(OAIHttpRequestWorker *worker);
    void addCardsIdMembersByIdCardSignalFull(OAIHttpRequestWorker *worker);
    void addCardsLabelsByIdCardSignalFull(OAIHttpRequestWorker *worker);
    void addCardsMarkAssociatedNotificationsReadByIdCardSignalFull(OAIHttpRequestWorker *worker);
    void addCardsMembersVotedByIdCardSignalFull(OAIHttpRequestWorker *worker);
    void addCardsStickersByIdCardSignalFull(OAIHttpRequestWorker *worker);
    void deleteCardsActionsCommentsByIdCardByIdActionSignalFull(OAIHttpRequestWorker *worker);
    void deleteCardsAttachmentsByIdCardByIdAttachmentSignalFull(OAIHttpRequestWorker *worker);
    void deleteCardsByIdCardSignalFull(OAIHttpRequestWorker *worker);
    void deleteCardsChecklistCheckItemByIdCardByIdChecklistByIdCheckItemSignalFull(OAIHttpRequestWorker *worker);
    void deleteCardsChecklistsByIdCardByIdChecklistSignalFull(OAIHttpRequestWorker *worker);
    void deleteCardsIdLabelsByIdCardByIdLabelSignalFull(OAIHttpRequestWorker *worker);
    void deleteCardsIdMembersByIdCardByIdMemberSignalFull(OAIHttpRequestWorker *worker);
    void deleteCardsLabelsByIdCardByColorSignalFull(OAIHttpRequestWorker *worker);
    void deleteCardsMembersVotedByIdCardByIdMemberSignalFull(OAIHttpRequestWorker *worker);
    void deleteCardsStickersByIdCardByIdStickerSignalFull(OAIHttpRequestWorker *worker);
    void getCardsActionsByIdCardSignalFull(OAIHttpRequestWorker *worker);
    void getCardsAttachmentsByIdCardSignalFull(OAIHttpRequestWorker *worker);
    void getCardsAttachmentsByIdCardByIdAttachmentSignalFull(OAIHttpRequestWorker *worker);
    void getCardsBoardByIdCardSignalFull(OAIHttpRequestWorker *worker);
    void getCardsBoardByIdCardByFieldSignalFull(OAIHttpRequestWorker *worker);
    void getCardsByIdCardSignalFull(OAIHttpRequestWorker *worker);
    void getCardsByIdCardByFieldSignalFull(OAIHttpRequestWorker *worker);
    void getCardsCheckItemStatesByIdCardSignalFull(OAIHttpRequestWorker *worker);
    void getCardsChecklistsByIdCardSignalFull(OAIHttpRequestWorker *worker);
    void getCardsListByIdCardSignalFull(OAIHttpRequestWorker *worker);
    void getCardsListByIdCardByFieldSignalFull(OAIHttpRequestWorker *worker);
    void getCardsMembersByIdCardSignalFull(OAIHttpRequestWorker *worker);
    void getCardsMembersVotedByIdCardSignalFull(OAIHttpRequestWorker *worker);
    void getCardsStickersByIdCardSignalFull(OAIHttpRequestWorker *worker);
    void getCardsStickersByIdCardByIdStickerSignalFull(OAIHttpRequestWorker *worker);
    void updateCardsActionsCommentsByIdCardByIdActionSignalFull(OAIHttpRequestWorker *worker);
    void updateCardsByIdCardSignalFull(OAIHttpRequestWorker *worker);
    void updateCardsChecklistCheckItemByIdCardByIdChecklistCurrentByIdCheckItemSignalFull(OAIHttpRequestWorker *worker);
    void updateCardsChecklistCheckItemNameByIdCardByIdChecklistByIdCheckItemSignalFull(OAIHttpRequestWorker *worker);
    void updateCardsChecklistCheckItemPosByIdCardByIdChecklistByIdCheckItemSignalFull(OAIHttpRequestWorker *worker);
    void updateCardsChecklistCheckItemStateByIdCardByIdChecklistByIdCheckItemSignalFull(OAIHttpRequestWorker *worker);
    void updateCardsClosedByIdCardSignalFull(OAIHttpRequestWorker *worker);
    void updateCardsDescByIdCardSignalFull(OAIHttpRequestWorker *worker);
    void updateCardsDueByIdCardSignalFull(OAIHttpRequestWorker *worker);
    void updateCardsIdAttachmentCoverByIdCardSignalFull(OAIHttpRequestWorker *worker);
    void updateCardsIdBoardByIdCardSignalFull(OAIHttpRequestWorker *worker);
    void updateCardsIdListByIdCardSignalFull(OAIHttpRequestWorker *worker);
    void updateCardsIdMembersByIdCardSignalFull(OAIHttpRequestWorker *worker);
    void updateCardsLabelsByIdCardSignalFull(OAIHttpRequestWorker *worker);
    void updateCardsNameByIdCardSignalFull(OAIHttpRequestWorker *worker);
    void updateCardsPosByIdCardSignalFull(OAIHttpRequestWorker *worker);
    void updateCardsStickersByIdCardByIdStickerSignalFull(OAIHttpRequestWorker *worker);
    void updateCardsSubscribedByIdCardSignalFull(OAIHttpRequestWorker *worker);

    Q_DECL_DEPRECATED_X("Use addCardsSignalError() instead")
    void addCardsSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void addCardsSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use addCardsActionsCommentsByIdCardSignalError() instead")
    void addCardsActionsCommentsByIdCardSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void addCardsActionsCommentsByIdCardSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use addCardsAttachmentsByIdCardSignalError() instead")
    void addCardsAttachmentsByIdCardSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void addCardsAttachmentsByIdCardSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use addCardsChecklistCheckItemByIdCardByIdChecklistSignalError() instead")
    void addCardsChecklistCheckItemByIdCardByIdChecklistSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void addCardsChecklistCheckItemByIdCardByIdChecklistSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use addCardsChecklistCheckItemConvertToCardByIdCardByIdChecklistByIdCheckItemSignalError() instead")
    void addCardsChecklistCheckItemConvertToCardByIdCardByIdChecklistByIdCheckItemSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void addCardsChecklistCheckItemConvertToCardByIdCardByIdChecklistByIdCheckItemSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use addCardsChecklistsByIdCardSignalError() instead")
    void addCardsChecklistsByIdCardSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void addCardsChecklistsByIdCardSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use addCardsIdLabelsByIdCardSignalError() instead")
    void addCardsIdLabelsByIdCardSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void addCardsIdLabelsByIdCardSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use addCardsIdMembersByIdCardSignalError() instead")
    void addCardsIdMembersByIdCardSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void addCardsIdMembersByIdCardSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use addCardsLabelsByIdCardSignalError() instead")
    void addCardsLabelsByIdCardSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void addCardsLabelsByIdCardSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use addCardsMarkAssociatedNotificationsReadByIdCardSignalError() instead")
    void addCardsMarkAssociatedNotificationsReadByIdCardSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void addCardsMarkAssociatedNotificationsReadByIdCardSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use addCardsMembersVotedByIdCardSignalError() instead")
    void addCardsMembersVotedByIdCardSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void addCardsMembersVotedByIdCardSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use addCardsStickersByIdCardSignalError() instead")
    void addCardsStickersByIdCardSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void addCardsStickersByIdCardSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteCardsActionsCommentsByIdCardByIdActionSignalError() instead")
    void deleteCardsActionsCommentsByIdCardByIdActionSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void deleteCardsActionsCommentsByIdCardByIdActionSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteCardsAttachmentsByIdCardByIdAttachmentSignalError() instead")
    void deleteCardsAttachmentsByIdCardByIdAttachmentSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void deleteCardsAttachmentsByIdCardByIdAttachmentSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteCardsByIdCardSignalError() instead")
    void deleteCardsByIdCardSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void deleteCardsByIdCardSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteCardsChecklistCheckItemByIdCardByIdChecklistByIdCheckItemSignalError() instead")
    void deleteCardsChecklistCheckItemByIdCardByIdChecklistByIdCheckItemSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void deleteCardsChecklistCheckItemByIdCardByIdChecklistByIdCheckItemSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteCardsChecklistsByIdCardByIdChecklistSignalError() instead")
    void deleteCardsChecklistsByIdCardByIdChecklistSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void deleteCardsChecklistsByIdCardByIdChecklistSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteCardsIdLabelsByIdCardByIdLabelSignalError() instead")
    void deleteCardsIdLabelsByIdCardByIdLabelSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void deleteCardsIdLabelsByIdCardByIdLabelSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteCardsIdMembersByIdCardByIdMemberSignalError() instead")
    void deleteCardsIdMembersByIdCardByIdMemberSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void deleteCardsIdMembersByIdCardByIdMemberSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteCardsLabelsByIdCardByColorSignalError() instead")
    void deleteCardsLabelsByIdCardByColorSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void deleteCardsLabelsByIdCardByColorSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteCardsMembersVotedByIdCardByIdMemberSignalError() instead")
    void deleteCardsMembersVotedByIdCardByIdMemberSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void deleteCardsMembersVotedByIdCardByIdMemberSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteCardsStickersByIdCardByIdStickerSignalError() instead")
    void deleteCardsStickersByIdCardByIdStickerSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void deleteCardsStickersByIdCardByIdStickerSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getCardsActionsByIdCardSignalError() instead")
    void getCardsActionsByIdCardSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void getCardsActionsByIdCardSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getCardsAttachmentsByIdCardSignalError() instead")
    void getCardsAttachmentsByIdCardSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void getCardsAttachmentsByIdCardSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getCardsAttachmentsByIdCardByIdAttachmentSignalError() instead")
    void getCardsAttachmentsByIdCardByIdAttachmentSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void getCardsAttachmentsByIdCardByIdAttachmentSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getCardsBoardByIdCardSignalError() instead")
    void getCardsBoardByIdCardSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void getCardsBoardByIdCardSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getCardsBoardByIdCardByFieldSignalError() instead")
    void getCardsBoardByIdCardByFieldSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void getCardsBoardByIdCardByFieldSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getCardsByIdCardSignalError() instead")
    void getCardsByIdCardSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void getCardsByIdCardSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getCardsByIdCardByFieldSignalError() instead")
    void getCardsByIdCardByFieldSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void getCardsByIdCardByFieldSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getCardsCheckItemStatesByIdCardSignalError() instead")
    void getCardsCheckItemStatesByIdCardSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void getCardsCheckItemStatesByIdCardSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getCardsChecklistsByIdCardSignalError() instead")
    void getCardsChecklistsByIdCardSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void getCardsChecklistsByIdCardSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getCardsListByIdCardSignalError() instead")
    void getCardsListByIdCardSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void getCardsListByIdCardSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getCardsListByIdCardByFieldSignalError() instead")
    void getCardsListByIdCardByFieldSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void getCardsListByIdCardByFieldSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getCardsMembersByIdCardSignalError() instead")
    void getCardsMembersByIdCardSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void getCardsMembersByIdCardSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getCardsMembersVotedByIdCardSignalError() instead")
    void getCardsMembersVotedByIdCardSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void getCardsMembersVotedByIdCardSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getCardsStickersByIdCardSignalError() instead")
    void getCardsStickersByIdCardSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void getCardsStickersByIdCardSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getCardsStickersByIdCardByIdStickerSignalError() instead")
    void getCardsStickersByIdCardByIdStickerSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void getCardsStickersByIdCardByIdStickerSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateCardsActionsCommentsByIdCardByIdActionSignalError() instead")
    void updateCardsActionsCommentsByIdCardByIdActionSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void updateCardsActionsCommentsByIdCardByIdActionSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateCardsByIdCardSignalError() instead")
    void updateCardsByIdCardSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void updateCardsByIdCardSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateCardsChecklistCheckItemByIdCardByIdChecklistCurrentByIdCheckItemSignalError() instead")
    void updateCardsChecklistCheckItemByIdCardByIdChecklistCurrentByIdCheckItemSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void updateCardsChecklistCheckItemByIdCardByIdChecklistCurrentByIdCheckItemSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateCardsChecklistCheckItemNameByIdCardByIdChecklistByIdCheckItemSignalError() instead")
    void updateCardsChecklistCheckItemNameByIdCardByIdChecklistByIdCheckItemSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void updateCardsChecklistCheckItemNameByIdCardByIdChecklistByIdCheckItemSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateCardsChecklistCheckItemPosByIdCardByIdChecklistByIdCheckItemSignalError() instead")
    void updateCardsChecklistCheckItemPosByIdCardByIdChecklistByIdCheckItemSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void updateCardsChecklistCheckItemPosByIdCardByIdChecklistByIdCheckItemSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateCardsChecklistCheckItemStateByIdCardByIdChecklistByIdCheckItemSignalError() instead")
    void updateCardsChecklistCheckItemStateByIdCardByIdChecklistByIdCheckItemSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void updateCardsChecklistCheckItemStateByIdCardByIdChecklistByIdCheckItemSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateCardsClosedByIdCardSignalError() instead")
    void updateCardsClosedByIdCardSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void updateCardsClosedByIdCardSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateCardsDescByIdCardSignalError() instead")
    void updateCardsDescByIdCardSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void updateCardsDescByIdCardSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateCardsDueByIdCardSignalError() instead")
    void updateCardsDueByIdCardSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void updateCardsDueByIdCardSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateCardsIdAttachmentCoverByIdCardSignalError() instead")
    void updateCardsIdAttachmentCoverByIdCardSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void updateCardsIdAttachmentCoverByIdCardSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateCardsIdBoardByIdCardSignalError() instead")
    void updateCardsIdBoardByIdCardSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void updateCardsIdBoardByIdCardSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateCardsIdListByIdCardSignalError() instead")
    void updateCardsIdListByIdCardSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void updateCardsIdListByIdCardSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateCardsIdMembersByIdCardSignalError() instead")
    void updateCardsIdMembersByIdCardSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void updateCardsIdMembersByIdCardSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateCardsLabelsByIdCardSignalError() instead")
    void updateCardsLabelsByIdCardSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void updateCardsLabelsByIdCardSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateCardsNameByIdCardSignalError() instead")
    void updateCardsNameByIdCardSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void updateCardsNameByIdCardSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateCardsPosByIdCardSignalError() instead")
    void updateCardsPosByIdCardSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void updateCardsPosByIdCardSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateCardsStickersByIdCardByIdStickerSignalError() instead")
    void updateCardsStickersByIdCardByIdStickerSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void updateCardsStickersByIdCardByIdStickerSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateCardsSubscribedByIdCardSignalError() instead")
    void updateCardsSubscribedByIdCardSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void updateCardsSubscribedByIdCardSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);

    Q_DECL_DEPRECATED_X("Use addCardsSignalErrorFull() instead")
    void addCardsSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void addCardsSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use addCardsActionsCommentsByIdCardSignalErrorFull() instead")
    void addCardsActionsCommentsByIdCardSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void addCardsActionsCommentsByIdCardSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use addCardsAttachmentsByIdCardSignalErrorFull() instead")
    void addCardsAttachmentsByIdCardSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void addCardsAttachmentsByIdCardSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use addCardsChecklistCheckItemByIdCardByIdChecklistSignalErrorFull() instead")
    void addCardsChecklistCheckItemByIdCardByIdChecklistSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void addCardsChecklistCheckItemByIdCardByIdChecklistSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use addCardsChecklistCheckItemConvertToCardByIdCardByIdChecklistByIdCheckItemSignalErrorFull() instead")
    void addCardsChecklistCheckItemConvertToCardByIdCardByIdChecklistByIdCheckItemSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void addCardsChecklistCheckItemConvertToCardByIdCardByIdChecklistByIdCheckItemSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use addCardsChecklistsByIdCardSignalErrorFull() instead")
    void addCardsChecklistsByIdCardSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void addCardsChecklistsByIdCardSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use addCardsIdLabelsByIdCardSignalErrorFull() instead")
    void addCardsIdLabelsByIdCardSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void addCardsIdLabelsByIdCardSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use addCardsIdMembersByIdCardSignalErrorFull() instead")
    void addCardsIdMembersByIdCardSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void addCardsIdMembersByIdCardSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use addCardsLabelsByIdCardSignalErrorFull() instead")
    void addCardsLabelsByIdCardSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void addCardsLabelsByIdCardSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use addCardsMarkAssociatedNotificationsReadByIdCardSignalErrorFull() instead")
    void addCardsMarkAssociatedNotificationsReadByIdCardSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void addCardsMarkAssociatedNotificationsReadByIdCardSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use addCardsMembersVotedByIdCardSignalErrorFull() instead")
    void addCardsMembersVotedByIdCardSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void addCardsMembersVotedByIdCardSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use addCardsStickersByIdCardSignalErrorFull() instead")
    void addCardsStickersByIdCardSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void addCardsStickersByIdCardSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteCardsActionsCommentsByIdCardByIdActionSignalErrorFull() instead")
    void deleteCardsActionsCommentsByIdCardByIdActionSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void deleteCardsActionsCommentsByIdCardByIdActionSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteCardsAttachmentsByIdCardByIdAttachmentSignalErrorFull() instead")
    void deleteCardsAttachmentsByIdCardByIdAttachmentSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void deleteCardsAttachmentsByIdCardByIdAttachmentSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteCardsByIdCardSignalErrorFull() instead")
    void deleteCardsByIdCardSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void deleteCardsByIdCardSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteCardsChecklistCheckItemByIdCardByIdChecklistByIdCheckItemSignalErrorFull() instead")
    void deleteCardsChecklistCheckItemByIdCardByIdChecklistByIdCheckItemSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void deleteCardsChecklistCheckItemByIdCardByIdChecklistByIdCheckItemSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteCardsChecklistsByIdCardByIdChecklistSignalErrorFull() instead")
    void deleteCardsChecklistsByIdCardByIdChecklistSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void deleteCardsChecklistsByIdCardByIdChecklistSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteCardsIdLabelsByIdCardByIdLabelSignalErrorFull() instead")
    void deleteCardsIdLabelsByIdCardByIdLabelSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void deleteCardsIdLabelsByIdCardByIdLabelSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteCardsIdMembersByIdCardByIdMemberSignalErrorFull() instead")
    void deleteCardsIdMembersByIdCardByIdMemberSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void deleteCardsIdMembersByIdCardByIdMemberSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteCardsLabelsByIdCardByColorSignalErrorFull() instead")
    void deleteCardsLabelsByIdCardByColorSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void deleteCardsLabelsByIdCardByColorSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteCardsMembersVotedByIdCardByIdMemberSignalErrorFull() instead")
    void deleteCardsMembersVotedByIdCardByIdMemberSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void deleteCardsMembersVotedByIdCardByIdMemberSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteCardsStickersByIdCardByIdStickerSignalErrorFull() instead")
    void deleteCardsStickersByIdCardByIdStickerSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void deleteCardsStickersByIdCardByIdStickerSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getCardsActionsByIdCardSignalErrorFull() instead")
    void getCardsActionsByIdCardSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getCardsActionsByIdCardSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getCardsAttachmentsByIdCardSignalErrorFull() instead")
    void getCardsAttachmentsByIdCardSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getCardsAttachmentsByIdCardSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getCardsAttachmentsByIdCardByIdAttachmentSignalErrorFull() instead")
    void getCardsAttachmentsByIdCardByIdAttachmentSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getCardsAttachmentsByIdCardByIdAttachmentSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getCardsBoardByIdCardSignalErrorFull() instead")
    void getCardsBoardByIdCardSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getCardsBoardByIdCardSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getCardsBoardByIdCardByFieldSignalErrorFull() instead")
    void getCardsBoardByIdCardByFieldSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getCardsBoardByIdCardByFieldSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getCardsByIdCardSignalErrorFull() instead")
    void getCardsByIdCardSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getCardsByIdCardSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getCardsByIdCardByFieldSignalErrorFull() instead")
    void getCardsByIdCardByFieldSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getCardsByIdCardByFieldSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getCardsCheckItemStatesByIdCardSignalErrorFull() instead")
    void getCardsCheckItemStatesByIdCardSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getCardsCheckItemStatesByIdCardSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getCardsChecklistsByIdCardSignalErrorFull() instead")
    void getCardsChecklistsByIdCardSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getCardsChecklistsByIdCardSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getCardsListByIdCardSignalErrorFull() instead")
    void getCardsListByIdCardSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getCardsListByIdCardSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getCardsListByIdCardByFieldSignalErrorFull() instead")
    void getCardsListByIdCardByFieldSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getCardsListByIdCardByFieldSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getCardsMembersByIdCardSignalErrorFull() instead")
    void getCardsMembersByIdCardSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getCardsMembersByIdCardSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getCardsMembersVotedByIdCardSignalErrorFull() instead")
    void getCardsMembersVotedByIdCardSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getCardsMembersVotedByIdCardSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getCardsStickersByIdCardSignalErrorFull() instead")
    void getCardsStickersByIdCardSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getCardsStickersByIdCardSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getCardsStickersByIdCardByIdStickerSignalErrorFull() instead")
    void getCardsStickersByIdCardByIdStickerSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getCardsStickersByIdCardByIdStickerSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateCardsActionsCommentsByIdCardByIdActionSignalErrorFull() instead")
    void updateCardsActionsCommentsByIdCardByIdActionSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void updateCardsActionsCommentsByIdCardByIdActionSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateCardsByIdCardSignalErrorFull() instead")
    void updateCardsByIdCardSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void updateCardsByIdCardSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateCardsChecklistCheckItemByIdCardByIdChecklistCurrentByIdCheckItemSignalErrorFull() instead")
    void updateCardsChecklistCheckItemByIdCardByIdChecklistCurrentByIdCheckItemSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void updateCardsChecklistCheckItemByIdCardByIdChecklistCurrentByIdCheckItemSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateCardsChecklistCheckItemNameByIdCardByIdChecklistByIdCheckItemSignalErrorFull() instead")
    void updateCardsChecklistCheckItemNameByIdCardByIdChecklistByIdCheckItemSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void updateCardsChecklistCheckItemNameByIdCardByIdChecklistByIdCheckItemSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateCardsChecklistCheckItemPosByIdCardByIdChecklistByIdCheckItemSignalErrorFull() instead")
    void updateCardsChecklistCheckItemPosByIdCardByIdChecklistByIdCheckItemSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void updateCardsChecklistCheckItemPosByIdCardByIdChecklistByIdCheckItemSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateCardsChecklistCheckItemStateByIdCardByIdChecklistByIdCheckItemSignalErrorFull() instead")
    void updateCardsChecklistCheckItemStateByIdCardByIdChecklistByIdCheckItemSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void updateCardsChecklistCheckItemStateByIdCardByIdChecklistByIdCheckItemSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateCardsClosedByIdCardSignalErrorFull() instead")
    void updateCardsClosedByIdCardSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void updateCardsClosedByIdCardSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateCardsDescByIdCardSignalErrorFull() instead")
    void updateCardsDescByIdCardSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void updateCardsDescByIdCardSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateCardsDueByIdCardSignalErrorFull() instead")
    void updateCardsDueByIdCardSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void updateCardsDueByIdCardSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateCardsIdAttachmentCoverByIdCardSignalErrorFull() instead")
    void updateCardsIdAttachmentCoverByIdCardSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void updateCardsIdAttachmentCoverByIdCardSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateCardsIdBoardByIdCardSignalErrorFull() instead")
    void updateCardsIdBoardByIdCardSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void updateCardsIdBoardByIdCardSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateCardsIdListByIdCardSignalErrorFull() instead")
    void updateCardsIdListByIdCardSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void updateCardsIdListByIdCardSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateCardsIdMembersByIdCardSignalErrorFull() instead")
    void updateCardsIdMembersByIdCardSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void updateCardsIdMembersByIdCardSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateCardsLabelsByIdCardSignalErrorFull() instead")
    void updateCardsLabelsByIdCardSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void updateCardsLabelsByIdCardSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateCardsNameByIdCardSignalErrorFull() instead")
    void updateCardsNameByIdCardSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void updateCardsNameByIdCardSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateCardsPosByIdCardSignalErrorFull() instead")
    void updateCardsPosByIdCardSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void updateCardsPosByIdCardSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateCardsStickersByIdCardByIdStickerSignalErrorFull() instead")
    void updateCardsStickersByIdCardByIdStickerSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void updateCardsStickersByIdCardByIdStickerSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateCardsSubscribedByIdCardSignalErrorFull() instead")
    void updateCardsSubscribedByIdCardSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void updateCardsSubscribedByIdCardSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);

    void abortRequestsSignal();
    void allPendingRequestsCompleted();

public Q_SLOTS:
    void tokenAvailable();
};

} // namespace OpenAPI
#endif
