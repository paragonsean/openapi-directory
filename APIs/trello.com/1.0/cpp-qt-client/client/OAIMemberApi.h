/**
 * Trello
 * This document describes the REST API of Trello as published by Trello.com.  - <a href='https://trello.com/docs/index.html' target='_blank'>Official Documentation</a>  - <a href='https://trello.com/docs/api' target='_blank'>The HTML pages that were scraped in order to generate this specification.</a>
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#ifndef OAI_OAIMemberApi_H
#define OAI_OAIMemberApi_H

#include "OAIHelpers.h"
#include "OAIHttpRequest.h"
#include "OAIServerConfiguration.h"
#include "OAIOauth.h"

#include "OAIMembers.h"
#include "OAIMembers_avatar.h"
#include "OAIMembers_avatarSource.h"
#include "OAIMembers_bio.h"
#include "OAIMembers_boardBackgrounds.h"
#include "OAIMembers_boardStars.h"
#include "OAIMembers_boardStars_idBoard.h"
#include "OAIMembers_boardStars_pos.h"
#include "OAIMembers_customBoardBackgrounds.h"
#include "OAIMembers_customEmoji.h"
#include "OAIMembers_customStickers.h"
#include "OAIMembers_fullName.h"
#include "OAIMembers_initials.h"
#include "OAIMembers_oneTimeMessagesDismissed.h"
#include "OAIMembers_savedSearches.h"
#include "OAIMembers_savedSearches_name.h"
#include "OAIMembers_savedSearches_pos.h"
#include "OAIMembers_savedSearches_query.h"
#include "OAIMembers_username.h"
#include "OAIPrefs_colorBlind.h"
#include "OAIPrefs_locale.h"
#include "OAIPrefs_minutesBetweenSummaries.h"
#include <QString>

#include <QObject>
#include <QByteArray>
#include <QStringList>
#include <QList>
#include <QNetworkAccessManager>

namespace OpenAPI {

class OAIMemberApi : public QObject {
    Q_OBJECT

public:
    OAIMemberApi(const int timeOut = 0);
    ~OAIMemberApi();

    void initializeServerConfigs();
    int setDefaultServerValue(int serverIndex,const QString &operation, const QString &variable,const QString &val);
    void setServerIndex(const QString &operation, int serverIndex);
    void setApiKey(const QString &apiKeyName, const QString &apiKey);
    void setBearerToken(const QString &token);
    void setUsername(const QString &username);
    void setPassword(const QString &password);
    void setTimeOut(const int timeOut);
    void setWorkingDirectory(const QString &path);
    void setNetworkAccessManager(QNetworkAccessManager* manager);
    int addServerConfiguration(const QString &operation, const QUrl &url, const QString &description = "", const QMap<QString, OAIServerVariable> &variables = QMap<QString, OAIServerVariable>());
    void setNewServerForAllOperations(const QUrl &url, const QString &description = "", const QMap<QString, OAIServerVariable> &variables =  QMap<QString, OAIServerVariable>());
    void setNewServer(const QString &operation, const QUrl &url, const QString &description = "", const QMap<QString, OAIServerVariable> &variables =  QMap<QString, OAIServerVariable>());
    void addHeaders(const QString &key, const QString &value);
    void enableRequestCompression();
    void enableResponseCompression();
    void abortRequests();
    QString getParamStylePrefix(const QString &style);
    QString getParamStyleSuffix(const QString &style);
    QString getParamStyleDelimiter(const QString &style, const QString &name, bool isExplode);

    /**
    * @param[in]  id_member QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  oai_members_avatar OAIMembers_avatar [required]
    */
    virtual void addMembersAvatarByIdMember(const QString &id_member, const QString &key, const QString &token, const OAIMembers_avatar &oai_members_avatar);

    /**
    * @param[in]  id_member QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  oai_members_board_backgrounds OAIMembers_boardBackgrounds [required]
    */
    virtual void addMembersBoardBackgroundsByIdMember(const QString &id_member, const QString &key, const QString &token, const OAIMembers_boardBackgrounds &oai_members_board_backgrounds);

    /**
    * @param[in]  id_member QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  oai_members_board_stars OAIMembers_boardStars [required]
    */
    virtual void addMembersBoardStarsByIdMember(const QString &id_member, const QString &key, const QString &token, const OAIMembers_boardStars &oai_members_board_stars);

    /**
    * @param[in]  id_member QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  oai_members_custom_board_backgrounds OAIMembers_customBoardBackgrounds [required]
    */
    virtual void addMembersCustomBoardBackgroundsByIdMember(const QString &id_member, const QString &key, const QString &token, const OAIMembers_customBoardBackgrounds &oai_members_custom_board_backgrounds);

    /**
    * @param[in]  id_member QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  oai_members_custom_emoji OAIMembers_customEmoji [required]
    */
    virtual void addMembersCustomEmojiByIdMember(const QString &id_member, const QString &key, const QString &token, const OAIMembers_customEmoji &oai_members_custom_emoji);

    /**
    * @param[in]  id_member QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  oai_members_custom_stickers OAIMembers_customStickers [required]
    */
    virtual void addMembersCustomStickersByIdMember(const QString &id_member, const QString &key, const QString &token, const OAIMembers_customStickers &oai_members_custom_stickers);

    /**
    * @param[in]  id_member QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  oai_members_one_time_messages_dismissed OAIMembers_oneTimeMessagesDismissed [required]
    */
    virtual void addMembersOneTimeMessagesDismissedByIdMember(const QString &id_member, const QString &key, const QString &token, const OAIMembers_oneTimeMessagesDismissed &oai_members_one_time_messages_dismissed);

    /**
    * @param[in]  id_member QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  oai_members_saved_searches OAIMembers_savedSearches [required]
    */
    virtual void addMembersSavedSearchesByIdMember(const QString &id_member, const QString &key, const QString &token, const OAIMembers_savedSearches &oai_members_saved_searches);

    /**
    * @param[in]  id_member QString [required]
    * @param[in]  id_board_background QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    */
    virtual void deleteMembersBoardBackgroundsByIdMemberByIdBoardBackground(const QString &id_member, const QString &id_board_background, const QString &key, const QString &token);

    /**
    * @param[in]  id_member QString [required]
    * @param[in]  id_board_star QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    */
    virtual void deleteMembersBoardStarsByIdMemberByIdBoardStar(const QString &id_member, const QString &id_board_star, const QString &key, const QString &token);

    /**
    * @param[in]  id_member QString [required]
    * @param[in]  id_board_background QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    */
    virtual void deleteMembersCustomBoardBackgroundsByIdMemberByIdBoardBackground(const QString &id_member, const QString &id_board_background, const QString &key, const QString &token);

    /**
    * @param[in]  id_member QString [required]
    * @param[in]  id_custom_sticker QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    */
    virtual void deleteMembersCustomStickersByIdMemberByIdCustomSticker(const QString &id_member, const QString &id_custom_sticker, const QString &key, const QString &token);

    /**
    * @param[in]  id_member QString [required]
    * @param[in]  id_saved_search QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    */
    virtual void deleteMembersSavedSearchesByIdMemberByIdSavedSearch(const QString &id_member, const QString &id_saved_search, const QString &key, const QString &token);

    /**
    * @param[in]  id_member QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  entities QString [optional]
    * @param[in]  display QString [optional]
    * @param[in]  filter QString [optional]
    * @param[in]  fields QString [optional]
    * @param[in]  limit QString [optional]
    * @param[in]  format QString [optional]
    * @param[in]  since QString [optional]
    * @param[in]  before QString [optional]
    * @param[in]  page QString [optional]
    * @param[in]  id_models QString [optional]
    * @param[in]  member QString [optional]
    * @param[in]  member_fields QString [optional]
    * @param[in]  member_creator QString [optional]
    * @param[in]  member_creator_fields QString [optional]
    */
    virtual void getMembersActionsByIdMember(const QString &id_member, const QString &key, const QString &token, const ::OpenAPI::OptionalParam<QString> &entities = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &display = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &filter = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &fields = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &limit = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &format = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &since = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &before = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &page = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &id_models = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &member = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &member_fields = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &member_creator = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &member_creator_fields = ::OpenAPI::OptionalParam<QString>());

    /**
    * @param[in]  id_member QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  filter QString [optional]
    */
    virtual void getMembersBoardBackgroundsByIdMember(const QString &id_member, const QString &key, const QString &token, const ::OpenAPI::OptionalParam<QString> &filter = ::OpenAPI::OptionalParam<QString>());

    /**
    * @param[in]  id_member QString [required]
    * @param[in]  id_board_background QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  fields QString [optional]
    */
    virtual void getMembersBoardBackgroundsByIdMemberByIdBoardBackground(const QString &id_member, const QString &id_board_background, const QString &key, const QString &token, const ::OpenAPI::OptionalParam<QString> &fields = ::OpenAPI::OptionalParam<QString>());

    /**
    * @param[in]  id_member QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    */
    virtual void getMembersBoardStarsByIdMember(const QString &id_member, const QString &key, const QString &token);

    /**
    * @param[in]  id_member QString [required]
    * @param[in]  id_board_star QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    */
    virtual void getMembersBoardStarsByIdMemberByIdBoardStar(const QString &id_member, const QString &id_board_star, const QString &key, const QString &token);

    /**
    * @param[in]  id_member QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  filter QString [optional]
    * @param[in]  fields QString [optional]
    * @param[in]  actions QString [optional]
    * @param[in]  actions_entities QString [optional]
    * @param[in]  actions_limit QString [optional]
    * @param[in]  actions_format QString [optional]
    * @param[in]  actions_since QString [optional]
    * @param[in]  action_fields QString [optional]
    * @param[in]  memberships QString [optional]
    * @param[in]  organization QString [optional]
    * @param[in]  organization_fields QString [optional]
    * @param[in]  lists QString [optional]
    */
    virtual void getMembersBoardsByIdMember(const QString &id_member, const QString &key, const QString &token, const ::OpenAPI::OptionalParam<QString> &filter = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &fields = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &actions = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &actions_entities = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &actions_limit = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &actions_format = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &actions_since = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &action_fields = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &memberships = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &organization = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &organization_fields = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &lists = ::OpenAPI::OptionalParam<QString>());

    /**
    * @param[in]  id_member QString [required]
    * @param[in]  filter QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    */
    virtual void getMembersBoardsByIdMemberByFilter(const QString &id_member, const QString &filter, const QString &key, const QString &token);

    /**
    * @param[in]  id_member QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  fields QString [optional]
    */
    virtual void getMembersBoardsInvitedByIdMember(const QString &id_member, const QString &key, const QString &token, const ::OpenAPI::OptionalParam<QString> &fields = ::OpenAPI::OptionalParam<QString>());

    /**
    * @param[in]  id_member QString [required]
    * @param[in]  field QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    */
    virtual void getMembersBoardsInvitedByIdMemberByField(const QString &id_member, const QString &field, const QString &key, const QString &token);

    /**
    * @param[in]  id_member QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  actions QString [optional]
    * @param[in]  actions_entities QString [optional]
    * @param[in]  actions_display QString [optional]
    * @param[in]  actions_limit QString [optional]
    * @param[in]  action_fields QString [optional]
    * @param[in]  action_since QString [optional]
    * @param[in]  action_before QString [optional]
    * @param[in]  cards QString [optional]
    * @param[in]  card_fields QString [optional]
    * @param[in]  card_members QString [optional]
    * @param[in]  card_member_fields QString [optional]
    * @param[in]  card_attachments QString [optional]
    * @param[in]  card_attachment_fields QString [optional]
    * @param[in]  card_stickers QString [optional]
    * @param[in]  boards QString [optional]
    * @param[in]  board_fields QString [optional]
    * @param[in]  board_actions QString [optional]
    * @param[in]  board_actions_entities QString [optional]
    * @param[in]  board_actions_display QString [optional]
    * @param[in]  board_actions_format QString [optional]
    * @param[in]  board_actions_since QString [optional]
    * @param[in]  board_actions_limit QString [optional]
    * @param[in]  board_action_fields QString [optional]
    * @param[in]  board_lists QString [optional]
    * @param[in]  board_memberships QString [optional]
    * @param[in]  board_organization QString [optional]
    * @param[in]  board_organization_fields QString [optional]
    * @param[in]  boards_invited QString [optional]
    * @param[in]  boards_invited_fields QString [optional]
    * @param[in]  board_stars QString [optional]
    * @param[in]  saved_searches QString [optional]
    * @param[in]  organizations QString [optional]
    * @param[in]  organization_fields QString [optional]
    * @param[in]  organization_paid_account QString [optional]
    * @param[in]  organizations_invited QString [optional]
    * @param[in]  organizations_invited_fields QString [optional]
    * @param[in]  notifications QString [optional]
    * @param[in]  notifications_entities QString [optional]
    * @param[in]  notifications_display QString [optional]
    * @param[in]  notifications_limit QString [optional]
    * @param[in]  notification_fields QString [optional]
    * @param[in]  notification_member_creator QString [optional]
    * @param[in]  notification_member_creator_fields QString [optional]
    * @param[in]  notification_before QString [optional]
    * @param[in]  notification_since QString [optional]
    * @param[in]  tokens QString [optional]
    * @param[in]  paid_account QString [optional]
    * @param[in]  board_backgrounds QString [optional]
    * @param[in]  custom_board_backgrounds QString [optional]
    * @param[in]  custom_stickers QString [optional]
    * @param[in]  custom_emoji QString [optional]
    * @param[in]  fields QString [optional]
    */
    virtual void getMembersByIdMember(const QString &id_member, const QString &key, const QString &token, const ::OpenAPI::OptionalParam<QString> &actions = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &actions_entities = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &actions_display = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &actions_limit = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &action_fields = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &action_since = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &action_before = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &cards = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &card_fields = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &card_members = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &card_member_fields = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &card_attachments = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &card_attachment_fields = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &card_stickers = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &boards = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &board_fields = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &board_actions = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &board_actions_entities = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &board_actions_display = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &board_actions_format = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &board_actions_since = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &board_actions_limit = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &board_action_fields = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &board_lists = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &board_memberships = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &board_organization = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &board_organization_fields = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &boards_invited = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &boards_invited_fields = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &board_stars = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &saved_searches = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &organizations = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &organization_fields = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &organization_paid_account = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &organizations_invited = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &organizations_invited_fields = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &notifications = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &notifications_entities = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &notifications_display = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &notifications_limit = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &notification_fields = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &notification_member_creator = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &notification_member_creator_fields = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &notification_before = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &notification_since = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &tokens = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &paid_account = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &board_backgrounds = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &custom_board_backgrounds = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &custom_stickers = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &custom_emoji = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &fields = ::OpenAPI::OptionalParam<QString>());

    /**
    * @param[in]  id_member QString [required]
    * @param[in]  field QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    */
    virtual void getMembersByIdMemberByField(const QString &id_member, const QString &field, const QString &key, const QString &token);

    /**
    * @param[in]  id_member QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  actions QString [optional]
    * @param[in]  attachments QString [optional]
    * @param[in]  attachment_fields QString [optional]
    * @param[in]  stickers QString [optional]
    * @param[in]  members QString [optional]
    * @param[in]  member_fields QString [optional]
    * @param[in]  check_item_states QString [optional]
    * @param[in]  checklists QString [optional]
    * @param[in]  limit QString [optional]
    * @param[in]  since QString [optional]
    * @param[in]  before QString [optional]
    * @param[in]  filter QString [optional]
    * @param[in]  fields QString [optional]
    */
    virtual void getMembersCardsByIdMember(const QString &id_member, const QString &key, const QString &token, const ::OpenAPI::OptionalParam<QString> &actions = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &attachments = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &attachment_fields = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &stickers = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &members = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &member_fields = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &check_item_states = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &checklists = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &limit = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &since = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &before = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &filter = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &fields = ::OpenAPI::OptionalParam<QString>());

    /**
    * @param[in]  id_member QString [required]
    * @param[in]  filter QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    */
    virtual void getMembersCardsByIdMemberByFilter(const QString &id_member, const QString &filter, const QString &key, const QString &token);

    /**
    * @param[in]  id_member QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  filter QString [optional]
    */
    virtual void getMembersCustomBoardBackgroundsByIdMember(const QString &id_member, const QString &key, const QString &token, const ::OpenAPI::OptionalParam<QString> &filter = ::OpenAPI::OptionalParam<QString>());

    /**
    * @param[in]  id_member QString [required]
    * @param[in]  id_board_background QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  fields QString [optional]
    */
    virtual void getMembersCustomBoardBackgroundsByIdMemberByIdBoardBackground(const QString &id_member, const QString &id_board_background, const QString &key, const QString &token, const ::OpenAPI::OptionalParam<QString> &fields = ::OpenAPI::OptionalParam<QString>());

    /**
    * @param[in]  id_member QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  filter QString [optional]
    */
    virtual void getMembersCustomEmojiByIdMember(const QString &id_member, const QString &key, const QString &token, const ::OpenAPI::OptionalParam<QString> &filter = ::OpenAPI::OptionalParam<QString>());

    /**
    * @param[in]  id_member QString [required]
    * @param[in]  id_custom_emoji QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  fields QString [optional]
    */
    virtual void getMembersCustomEmojiByIdMemberByIdCustomEmoji(const QString &id_member, const QString &id_custom_emoji, const QString &key, const QString &token, const ::OpenAPI::OptionalParam<QString> &fields = ::OpenAPI::OptionalParam<QString>());

    /**
    * @param[in]  id_member QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  filter QString [optional]
    */
    virtual void getMembersCustomStickersByIdMember(const QString &id_member, const QString &key, const QString &token, const ::OpenAPI::OptionalParam<QString> &filter = ::OpenAPI::OptionalParam<QString>());

    /**
    * @param[in]  id_member QString [required]
    * @param[in]  id_custom_sticker QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  fields QString [optional]
    */
    virtual void getMembersCustomStickersByIdMemberByIdCustomSticker(const QString &id_member, const QString &id_custom_sticker, const QString &key, const QString &token, const ::OpenAPI::OptionalParam<QString> &fields = ::OpenAPI::OptionalParam<QString>());

    /**
    * @param[in]  id_member QString [required]
    * @param[in]  tags QString [required]
    * @param[in]  ix_last_update QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    */
    virtual void getMembersDeltasByIdMember(const QString &id_member, const QString &tags, const QString &ix_last_update, const QString &key, const QString &token);

    /**
    * @param[in]  id_member QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  entities QString [optional]
    * @param[in]  display QString [optional]
    * @param[in]  filter QString [optional]
    * @param[in]  read_filter QString [optional]
    * @param[in]  fields QString [optional]
    * @param[in]  limit QString [optional]
    * @param[in]  page QString [optional]
    * @param[in]  before QString [optional]
    * @param[in]  since QString [optional]
    * @param[in]  member_creator QString [optional]
    * @param[in]  member_creator_fields QString [optional]
    */
    virtual void getMembersNotificationsByIdMember(const QString &id_member, const QString &key, const QString &token, const ::OpenAPI::OptionalParam<QString> &entities = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &display = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &filter = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &read_filter = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &fields = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &limit = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &page = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &before = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &since = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &member_creator = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &member_creator_fields = ::OpenAPI::OptionalParam<QString>());

    /**
    * @param[in]  id_member QString [required]
    * @param[in]  filter QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    */
    virtual void getMembersNotificationsByIdMemberByFilter(const QString &id_member, const QString &filter, const QString &key, const QString &token);

    /**
    * @param[in]  id_member QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  filter QString [optional]
    * @param[in]  fields QString [optional]
    * @param[in]  paid_account QString [optional]
    */
    virtual void getMembersOrganizationsByIdMember(const QString &id_member, const QString &key, const QString &token, const ::OpenAPI::OptionalParam<QString> &filter = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &fields = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &paid_account = ::OpenAPI::OptionalParam<QString>());

    /**
    * @param[in]  id_member QString [required]
    * @param[in]  filter QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    */
    virtual void getMembersOrganizationsByIdMemberByFilter(const QString &id_member, const QString &filter, const QString &key, const QString &token);

    /**
    * @param[in]  id_member QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  fields QString [optional]
    */
    virtual void getMembersOrganizationsInvitedByIdMember(const QString &id_member, const QString &key, const QString &token, const ::OpenAPI::OptionalParam<QString> &fields = ::OpenAPI::OptionalParam<QString>());

    /**
    * @param[in]  id_member QString [required]
    * @param[in]  field QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    */
    virtual void getMembersOrganizationsInvitedByIdMemberByField(const QString &id_member, const QString &field, const QString &key, const QString &token);

    /**
    * @param[in]  id_member QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    */
    virtual void getMembersSavedSearchesByIdMember(const QString &id_member, const QString &key, const QString &token);

    /**
    * @param[in]  id_member QString [required]
    * @param[in]  id_saved_search QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    */
    virtual void getMembersSavedSearchesByIdMemberByIdSavedSearch(const QString &id_member, const QString &id_saved_search, const QString &key, const QString &token);

    /**
    * @param[in]  id_member QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  filter QString [optional]
    */
    virtual void getMembersTokensByIdMember(const QString &id_member, const QString &key, const QString &token, const ::OpenAPI::OptionalParam<QString> &filter = ::OpenAPI::OptionalParam<QString>());

    /**
    * @param[in]  id_member QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  oai_members_avatar_source OAIMembers_avatarSource [required]
    */
    virtual void updateMembersAvatarSourceByIdMember(const QString &id_member, const QString &key, const QString &token, const OAIMembers_avatarSource &oai_members_avatar_source);

    /**
    * @param[in]  id_member QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  oai_members_bio OAIMembers_bio [required]
    */
    virtual void updateMembersBioByIdMember(const QString &id_member, const QString &key, const QString &token, const OAIMembers_bio &oai_members_bio);

    /**
    * @param[in]  id_member QString [required]
    * @param[in]  id_board_background QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  oai_members_board_backgrounds OAIMembers_boardBackgrounds [required]
    */
    virtual void updateMembersBoardBackgroundsByIdMemberByIdBoardBackground(const QString &id_member, const QString &id_board_background, const QString &key, const QString &token, const OAIMembers_boardBackgrounds &oai_members_board_backgrounds);

    /**
    * @param[in]  id_member QString [required]
    * @param[in]  id_board_star QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  oai_members_board_stars OAIMembers_boardStars [required]
    */
    virtual void updateMembersBoardStarsByIdMemberByIdBoardStar(const QString &id_member, const QString &id_board_star, const QString &key, const QString &token, const OAIMembers_boardStars &oai_members_board_stars);

    /**
    * @param[in]  id_member QString [required]
    * @param[in]  id_board_star QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  oai_members_board_stars_id_board OAIMembers_boardStars_idBoard [required]
    */
    virtual void updateMembersBoardStarsIdBoardByIdMemberByIdBoardStar(const QString &id_member, const QString &id_board_star, const QString &key, const QString &token, const OAIMembers_boardStars_idBoard &oai_members_board_stars_id_board);

    /**
    * @param[in]  id_member QString [required]
    * @param[in]  id_board_star QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  oai_members_board_stars_pos OAIMembers_boardStars_pos [required]
    */
    virtual void updateMembersBoardStarsPosByIdMemberByIdBoardStar(const QString &id_member, const QString &id_board_star, const QString &key, const QString &token, const OAIMembers_boardStars_pos &oai_members_board_stars_pos);

    /**
    * @param[in]  id_member QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  oai_members OAIMembers [required]
    */
    virtual void updateMembersByIdMember(const QString &id_member, const QString &key, const QString &token, const OAIMembers &oai_members);

    /**
    * @param[in]  id_member QString [required]
    * @param[in]  id_board_background QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  oai_members_custom_board_backgrounds OAIMembers_customBoardBackgrounds [required]
    */
    virtual void updateMembersCustomBoardBackgroundsByIdMemberByIdBoardBackground(const QString &id_member, const QString &id_board_background, const QString &key, const QString &token, const OAIMembers_customBoardBackgrounds &oai_members_custom_board_backgrounds);

    /**
    * @param[in]  id_member QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  oai_members_full_name OAIMembers_fullName [required]
    */
    virtual void updateMembersFullNameByIdMember(const QString &id_member, const QString &key, const QString &token, const OAIMembers_fullName &oai_members_full_name);

    /**
    * @param[in]  id_member QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  oai_members_initials OAIMembers_initials [required]
    */
    virtual void updateMembersInitialsByIdMember(const QString &id_member, const QString &key, const QString &token, const OAIMembers_initials &oai_members_initials);

    /**
    * @param[in]  id_member QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  oai_prefs_color_blind OAIPrefs_colorBlind [required]
    */
    virtual void updateMembersPrefsColorBlindByIdMember(const QString &id_member, const QString &key, const QString &token, const OAIPrefs_colorBlind &oai_prefs_color_blind);

    /**
    * @param[in]  id_member QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  oai_prefs_locale OAIPrefs_locale [required]
    */
    virtual void updateMembersPrefsLocaleByIdMember(const QString &id_member, const QString &key, const QString &token, const OAIPrefs_locale &oai_prefs_locale);

    /**
    * @param[in]  id_member QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  oai_prefs_minutes_between_summaries OAIPrefs_minutesBetweenSummaries [required]
    */
    virtual void updateMembersPrefsMinutesBetweenSummariesByIdMember(const QString &id_member, const QString &key, const QString &token, const OAIPrefs_minutesBetweenSummaries &oai_prefs_minutes_between_summaries);

    /**
    * @param[in]  id_member QString [required]
    * @param[in]  id_saved_search QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  oai_members_saved_searches OAIMembers_savedSearches [required]
    */
    virtual void updateMembersSavedSearchesByIdMemberByIdSavedSearch(const QString &id_member, const QString &id_saved_search, const QString &key, const QString &token, const OAIMembers_savedSearches &oai_members_saved_searches);

    /**
    * @param[in]  id_member QString [required]
    * @param[in]  id_saved_search QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  oai_members_saved_searches_name OAIMembers_savedSearches_name [required]
    */
    virtual void updateMembersSavedSearchesNameByIdMemberByIdSavedSearch(const QString &id_member, const QString &id_saved_search, const QString &key, const QString &token, const OAIMembers_savedSearches_name &oai_members_saved_searches_name);

    /**
    * @param[in]  id_member QString [required]
    * @param[in]  id_saved_search QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  oai_members_saved_searches_pos OAIMembers_savedSearches_pos [required]
    */
    virtual void updateMembersSavedSearchesPosByIdMemberByIdSavedSearch(const QString &id_member, const QString &id_saved_search, const QString &key, const QString &token, const OAIMembers_savedSearches_pos &oai_members_saved_searches_pos);

    /**
    * @param[in]  id_member QString [required]
    * @param[in]  id_saved_search QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  oai_members_saved_searches_query OAIMembers_savedSearches_query [required]
    */
    virtual void updateMembersSavedSearchesQueryByIdMemberByIdSavedSearch(const QString &id_member, const QString &id_saved_search, const QString &key, const QString &token, const OAIMembers_savedSearches_query &oai_members_saved_searches_query);

    /**
    * @param[in]  id_member QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  oai_members_username OAIMembers_username [required]
    */
    virtual void updateMembersUsernameByIdMember(const QString &id_member, const QString &key, const QString &token, const OAIMembers_username &oai_members_username);


private:
    QMap<QString,int> _serverIndices;
    QMap<QString,QList<OAIServerConfiguration>> _serverConfigs;
    QMap<QString, QString> _apiKeys;
    QString _bearerToken;
    QString _username;
    QString _password;
    int _timeOut;
    QString _workingDirectory;
    QNetworkAccessManager* _manager;
    QMap<QString, QString> _defaultHeaders;
    bool _isResponseCompressionEnabled;
    bool _isRequestCompressionEnabled;
    OAIHttpRequestInput _latestInput;
    OAIHttpRequestWorker *_latestWorker;
    QStringList _latestScope;
    OauthCode _authFlow;
    OauthImplicit _implicitFlow;
    OauthCredentials _credentialFlow;
    OauthPassword _passwordFlow;
    int _OauthMethod = 0;

    void addMembersAvatarByIdMemberCallback(OAIHttpRequestWorker *worker);
    void addMembersBoardBackgroundsByIdMemberCallback(OAIHttpRequestWorker *worker);
    void addMembersBoardStarsByIdMemberCallback(OAIHttpRequestWorker *worker);
    void addMembersCustomBoardBackgroundsByIdMemberCallback(OAIHttpRequestWorker *worker);
    void addMembersCustomEmojiByIdMemberCallback(OAIHttpRequestWorker *worker);
    void addMembersCustomStickersByIdMemberCallback(OAIHttpRequestWorker *worker);
    void addMembersOneTimeMessagesDismissedByIdMemberCallback(OAIHttpRequestWorker *worker);
    void addMembersSavedSearchesByIdMemberCallback(OAIHttpRequestWorker *worker);
    void deleteMembersBoardBackgroundsByIdMemberByIdBoardBackgroundCallback(OAIHttpRequestWorker *worker);
    void deleteMembersBoardStarsByIdMemberByIdBoardStarCallback(OAIHttpRequestWorker *worker);
    void deleteMembersCustomBoardBackgroundsByIdMemberByIdBoardBackgroundCallback(OAIHttpRequestWorker *worker);
    void deleteMembersCustomStickersByIdMemberByIdCustomStickerCallback(OAIHttpRequestWorker *worker);
    void deleteMembersSavedSearchesByIdMemberByIdSavedSearchCallback(OAIHttpRequestWorker *worker);
    void getMembersActionsByIdMemberCallback(OAIHttpRequestWorker *worker);
    void getMembersBoardBackgroundsByIdMemberCallback(OAIHttpRequestWorker *worker);
    void getMembersBoardBackgroundsByIdMemberByIdBoardBackgroundCallback(OAIHttpRequestWorker *worker);
    void getMembersBoardStarsByIdMemberCallback(OAIHttpRequestWorker *worker);
    void getMembersBoardStarsByIdMemberByIdBoardStarCallback(OAIHttpRequestWorker *worker);
    void getMembersBoardsByIdMemberCallback(OAIHttpRequestWorker *worker);
    void getMembersBoardsByIdMemberByFilterCallback(OAIHttpRequestWorker *worker);
    void getMembersBoardsInvitedByIdMemberCallback(OAIHttpRequestWorker *worker);
    void getMembersBoardsInvitedByIdMemberByFieldCallback(OAIHttpRequestWorker *worker);
    void getMembersByIdMemberCallback(OAIHttpRequestWorker *worker);
    void getMembersByIdMemberByFieldCallback(OAIHttpRequestWorker *worker);
    void getMembersCardsByIdMemberCallback(OAIHttpRequestWorker *worker);
    void getMembersCardsByIdMemberByFilterCallback(OAIHttpRequestWorker *worker);
    void getMembersCustomBoardBackgroundsByIdMemberCallback(OAIHttpRequestWorker *worker);
    void getMembersCustomBoardBackgroundsByIdMemberByIdBoardBackgroundCallback(OAIHttpRequestWorker *worker);
    void getMembersCustomEmojiByIdMemberCallback(OAIHttpRequestWorker *worker);
    void getMembersCustomEmojiByIdMemberByIdCustomEmojiCallback(OAIHttpRequestWorker *worker);
    void getMembersCustomStickersByIdMemberCallback(OAIHttpRequestWorker *worker);
    void getMembersCustomStickersByIdMemberByIdCustomStickerCallback(OAIHttpRequestWorker *worker);
    void getMembersDeltasByIdMemberCallback(OAIHttpRequestWorker *worker);
    void getMembersNotificationsByIdMemberCallback(OAIHttpRequestWorker *worker);
    void getMembersNotificationsByIdMemberByFilterCallback(OAIHttpRequestWorker *worker);
    void getMembersOrganizationsByIdMemberCallback(OAIHttpRequestWorker *worker);
    void getMembersOrganizationsByIdMemberByFilterCallback(OAIHttpRequestWorker *worker);
    void getMembersOrganizationsInvitedByIdMemberCallback(OAIHttpRequestWorker *worker);
    void getMembersOrganizationsInvitedByIdMemberByFieldCallback(OAIHttpRequestWorker *worker);
    void getMembersSavedSearchesByIdMemberCallback(OAIHttpRequestWorker *worker);
    void getMembersSavedSearchesByIdMemberByIdSavedSearchCallback(OAIHttpRequestWorker *worker);
    void getMembersTokensByIdMemberCallback(OAIHttpRequestWorker *worker);
    void updateMembersAvatarSourceByIdMemberCallback(OAIHttpRequestWorker *worker);
    void updateMembersBioByIdMemberCallback(OAIHttpRequestWorker *worker);
    void updateMembersBoardBackgroundsByIdMemberByIdBoardBackgroundCallback(OAIHttpRequestWorker *worker);
    void updateMembersBoardStarsByIdMemberByIdBoardStarCallback(OAIHttpRequestWorker *worker);
    void updateMembersBoardStarsIdBoardByIdMemberByIdBoardStarCallback(OAIHttpRequestWorker *worker);
    void updateMembersBoardStarsPosByIdMemberByIdBoardStarCallback(OAIHttpRequestWorker *worker);
    void updateMembersByIdMemberCallback(OAIHttpRequestWorker *worker);
    void updateMembersCustomBoardBackgroundsByIdMemberByIdBoardBackgroundCallback(OAIHttpRequestWorker *worker);
    void updateMembersFullNameByIdMemberCallback(OAIHttpRequestWorker *worker);
    void updateMembersInitialsByIdMemberCallback(OAIHttpRequestWorker *worker);
    void updateMembersPrefsColorBlindByIdMemberCallback(OAIHttpRequestWorker *worker);
    void updateMembersPrefsLocaleByIdMemberCallback(OAIHttpRequestWorker *worker);
    void updateMembersPrefsMinutesBetweenSummariesByIdMemberCallback(OAIHttpRequestWorker *worker);
    void updateMembersSavedSearchesByIdMemberByIdSavedSearchCallback(OAIHttpRequestWorker *worker);
    void updateMembersSavedSearchesNameByIdMemberByIdSavedSearchCallback(OAIHttpRequestWorker *worker);
    void updateMembersSavedSearchesPosByIdMemberByIdSavedSearchCallback(OAIHttpRequestWorker *worker);
    void updateMembersSavedSearchesQueryByIdMemberByIdSavedSearchCallback(OAIHttpRequestWorker *worker);
    void updateMembersUsernameByIdMemberCallback(OAIHttpRequestWorker *worker);

Q_SIGNALS:

    void addMembersAvatarByIdMemberSignal();
    void addMembersBoardBackgroundsByIdMemberSignal();
    void addMembersBoardStarsByIdMemberSignal();
    void addMembersCustomBoardBackgroundsByIdMemberSignal();
    void addMembersCustomEmojiByIdMemberSignal();
    void addMembersCustomStickersByIdMemberSignal();
    void addMembersOneTimeMessagesDismissedByIdMemberSignal();
    void addMembersSavedSearchesByIdMemberSignal();
    void deleteMembersBoardBackgroundsByIdMemberByIdBoardBackgroundSignal();
    void deleteMembersBoardStarsByIdMemberByIdBoardStarSignal();
    void deleteMembersCustomBoardBackgroundsByIdMemberByIdBoardBackgroundSignal();
    void deleteMembersCustomStickersByIdMemberByIdCustomStickerSignal();
    void deleteMembersSavedSearchesByIdMemberByIdSavedSearchSignal();
    void getMembersActionsByIdMemberSignal();
    void getMembersBoardBackgroundsByIdMemberSignal();
    void getMembersBoardBackgroundsByIdMemberByIdBoardBackgroundSignal();
    void getMembersBoardStarsByIdMemberSignal();
    void getMembersBoardStarsByIdMemberByIdBoardStarSignal();
    void getMembersBoardsByIdMemberSignal();
    void getMembersBoardsByIdMemberByFilterSignal();
    void getMembersBoardsInvitedByIdMemberSignal();
    void getMembersBoardsInvitedByIdMemberByFieldSignal();
    void getMembersByIdMemberSignal();
    void getMembersByIdMemberByFieldSignal();
    void getMembersCardsByIdMemberSignal();
    void getMembersCardsByIdMemberByFilterSignal();
    void getMembersCustomBoardBackgroundsByIdMemberSignal();
    void getMembersCustomBoardBackgroundsByIdMemberByIdBoardBackgroundSignal();
    void getMembersCustomEmojiByIdMemberSignal();
    void getMembersCustomEmojiByIdMemberByIdCustomEmojiSignal();
    void getMembersCustomStickersByIdMemberSignal();
    void getMembersCustomStickersByIdMemberByIdCustomStickerSignal();
    void getMembersDeltasByIdMemberSignal();
    void getMembersNotificationsByIdMemberSignal();
    void getMembersNotificationsByIdMemberByFilterSignal();
    void getMembersOrganizationsByIdMemberSignal();
    void getMembersOrganizationsByIdMemberByFilterSignal();
    void getMembersOrganizationsInvitedByIdMemberSignal();
    void getMembersOrganizationsInvitedByIdMemberByFieldSignal();
    void getMembersSavedSearchesByIdMemberSignal();
    void getMembersSavedSearchesByIdMemberByIdSavedSearchSignal();
    void getMembersTokensByIdMemberSignal();
    void updateMembersAvatarSourceByIdMemberSignal();
    void updateMembersBioByIdMemberSignal();
    void updateMembersBoardBackgroundsByIdMemberByIdBoardBackgroundSignal();
    void updateMembersBoardStarsByIdMemberByIdBoardStarSignal();
    void updateMembersBoardStarsIdBoardByIdMemberByIdBoardStarSignal();
    void updateMembersBoardStarsPosByIdMemberByIdBoardStarSignal();
    void updateMembersByIdMemberSignal();
    void updateMembersCustomBoardBackgroundsByIdMemberByIdBoardBackgroundSignal();
    void updateMembersFullNameByIdMemberSignal();
    void updateMembersInitialsByIdMemberSignal();
    void updateMembersPrefsColorBlindByIdMemberSignal();
    void updateMembersPrefsLocaleByIdMemberSignal();
    void updateMembersPrefsMinutesBetweenSummariesByIdMemberSignal();
    void updateMembersSavedSearchesByIdMemberByIdSavedSearchSignal();
    void updateMembersSavedSearchesNameByIdMemberByIdSavedSearchSignal();
    void updateMembersSavedSearchesPosByIdMemberByIdSavedSearchSignal();
    void updateMembersSavedSearchesQueryByIdMemberByIdSavedSearchSignal();
    void updateMembersUsernameByIdMemberSignal();


    void addMembersAvatarByIdMemberSignalFull(OAIHttpRequestWorker *worker);
    void addMembersBoardBackgroundsByIdMemberSignalFull(OAIHttpRequestWorker *worker);
    void addMembersBoardStarsByIdMemberSignalFull(OAIHttpRequestWorker *worker);
    void addMembersCustomBoardBackgroundsByIdMemberSignalFull(OAIHttpRequestWorker *worker);
    void addMembersCustomEmojiByIdMemberSignalFull(OAIHttpRequestWorker *worker);
    void addMembersCustomStickersByIdMemberSignalFull(OAIHttpRequestWorker *worker);
    void addMembersOneTimeMessagesDismissedByIdMemberSignalFull(OAIHttpRequestWorker *worker);
    void addMembersSavedSearchesByIdMemberSignalFull(OAIHttpRequestWorker *worker);
    void deleteMembersBoardBackgroundsByIdMemberByIdBoardBackgroundSignalFull(OAIHttpRequestWorker *worker);
    void deleteMembersBoardStarsByIdMemberByIdBoardStarSignalFull(OAIHttpRequestWorker *worker);
    void deleteMembersCustomBoardBackgroundsByIdMemberByIdBoardBackgroundSignalFull(OAIHttpRequestWorker *worker);
    void deleteMembersCustomStickersByIdMemberByIdCustomStickerSignalFull(OAIHttpRequestWorker *worker);
    void deleteMembersSavedSearchesByIdMemberByIdSavedSearchSignalFull(OAIHttpRequestWorker *worker);
    void getMembersActionsByIdMemberSignalFull(OAIHttpRequestWorker *worker);
    void getMembersBoardBackgroundsByIdMemberSignalFull(OAIHttpRequestWorker *worker);
    void getMembersBoardBackgroundsByIdMemberByIdBoardBackgroundSignalFull(OAIHttpRequestWorker *worker);
    void getMembersBoardStarsByIdMemberSignalFull(OAIHttpRequestWorker *worker);
    void getMembersBoardStarsByIdMemberByIdBoardStarSignalFull(OAIHttpRequestWorker *worker);
    void getMembersBoardsByIdMemberSignalFull(OAIHttpRequestWorker *worker);
    void getMembersBoardsByIdMemberByFilterSignalFull(OAIHttpRequestWorker *worker);
    void getMembersBoardsInvitedByIdMemberSignalFull(OAIHttpRequestWorker *worker);
    void getMembersBoardsInvitedByIdMemberByFieldSignalFull(OAIHttpRequestWorker *worker);
    void getMembersByIdMemberSignalFull(OAIHttpRequestWorker *worker);
    void getMembersByIdMemberByFieldSignalFull(OAIHttpRequestWorker *worker);
    void getMembersCardsByIdMemberSignalFull(OAIHttpRequestWorker *worker);
    void getMembersCardsByIdMemberByFilterSignalFull(OAIHttpRequestWorker *worker);
    void getMembersCustomBoardBackgroundsByIdMemberSignalFull(OAIHttpRequestWorker *worker);
    void getMembersCustomBoardBackgroundsByIdMemberByIdBoardBackgroundSignalFull(OAIHttpRequestWorker *worker);
    void getMembersCustomEmojiByIdMemberSignalFull(OAIHttpRequestWorker *worker);
    void getMembersCustomEmojiByIdMemberByIdCustomEmojiSignalFull(OAIHttpRequestWorker *worker);
    void getMembersCustomStickersByIdMemberSignalFull(OAIHttpRequestWorker *worker);
    void getMembersCustomStickersByIdMemberByIdCustomStickerSignalFull(OAIHttpRequestWorker *worker);
    void getMembersDeltasByIdMemberSignalFull(OAIHttpRequestWorker *worker);
    void getMembersNotificationsByIdMemberSignalFull(OAIHttpRequestWorker *worker);
    void getMembersNotificationsByIdMemberByFilterSignalFull(OAIHttpRequestWorker *worker);
    void getMembersOrganizationsByIdMemberSignalFull(OAIHttpRequestWorker *worker);
    void getMembersOrganizationsByIdMemberByFilterSignalFull(OAIHttpRequestWorker *worker);
    void getMembersOrganizationsInvitedByIdMemberSignalFull(OAIHttpRequestWorker *worker);
    void getMembersOrganizationsInvitedByIdMemberByFieldSignalFull(OAIHttpRequestWorker *worker);
    void getMembersSavedSearchesByIdMemberSignalFull(OAIHttpRequestWorker *worker);
    void getMembersSavedSearchesByIdMemberByIdSavedSearchSignalFull(OAIHttpRequestWorker *worker);
    void getMembersTokensByIdMemberSignalFull(OAIHttpRequestWorker *worker);
    void updateMembersAvatarSourceByIdMemberSignalFull(OAIHttpRequestWorker *worker);
    void updateMembersBioByIdMemberSignalFull(OAIHttpRequestWorker *worker);
    void updateMembersBoardBackgroundsByIdMemberByIdBoardBackgroundSignalFull(OAIHttpRequestWorker *worker);
    void updateMembersBoardStarsByIdMemberByIdBoardStarSignalFull(OAIHttpRequestWorker *worker);
    void updateMembersBoardStarsIdBoardByIdMemberByIdBoardStarSignalFull(OAIHttpRequestWorker *worker);
    void updateMembersBoardStarsPosByIdMemberByIdBoardStarSignalFull(OAIHttpRequestWorker *worker);
    void updateMembersByIdMemberSignalFull(OAIHttpRequestWorker *worker);
    void updateMembersCustomBoardBackgroundsByIdMemberByIdBoardBackgroundSignalFull(OAIHttpRequestWorker *worker);
    void updateMembersFullNameByIdMemberSignalFull(OAIHttpRequestWorker *worker);
    void updateMembersInitialsByIdMemberSignalFull(OAIHttpRequestWorker *worker);
    void updateMembersPrefsColorBlindByIdMemberSignalFull(OAIHttpRequestWorker *worker);
    void updateMembersPrefsLocaleByIdMemberSignalFull(OAIHttpRequestWorker *worker);
    void updateMembersPrefsMinutesBetweenSummariesByIdMemberSignalFull(OAIHttpRequestWorker *worker);
    void updateMembersSavedSearchesByIdMemberByIdSavedSearchSignalFull(OAIHttpRequestWorker *worker);
    void updateMembersSavedSearchesNameByIdMemberByIdSavedSearchSignalFull(OAIHttpRequestWorker *worker);
    void updateMembersSavedSearchesPosByIdMemberByIdSavedSearchSignalFull(OAIHttpRequestWorker *worker);
    void updateMembersSavedSearchesQueryByIdMemberByIdSavedSearchSignalFull(OAIHttpRequestWorker *worker);
    void updateMembersUsernameByIdMemberSignalFull(OAIHttpRequestWorker *worker);

    Q_DECL_DEPRECATED_X("Use addMembersAvatarByIdMemberSignalError() instead")
    void addMembersAvatarByIdMemberSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void addMembersAvatarByIdMemberSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use addMembersBoardBackgroundsByIdMemberSignalError() instead")
    void addMembersBoardBackgroundsByIdMemberSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void addMembersBoardBackgroundsByIdMemberSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use addMembersBoardStarsByIdMemberSignalError() instead")
    void addMembersBoardStarsByIdMemberSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void addMembersBoardStarsByIdMemberSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use addMembersCustomBoardBackgroundsByIdMemberSignalError() instead")
    void addMembersCustomBoardBackgroundsByIdMemberSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void addMembersCustomBoardBackgroundsByIdMemberSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use addMembersCustomEmojiByIdMemberSignalError() instead")
    void addMembersCustomEmojiByIdMemberSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void addMembersCustomEmojiByIdMemberSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use addMembersCustomStickersByIdMemberSignalError() instead")
    void addMembersCustomStickersByIdMemberSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void addMembersCustomStickersByIdMemberSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use addMembersOneTimeMessagesDismissedByIdMemberSignalError() instead")
    void addMembersOneTimeMessagesDismissedByIdMemberSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void addMembersOneTimeMessagesDismissedByIdMemberSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use addMembersSavedSearchesByIdMemberSignalError() instead")
    void addMembersSavedSearchesByIdMemberSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void addMembersSavedSearchesByIdMemberSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteMembersBoardBackgroundsByIdMemberByIdBoardBackgroundSignalError() instead")
    void deleteMembersBoardBackgroundsByIdMemberByIdBoardBackgroundSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void deleteMembersBoardBackgroundsByIdMemberByIdBoardBackgroundSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteMembersBoardStarsByIdMemberByIdBoardStarSignalError() instead")
    void deleteMembersBoardStarsByIdMemberByIdBoardStarSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void deleteMembersBoardStarsByIdMemberByIdBoardStarSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteMembersCustomBoardBackgroundsByIdMemberByIdBoardBackgroundSignalError() instead")
    void deleteMembersCustomBoardBackgroundsByIdMemberByIdBoardBackgroundSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void deleteMembersCustomBoardBackgroundsByIdMemberByIdBoardBackgroundSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteMembersCustomStickersByIdMemberByIdCustomStickerSignalError() instead")
    void deleteMembersCustomStickersByIdMemberByIdCustomStickerSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void deleteMembersCustomStickersByIdMemberByIdCustomStickerSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteMembersSavedSearchesByIdMemberByIdSavedSearchSignalError() instead")
    void deleteMembersSavedSearchesByIdMemberByIdSavedSearchSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void deleteMembersSavedSearchesByIdMemberByIdSavedSearchSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getMembersActionsByIdMemberSignalError() instead")
    void getMembersActionsByIdMemberSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void getMembersActionsByIdMemberSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getMembersBoardBackgroundsByIdMemberSignalError() instead")
    void getMembersBoardBackgroundsByIdMemberSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void getMembersBoardBackgroundsByIdMemberSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getMembersBoardBackgroundsByIdMemberByIdBoardBackgroundSignalError() instead")
    void getMembersBoardBackgroundsByIdMemberByIdBoardBackgroundSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void getMembersBoardBackgroundsByIdMemberByIdBoardBackgroundSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getMembersBoardStarsByIdMemberSignalError() instead")
    void getMembersBoardStarsByIdMemberSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void getMembersBoardStarsByIdMemberSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getMembersBoardStarsByIdMemberByIdBoardStarSignalError() instead")
    void getMembersBoardStarsByIdMemberByIdBoardStarSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void getMembersBoardStarsByIdMemberByIdBoardStarSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getMembersBoardsByIdMemberSignalError() instead")
    void getMembersBoardsByIdMemberSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void getMembersBoardsByIdMemberSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getMembersBoardsByIdMemberByFilterSignalError() instead")
    void getMembersBoardsByIdMemberByFilterSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void getMembersBoardsByIdMemberByFilterSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getMembersBoardsInvitedByIdMemberSignalError() instead")
    void getMembersBoardsInvitedByIdMemberSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void getMembersBoardsInvitedByIdMemberSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getMembersBoardsInvitedByIdMemberByFieldSignalError() instead")
    void getMembersBoardsInvitedByIdMemberByFieldSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void getMembersBoardsInvitedByIdMemberByFieldSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getMembersByIdMemberSignalError() instead")
    void getMembersByIdMemberSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void getMembersByIdMemberSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getMembersByIdMemberByFieldSignalError() instead")
    void getMembersByIdMemberByFieldSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void getMembersByIdMemberByFieldSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getMembersCardsByIdMemberSignalError() instead")
    void getMembersCardsByIdMemberSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void getMembersCardsByIdMemberSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getMembersCardsByIdMemberByFilterSignalError() instead")
    void getMembersCardsByIdMemberByFilterSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void getMembersCardsByIdMemberByFilterSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getMembersCustomBoardBackgroundsByIdMemberSignalError() instead")
    void getMembersCustomBoardBackgroundsByIdMemberSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void getMembersCustomBoardBackgroundsByIdMemberSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getMembersCustomBoardBackgroundsByIdMemberByIdBoardBackgroundSignalError() instead")
    void getMembersCustomBoardBackgroundsByIdMemberByIdBoardBackgroundSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void getMembersCustomBoardBackgroundsByIdMemberByIdBoardBackgroundSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getMembersCustomEmojiByIdMemberSignalError() instead")
    void getMembersCustomEmojiByIdMemberSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void getMembersCustomEmojiByIdMemberSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getMembersCustomEmojiByIdMemberByIdCustomEmojiSignalError() instead")
    void getMembersCustomEmojiByIdMemberByIdCustomEmojiSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void getMembersCustomEmojiByIdMemberByIdCustomEmojiSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getMembersCustomStickersByIdMemberSignalError() instead")
    void getMembersCustomStickersByIdMemberSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void getMembersCustomStickersByIdMemberSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getMembersCustomStickersByIdMemberByIdCustomStickerSignalError() instead")
    void getMembersCustomStickersByIdMemberByIdCustomStickerSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void getMembersCustomStickersByIdMemberByIdCustomStickerSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getMembersDeltasByIdMemberSignalError() instead")
    void getMembersDeltasByIdMemberSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void getMembersDeltasByIdMemberSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getMembersNotificationsByIdMemberSignalError() instead")
    void getMembersNotificationsByIdMemberSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void getMembersNotificationsByIdMemberSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getMembersNotificationsByIdMemberByFilterSignalError() instead")
    void getMembersNotificationsByIdMemberByFilterSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void getMembersNotificationsByIdMemberByFilterSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getMembersOrganizationsByIdMemberSignalError() instead")
    void getMembersOrganizationsByIdMemberSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void getMembersOrganizationsByIdMemberSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getMembersOrganizationsByIdMemberByFilterSignalError() instead")
    void getMembersOrganizationsByIdMemberByFilterSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void getMembersOrganizationsByIdMemberByFilterSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getMembersOrganizationsInvitedByIdMemberSignalError() instead")
    void getMembersOrganizationsInvitedByIdMemberSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void getMembersOrganizationsInvitedByIdMemberSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getMembersOrganizationsInvitedByIdMemberByFieldSignalError() instead")
    void getMembersOrganizationsInvitedByIdMemberByFieldSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void getMembersOrganizationsInvitedByIdMemberByFieldSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getMembersSavedSearchesByIdMemberSignalError() instead")
    void getMembersSavedSearchesByIdMemberSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void getMembersSavedSearchesByIdMemberSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getMembersSavedSearchesByIdMemberByIdSavedSearchSignalError() instead")
    void getMembersSavedSearchesByIdMemberByIdSavedSearchSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void getMembersSavedSearchesByIdMemberByIdSavedSearchSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getMembersTokensByIdMemberSignalError() instead")
    void getMembersTokensByIdMemberSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void getMembersTokensByIdMemberSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateMembersAvatarSourceByIdMemberSignalError() instead")
    void updateMembersAvatarSourceByIdMemberSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void updateMembersAvatarSourceByIdMemberSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateMembersBioByIdMemberSignalError() instead")
    void updateMembersBioByIdMemberSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void updateMembersBioByIdMemberSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateMembersBoardBackgroundsByIdMemberByIdBoardBackgroundSignalError() instead")
    void updateMembersBoardBackgroundsByIdMemberByIdBoardBackgroundSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void updateMembersBoardBackgroundsByIdMemberByIdBoardBackgroundSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateMembersBoardStarsByIdMemberByIdBoardStarSignalError() instead")
    void updateMembersBoardStarsByIdMemberByIdBoardStarSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void updateMembersBoardStarsByIdMemberByIdBoardStarSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateMembersBoardStarsIdBoardByIdMemberByIdBoardStarSignalError() instead")
    void updateMembersBoardStarsIdBoardByIdMemberByIdBoardStarSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void updateMembersBoardStarsIdBoardByIdMemberByIdBoardStarSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateMembersBoardStarsPosByIdMemberByIdBoardStarSignalError() instead")
    void updateMembersBoardStarsPosByIdMemberByIdBoardStarSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void updateMembersBoardStarsPosByIdMemberByIdBoardStarSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateMembersByIdMemberSignalError() instead")
    void updateMembersByIdMemberSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void updateMembersByIdMemberSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateMembersCustomBoardBackgroundsByIdMemberByIdBoardBackgroundSignalError() instead")
    void updateMembersCustomBoardBackgroundsByIdMemberByIdBoardBackgroundSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void updateMembersCustomBoardBackgroundsByIdMemberByIdBoardBackgroundSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateMembersFullNameByIdMemberSignalError() instead")
    void updateMembersFullNameByIdMemberSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void updateMembersFullNameByIdMemberSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateMembersInitialsByIdMemberSignalError() instead")
    void updateMembersInitialsByIdMemberSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void updateMembersInitialsByIdMemberSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateMembersPrefsColorBlindByIdMemberSignalError() instead")
    void updateMembersPrefsColorBlindByIdMemberSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void updateMembersPrefsColorBlindByIdMemberSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateMembersPrefsLocaleByIdMemberSignalError() instead")
    void updateMembersPrefsLocaleByIdMemberSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void updateMembersPrefsLocaleByIdMemberSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateMembersPrefsMinutesBetweenSummariesByIdMemberSignalError() instead")
    void updateMembersPrefsMinutesBetweenSummariesByIdMemberSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void updateMembersPrefsMinutesBetweenSummariesByIdMemberSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateMembersSavedSearchesByIdMemberByIdSavedSearchSignalError() instead")
    void updateMembersSavedSearchesByIdMemberByIdSavedSearchSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void updateMembersSavedSearchesByIdMemberByIdSavedSearchSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateMembersSavedSearchesNameByIdMemberByIdSavedSearchSignalError() instead")
    void updateMembersSavedSearchesNameByIdMemberByIdSavedSearchSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void updateMembersSavedSearchesNameByIdMemberByIdSavedSearchSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateMembersSavedSearchesPosByIdMemberByIdSavedSearchSignalError() instead")
    void updateMembersSavedSearchesPosByIdMemberByIdSavedSearchSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void updateMembersSavedSearchesPosByIdMemberByIdSavedSearchSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateMembersSavedSearchesQueryByIdMemberByIdSavedSearchSignalError() instead")
    void updateMembersSavedSearchesQueryByIdMemberByIdSavedSearchSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void updateMembersSavedSearchesQueryByIdMemberByIdSavedSearchSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateMembersUsernameByIdMemberSignalError() instead")
    void updateMembersUsernameByIdMemberSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void updateMembersUsernameByIdMemberSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);

    Q_DECL_DEPRECATED_X("Use addMembersAvatarByIdMemberSignalErrorFull() instead")
    void addMembersAvatarByIdMemberSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void addMembersAvatarByIdMemberSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use addMembersBoardBackgroundsByIdMemberSignalErrorFull() instead")
    void addMembersBoardBackgroundsByIdMemberSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void addMembersBoardBackgroundsByIdMemberSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use addMembersBoardStarsByIdMemberSignalErrorFull() instead")
    void addMembersBoardStarsByIdMemberSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void addMembersBoardStarsByIdMemberSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use addMembersCustomBoardBackgroundsByIdMemberSignalErrorFull() instead")
    void addMembersCustomBoardBackgroundsByIdMemberSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void addMembersCustomBoardBackgroundsByIdMemberSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use addMembersCustomEmojiByIdMemberSignalErrorFull() instead")
    void addMembersCustomEmojiByIdMemberSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void addMembersCustomEmojiByIdMemberSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use addMembersCustomStickersByIdMemberSignalErrorFull() instead")
    void addMembersCustomStickersByIdMemberSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void addMembersCustomStickersByIdMemberSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use addMembersOneTimeMessagesDismissedByIdMemberSignalErrorFull() instead")
    void addMembersOneTimeMessagesDismissedByIdMemberSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void addMembersOneTimeMessagesDismissedByIdMemberSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use addMembersSavedSearchesByIdMemberSignalErrorFull() instead")
    void addMembersSavedSearchesByIdMemberSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void addMembersSavedSearchesByIdMemberSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteMembersBoardBackgroundsByIdMemberByIdBoardBackgroundSignalErrorFull() instead")
    void deleteMembersBoardBackgroundsByIdMemberByIdBoardBackgroundSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void deleteMembersBoardBackgroundsByIdMemberByIdBoardBackgroundSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteMembersBoardStarsByIdMemberByIdBoardStarSignalErrorFull() instead")
    void deleteMembersBoardStarsByIdMemberByIdBoardStarSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void deleteMembersBoardStarsByIdMemberByIdBoardStarSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteMembersCustomBoardBackgroundsByIdMemberByIdBoardBackgroundSignalErrorFull() instead")
    void deleteMembersCustomBoardBackgroundsByIdMemberByIdBoardBackgroundSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void deleteMembersCustomBoardBackgroundsByIdMemberByIdBoardBackgroundSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteMembersCustomStickersByIdMemberByIdCustomStickerSignalErrorFull() instead")
    void deleteMembersCustomStickersByIdMemberByIdCustomStickerSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void deleteMembersCustomStickersByIdMemberByIdCustomStickerSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteMembersSavedSearchesByIdMemberByIdSavedSearchSignalErrorFull() instead")
    void deleteMembersSavedSearchesByIdMemberByIdSavedSearchSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void deleteMembersSavedSearchesByIdMemberByIdSavedSearchSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getMembersActionsByIdMemberSignalErrorFull() instead")
    void getMembersActionsByIdMemberSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getMembersActionsByIdMemberSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getMembersBoardBackgroundsByIdMemberSignalErrorFull() instead")
    void getMembersBoardBackgroundsByIdMemberSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getMembersBoardBackgroundsByIdMemberSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getMembersBoardBackgroundsByIdMemberByIdBoardBackgroundSignalErrorFull() instead")
    void getMembersBoardBackgroundsByIdMemberByIdBoardBackgroundSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getMembersBoardBackgroundsByIdMemberByIdBoardBackgroundSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getMembersBoardStarsByIdMemberSignalErrorFull() instead")
    void getMembersBoardStarsByIdMemberSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getMembersBoardStarsByIdMemberSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getMembersBoardStarsByIdMemberByIdBoardStarSignalErrorFull() instead")
    void getMembersBoardStarsByIdMemberByIdBoardStarSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getMembersBoardStarsByIdMemberByIdBoardStarSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getMembersBoardsByIdMemberSignalErrorFull() instead")
    void getMembersBoardsByIdMemberSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getMembersBoardsByIdMemberSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getMembersBoardsByIdMemberByFilterSignalErrorFull() instead")
    void getMembersBoardsByIdMemberByFilterSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getMembersBoardsByIdMemberByFilterSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getMembersBoardsInvitedByIdMemberSignalErrorFull() instead")
    void getMembersBoardsInvitedByIdMemberSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getMembersBoardsInvitedByIdMemberSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getMembersBoardsInvitedByIdMemberByFieldSignalErrorFull() instead")
    void getMembersBoardsInvitedByIdMemberByFieldSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getMembersBoardsInvitedByIdMemberByFieldSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getMembersByIdMemberSignalErrorFull() instead")
    void getMembersByIdMemberSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getMembersByIdMemberSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getMembersByIdMemberByFieldSignalErrorFull() instead")
    void getMembersByIdMemberByFieldSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getMembersByIdMemberByFieldSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getMembersCardsByIdMemberSignalErrorFull() instead")
    void getMembersCardsByIdMemberSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getMembersCardsByIdMemberSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getMembersCardsByIdMemberByFilterSignalErrorFull() instead")
    void getMembersCardsByIdMemberByFilterSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getMembersCardsByIdMemberByFilterSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getMembersCustomBoardBackgroundsByIdMemberSignalErrorFull() instead")
    void getMembersCustomBoardBackgroundsByIdMemberSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getMembersCustomBoardBackgroundsByIdMemberSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getMembersCustomBoardBackgroundsByIdMemberByIdBoardBackgroundSignalErrorFull() instead")
    void getMembersCustomBoardBackgroundsByIdMemberByIdBoardBackgroundSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getMembersCustomBoardBackgroundsByIdMemberByIdBoardBackgroundSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getMembersCustomEmojiByIdMemberSignalErrorFull() instead")
    void getMembersCustomEmojiByIdMemberSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getMembersCustomEmojiByIdMemberSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getMembersCustomEmojiByIdMemberByIdCustomEmojiSignalErrorFull() instead")
    void getMembersCustomEmojiByIdMemberByIdCustomEmojiSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getMembersCustomEmojiByIdMemberByIdCustomEmojiSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getMembersCustomStickersByIdMemberSignalErrorFull() instead")
    void getMembersCustomStickersByIdMemberSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getMembersCustomStickersByIdMemberSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getMembersCustomStickersByIdMemberByIdCustomStickerSignalErrorFull() instead")
    void getMembersCustomStickersByIdMemberByIdCustomStickerSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getMembersCustomStickersByIdMemberByIdCustomStickerSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getMembersDeltasByIdMemberSignalErrorFull() instead")
    void getMembersDeltasByIdMemberSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getMembersDeltasByIdMemberSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getMembersNotificationsByIdMemberSignalErrorFull() instead")
    void getMembersNotificationsByIdMemberSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getMembersNotificationsByIdMemberSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getMembersNotificationsByIdMemberByFilterSignalErrorFull() instead")
    void getMembersNotificationsByIdMemberByFilterSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getMembersNotificationsByIdMemberByFilterSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getMembersOrganizationsByIdMemberSignalErrorFull() instead")
    void getMembersOrganizationsByIdMemberSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getMembersOrganizationsByIdMemberSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getMembersOrganizationsByIdMemberByFilterSignalErrorFull() instead")
    void getMembersOrganizationsByIdMemberByFilterSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getMembersOrganizationsByIdMemberByFilterSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getMembersOrganizationsInvitedByIdMemberSignalErrorFull() instead")
    void getMembersOrganizationsInvitedByIdMemberSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getMembersOrganizationsInvitedByIdMemberSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getMembersOrganizationsInvitedByIdMemberByFieldSignalErrorFull() instead")
    void getMembersOrganizationsInvitedByIdMemberByFieldSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getMembersOrganizationsInvitedByIdMemberByFieldSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getMembersSavedSearchesByIdMemberSignalErrorFull() instead")
    void getMembersSavedSearchesByIdMemberSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getMembersSavedSearchesByIdMemberSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getMembersSavedSearchesByIdMemberByIdSavedSearchSignalErrorFull() instead")
    void getMembersSavedSearchesByIdMemberByIdSavedSearchSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getMembersSavedSearchesByIdMemberByIdSavedSearchSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getMembersTokensByIdMemberSignalErrorFull() instead")
    void getMembersTokensByIdMemberSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getMembersTokensByIdMemberSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateMembersAvatarSourceByIdMemberSignalErrorFull() instead")
    void updateMembersAvatarSourceByIdMemberSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void updateMembersAvatarSourceByIdMemberSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateMembersBioByIdMemberSignalErrorFull() instead")
    void updateMembersBioByIdMemberSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void updateMembersBioByIdMemberSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateMembersBoardBackgroundsByIdMemberByIdBoardBackgroundSignalErrorFull() instead")
    void updateMembersBoardBackgroundsByIdMemberByIdBoardBackgroundSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void updateMembersBoardBackgroundsByIdMemberByIdBoardBackgroundSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateMembersBoardStarsByIdMemberByIdBoardStarSignalErrorFull() instead")
    void updateMembersBoardStarsByIdMemberByIdBoardStarSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void updateMembersBoardStarsByIdMemberByIdBoardStarSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateMembersBoardStarsIdBoardByIdMemberByIdBoardStarSignalErrorFull() instead")
    void updateMembersBoardStarsIdBoardByIdMemberByIdBoardStarSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void updateMembersBoardStarsIdBoardByIdMemberByIdBoardStarSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateMembersBoardStarsPosByIdMemberByIdBoardStarSignalErrorFull() instead")
    void updateMembersBoardStarsPosByIdMemberByIdBoardStarSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void updateMembersBoardStarsPosByIdMemberByIdBoardStarSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateMembersByIdMemberSignalErrorFull() instead")
    void updateMembersByIdMemberSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void updateMembersByIdMemberSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateMembersCustomBoardBackgroundsByIdMemberByIdBoardBackgroundSignalErrorFull() instead")
    void updateMembersCustomBoardBackgroundsByIdMemberByIdBoardBackgroundSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void updateMembersCustomBoardBackgroundsByIdMemberByIdBoardBackgroundSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateMembersFullNameByIdMemberSignalErrorFull() instead")
    void updateMembersFullNameByIdMemberSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void updateMembersFullNameByIdMemberSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateMembersInitialsByIdMemberSignalErrorFull() instead")
    void updateMembersInitialsByIdMemberSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void updateMembersInitialsByIdMemberSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateMembersPrefsColorBlindByIdMemberSignalErrorFull() instead")
    void updateMembersPrefsColorBlindByIdMemberSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void updateMembersPrefsColorBlindByIdMemberSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateMembersPrefsLocaleByIdMemberSignalErrorFull() instead")
    void updateMembersPrefsLocaleByIdMemberSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void updateMembersPrefsLocaleByIdMemberSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateMembersPrefsMinutesBetweenSummariesByIdMemberSignalErrorFull() instead")
    void updateMembersPrefsMinutesBetweenSummariesByIdMemberSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void updateMembersPrefsMinutesBetweenSummariesByIdMemberSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateMembersSavedSearchesByIdMemberByIdSavedSearchSignalErrorFull() instead")
    void updateMembersSavedSearchesByIdMemberByIdSavedSearchSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void updateMembersSavedSearchesByIdMemberByIdSavedSearchSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateMembersSavedSearchesNameByIdMemberByIdSavedSearchSignalErrorFull() instead")
    void updateMembersSavedSearchesNameByIdMemberByIdSavedSearchSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void updateMembersSavedSearchesNameByIdMemberByIdSavedSearchSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateMembersSavedSearchesPosByIdMemberByIdSavedSearchSignalErrorFull() instead")
    void updateMembersSavedSearchesPosByIdMemberByIdSavedSearchSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void updateMembersSavedSearchesPosByIdMemberByIdSavedSearchSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateMembersSavedSearchesQueryByIdMemberByIdSavedSearchSignalErrorFull() instead")
    void updateMembersSavedSearchesQueryByIdMemberByIdSavedSearchSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void updateMembersSavedSearchesQueryByIdMemberByIdSavedSearchSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateMembersUsernameByIdMemberSignalErrorFull() instead")
    void updateMembersUsernameByIdMemberSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void updateMembersUsernameByIdMemberSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);

    void abortRequestsSignal();
    void allPendingRequestsCompleted();

public Q_SLOTS:
    void tokenAvailable();
};

} // namespace OpenAPI
#endif
