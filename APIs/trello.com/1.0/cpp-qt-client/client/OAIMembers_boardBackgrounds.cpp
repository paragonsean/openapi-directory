/**
 * Trello
 * This document describes the REST API of Trello as published by Trello.com.  - <a href='https://trello.com/docs/index.html' target='_blank'>Official Documentation</a>  - <a href='https://trello.com/docs/api' target='_blank'>The HTML pages that were scraped in order to generate this specification.</a>
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMembers_boardBackgrounds.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMembers_boardBackgrounds::OAIMembers_boardBackgrounds(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMembers_boardBackgrounds::OAIMembers_boardBackgrounds() {
    this->initializeModel();
}

OAIMembers_boardBackgrounds::~OAIMembers_boardBackgrounds() {}

void OAIMembers_boardBackgrounds::initializeModel() {

    m_brightness_isSet = false;
    m_brightness_isValid = false;

    m_file_isSet = false;
    m_file_isValid = false;

    m_tile_isSet = false;
    m_tile_isValid = false;
}

void OAIMembers_boardBackgrounds::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIMembers_boardBackgrounds::fromJsonObject(QJsonObject json) {

    m_brightness_isValid = ::OpenAPI::fromJsonValue(m_brightness, json[QString("brightness")]);
    m_brightness_isSet = !json[QString("brightness")].isNull() && m_brightness_isValid;

    m_file_isValid = ::OpenAPI::fromJsonValue(m_file, json[QString("file")]);
    m_file_isSet = !json[QString("file")].isNull() && m_file_isValid;

    m_tile_isValid = ::OpenAPI::fromJsonValue(m_tile, json[QString("tile")]);
    m_tile_isSet = !json[QString("tile")].isNull() && m_tile_isValid;
}

QString OAIMembers_boardBackgrounds::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIMembers_boardBackgrounds::asJsonObject() const {
    QJsonObject obj;
    if (m_brightness_isSet) {
        obj.insert(QString("brightness"), ::OpenAPI::toJsonValue(m_brightness));
    }
    if (m_file_isSet) {
        obj.insert(QString("file"), ::OpenAPI::toJsonValue(m_file));
    }
    if (m_tile_isSet) {
        obj.insert(QString("tile"), ::OpenAPI::toJsonValue(m_tile));
    }
    return obj;
}

QString OAIMembers_boardBackgrounds::getBrightness() const {
    return m_brightness;
}
void OAIMembers_boardBackgrounds::setBrightness(const QString &brightness) {
    m_brightness = brightness;
    m_brightness_isSet = true;
}

bool OAIMembers_boardBackgrounds::is_brightness_Set() const{
    return m_brightness_isSet;
}

bool OAIMembers_boardBackgrounds::is_brightness_Valid() const{
    return m_brightness_isValid;
}

QString OAIMembers_boardBackgrounds::getFile() const {
    return m_file;
}
void OAIMembers_boardBackgrounds::setFile(const QString &file) {
    m_file = file;
    m_file_isSet = true;
}

bool OAIMembers_boardBackgrounds::is_file_Set() const{
    return m_file_isSet;
}

bool OAIMembers_boardBackgrounds::is_file_Valid() const{
    return m_file_isValid;
}

QString OAIMembers_boardBackgrounds::getTile() const {
    return m_tile;
}
void OAIMembers_boardBackgrounds::setTile(const QString &tile) {
    m_tile = tile;
    m_tile_isSet = true;
}

bool OAIMembers_boardBackgrounds::is_tile_Set() const{
    return m_tile_isSet;
}

bool OAIMembers_boardBackgrounds::is_tile_Valid() const{
    return m_tile_isValid;
}

bool OAIMembers_boardBackgrounds::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_brightness_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_file_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tile_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIMembers_boardBackgrounds::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
