/**
 * Trello
 * This document describes the REST API of Trello as published by Trello.com.  - <a href='https://trello.com/docs/index.html' target='_blank'>Official Documentation</a>  - <a href='https://trello.com/docs/api' target='_blank'>The HTML pages that were scraped in order to generate this specification.</a>
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#ifndef OAI_OAIBoardApi_H
#define OAI_OAIBoardApi_H

#include "OAIHelpers.h"
#include "OAIHttpRequest.h"
#include "OAIServerConfiguration.h"
#include "OAIOauth.h"

#include "OAIBoards.h"
#include "OAIBoards_checklists.h"
#include "OAIBoards_closed.h"
#include "OAIBoards_desc.h"
#include "OAIBoards_idOrganization.h"
#include "OAIBoards_labels.h"
#include "OAIBoards_lists.h"
#include "OAIBoards_members.h"
#include "OAIBoards_memberships.h"
#include "OAIBoards_name.h"
#include "OAIBoards_powerUps.h"
#include "OAIBoards_subscribed.h"
#include "OAILabelNames_blue.h"
#include "OAILabelNames_green.h"
#include "OAILabelNames_orange.h"
#include "OAILabelNames_purple.h"
#include "OAILabelNames_red.h"
#include "OAILabelNames_yellow.h"
#include "OAIMyPrefs_emailPosition.h"
#include "OAIMyPrefs_idEmailList.h"
#include "OAIMyPrefs_showListGuide.h"
#include "OAIMyPrefs_showSidebar.h"
#include "OAIMyPrefs_showSidebarActivity.h"
#include "OAIMyPrefs_showSidebarBoardActions.h"
#include "OAIMyPrefs_showSidebarMembers.h"
#include "OAIPrefs_background.h"
#include "OAIPrefs_calendarFeedEnabled.h"
#include "OAIPrefs_cardAging.h"
#include "OAIPrefs_cardCovers.h"
#include "OAIPrefs_comments.h"
#include "OAIPrefs_invitations.h"
#include "OAIPrefs_permissionLevel.h"
#include "OAIPrefs_selfJoin.h"
#include "OAIPrefs_voting.h"
#include <QString>

#include <QObject>
#include <QByteArray>
#include <QStringList>
#include <QList>
#include <QNetworkAccessManager>

namespace OpenAPI {

class OAIBoardApi : public QObject {
    Q_OBJECT

public:
    OAIBoardApi(const int timeOut = 0);
    ~OAIBoardApi();

    void initializeServerConfigs();
    int setDefaultServerValue(int serverIndex,const QString &operation, const QString &variable,const QString &val);
    void setServerIndex(const QString &operation, int serverIndex);
    void setApiKey(const QString &apiKeyName, const QString &apiKey);
    void setBearerToken(const QString &token);
    void setUsername(const QString &username);
    void setPassword(const QString &password);
    void setTimeOut(const int timeOut);
    void setWorkingDirectory(const QString &path);
    void setNetworkAccessManager(QNetworkAccessManager* manager);
    int addServerConfiguration(const QString &operation, const QUrl &url, const QString &description = "", const QMap<QString, OAIServerVariable> &variables = QMap<QString, OAIServerVariable>());
    void setNewServerForAllOperations(const QUrl &url, const QString &description = "", const QMap<QString, OAIServerVariable> &variables =  QMap<QString, OAIServerVariable>());
    void setNewServer(const QString &operation, const QUrl &url, const QString &description = "", const QMap<QString, OAIServerVariable> &variables =  QMap<QString, OAIServerVariable>());
    void addHeaders(const QString &key, const QString &value);
    void enableRequestCompression();
    void enableResponseCompression();
    void abortRequests();
    QString getParamStylePrefix(const QString &style);
    QString getParamStyleSuffix(const QString &style);
    QString getParamStyleDelimiter(const QString &style, const QString &name, bool isExplode);

    /**
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  oai_boards OAIBoards [required]
    */
    virtual void addBoards(const QString &key, const QString &token, const OAIBoards &oai_boards);

    /**
    * @param[in]  id_board QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    */
    virtual void addBoardsCalendarKeyGenerateByIdBoard(const QString &id_board, const QString &key, const QString &token);

    /**
    * @param[in]  id_board QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  oai_boards_checklists OAIBoards_checklists [required]
    */
    virtual void addBoardsChecklistsByIdBoard(const QString &id_board, const QString &key, const QString &token, const OAIBoards_checklists &oai_boards_checklists);

    /**
    * @param[in]  id_board QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    */
    virtual void addBoardsEmailKeyGenerateByIdBoard(const QString &id_board, const QString &key, const QString &token);

    /**
    * @param[in]  id_board QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  oai_boards_labels OAIBoards_labels [required]
    */
    virtual void addBoardsLabelsByIdBoard(const QString &id_board, const QString &key, const QString &token, const OAIBoards_labels &oai_boards_labels);

    /**
    * @param[in]  id_board QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  oai_boards_lists OAIBoards_lists [required]
    */
    virtual void addBoardsListsByIdBoard(const QString &id_board, const QString &key, const QString &token, const OAIBoards_lists &oai_boards_lists);

    /**
    * @param[in]  id_board QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    */
    virtual void addBoardsMarkAsViewedByIdBoard(const QString &id_board, const QString &key, const QString &token);

    /**
    * @param[in]  id_board QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  oai_boards_power_ups OAIBoards_powerUps [required]
    */
    virtual void addBoardsPowerUpsByIdBoard(const QString &id_board, const QString &key, const QString &token, const OAIBoards_powerUps &oai_boards_power_ups);

    /**
    * @param[in]  id_board QString [required]
    * @param[in]  id_member QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    */
    virtual void deleteBoardsMembersByIdBoardByIdMember(const QString &id_board, const QString &id_member, const QString &key, const QString &token);

    /**
    * @param[in]  id_board QString [required]
    * @param[in]  power_up QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    */
    virtual void deleteBoardsPowerUpsByIdBoardByPowerUp(const QString &id_board, const QString &power_up, const QString &key, const QString &token);

    /**
    * @param[in]  id_board QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  entities QString [optional]
    * @param[in]  display QString [optional]
    * @param[in]  filter QString [optional]
    * @param[in]  fields QString [optional]
    * @param[in]  limit QString [optional]
    * @param[in]  format QString [optional]
    * @param[in]  since QString [optional]
    * @param[in]  before QString [optional]
    * @param[in]  page QString [optional]
    * @param[in]  id_models QString [optional]
    * @param[in]  member QString [optional]
    * @param[in]  member_fields QString [optional]
    * @param[in]  member_creator QString [optional]
    * @param[in]  member_creator_fields QString [optional]
    */
    virtual void getBoardsActionsByIdBoard(const QString &id_board, const QString &key, const QString &token, const ::OpenAPI::OptionalParam<QString> &entities = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &display = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &filter = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &fields = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &limit = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &format = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &since = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &before = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &page = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &id_models = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &member = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &member_fields = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &member_creator = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &member_creator_fields = ::OpenAPI::OptionalParam<QString>());

    /**
    * @param[in]  id_board QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  filter QString [optional]
    */
    virtual void getBoardsBoardStarsByIdBoard(const QString &id_board, const QString &key, const QString &token, const ::OpenAPI::OptionalParam<QString> &filter = ::OpenAPI::OptionalParam<QString>());

    /**
    * @param[in]  id_board QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  actions QString [optional]
    * @param[in]  actions_entities QString [optional]
    * @param[in]  actions_display QString [optional]
    * @param[in]  actions_format QString [optional]
    * @param[in]  actions_since QString [optional]
    * @param[in]  actions_limit QString [optional]
    * @param[in]  action_fields QString [optional]
    * @param[in]  action_member QString [optional]
    * @param[in]  action_member_fields QString [optional]
    * @param[in]  action_member_creator QString [optional]
    * @param[in]  action_member_creator_fields QString [optional]
    * @param[in]  cards QString [optional]
    * @param[in]  card_fields QString [optional]
    * @param[in]  card_attachments QString [optional]
    * @param[in]  card_attachment_fields QString [optional]
    * @param[in]  card_checklists QString [optional]
    * @param[in]  card_stickers QString [optional]
    * @param[in]  board_stars QString [optional]
    * @param[in]  labels QString [optional]
    * @param[in]  label_fields QString [optional]
    * @param[in]  labels_limit QString [optional]
    * @param[in]  lists QString [optional]
    * @param[in]  list_fields QString [optional]
    * @param[in]  memberships QString [optional]
    * @param[in]  memberships_member QString [optional]
    * @param[in]  memberships_member_fields QString [optional]
    * @param[in]  members QString [optional]
    * @param[in]  member_fields QString [optional]
    * @param[in]  members_invited QString [optional]
    * @param[in]  members_invited_fields QString [optional]
    * @param[in]  checklists QString [optional]
    * @param[in]  checklist_fields QString [optional]
    * @param[in]  organization QString [optional]
    * @param[in]  organization_fields QString [optional]
    * @param[in]  organization_memberships QString [optional]
    * @param[in]  my_prefs QString [optional]
    * @param[in]  fields QString [optional]
    */
    virtual void getBoardsByIdBoard(const QString &id_board, const QString &key, const QString &token, const ::OpenAPI::OptionalParam<QString> &actions = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &actions_entities = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &actions_display = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &actions_format = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &actions_since = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &actions_limit = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &action_fields = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &action_member = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &action_member_fields = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &action_member_creator = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &action_member_creator_fields = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &cards = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &card_fields = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &card_attachments = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &card_attachment_fields = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &card_checklists = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &card_stickers = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &board_stars = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &labels = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &label_fields = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &labels_limit = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &lists = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &list_fields = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &memberships = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &memberships_member = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &memberships_member_fields = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &members = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &member_fields = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &members_invited = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &members_invited_fields = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &checklists = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &checklist_fields = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &organization = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &organization_fields = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &organization_memberships = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &my_prefs = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &fields = ::OpenAPI::OptionalParam<QString>());

    /**
    * @param[in]  id_board QString [required]
    * @param[in]  field QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    */
    virtual void getBoardsByIdBoardByField(const QString &id_board, const QString &field, const QString &key, const QString &token);

    /**
    * @param[in]  id_board QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  actions QString [optional]
    * @param[in]  attachments QString [optional]
    * @param[in]  attachment_fields QString [optional]
    * @param[in]  stickers QString [optional]
    * @param[in]  members QString [optional]
    * @param[in]  member_fields QString [optional]
    * @param[in]  check_item_states QString [optional]
    * @param[in]  checklists QString [optional]
    * @param[in]  limit QString [optional]
    * @param[in]  since QString [optional]
    * @param[in]  before QString [optional]
    * @param[in]  filter QString [optional]
    * @param[in]  fields QString [optional]
    */
    virtual void getBoardsCardsByIdBoard(const QString &id_board, const QString &key, const QString &token, const ::OpenAPI::OptionalParam<QString> &actions = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &attachments = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &attachment_fields = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &stickers = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &members = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &member_fields = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &check_item_states = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &checklists = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &limit = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &since = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &before = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &filter = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &fields = ::OpenAPI::OptionalParam<QString>());

    /**
    * @param[in]  id_board QString [required]
    * @param[in]  filter QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    */
    virtual void getBoardsCardsByIdBoardByFilter(const QString &id_board, const QString &filter, const QString &key, const QString &token);

    /**
    * @param[in]  id_board QString [required]
    * @param[in]  id_card QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  attachments QString [optional]
    * @param[in]  attachment_fields QString [optional]
    * @param[in]  actions QString [optional]
    * @param[in]  actions_entities QString [optional]
    * @param[in]  actions_display QString [optional]
    * @param[in]  actions_limit QString [optional]
    * @param[in]  action_fields QString [optional]
    * @param[in]  action_member_creator_fields QString [optional]
    * @param[in]  members QString [optional]
    * @param[in]  member_fields QString [optional]
    * @param[in]  check_item_states QString [optional]
    * @param[in]  check_item_state_fields QString [optional]
    * @param[in]  labels QString [optional]
    * @param[in]  checklists QString [optional]
    * @param[in]  checklist_fields QString [optional]
    * @param[in]  fields QString [optional]
    */
    virtual void getBoardsCardsByIdBoardByIdCard(const QString &id_board, const QString &id_card, const QString &key, const QString &token, const ::OpenAPI::OptionalParam<QString> &attachments = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &attachment_fields = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &actions = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &actions_entities = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &actions_display = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &actions_limit = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &action_fields = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &action_member_creator_fields = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &members = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &member_fields = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &check_item_states = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &check_item_state_fields = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &labels = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &checklists = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &checklist_fields = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &fields = ::OpenAPI::OptionalParam<QString>());

    /**
    * @param[in]  id_board QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  cards QString [optional]
    * @param[in]  card_fields QString [optional]
    * @param[in]  check_items QString [optional]
    * @param[in]  check_item_fields QString [optional]
    * @param[in]  filter QString [optional]
    * @param[in]  fields QString [optional]
    */
    virtual void getBoardsChecklistsByIdBoard(const QString &id_board, const QString &key, const QString &token, const ::OpenAPI::OptionalParam<QString> &cards = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &card_fields = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &check_items = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &check_item_fields = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &filter = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &fields = ::OpenAPI::OptionalParam<QString>());

    /**
    * @param[in]  id_board QString [required]
    * @param[in]  tags QString [required]
    * @param[in]  ix_last_update QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    */
    virtual void getBoardsDeltasByIdBoard(const QString &id_board, const QString &tags, const QString &ix_last_update, const QString &key, const QString &token);

    /**
    * @param[in]  id_board QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  fields QString [optional]
    * @param[in]  limit QString [optional]
    */
    virtual void getBoardsLabelsByIdBoard(const QString &id_board, const QString &key, const QString &token, const ::OpenAPI::OptionalParam<QString> &fields = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &limit = ::OpenAPI::OptionalParam<QString>());

    /**
    * @param[in]  id_board QString [required]
    * @param[in]  id_label QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  fields QString [optional]
    */
    virtual void getBoardsLabelsByIdBoardByIdLabel(const QString &id_board, const QString &id_label, const QString &key, const QString &token, const ::OpenAPI::OptionalParam<QString> &fields = ::OpenAPI::OptionalParam<QString>());

    /**
    * @param[in]  id_board QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  cards QString [optional]
    * @param[in]  card_fields QString [optional]
    * @param[in]  filter QString [optional]
    * @param[in]  fields QString [optional]
    */
    virtual void getBoardsListsByIdBoard(const QString &id_board, const QString &key, const QString &token, const ::OpenAPI::OptionalParam<QString> &cards = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &card_fields = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &filter = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &fields = ::OpenAPI::OptionalParam<QString>());

    /**
    * @param[in]  id_board QString [required]
    * @param[in]  filter QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    */
    virtual void getBoardsListsByIdBoardByFilter(const QString &id_board, const QString &filter, const QString &key, const QString &token);

    /**
    * @param[in]  id_board QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  filter QString [optional]
    * @param[in]  fields QString [optional]
    * @param[in]  activity QString [optional]
    */
    virtual void getBoardsMembersByIdBoard(const QString &id_board, const QString &key, const QString &token, const ::OpenAPI::OptionalParam<QString> &filter = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &fields = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &activity = ::OpenAPI::OptionalParam<QString>());

    /**
    * @param[in]  id_board QString [required]
    * @param[in]  filter QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    */
    virtual void getBoardsMembersByIdBoardByFilter(const QString &id_board, const QString &filter, const QString &key, const QString &token);

    /**
    * @param[in]  id_board QString [required]
    * @param[in]  id_member QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  actions QString [optional]
    * @param[in]  attachments QString [optional]
    * @param[in]  attachment_fields QString [optional]
    * @param[in]  members QString [optional]
    * @param[in]  member_fields QString [optional]
    * @param[in]  check_item_states QString [optional]
    * @param[in]  checklists QString [optional]
    * @param[in]  board QString [optional]
    * @param[in]  board_fields QString [optional]
    * @param[in]  list QString [optional]
    * @param[in]  list_fields QString [optional]
    * @param[in]  filter QString [optional]
    * @param[in]  fields QString [optional]
    */
    virtual void getBoardsMembersCardsByIdBoardByIdMember(const QString &id_board, const QString &id_member, const QString &key, const QString &token, const ::OpenAPI::OptionalParam<QString> &actions = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &attachments = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &attachment_fields = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &members = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &member_fields = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &check_item_states = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &checklists = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &board = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &board_fields = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &list = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &list_fields = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &filter = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &fields = ::OpenAPI::OptionalParam<QString>());

    /**
    * @param[in]  id_board QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  fields QString [optional]
    */
    virtual void getBoardsMembersInvitedByIdBoard(const QString &id_board, const QString &key, const QString &token, const ::OpenAPI::OptionalParam<QString> &fields = ::OpenAPI::OptionalParam<QString>());

    /**
    * @param[in]  id_board QString [required]
    * @param[in]  field QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    */
    virtual void getBoardsMembersInvitedByIdBoardByField(const QString &id_board, const QString &field, const QString &key, const QString &token);

    /**
    * @param[in]  id_board QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  filter QString [optional]
    * @param[in]  member QString [optional]
    * @param[in]  member_fields QString [optional]
    */
    virtual void getBoardsMembershipsByIdBoard(const QString &id_board, const QString &key, const QString &token, const ::OpenAPI::OptionalParam<QString> &filter = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &member = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &member_fields = ::OpenAPI::OptionalParam<QString>());

    /**
    * @param[in]  id_board QString [required]
    * @param[in]  id_membership QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  member QString [optional]
    * @param[in]  member_fields QString [optional]
    */
    virtual void getBoardsMembershipsByIdBoardByIdMembership(const QString &id_board, const QString &id_membership, const QString &key, const QString &token, const ::OpenAPI::OptionalParam<QString> &member = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &member_fields = ::OpenAPI::OptionalParam<QString>());

    /**
    * @param[in]  id_board QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    */
    virtual void getBoardsMyPrefsByIdBoard(const QString &id_board, const QString &key, const QString &token);

    /**
    * @param[in]  id_board QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  fields QString [optional]
    */
    virtual void getBoardsOrganizationByIdBoard(const QString &id_board, const QString &key, const QString &token, const ::OpenAPI::OptionalParam<QString> &fields = ::OpenAPI::OptionalParam<QString>());

    /**
    * @param[in]  id_board QString [required]
    * @param[in]  field QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    */
    virtual void getBoardsOrganizationByIdBoardByField(const QString &id_board, const QString &field, const QString &key, const QString &token);

    /**
    * @param[in]  id_board QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  oai_boards OAIBoards [required]
    */
    virtual void updateBoardsByIdBoard(const QString &id_board, const QString &key, const QString &token, const OAIBoards &oai_boards);

    /**
    * @param[in]  id_board QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  oai_boards_closed OAIBoards_closed [required]
    */
    virtual void updateBoardsClosedByIdBoard(const QString &id_board, const QString &key, const QString &token, const OAIBoards_closed &oai_boards_closed);

    /**
    * @param[in]  id_board QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  oai_boards_desc OAIBoards_desc [required]
    */
    virtual void updateBoardsDescByIdBoard(const QString &id_board, const QString &key, const QString &token, const OAIBoards_desc &oai_boards_desc);

    /**
    * @param[in]  id_board QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  oai_boards_id_organization OAIBoards_idOrganization [required]
    */
    virtual void updateBoardsIdOrganizationByIdBoard(const QString &id_board, const QString &key, const QString &token, const OAIBoards_idOrganization &oai_boards_id_organization);

    /**
    * @param[in]  id_board QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  oai_label_names_blue OAILabelNames_blue [required]
    */
    virtual void updateBoardsLabelNamesBlueByIdBoard(const QString &id_board, const QString &key, const QString &token, const OAILabelNames_blue &oai_label_names_blue);

    /**
    * @param[in]  id_board QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  oai_label_names_green OAILabelNames_green [required]
    */
    virtual void updateBoardsLabelNamesGreenByIdBoard(const QString &id_board, const QString &key, const QString &token, const OAILabelNames_green &oai_label_names_green);

    /**
    * @param[in]  id_board QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  oai_label_names_orange OAILabelNames_orange [required]
    */
    virtual void updateBoardsLabelNamesOrangeByIdBoard(const QString &id_board, const QString &key, const QString &token, const OAILabelNames_orange &oai_label_names_orange);

    /**
    * @param[in]  id_board QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  oai_label_names_purple OAILabelNames_purple [required]
    */
    virtual void updateBoardsLabelNamesPurpleByIdBoard(const QString &id_board, const QString &key, const QString &token, const OAILabelNames_purple &oai_label_names_purple);

    /**
    * @param[in]  id_board QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  oai_label_names_red OAILabelNames_red [required]
    */
    virtual void updateBoardsLabelNamesRedByIdBoard(const QString &id_board, const QString &key, const QString &token, const OAILabelNames_red &oai_label_names_red);

    /**
    * @param[in]  id_board QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  oai_label_names_yellow OAILabelNames_yellow [required]
    */
    virtual void updateBoardsLabelNamesYellowByIdBoard(const QString &id_board, const QString &key, const QString &token, const OAILabelNames_yellow &oai_label_names_yellow);

    /**
    * @param[in]  id_board QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  oai_boards_members OAIBoards_members [required]
    */
    virtual void updateBoardsMembersByIdBoard(const QString &id_board, const QString &key, const QString &token, const OAIBoards_members &oai_boards_members);

    /**
    * @param[in]  id_board QString [required]
    * @param[in]  id_member QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  oai_boards_members OAIBoards_members [required]
    */
    virtual void updateBoardsMembersByIdBoardByIdMember(const QString &id_board, const QString &id_member, const QString &key, const QString &token, const OAIBoards_members &oai_boards_members);

    /**
    * @param[in]  id_board QString [required]
    * @param[in]  id_membership QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  oai_boards_memberships OAIBoards_memberships [required]
    */
    virtual void updateBoardsMembershipsByIdBoardByIdMembership(const QString &id_board, const QString &id_membership, const QString &key, const QString &token, const OAIBoards_memberships &oai_boards_memberships);

    /**
    * @param[in]  id_board QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  oaimy_prefs_email_position OAIMyPrefs_emailPosition [required]
    */
    virtual void updateBoardsMyPrefsEmailPositionByIdBoard(const QString &id_board, const QString &key, const QString &token, const OAIMyPrefs_emailPosition &oaimy_prefs_email_position);

    /**
    * @param[in]  id_board QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  oaimy_prefs_id_email_list OAIMyPrefs_idEmailList [required]
    */
    virtual void updateBoardsMyPrefsIdEmailListByIdBoard(const QString &id_board, const QString &key, const QString &token, const OAIMyPrefs_idEmailList &oaimy_prefs_id_email_list);

    /**
    * @param[in]  id_board QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  oaimy_prefs_show_list_guide OAIMyPrefs_showListGuide [required]
    */
    virtual void updateBoardsMyPrefsShowListGuideByIdBoard(const QString &id_board, const QString &key, const QString &token, const OAIMyPrefs_showListGuide &oaimy_prefs_show_list_guide);

    /**
    * @param[in]  id_board QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  oaimy_prefs_show_sidebar_activity OAIMyPrefs_showSidebarActivity [required]
    */
    virtual void updateBoardsMyPrefsShowSidebarActivityByIdBoard(const QString &id_board, const QString &key, const QString &token, const OAIMyPrefs_showSidebarActivity &oaimy_prefs_show_sidebar_activity);

    /**
    * @param[in]  id_board QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  oaimy_prefs_show_sidebar_board_actions OAIMyPrefs_showSidebarBoardActions [required]
    */
    virtual void updateBoardsMyPrefsShowSidebarBoardActionsByIdBoard(const QString &id_board, const QString &key, const QString &token, const OAIMyPrefs_showSidebarBoardActions &oaimy_prefs_show_sidebar_board_actions);

    /**
    * @param[in]  id_board QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  oaimy_prefs_show_sidebar OAIMyPrefs_showSidebar [required]
    */
    virtual void updateBoardsMyPrefsShowSidebarByIdBoard(const QString &id_board, const QString &key, const QString &token, const OAIMyPrefs_showSidebar &oaimy_prefs_show_sidebar);

    /**
    * @param[in]  id_board QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  oaimy_prefs_show_sidebar_members OAIMyPrefs_showSidebarMembers [required]
    */
    virtual void updateBoardsMyPrefsShowSidebarMembersByIdBoard(const QString &id_board, const QString &key, const QString &token, const OAIMyPrefs_showSidebarMembers &oaimy_prefs_show_sidebar_members);

    /**
    * @param[in]  id_board QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  oai_boards_name OAIBoards_name [required]
    */
    virtual void updateBoardsNameByIdBoard(const QString &id_board, const QString &key, const QString &token, const OAIBoards_name &oai_boards_name);

    /**
    * @param[in]  id_board QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  oai_prefs_background OAIPrefs_background [required]
    */
    virtual void updateBoardsPrefsBackgroundByIdBoard(const QString &id_board, const QString &key, const QString &token, const OAIPrefs_background &oai_prefs_background);

    /**
    * @param[in]  id_board QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  oai_prefs_calendar_feed_enabled OAIPrefs_calendarFeedEnabled [required]
    */
    virtual void updateBoardsPrefsCalendarFeedEnabledByIdBoard(const QString &id_board, const QString &key, const QString &token, const OAIPrefs_calendarFeedEnabled &oai_prefs_calendar_feed_enabled);

    /**
    * @param[in]  id_board QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  oai_prefs_card_aging OAIPrefs_cardAging [required]
    */
    virtual void updateBoardsPrefsCardAgingByIdBoard(const QString &id_board, const QString &key, const QString &token, const OAIPrefs_cardAging &oai_prefs_card_aging);

    /**
    * @param[in]  id_board QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  oai_prefs_card_covers OAIPrefs_cardCovers [required]
    */
    virtual void updateBoardsPrefsCardCoversByIdBoard(const QString &id_board, const QString &key, const QString &token, const OAIPrefs_cardCovers &oai_prefs_card_covers);

    /**
    * @param[in]  id_board QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  oai_prefs_comments OAIPrefs_comments [required]
    */
    virtual void updateBoardsPrefsCommentsByIdBoard(const QString &id_board, const QString &key, const QString &token, const OAIPrefs_comments &oai_prefs_comments);

    /**
    * @param[in]  id_board QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  oai_prefs_invitations OAIPrefs_invitations [required]
    */
    virtual void updateBoardsPrefsInvitationsByIdBoard(const QString &id_board, const QString &key, const QString &token, const OAIPrefs_invitations &oai_prefs_invitations);

    /**
    * @param[in]  id_board QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  oai_prefs_permission_level OAIPrefs_permissionLevel [required]
    */
    virtual void updateBoardsPrefsPermissionLevelByIdBoard(const QString &id_board, const QString &key, const QString &token, const OAIPrefs_permissionLevel &oai_prefs_permission_level);

    /**
    * @param[in]  id_board QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  oai_prefs_self_join OAIPrefs_selfJoin [required]
    */
    virtual void updateBoardsPrefsSelfJoinByIdBoard(const QString &id_board, const QString &key, const QString &token, const OAIPrefs_selfJoin &oai_prefs_self_join);

    /**
    * @param[in]  id_board QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  oai_prefs_voting OAIPrefs_voting [required]
    */
    virtual void updateBoardsPrefsVotingByIdBoard(const QString &id_board, const QString &key, const QString &token, const OAIPrefs_voting &oai_prefs_voting);

    /**
    * @param[in]  id_board QString [required]
    * @param[in]  key QString [required]
    * @param[in]  token QString [required]
    * @param[in]  oai_boards_subscribed OAIBoards_subscribed [required]
    */
    virtual void updateBoardsSubscribedByIdBoard(const QString &id_board, const QString &key, const QString &token, const OAIBoards_subscribed &oai_boards_subscribed);


private:
    QMap<QString,int> _serverIndices;
    QMap<QString,QList<OAIServerConfiguration>> _serverConfigs;
    QMap<QString, QString> _apiKeys;
    QString _bearerToken;
    QString _username;
    QString _password;
    int _timeOut;
    QString _workingDirectory;
    QNetworkAccessManager* _manager;
    QMap<QString, QString> _defaultHeaders;
    bool _isResponseCompressionEnabled;
    bool _isRequestCompressionEnabled;
    OAIHttpRequestInput _latestInput;
    OAIHttpRequestWorker *_latestWorker;
    QStringList _latestScope;
    OauthCode _authFlow;
    OauthImplicit _implicitFlow;
    OauthCredentials _credentialFlow;
    OauthPassword _passwordFlow;
    int _OauthMethod = 0;

    void addBoardsCallback(OAIHttpRequestWorker *worker);
    void addBoardsCalendarKeyGenerateByIdBoardCallback(OAIHttpRequestWorker *worker);
    void addBoardsChecklistsByIdBoardCallback(OAIHttpRequestWorker *worker);
    void addBoardsEmailKeyGenerateByIdBoardCallback(OAIHttpRequestWorker *worker);
    void addBoardsLabelsByIdBoardCallback(OAIHttpRequestWorker *worker);
    void addBoardsListsByIdBoardCallback(OAIHttpRequestWorker *worker);
    void addBoardsMarkAsViewedByIdBoardCallback(OAIHttpRequestWorker *worker);
    void addBoardsPowerUpsByIdBoardCallback(OAIHttpRequestWorker *worker);
    void deleteBoardsMembersByIdBoardByIdMemberCallback(OAIHttpRequestWorker *worker);
    void deleteBoardsPowerUpsByIdBoardByPowerUpCallback(OAIHttpRequestWorker *worker);
    void getBoardsActionsByIdBoardCallback(OAIHttpRequestWorker *worker);
    void getBoardsBoardStarsByIdBoardCallback(OAIHttpRequestWorker *worker);
    void getBoardsByIdBoardCallback(OAIHttpRequestWorker *worker);
    void getBoardsByIdBoardByFieldCallback(OAIHttpRequestWorker *worker);
    void getBoardsCardsByIdBoardCallback(OAIHttpRequestWorker *worker);
    void getBoardsCardsByIdBoardByFilterCallback(OAIHttpRequestWorker *worker);
    void getBoardsCardsByIdBoardByIdCardCallback(OAIHttpRequestWorker *worker);
    void getBoardsChecklistsByIdBoardCallback(OAIHttpRequestWorker *worker);
    void getBoardsDeltasByIdBoardCallback(OAIHttpRequestWorker *worker);
    void getBoardsLabelsByIdBoardCallback(OAIHttpRequestWorker *worker);
    void getBoardsLabelsByIdBoardByIdLabelCallback(OAIHttpRequestWorker *worker);
    void getBoardsListsByIdBoardCallback(OAIHttpRequestWorker *worker);
    void getBoardsListsByIdBoardByFilterCallback(OAIHttpRequestWorker *worker);
    void getBoardsMembersByIdBoardCallback(OAIHttpRequestWorker *worker);
    void getBoardsMembersByIdBoardByFilterCallback(OAIHttpRequestWorker *worker);
    void getBoardsMembersCardsByIdBoardByIdMemberCallback(OAIHttpRequestWorker *worker);
    void getBoardsMembersInvitedByIdBoardCallback(OAIHttpRequestWorker *worker);
    void getBoardsMembersInvitedByIdBoardByFieldCallback(OAIHttpRequestWorker *worker);
    void getBoardsMembershipsByIdBoardCallback(OAIHttpRequestWorker *worker);
    void getBoardsMembershipsByIdBoardByIdMembershipCallback(OAIHttpRequestWorker *worker);
    void getBoardsMyPrefsByIdBoardCallback(OAIHttpRequestWorker *worker);
    void getBoardsOrganizationByIdBoardCallback(OAIHttpRequestWorker *worker);
    void getBoardsOrganizationByIdBoardByFieldCallback(OAIHttpRequestWorker *worker);
    void updateBoardsByIdBoardCallback(OAIHttpRequestWorker *worker);
    void updateBoardsClosedByIdBoardCallback(OAIHttpRequestWorker *worker);
    void updateBoardsDescByIdBoardCallback(OAIHttpRequestWorker *worker);
    void updateBoardsIdOrganizationByIdBoardCallback(OAIHttpRequestWorker *worker);
    void updateBoardsLabelNamesBlueByIdBoardCallback(OAIHttpRequestWorker *worker);
    void updateBoardsLabelNamesGreenByIdBoardCallback(OAIHttpRequestWorker *worker);
    void updateBoardsLabelNamesOrangeByIdBoardCallback(OAIHttpRequestWorker *worker);
    void updateBoardsLabelNamesPurpleByIdBoardCallback(OAIHttpRequestWorker *worker);
    void updateBoardsLabelNamesRedByIdBoardCallback(OAIHttpRequestWorker *worker);
    void updateBoardsLabelNamesYellowByIdBoardCallback(OAIHttpRequestWorker *worker);
    void updateBoardsMembersByIdBoardCallback(OAIHttpRequestWorker *worker);
    void updateBoardsMembersByIdBoardByIdMemberCallback(OAIHttpRequestWorker *worker);
    void updateBoardsMembershipsByIdBoardByIdMembershipCallback(OAIHttpRequestWorker *worker);
    void updateBoardsMyPrefsEmailPositionByIdBoardCallback(OAIHttpRequestWorker *worker);
    void updateBoardsMyPrefsIdEmailListByIdBoardCallback(OAIHttpRequestWorker *worker);
    void updateBoardsMyPrefsShowListGuideByIdBoardCallback(OAIHttpRequestWorker *worker);
    void updateBoardsMyPrefsShowSidebarActivityByIdBoardCallback(OAIHttpRequestWorker *worker);
    void updateBoardsMyPrefsShowSidebarBoardActionsByIdBoardCallback(OAIHttpRequestWorker *worker);
    void updateBoardsMyPrefsShowSidebarByIdBoardCallback(OAIHttpRequestWorker *worker);
    void updateBoardsMyPrefsShowSidebarMembersByIdBoardCallback(OAIHttpRequestWorker *worker);
    void updateBoardsNameByIdBoardCallback(OAIHttpRequestWorker *worker);
    void updateBoardsPrefsBackgroundByIdBoardCallback(OAIHttpRequestWorker *worker);
    void updateBoardsPrefsCalendarFeedEnabledByIdBoardCallback(OAIHttpRequestWorker *worker);
    void updateBoardsPrefsCardAgingByIdBoardCallback(OAIHttpRequestWorker *worker);
    void updateBoardsPrefsCardCoversByIdBoardCallback(OAIHttpRequestWorker *worker);
    void updateBoardsPrefsCommentsByIdBoardCallback(OAIHttpRequestWorker *worker);
    void updateBoardsPrefsInvitationsByIdBoardCallback(OAIHttpRequestWorker *worker);
    void updateBoardsPrefsPermissionLevelByIdBoardCallback(OAIHttpRequestWorker *worker);
    void updateBoardsPrefsSelfJoinByIdBoardCallback(OAIHttpRequestWorker *worker);
    void updateBoardsPrefsVotingByIdBoardCallback(OAIHttpRequestWorker *worker);
    void updateBoardsSubscribedByIdBoardCallback(OAIHttpRequestWorker *worker);

Q_SIGNALS:

    void addBoardsSignal();
    void addBoardsCalendarKeyGenerateByIdBoardSignal();
    void addBoardsChecklistsByIdBoardSignal();
    void addBoardsEmailKeyGenerateByIdBoardSignal();
    void addBoardsLabelsByIdBoardSignal();
    void addBoardsListsByIdBoardSignal();
    void addBoardsMarkAsViewedByIdBoardSignal();
    void addBoardsPowerUpsByIdBoardSignal();
    void deleteBoardsMembersByIdBoardByIdMemberSignal();
    void deleteBoardsPowerUpsByIdBoardByPowerUpSignal();
    void getBoardsActionsByIdBoardSignal();
    void getBoardsBoardStarsByIdBoardSignal();
    void getBoardsByIdBoardSignal();
    void getBoardsByIdBoardByFieldSignal();
    void getBoardsCardsByIdBoardSignal();
    void getBoardsCardsByIdBoardByFilterSignal();
    void getBoardsCardsByIdBoardByIdCardSignal();
    void getBoardsChecklistsByIdBoardSignal();
    void getBoardsDeltasByIdBoardSignal();
    void getBoardsLabelsByIdBoardSignal();
    void getBoardsLabelsByIdBoardByIdLabelSignal();
    void getBoardsListsByIdBoardSignal();
    void getBoardsListsByIdBoardByFilterSignal();
    void getBoardsMembersByIdBoardSignal();
    void getBoardsMembersByIdBoardByFilterSignal();
    void getBoardsMembersCardsByIdBoardByIdMemberSignal();
    void getBoardsMembersInvitedByIdBoardSignal();
    void getBoardsMembersInvitedByIdBoardByFieldSignal();
    void getBoardsMembershipsByIdBoardSignal();
    void getBoardsMembershipsByIdBoardByIdMembershipSignal();
    void getBoardsMyPrefsByIdBoardSignal();
    void getBoardsOrganizationByIdBoardSignal();
    void getBoardsOrganizationByIdBoardByFieldSignal();
    void updateBoardsByIdBoardSignal();
    void updateBoardsClosedByIdBoardSignal();
    void updateBoardsDescByIdBoardSignal();
    void updateBoardsIdOrganizationByIdBoardSignal();
    void updateBoardsLabelNamesBlueByIdBoardSignal();
    void updateBoardsLabelNamesGreenByIdBoardSignal();
    void updateBoardsLabelNamesOrangeByIdBoardSignal();
    void updateBoardsLabelNamesPurpleByIdBoardSignal();
    void updateBoardsLabelNamesRedByIdBoardSignal();
    void updateBoardsLabelNamesYellowByIdBoardSignal();
    void updateBoardsMembersByIdBoardSignal();
    void updateBoardsMembersByIdBoardByIdMemberSignal();
    void updateBoardsMembershipsByIdBoardByIdMembershipSignal();
    void updateBoardsMyPrefsEmailPositionByIdBoardSignal();
    void updateBoardsMyPrefsIdEmailListByIdBoardSignal();
    void updateBoardsMyPrefsShowListGuideByIdBoardSignal();
    void updateBoardsMyPrefsShowSidebarActivityByIdBoardSignal();
    void updateBoardsMyPrefsShowSidebarBoardActionsByIdBoardSignal();
    void updateBoardsMyPrefsShowSidebarByIdBoardSignal();
    void updateBoardsMyPrefsShowSidebarMembersByIdBoardSignal();
    void updateBoardsNameByIdBoardSignal();
    void updateBoardsPrefsBackgroundByIdBoardSignal();
    void updateBoardsPrefsCalendarFeedEnabledByIdBoardSignal();
    void updateBoardsPrefsCardAgingByIdBoardSignal();
    void updateBoardsPrefsCardCoversByIdBoardSignal();
    void updateBoardsPrefsCommentsByIdBoardSignal();
    void updateBoardsPrefsInvitationsByIdBoardSignal();
    void updateBoardsPrefsPermissionLevelByIdBoardSignal();
    void updateBoardsPrefsSelfJoinByIdBoardSignal();
    void updateBoardsPrefsVotingByIdBoardSignal();
    void updateBoardsSubscribedByIdBoardSignal();


    void addBoardsSignalFull(OAIHttpRequestWorker *worker);
    void addBoardsCalendarKeyGenerateByIdBoardSignalFull(OAIHttpRequestWorker *worker);
    void addBoardsChecklistsByIdBoardSignalFull(OAIHttpRequestWorker *worker);
    void addBoardsEmailKeyGenerateByIdBoardSignalFull(OAIHttpRequestWorker *worker);
    void addBoardsLabelsByIdBoardSignalFull(OAIHttpRequestWorker *worker);
    void addBoardsListsByIdBoardSignalFull(OAIHttpRequestWorker *worker);
    void addBoardsMarkAsViewedByIdBoardSignalFull(OAIHttpRequestWorker *worker);
    void addBoardsPowerUpsByIdBoardSignalFull(OAIHttpRequestWorker *worker);
    void deleteBoardsMembersByIdBoardByIdMemberSignalFull(OAIHttpRequestWorker *worker);
    void deleteBoardsPowerUpsByIdBoardByPowerUpSignalFull(OAIHttpRequestWorker *worker);
    void getBoardsActionsByIdBoardSignalFull(OAIHttpRequestWorker *worker);
    void getBoardsBoardStarsByIdBoardSignalFull(OAIHttpRequestWorker *worker);
    void getBoardsByIdBoardSignalFull(OAIHttpRequestWorker *worker);
    void getBoardsByIdBoardByFieldSignalFull(OAIHttpRequestWorker *worker);
    void getBoardsCardsByIdBoardSignalFull(OAIHttpRequestWorker *worker);
    void getBoardsCardsByIdBoardByFilterSignalFull(OAIHttpRequestWorker *worker);
    void getBoardsCardsByIdBoardByIdCardSignalFull(OAIHttpRequestWorker *worker);
    void getBoardsChecklistsByIdBoardSignalFull(OAIHttpRequestWorker *worker);
    void getBoardsDeltasByIdBoardSignalFull(OAIHttpRequestWorker *worker);
    void getBoardsLabelsByIdBoardSignalFull(OAIHttpRequestWorker *worker);
    void getBoardsLabelsByIdBoardByIdLabelSignalFull(OAIHttpRequestWorker *worker);
    void getBoardsListsByIdBoardSignalFull(OAIHttpRequestWorker *worker);
    void getBoardsListsByIdBoardByFilterSignalFull(OAIHttpRequestWorker *worker);
    void getBoardsMembersByIdBoardSignalFull(OAIHttpRequestWorker *worker);
    void getBoardsMembersByIdBoardByFilterSignalFull(OAIHttpRequestWorker *worker);
    void getBoardsMembersCardsByIdBoardByIdMemberSignalFull(OAIHttpRequestWorker *worker);
    void getBoardsMembersInvitedByIdBoardSignalFull(OAIHttpRequestWorker *worker);
    void getBoardsMembersInvitedByIdBoardByFieldSignalFull(OAIHttpRequestWorker *worker);
    void getBoardsMembershipsByIdBoardSignalFull(OAIHttpRequestWorker *worker);
    void getBoardsMembershipsByIdBoardByIdMembershipSignalFull(OAIHttpRequestWorker *worker);
    void getBoardsMyPrefsByIdBoardSignalFull(OAIHttpRequestWorker *worker);
    void getBoardsOrganizationByIdBoardSignalFull(OAIHttpRequestWorker *worker);
    void getBoardsOrganizationByIdBoardByFieldSignalFull(OAIHttpRequestWorker *worker);
    void updateBoardsByIdBoardSignalFull(OAIHttpRequestWorker *worker);
    void updateBoardsClosedByIdBoardSignalFull(OAIHttpRequestWorker *worker);
    void updateBoardsDescByIdBoardSignalFull(OAIHttpRequestWorker *worker);
    void updateBoardsIdOrganizationByIdBoardSignalFull(OAIHttpRequestWorker *worker);
    void updateBoardsLabelNamesBlueByIdBoardSignalFull(OAIHttpRequestWorker *worker);
    void updateBoardsLabelNamesGreenByIdBoardSignalFull(OAIHttpRequestWorker *worker);
    void updateBoardsLabelNamesOrangeByIdBoardSignalFull(OAIHttpRequestWorker *worker);
    void updateBoardsLabelNamesPurpleByIdBoardSignalFull(OAIHttpRequestWorker *worker);
    void updateBoardsLabelNamesRedByIdBoardSignalFull(OAIHttpRequestWorker *worker);
    void updateBoardsLabelNamesYellowByIdBoardSignalFull(OAIHttpRequestWorker *worker);
    void updateBoardsMembersByIdBoardSignalFull(OAIHttpRequestWorker *worker);
    void updateBoardsMembersByIdBoardByIdMemberSignalFull(OAIHttpRequestWorker *worker);
    void updateBoardsMembershipsByIdBoardByIdMembershipSignalFull(OAIHttpRequestWorker *worker);
    void updateBoardsMyPrefsEmailPositionByIdBoardSignalFull(OAIHttpRequestWorker *worker);
    void updateBoardsMyPrefsIdEmailListByIdBoardSignalFull(OAIHttpRequestWorker *worker);
    void updateBoardsMyPrefsShowListGuideByIdBoardSignalFull(OAIHttpRequestWorker *worker);
    void updateBoardsMyPrefsShowSidebarActivityByIdBoardSignalFull(OAIHttpRequestWorker *worker);
    void updateBoardsMyPrefsShowSidebarBoardActionsByIdBoardSignalFull(OAIHttpRequestWorker *worker);
    void updateBoardsMyPrefsShowSidebarByIdBoardSignalFull(OAIHttpRequestWorker *worker);
    void updateBoardsMyPrefsShowSidebarMembersByIdBoardSignalFull(OAIHttpRequestWorker *worker);
    void updateBoardsNameByIdBoardSignalFull(OAIHttpRequestWorker *worker);
    void updateBoardsPrefsBackgroundByIdBoardSignalFull(OAIHttpRequestWorker *worker);
    void updateBoardsPrefsCalendarFeedEnabledByIdBoardSignalFull(OAIHttpRequestWorker *worker);
    void updateBoardsPrefsCardAgingByIdBoardSignalFull(OAIHttpRequestWorker *worker);
    void updateBoardsPrefsCardCoversByIdBoardSignalFull(OAIHttpRequestWorker *worker);
    void updateBoardsPrefsCommentsByIdBoardSignalFull(OAIHttpRequestWorker *worker);
    void updateBoardsPrefsInvitationsByIdBoardSignalFull(OAIHttpRequestWorker *worker);
    void updateBoardsPrefsPermissionLevelByIdBoardSignalFull(OAIHttpRequestWorker *worker);
    void updateBoardsPrefsSelfJoinByIdBoardSignalFull(OAIHttpRequestWorker *worker);
    void updateBoardsPrefsVotingByIdBoardSignalFull(OAIHttpRequestWorker *worker);
    void updateBoardsSubscribedByIdBoardSignalFull(OAIHttpRequestWorker *worker);

    Q_DECL_DEPRECATED_X("Use addBoardsSignalError() instead")
    void addBoardsSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void addBoardsSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use addBoardsCalendarKeyGenerateByIdBoardSignalError() instead")
    void addBoardsCalendarKeyGenerateByIdBoardSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void addBoardsCalendarKeyGenerateByIdBoardSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use addBoardsChecklistsByIdBoardSignalError() instead")
    void addBoardsChecklistsByIdBoardSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void addBoardsChecklistsByIdBoardSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use addBoardsEmailKeyGenerateByIdBoardSignalError() instead")
    void addBoardsEmailKeyGenerateByIdBoardSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void addBoardsEmailKeyGenerateByIdBoardSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use addBoardsLabelsByIdBoardSignalError() instead")
    void addBoardsLabelsByIdBoardSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void addBoardsLabelsByIdBoardSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use addBoardsListsByIdBoardSignalError() instead")
    void addBoardsListsByIdBoardSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void addBoardsListsByIdBoardSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use addBoardsMarkAsViewedByIdBoardSignalError() instead")
    void addBoardsMarkAsViewedByIdBoardSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void addBoardsMarkAsViewedByIdBoardSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use addBoardsPowerUpsByIdBoardSignalError() instead")
    void addBoardsPowerUpsByIdBoardSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void addBoardsPowerUpsByIdBoardSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteBoardsMembersByIdBoardByIdMemberSignalError() instead")
    void deleteBoardsMembersByIdBoardByIdMemberSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void deleteBoardsMembersByIdBoardByIdMemberSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteBoardsPowerUpsByIdBoardByPowerUpSignalError() instead")
    void deleteBoardsPowerUpsByIdBoardByPowerUpSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void deleteBoardsPowerUpsByIdBoardByPowerUpSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getBoardsActionsByIdBoardSignalError() instead")
    void getBoardsActionsByIdBoardSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void getBoardsActionsByIdBoardSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getBoardsBoardStarsByIdBoardSignalError() instead")
    void getBoardsBoardStarsByIdBoardSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void getBoardsBoardStarsByIdBoardSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getBoardsByIdBoardSignalError() instead")
    void getBoardsByIdBoardSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void getBoardsByIdBoardSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getBoardsByIdBoardByFieldSignalError() instead")
    void getBoardsByIdBoardByFieldSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void getBoardsByIdBoardByFieldSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getBoardsCardsByIdBoardSignalError() instead")
    void getBoardsCardsByIdBoardSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void getBoardsCardsByIdBoardSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getBoardsCardsByIdBoardByFilterSignalError() instead")
    void getBoardsCardsByIdBoardByFilterSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void getBoardsCardsByIdBoardByFilterSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getBoardsCardsByIdBoardByIdCardSignalError() instead")
    void getBoardsCardsByIdBoardByIdCardSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void getBoardsCardsByIdBoardByIdCardSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getBoardsChecklistsByIdBoardSignalError() instead")
    void getBoardsChecklistsByIdBoardSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void getBoardsChecklistsByIdBoardSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getBoardsDeltasByIdBoardSignalError() instead")
    void getBoardsDeltasByIdBoardSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void getBoardsDeltasByIdBoardSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getBoardsLabelsByIdBoardSignalError() instead")
    void getBoardsLabelsByIdBoardSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void getBoardsLabelsByIdBoardSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getBoardsLabelsByIdBoardByIdLabelSignalError() instead")
    void getBoardsLabelsByIdBoardByIdLabelSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void getBoardsLabelsByIdBoardByIdLabelSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getBoardsListsByIdBoardSignalError() instead")
    void getBoardsListsByIdBoardSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void getBoardsListsByIdBoardSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getBoardsListsByIdBoardByFilterSignalError() instead")
    void getBoardsListsByIdBoardByFilterSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void getBoardsListsByIdBoardByFilterSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getBoardsMembersByIdBoardSignalError() instead")
    void getBoardsMembersByIdBoardSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void getBoardsMembersByIdBoardSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getBoardsMembersByIdBoardByFilterSignalError() instead")
    void getBoardsMembersByIdBoardByFilterSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void getBoardsMembersByIdBoardByFilterSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getBoardsMembersCardsByIdBoardByIdMemberSignalError() instead")
    void getBoardsMembersCardsByIdBoardByIdMemberSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void getBoardsMembersCardsByIdBoardByIdMemberSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getBoardsMembersInvitedByIdBoardSignalError() instead")
    void getBoardsMembersInvitedByIdBoardSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void getBoardsMembersInvitedByIdBoardSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getBoardsMembersInvitedByIdBoardByFieldSignalError() instead")
    void getBoardsMembersInvitedByIdBoardByFieldSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void getBoardsMembersInvitedByIdBoardByFieldSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getBoardsMembershipsByIdBoardSignalError() instead")
    void getBoardsMembershipsByIdBoardSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void getBoardsMembershipsByIdBoardSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getBoardsMembershipsByIdBoardByIdMembershipSignalError() instead")
    void getBoardsMembershipsByIdBoardByIdMembershipSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void getBoardsMembershipsByIdBoardByIdMembershipSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getBoardsMyPrefsByIdBoardSignalError() instead")
    void getBoardsMyPrefsByIdBoardSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void getBoardsMyPrefsByIdBoardSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getBoardsOrganizationByIdBoardSignalError() instead")
    void getBoardsOrganizationByIdBoardSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void getBoardsOrganizationByIdBoardSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getBoardsOrganizationByIdBoardByFieldSignalError() instead")
    void getBoardsOrganizationByIdBoardByFieldSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void getBoardsOrganizationByIdBoardByFieldSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateBoardsByIdBoardSignalError() instead")
    void updateBoardsByIdBoardSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void updateBoardsByIdBoardSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateBoardsClosedByIdBoardSignalError() instead")
    void updateBoardsClosedByIdBoardSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void updateBoardsClosedByIdBoardSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateBoardsDescByIdBoardSignalError() instead")
    void updateBoardsDescByIdBoardSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void updateBoardsDescByIdBoardSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateBoardsIdOrganizationByIdBoardSignalError() instead")
    void updateBoardsIdOrganizationByIdBoardSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void updateBoardsIdOrganizationByIdBoardSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateBoardsLabelNamesBlueByIdBoardSignalError() instead")
    void updateBoardsLabelNamesBlueByIdBoardSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void updateBoardsLabelNamesBlueByIdBoardSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateBoardsLabelNamesGreenByIdBoardSignalError() instead")
    void updateBoardsLabelNamesGreenByIdBoardSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void updateBoardsLabelNamesGreenByIdBoardSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateBoardsLabelNamesOrangeByIdBoardSignalError() instead")
    void updateBoardsLabelNamesOrangeByIdBoardSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void updateBoardsLabelNamesOrangeByIdBoardSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateBoardsLabelNamesPurpleByIdBoardSignalError() instead")
    void updateBoardsLabelNamesPurpleByIdBoardSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void updateBoardsLabelNamesPurpleByIdBoardSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateBoardsLabelNamesRedByIdBoardSignalError() instead")
    void updateBoardsLabelNamesRedByIdBoardSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void updateBoardsLabelNamesRedByIdBoardSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateBoardsLabelNamesYellowByIdBoardSignalError() instead")
    void updateBoardsLabelNamesYellowByIdBoardSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void updateBoardsLabelNamesYellowByIdBoardSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateBoardsMembersByIdBoardSignalError() instead")
    void updateBoardsMembersByIdBoardSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void updateBoardsMembersByIdBoardSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateBoardsMembersByIdBoardByIdMemberSignalError() instead")
    void updateBoardsMembersByIdBoardByIdMemberSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void updateBoardsMembersByIdBoardByIdMemberSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateBoardsMembershipsByIdBoardByIdMembershipSignalError() instead")
    void updateBoardsMembershipsByIdBoardByIdMembershipSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void updateBoardsMembershipsByIdBoardByIdMembershipSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateBoardsMyPrefsEmailPositionByIdBoardSignalError() instead")
    void updateBoardsMyPrefsEmailPositionByIdBoardSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void updateBoardsMyPrefsEmailPositionByIdBoardSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateBoardsMyPrefsIdEmailListByIdBoardSignalError() instead")
    void updateBoardsMyPrefsIdEmailListByIdBoardSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void updateBoardsMyPrefsIdEmailListByIdBoardSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateBoardsMyPrefsShowListGuideByIdBoardSignalError() instead")
    void updateBoardsMyPrefsShowListGuideByIdBoardSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void updateBoardsMyPrefsShowListGuideByIdBoardSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateBoardsMyPrefsShowSidebarActivityByIdBoardSignalError() instead")
    void updateBoardsMyPrefsShowSidebarActivityByIdBoardSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void updateBoardsMyPrefsShowSidebarActivityByIdBoardSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateBoardsMyPrefsShowSidebarBoardActionsByIdBoardSignalError() instead")
    void updateBoardsMyPrefsShowSidebarBoardActionsByIdBoardSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void updateBoardsMyPrefsShowSidebarBoardActionsByIdBoardSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateBoardsMyPrefsShowSidebarByIdBoardSignalError() instead")
    void updateBoardsMyPrefsShowSidebarByIdBoardSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void updateBoardsMyPrefsShowSidebarByIdBoardSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateBoardsMyPrefsShowSidebarMembersByIdBoardSignalError() instead")
    void updateBoardsMyPrefsShowSidebarMembersByIdBoardSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void updateBoardsMyPrefsShowSidebarMembersByIdBoardSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateBoardsNameByIdBoardSignalError() instead")
    void updateBoardsNameByIdBoardSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void updateBoardsNameByIdBoardSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateBoardsPrefsBackgroundByIdBoardSignalError() instead")
    void updateBoardsPrefsBackgroundByIdBoardSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void updateBoardsPrefsBackgroundByIdBoardSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateBoardsPrefsCalendarFeedEnabledByIdBoardSignalError() instead")
    void updateBoardsPrefsCalendarFeedEnabledByIdBoardSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void updateBoardsPrefsCalendarFeedEnabledByIdBoardSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateBoardsPrefsCardAgingByIdBoardSignalError() instead")
    void updateBoardsPrefsCardAgingByIdBoardSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void updateBoardsPrefsCardAgingByIdBoardSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateBoardsPrefsCardCoversByIdBoardSignalError() instead")
    void updateBoardsPrefsCardCoversByIdBoardSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void updateBoardsPrefsCardCoversByIdBoardSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateBoardsPrefsCommentsByIdBoardSignalError() instead")
    void updateBoardsPrefsCommentsByIdBoardSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void updateBoardsPrefsCommentsByIdBoardSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateBoardsPrefsInvitationsByIdBoardSignalError() instead")
    void updateBoardsPrefsInvitationsByIdBoardSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void updateBoardsPrefsInvitationsByIdBoardSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateBoardsPrefsPermissionLevelByIdBoardSignalError() instead")
    void updateBoardsPrefsPermissionLevelByIdBoardSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void updateBoardsPrefsPermissionLevelByIdBoardSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateBoardsPrefsSelfJoinByIdBoardSignalError() instead")
    void updateBoardsPrefsSelfJoinByIdBoardSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void updateBoardsPrefsSelfJoinByIdBoardSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateBoardsPrefsVotingByIdBoardSignalError() instead")
    void updateBoardsPrefsVotingByIdBoardSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void updateBoardsPrefsVotingByIdBoardSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateBoardsSubscribedByIdBoardSignalError() instead")
    void updateBoardsSubscribedByIdBoardSignalE(QNetworkReply::NetworkError error_type, QString error_str);
    void updateBoardsSubscribedByIdBoardSignalError(QNetworkReply::NetworkError error_type, const QString &error_str);

    Q_DECL_DEPRECATED_X("Use addBoardsSignalErrorFull() instead")
    void addBoardsSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void addBoardsSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use addBoardsCalendarKeyGenerateByIdBoardSignalErrorFull() instead")
    void addBoardsCalendarKeyGenerateByIdBoardSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void addBoardsCalendarKeyGenerateByIdBoardSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use addBoardsChecklistsByIdBoardSignalErrorFull() instead")
    void addBoardsChecklistsByIdBoardSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void addBoardsChecklistsByIdBoardSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use addBoardsEmailKeyGenerateByIdBoardSignalErrorFull() instead")
    void addBoardsEmailKeyGenerateByIdBoardSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void addBoardsEmailKeyGenerateByIdBoardSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use addBoardsLabelsByIdBoardSignalErrorFull() instead")
    void addBoardsLabelsByIdBoardSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void addBoardsLabelsByIdBoardSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use addBoardsListsByIdBoardSignalErrorFull() instead")
    void addBoardsListsByIdBoardSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void addBoardsListsByIdBoardSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use addBoardsMarkAsViewedByIdBoardSignalErrorFull() instead")
    void addBoardsMarkAsViewedByIdBoardSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void addBoardsMarkAsViewedByIdBoardSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use addBoardsPowerUpsByIdBoardSignalErrorFull() instead")
    void addBoardsPowerUpsByIdBoardSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void addBoardsPowerUpsByIdBoardSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteBoardsMembersByIdBoardByIdMemberSignalErrorFull() instead")
    void deleteBoardsMembersByIdBoardByIdMemberSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void deleteBoardsMembersByIdBoardByIdMemberSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use deleteBoardsPowerUpsByIdBoardByPowerUpSignalErrorFull() instead")
    void deleteBoardsPowerUpsByIdBoardByPowerUpSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void deleteBoardsPowerUpsByIdBoardByPowerUpSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getBoardsActionsByIdBoardSignalErrorFull() instead")
    void getBoardsActionsByIdBoardSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getBoardsActionsByIdBoardSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getBoardsBoardStarsByIdBoardSignalErrorFull() instead")
    void getBoardsBoardStarsByIdBoardSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getBoardsBoardStarsByIdBoardSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getBoardsByIdBoardSignalErrorFull() instead")
    void getBoardsByIdBoardSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getBoardsByIdBoardSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getBoardsByIdBoardByFieldSignalErrorFull() instead")
    void getBoardsByIdBoardByFieldSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getBoardsByIdBoardByFieldSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getBoardsCardsByIdBoardSignalErrorFull() instead")
    void getBoardsCardsByIdBoardSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getBoardsCardsByIdBoardSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getBoardsCardsByIdBoardByFilterSignalErrorFull() instead")
    void getBoardsCardsByIdBoardByFilterSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getBoardsCardsByIdBoardByFilterSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getBoardsCardsByIdBoardByIdCardSignalErrorFull() instead")
    void getBoardsCardsByIdBoardByIdCardSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getBoardsCardsByIdBoardByIdCardSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getBoardsChecklistsByIdBoardSignalErrorFull() instead")
    void getBoardsChecklistsByIdBoardSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getBoardsChecklistsByIdBoardSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getBoardsDeltasByIdBoardSignalErrorFull() instead")
    void getBoardsDeltasByIdBoardSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getBoardsDeltasByIdBoardSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getBoardsLabelsByIdBoardSignalErrorFull() instead")
    void getBoardsLabelsByIdBoardSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getBoardsLabelsByIdBoardSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getBoardsLabelsByIdBoardByIdLabelSignalErrorFull() instead")
    void getBoardsLabelsByIdBoardByIdLabelSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getBoardsLabelsByIdBoardByIdLabelSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getBoardsListsByIdBoardSignalErrorFull() instead")
    void getBoardsListsByIdBoardSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getBoardsListsByIdBoardSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getBoardsListsByIdBoardByFilterSignalErrorFull() instead")
    void getBoardsListsByIdBoardByFilterSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getBoardsListsByIdBoardByFilterSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getBoardsMembersByIdBoardSignalErrorFull() instead")
    void getBoardsMembersByIdBoardSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getBoardsMembersByIdBoardSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getBoardsMembersByIdBoardByFilterSignalErrorFull() instead")
    void getBoardsMembersByIdBoardByFilterSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getBoardsMembersByIdBoardByFilterSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getBoardsMembersCardsByIdBoardByIdMemberSignalErrorFull() instead")
    void getBoardsMembersCardsByIdBoardByIdMemberSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getBoardsMembersCardsByIdBoardByIdMemberSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getBoardsMembersInvitedByIdBoardSignalErrorFull() instead")
    void getBoardsMembersInvitedByIdBoardSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getBoardsMembersInvitedByIdBoardSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getBoardsMembersInvitedByIdBoardByFieldSignalErrorFull() instead")
    void getBoardsMembersInvitedByIdBoardByFieldSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getBoardsMembersInvitedByIdBoardByFieldSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getBoardsMembershipsByIdBoardSignalErrorFull() instead")
    void getBoardsMembershipsByIdBoardSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getBoardsMembershipsByIdBoardSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getBoardsMembershipsByIdBoardByIdMembershipSignalErrorFull() instead")
    void getBoardsMembershipsByIdBoardByIdMembershipSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getBoardsMembershipsByIdBoardByIdMembershipSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getBoardsMyPrefsByIdBoardSignalErrorFull() instead")
    void getBoardsMyPrefsByIdBoardSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getBoardsMyPrefsByIdBoardSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getBoardsOrganizationByIdBoardSignalErrorFull() instead")
    void getBoardsOrganizationByIdBoardSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getBoardsOrganizationByIdBoardSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getBoardsOrganizationByIdBoardByFieldSignalErrorFull() instead")
    void getBoardsOrganizationByIdBoardByFieldSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getBoardsOrganizationByIdBoardByFieldSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateBoardsByIdBoardSignalErrorFull() instead")
    void updateBoardsByIdBoardSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void updateBoardsByIdBoardSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateBoardsClosedByIdBoardSignalErrorFull() instead")
    void updateBoardsClosedByIdBoardSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void updateBoardsClosedByIdBoardSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateBoardsDescByIdBoardSignalErrorFull() instead")
    void updateBoardsDescByIdBoardSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void updateBoardsDescByIdBoardSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateBoardsIdOrganizationByIdBoardSignalErrorFull() instead")
    void updateBoardsIdOrganizationByIdBoardSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void updateBoardsIdOrganizationByIdBoardSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateBoardsLabelNamesBlueByIdBoardSignalErrorFull() instead")
    void updateBoardsLabelNamesBlueByIdBoardSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void updateBoardsLabelNamesBlueByIdBoardSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateBoardsLabelNamesGreenByIdBoardSignalErrorFull() instead")
    void updateBoardsLabelNamesGreenByIdBoardSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void updateBoardsLabelNamesGreenByIdBoardSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateBoardsLabelNamesOrangeByIdBoardSignalErrorFull() instead")
    void updateBoardsLabelNamesOrangeByIdBoardSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void updateBoardsLabelNamesOrangeByIdBoardSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateBoardsLabelNamesPurpleByIdBoardSignalErrorFull() instead")
    void updateBoardsLabelNamesPurpleByIdBoardSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void updateBoardsLabelNamesPurpleByIdBoardSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateBoardsLabelNamesRedByIdBoardSignalErrorFull() instead")
    void updateBoardsLabelNamesRedByIdBoardSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void updateBoardsLabelNamesRedByIdBoardSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateBoardsLabelNamesYellowByIdBoardSignalErrorFull() instead")
    void updateBoardsLabelNamesYellowByIdBoardSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void updateBoardsLabelNamesYellowByIdBoardSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateBoardsMembersByIdBoardSignalErrorFull() instead")
    void updateBoardsMembersByIdBoardSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void updateBoardsMembersByIdBoardSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateBoardsMembersByIdBoardByIdMemberSignalErrorFull() instead")
    void updateBoardsMembersByIdBoardByIdMemberSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void updateBoardsMembersByIdBoardByIdMemberSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateBoardsMembershipsByIdBoardByIdMembershipSignalErrorFull() instead")
    void updateBoardsMembershipsByIdBoardByIdMembershipSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void updateBoardsMembershipsByIdBoardByIdMembershipSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateBoardsMyPrefsEmailPositionByIdBoardSignalErrorFull() instead")
    void updateBoardsMyPrefsEmailPositionByIdBoardSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void updateBoardsMyPrefsEmailPositionByIdBoardSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateBoardsMyPrefsIdEmailListByIdBoardSignalErrorFull() instead")
    void updateBoardsMyPrefsIdEmailListByIdBoardSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void updateBoardsMyPrefsIdEmailListByIdBoardSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateBoardsMyPrefsShowListGuideByIdBoardSignalErrorFull() instead")
    void updateBoardsMyPrefsShowListGuideByIdBoardSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void updateBoardsMyPrefsShowListGuideByIdBoardSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateBoardsMyPrefsShowSidebarActivityByIdBoardSignalErrorFull() instead")
    void updateBoardsMyPrefsShowSidebarActivityByIdBoardSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void updateBoardsMyPrefsShowSidebarActivityByIdBoardSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateBoardsMyPrefsShowSidebarBoardActionsByIdBoardSignalErrorFull() instead")
    void updateBoardsMyPrefsShowSidebarBoardActionsByIdBoardSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void updateBoardsMyPrefsShowSidebarBoardActionsByIdBoardSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateBoardsMyPrefsShowSidebarByIdBoardSignalErrorFull() instead")
    void updateBoardsMyPrefsShowSidebarByIdBoardSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void updateBoardsMyPrefsShowSidebarByIdBoardSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateBoardsMyPrefsShowSidebarMembersByIdBoardSignalErrorFull() instead")
    void updateBoardsMyPrefsShowSidebarMembersByIdBoardSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void updateBoardsMyPrefsShowSidebarMembersByIdBoardSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateBoardsNameByIdBoardSignalErrorFull() instead")
    void updateBoardsNameByIdBoardSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void updateBoardsNameByIdBoardSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateBoardsPrefsBackgroundByIdBoardSignalErrorFull() instead")
    void updateBoardsPrefsBackgroundByIdBoardSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void updateBoardsPrefsBackgroundByIdBoardSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateBoardsPrefsCalendarFeedEnabledByIdBoardSignalErrorFull() instead")
    void updateBoardsPrefsCalendarFeedEnabledByIdBoardSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void updateBoardsPrefsCalendarFeedEnabledByIdBoardSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateBoardsPrefsCardAgingByIdBoardSignalErrorFull() instead")
    void updateBoardsPrefsCardAgingByIdBoardSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void updateBoardsPrefsCardAgingByIdBoardSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateBoardsPrefsCardCoversByIdBoardSignalErrorFull() instead")
    void updateBoardsPrefsCardCoversByIdBoardSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void updateBoardsPrefsCardCoversByIdBoardSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateBoardsPrefsCommentsByIdBoardSignalErrorFull() instead")
    void updateBoardsPrefsCommentsByIdBoardSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void updateBoardsPrefsCommentsByIdBoardSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateBoardsPrefsInvitationsByIdBoardSignalErrorFull() instead")
    void updateBoardsPrefsInvitationsByIdBoardSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void updateBoardsPrefsInvitationsByIdBoardSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateBoardsPrefsPermissionLevelByIdBoardSignalErrorFull() instead")
    void updateBoardsPrefsPermissionLevelByIdBoardSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void updateBoardsPrefsPermissionLevelByIdBoardSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateBoardsPrefsSelfJoinByIdBoardSignalErrorFull() instead")
    void updateBoardsPrefsSelfJoinByIdBoardSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void updateBoardsPrefsSelfJoinByIdBoardSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateBoardsPrefsVotingByIdBoardSignalErrorFull() instead")
    void updateBoardsPrefsVotingByIdBoardSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void updateBoardsPrefsVotingByIdBoardSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use updateBoardsSubscribedByIdBoardSignalErrorFull() instead")
    void updateBoardsSubscribedByIdBoardSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void updateBoardsSubscribedByIdBoardSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);

    void abortRequestsSignal();
    void allPendingRequestsCompleted();

public Q_SLOTS:
    void tokenAvailable();
};

} // namespace OpenAPI
#endif
