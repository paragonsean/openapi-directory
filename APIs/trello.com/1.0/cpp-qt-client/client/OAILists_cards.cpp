/**
 * Trello
 * This document describes the REST API of Trello as published by Trello.com.  - <a href='https://trello.com/docs/index.html' target='_blank'>Official Documentation</a>  - <a href='https://trello.com/docs/api' target='_blank'>The HTML pages that were scraped in order to generate this specification.</a>
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILists_cards.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILists_cards::OAILists_cards(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILists_cards::OAILists_cards() {
    this->initializeModel();
}

OAILists_cards::~OAILists_cards() {}

void OAILists_cards::initializeModel() {

    m_desc_isSet = false;
    m_desc_isValid = false;

    m_due_isSet = false;
    m_due_isValid = false;

    m_id_members_isSet = false;
    m_id_members_isValid = false;

    m_labels_isSet = false;
    m_labels_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;
}

void OAILists_cards::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILists_cards::fromJsonObject(QJsonObject json) {

    m_desc_isValid = ::OpenAPI::fromJsonValue(m_desc, json[QString("desc")]);
    m_desc_isSet = !json[QString("desc")].isNull() && m_desc_isValid;

    m_due_isValid = ::OpenAPI::fromJsonValue(m_due, json[QString("due")]);
    m_due_isSet = !json[QString("due")].isNull() && m_due_isValid;

    m_id_members_isValid = ::OpenAPI::fromJsonValue(m_id_members, json[QString("idMembers")]);
    m_id_members_isSet = !json[QString("idMembers")].isNull() && m_id_members_isValid;

    m_labels_isValid = ::OpenAPI::fromJsonValue(m_labels, json[QString("labels")]);
    m_labels_isSet = !json[QString("labels")].isNull() && m_labels_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;
}

QString OAILists_cards::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILists_cards::asJsonObject() const {
    QJsonObject obj;
    if (m_desc_isSet) {
        obj.insert(QString("desc"), ::OpenAPI::toJsonValue(m_desc));
    }
    if (m_due_isSet) {
        obj.insert(QString("due"), ::OpenAPI::toJsonValue(m_due));
    }
    if (m_id_members_isSet) {
        obj.insert(QString("idMembers"), ::OpenAPI::toJsonValue(m_id_members));
    }
    if (m_labels_isSet) {
        obj.insert(QString("labels"), ::OpenAPI::toJsonValue(m_labels));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    return obj;
}

QString OAILists_cards::getDesc() const {
    return m_desc;
}
void OAILists_cards::setDesc(const QString &desc) {
    m_desc = desc;
    m_desc_isSet = true;
}

bool OAILists_cards::is_desc_Set() const{
    return m_desc_isSet;
}

bool OAILists_cards::is_desc_Valid() const{
    return m_desc_isValid;
}

QString OAILists_cards::getDue() const {
    return m_due;
}
void OAILists_cards::setDue(const QString &due) {
    m_due = due;
    m_due_isSet = true;
}

bool OAILists_cards::is_due_Set() const{
    return m_due_isSet;
}

bool OAILists_cards::is_due_Valid() const{
    return m_due_isValid;
}

QString OAILists_cards::getIdMembers() const {
    return m_id_members;
}
void OAILists_cards::setIdMembers(const QString &id_members) {
    m_id_members = id_members;
    m_id_members_isSet = true;
}

bool OAILists_cards::is_id_members_Set() const{
    return m_id_members_isSet;
}

bool OAILists_cards::is_id_members_Valid() const{
    return m_id_members_isValid;
}

QString OAILists_cards::getLabels() const {
    return m_labels;
}
void OAILists_cards::setLabels(const QString &labels) {
    m_labels = labels;
    m_labels_isSet = true;
}

bool OAILists_cards::is_labels_Set() const{
    return m_labels_isSet;
}

bool OAILists_cards::is_labels_Valid() const{
    return m_labels_isValid;
}

QString OAILists_cards::getName() const {
    return m_name;
}
void OAILists_cards::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAILists_cards::is_name_Set() const{
    return m_name_isSet;
}

bool OAILists_cards::is_name_Valid() const{
    return m_name_isValid;
}

bool OAILists_cards::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_desc_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_due_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_members_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_labels_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILists_cards::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
