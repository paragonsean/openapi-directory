/**
 * Trello
 * This document describes the REST API of Trello as published by Trello.com.  - <a href='https://trello.com/docs/index.html' target='_blank'>Official Documentation</a>  - <a href='https://trello.com/docs/api' target='_blank'>The HTML pages that were scraped in order to generate this specification.</a>
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Boards model module.
 * @module model/Boards
 * @version 1.0
 */
class Boards {
    /**
     * Constructs a new <code>Boards</code>.
     * @alias module:model/Boards
     */
    constructor() { 
        
        Boards.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Boards</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Boards} obj Optional instance to populate.
     * @return {module:model/Boards} The populated <code>Boards</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Boards();

            if (data.hasOwnProperty('closed')) {
                obj['closed'] = ApiClient.convertToType(data['closed'], 'String');
            }
            if (data.hasOwnProperty('desc')) {
                obj['desc'] = ApiClient.convertToType(data['desc'], 'String');
            }
            if (data.hasOwnProperty('idBoardSource')) {
                obj['idBoardSource'] = ApiClient.convertToType(data['idBoardSource'], 'String');
            }
            if (data.hasOwnProperty('idOrganization')) {
                obj['idOrganization'] = ApiClient.convertToType(data['idOrganization'], 'String');
            }
            if (data.hasOwnProperty('keepFromSource')) {
                obj['keepFromSource'] = ApiClient.convertToType(data['keepFromSource'], 'String');
            }
            if (data.hasOwnProperty('labelNames/blue')) {
                obj['labelNames/blue'] = ApiClient.convertToType(data['labelNames/blue'], 'String');
            }
            if (data.hasOwnProperty('labelNames/green')) {
                obj['labelNames/green'] = ApiClient.convertToType(data['labelNames/green'], 'String');
            }
            if (data.hasOwnProperty('labelNames/orange')) {
                obj['labelNames/orange'] = ApiClient.convertToType(data['labelNames/orange'], 'String');
            }
            if (data.hasOwnProperty('labelNames/purple')) {
                obj['labelNames/purple'] = ApiClient.convertToType(data['labelNames/purple'], 'String');
            }
            if (data.hasOwnProperty('labelNames/red')) {
                obj['labelNames/red'] = ApiClient.convertToType(data['labelNames/red'], 'String');
            }
            if (data.hasOwnProperty('labelNames/yellow')) {
                obj['labelNames/yellow'] = ApiClient.convertToType(data['labelNames/yellow'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('powerUps')) {
                obj['powerUps'] = ApiClient.convertToType(data['powerUps'], 'String');
            }
            if (data.hasOwnProperty('prefs/background')) {
                obj['prefs/background'] = ApiClient.convertToType(data['prefs/background'], 'String');
            }
            if (data.hasOwnProperty('prefs/calendarFeedEnabled')) {
                obj['prefs/calendarFeedEnabled'] = ApiClient.convertToType(data['prefs/calendarFeedEnabled'], 'String');
            }
            if (data.hasOwnProperty('prefs/cardAging')) {
                obj['prefs/cardAging'] = ApiClient.convertToType(data['prefs/cardAging'], 'String');
            }
            if (data.hasOwnProperty('prefs/cardCovers')) {
                obj['prefs/cardCovers'] = ApiClient.convertToType(data['prefs/cardCovers'], 'String');
            }
            if (data.hasOwnProperty('prefs/comments')) {
                obj['prefs/comments'] = ApiClient.convertToType(data['prefs/comments'], 'String');
            }
            if (data.hasOwnProperty('prefs/invitations')) {
                obj['prefs/invitations'] = ApiClient.convertToType(data['prefs/invitations'], 'String');
            }
            if (data.hasOwnProperty('prefs/permissionLevel')) {
                obj['prefs/permissionLevel'] = ApiClient.convertToType(data['prefs/permissionLevel'], 'String');
            }
            if (data.hasOwnProperty('prefs/selfJoin')) {
                obj['prefs/selfJoin'] = ApiClient.convertToType(data['prefs/selfJoin'], 'String');
            }
            if (data.hasOwnProperty('prefs/voting')) {
                obj['prefs/voting'] = ApiClient.convertToType(data['prefs/voting'], 'String');
            }
            if (data.hasOwnProperty('prefs_background')) {
                obj['prefs_background'] = ApiClient.convertToType(data['prefs_background'], 'String');
            }
            if (data.hasOwnProperty('prefs_cardAging')) {
                obj['prefs_cardAging'] = ApiClient.convertToType(data['prefs_cardAging'], 'String');
            }
            if (data.hasOwnProperty('prefs_cardCovers')) {
                obj['prefs_cardCovers'] = ApiClient.convertToType(data['prefs_cardCovers'], 'String');
            }
            if (data.hasOwnProperty('prefs_comments')) {
                obj['prefs_comments'] = ApiClient.convertToType(data['prefs_comments'], 'String');
            }
            if (data.hasOwnProperty('prefs_invitations')) {
                obj['prefs_invitations'] = ApiClient.convertToType(data['prefs_invitations'], 'String');
            }
            if (data.hasOwnProperty('prefs_permissionLevel')) {
                obj['prefs_permissionLevel'] = ApiClient.convertToType(data['prefs_permissionLevel'], 'String');
            }
            if (data.hasOwnProperty('prefs_selfJoin')) {
                obj['prefs_selfJoin'] = ApiClient.convertToType(data['prefs_selfJoin'], 'String');
            }
            if (data.hasOwnProperty('prefs_voting')) {
                obj['prefs_voting'] = ApiClient.convertToType(data['prefs_voting'], 'String');
            }
            if (data.hasOwnProperty('subscribed')) {
                obj['subscribed'] = ApiClient.convertToType(data['subscribed'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Boards</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Boards</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['closed'] && !(typeof data['closed'] === 'string' || data['closed'] instanceof String)) {
            throw new Error("Expected the field `closed` to be a primitive type in the JSON string but got " + data['closed']);
        }
        // ensure the json data is a string
        if (data['desc'] && !(typeof data['desc'] === 'string' || data['desc'] instanceof String)) {
            throw new Error("Expected the field `desc` to be a primitive type in the JSON string but got " + data['desc']);
        }
        // ensure the json data is a string
        if (data['idBoardSource'] && !(typeof data['idBoardSource'] === 'string' || data['idBoardSource'] instanceof String)) {
            throw new Error("Expected the field `idBoardSource` to be a primitive type in the JSON string but got " + data['idBoardSource']);
        }
        // ensure the json data is a string
        if (data['idOrganization'] && !(typeof data['idOrganization'] === 'string' || data['idOrganization'] instanceof String)) {
            throw new Error("Expected the field `idOrganization` to be a primitive type in the JSON string but got " + data['idOrganization']);
        }
        // ensure the json data is a string
        if (data['keepFromSource'] && !(typeof data['keepFromSource'] === 'string' || data['keepFromSource'] instanceof String)) {
            throw new Error("Expected the field `keepFromSource` to be a primitive type in the JSON string but got " + data['keepFromSource']);
        }
        // ensure the json data is a string
        if (data['labelNames/blue'] && !(typeof data['labelNames/blue'] === 'string' || data['labelNames/blue'] instanceof String)) {
            throw new Error("Expected the field `labelNames/blue` to be a primitive type in the JSON string but got " + data['labelNames/blue']);
        }
        // ensure the json data is a string
        if (data['labelNames/green'] && !(typeof data['labelNames/green'] === 'string' || data['labelNames/green'] instanceof String)) {
            throw new Error("Expected the field `labelNames/green` to be a primitive type in the JSON string but got " + data['labelNames/green']);
        }
        // ensure the json data is a string
        if (data['labelNames/orange'] && !(typeof data['labelNames/orange'] === 'string' || data['labelNames/orange'] instanceof String)) {
            throw new Error("Expected the field `labelNames/orange` to be a primitive type in the JSON string but got " + data['labelNames/orange']);
        }
        // ensure the json data is a string
        if (data['labelNames/purple'] && !(typeof data['labelNames/purple'] === 'string' || data['labelNames/purple'] instanceof String)) {
            throw new Error("Expected the field `labelNames/purple` to be a primitive type in the JSON string but got " + data['labelNames/purple']);
        }
        // ensure the json data is a string
        if (data['labelNames/red'] && !(typeof data['labelNames/red'] === 'string' || data['labelNames/red'] instanceof String)) {
            throw new Error("Expected the field `labelNames/red` to be a primitive type in the JSON string but got " + data['labelNames/red']);
        }
        // ensure the json data is a string
        if (data['labelNames/yellow'] && !(typeof data['labelNames/yellow'] === 'string' || data['labelNames/yellow'] instanceof String)) {
            throw new Error("Expected the field `labelNames/yellow` to be a primitive type in the JSON string but got " + data['labelNames/yellow']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['powerUps'] && !(typeof data['powerUps'] === 'string' || data['powerUps'] instanceof String)) {
            throw new Error("Expected the field `powerUps` to be a primitive type in the JSON string but got " + data['powerUps']);
        }
        // ensure the json data is a string
        if (data['prefs/background'] && !(typeof data['prefs/background'] === 'string' || data['prefs/background'] instanceof String)) {
            throw new Error("Expected the field `prefs/background` to be a primitive type in the JSON string but got " + data['prefs/background']);
        }
        // ensure the json data is a string
        if (data['prefs/calendarFeedEnabled'] && !(typeof data['prefs/calendarFeedEnabled'] === 'string' || data['prefs/calendarFeedEnabled'] instanceof String)) {
            throw new Error("Expected the field `prefs/calendarFeedEnabled` to be a primitive type in the JSON string but got " + data['prefs/calendarFeedEnabled']);
        }
        // ensure the json data is a string
        if (data['prefs/cardAging'] && !(typeof data['prefs/cardAging'] === 'string' || data['prefs/cardAging'] instanceof String)) {
            throw new Error("Expected the field `prefs/cardAging` to be a primitive type in the JSON string but got " + data['prefs/cardAging']);
        }
        // ensure the json data is a string
        if (data['prefs/cardCovers'] && !(typeof data['prefs/cardCovers'] === 'string' || data['prefs/cardCovers'] instanceof String)) {
            throw new Error("Expected the field `prefs/cardCovers` to be a primitive type in the JSON string but got " + data['prefs/cardCovers']);
        }
        // ensure the json data is a string
        if (data['prefs/comments'] && !(typeof data['prefs/comments'] === 'string' || data['prefs/comments'] instanceof String)) {
            throw new Error("Expected the field `prefs/comments` to be a primitive type in the JSON string but got " + data['prefs/comments']);
        }
        // ensure the json data is a string
        if (data['prefs/invitations'] && !(typeof data['prefs/invitations'] === 'string' || data['prefs/invitations'] instanceof String)) {
            throw new Error("Expected the field `prefs/invitations` to be a primitive type in the JSON string but got " + data['prefs/invitations']);
        }
        // ensure the json data is a string
        if (data['prefs/permissionLevel'] && !(typeof data['prefs/permissionLevel'] === 'string' || data['prefs/permissionLevel'] instanceof String)) {
            throw new Error("Expected the field `prefs/permissionLevel` to be a primitive type in the JSON string but got " + data['prefs/permissionLevel']);
        }
        // ensure the json data is a string
        if (data['prefs/selfJoin'] && !(typeof data['prefs/selfJoin'] === 'string' || data['prefs/selfJoin'] instanceof String)) {
            throw new Error("Expected the field `prefs/selfJoin` to be a primitive type in the JSON string but got " + data['prefs/selfJoin']);
        }
        // ensure the json data is a string
        if (data['prefs/voting'] && !(typeof data['prefs/voting'] === 'string' || data['prefs/voting'] instanceof String)) {
            throw new Error("Expected the field `prefs/voting` to be a primitive type in the JSON string but got " + data['prefs/voting']);
        }
        // ensure the json data is a string
        if (data['prefs_background'] && !(typeof data['prefs_background'] === 'string' || data['prefs_background'] instanceof String)) {
            throw new Error("Expected the field `prefs_background` to be a primitive type in the JSON string but got " + data['prefs_background']);
        }
        // ensure the json data is a string
        if (data['prefs_cardAging'] && !(typeof data['prefs_cardAging'] === 'string' || data['prefs_cardAging'] instanceof String)) {
            throw new Error("Expected the field `prefs_cardAging` to be a primitive type in the JSON string but got " + data['prefs_cardAging']);
        }
        // ensure the json data is a string
        if (data['prefs_cardCovers'] && !(typeof data['prefs_cardCovers'] === 'string' || data['prefs_cardCovers'] instanceof String)) {
            throw new Error("Expected the field `prefs_cardCovers` to be a primitive type in the JSON string but got " + data['prefs_cardCovers']);
        }
        // ensure the json data is a string
        if (data['prefs_comments'] && !(typeof data['prefs_comments'] === 'string' || data['prefs_comments'] instanceof String)) {
            throw new Error("Expected the field `prefs_comments` to be a primitive type in the JSON string but got " + data['prefs_comments']);
        }
        // ensure the json data is a string
        if (data['prefs_invitations'] && !(typeof data['prefs_invitations'] === 'string' || data['prefs_invitations'] instanceof String)) {
            throw new Error("Expected the field `prefs_invitations` to be a primitive type in the JSON string but got " + data['prefs_invitations']);
        }
        // ensure the json data is a string
        if (data['prefs_permissionLevel'] && !(typeof data['prefs_permissionLevel'] === 'string' || data['prefs_permissionLevel'] instanceof String)) {
            throw new Error("Expected the field `prefs_permissionLevel` to be a primitive type in the JSON string but got " + data['prefs_permissionLevel']);
        }
        // ensure the json data is a string
        if (data['prefs_selfJoin'] && !(typeof data['prefs_selfJoin'] === 'string' || data['prefs_selfJoin'] instanceof String)) {
            throw new Error("Expected the field `prefs_selfJoin` to be a primitive type in the JSON string but got " + data['prefs_selfJoin']);
        }
        // ensure the json data is a string
        if (data['prefs_voting'] && !(typeof data['prefs_voting'] === 'string' || data['prefs_voting'] instanceof String)) {
            throw new Error("Expected the field `prefs_voting` to be a primitive type in the JSON string but got " + data['prefs_voting']);
        }
        // ensure the json data is a string
        if (data['subscribed'] && !(typeof data['subscribed'] === 'string' || data['subscribed'] instanceof String)) {
            throw new Error("Expected the field `subscribed` to be a primitive type in the JSON string but got " + data['subscribed']);
        }

        return true;
    }


}



/**
 *  true or false
 * @member {String} closed
 */
Boards.prototype['closed'] = undefined;

/**
 * a string with a length from 0 to 16384
 * @member {String} desc
 */
Boards.prototype['desc'] = undefined;

/**
 * The id of the board to copy into the new board
 * @member {String} idBoardSource
 */
Boards.prototype['idBoardSource'] = undefined;

/**
 * The id or name of the organization to add the board to.
 * @member {String} idOrganization
 */
Boards.prototype['idOrganization'] = undefined;

/**
 * Components of the source board to copy.
 * @member {String} keepFromSource
 */
Boards.prototype['keepFromSource'] = undefined;

/**
 * a string with a length from 0 to 16384
 * @member {String} labelNames/blue
 */
Boards.prototype['labelNames/blue'] = undefined;

/**
 * a string with a length from 0 to 16384
 * @member {String} labelNames/green
 */
Boards.prototype['labelNames/green'] = undefined;

/**
 * a string with a length from 0 to 16384
 * @member {String} labelNames/orange
 */
Boards.prototype['labelNames/orange'] = undefined;

/**
 * a string with a length from 0 to 16384
 * @member {String} labelNames/purple
 */
Boards.prototype['labelNames/purple'] = undefined;

/**
 * a string with a length from 0 to 16384
 * @member {String} labelNames/red
 */
Boards.prototype['labelNames/red'] = undefined;

/**
 * a string with a length from 0 to 16384
 * @member {String} labelNames/yellow
 */
Boards.prototype['labelNames/yellow'] = undefined;

/**
 * a string with a length from 1 to 16384
 * @member {String} name
 */
Boards.prototype['name'] = undefined;

/**
 * all or a comma-separated list of: calendar, cardAging, recap or voting
 * @member {String} powerUps
 */
Boards.prototype['powerUps'] = undefined;

/**
 * A standard background name, or the id of a custom background
 * @member {String} prefs/background
 */
Boards.prototype['prefs/background'] = undefined;

/**
 *  true or false
 * @member {String} prefs/calendarFeedEnabled
 */
Boards.prototype['prefs/calendarFeedEnabled'] = undefined;

/**
 * One of: pirate or regular
 * @member {String} prefs/cardAging
 */
Boards.prototype['prefs/cardAging'] = undefined;

/**
 *  true or false
 * @member {String} prefs/cardCovers
 */
Boards.prototype['prefs/cardCovers'] = undefined;

/**
 * One of: disabled, members, observers, org or public
 * @member {String} prefs/comments
 */
Boards.prototype['prefs/comments'] = undefined;

/**
 * One of: admins or members
 * @member {String} prefs/invitations
 */
Boards.prototype['prefs/invitations'] = undefined;

/**
 * One of: org, private or public
 * @member {String} prefs/permissionLevel
 */
Boards.prototype['prefs/permissionLevel'] = undefined;

/**
 *  true or false
 * @member {String} prefs/selfJoin
 */
Boards.prototype['prefs/selfJoin'] = undefined;

/**
 * One of: disabled, members, observers, org or public
 * @member {String} prefs/voting
 */
Boards.prototype['prefs/voting'] = undefined;

/**
 * a string with a length from 0 to 16384
 * @member {String} prefs_background
 */
Boards.prototype['prefs_background'] = undefined;

/**
 * One of: pirate or regular
 * @member {String} prefs_cardAging
 */
Boards.prototype['prefs_cardAging'] = undefined;

/**
 *  true or false
 * @member {String} prefs_cardCovers
 */
Boards.prototype['prefs_cardCovers'] = undefined;

/**
 * One of: disabled, members, observers, org or public
 * @member {String} prefs_comments
 */
Boards.prototype['prefs_comments'] = undefined;

/**
 * One of: admins or members
 * @member {String} prefs_invitations
 */
Boards.prototype['prefs_invitations'] = undefined;

/**
 * One of: org, private or public
 * @member {String} prefs_permissionLevel
 */
Boards.prototype['prefs_permissionLevel'] = undefined;

/**
 *  true or false
 * @member {String} prefs_selfJoin
 */
Boards.prototype['prefs_selfJoin'] = undefined;

/**
 * One of: disabled, members, observers, org or public
 * @member {String} prefs_voting
 */
Boards.prototype['prefs_voting'] = undefined;

/**
 *  true or false
 * @member {String} subscribed
 */
Boards.prototype['subscribed'] = undefined;






export default Boards;

