/**
 * Trello
 * This document describes the REST API of Trello as published by Trello.com.  - <a href='https://trello.com/docs/index.html' target='_blank'>Official Documentation</a>  - <a href='https://trello.com/docs/api' target='_blank'>The HTML pages that were scraped in order to generate this specification.</a>
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ListsCards model module.
 * @module model/ListsCards
 * @version 1.0
 */
class ListsCards {
    /**
     * Constructs a new <code>ListsCards</code>.
     * @alias module:model/ListsCards
     */
    constructor() { 
        
        ListsCards.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ListsCards</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ListsCards} obj Optional instance to populate.
     * @return {module:model/ListsCards} The populated <code>ListsCards</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ListsCards();

            if (data.hasOwnProperty('desc')) {
                obj['desc'] = ApiClient.convertToType(data['desc'], 'String');
            }
            if (data.hasOwnProperty('due')) {
                obj['due'] = ApiClient.convertToType(data['due'], 'String');
            }
            if (data.hasOwnProperty('idMembers')) {
                obj['idMembers'] = ApiClient.convertToType(data['idMembers'], 'String');
            }
            if (data.hasOwnProperty('labels')) {
                obj['labels'] = ApiClient.convertToType(data['labels'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ListsCards</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ListsCards</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['desc'] && !(typeof data['desc'] === 'string' || data['desc'] instanceof String)) {
            throw new Error("Expected the field `desc` to be a primitive type in the JSON string but got " + data['desc']);
        }
        // ensure the json data is a string
        if (data['due'] && !(typeof data['due'] === 'string' || data['due'] instanceof String)) {
            throw new Error("Expected the field `due` to be a primitive type in the JSON string but got " + data['due']);
        }
        // ensure the json data is a string
        if (data['idMembers'] && !(typeof data['idMembers'] === 'string' || data['idMembers'] instanceof String)) {
            throw new Error("Expected the field `idMembers` to be a primitive type in the JSON string but got " + data['idMembers']);
        }
        // ensure the json data is a string
        if (data['labels'] && !(typeof data['labels'] === 'string' || data['labels'] instanceof String)) {
            throw new Error("Expected the field `labels` to be a primitive type in the JSON string but got " + data['labels']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }

        return true;
    }


}



/**
 * a string with a length from 0 to 16384
 * @member {String} desc
 */
ListsCards.prototype['desc'] = undefined;

/**
 * A date, or null
 * @member {String} due
 */
ListsCards.prototype['due'] = undefined;

/**
 * A comma-separated list of objectIds, 24-character hex strings
 * @member {String} idMembers
 */
ListsCards.prototype['idMembers'] = undefined;

/**
 * all or a comma-separated list of: blue, green, orange, purple, red or yellow
 * @member {String} labels
 */
ListsCards.prototype['labels'] = undefined;

/**
 * a string with a length from 1 to 16384
 * @member {String} name
 */
ListsCards.prototype['name'] = undefined;






export default ListsCards;

