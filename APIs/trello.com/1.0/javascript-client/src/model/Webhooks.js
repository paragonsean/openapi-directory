/**
 * Trello
 * This document describes the REST API of Trello as published by Trello.com.  - <a href='https://trello.com/docs/index.html' target='_blank'>Official Documentation</a>  - <a href='https://trello.com/docs/api' target='_blank'>The HTML pages that were scraped in order to generate this specification.</a>
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Webhooks model module.
 * @module model/Webhooks
 * @version 1.0
 */
class Webhooks {
    /**
     * Constructs a new <code>Webhooks</code>.
     * @alias module:model/Webhooks
     */
    constructor() { 
        
        Webhooks.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Webhooks</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Webhooks} obj Optional instance to populate.
     * @return {module:model/Webhooks} The populated <code>Webhooks</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Webhooks();

            if (data.hasOwnProperty('active')) {
                obj['active'] = ApiClient.convertToType(data['active'], 'String');
            }
            if (data.hasOwnProperty('callbackURL')) {
                obj['callbackURL'] = ApiClient.convertToType(data['callbackURL'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('idModel')) {
                obj['idModel'] = ApiClient.convertToType(data['idModel'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Webhooks</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Webhooks</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['active'] && !(typeof data['active'] === 'string' || data['active'] instanceof String)) {
            throw new Error("Expected the field `active` to be a primitive type in the JSON string but got " + data['active']);
        }
        // ensure the json data is a string
        if (data['callbackURL'] && !(typeof data['callbackURL'] === 'string' || data['callbackURL'] instanceof String)) {
            throw new Error("Expected the field `callbackURL` to be a primitive type in the JSON string but got " + data['callbackURL']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['idModel'] && !(typeof data['idModel'] === 'string' || data['idModel'] instanceof String)) {
            throw new Error("Expected the field `idModel` to be a primitive type in the JSON string but got " + data['idModel']);
        }

        return true;
    }


}



/**
 *  true or false
 * @member {String} active
 */
Webhooks.prototype['active'] = undefined;

/**
 * A valid URL that is reachable with a HEAD request
 * @member {String} callbackURL
 */
Webhooks.prototype['callbackURL'] = undefined;

/**
 * a string with a length from 0 to 16384
 * @member {String} description
 */
Webhooks.prototype['description'] = undefined;

/**
 * id of the model that should be hooked
 * @member {String} idModel
 */
Webhooks.prototype['idModel'] = undefined;






export default Webhooks;

