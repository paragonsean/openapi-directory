/**
 * Trello
 * This document describes the REST API of Trello as published by Trello.com.  - <a href='https://trello.com/docs/index.html' target='_blank'>Official Documentation</a>  - <a href='https://trello.com/docs/api' target='_blank'>The HTML pages that were scraped in order to generate this specification.</a>
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Trello);
  }
}(this, function(expect, Trello) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Trello.ListApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ListApi', function() {
    describe('addLists', function() {
      it('should call addLists successfully', function(done) {
        //uncomment below and update the code to test addLists
        //instance.addLists(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('addListsArchiveAllCardsByIdList', function() {
      it('should call addListsArchiveAllCardsByIdList successfully', function(done) {
        //uncomment below and update the code to test addListsArchiveAllCardsByIdList
        //instance.addListsArchiveAllCardsByIdList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('addListsCardsByIdList', function() {
      it('should call addListsCardsByIdList successfully', function(done) {
        //uncomment below and update the code to test addListsCardsByIdList
        //instance.addListsCardsByIdList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('addListsMoveAllCardsByIdList', function() {
      it('should call addListsMoveAllCardsByIdList successfully', function(done) {
        //uncomment below and update the code to test addListsMoveAllCardsByIdList
        //instance.addListsMoveAllCardsByIdList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getListsActionsByIdList', function() {
      it('should call getListsActionsByIdList successfully', function(done) {
        //uncomment below and update the code to test getListsActionsByIdList
        //instance.getListsActionsByIdList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getListsBoardByIdList', function() {
      it('should call getListsBoardByIdList successfully', function(done) {
        //uncomment below and update the code to test getListsBoardByIdList
        //instance.getListsBoardByIdList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getListsBoardByIdListByField', function() {
      it('should call getListsBoardByIdListByField successfully', function(done) {
        //uncomment below and update the code to test getListsBoardByIdListByField
        //instance.getListsBoardByIdListByField(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getListsByIdList', function() {
      it('should call getListsByIdList successfully', function(done) {
        //uncomment below and update the code to test getListsByIdList
        //instance.getListsByIdList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getListsByIdListByField', function() {
      it('should call getListsByIdListByField successfully', function(done) {
        //uncomment below and update the code to test getListsByIdListByField
        //instance.getListsByIdListByField(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getListsCardsByIdList', function() {
      it('should call getListsCardsByIdList successfully', function(done) {
        //uncomment below and update the code to test getListsCardsByIdList
        //instance.getListsCardsByIdList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getListsCardsByIdListByFilter', function() {
      it('should call getListsCardsByIdListByFilter successfully', function(done) {
        //uncomment below and update the code to test getListsCardsByIdListByFilter
        //instance.getListsCardsByIdListByFilter(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateListsByIdList', function() {
      it('should call updateListsByIdList successfully', function(done) {
        //uncomment below and update the code to test updateListsByIdList
        //instance.updateListsByIdList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateListsClosedByIdList', function() {
      it('should call updateListsClosedByIdList successfully', function(done) {
        //uncomment below and update the code to test updateListsClosedByIdList
        //instance.updateListsClosedByIdList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateListsIdBoardByIdList', function() {
      it('should call updateListsIdBoardByIdList successfully', function(done) {
        //uncomment below and update the code to test updateListsIdBoardByIdList
        //instance.updateListsIdBoardByIdList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateListsNameByIdList', function() {
      it('should call updateListsNameByIdList successfully', function(done) {
        //uncomment below and update the code to test updateListsNameByIdList
        //instance.updateListsNameByIdList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateListsPosByIdList', function() {
      it('should call updateListsPosByIdList successfully', function(done) {
        //uncomment below and update the code to test updateListsPosByIdList
        //instance.updateListsPosByIdList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateListsSubscribedByIdList', function() {
      it('should call updateListsSubscribedByIdList successfully', function(done) {
        //uncomment below and update the code to test updateListsSubscribedByIdList
        //instance.updateListsSubscribedByIdList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
