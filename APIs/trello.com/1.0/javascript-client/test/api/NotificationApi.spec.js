/**
 * Trello
 * This document describes the REST API of Trello as published by Trello.com.  - <a href='https://trello.com/docs/index.html' target='_blank'>Official Documentation</a>  - <a href='https://trello.com/docs/api' target='_blank'>The HTML pages that were scraped in order to generate this specification.</a>
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Trello);
  }
}(this, function(expect, Trello) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Trello.NotificationApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('NotificationApi', function() {
    describe('addNotificationsAllRead', function() {
      it('should call addNotificationsAllRead successfully', function(done) {
        //uncomment below and update the code to test addNotificationsAllRead
        //instance.addNotificationsAllRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNotificationsBoardByIdNotification', function() {
      it('should call getNotificationsBoardByIdNotification successfully', function(done) {
        //uncomment below and update the code to test getNotificationsBoardByIdNotification
        //instance.getNotificationsBoardByIdNotification(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNotificationsBoardByIdNotificationByField', function() {
      it('should call getNotificationsBoardByIdNotificationByField successfully', function(done) {
        //uncomment below and update the code to test getNotificationsBoardByIdNotificationByField
        //instance.getNotificationsBoardByIdNotificationByField(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNotificationsByIdNotification', function() {
      it('should call getNotificationsByIdNotification successfully', function(done) {
        //uncomment below and update the code to test getNotificationsByIdNotification
        //instance.getNotificationsByIdNotification(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNotificationsByIdNotificationByField', function() {
      it('should call getNotificationsByIdNotificationByField successfully', function(done) {
        //uncomment below and update the code to test getNotificationsByIdNotificationByField
        //instance.getNotificationsByIdNotificationByField(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNotificationsCardByIdNotification', function() {
      it('should call getNotificationsCardByIdNotification successfully', function(done) {
        //uncomment below and update the code to test getNotificationsCardByIdNotification
        //instance.getNotificationsCardByIdNotification(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNotificationsCardByIdNotificationByField', function() {
      it('should call getNotificationsCardByIdNotificationByField successfully', function(done) {
        //uncomment below and update the code to test getNotificationsCardByIdNotificationByField
        //instance.getNotificationsCardByIdNotificationByField(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNotificationsDisplayByIdNotification', function() {
      it('should call getNotificationsDisplayByIdNotification successfully', function(done) {
        //uncomment below and update the code to test getNotificationsDisplayByIdNotification
        //instance.getNotificationsDisplayByIdNotification(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNotificationsEntitiesByIdNotification', function() {
      it('should call getNotificationsEntitiesByIdNotification successfully', function(done) {
        //uncomment below and update the code to test getNotificationsEntitiesByIdNotification
        //instance.getNotificationsEntitiesByIdNotification(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNotificationsListByIdNotification', function() {
      it('should call getNotificationsListByIdNotification successfully', function(done) {
        //uncomment below and update the code to test getNotificationsListByIdNotification
        //instance.getNotificationsListByIdNotification(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNotificationsListByIdNotificationByField', function() {
      it('should call getNotificationsListByIdNotificationByField successfully', function(done) {
        //uncomment below and update the code to test getNotificationsListByIdNotificationByField
        //instance.getNotificationsListByIdNotificationByField(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNotificationsMemberByIdNotification', function() {
      it('should call getNotificationsMemberByIdNotification successfully', function(done) {
        //uncomment below and update the code to test getNotificationsMemberByIdNotification
        //instance.getNotificationsMemberByIdNotification(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNotificationsMemberByIdNotificationByField', function() {
      it('should call getNotificationsMemberByIdNotificationByField successfully', function(done) {
        //uncomment below and update the code to test getNotificationsMemberByIdNotificationByField
        //instance.getNotificationsMemberByIdNotificationByField(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNotificationsMemberCreatorByIdNotification', function() {
      it('should call getNotificationsMemberCreatorByIdNotification successfully', function(done) {
        //uncomment below and update the code to test getNotificationsMemberCreatorByIdNotification
        //instance.getNotificationsMemberCreatorByIdNotification(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNotificationsMemberCreatorByIdNotificationByField', function() {
      it('should call getNotificationsMemberCreatorByIdNotificationByField successfully', function(done) {
        //uncomment below and update the code to test getNotificationsMemberCreatorByIdNotificationByField
        //instance.getNotificationsMemberCreatorByIdNotificationByField(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNotificationsOrganizationByIdNotification', function() {
      it('should call getNotificationsOrganizationByIdNotification successfully', function(done) {
        //uncomment below and update the code to test getNotificationsOrganizationByIdNotification
        //instance.getNotificationsOrganizationByIdNotification(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getNotificationsOrganizationByIdNotificationByField', function() {
      it('should call getNotificationsOrganizationByIdNotificationByField successfully', function(done) {
        //uncomment below and update the code to test getNotificationsOrganizationByIdNotificationByField
        //instance.getNotificationsOrganizationByIdNotificationByField(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateNotificationsByIdNotification', function() {
      it('should call updateNotificationsByIdNotification successfully', function(done) {
        //uncomment below and update the code to test updateNotificationsByIdNotification
        //instance.updateNotificationsByIdNotification(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateNotificationsUnreadByIdNotification', function() {
      it('should call updateNotificationsUnreadByIdNotification successfully', function(done) {
        //uncomment below and update the code to test updateNotificationsUnreadByIdNotification
        //instance.updateNotificationsUnreadByIdNotification(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
