/**
 * Trello
 * This document describes the REST API of Trello as published by Trello.com.  - <a href='https://trello.com/docs/index.html' target='_blank'>Official Documentation</a>  - <a href='https://trello.com/docs/api' target='_blank'>The HTML pages that were scraped in order to generate this specification.</a>
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Trello);
  }
}(this, function(expect, Trello) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Trello.TokenApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('TokenApi', function() {
    describe('addTokensWebhooksByToken', function() {
      it('should call addTokensWebhooksByToken successfully', function(done) {
        //uncomment below and update the code to test addTokensWebhooksByToken
        //instance.addTokensWebhooksByToken(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteTokensByToken', function() {
      it('should call deleteTokensByToken successfully', function(done) {
        //uncomment below and update the code to test deleteTokensByToken
        //instance.deleteTokensByToken(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteTokensWebhooksByTokenByIdWebhook', function() {
      it('should call deleteTokensWebhooksByTokenByIdWebhook successfully', function(done) {
        //uncomment below and update the code to test deleteTokensWebhooksByTokenByIdWebhook
        //instance.deleteTokensWebhooksByTokenByIdWebhook(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTokensByToken', function() {
      it('should call getTokensByToken successfully', function(done) {
        //uncomment below and update the code to test getTokensByToken
        //instance.getTokensByToken(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTokensByTokenByField', function() {
      it('should call getTokensByTokenByField successfully', function(done) {
        //uncomment below and update the code to test getTokensByTokenByField
        //instance.getTokensByTokenByField(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTokensMemberByToken', function() {
      it('should call getTokensMemberByToken successfully', function(done) {
        //uncomment below and update the code to test getTokensMemberByToken
        //instance.getTokensMemberByToken(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTokensMemberByTokenByField', function() {
      it('should call getTokensMemberByTokenByField successfully', function(done) {
        //uncomment below and update the code to test getTokensMemberByTokenByField
        //instance.getTokensMemberByTokenByField(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTokensWebhooksByToken', function() {
      it('should call getTokensWebhooksByToken successfully', function(done) {
        //uncomment below and update the code to test getTokensWebhooksByToken
        //instance.getTokensWebhooksByToken(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTokensWebhooksByTokenByIdWebhook', function() {
      it('should call getTokensWebhooksByTokenByIdWebhook successfully', function(done) {
        //uncomment below and update the code to test getTokensWebhooksByTokenByIdWebhook
        //instance.getTokensWebhooksByTokenByIdWebhook(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateTokensWebhooksByToken', function() {
      it('should call updateTokensWebhooksByToken successfully', function(done) {
        //uncomment below and update the code to test updateTokensWebhooksByToken
        //instance.updateTokensWebhooksByToken(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
