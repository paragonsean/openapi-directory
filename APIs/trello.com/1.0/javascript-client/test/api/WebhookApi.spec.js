/**
 * Trello
 * This document describes the REST API of Trello as published by Trello.com.  - <a href='https://trello.com/docs/index.html' target='_blank'>Official Documentation</a>  - <a href='https://trello.com/docs/api' target='_blank'>The HTML pages that were scraped in order to generate this specification.</a>
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Trello);
  }
}(this, function(expect, Trello) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Trello.WebhookApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('WebhookApi', function() {
    describe('addWebhooks', function() {
      it('should call addWebhooks successfully', function(done) {
        //uncomment below and update the code to test addWebhooks
        //instance.addWebhooks(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteWebhooksByIdWebhook', function() {
      it('should call deleteWebhooksByIdWebhook successfully', function(done) {
        //uncomment below and update the code to test deleteWebhooksByIdWebhook
        //instance.deleteWebhooksByIdWebhook(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getWebhooksByIdWebhook', function() {
      it('should call getWebhooksByIdWebhook successfully', function(done) {
        //uncomment below and update the code to test getWebhooksByIdWebhook
        //instance.getWebhooksByIdWebhook(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getWebhooksByIdWebhookByField', function() {
      it('should call getWebhooksByIdWebhookByField successfully', function(done) {
        //uncomment below and update the code to test getWebhooksByIdWebhookByField
        //instance.getWebhooksByIdWebhookByField(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateWebhooks', function() {
      it('should call updateWebhooks successfully', function(done) {
        //uncomment below and update the code to test updateWebhooks
        //instance.updateWebhooks(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateWebhooksActiveByIdWebhook', function() {
      it('should call updateWebhooksActiveByIdWebhook successfully', function(done) {
        //uncomment below and update the code to test updateWebhooksActiveByIdWebhook
        //instance.updateWebhooksActiveByIdWebhook(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateWebhooksByIdWebhook', function() {
      it('should call updateWebhooksByIdWebhook successfully', function(done) {
        //uncomment below and update the code to test updateWebhooksByIdWebhook
        //instance.updateWebhooksByIdWebhook(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateWebhooksCallbackURLByIdWebhook', function() {
      it('should call updateWebhooksCallbackURLByIdWebhook successfully', function(done) {
        //uncomment below and update the code to test updateWebhooksCallbackURLByIdWebhook
        //instance.updateWebhooksCallbackURLByIdWebhook(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateWebhooksDescriptionByIdWebhook', function() {
      it('should call updateWebhooksDescriptionByIdWebhook successfully', function(done) {
        //uncomment below and update the code to test updateWebhooksDescriptionByIdWebhook
        //instance.updateWebhooksDescriptionByIdWebhook(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateWebhooksIdModelByIdWebhook', function() {
      it('should call updateWebhooksIdModelByIdWebhook successfully', function(done) {
        //uncomment below and update the code to test updateWebhooksIdModelByIdWebhook
        //instance.updateWebhooksIdModelByIdWebhook(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
