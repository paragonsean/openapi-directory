/**
 * Trello
 * This document describes the REST API of Trello as published by Trello.com.  - <a href='https://trello.com/docs/index.html' target='_blank'>Official Documentation</a>  - <a href='https://trello.com/docs/api' target='_blank'>The HTML pages that were scraped in order to generate this specification.</a>
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Trello);
  }
}(this, function(expect, Trello) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Trello.Organizations();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Organizations', function() {
    it('should create an instance of Organizations', function() {
      // uncomment below and update the code to test Organizations
      //var instance = new Trello.Organizations();
      //expect(instance).to.be.a(Trello.Organizations);
    });

    it('should have the property desc (base name: "desc")', function() {
      // uncomment below and update the code to test the property desc
      //var instance = new Trello.Organizations();
      //expect(instance).to.be();
    });

    it('should have the property displayName (base name: "displayName")', function() {
      // uncomment below and update the code to test the property displayName
      //var instance = new Trello.Organizations();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new Trello.Organizations();
      //expect(instance).to.be();
    });

    it('should have the property prefsAssociatedDomain (base name: "prefs/associatedDomain")', function() {
      // uncomment below and update the code to test the property prefsAssociatedDomain
      //var instance = new Trello.Organizations();
      //expect(instance).to.be();
    });

    it('should have the property prefsBoardVisibilityRestrictOrg (base name: "prefs/boardVisibilityRestrict/org")', function() {
      // uncomment below and update the code to test the property prefsBoardVisibilityRestrictOrg
      //var instance = new Trello.Organizations();
      //expect(instance).to.be();
    });

    it('should have the property prefsBoardVisibilityRestrictPrivate (base name: "prefs/boardVisibilityRestrict/private")', function() {
      // uncomment below and update the code to test the property prefsBoardVisibilityRestrictPrivate
      //var instance = new Trello.Organizations();
      //expect(instance).to.be();
    });

    it('should have the property prefsBoardVisibilityRestrictPublic (base name: "prefs/boardVisibilityRestrict/public")', function() {
      // uncomment below and update the code to test the property prefsBoardVisibilityRestrictPublic
      //var instance = new Trello.Organizations();
      //expect(instance).to.be();
    });

    it('should have the property prefsExternalMembersDisabled (base name: "prefs/externalMembersDisabled")', function() {
      // uncomment below and update the code to test the property prefsExternalMembersDisabled
      //var instance = new Trello.Organizations();
      //expect(instance).to.be();
    });

    it('should have the property prefsGoogleAppsVersion (base name: "prefs/googleAppsVersion")', function() {
      // uncomment below and update the code to test the property prefsGoogleAppsVersion
      //var instance = new Trello.Organizations();
      //expect(instance).to.be();
    });

    it('should have the property prefsOrgInviteRestrict (base name: "prefs/orgInviteRestrict")', function() {
      // uncomment below and update the code to test the property prefsOrgInviteRestrict
      //var instance = new Trello.Organizations();
      //expect(instance).to.be();
    });

    it('should have the property prefsPermissionLevel (base name: "prefs/permissionLevel")', function() {
      // uncomment below and update the code to test the property prefsPermissionLevel
      //var instance = new Trello.Organizations();
      //expect(instance).to.be();
    });

    it('should have the property website (base name: "website")', function() {
      // uncomment below and update the code to test the property website
      //var instance = new Trello.Organizations();
      //expect(instance).to.be();
    });

  });

}));
