/**
 * Trello
 * This document describes the REST API of Trello as published by Trello.com.  - <a href='https://trello.com/docs/index.html' target='_blank'>Official Documentation</a>  - <a href='https://trello.com/docs/api' target='_blank'>The HTML pages that were scraped in order to generate this specification.</a>
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Trello);
  }
}(this, function(expect, Trello) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Trello.Boards();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Boards', function() {
    it('should create an instance of Boards', function() {
      // uncomment below and update the code to test Boards
      //var instance = new Trello.Boards();
      //expect(instance).to.be.a(Trello.Boards);
    });

    it('should have the property closed (base name: "closed")', function() {
      // uncomment below and update the code to test the property closed
      //var instance = new Trello.Boards();
      //expect(instance).to.be();
    });

    it('should have the property desc (base name: "desc")', function() {
      // uncomment below and update the code to test the property desc
      //var instance = new Trello.Boards();
      //expect(instance).to.be();
    });

    it('should have the property idBoardSource (base name: "idBoardSource")', function() {
      // uncomment below and update the code to test the property idBoardSource
      //var instance = new Trello.Boards();
      //expect(instance).to.be();
    });

    it('should have the property idOrganization (base name: "idOrganization")', function() {
      // uncomment below and update the code to test the property idOrganization
      //var instance = new Trello.Boards();
      //expect(instance).to.be();
    });

    it('should have the property keepFromSource (base name: "keepFromSource")', function() {
      // uncomment below and update the code to test the property keepFromSource
      //var instance = new Trello.Boards();
      //expect(instance).to.be();
    });

    it('should have the property labelNamesBlue (base name: "labelNames/blue")', function() {
      // uncomment below and update the code to test the property labelNamesBlue
      //var instance = new Trello.Boards();
      //expect(instance).to.be();
    });

    it('should have the property labelNamesGreen (base name: "labelNames/green")', function() {
      // uncomment below and update the code to test the property labelNamesGreen
      //var instance = new Trello.Boards();
      //expect(instance).to.be();
    });

    it('should have the property labelNamesOrange (base name: "labelNames/orange")', function() {
      // uncomment below and update the code to test the property labelNamesOrange
      //var instance = new Trello.Boards();
      //expect(instance).to.be();
    });

    it('should have the property labelNamesPurple (base name: "labelNames/purple")', function() {
      // uncomment below and update the code to test the property labelNamesPurple
      //var instance = new Trello.Boards();
      //expect(instance).to.be();
    });

    it('should have the property labelNamesRed (base name: "labelNames/red")', function() {
      // uncomment below and update the code to test the property labelNamesRed
      //var instance = new Trello.Boards();
      //expect(instance).to.be();
    });

    it('should have the property labelNamesYellow (base name: "labelNames/yellow")', function() {
      // uncomment below and update the code to test the property labelNamesYellow
      //var instance = new Trello.Boards();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new Trello.Boards();
      //expect(instance).to.be();
    });

    it('should have the property powerUps (base name: "powerUps")', function() {
      // uncomment below and update the code to test the property powerUps
      //var instance = new Trello.Boards();
      //expect(instance).to.be();
    });

    it('should have the property prefsBackground (base name: "prefs/background")', function() {
      // uncomment below and update the code to test the property prefsBackground
      //var instance = new Trello.Boards();
      //expect(instance).to.be();
    });

    it('should have the property prefsCalendarFeedEnabled (base name: "prefs/calendarFeedEnabled")', function() {
      // uncomment below and update the code to test the property prefsCalendarFeedEnabled
      //var instance = new Trello.Boards();
      //expect(instance).to.be();
    });

    it('should have the property prefsCardAging (base name: "prefs/cardAging")', function() {
      // uncomment below and update the code to test the property prefsCardAging
      //var instance = new Trello.Boards();
      //expect(instance).to.be();
    });

    it('should have the property prefsCardCovers (base name: "prefs/cardCovers")', function() {
      // uncomment below and update the code to test the property prefsCardCovers
      //var instance = new Trello.Boards();
      //expect(instance).to.be();
    });

    it('should have the property prefsComments (base name: "prefs/comments")', function() {
      // uncomment below and update the code to test the property prefsComments
      //var instance = new Trello.Boards();
      //expect(instance).to.be();
    });

    it('should have the property prefsInvitations (base name: "prefs/invitations")', function() {
      // uncomment below and update the code to test the property prefsInvitations
      //var instance = new Trello.Boards();
      //expect(instance).to.be();
    });

    it('should have the property prefsPermissionLevel (base name: "prefs/permissionLevel")', function() {
      // uncomment below and update the code to test the property prefsPermissionLevel
      //var instance = new Trello.Boards();
      //expect(instance).to.be();
    });

    it('should have the property prefsSelfJoin (base name: "prefs/selfJoin")', function() {
      // uncomment below and update the code to test the property prefsSelfJoin
      //var instance = new Trello.Boards();
      //expect(instance).to.be();
    });

    it('should have the property prefsVoting (base name: "prefs/voting")', function() {
      // uncomment below and update the code to test the property prefsVoting
      //var instance = new Trello.Boards();
      //expect(instance).to.be();
    });

    it('should have the property prefsBackground (base name: "prefs_background")', function() {
      // uncomment below and update the code to test the property prefsBackground
      //var instance = new Trello.Boards();
      //expect(instance).to.be();
    });

    it('should have the property prefsCardAging (base name: "prefs_cardAging")', function() {
      // uncomment below and update the code to test the property prefsCardAging
      //var instance = new Trello.Boards();
      //expect(instance).to.be();
    });

    it('should have the property prefsCardCovers (base name: "prefs_cardCovers")', function() {
      // uncomment below and update the code to test the property prefsCardCovers
      //var instance = new Trello.Boards();
      //expect(instance).to.be();
    });

    it('should have the property prefsComments (base name: "prefs_comments")', function() {
      // uncomment below and update the code to test the property prefsComments
      //var instance = new Trello.Boards();
      //expect(instance).to.be();
    });

    it('should have the property prefsInvitations (base name: "prefs_invitations")', function() {
      // uncomment below and update the code to test the property prefsInvitations
      //var instance = new Trello.Boards();
      //expect(instance).to.be();
    });

    it('should have the property prefsPermissionLevel (base name: "prefs_permissionLevel")', function() {
      // uncomment below and update the code to test the property prefsPermissionLevel
      //var instance = new Trello.Boards();
      //expect(instance).to.be();
    });

    it('should have the property prefsSelfJoin (base name: "prefs_selfJoin")', function() {
      // uncomment below and update the code to test the property prefsSelfJoin
      //var instance = new Trello.Boards();
      //expect(instance).to.be();
    });

    it('should have the property prefsVoting (base name: "prefs_voting")', function() {
      // uncomment below and update the code to test the property prefsVoting
      //var instance = new Trello.Boards();
      //expect(instance).to.be();
    });

    it('should have the property subscribed (base name: "subscribed")', function() {
      // uncomment below and update the code to test the property subscribed
      //var instance = new Trello.Boards();
      //expect(instance).to.be();
    });

  });

}));
