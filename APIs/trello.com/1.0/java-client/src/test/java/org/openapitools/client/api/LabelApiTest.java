/*
 * Trello
 * This document describes the REST API of Trello as published by Trello.com.  - <a href='https://trello.com/docs/index.html' target='_blank'>Official Documentation</a>  - <a href='https://trello.com/docs/api' target='_blank'>The HTML pages that were scraped in order to generate this specification.</a>
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Labels;
import org.openapitools.client.model.LabelsColor;
import org.openapitools.client.model.LabelsName;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for LabelApi
 */
@Disabled
public class LabelApiTest {

    private final LabelApi api = new LabelApi();

    /**
     * addLabels()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addLabelsTest() throws ApiException {
        String key = null;
        String token = null;
        Labels labels = null;
        api.addLabels(key, token, labels);
        // TODO: test validations
    }

    /**
     * deleteLabelsByIdLabel()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteLabelsByIdLabelTest() throws ApiException {
        String idLabel = null;
        String key = null;
        String token = null;
        api.deleteLabelsByIdLabel(idLabel, key, token);
        // TODO: test validations
    }

    /**
     * getLabelsBoardByIdLabel()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getLabelsBoardByIdLabelTest() throws ApiException {
        String idLabel = null;
        String key = null;
        String token = null;
        String fields = null;
        api.getLabelsBoardByIdLabel(idLabel, key, token, fields);
        // TODO: test validations
    }

    /**
     * getLabelsBoardByIdLabelByField()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getLabelsBoardByIdLabelByFieldTest() throws ApiException {
        String idLabel = null;
        String field = null;
        String key = null;
        String token = null;
        api.getLabelsBoardByIdLabelByField(idLabel, field, key, token);
        // TODO: test validations
    }

    /**
     * getLabelsByIdLabel()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getLabelsByIdLabelTest() throws ApiException {
        String idLabel = null;
        String key = null;
        String token = null;
        String fields = null;
        api.getLabelsByIdLabel(idLabel, key, token, fields);
        // TODO: test validations
    }

    /**
     * updateLabelsByIdLabel()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateLabelsByIdLabelTest() throws ApiException {
        String idLabel = null;
        String key = null;
        String token = null;
        Labels labels = null;
        api.updateLabelsByIdLabel(idLabel, key, token, labels);
        // TODO: test validations
    }

    /**
     * updateLabelsColorByIdLabel()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateLabelsColorByIdLabelTest() throws ApiException {
        String idLabel = null;
        String key = null;
        String token = null;
        LabelsColor labelsColor = null;
        api.updateLabelsColorByIdLabel(idLabel, key, token, labelsColor);
        // TODO: test validations
    }

    /**
     * updateLabelsNameByIdLabel()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateLabelsNameByIdLabelTest() throws ApiException {
        String idLabel = null;
        String key = null;
        String token = null;
        LabelsName labelsName = null;
        api.updateLabelsNameByIdLabel(idLabel, key, token, labelsName);
        // TODO: test validations
    }

}
