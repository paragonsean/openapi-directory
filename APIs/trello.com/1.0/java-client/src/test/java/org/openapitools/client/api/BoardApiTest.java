/*
 * Trello
 * This document describes the REST API of Trello as published by Trello.com.  - <a href='https://trello.com/docs/index.html' target='_blank'>Official Documentation</a>  - <a href='https://trello.com/docs/api' target='_blank'>The HTML pages that were scraped in order to generate this specification.</a>
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Boards;
import org.openapitools.client.model.BoardsChecklists;
import org.openapitools.client.model.BoardsClosed;
import org.openapitools.client.model.BoardsDesc;
import org.openapitools.client.model.BoardsIdOrganization;
import org.openapitools.client.model.BoardsLabels;
import org.openapitools.client.model.BoardsLists;
import org.openapitools.client.model.BoardsMembers;
import org.openapitools.client.model.BoardsMemberships;
import org.openapitools.client.model.BoardsName;
import org.openapitools.client.model.BoardsPowerUps;
import org.openapitools.client.model.BoardsSubscribed;
import org.openapitools.client.model.LabelNamesBlue;
import org.openapitools.client.model.LabelNamesGreen;
import org.openapitools.client.model.LabelNamesOrange;
import org.openapitools.client.model.LabelNamesPurple;
import org.openapitools.client.model.LabelNamesRed;
import org.openapitools.client.model.LabelNamesYellow;
import org.openapitools.client.model.MyPrefsEmailPosition;
import org.openapitools.client.model.MyPrefsIdEmailList;
import org.openapitools.client.model.MyPrefsShowListGuide;
import org.openapitools.client.model.MyPrefsShowSidebar;
import org.openapitools.client.model.MyPrefsShowSidebarActivity;
import org.openapitools.client.model.MyPrefsShowSidebarBoardActions;
import org.openapitools.client.model.MyPrefsShowSidebarMembers;
import org.openapitools.client.model.PrefsBackground;
import org.openapitools.client.model.PrefsCalendarFeedEnabled;
import org.openapitools.client.model.PrefsCardAging;
import org.openapitools.client.model.PrefsCardCovers;
import org.openapitools.client.model.PrefsComments;
import org.openapitools.client.model.PrefsInvitations;
import org.openapitools.client.model.PrefsPermissionLevel;
import org.openapitools.client.model.PrefsSelfJoin;
import org.openapitools.client.model.PrefsVoting;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for BoardApi
 */
@Disabled
public class BoardApiTest {

    private final BoardApi api = new BoardApi();

    /**
     * addBoards()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addBoardsTest() throws ApiException {
        String key = null;
        String token = null;
        Boards boards = null;
        api.addBoards(key, token, boards);
        // TODO: test validations
    }

    /**
     * addBoardsCalendarKeyGenerateByIdBoard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addBoardsCalendarKeyGenerateByIdBoardTest() throws ApiException {
        String idBoard = null;
        String key = null;
        String token = null;
        api.addBoardsCalendarKeyGenerateByIdBoard(idBoard, key, token);
        // TODO: test validations
    }

    /**
     * addBoardsChecklistsByIdBoard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addBoardsChecklistsByIdBoardTest() throws ApiException {
        String idBoard = null;
        String key = null;
        String token = null;
        BoardsChecklists boardsChecklists = null;
        api.addBoardsChecklistsByIdBoard(idBoard, key, token, boardsChecklists);
        // TODO: test validations
    }

    /**
     * addBoardsEmailKeyGenerateByIdBoard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addBoardsEmailKeyGenerateByIdBoardTest() throws ApiException {
        String idBoard = null;
        String key = null;
        String token = null;
        api.addBoardsEmailKeyGenerateByIdBoard(idBoard, key, token);
        // TODO: test validations
    }

    /**
     * addBoardsLabelsByIdBoard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addBoardsLabelsByIdBoardTest() throws ApiException {
        String idBoard = null;
        String key = null;
        String token = null;
        BoardsLabels boardsLabels = null;
        api.addBoardsLabelsByIdBoard(idBoard, key, token, boardsLabels);
        // TODO: test validations
    }

    /**
     * addBoardsListsByIdBoard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addBoardsListsByIdBoardTest() throws ApiException {
        String idBoard = null;
        String key = null;
        String token = null;
        BoardsLists boardsLists = null;
        api.addBoardsListsByIdBoard(idBoard, key, token, boardsLists);
        // TODO: test validations
    }

    /**
     * addBoardsMarkAsViewedByIdBoard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addBoardsMarkAsViewedByIdBoardTest() throws ApiException {
        String idBoard = null;
        String key = null;
        String token = null;
        api.addBoardsMarkAsViewedByIdBoard(idBoard, key, token);
        // TODO: test validations
    }

    /**
     * addBoardsPowerUpsByIdBoard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addBoardsPowerUpsByIdBoardTest() throws ApiException {
        String idBoard = null;
        String key = null;
        String token = null;
        BoardsPowerUps boardsPowerUps = null;
        api.addBoardsPowerUpsByIdBoard(idBoard, key, token, boardsPowerUps);
        // TODO: test validations
    }

    /**
     * deleteBoardsMembersByIdBoardByIdMember()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteBoardsMembersByIdBoardByIdMemberTest() throws ApiException {
        String idBoard = null;
        String idMember = null;
        String key = null;
        String token = null;
        api.deleteBoardsMembersByIdBoardByIdMember(idBoard, idMember, key, token);
        // TODO: test validations
    }

    /**
     * deleteBoardsPowerUpsByIdBoardByPowerUp()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteBoardsPowerUpsByIdBoardByPowerUpTest() throws ApiException {
        String idBoard = null;
        String powerUp = null;
        String key = null;
        String token = null;
        api.deleteBoardsPowerUpsByIdBoardByPowerUp(idBoard, powerUp, key, token);
        // TODO: test validations
    }

    /**
     * getBoardsActionsByIdBoard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getBoardsActionsByIdBoardTest() throws ApiException {
        String idBoard = null;
        String key = null;
        String token = null;
        String entities = null;
        String display = null;
        String filter = null;
        String fields = null;
        String limit = null;
        String format = null;
        String since = null;
        String before = null;
        String page = null;
        String idModels = null;
        String member = null;
        String memberFields = null;
        String memberCreator = null;
        String memberCreatorFields = null;
        api.getBoardsActionsByIdBoard(idBoard, key, token, entities, display, filter, fields, limit, format, since, before, page, idModels, member, memberFields, memberCreator, memberCreatorFields);
        // TODO: test validations
    }

    /**
     * getBoardsBoardStarsByIdBoard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getBoardsBoardStarsByIdBoardTest() throws ApiException {
        String idBoard = null;
        String key = null;
        String token = null;
        String filter = null;
        api.getBoardsBoardStarsByIdBoard(idBoard, key, token, filter);
        // TODO: test validations
    }

    /**
     * getBoardsByIdBoard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getBoardsByIdBoardTest() throws ApiException {
        String idBoard = null;
        String key = null;
        String token = null;
        String actions = null;
        String actionsEntities = null;
        String actionsDisplay = null;
        String actionsFormat = null;
        String actionsSince = null;
        String actionsLimit = null;
        String actionFields = null;
        String actionMember = null;
        String actionMemberFields = null;
        String actionMemberCreator = null;
        String actionMemberCreatorFields = null;
        String cards = null;
        String cardFields = null;
        String cardAttachments = null;
        String cardAttachmentFields = null;
        String cardChecklists = null;
        String cardStickers = null;
        String boardStars = null;
        String labels = null;
        String labelFields = null;
        String labelsLimit = null;
        String lists = null;
        String listFields = null;
        String memberships = null;
        String membershipsMember = null;
        String membershipsMemberFields = null;
        String members = null;
        String memberFields = null;
        String membersInvited = null;
        String membersInvitedFields = null;
        String checklists = null;
        String checklistFields = null;
        String organization = null;
        String organizationFields = null;
        String organizationMemberships = null;
        String myPrefs = null;
        String fields = null;
        api.getBoardsByIdBoard(idBoard, key, token, actions, actionsEntities, actionsDisplay, actionsFormat, actionsSince, actionsLimit, actionFields, actionMember, actionMemberFields, actionMemberCreator, actionMemberCreatorFields, cards, cardFields, cardAttachments, cardAttachmentFields, cardChecklists, cardStickers, boardStars, labels, labelFields, labelsLimit, lists, listFields, memberships, membershipsMember, membershipsMemberFields, members, memberFields, membersInvited, membersInvitedFields, checklists, checklistFields, organization, organizationFields, organizationMemberships, myPrefs, fields);
        // TODO: test validations
    }

    /**
     * getBoardsByIdBoardByField()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getBoardsByIdBoardByFieldTest() throws ApiException {
        String idBoard = null;
        String field = null;
        String key = null;
        String token = null;
        api.getBoardsByIdBoardByField(idBoard, field, key, token);
        // TODO: test validations
    }

    /**
     * getBoardsCardsByIdBoard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getBoardsCardsByIdBoardTest() throws ApiException {
        String idBoard = null;
        String key = null;
        String token = null;
        String actions = null;
        String attachments = null;
        String attachmentFields = null;
        String stickers = null;
        String members = null;
        String memberFields = null;
        String checkItemStates = null;
        String checklists = null;
        String limit = null;
        String since = null;
        String before = null;
        String filter = null;
        String fields = null;
        api.getBoardsCardsByIdBoard(idBoard, key, token, actions, attachments, attachmentFields, stickers, members, memberFields, checkItemStates, checklists, limit, since, before, filter, fields);
        // TODO: test validations
    }

    /**
     * getBoardsCardsByIdBoardByFilter()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getBoardsCardsByIdBoardByFilterTest() throws ApiException {
        String idBoard = null;
        String filter = null;
        String key = null;
        String token = null;
        api.getBoardsCardsByIdBoardByFilter(idBoard, filter, key, token);
        // TODO: test validations
    }

    /**
     * getBoardsCardsByIdBoardByIdCard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getBoardsCardsByIdBoardByIdCardTest() throws ApiException {
        String idBoard = null;
        String idCard = null;
        String key = null;
        String token = null;
        String attachments = null;
        String attachmentFields = null;
        String actions = null;
        String actionsEntities = null;
        String actionsDisplay = null;
        String actionsLimit = null;
        String actionFields = null;
        String actionMemberCreatorFields = null;
        String members = null;
        String memberFields = null;
        String checkItemStates = null;
        String checkItemStateFields = null;
        String labels = null;
        String checklists = null;
        String checklistFields = null;
        String fields = null;
        api.getBoardsCardsByIdBoardByIdCard(idBoard, idCard, key, token, attachments, attachmentFields, actions, actionsEntities, actionsDisplay, actionsLimit, actionFields, actionMemberCreatorFields, members, memberFields, checkItemStates, checkItemStateFields, labels, checklists, checklistFields, fields);
        // TODO: test validations
    }

    /**
     * getBoardsChecklistsByIdBoard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getBoardsChecklistsByIdBoardTest() throws ApiException {
        String idBoard = null;
        String key = null;
        String token = null;
        String cards = null;
        String cardFields = null;
        String checkItems = null;
        String checkItemFields = null;
        String filter = null;
        String fields = null;
        api.getBoardsChecklistsByIdBoard(idBoard, key, token, cards, cardFields, checkItems, checkItemFields, filter, fields);
        // TODO: test validations
    }

    /**
     * getBoardsDeltasByIdBoard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getBoardsDeltasByIdBoardTest() throws ApiException {
        String idBoard = null;
        String tags = null;
        String ixLastUpdate = null;
        String key = null;
        String token = null;
        api.getBoardsDeltasByIdBoard(idBoard, tags, ixLastUpdate, key, token);
        // TODO: test validations
    }

    /**
     * getBoardsLabelsByIdBoard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getBoardsLabelsByIdBoardTest() throws ApiException {
        String idBoard = null;
        String key = null;
        String token = null;
        String fields = null;
        String limit = null;
        api.getBoardsLabelsByIdBoard(idBoard, key, token, fields, limit);
        // TODO: test validations
    }

    /**
     * getBoardsLabelsByIdBoardByIdLabel()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getBoardsLabelsByIdBoardByIdLabelTest() throws ApiException {
        String idBoard = null;
        String idLabel = null;
        String key = null;
        String token = null;
        String fields = null;
        api.getBoardsLabelsByIdBoardByIdLabel(idBoard, idLabel, key, token, fields);
        // TODO: test validations
    }

    /**
     * getBoardsListsByIdBoard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getBoardsListsByIdBoardTest() throws ApiException {
        String idBoard = null;
        String key = null;
        String token = null;
        String cards = null;
        String cardFields = null;
        String filter = null;
        String fields = null;
        api.getBoardsListsByIdBoard(idBoard, key, token, cards, cardFields, filter, fields);
        // TODO: test validations
    }

    /**
     * getBoardsListsByIdBoardByFilter()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getBoardsListsByIdBoardByFilterTest() throws ApiException {
        String idBoard = null;
        String filter = null;
        String key = null;
        String token = null;
        api.getBoardsListsByIdBoardByFilter(idBoard, filter, key, token);
        // TODO: test validations
    }

    /**
     * getBoardsMembersByIdBoard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getBoardsMembersByIdBoardTest() throws ApiException {
        String idBoard = null;
        String key = null;
        String token = null;
        String filter = null;
        String fields = null;
        String activity = null;
        api.getBoardsMembersByIdBoard(idBoard, key, token, filter, fields, activity);
        // TODO: test validations
    }

    /**
     * getBoardsMembersByIdBoardByFilter()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getBoardsMembersByIdBoardByFilterTest() throws ApiException {
        String idBoard = null;
        String filter = null;
        String key = null;
        String token = null;
        api.getBoardsMembersByIdBoardByFilter(idBoard, filter, key, token);
        // TODO: test validations
    }

    /**
     * getBoardsMembersCardsByIdBoardByIdMember()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getBoardsMembersCardsByIdBoardByIdMemberTest() throws ApiException {
        String idBoard = null;
        String idMember = null;
        String key = null;
        String token = null;
        String actions = null;
        String attachments = null;
        String attachmentFields = null;
        String members = null;
        String memberFields = null;
        String checkItemStates = null;
        String checklists = null;
        String board = null;
        String boardFields = null;
        String _list = null;
        String listFields = null;
        String filter = null;
        String fields = null;
        api.getBoardsMembersCardsByIdBoardByIdMember(idBoard, idMember, key, token, actions, attachments, attachmentFields, members, memberFields, checkItemStates, checklists, board, boardFields, _list, listFields, filter, fields);
        // TODO: test validations
    }

    /**
     * getBoardsMembersInvitedByIdBoard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getBoardsMembersInvitedByIdBoardTest() throws ApiException {
        String idBoard = null;
        String key = null;
        String token = null;
        String fields = null;
        api.getBoardsMembersInvitedByIdBoard(idBoard, key, token, fields);
        // TODO: test validations
    }

    /**
     * getBoardsMembersInvitedByIdBoardByField()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getBoardsMembersInvitedByIdBoardByFieldTest() throws ApiException {
        String idBoard = null;
        String field = null;
        String key = null;
        String token = null;
        api.getBoardsMembersInvitedByIdBoardByField(idBoard, field, key, token);
        // TODO: test validations
    }

    /**
     * getBoardsMembershipsByIdBoard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getBoardsMembershipsByIdBoardTest() throws ApiException {
        String idBoard = null;
        String key = null;
        String token = null;
        String filter = null;
        String member = null;
        String memberFields = null;
        api.getBoardsMembershipsByIdBoard(idBoard, key, token, filter, member, memberFields);
        // TODO: test validations
    }

    /**
     * getBoardsMembershipsByIdBoardByIdMembership()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getBoardsMembershipsByIdBoardByIdMembershipTest() throws ApiException {
        String idBoard = null;
        String idMembership = null;
        String key = null;
        String token = null;
        String member = null;
        String memberFields = null;
        api.getBoardsMembershipsByIdBoardByIdMembership(idBoard, idMembership, key, token, member, memberFields);
        // TODO: test validations
    }

    /**
     * getBoardsMyPrefsByIdBoard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getBoardsMyPrefsByIdBoardTest() throws ApiException {
        String idBoard = null;
        String key = null;
        String token = null;
        api.getBoardsMyPrefsByIdBoard(idBoard, key, token);
        // TODO: test validations
    }

    /**
     * getBoardsOrganizationByIdBoard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getBoardsOrganizationByIdBoardTest() throws ApiException {
        String idBoard = null;
        String key = null;
        String token = null;
        String fields = null;
        api.getBoardsOrganizationByIdBoard(idBoard, key, token, fields);
        // TODO: test validations
    }

    /**
     * getBoardsOrganizationByIdBoardByField()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getBoardsOrganizationByIdBoardByFieldTest() throws ApiException {
        String idBoard = null;
        String field = null;
        String key = null;
        String token = null;
        api.getBoardsOrganizationByIdBoardByField(idBoard, field, key, token);
        // TODO: test validations
    }

    /**
     * updateBoardsByIdBoard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateBoardsByIdBoardTest() throws ApiException {
        String idBoard = null;
        String key = null;
        String token = null;
        Boards boards = null;
        api.updateBoardsByIdBoard(idBoard, key, token, boards);
        // TODO: test validations
    }

    /**
     * updateBoardsClosedByIdBoard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateBoardsClosedByIdBoardTest() throws ApiException {
        String idBoard = null;
        String key = null;
        String token = null;
        BoardsClosed boardsClosed = null;
        api.updateBoardsClosedByIdBoard(idBoard, key, token, boardsClosed);
        // TODO: test validations
    }

    /**
     * updateBoardsDescByIdBoard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateBoardsDescByIdBoardTest() throws ApiException {
        String idBoard = null;
        String key = null;
        String token = null;
        BoardsDesc boardsDesc = null;
        api.updateBoardsDescByIdBoard(idBoard, key, token, boardsDesc);
        // TODO: test validations
    }

    /**
     * updateBoardsIdOrganizationByIdBoard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateBoardsIdOrganizationByIdBoardTest() throws ApiException {
        String idBoard = null;
        String key = null;
        String token = null;
        BoardsIdOrganization boardsIdOrganization = null;
        api.updateBoardsIdOrganizationByIdBoard(idBoard, key, token, boardsIdOrganization);
        // TODO: test validations
    }

    /**
     * updateBoardsLabelNamesBlueByIdBoard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateBoardsLabelNamesBlueByIdBoardTest() throws ApiException {
        String idBoard = null;
        String key = null;
        String token = null;
        LabelNamesBlue labelNamesBlue = null;
        api.updateBoardsLabelNamesBlueByIdBoard(idBoard, key, token, labelNamesBlue);
        // TODO: test validations
    }

    /**
     * updateBoardsLabelNamesGreenByIdBoard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateBoardsLabelNamesGreenByIdBoardTest() throws ApiException {
        String idBoard = null;
        String key = null;
        String token = null;
        LabelNamesGreen labelNamesGreen = null;
        api.updateBoardsLabelNamesGreenByIdBoard(idBoard, key, token, labelNamesGreen);
        // TODO: test validations
    }

    /**
     * updateBoardsLabelNamesOrangeByIdBoard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateBoardsLabelNamesOrangeByIdBoardTest() throws ApiException {
        String idBoard = null;
        String key = null;
        String token = null;
        LabelNamesOrange labelNamesOrange = null;
        api.updateBoardsLabelNamesOrangeByIdBoard(idBoard, key, token, labelNamesOrange);
        // TODO: test validations
    }

    /**
     * updateBoardsLabelNamesPurpleByIdBoard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateBoardsLabelNamesPurpleByIdBoardTest() throws ApiException {
        String idBoard = null;
        String key = null;
        String token = null;
        LabelNamesPurple labelNamesPurple = null;
        api.updateBoardsLabelNamesPurpleByIdBoard(idBoard, key, token, labelNamesPurple);
        // TODO: test validations
    }

    /**
     * updateBoardsLabelNamesRedByIdBoard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateBoardsLabelNamesRedByIdBoardTest() throws ApiException {
        String idBoard = null;
        String key = null;
        String token = null;
        LabelNamesRed labelNamesRed = null;
        api.updateBoardsLabelNamesRedByIdBoard(idBoard, key, token, labelNamesRed);
        // TODO: test validations
    }

    /**
     * updateBoardsLabelNamesYellowByIdBoard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateBoardsLabelNamesYellowByIdBoardTest() throws ApiException {
        String idBoard = null;
        String key = null;
        String token = null;
        LabelNamesYellow labelNamesYellow = null;
        api.updateBoardsLabelNamesYellowByIdBoard(idBoard, key, token, labelNamesYellow);
        // TODO: test validations
    }

    /**
     * updateBoardsMembersByIdBoard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateBoardsMembersByIdBoardTest() throws ApiException {
        String idBoard = null;
        String key = null;
        String token = null;
        BoardsMembers boardsMembers = null;
        api.updateBoardsMembersByIdBoard(idBoard, key, token, boardsMembers);
        // TODO: test validations
    }

    /**
     * updateBoardsMembersByIdBoardByIdMember()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateBoardsMembersByIdBoardByIdMemberTest() throws ApiException {
        String idBoard = null;
        String idMember = null;
        String key = null;
        String token = null;
        BoardsMembers boardsMembers = null;
        api.updateBoardsMembersByIdBoardByIdMember(idBoard, idMember, key, token, boardsMembers);
        // TODO: test validations
    }

    /**
     * updateBoardsMembershipsByIdBoardByIdMembership()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateBoardsMembershipsByIdBoardByIdMembershipTest() throws ApiException {
        String idBoard = null;
        String idMembership = null;
        String key = null;
        String token = null;
        BoardsMemberships boardsMemberships = null;
        api.updateBoardsMembershipsByIdBoardByIdMembership(idBoard, idMembership, key, token, boardsMemberships);
        // TODO: test validations
    }

    /**
     * updateBoardsMyPrefsEmailPositionByIdBoard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateBoardsMyPrefsEmailPositionByIdBoardTest() throws ApiException {
        String idBoard = null;
        String key = null;
        String token = null;
        MyPrefsEmailPosition myPrefsEmailPosition = null;
        api.updateBoardsMyPrefsEmailPositionByIdBoard(idBoard, key, token, myPrefsEmailPosition);
        // TODO: test validations
    }

    /**
     * updateBoardsMyPrefsIdEmailListByIdBoard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateBoardsMyPrefsIdEmailListByIdBoardTest() throws ApiException {
        String idBoard = null;
        String key = null;
        String token = null;
        MyPrefsIdEmailList myPrefsIdEmailList = null;
        api.updateBoardsMyPrefsIdEmailListByIdBoard(idBoard, key, token, myPrefsIdEmailList);
        // TODO: test validations
    }

    /**
     * updateBoardsMyPrefsShowListGuideByIdBoard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateBoardsMyPrefsShowListGuideByIdBoardTest() throws ApiException {
        String idBoard = null;
        String key = null;
        String token = null;
        MyPrefsShowListGuide myPrefsShowListGuide = null;
        api.updateBoardsMyPrefsShowListGuideByIdBoard(idBoard, key, token, myPrefsShowListGuide);
        // TODO: test validations
    }

    /**
     * updateBoardsMyPrefsShowSidebarActivityByIdBoard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateBoardsMyPrefsShowSidebarActivityByIdBoardTest() throws ApiException {
        String idBoard = null;
        String key = null;
        String token = null;
        MyPrefsShowSidebarActivity myPrefsShowSidebarActivity = null;
        api.updateBoardsMyPrefsShowSidebarActivityByIdBoard(idBoard, key, token, myPrefsShowSidebarActivity);
        // TODO: test validations
    }

    /**
     * updateBoardsMyPrefsShowSidebarBoardActionsByIdBoard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateBoardsMyPrefsShowSidebarBoardActionsByIdBoardTest() throws ApiException {
        String idBoard = null;
        String key = null;
        String token = null;
        MyPrefsShowSidebarBoardActions myPrefsShowSidebarBoardActions = null;
        api.updateBoardsMyPrefsShowSidebarBoardActionsByIdBoard(idBoard, key, token, myPrefsShowSidebarBoardActions);
        // TODO: test validations
    }

    /**
     * updateBoardsMyPrefsShowSidebarByIdBoard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateBoardsMyPrefsShowSidebarByIdBoardTest() throws ApiException {
        String idBoard = null;
        String key = null;
        String token = null;
        MyPrefsShowSidebar myPrefsShowSidebar = null;
        api.updateBoardsMyPrefsShowSidebarByIdBoard(idBoard, key, token, myPrefsShowSidebar);
        // TODO: test validations
    }

    /**
     * updateBoardsMyPrefsShowSidebarMembersByIdBoard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateBoardsMyPrefsShowSidebarMembersByIdBoardTest() throws ApiException {
        String idBoard = null;
        String key = null;
        String token = null;
        MyPrefsShowSidebarMembers myPrefsShowSidebarMembers = null;
        api.updateBoardsMyPrefsShowSidebarMembersByIdBoard(idBoard, key, token, myPrefsShowSidebarMembers);
        // TODO: test validations
    }

    /**
     * updateBoardsNameByIdBoard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateBoardsNameByIdBoardTest() throws ApiException {
        String idBoard = null;
        String key = null;
        String token = null;
        BoardsName boardsName = null;
        api.updateBoardsNameByIdBoard(idBoard, key, token, boardsName);
        // TODO: test validations
    }

    /**
     * updateBoardsPrefsBackgroundByIdBoard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateBoardsPrefsBackgroundByIdBoardTest() throws ApiException {
        String idBoard = null;
        String key = null;
        String token = null;
        PrefsBackground prefsBackground = null;
        api.updateBoardsPrefsBackgroundByIdBoard(idBoard, key, token, prefsBackground);
        // TODO: test validations
    }

    /**
     * updateBoardsPrefsCalendarFeedEnabledByIdBoard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateBoardsPrefsCalendarFeedEnabledByIdBoardTest() throws ApiException {
        String idBoard = null;
        String key = null;
        String token = null;
        PrefsCalendarFeedEnabled prefsCalendarFeedEnabled = null;
        api.updateBoardsPrefsCalendarFeedEnabledByIdBoard(idBoard, key, token, prefsCalendarFeedEnabled);
        // TODO: test validations
    }

    /**
     * updateBoardsPrefsCardAgingByIdBoard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateBoardsPrefsCardAgingByIdBoardTest() throws ApiException {
        String idBoard = null;
        String key = null;
        String token = null;
        PrefsCardAging prefsCardAging = null;
        api.updateBoardsPrefsCardAgingByIdBoard(idBoard, key, token, prefsCardAging);
        // TODO: test validations
    }

    /**
     * updateBoardsPrefsCardCoversByIdBoard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateBoardsPrefsCardCoversByIdBoardTest() throws ApiException {
        String idBoard = null;
        String key = null;
        String token = null;
        PrefsCardCovers prefsCardCovers = null;
        api.updateBoardsPrefsCardCoversByIdBoard(idBoard, key, token, prefsCardCovers);
        // TODO: test validations
    }

    /**
     * updateBoardsPrefsCommentsByIdBoard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateBoardsPrefsCommentsByIdBoardTest() throws ApiException {
        String idBoard = null;
        String key = null;
        String token = null;
        PrefsComments prefsComments = null;
        api.updateBoardsPrefsCommentsByIdBoard(idBoard, key, token, prefsComments);
        // TODO: test validations
    }

    /**
     * updateBoardsPrefsInvitationsByIdBoard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateBoardsPrefsInvitationsByIdBoardTest() throws ApiException {
        String idBoard = null;
        String key = null;
        String token = null;
        PrefsInvitations prefsInvitations = null;
        api.updateBoardsPrefsInvitationsByIdBoard(idBoard, key, token, prefsInvitations);
        // TODO: test validations
    }

    /**
     * updateBoardsPrefsPermissionLevelByIdBoard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateBoardsPrefsPermissionLevelByIdBoardTest() throws ApiException {
        String idBoard = null;
        String key = null;
        String token = null;
        PrefsPermissionLevel prefsPermissionLevel = null;
        api.updateBoardsPrefsPermissionLevelByIdBoard(idBoard, key, token, prefsPermissionLevel);
        // TODO: test validations
    }

    /**
     * updateBoardsPrefsSelfJoinByIdBoard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateBoardsPrefsSelfJoinByIdBoardTest() throws ApiException {
        String idBoard = null;
        String key = null;
        String token = null;
        PrefsSelfJoin prefsSelfJoin = null;
        api.updateBoardsPrefsSelfJoinByIdBoard(idBoard, key, token, prefsSelfJoin);
        // TODO: test validations
    }

    /**
     * updateBoardsPrefsVotingByIdBoard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateBoardsPrefsVotingByIdBoardTest() throws ApiException {
        String idBoard = null;
        String key = null;
        String token = null;
        PrefsVoting prefsVoting = null;
        api.updateBoardsPrefsVotingByIdBoard(idBoard, key, token, prefsVoting);
        // TODO: test validations
    }

    /**
     * updateBoardsSubscribedByIdBoard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateBoardsSubscribedByIdBoardTest() throws ApiException {
        String idBoard = null;
        String key = null;
        String token = null;
        BoardsSubscribed boardsSubscribed = null;
        api.updateBoardsSubscribedByIdBoard(idBoard, key, token, boardsSubscribed);
        // TODO: test validations
    }

}
