/*
 * Trello
 * This document describes the REST API of Trello as published by Trello.com.  - <a href='https://trello.com/docs/index.html' target='_blank'>Official Documentation</a>  - <a href='https://trello.com/docs/api' target='_blank'>The HTML pages that were scraped in order to generate this specification.</a>
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Notifications;
import org.openapitools.client.model.NotificationsUnread;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for NotificationApi
 */
@Disabled
public class NotificationApiTest {

    private final NotificationApi api = new NotificationApi();

    /**
     * addNotificationsAllRead()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addNotificationsAllReadTest() throws ApiException {
        String key = null;
        String token = null;
        api.addNotificationsAllRead(key, token);
        // TODO: test validations
    }

    /**
     * getNotificationsBoardByIdNotification()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getNotificationsBoardByIdNotificationTest() throws ApiException {
        String idNotification = null;
        String key = null;
        String token = null;
        String fields = null;
        api.getNotificationsBoardByIdNotification(idNotification, key, token, fields);
        // TODO: test validations
    }

    /**
     * getNotificationsBoardByIdNotificationByField()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getNotificationsBoardByIdNotificationByFieldTest() throws ApiException {
        String idNotification = null;
        String field = null;
        String key = null;
        String token = null;
        api.getNotificationsBoardByIdNotificationByField(idNotification, field, key, token);
        // TODO: test validations
    }

    /**
     * getNotificationsByIdNotification()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getNotificationsByIdNotificationTest() throws ApiException {
        String idNotification = null;
        String key = null;
        String token = null;
        String display = null;
        String entities = null;
        String fields = null;
        String memberCreator = null;
        String memberCreatorFields = null;
        String board = null;
        String boardFields = null;
        String _list = null;
        String card = null;
        String cardFields = null;
        String organization = null;
        String organizationFields = null;
        String member = null;
        String memberFields = null;
        api.getNotificationsByIdNotification(idNotification, key, token, display, entities, fields, memberCreator, memberCreatorFields, board, boardFields, _list, card, cardFields, organization, organizationFields, member, memberFields);
        // TODO: test validations
    }

    /**
     * getNotificationsByIdNotificationByField()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getNotificationsByIdNotificationByFieldTest() throws ApiException {
        String idNotification = null;
        String field = null;
        String key = null;
        String token = null;
        api.getNotificationsByIdNotificationByField(idNotification, field, key, token);
        // TODO: test validations
    }

    /**
     * getNotificationsCardByIdNotification()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getNotificationsCardByIdNotificationTest() throws ApiException {
        String idNotification = null;
        String key = null;
        String token = null;
        String fields = null;
        api.getNotificationsCardByIdNotification(idNotification, key, token, fields);
        // TODO: test validations
    }

    /**
     * getNotificationsCardByIdNotificationByField()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getNotificationsCardByIdNotificationByFieldTest() throws ApiException {
        String idNotification = null;
        String field = null;
        String key = null;
        String token = null;
        api.getNotificationsCardByIdNotificationByField(idNotification, field, key, token);
        // TODO: test validations
    }

    /**
     * getNotificationsDisplayByIdNotification()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getNotificationsDisplayByIdNotificationTest() throws ApiException {
        String idNotification = null;
        String key = null;
        String token = null;
        api.getNotificationsDisplayByIdNotification(idNotification, key, token);
        // TODO: test validations
    }

    /**
     * getNotificationsEntitiesByIdNotification()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getNotificationsEntitiesByIdNotificationTest() throws ApiException {
        String idNotification = null;
        String key = null;
        String token = null;
        api.getNotificationsEntitiesByIdNotification(idNotification, key, token);
        // TODO: test validations
    }

    /**
     * getNotificationsListByIdNotification()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getNotificationsListByIdNotificationTest() throws ApiException {
        String idNotification = null;
        String key = null;
        String token = null;
        String fields = null;
        api.getNotificationsListByIdNotification(idNotification, key, token, fields);
        // TODO: test validations
    }

    /**
     * getNotificationsListByIdNotificationByField()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getNotificationsListByIdNotificationByFieldTest() throws ApiException {
        String idNotification = null;
        String field = null;
        String key = null;
        String token = null;
        api.getNotificationsListByIdNotificationByField(idNotification, field, key, token);
        // TODO: test validations
    }

    /**
     * getNotificationsMemberByIdNotification()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getNotificationsMemberByIdNotificationTest() throws ApiException {
        String idNotification = null;
        String key = null;
        String token = null;
        String fields = null;
        api.getNotificationsMemberByIdNotification(idNotification, key, token, fields);
        // TODO: test validations
    }

    /**
     * getNotificationsMemberByIdNotificationByField()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getNotificationsMemberByIdNotificationByFieldTest() throws ApiException {
        String idNotification = null;
        String field = null;
        String key = null;
        String token = null;
        api.getNotificationsMemberByIdNotificationByField(idNotification, field, key, token);
        // TODO: test validations
    }

    /**
     * getNotificationsMemberCreatorByIdNotification()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getNotificationsMemberCreatorByIdNotificationTest() throws ApiException {
        String idNotification = null;
        String key = null;
        String token = null;
        String fields = null;
        api.getNotificationsMemberCreatorByIdNotification(idNotification, key, token, fields);
        // TODO: test validations
    }

    /**
     * getNotificationsMemberCreatorByIdNotificationByField()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getNotificationsMemberCreatorByIdNotificationByFieldTest() throws ApiException {
        String idNotification = null;
        String field = null;
        String key = null;
        String token = null;
        api.getNotificationsMemberCreatorByIdNotificationByField(idNotification, field, key, token);
        // TODO: test validations
    }

    /**
     * getNotificationsOrganizationByIdNotification()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getNotificationsOrganizationByIdNotificationTest() throws ApiException {
        String idNotification = null;
        String key = null;
        String token = null;
        String fields = null;
        api.getNotificationsOrganizationByIdNotification(idNotification, key, token, fields);
        // TODO: test validations
    }

    /**
     * getNotificationsOrganizationByIdNotificationByField()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getNotificationsOrganizationByIdNotificationByFieldTest() throws ApiException {
        String idNotification = null;
        String field = null;
        String key = null;
        String token = null;
        api.getNotificationsOrganizationByIdNotificationByField(idNotification, field, key, token);
        // TODO: test validations
    }

    /**
     * updateNotificationsByIdNotification()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateNotificationsByIdNotificationTest() throws ApiException {
        String idNotification = null;
        String key = null;
        String token = null;
        Notifications notifications = null;
        api.updateNotificationsByIdNotification(idNotification, key, token, notifications);
        // TODO: test validations
    }

    /**
     * updateNotificationsUnreadByIdNotification()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateNotificationsUnreadByIdNotificationTest() throws ApiException {
        String idNotification = null;
        String key = null;
        String token = null;
        NotificationsUnread notificationsUnread = null;
        api.updateNotificationsUnreadByIdNotification(idNotification, key, token, notificationsUnread);
        // TODO: test validations
    }

}
