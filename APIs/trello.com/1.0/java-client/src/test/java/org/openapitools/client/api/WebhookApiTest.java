/*
 * Trello
 * This document describes the REST API of Trello as published by Trello.com.  - <a href='https://trello.com/docs/index.html' target='_blank'>Official Documentation</a>  - <a href='https://trello.com/docs/api' target='_blank'>The HTML pages that were scraped in order to generate this specification.</a>
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Webhooks;
import org.openapitools.client.model.WebhooksActive;
import org.openapitools.client.model.WebhooksCallbackURL;
import org.openapitools.client.model.WebhooksDescription;
import org.openapitools.client.model.WebhooksIdModel;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for WebhookApi
 */
@Disabled
public class WebhookApiTest {

    private final WebhookApi api = new WebhookApi();

    /**
     * addWebhooks()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addWebhooksTest() throws ApiException {
        String key = null;
        String token = null;
        Webhooks webhooks = null;
        api.addWebhooks(key, token, webhooks);
        // TODO: test validations
    }

    /**
     * deleteWebhooksByIdWebhook()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteWebhooksByIdWebhookTest() throws ApiException {
        String idWebhook = null;
        String key = null;
        String token = null;
        api.deleteWebhooksByIdWebhook(idWebhook, key, token);
        // TODO: test validations
    }

    /**
     * getWebhooksByIdWebhook()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getWebhooksByIdWebhookTest() throws ApiException {
        String idWebhook = null;
        String key = null;
        String token = null;
        api.getWebhooksByIdWebhook(idWebhook, key, token);
        // TODO: test validations
    }

    /**
     * getWebhooksByIdWebhookByField()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getWebhooksByIdWebhookByFieldTest() throws ApiException {
        String idWebhook = null;
        String field = null;
        String key = null;
        String token = null;
        api.getWebhooksByIdWebhookByField(idWebhook, field, key, token);
        // TODO: test validations
    }

    /**
     * updateWebhooks()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateWebhooksTest() throws ApiException {
        String key = null;
        String token = null;
        Webhooks webhooks = null;
        api.updateWebhooks(key, token, webhooks);
        // TODO: test validations
    }

    /**
     * updateWebhooksActiveByIdWebhook()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateWebhooksActiveByIdWebhookTest() throws ApiException {
        String idWebhook = null;
        String key = null;
        String token = null;
        WebhooksActive webhooksActive = null;
        api.updateWebhooksActiveByIdWebhook(idWebhook, key, token, webhooksActive);
        // TODO: test validations
    }

    /**
     * updateWebhooksByIdWebhook()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateWebhooksByIdWebhookTest() throws ApiException {
        String idWebhook = null;
        String key = null;
        String token = null;
        Webhooks webhooks = null;
        api.updateWebhooksByIdWebhook(idWebhook, key, token, webhooks);
        // TODO: test validations
    }

    /**
     * updateWebhooksCallbackURLByIdWebhook()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateWebhooksCallbackURLByIdWebhookTest() throws ApiException {
        String idWebhook = null;
        String key = null;
        String token = null;
        WebhooksCallbackURL webhooksCallbackURL = null;
        api.updateWebhooksCallbackURLByIdWebhook(idWebhook, key, token, webhooksCallbackURL);
        // TODO: test validations
    }

    /**
     * updateWebhooksDescriptionByIdWebhook()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateWebhooksDescriptionByIdWebhookTest() throws ApiException {
        String idWebhook = null;
        String key = null;
        String token = null;
        WebhooksDescription webhooksDescription = null;
        api.updateWebhooksDescriptionByIdWebhook(idWebhook, key, token, webhooksDescription);
        // TODO: test validations
    }

    /**
     * updateWebhooksIdModelByIdWebhook()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateWebhooksIdModelByIdWebhookTest() throws ApiException {
        String idWebhook = null;
        String key = null;
        String token = null;
        WebhooksIdModel webhooksIdModel = null;
        api.updateWebhooksIdModelByIdWebhook(idWebhook, key, token, webhooksIdModel);
        // TODO: test validations
    }

}
