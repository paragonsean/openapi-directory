/*
 * Trello
 * This document describes the REST API of Trello as published by Trello.com.  - <a href='https://trello.com/docs/index.html' target='_blank'>Official Documentation</a>  - <a href='https://trello.com/docs/api' target='_blank'>The HTML pages that were scraped in order to generate this specification.</a>
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Lists;
import org.openapitools.client.model.ListsCards;
import org.openapitools.client.model.ListsClosed;
import org.openapitools.client.model.ListsIdBoard;
import org.openapitools.client.model.ListsMoveAllCards;
import org.openapitools.client.model.ListsName;
import org.openapitools.client.model.ListsPos;
import org.openapitools.client.model.ListsSubscribed;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ListApi
 */
@Disabled
public class ListApiTest {

    private final ListApi api = new ListApi();

    /**
     * addLists()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addListsTest() throws ApiException {
        String key = null;
        String token = null;
        Lists lists = null;
        api.addLists(key, token, lists);
        // TODO: test validations
    }

    /**
     * addListsArchiveAllCardsByIdList()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addListsArchiveAllCardsByIdListTest() throws ApiException {
        String idList = null;
        String key = null;
        String token = null;
        api.addListsArchiveAllCardsByIdList(idList, key, token);
        // TODO: test validations
    }

    /**
     * addListsCardsByIdList()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addListsCardsByIdListTest() throws ApiException {
        String idList = null;
        String key = null;
        String token = null;
        ListsCards listsCards = null;
        api.addListsCardsByIdList(idList, key, token, listsCards);
        // TODO: test validations
    }

    /**
     * addListsMoveAllCardsByIdList()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addListsMoveAllCardsByIdListTest() throws ApiException {
        String idList = null;
        String key = null;
        String token = null;
        ListsMoveAllCards listsMoveAllCards = null;
        api.addListsMoveAllCardsByIdList(idList, key, token, listsMoveAllCards);
        // TODO: test validations
    }

    /**
     * getListsActionsByIdList()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getListsActionsByIdListTest() throws ApiException {
        String idList = null;
        String key = null;
        String token = null;
        String entities = null;
        String display = null;
        String filter = null;
        String fields = null;
        String limit = null;
        String format = null;
        String since = null;
        String before = null;
        String page = null;
        String idModels = null;
        String member = null;
        String memberFields = null;
        String memberCreator = null;
        String memberCreatorFields = null;
        api.getListsActionsByIdList(idList, key, token, entities, display, filter, fields, limit, format, since, before, page, idModels, member, memberFields, memberCreator, memberCreatorFields);
        // TODO: test validations
    }

    /**
     * getListsBoardByIdList()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getListsBoardByIdListTest() throws ApiException {
        String idList = null;
        String key = null;
        String token = null;
        String fields = null;
        api.getListsBoardByIdList(idList, key, token, fields);
        // TODO: test validations
    }

    /**
     * getListsBoardByIdListByField()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getListsBoardByIdListByFieldTest() throws ApiException {
        String idList = null;
        String field = null;
        String key = null;
        String token = null;
        api.getListsBoardByIdListByField(idList, field, key, token);
        // TODO: test validations
    }

    /**
     * getListsByIdList()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getListsByIdListTest() throws ApiException {
        String idList = null;
        String key = null;
        String token = null;
        String cards = null;
        String cardFields = null;
        String board = null;
        String boardFields = null;
        String fields = null;
        api.getListsByIdList(idList, key, token, cards, cardFields, board, boardFields, fields);
        // TODO: test validations
    }

    /**
     * getListsByIdListByField()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getListsByIdListByFieldTest() throws ApiException {
        String idList = null;
        String field = null;
        String key = null;
        String token = null;
        api.getListsByIdListByField(idList, field, key, token);
        // TODO: test validations
    }

    /**
     * getListsCardsByIdList()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getListsCardsByIdListTest() throws ApiException {
        String idList = null;
        String key = null;
        String token = null;
        String actions = null;
        String attachments = null;
        String attachmentFields = null;
        String stickers = null;
        String members = null;
        String memberFields = null;
        String checkItemStates = null;
        String checklists = null;
        String limit = null;
        String since = null;
        String before = null;
        String filter = null;
        String fields = null;
        api.getListsCardsByIdList(idList, key, token, actions, attachments, attachmentFields, stickers, members, memberFields, checkItemStates, checklists, limit, since, before, filter, fields);
        // TODO: test validations
    }

    /**
     * getListsCardsByIdListByFilter()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getListsCardsByIdListByFilterTest() throws ApiException {
        String idList = null;
        String filter = null;
        String key = null;
        String token = null;
        api.getListsCardsByIdListByFilter(idList, filter, key, token);
        // TODO: test validations
    }

    /**
     * updateListsByIdList()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateListsByIdListTest() throws ApiException {
        String idList = null;
        String key = null;
        String token = null;
        Lists lists = null;
        api.updateListsByIdList(idList, key, token, lists);
        // TODO: test validations
    }

    /**
     * updateListsClosedByIdList()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateListsClosedByIdListTest() throws ApiException {
        String idList = null;
        String key = null;
        String token = null;
        ListsClosed listsClosed = null;
        api.updateListsClosedByIdList(idList, key, token, listsClosed);
        // TODO: test validations
    }

    /**
     * updateListsIdBoardByIdList()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateListsIdBoardByIdListTest() throws ApiException {
        String idList = null;
        String key = null;
        String token = null;
        ListsIdBoard listsIdBoard = null;
        api.updateListsIdBoardByIdList(idList, key, token, listsIdBoard);
        // TODO: test validations
    }

    /**
     * updateListsNameByIdList()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateListsNameByIdListTest() throws ApiException {
        String idList = null;
        String key = null;
        String token = null;
        ListsName listsName = null;
        api.updateListsNameByIdList(idList, key, token, listsName);
        // TODO: test validations
    }

    /**
     * updateListsPosByIdList()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateListsPosByIdListTest() throws ApiException {
        String idList = null;
        String key = null;
        String token = null;
        ListsPos listsPos = null;
        api.updateListsPosByIdList(idList, key, token, listsPos);
        // TODO: test validations
    }

    /**
     * updateListsSubscribedByIdList()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateListsSubscribedByIdListTest() throws ApiException {
        String idList = null;
        String key = null;
        String token = null;
        ListsSubscribed listsSubscribed = null;
        api.updateListsSubscribedByIdList(idList, key, token, listsSubscribed);
        // TODO: test validations
    }

}
