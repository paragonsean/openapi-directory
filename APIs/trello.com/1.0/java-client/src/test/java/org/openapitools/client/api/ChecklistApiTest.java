/*
 * Trello
 * This document describes the REST API of Trello as published by Trello.com.  - <a href='https://trello.com/docs/index.html' target='_blank'>Official Documentation</a>  - <a href='https://trello.com/docs/api' target='_blank'>The HTML pages that were scraped in order to generate this specification.</a>
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Checklists;
import org.openapitools.client.model.ChecklistsCheckItems;
import org.openapitools.client.model.ChecklistsIdCard;
import org.openapitools.client.model.ChecklistsName;
import org.openapitools.client.model.ChecklistsPos;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ChecklistApi
 */
@Disabled
public class ChecklistApiTest {

    private final ChecklistApi api = new ChecklistApi();

    /**
     * addChecklists()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addChecklistsTest() throws ApiException {
        String key = null;
        String token = null;
        Checklists checklists = null;
        api.addChecklists(key, token, checklists);
        // TODO: test validations
    }

    /**
     * addChecklistsCheckItemsByIdChecklist()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addChecklistsCheckItemsByIdChecklistTest() throws ApiException {
        String idChecklist = null;
        String key = null;
        String token = null;
        ChecklistsCheckItems checklistsCheckItems = null;
        api.addChecklistsCheckItemsByIdChecklist(idChecklist, key, token, checklistsCheckItems);
        // TODO: test validations
    }

    /**
     * deleteChecklistsByIdChecklist()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteChecklistsByIdChecklistTest() throws ApiException {
        String idChecklist = null;
        String key = null;
        String token = null;
        api.deleteChecklistsByIdChecklist(idChecklist, key, token);
        // TODO: test validations
    }

    /**
     * deleteChecklistsCheckItemsByIdChecklistByIdCheckItem()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteChecklistsCheckItemsByIdChecklistByIdCheckItemTest() throws ApiException {
        String idChecklist = null;
        String idCheckItem = null;
        String key = null;
        String token = null;
        api.deleteChecklistsCheckItemsByIdChecklistByIdCheckItem(idChecklist, idCheckItem, key, token);
        // TODO: test validations
    }

    /**
     * getChecklistsBoardByIdChecklist()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getChecklistsBoardByIdChecklistTest() throws ApiException {
        String idChecklist = null;
        String key = null;
        String token = null;
        String fields = null;
        api.getChecklistsBoardByIdChecklist(idChecklist, key, token, fields);
        // TODO: test validations
    }

    /**
     * getChecklistsBoardByIdChecklistByField()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getChecklistsBoardByIdChecklistByFieldTest() throws ApiException {
        String idChecklist = null;
        String field = null;
        String key = null;
        String token = null;
        api.getChecklistsBoardByIdChecklistByField(idChecklist, field, key, token);
        // TODO: test validations
    }

    /**
     * getChecklistsByIdChecklist()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getChecklistsByIdChecklistTest() throws ApiException {
        String idChecklist = null;
        String key = null;
        String token = null;
        String cards = null;
        String cardFields = null;
        String checkItems = null;
        String checkItemFields = null;
        String fields = null;
        api.getChecklistsByIdChecklist(idChecklist, key, token, cards, cardFields, checkItems, checkItemFields, fields);
        // TODO: test validations
    }

    /**
     * getChecklistsByIdChecklistByField()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getChecklistsByIdChecklistByFieldTest() throws ApiException {
        String idChecklist = null;
        String field = null;
        String key = null;
        String token = null;
        api.getChecklistsByIdChecklistByField(idChecklist, field, key, token);
        // TODO: test validations
    }

    /**
     * getChecklistsCardsByIdChecklist()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getChecklistsCardsByIdChecklistTest() throws ApiException {
        String idChecklist = null;
        String key = null;
        String token = null;
        String actions = null;
        String attachments = null;
        String attachmentFields = null;
        String stickers = null;
        String members = null;
        String memberFields = null;
        String checkItemStates = null;
        String checklists = null;
        String limit = null;
        String since = null;
        String before = null;
        String filter = null;
        String fields = null;
        api.getChecklistsCardsByIdChecklist(idChecklist, key, token, actions, attachments, attachmentFields, stickers, members, memberFields, checkItemStates, checklists, limit, since, before, filter, fields);
        // TODO: test validations
    }

    /**
     * getChecklistsCardsByIdChecklistByFilter()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getChecklistsCardsByIdChecklistByFilterTest() throws ApiException {
        String idChecklist = null;
        String filter = null;
        String key = null;
        String token = null;
        api.getChecklistsCardsByIdChecklistByFilter(idChecklist, filter, key, token);
        // TODO: test validations
    }

    /**
     * getChecklistsCheckItemsByIdChecklist()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getChecklistsCheckItemsByIdChecklistTest() throws ApiException {
        String idChecklist = null;
        String key = null;
        String token = null;
        String filter = null;
        String fields = null;
        api.getChecklistsCheckItemsByIdChecklist(idChecklist, key, token, filter, fields);
        // TODO: test validations
    }

    /**
     * getChecklistsCheckItemsByIdChecklistByIdCheckItem()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getChecklistsCheckItemsByIdChecklistByIdCheckItemTest() throws ApiException {
        String idChecklist = null;
        String idCheckItem = null;
        String key = null;
        String token = null;
        String fields = null;
        api.getChecklistsCheckItemsByIdChecklistByIdCheckItem(idChecklist, idCheckItem, key, token, fields);
        // TODO: test validations
    }

    /**
     * updateChecklistsByIdChecklist()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateChecklistsByIdChecklistTest() throws ApiException {
        String idChecklist = null;
        String key = null;
        String token = null;
        Checklists checklists = null;
        api.updateChecklistsByIdChecklist(idChecklist, key, token, checklists);
        // TODO: test validations
    }

    /**
     * updateChecklistsIdCardByIdChecklist()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateChecklistsIdCardByIdChecklistTest() throws ApiException {
        String idChecklist = null;
        String key = null;
        String token = null;
        ChecklistsIdCard checklistsIdCard = null;
        api.updateChecklistsIdCardByIdChecklist(idChecklist, key, token, checklistsIdCard);
        // TODO: test validations
    }

    /**
     * updateChecklistsNameByIdChecklist()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateChecklistsNameByIdChecklistTest() throws ApiException {
        String idChecklist = null;
        String key = null;
        String token = null;
        ChecklistsName checklistsName = null;
        api.updateChecklistsNameByIdChecklist(idChecklist, key, token, checklistsName);
        // TODO: test validations
    }

    /**
     * updateChecklistsPosByIdChecklist()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateChecklistsPosByIdChecklistTest() throws ApiException {
        String idChecklist = null;
        String key = null;
        String token = null;
        ChecklistsPos checklistsPos = null;
        api.updateChecklistsPosByIdChecklist(idChecklist, key, token, checklistsPos);
        // TODO: test validations
    }

}
