/*
 * Trello
 * This document describes the REST API of Trello as published by Trello.com.  - <a href='https://trello.com/docs/index.html' target='_blank'>Official Documentation</a>  - <a href='https://trello.com/docs/api' target='_blank'>The HTML pages that were scraped in order to generate this specification.</a>
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ActionsComments;
import org.openapitools.client.model.Cards;
import org.openapitools.client.model.CardsActionsComments;
import org.openapitools.client.model.CardsAttachments;
import org.openapitools.client.model.CardsChecklistCheckItem;
import org.openapitools.client.model.CardsChecklistCheckItemName;
import org.openapitools.client.model.CardsChecklistCheckItemPos;
import org.openapitools.client.model.CardsChecklistCheckItemState;
import org.openapitools.client.model.CardsChecklistIdChecklistCurrentCheckItem;
import org.openapitools.client.model.CardsChecklists;
import org.openapitools.client.model.CardsClosed;
import org.openapitools.client.model.CardsDesc;
import org.openapitools.client.model.CardsDue;
import org.openapitools.client.model.CardsIdAttachmentCover;
import org.openapitools.client.model.CardsIdBoard;
import org.openapitools.client.model.CardsIdLabels;
import org.openapitools.client.model.CardsIdList;
import org.openapitools.client.model.CardsIdMembers;
import org.openapitools.client.model.CardsLabels;
import org.openapitools.client.model.CardsMembersVoted;
import org.openapitools.client.model.CardsName;
import org.openapitools.client.model.CardsPos;
import org.openapitools.client.model.CardsStickers;
import org.openapitools.client.model.CardsSubscribed;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CardApi
 */
@Disabled
public class CardApiTest {

    private final CardApi api = new CardApi();

    /**
     * addCards()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addCardsTest() throws ApiException {
        String key = null;
        String token = null;
        Cards cards = null;
        api.addCards(key, token, cards);
        // TODO: test validations
    }

    /**
     * addCardsActionsCommentsByIdCard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addCardsActionsCommentsByIdCardTest() throws ApiException {
        String idCard = null;
        String key = null;
        String token = null;
        ActionsComments actionsComments = null;
        api.addCardsActionsCommentsByIdCard(idCard, key, token, actionsComments);
        // TODO: test validations
    }

    /**
     * addCardsAttachmentsByIdCard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addCardsAttachmentsByIdCardTest() throws ApiException {
        String idCard = null;
        String key = null;
        String token = null;
        CardsAttachments cardsAttachments = null;
        api.addCardsAttachmentsByIdCard(idCard, key, token, cardsAttachments);
        // TODO: test validations
    }

    /**
     * addCardsChecklistCheckItemByIdCardByIdChecklist()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addCardsChecklistCheckItemByIdCardByIdChecklistTest() throws ApiException {
        String idCard = null;
        String idChecklist = null;
        String key = null;
        String token = null;
        CardsChecklistCheckItem cardsChecklistCheckItem = null;
        api.addCardsChecklistCheckItemByIdCardByIdChecklist(idCard, idChecklist, key, token, cardsChecklistCheckItem);
        // TODO: test validations
    }

    /**
     * addCardsChecklistCheckItemConvertToCardByIdCardByIdChecklistByIdCheckItem()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addCardsChecklistCheckItemConvertToCardByIdCardByIdChecklistByIdCheckItemTest() throws ApiException {
        String idCard = null;
        String idChecklist = null;
        String idCheckItem = null;
        String key = null;
        String token = null;
        api.addCardsChecklistCheckItemConvertToCardByIdCardByIdChecklistByIdCheckItem(idCard, idChecklist, idCheckItem, key, token);
        // TODO: test validations
    }

    /**
     * addCardsChecklistsByIdCard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addCardsChecklistsByIdCardTest() throws ApiException {
        String idCard = null;
        String key = null;
        String token = null;
        CardsChecklists cardsChecklists = null;
        api.addCardsChecklistsByIdCard(idCard, key, token, cardsChecklists);
        // TODO: test validations
    }

    /**
     * addCardsIdLabelsByIdCard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addCardsIdLabelsByIdCardTest() throws ApiException {
        String idCard = null;
        String key = null;
        String token = null;
        CardsIdLabels cardsIdLabels = null;
        api.addCardsIdLabelsByIdCard(idCard, key, token, cardsIdLabels);
        // TODO: test validations
    }

    /**
     * addCardsIdMembersByIdCard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addCardsIdMembersByIdCardTest() throws ApiException {
        String idCard = null;
        String key = null;
        String token = null;
        CardsIdMembers cardsIdMembers = null;
        api.addCardsIdMembersByIdCard(idCard, key, token, cardsIdMembers);
        // TODO: test validations
    }

    /**
     * addCardsLabelsByIdCard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addCardsLabelsByIdCardTest() throws ApiException {
        String idCard = null;
        String key = null;
        String token = null;
        CardsLabels cardsLabels = null;
        api.addCardsLabelsByIdCard(idCard, key, token, cardsLabels);
        // TODO: test validations
    }

    /**
     * addCardsMarkAssociatedNotificationsReadByIdCard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addCardsMarkAssociatedNotificationsReadByIdCardTest() throws ApiException {
        String idCard = null;
        String key = null;
        String token = null;
        api.addCardsMarkAssociatedNotificationsReadByIdCard(idCard, key, token);
        // TODO: test validations
    }

    /**
     * addCardsMembersVotedByIdCard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addCardsMembersVotedByIdCardTest() throws ApiException {
        String idCard = null;
        String key = null;
        String token = null;
        CardsMembersVoted cardsMembersVoted = null;
        api.addCardsMembersVotedByIdCard(idCard, key, token, cardsMembersVoted);
        // TODO: test validations
    }

    /**
     * addCardsStickersByIdCard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addCardsStickersByIdCardTest() throws ApiException {
        String idCard = null;
        String key = null;
        String token = null;
        CardsStickers cardsStickers = null;
        api.addCardsStickersByIdCard(idCard, key, token, cardsStickers);
        // TODO: test validations
    }

    /**
     * deleteCardsActionsCommentsByIdCardByIdAction()
     *
     * This can only be done by the original author of the comment, or someone with higher permissions than the original author.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteCardsActionsCommentsByIdCardByIdActionTest() throws ApiException {
        String idCard = null;
        String idAction = null;
        String key = null;
        String token = null;
        api.deleteCardsActionsCommentsByIdCardByIdAction(idCard, idAction, key, token);
        // TODO: test validations
    }

    /**
     * deleteCardsAttachmentsByIdCardByIdAttachment()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteCardsAttachmentsByIdCardByIdAttachmentTest() throws ApiException {
        String idCard = null;
        String idAttachment = null;
        String key = null;
        String token = null;
        api.deleteCardsAttachmentsByIdCardByIdAttachment(idCard, idAttachment, key, token);
        // TODO: test validations
    }

    /**
     * deleteCardsByIdCard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteCardsByIdCardTest() throws ApiException {
        String idCard = null;
        String key = null;
        String token = null;
        api.deleteCardsByIdCard(idCard, key, token);
        // TODO: test validations
    }

    /**
     * deleteCardsChecklistCheckItemByIdCardByIdChecklistByIdCheckItem()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteCardsChecklistCheckItemByIdCardByIdChecklistByIdCheckItemTest() throws ApiException {
        String idCard = null;
        String idChecklist = null;
        String idCheckItem = null;
        String key = null;
        String token = null;
        api.deleteCardsChecklistCheckItemByIdCardByIdChecklistByIdCheckItem(idCard, idChecklist, idCheckItem, key, token);
        // TODO: test validations
    }

    /**
     * deleteCardsChecklistsByIdCardByIdChecklist()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteCardsChecklistsByIdCardByIdChecklistTest() throws ApiException {
        String idCard = null;
        String idChecklist = null;
        String key = null;
        String token = null;
        api.deleteCardsChecklistsByIdCardByIdChecklist(idCard, idChecklist, key, token);
        // TODO: test validations
    }

    /**
     * deleteCardsIdLabelsByIdCardByIdLabel()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteCardsIdLabelsByIdCardByIdLabelTest() throws ApiException {
        String idCard = null;
        String idLabel = null;
        String key = null;
        String token = null;
        api.deleteCardsIdLabelsByIdCardByIdLabel(idCard, idLabel, key, token);
        // TODO: test validations
    }

    /**
     * deleteCardsIdMembersByIdCardByIdMember()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteCardsIdMembersByIdCardByIdMemberTest() throws ApiException {
        String idCard = null;
        String idMember = null;
        String key = null;
        String token = null;
        api.deleteCardsIdMembersByIdCardByIdMember(idCard, idMember, key, token);
        // TODO: test validations
    }

    /**
     * deleteCardsLabelsByIdCardByColor()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteCardsLabelsByIdCardByColorTest() throws ApiException {
        String idCard = null;
        String color = null;
        String key = null;
        String token = null;
        api.deleteCardsLabelsByIdCardByColor(idCard, color, key, token);
        // TODO: test validations
    }

    /**
     * deleteCardsMembersVotedByIdCardByIdMember()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteCardsMembersVotedByIdCardByIdMemberTest() throws ApiException {
        String idCard = null;
        String idMember = null;
        String key = null;
        String token = null;
        api.deleteCardsMembersVotedByIdCardByIdMember(idCard, idMember, key, token);
        // TODO: test validations
    }

    /**
     * deleteCardsStickersByIdCardByIdSticker()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteCardsStickersByIdCardByIdStickerTest() throws ApiException {
        String idCard = null;
        String idSticker = null;
        String key = null;
        String token = null;
        api.deleteCardsStickersByIdCardByIdSticker(idCard, idSticker, key, token);
        // TODO: test validations
    }

    /**
     * getCardsActionsByIdCard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCardsActionsByIdCardTest() throws ApiException {
        String idCard = null;
        String key = null;
        String token = null;
        String entities = null;
        String display = null;
        String filter = null;
        String fields = null;
        String limit = null;
        String format = null;
        String since = null;
        String before = null;
        String page = null;
        String idModels = null;
        String member = null;
        String memberFields = null;
        String memberCreator = null;
        String memberCreatorFields = null;
        api.getCardsActionsByIdCard(idCard, key, token, entities, display, filter, fields, limit, format, since, before, page, idModels, member, memberFields, memberCreator, memberCreatorFields);
        // TODO: test validations
    }

    /**
     * getCardsAttachmentsByIdCard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCardsAttachmentsByIdCardTest() throws ApiException {
        String idCard = null;
        String key = null;
        String token = null;
        String fields = null;
        String filter = null;
        api.getCardsAttachmentsByIdCard(idCard, key, token, fields, filter);
        // TODO: test validations
    }

    /**
     * getCardsAttachmentsByIdCardByIdAttachment()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCardsAttachmentsByIdCardByIdAttachmentTest() throws ApiException {
        String idCard = null;
        String idAttachment = null;
        String key = null;
        String token = null;
        String fields = null;
        api.getCardsAttachmentsByIdCardByIdAttachment(idCard, idAttachment, key, token, fields);
        // TODO: test validations
    }

    /**
     * getCardsBoardByIdCard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCardsBoardByIdCardTest() throws ApiException {
        String idCard = null;
        String key = null;
        String token = null;
        String fields = null;
        api.getCardsBoardByIdCard(idCard, key, token, fields);
        // TODO: test validations
    }

    /**
     * getCardsBoardByIdCardByField()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCardsBoardByIdCardByFieldTest() throws ApiException {
        String idCard = null;
        String field = null;
        String key = null;
        String token = null;
        api.getCardsBoardByIdCardByField(idCard, field, key, token);
        // TODO: test validations
    }

    /**
     * getCardsByIdCard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCardsByIdCardTest() throws ApiException {
        String idCard = null;
        String key = null;
        String token = null;
        String actions = null;
        String actionsEntities = null;
        String actionsDisplay = null;
        String actionsLimit = null;
        String actionFields = null;
        String actionMemberCreatorFields = null;
        String attachments = null;
        String attachmentFields = null;
        String members = null;
        String memberFields = null;
        String membersVoted = null;
        String memberVotedFields = null;
        String checkItemStates = null;
        String checkItemStateFields = null;
        String checklists = null;
        String checklistFields = null;
        String board = null;
        String boardFields = null;
        String _list = null;
        String listFields = null;
        String stickers = null;
        String stickerFields = null;
        String fields = null;
        api.getCardsByIdCard(idCard, key, token, actions, actionsEntities, actionsDisplay, actionsLimit, actionFields, actionMemberCreatorFields, attachments, attachmentFields, members, memberFields, membersVoted, memberVotedFields, checkItemStates, checkItemStateFields, checklists, checklistFields, board, boardFields, _list, listFields, stickers, stickerFields, fields);
        // TODO: test validations
    }

    /**
     * getCardsByIdCardByField()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCardsByIdCardByFieldTest() throws ApiException {
        String idCard = null;
        String field = null;
        String key = null;
        String token = null;
        api.getCardsByIdCardByField(idCard, field, key, token);
        // TODO: test validations
    }

    /**
     * getCardsCheckItemStatesByIdCard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCardsCheckItemStatesByIdCardTest() throws ApiException {
        String idCard = null;
        String key = null;
        String token = null;
        String fields = null;
        api.getCardsCheckItemStatesByIdCard(idCard, key, token, fields);
        // TODO: test validations
    }

    /**
     * getCardsChecklistsByIdCard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCardsChecklistsByIdCardTest() throws ApiException {
        String idCard = null;
        String key = null;
        String token = null;
        String cards = null;
        String cardFields = null;
        String checkItems = null;
        String checkItemFields = null;
        String filter = null;
        String fields = null;
        api.getCardsChecklistsByIdCard(idCard, key, token, cards, cardFields, checkItems, checkItemFields, filter, fields);
        // TODO: test validations
    }

    /**
     * getCardsListByIdCard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCardsListByIdCardTest() throws ApiException {
        String idCard = null;
        String key = null;
        String token = null;
        String fields = null;
        api.getCardsListByIdCard(idCard, key, token, fields);
        // TODO: test validations
    }

    /**
     * getCardsListByIdCardByField()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCardsListByIdCardByFieldTest() throws ApiException {
        String idCard = null;
        String field = null;
        String key = null;
        String token = null;
        api.getCardsListByIdCardByField(idCard, field, key, token);
        // TODO: test validations
    }

    /**
     * getCardsMembersByIdCard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCardsMembersByIdCardTest() throws ApiException {
        String idCard = null;
        String key = null;
        String token = null;
        String fields = null;
        api.getCardsMembersByIdCard(idCard, key, token, fields);
        // TODO: test validations
    }

    /**
     * getCardsMembersVotedByIdCard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCardsMembersVotedByIdCardTest() throws ApiException {
        String idCard = null;
        String key = null;
        String token = null;
        String fields = null;
        api.getCardsMembersVotedByIdCard(idCard, key, token, fields);
        // TODO: test validations
    }

    /**
     * getCardsStickersByIdCard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCardsStickersByIdCardTest() throws ApiException {
        String idCard = null;
        String key = null;
        String token = null;
        String fields = null;
        api.getCardsStickersByIdCard(idCard, key, token, fields);
        // TODO: test validations
    }

    /**
     * getCardsStickersByIdCardByIdSticker()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCardsStickersByIdCardByIdStickerTest() throws ApiException {
        String idCard = null;
        String idSticker = null;
        String key = null;
        String token = null;
        String fields = null;
        api.getCardsStickersByIdCardByIdSticker(idCard, idSticker, key, token, fields);
        // TODO: test validations
    }

    /**
     * updateCardsActionsCommentsByIdCardByIdAction()
     *
     * This can only be done by the original author of the comment.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateCardsActionsCommentsByIdCardByIdActionTest() throws ApiException {
        String idCard = null;
        String idAction = null;
        String key = null;
        String token = null;
        CardsActionsComments cardsActionsComments = null;
        api.updateCardsActionsCommentsByIdCardByIdAction(idCard, idAction, key, token, cardsActionsComments);
        // TODO: test validations
    }

    /**
     * updateCardsByIdCard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateCardsByIdCardTest() throws ApiException {
        String idCard = null;
        String key = null;
        String token = null;
        Cards cards = null;
        api.updateCardsByIdCard(idCard, key, token, cards);
        // TODO: test validations
    }

    /**
     * updateCardsChecklistCheckItemByIdCardByIdChecklistCurrentByIdCheckItem()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateCardsChecklistCheckItemByIdCardByIdChecklistCurrentByIdCheckItemTest() throws ApiException {
        String idCard = null;
        String idChecklistCurrent = null;
        String idCheckItem = null;
        String key = null;
        String token = null;
        CardsChecklistIdChecklistCurrentCheckItem cardsChecklistIdChecklistCurrentCheckItem = null;
        api.updateCardsChecklistCheckItemByIdCardByIdChecklistCurrentByIdCheckItem(idCard, idChecklistCurrent, idCheckItem, key, token, cardsChecklistIdChecklistCurrentCheckItem);
        // TODO: test validations
    }

    /**
     * updateCardsChecklistCheckItemNameByIdCardByIdChecklistByIdCheckItem()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateCardsChecklistCheckItemNameByIdCardByIdChecklistByIdCheckItemTest() throws ApiException {
        String idCard = null;
        String idChecklist = null;
        String idCheckItem = null;
        String key = null;
        String token = null;
        CardsChecklistCheckItemName cardsChecklistCheckItemName = null;
        api.updateCardsChecklistCheckItemNameByIdCardByIdChecklistByIdCheckItem(idCard, idChecklist, idCheckItem, key, token, cardsChecklistCheckItemName);
        // TODO: test validations
    }

    /**
     * updateCardsChecklistCheckItemPosByIdCardByIdChecklistByIdCheckItem()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateCardsChecklistCheckItemPosByIdCardByIdChecklistByIdCheckItemTest() throws ApiException {
        String idCard = null;
        String idChecklist = null;
        String idCheckItem = null;
        String key = null;
        String token = null;
        CardsChecklistCheckItemPos cardsChecklistCheckItemPos = null;
        api.updateCardsChecklistCheckItemPosByIdCardByIdChecklistByIdCheckItem(idCard, idChecklist, idCheckItem, key, token, cardsChecklistCheckItemPos);
        // TODO: test validations
    }

    /**
     * updateCardsChecklistCheckItemStateByIdCardByIdChecklistByIdCheckItem()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateCardsChecklistCheckItemStateByIdCardByIdChecklistByIdCheckItemTest() throws ApiException {
        String idCard = null;
        String idChecklist = null;
        String idCheckItem = null;
        String key = null;
        String token = null;
        CardsChecklistCheckItemState cardsChecklistCheckItemState = null;
        api.updateCardsChecklistCheckItemStateByIdCardByIdChecklistByIdCheckItem(idCard, idChecklist, idCheckItem, key, token, cardsChecklistCheckItemState);
        // TODO: test validations
    }

    /**
     * updateCardsClosedByIdCard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateCardsClosedByIdCardTest() throws ApiException {
        String idCard = null;
        String key = null;
        String token = null;
        CardsClosed cardsClosed = null;
        api.updateCardsClosedByIdCard(idCard, key, token, cardsClosed);
        // TODO: test validations
    }

    /**
     * updateCardsDescByIdCard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateCardsDescByIdCardTest() throws ApiException {
        String idCard = null;
        String key = null;
        String token = null;
        CardsDesc cardsDesc = null;
        api.updateCardsDescByIdCard(idCard, key, token, cardsDesc);
        // TODO: test validations
    }

    /**
     * updateCardsDueByIdCard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateCardsDueByIdCardTest() throws ApiException {
        String idCard = null;
        String key = null;
        String token = null;
        CardsDue cardsDue = null;
        api.updateCardsDueByIdCard(idCard, key, token, cardsDue);
        // TODO: test validations
    }

    /**
     * updateCardsIdAttachmentCoverByIdCard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateCardsIdAttachmentCoverByIdCardTest() throws ApiException {
        String idCard = null;
        String key = null;
        String token = null;
        CardsIdAttachmentCover cardsIdAttachmentCover = null;
        api.updateCardsIdAttachmentCoverByIdCard(idCard, key, token, cardsIdAttachmentCover);
        // TODO: test validations
    }

    /**
     * updateCardsIdBoardByIdCard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateCardsIdBoardByIdCardTest() throws ApiException {
        String idCard = null;
        String key = null;
        String token = null;
        CardsIdBoard cardsIdBoard = null;
        api.updateCardsIdBoardByIdCard(idCard, key, token, cardsIdBoard);
        // TODO: test validations
    }

    /**
     * updateCardsIdListByIdCard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateCardsIdListByIdCardTest() throws ApiException {
        String idCard = null;
        String key = null;
        String token = null;
        CardsIdList cardsIdList = null;
        api.updateCardsIdListByIdCard(idCard, key, token, cardsIdList);
        // TODO: test validations
    }

    /**
     * updateCardsIdMembersByIdCard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateCardsIdMembersByIdCardTest() throws ApiException {
        String idCard = null;
        String key = null;
        String token = null;
        CardsIdMembers cardsIdMembers = null;
        api.updateCardsIdMembersByIdCard(idCard, key, token, cardsIdMembers);
        // TODO: test validations
    }

    /**
     * updateCardsLabelsByIdCard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateCardsLabelsByIdCardTest() throws ApiException {
        String idCard = null;
        String key = null;
        String token = null;
        CardsLabels cardsLabels = null;
        api.updateCardsLabelsByIdCard(idCard, key, token, cardsLabels);
        // TODO: test validations
    }

    /**
     * updateCardsNameByIdCard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateCardsNameByIdCardTest() throws ApiException {
        String idCard = null;
        String key = null;
        String token = null;
        CardsName cardsName = null;
        api.updateCardsNameByIdCard(idCard, key, token, cardsName);
        // TODO: test validations
    }

    /**
     * updateCardsPosByIdCard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateCardsPosByIdCardTest() throws ApiException {
        String idCard = null;
        String key = null;
        String token = null;
        CardsPos cardsPos = null;
        api.updateCardsPosByIdCard(idCard, key, token, cardsPos);
        // TODO: test validations
    }

    /**
     * updateCardsStickersByIdCardByIdSticker()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateCardsStickersByIdCardByIdStickerTest() throws ApiException {
        String idCard = null;
        String idSticker = null;
        String key = null;
        String token = null;
        CardsStickers cardsStickers = null;
        api.updateCardsStickersByIdCardByIdSticker(idCard, idSticker, key, token, cardsStickers);
        // TODO: test validations
    }

    /**
     * updateCardsSubscribedByIdCard()
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateCardsSubscribedByIdCardTest() throws ApiException {
        String idCard = null;
        String key = null;
        String token = null;
        CardsSubscribed cardsSubscribed = null;
        api.updateCardsSubscribedByIdCard(idCard, key, token, cardsSubscribed);
        // TODO: test validations
    }

}
