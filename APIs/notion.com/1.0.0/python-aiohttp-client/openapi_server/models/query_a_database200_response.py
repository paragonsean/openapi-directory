# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.query_a_database200_response_results_inner import QueryADatabase200ResponseResultsInner
from openapi_server import util


class QueryADatabase200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, has_more: bool=None, next_cursor: object=None, object: str=None, results: List[QueryADatabase200ResponseResultsInner]=None):
        """QueryADatabase200Response - a model defined in OpenAPI

        :param has_more: The has_more of this QueryADatabase200Response.
        :param next_cursor: The next_cursor of this QueryADatabase200Response.
        :param object: The object of this QueryADatabase200Response.
        :param results: The results of this QueryADatabase200Response.
        """
        self.openapi_types = {
            'has_more': bool,
            'next_cursor': object,
            'object': str,
            'results': List[QueryADatabase200ResponseResultsInner]
        }

        self.attribute_map = {
            'has_more': 'has_more',
            'next_cursor': 'next_cursor',
            'object': 'object',
            'results': 'results'
        }

        self._has_more = has_more
        self._next_cursor = next_cursor
        self._object = object
        self._results = results

    @classmethod
    def from_dict(cls, dikt: dict) -> 'QueryADatabase200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The queryADatabase_200_response of this QueryADatabase200Response.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def has_more(self):
        """Gets the has_more of this QueryADatabase200Response.


        :return: The has_more of this QueryADatabase200Response.
        :rtype: bool
        """
        return self._has_more

    @has_more.setter
    def has_more(self, has_more):
        """Sets the has_more of this QueryADatabase200Response.


        :param has_more: The has_more of this QueryADatabase200Response.
        :type has_more: bool
        """

        self._has_more = has_more

    @property
    def next_cursor(self):
        """Gets the next_cursor of this QueryADatabase200Response.


        :return: The next_cursor of this QueryADatabase200Response.
        :rtype: object
        """
        return self._next_cursor

    @next_cursor.setter
    def next_cursor(self, next_cursor):
        """Sets the next_cursor of this QueryADatabase200Response.


        :param next_cursor: The next_cursor of this QueryADatabase200Response.
        :type next_cursor: object
        """

        self._next_cursor = next_cursor

    @property
    def object(self):
        """Gets the object of this QueryADatabase200Response.


        :return: The object of this QueryADatabase200Response.
        :rtype: str
        """
        return self._object

    @object.setter
    def object(self, object):
        """Sets the object of this QueryADatabase200Response.


        :param object: The object of this QueryADatabase200Response.
        :type object: str
        """

        self._object = object

    @property
    def results(self):
        """Gets the results of this QueryADatabase200Response.


        :return: The results of this QueryADatabase200Response.
        :rtype: List[QueryADatabase200ResponseResultsInner]
        """
        return self._results

    @results.setter
    def results(self, results):
        """Sets the results of this QueryADatabase200Response.


        :param results: The results of this QueryADatabase200Response.
        :type results: List[QueryADatabase200ResponseResultsInner]
        """

        self._results = results
