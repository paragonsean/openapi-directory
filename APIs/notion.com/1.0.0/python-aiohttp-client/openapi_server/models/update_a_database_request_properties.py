# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.update_a_database_request_properties_wine_pairing import UpdateADatabaseRequestPropertiesWinePairing
from openapi_server import util


class UpdateADatabaseRequestProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, wine_pairing: UpdateADatabaseRequestPropertiesWinePairing=None):
        """UpdateADatabaseRequestProperties - a model defined in OpenAPI

        :param wine_pairing: The wine_pairing of this UpdateADatabaseRequestProperties.
        """
        self.openapi_types = {
            'wine_pairing': UpdateADatabaseRequestPropertiesWinePairing
        }

        self.attribute_map = {
            'wine_pairing': 'Wine Pairing'
        }

        self._wine_pairing = wine_pairing

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateADatabaseRequestProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The updateADatabase_request_properties of this UpdateADatabaseRequestProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def wine_pairing(self):
        """Gets the wine_pairing of this UpdateADatabaseRequestProperties.


        :return: The wine_pairing of this UpdateADatabaseRequestProperties.
        :rtype: UpdateADatabaseRequestPropertiesWinePairing
        """
        return self._wine_pairing

    @wine_pairing.setter
    def wine_pairing(self, wine_pairing):
        """Sets the wine_pairing of this UpdateADatabaseRequestProperties.


        :param wine_pairing: The wine_pairing of this UpdateADatabaseRequestProperties.
        :type wine_pairing: UpdateADatabaseRequestPropertiesWinePairing
        """

        self._wine_pairing = wine_pairing
