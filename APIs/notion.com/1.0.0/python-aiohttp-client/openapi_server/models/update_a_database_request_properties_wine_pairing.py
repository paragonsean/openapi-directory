# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UpdateADatabaseRequestPropertiesWinePairing(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, rich_text: object=None):
        """UpdateADatabaseRequestPropertiesWinePairing - a model defined in OpenAPI

        :param rich_text: The rich_text of this UpdateADatabaseRequestPropertiesWinePairing.
        """
        self.openapi_types = {
            'rich_text': object
        }

        self.attribute_map = {
            'rich_text': 'rich_text'
        }

        self._rich_text = rich_text

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateADatabaseRequestPropertiesWinePairing':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The updateADatabase_request_properties_Wine_Pairing of this UpdateADatabaseRequestPropertiesWinePairing.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def rich_text(self):
        """Gets the rich_text of this UpdateADatabaseRequestPropertiesWinePairing.


        :return: The rich_text of this UpdateADatabaseRequestPropertiesWinePairing.
        :rtype: object
        """
        return self._rich_text

    @rich_text.setter
    def rich_text(self, rich_text):
        """Sets the rich_text of this UpdateADatabaseRequestPropertiesWinePairing.


        :param rich_text: The rich_text of this UpdateADatabaseRequestPropertiesWinePairing.
        :type rich_text: object
        """

        self._rich_text = rich_text
