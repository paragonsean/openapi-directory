# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UpdateADatabase200ResponsePropertiesWinePairing(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, name: str=None, rich_text: object=None, type: str=None):
        """UpdateADatabase200ResponsePropertiesWinePairing - a model defined in OpenAPI

        :param id: The id of this UpdateADatabase200ResponsePropertiesWinePairing.
        :param name: The name of this UpdateADatabase200ResponsePropertiesWinePairing.
        :param rich_text: The rich_text of this UpdateADatabase200ResponsePropertiesWinePairing.
        :param type: The type of this UpdateADatabase200ResponsePropertiesWinePairing.
        """
        self.openapi_types = {
            'id': str,
            'name': str,
            'rich_text': object,
            'type': str
        }

        self.attribute_map = {
            'id': 'id',
            'name': 'name',
            'rich_text': 'rich_text',
            'type': 'type'
        }

        self._id = id
        self._name = name
        self._rich_text = rich_text
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateADatabase200ResponsePropertiesWinePairing':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The updateADatabase_200_response_properties_Wine_Pairing of this UpdateADatabase200ResponsePropertiesWinePairing.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this UpdateADatabase200ResponsePropertiesWinePairing.


        :return: The id of this UpdateADatabase200ResponsePropertiesWinePairing.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this UpdateADatabase200ResponsePropertiesWinePairing.


        :param id: The id of this UpdateADatabase200ResponsePropertiesWinePairing.
        :type id: str
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this UpdateADatabase200ResponsePropertiesWinePairing.


        :return: The name of this UpdateADatabase200ResponsePropertiesWinePairing.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this UpdateADatabase200ResponsePropertiesWinePairing.


        :param name: The name of this UpdateADatabase200ResponsePropertiesWinePairing.
        :type name: str
        """

        self._name = name

    @property
    def rich_text(self):
        """Gets the rich_text of this UpdateADatabase200ResponsePropertiesWinePairing.


        :return: The rich_text of this UpdateADatabase200ResponsePropertiesWinePairing.
        :rtype: object
        """
        return self._rich_text

    @rich_text.setter
    def rich_text(self, rich_text):
        """Sets the rich_text of this UpdateADatabase200ResponsePropertiesWinePairing.


        :param rich_text: The rich_text of this UpdateADatabase200ResponsePropertiesWinePairing.
        :type rich_text: object
        """

        self._rich_text = rich_text

    @property
    def type(self):
        """Gets the type of this UpdateADatabase200ResponsePropertiesWinePairing.


        :return: The type of this UpdateADatabase200ResponsePropertiesWinePairing.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this UpdateADatabase200ResponsePropertiesWinePairing.


        :param type: The type of this UpdateADatabase200ResponsePropertiesWinePairing.
        :type type: str
        """

        self._type = type
