# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.query_a_database_request_filter_select import QueryADatabaseRequestFilterSelect
from openapi_server import util


class QueryADatabaseRequestFilter(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, _property: str=None, select: QueryADatabaseRequestFilterSelect=None):
        """QueryADatabaseRequestFilter - a model defined in OpenAPI

        :param _property: The _property of this QueryADatabaseRequestFilter.
        :param select: The select of this QueryADatabaseRequestFilter.
        """
        self.openapi_types = {
            '_property': str,
            'select': QueryADatabaseRequestFilterSelect
        }

        self.attribute_map = {
            '_property': 'property',
            'select': 'select'
        }

        self.__property = _property
        self._select = select

    @classmethod
    def from_dict(cls, dikt: dict) -> 'QueryADatabaseRequestFilter':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The queryADatabase_request_filter of this QueryADatabaseRequestFilter.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def _property(self):
        """Gets the _property of this QueryADatabaseRequestFilter.


        :return: The _property of this QueryADatabaseRequestFilter.
        :rtype: str
        """
        return self.__property

    @_property.setter
    def _property(self, _property):
        """Sets the _property of this QueryADatabaseRequestFilter.


        :param _property: The _property of this QueryADatabaseRequestFilter.
        :type _property: str
        """

        self.__property = _property

    @property
    def select(self):
        """Gets the select of this QueryADatabaseRequestFilter.


        :return: The select of this QueryADatabaseRequestFilter.
        :rtype: QueryADatabaseRequestFilterSelect
        """
        return self._select

    @select.setter
    def select(self, select):
        """Sets the select of this QueryADatabaseRequestFilter.


        :param select: The select of this QueryADatabaseRequestFilter.
        :type select: QueryADatabaseRequestFilterSelect
        """

        self._select = select
