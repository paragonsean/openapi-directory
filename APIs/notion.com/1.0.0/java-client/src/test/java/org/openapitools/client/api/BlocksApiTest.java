/*
 * Notion API
 * Hello and welcome!  To make use of this API collection collection as it's written, please duplicate [this database template](https://www.notion.so/8e2c2b769e1d47d287b9ed3035d607ae?v=dc1b92875fb94f10834ba8d36549bd2a).  [Create an integration](https://www.notion.so/my-integrations) to retrieve an API token, add your database and page ID's as variables in the collection, and start making your requests!  For our full documentation, including sample integrations and guides, visit [developers.notion.com](developers.notion.com)  Need more help? Join our [developer community on Slack](https://join.slack.com/t/notiondevs/shared_invite/zt-lkrnk74h-YmPRroySRFGiqgjI193AqA/)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AppendBlockChildren200Response;
import org.openapitools.client.model.AppendBlockChildrenRequest;
import org.openapitools.client.model.DeleteABlock200Response;
import org.openapitools.client.model.RetrieveABlock200Response;
import org.openapitools.client.model.RetrieveBlockChildren200Response;
import org.openapitools.client.model.UpdateABlockRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for BlocksApi
 */
@Disabled
public class BlocksApiTest {

    private final BlocksApi api = new BlocksApi();

    /**
     * Append block children
     *
     * Append block children
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void appendBlockChildrenTest() throws ApiException {
        String id = null;
        String notionVersion = null;
        AppendBlockChildrenRequest appendBlockChildrenRequest = null;
        AppendBlockChildren200Response response = api.appendBlockChildren(id, notionVersion, appendBlockChildrenRequest);
        // TODO: test validations
    }

    /**
     * Delete a block
     *
     * Delete a block
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteABlockTest() throws ApiException {
        String id = null;
        String notionVersion = null;
        DeleteABlock200Response response = api.deleteABlock(id, notionVersion);
        // TODO: test validations
    }

    /**
     * Retrieve a block
     *
     * Retrieve a block
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void retrieveABlockTest() throws ApiException {
        String id = null;
        String notionVersion = null;
        RetrieveABlock200Response response = api.retrieveABlock(id, notionVersion);
        // TODO: test validations
    }

    /**
     * Retrieve block children
     *
     * Retrieve block children
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void retrieveBlockChildrenTest() throws ApiException {
        String id = null;
        String pageSize = null;
        String notionVersion = null;
        RetrieveBlockChildren200Response response = api.retrieveBlockChildren(id, pageSize, notionVersion);
        // TODO: test validations
    }

    /**
     * Update a block
     *
     * This endpoint allows you to update block content. [See Full Documentation](https://developers.notion.com/reference/update-a-block)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateABlockTest() throws ApiException {
        String id = null;
        String notionVersion = null;
        UpdateABlockRequest updateABlockRequest = null;
        RetrieveABlock200Response response = api.updateABlock(id, notionVersion, updateABlockRequest);
        // TODO: test validations
    }

}
