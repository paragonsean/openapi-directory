/**
 * Notion API
 * Hello and welcome!  To make use of this API collection collection as it's written, please duplicate [this database template](https://www.notion.so/8e2c2b769e1d47d287b9ed3035d607ae?v=dc1b92875fb94f10834ba8d36549bd2a).  [Create an integration](https://www.notion.so/my-integrations) to retrieve an API token, add your database and page ID's as variables in the collection, and start making your requests!  For our full documentation, including sample integrations and guides, visit [developers.notion.com](developers.notion.com)  Need more help? Join our [developer community on Slack](https://join.slack.com/t/notiondevs/shared_invite/zt-lkrnk74h-YmPRroySRFGiqgjI193AqA/)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.NotionApi);
  }
}(this, function(expect, NotionApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new NotionApi.QueryADatabase200ResponseResultsInnerProperties();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('QueryADatabase200ResponseResultsInnerProperties', function() {
    it('should create an instance of QueryADatabase200ResponseResultsInnerProperties', function() {
      // uncomment below and update the code to test QueryADatabase200ResponseResultsInnerProperties
      //var instance = new NotionApi.QueryADatabase200ResponseResultsInnerProperties();
      //expect(instance).to.be.a(NotionApi.QueryADatabase200ResponseResultsInnerProperties);
    });

    it('should have the property author (base name: "Author")', function() {
      // uncomment below and update the code to test the property author
      //var instance = new NotionApi.QueryADatabase200ResponseResultsInnerProperties();
      //expect(instance).to.be();
    });

    it('should have the property link (base name: "Link")', function() {
      // uncomment below and update the code to test the property link
      //var instance = new NotionApi.QueryADatabase200ResponseResultsInnerProperties();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "Name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new NotionApi.QueryADatabase200ResponseResultsInnerProperties();
      //expect(instance).to.be();
    });

    it('should have the property publisher (base name: "Publisher")', function() {
      // uncomment below and update the code to test the property publisher
      //var instance = new NotionApi.QueryADatabase200ResponseResultsInnerProperties();
      //expect(instance).to.be();
    });

    it('should have the property publishingReleaseDate (base name: "Publishing/Release Date")', function() {
      // uncomment below and update the code to test the property publishingReleaseDate
      //var instance = new NotionApi.QueryADatabase200ResponseResultsInnerProperties();
      //expect(instance).to.be();
    });

    it('should have the property read (base name: "Read")', function() {
      // uncomment below and update the code to test the property read
      //var instance = new NotionApi.QueryADatabase200ResponseResultsInnerProperties();
      //expect(instance).to.be();
    });

    it('should have the property score5 (base name: "Score /5")', function() {
      // uncomment below and update the code to test the property score5
      //var instance = new NotionApi.QueryADatabase200ResponseResultsInnerProperties();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "Status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new NotionApi.QueryADatabase200ResponseResultsInnerProperties();
      //expect(instance).to.be();
    });

    it('should have the property summary (base name: "Summary")', function() {
      // uncomment below and update the code to test the property summary
      //var instance = new NotionApi.QueryADatabase200ResponseResultsInnerProperties();
      //expect(instance).to.be();
    });

    it('should have the property type (base name: "Type")', function() {
      // uncomment below and update the code to test the property type
      //var instance = new NotionApi.QueryADatabase200ResponseResultsInnerProperties();
      //expect(instance).to.be();
    });

  });

}));
