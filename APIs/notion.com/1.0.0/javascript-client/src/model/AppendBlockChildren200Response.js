/**
 * Notion API
 * Hello and welcome!  To make use of this API collection collection as it's written, please duplicate [this database template](https://www.notion.so/8e2c2b769e1d47d287b9ed3035d607ae?v=dc1b92875fb94f10834ba8d36549bd2a).  [Create an integration](https://www.notion.so/my-integrations) to retrieve an API token, add your database and page ID's as variables in the collection, and start making your requests!  For our full documentation, including sample integrations and guides, visit [developers.notion.com](developers.notion.com)  Need more help? Join our [developer community on Slack](https://join.slack.com/t/notiondevs/shared_invite/zt-lkrnk74h-YmPRroySRFGiqgjI193AqA/)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AppendBlockChildren200ResponseChildPage from './AppendBlockChildren200ResponseChildPage';

/**
 * The AppendBlockChildren200Response model module.
 * @module model/AppendBlockChildren200Response
 * @version 1.0.0
 */
class AppendBlockChildren200Response {
    /**
     * Constructs a new <code>AppendBlockChildren200Response</code>.
     * @alias module:model/AppendBlockChildren200Response
     */
    constructor() { 
        
        AppendBlockChildren200Response.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AppendBlockChildren200Response</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AppendBlockChildren200Response} obj Optional instance to populate.
     * @return {module:model/AppendBlockChildren200Response} The populated <code>AppendBlockChildren200Response</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AppendBlockChildren200Response();

            if (data.hasOwnProperty('child_page')) {
                obj['child_page'] = AppendBlockChildren200ResponseChildPage.constructFromObject(data['child_page']);
            }
            if (data.hasOwnProperty('created_time')) {
                obj['created_time'] = ApiClient.convertToType(data['created_time'], 'String');
            }
            if (data.hasOwnProperty('has_children')) {
                obj['has_children'] = ApiClient.convertToType(data['has_children'], 'Boolean');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('last_edited_time')) {
                obj['last_edited_time'] = ApiClient.convertToType(data['last_edited_time'], 'String');
            }
            if (data.hasOwnProperty('object')) {
                obj['object'] = ApiClient.convertToType(data['object'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AppendBlockChildren200Response</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AppendBlockChildren200Response</code>.
     */
    static validateJSON(data) {
        // validate the optional field `child_page`
        if (data['child_page']) { // data not null
          AppendBlockChildren200ResponseChildPage.validateJSON(data['child_page']);
        }
        // ensure the json data is a string
        if (data['created_time'] && !(typeof data['created_time'] === 'string' || data['created_time'] instanceof String)) {
            throw new Error("Expected the field `created_time` to be a primitive type in the JSON string but got " + data['created_time']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['last_edited_time'] && !(typeof data['last_edited_time'] === 'string' || data['last_edited_time'] instanceof String)) {
            throw new Error("Expected the field `last_edited_time` to be a primitive type in the JSON string but got " + data['last_edited_time']);
        }
        // ensure the json data is a string
        if (data['object'] && !(typeof data['object'] === 'string' || data['object'] instanceof String)) {
            throw new Error("Expected the field `object` to be a primitive type in the JSON string but got " + data['object']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}



/**
 * @member {module:model/AppendBlockChildren200ResponseChildPage} child_page
 */
AppendBlockChildren200Response.prototype['child_page'] = undefined;

/**
 * @member {String} created_time
 */
AppendBlockChildren200Response.prototype['created_time'] = undefined;

/**
 * @member {Boolean} has_children
 */
AppendBlockChildren200Response.prototype['has_children'] = undefined;

/**
 * @member {String} id
 */
AppendBlockChildren200Response.prototype['id'] = undefined;

/**
 * @member {String} last_edited_time
 */
AppendBlockChildren200Response.prototype['last_edited_time'] = undefined;

/**
 * @member {String} object
 */
AppendBlockChildren200Response.prototype['object'] = undefined;

/**
 * @member {String} type
 */
AppendBlockChildren200Response.prototype['type'] = undefined;






export default AppendBlockChildren200Response;

