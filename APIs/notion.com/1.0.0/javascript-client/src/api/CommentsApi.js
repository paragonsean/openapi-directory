/**
 * Notion API
 * Hello and welcome!  To make use of this API collection collection as it's written, please duplicate [this database template](https://www.notion.so/8e2c2b769e1d47d287b9ed3035d607ae?v=dc1b92875fb94f10834ba8d36549bd2a).  [Create an integration](https://www.notion.so/my-integrations) to retrieve an API token, add your database and page ID's as variables in the collection, and start making your requests!  For our full documentation, including sample integrations and guides, visit [developers.notion.com](developers.notion.com)  Need more help? Join our [developer community on Slack](https://join.slack.com/t/notiondevs/shared_invite/zt-lkrnk74h-YmPRroySRFGiqgjI193AqA/)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import RetrieveComments200Response from '../model/RetrieveComments200Response';

/**
* Comments service.
* @module api/CommentsApi
* @version 1.0.0
*/
export default class CommentsApi {

    /**
    * Constructs a new CommentsApi. 
    * @alias module:api/CommentsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the retrieveComments operation.
     * @callback module:api/CommentsApi~retrieveCommentsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RetrieveComments200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve comments
     * Retrieve a user object using the ID specified in the request path.
     * @param {Object} opts Optional parameters
     * @param {String} [blockId] 
     * @param {String} [pageSize] 
     * @param {String} [notionVersion] 
     * @param {module:api/CommentsApi~retrieveCommentsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RetrieveComments200Response}
     */
    retrieveComments(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'block_id': opts['blockId'],
        'page_size': opts['pageSize']
      };
      let headerParams = {
        'Notion-Version': opts['notionVersion']
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/x-www-form-urlencoded'];
      let accepts = ['application/json'];
      let returnType = RetrieveComments200Response;
      return this.apiClient.callApi(
        '/v1/comments', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
