/**
 * Notion API
 * Hello and welcome!  To make use of this API collection collection as it's written, please duplicate [this database template](https://www.notion.so/8e2c2b769e1d47d287b9ed3035d607ae?v=dc1b92875fb94f10834ba8d36549bd2a).  [Create an integration](https://www.notion.so/my-integrations) to retrieve an API token, add your database and page ID's as variables in the collection, and start making your requests!  For our full documentation, including sample integrations and guides, visit [developers.notion.com](developers.notion.com)  Need more help? Join our [developer community on Slack](https://join.slack.com/t/notiondevs/shared_invite/zt-lkrnk74h-YmPRroySRFGiqgjI193AqA/)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIQueryADatabase_200_response_results_inner_properties.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIQueryADatabase_200_response_results_inner_properties::OAIQueryADatabase_200_response_results_inner_properties(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIQueryADatabase_200_response_results_inner_properties::OAIQueryADatabase_200_response_results_inner_properties() {
    this->initializeModel();
}

OAIQueryADatabase_200_response_results_inner_properties::~OAIQueryADatabase_200_response_results_inner_properties() {}

void OAIQueryADatabase_200_response_results_inner_properties::initializeModel() {

    m_author_isSet = false;
    m_author_isValid = false;

    m_link_isSet = false;
    m_link_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_publisher_isSet = false;
    m_publisher_isValid = false;

    m_publishing_release_date_isSet = false;
    m_publishing_release_date_isValid = false;

    m_read_isSet = false;
    m_read_isValid = false;

    m_score__5_isSet = false;
    m_score__5_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_summary_isSet = false;
    m_summary_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAIQueryADatabase_200_response_results_inner_properties::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIQueryADatabase_200_response_results_inner_properties::fromJsonObject(QJsonObject json) {

    m_author_isValid = ::OpenAPI::fromJsonValue(m_author, json[QString("Author")]);
    m_author_isSet = !json[QString("Author")].isNull() && m_author_isValid;

    m_link_isValid = ::OpenAPI::fromJsonValue(m_link, json[QString("Link")]);
    m_link_isSet = !json[QString("Link")].isNull() && m_link_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("Name")]);
    m_name_isSet = !json[QString("Name")].isNull() && m_name_isValid;

    m_publisher_isValid = ::OpenAPI::fromJsonValue(m_publisher, json[QString("Publisher")]);
    m_publisher_isSet = !json[QString("Publisher")].isNull() && m_publisher_isValid;

    m_publishing_release_date_isValid = ::OpenAPI::fromJsonValue(m_publishing_release_date, json[QString("Publishing/Release Date")]);
    m_publishing_release_date_isSet = !json[QString("Publishing/Release Date")].isNull() && m_publishing_release_date_isValid;

    m_read_isValid = ::OpenAPI::fromJsonValue(m_read, json[QString("Read")]);
    m_read_isSet = !json[QString("Read")].isNull() && m_read_isValid;

    m_score__5_isValid = ::OpenAPI::fromJsonValue(m_score__5, json[QString("Score /5")]);
    m_score__5_isSet = !json[QString("Score /5")].isNull() && m_score__5_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("Status")]);
    m_status_isSet = !json[QString("Status")].isNull() && m_status_isValid;

    m_summary_isValid = ::OpenAPI::fromJsonValue(m_summary, json[QString("Summary")]);
    m_summary_isSet = !json[QString("Summary")].isNull() && m_summary_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("Type")]);
    m_type_isSet = !json[QString("Type")].isNull() && m_type_isValid;
}

QString OAIQueryADatabase_200_response_results_inner_properties::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIQueryADatabase_200_response_results_inner_properties::asJsonObject() const {
    QJsonObject obj;
    if (m_author.isSet()) {
        obj.insert(QString("Author"), ::OpenAPI::toJsonValue(m_author));
    }
    if (m_link.isSet()) {
        obj.insert(QString("Link"), ::OpenAPI::toJsonValue(m_link));
    }
    if (m_name.isSet()) {
        obj.insert(QString("Name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_publisher.isSet()) {
        obj.insert(QString("Publisher"), ::OpenAPI::toJsonValue(m_publisher));
    }
    if (m_publishing_release_date.isSet()) {
        obj.insert(QString("Publishing/Release Date"), ::OpenAPI::toJsonValue(m_publishing_release_date));
    }
    if (m_read.isSet()) {
        obj.insert(QString("Read"), ::OpenAPI::toJsonValue(m_read));
    }
    if (m_score__5.isSet()) {
        obj.insert(QString("Score /5"), ::OpenAPI::toJsonValue(m_score__5));
    }
    if (m_status.isSet()) {
        obj.insert(QString("Status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_summary.isSet()) {
        obj.insert(QString("Summary"), ::OpenAPI::toJsonValue(m_summary));
    }
    if (m_type.isSet()) {
        obj.insert(QString("Type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

OAIQueryADatabase_200_response_results_inner_properties_Author OAIQueryADatabase_200_response_results_inner_properties::getAuthor() const {
    return m_author;
}
void OAIQueryADatabase_200_response_results_inner_properties::setAuthor(const OAIQueryADatabase_200_response_results_inner_properties_Author &author) {
    m_author = author;
    m_author_isSet = true;
}

bool OAIQueryADatabase_200_response_results_inner_properties::is_author_Set() const{
    return m_author_isSet;
}

bool OAIQueryADatabase_200_response_results_inner_properties::is_author_Valid() const{
    return m_author_isValid;
}

OAIQueryADatabase_200_response_results_inner_properties_Link OAIQueryADatabase_200_response_results_inner_properties::getLink() const {
    return m_link;
}
void OAIQueryADatabase_200_response_results_inner_properties::setLink(const OAIQueryADatabase_200_response_results_inner_properties_Link &link) {
    m_link = link;
    m_link_isSet = true;
}

bool OAIQueryADatabase_200_response_results_inner_properties::is_link_Set() const{
    return m_link_isSet;
}

bool OAIQueryADatabase_200_response_results_inner_properties::is_link_Valid() const{
    return m_link_isValid;
}

OAIQueryADatabase_200_response_results_inner_properties_Name OAIQueryADatabase_200_response_results_inner_properties::getName() const {
    return m_name;
}
void OAIQueryADatabase_200_response_results_inner_properties::setName(const OAIQueryADatabase_200_response_results_inner_properties_Name &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIQueryADatabase_200_response_results_inner_properties::is_name_Set() const{
    return m_name_isSet;
}

bool OAIQueryADatabase_200_response_results_inner_properties::is_name_Valid() const{
    return m_name_isValid;
}

OAIQueryADatabase_200_response_results_inner_properties_Publisher OAIQueryADatabase_200_response_results_inner_properties::getPublisher() const {
    return m_publisher;
}
void OAIQueryADatabase_200_response_results_inner_properties::setPublisher(const OAIQueryADatabase_200_response_results_inner_properties_Publisher &publisher) {
    m_publisher = publisher;
    m_publisher_isSet = true;
}

bool OAIQueryADatabase_200_response_results_inner_properties::is_publisher_Set() const{
    return m_publisher_isSet;
}

bool OAIQueryADatabase_200_response_results_inner_properties::is_publisher_Valid() const{
    return m_publisher_isValid;
}

OAIQueryADatabase_200_response_results_inner_properties_Publishing_Release_Date OAIQueryADatabase_200_response_results_inner_properties::getPublishingReleaseDate() const {
    return m_publishing_release_date;
}
void OAIQueryADatabase_200_response_results_inner_properties::setPublishingReleaseDate(const OAIQueryADatabase_200_response_results_inner_properties_Publishing_Release_Date &publishing_release_date) {
    m_publishing_release_date = publishing_release_date;
    m_publishing_release_date_isSet = true;
}

bool OAIQueryADatabase_200_response_results_inner_properties::is_publishing_release_date_Set() const{
    return m_publishing_release_date_isSet;
}

bool OAIQueryADatabase_200_response_results_inner_properties::is_publishing_release_date_Valid() const{
    return m_publishing_release_date_isValid;
}

OAIQueryADatabase_200_response_results_inner_properties_Read OAIQueryADatabase_200_response_results_inner_properties::getRead() const {
    return m_read;
}
void OAIQueryADatabase_200_response_results_inner_properties::setRead(const OAIQueryADatabase_200_response_results_inner_properties_Read &read) {
    m_read = read;
    m_read_isSet = true;
}

bool OAIQueryADatabase_200_response_results_inner_properties::is_read_Set() const{
    return m_read_isSet;
}

bool OAIQueryADatabase_200_response_results_inner_properties::is_read_Valid() const{
    return m_read_isValid;
}

OAIQueryADatabase_200_response_results_inner_properties_Score__5 OAIQueryADatabase_200_response_results_inner_properties::getScore5() const {
    return m_score__5;
}
void OAIQueryADatabase_200_response_results_inner_properties::setScore5(const OAIQueryADatabase_200_response_results_inner_properties_Score__5 &score__5) {
    m_score__5 = score__5;
    m_score__5_isSet = true;
}

bool OAIQueryADatabase_200_response_results_inner_properties::is_score__5_Set() const{
    return m_score__5_isSet;
}

bool OAIQueryADatabase_200_response_results_inner_properties::is_score__5_Valid() const{
    return m_score__5_isValid;
}

OAIQueryADatabase_200_response_results_inner_properties_Status OAIQueryADatabase_200_response_results_inner_properties::getStatus() const {
    return m_status;
}
void OAIQueryADatabase_200_response_results_inner_properties::setStatus(const OAIQueryADatabase_200_response_results_inner_properties_Status &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIQueryADatabase_200_response_results_inner_properties::is_status_Set() const{
    return m_status_isSet;
}

bool OAIQueryADatabase_200_response_results_inner_properties::is_status_Valid() const{
    return m_status_isValid;
}

OAIQueryADatabase_200_response_results_inner_properties_Summary OAIQueryADatabase_200_response_results_inner_properties::getSummary() const {
    return m_summary;
}
void OAIQueryADatabase_200_response_results_inner_properties::setSummary(const OAIQueryADatabase_200_response_results_inner_properties_Summary &summary) {
    m_summary = summary;
    m_summary_isSet = true;
}

bool OAIQueryADatabase_200_response_results_inner_properties::is_summary_Set() const{
    return m_summary_isSet;
}

bool OAIQueryADatabase_200_response_results_inner_properties::is_summary_Valid() const{
    return m_summary_isValid;
}

OAIQueryADatabase_200_response_results_inner_properties_Type OAIQueryADatabase_200_response_results_inner_properties::getType() const {
    return m_type;
}
void OAIQueryADatabase_200_response_results_inner_properties::setType(const OAIQueryADatabase_200_response_results_inner_properties_Type &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIQueryADatabase_200_response_results_inner_properties::is_type_Set() const{
    return m_type_isSet;
}

bool OAIQueryADatabase_200_response_results_inner_properties::is_type_Valid() const{
    return m_type_isValid;
}

bool OAIQueryADatabase_200_response_results_inner_properties::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_author.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_link.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_name.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_publisher.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_publishing_release_date.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_read.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_score__5.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_summary.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_type.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIQueryADatabase_200_response_results_inner_properties::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
