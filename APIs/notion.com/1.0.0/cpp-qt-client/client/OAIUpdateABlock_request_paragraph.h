/**
 * Notion API
 * Hello and welcome!  To make use of this API collection collection as it's written, please duplicate [this database template](https://www.notion.so/8e2c2b769e1d47d287b9ed3035d607ae?v=dc1b92875fb94f10834ba8d36549bd2a).  [Create an integration](https://www.notion.so/my-integrations) to retrieve an API token, add your database and page ID's as variables in the collection, and start making your requests!  For our full documentation, including sample integrations and guides, visit [developers.notion.com](developers.notion.com)  Need more help? Join our [developer community on Slack](https://join.slack.com/t/notiondevs/shared_invite/zt-lkrnk74h-YmPRroySRFGiqgjI193AqA/)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpdateABlock_request_paragraph.h
 *
 * 
 */

#ifndef OAIUpdateABlock_request_paragraph_H
#define OAIUpdateABlock_request_paragraph_H

#include <QJsonObject>

#include "OAIUpdateABlock_request_paragraph_rich_text_inner.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUpdateABlock_request_paragraph_rich_text_inner;

class OAIUpdateABlock_request_paragraph : public OAIObject {
public:
    OAIUpdateABlock_request_paragraph();
    OAIUpdateABlock_request_paragraph(QString json);
    ~OAIUpdateABlock_request_paragraph() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIUpdateABlock_request_paragraph_rich_text_inner> getRichText() const;
    void setRichText(const QList<OAIUpdateABlock_request_paragraph_rich_text_inner> &rich_text);
    bool is_rich_text_Set() const;
    bool is_rich_text_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIUpdateABlock_request_paragraph_rich_text_inner> m_rich_text;
    bool m_rich_text_isSet;
    bool m_rich_text_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpdateABlock_request_paragraph)

#endif // OAIUpdateABlock_request_paragraph_H
