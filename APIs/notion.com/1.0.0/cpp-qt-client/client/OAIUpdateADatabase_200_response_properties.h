/**
 * Notion API
 * Hello and welcome!  To make use of this API collection collection as it's written, please duplicate [this database template](https://www.notion.so/8e2c2b769e1d47d287b9ed3035d607ae?v=dc1b92875fb94f10834ba8d36549bd2a).  [Create an integration](https://www.notion.so/my-integrations) to retrieve an API token, add your database and page ID's as variables in the collection, and start making your requests!  For our full documentation, including sample integrations and guides, visit [developers.notion.com](developers.notion.com)  Need more help? Join our [developer community on Slack](https://join.slack.com/t/notiondevs/shared_invite/zt-lkrnk74h-YmPRroySRFGiqgjI193AqA/)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpdateADatabase_200_response_properties.h
 *
 * 
 */

#ifndef OAIUpdateADatabase_200_response_properties_H
#define OAIUpdateADatabase_200_response_properties_H

#include <QJsonObject>

#include "OAIRetrieveADatabase_200_response_properties_Author.h"
#include "OAIRetrieveADatabase_200_response_properties_Link.h"
#include "OAIRetrieveADatabase_200_response_properties_Name.h"
#include "OAIRetrieveADatabase_200_response_properties_Read.h"
#include "OAIUpdateADatabase_200_response_properties_Publisher.h"
#include "OAIUpdateADatabase_200_response_properties_Publishing_Release_Date.h"
#include "OAIUpdateADatabase_200_response_properties_Score__5.h"
#include "OAIUpdateADatabase_200_response_properties_Status.h"
#include "OAIUpdateADatabase_200_response_properties_Summary.h"
#include "OAIUpdateADatabase_200_response_properties_Type.h"
#include "OAIUpdateADatabase_200_response_properties_Wine_Pairing.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIRetrieveADatabase_200_response_properties_Author;
class OAIRetrieveADatabase_200_response_properties_Link;
class OAIRetrieveADatabase_200_response_properties_Name;
class OAIUpdateADatabase_200_response_properties_Publisher;
class OAIUpdateADatabase_200_response_properties_Publishing_Release_Date;
class OAIRetrieveADatabase_200_response_properties_Read;
class OAIUpdateADatabase_200_response_properties_Score__5;
class OAIUpdateADatabase_200_response_properties_Status;
class OAIUpdateADatabase_200_response_properties_Summary;
class OAIUpdateADatabase_200_response_properties_Type;
class OAIUpdateADatabase_200_response_properties_Wine_Pairing;

class OAIUpdateADatabase_200_response_properties : public OAIObject {
public:
    OAIUpdateADatabase_200_response_properties();
    OAIUpdateADatabase_200_response_properties(QString json);
    ~OAIUpdateADatabase_200_response_properties() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIRetrieveADatabase_200_response_properties_Author getAuthor() const;
    void setAuthor(const OAIRetrieveADatabase_200_response_properties_Author &author);
    bool is_author_Set() const;
    bool is_author_Valid() const;

    OAIRetrieveADatabase_200_response_properties_Link getLink() const;
    void setLink(const OAIRetrieveADatabase_200_response_properties_Link &link);
    bool is_link_Set() const;
    bool is_link_Valid() const;

    OAIRetrieveADatabase_200_response_properties_Name getName() const;
    void setName(const OAIRetrieveADatabase_200_response_properties_Name &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAIUpdateADatabase_200_response_properties_Publisher getPublisher() const;
    void setPublisher(const OAIUpdateADatabase_200_response_properties_Publisher &publisher);
    bool is_publisher_Set() const;
    bool is_publisher_Valid() const;

    OAIUpdateADatabase_200_response_properties_Publishing_Release_Date getPublishingReleaseDate() const;
    void setPublishingReleaseDate(const OAIUpdateADatabase_200_response_properties_Publishing_Release_Date &publishing_release_date);
    bool is_publishing_release_date_Set() const;
    bool is_publishing_release_date_Valid() const;

    OAIRetrieveADatabase_200_response_properties_Read getRead() const;
    void setRead(const OAIRetrieveADatabase_200_response_properties_Read &read);
    bool is_read_Set() const;
    bool is_read_Valid() const;

    OAIUpdateADatabase_200_response_properties_Score__5 getScore5() const;
    void setScore5(const OAIUpdateADatabase_200_response_properties_Score__5 &score__5);
    bool is_score__5_Set() const;
    bool is_score__5_Valid() const;

    OAIUpdateADatabase_200_response_properties_Status getStatus() const;
    void setStatus(const OAIUpdateADatabase_200_response_properties_Status &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    OAIUpdateADatabase_200_response_properties_Summary getSummary() const;
    void setSummary(const OAIUpdateADatabase_200_response_properties_Summary &summary);
    bool is_summary_Set() const;
    bool is_summary_Valid() const;

    OAIUpdateADatabase_200_response_properties_Type getType() const;
    void setType(const OAIUpdateADatabase_200_response_properties_Type &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    OAIUpdateADatabase_200_response_properties_Wine_Pairing getWinePairing() const;
    void setWinePairing(const OAIUpdateADatabase_200_response_properties_Wine_Pairing &wine_pairing);
    bool is_wine_pairing_Set() const;
    bool is_wine_pairing_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIRetrieveADatabase_200_response_properties_Author m_author;
    bool m_author_isSet;
    bool m_author_isValid;

    OAIRetrieveADatabase_200_response_properties_Link m_link;
    bool m_link_isSet;
    bool m_link_isValid;

    OAIRetrieveADatabase_200_response_properties_Name m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAIUpdateADatabase_200_response_properties_Publisher m_publisher;
    bool m_publisher_isSet;
    bool m_publisher_isValid;

    OAIUpdateADatabase_200_response_properties_Publishing_Release_Date m_publishing_release_date;
    bool m_publishing_release_date_isSet;
    bool m_publishing_release_date_isValid;

    OAIRetrieveADatabase_200_response_properties_Read m_read;
    bool m_read_isSet;
    bool m_read_isValid;

    OAIUpdateADatabase_200_response_properties_Score__5 m_score__5;
    bool m_score__5_isSet;
    bool m_score__5_isValid;

    OAIUpdateADatabase_200_response_properties_Status m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    OAIUpdateADatabase_200_response_properties_Summary m_summary;
    bool m_summary_isSet;
    bool m_summary_isValid;

    OAIUpdateADatabase_200_response_properties_Type m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    OAIUpdateADatabase_200_response_properties_Wine_Pairing m_wine_pairing;
    bool m_wine_pairing_isSet;
    bool m_wine_pairing_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpdateADatabase_200_response_properties)

#endif // OAIUpdateADatabase_200_response_properties_H
