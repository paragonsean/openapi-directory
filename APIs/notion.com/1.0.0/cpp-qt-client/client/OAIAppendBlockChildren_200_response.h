/**
 * Notion API
 * Hello and welcome!  To make use of this API collection collection as it's written, please duplicate [this database template](https://www.notion.so/8e2c2b769e1d47d287b9ed3035d607ae?v=dc1b92875fb94f10834ba8d36549bd2a).  [Create an integration](https://www.notion.so/my-integrations) to retrieve an API token, add your database and page ID's as variables in the collection, and start making your requests!  For our full documentation, including sample integrations and guides, visit [developers.notion.com](developers.notion.com)  Need more help? Join our [developer community on Slack](https://join.slack.com/t/notiondevs/shared_invite/zt-lkrnk74h-YmPRroySRFGiqgjI193AqA/)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAppendBlockChildren_200_response.h
 *
 * 
 */

#ifndef OAIAppendBlockChildren_200_response_H
#define OAIAppendBlockChildren_200_response_H

#include <QJsonObject>

#include "OAIAppendBlockChildren_200_response_child_page.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAppendBlockChildren_200_response_child_page;

class OAIAppendBlockChildren_200_response : public OAIObject {
public:
    OAIAppendBlockChildren_200_response();
    OAIAppendBlockChildren_200_response(QString json);
    ~OAIAppendBlockChildren_200_response() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAppendBlockChildren_200_response_child_page getChildPage() const;
    void setChildPage(const OAIAppendBlockChildren_200_response_child_page &child_page);
    bool is_child_page_Set() const;
    bool is_child_page_Valid() const;

    QString getCreatedTime() const;
    void setCreatedTime(const QString &created_time);
    bool is_created_time_Set() const;
    bool is_created_time_Valid() const;

    bool isHasChildren() const;
    void setHasChildren(const bool &has_children);
    bool is_has_children_Set() const;
    bool is_has_children_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getLastEditedTime() const;
    void setLastEditedTime(const QString &last_edited_time);
    bool is_last_edited_time_Set() const;
    bool is_last_edited_time_Valid() const;

    QString getObject() const;
    void setObject(const QString &object);
    bool is_object_Set() const;
    bool is_object_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAppendBlockChildren_200_response_child_page m_child_page;
    bool m_child_page_isSet;
    bool m_child_page_isValid;

    QString m_created_time;
    bool m_created_time_isSet;
    bool m_created_time_isValid;

    bool m_has_children;
    bool m_has_children_isSet;
    bool m_has_children_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_last_edited_time;
    bool m_last_edited_time_isSet;
    bool m_last_edited_time_isValid;

    QString m_object;
    bool m_object_isSet;
    bool m_object_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAppendBlockChildren_200_response)

#endif // OAIAppendBlockChildren_200_response_H
