/**
 * hetras Hotel API Version 0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import RoomType from '../model/RoomType';

/**
* RoomTypes service.
* @module api/RoomTypesApi
* @version v0
*/
export default class RoomTypesApi {

    /**
    * Constructs a new RoomTypesApi. 
    * @alias module:api/RoomTypesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the roomTypesGetRoomType operation.
     * @callback module:api/RoomTypesApi~roomTypesGetRoomTypeCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RoomType} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get all the details for a specific room type in the hotel.
     * With this call you can load the details about a specific room type in the hotel.
     * @param {String} appId Application identifier
     * @param {String} appKey Application key.
     * @param {Number} hotelId The hotel id the room type belongs to.
     * @param {String} code The code of the room type you want to see details for.
     * @param {module:api/RoomTypesApi~roomTypesGetRoomTypeCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RoomType}
     */
    roomTypesGetRoomType(appId, appKey, hotelId, code, callback) {
      let postBody = null;
      // verify the required parameter 'appId' is set
      if (appId === undefined || appId === null) {
        throw new Error("Missing the required parameter 'appId' when calling roomTypesGetRoomType");
      }
      // verify the required parameter 'appKey' is set
      if (appKey === undefined || appKey === null) {
        throw new Error("Missing the required parameter 'appKey' when calling roomTypesGetRoomType");
      }
      // verify the required parameter 'hotelId' is set
      if (hotelId === undefined || hotelId === null) {
        throw new Error("Missing the required parameter 'hotelId' when calling roomTypesGetRoomType");
      }
      // verify the required parameter 'code' is set
      if (code === undefined || code === null) {
        throw new Error("Missing the required parameter 'code' when calling roomTypesGetRoomType");
      }

      let pathParams = {
        'hotelId': hotelId,
        'code': code
      };
      let queryParams = {
      };
      let headerParams = {
        'App-Id': appId,
        'App-Key': appKey
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json'];
      let returnType = RoomType;
      return this.apiClient.callApi(
        '/api/hotel/v0/hotels/{hotelId}/room_types/{code}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the roomTypesGetRoomTypes operation.
     * @callback module:api/RoomTypesApi~roomTypesGetRoomTypesCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/RoomType>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a list with the details of all room types for for the specified hotel id.
     * With this call you can load the details about a all available room types for the specified hotel.
     * @param {String} appId Application identifier
     * @param {String} appKey Application key.
     * @param {Number} hotelId The hotel id the room type belongs to.
     * @param {module:api/RoomTypesApi~roomTypesGetRoomTypesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/RoomType>}
     */
    roomTypesGetRoomTypes(appId, appKey, hotelId, callback) {
      let postBody = null;
      // verify the required parameter 'appId' is set
      if (appId === undefined || appId === null) {
        throw new Error("Missing the required parameter 'appId' when calling roomTypesGetRoomTypes");
      }
      // verify the required parameter 'appKey' is set
      if (appKey === undefined || appKey === null) {
        throw new Error("Missing the required parameter 'appKey' when calling roomTypesGetRoomTypes");
      }
      // verify the required parameter 'hotelId' is set
      if (hotelId === undefined || hotelId === null) {
        throw new Error("Missing the required parameter 'hotelId' when calling roomTypesGetRoomTypes");
      }

      let pathParams = {
        'hotelId': hotelId
      };
      let queryParams = {
      };
      let headerParams = {
        'App-Id': appId,
        'App-Key': appKey
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json'];
      let returnType = [RoomType];
      return this.apiClient.callApi(
        '/api/hotel/v0/hotels/{hotelId}/room_types', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
