/**
 * hetras Hotel API Version 0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Hotel from '../model/Hotel';

/**
* Hotels service.
* @module api/HotelsApi
* @version v0
*/
export default class HotelsApi {

    /**
    * Constructs a new HotelsApi. 
    * @alias module:api/HotelsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the hotelsGetHotel operation.
     * @callback module:api/HotelsApi~hotelsGetHotelCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Hotel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get the details of the hotel with the speccified hotel id.
     * Load the details about the specified hotel.
     * @param {String} appId Application identifier
     * @param {String} appKey Application key.
     * @param {Number} hotelId 
     * @param {module:api/HotelsApi~hotelsGetHotelCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Hotel}
     */
    hotelsGetHotel(appId, appKey, hotelId, callback) {
      let postBody = null;
      // verify the required parameter 'appId' is set
      if (appId === undefined || appId === null) {
        throw new Error("Missing the required parameter 'appId' when calling hotelsGetHotel");
      }
      // verify the required parameter 'appKey' is set
      if (appKey === undefined || appKey === null) {
        throw new Error("Missing the required parameter 'appKey' when calling hotelsGetHotel");
      }
      // verify the required parameter 'hotelId' is set
      if (hotelId === undefined || hotelId === null) {
        throw new Error("Missing the required parameter 'hotelId' when calling hotelsGetHotel");
      }

      let pathParams = {
        'hotelId': hotelId
      };
      let queryParams = {
      };
      let headerParams = {
        'App-Id': appId,
        'App-Key': appKey
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json'];
      let returnType = Hotel;
      return this.apiClient.callApi(
        '/api/hotel/v0/hotels/{hotelId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the hotelsGetHotels operation.
     * @callback module:api/HotelsApi~hotelsGetHotelsCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/Hotel>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a list of all the hotels of a chain your application has access to.
     * Load the details about all the hotels your application has access to.
     * @param {String} appId Application identifier
     * @param {String} appKey Application key.
     * @param {module:api/HotelsApi~hotelsGetHotelsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/Hotel>}
     */
    hotelsGetHotels(appId, appKey, callback) {
      let postBody = null;
      // verify the required parameter 'appId' is set
      if (appId === undefined || appId === null) {
        throw new Error("Missing the required parameter 'appId' when calling hotelsGetHotels");
      }
      // verify the required parameter 'appKey' is set
      if (appKey === undefined || appKey === null) {
        throw new Error("Missing the required parameter 'appKey' when calling hotelsGetHotels");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'App-Id': appId,
        'App-Key': appKey
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json'];
      let returnType = [Hotel];
      return this.apiClient.callApi(
        '/api/hotel/v0/hotels', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
