/**
 * hetras Hotel API Version 0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import YieldableRateTimeSlice from '../model/YieldableRateTimeSlice';

/**
* YieldableRates service.
* @module api/YieldableRatesApi
* @version v0
*/
export default class YieldableRatesApi {

    /**
    * Constructs a new YieldableRatesApi. 
    * @alias module:api/YieldableRatesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the yieldableRatesSavePrices operation.
     * @callback module:api/YieldableRatesApi~yieldableRatesSavePricesCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Saves Yieldable Rate Prices for existing Yieldable Rateplan.
     * Saves Yieldable Rate Prices for existing Yieldable Rateplan. The rateplan has been created before and with this End Point we               create or update the rate prices. If the Yieldable rateplan prices exist it updates them with the new price if not it creates new price entries.<br />              For more details on how the API responds to errors please check our documentation on               <a href=\"https://developer.hetras.com/docs/errors/\" onfocus=\"this.blur()\">Error Handling</a>.
     * @param {String} appId Application identifier
     * @param {String} appKey Application key.
     * @param {Number} hotelId Specifies the hotelId which identifies Hotel for which the operation will be performed.
     * @param {String} rateplanCode Specifies the rateplanCode for which the operation will be performed.
     * @param {Array.<module:model/YieldableRateTimeSlice>} yieldableRatePrices Specifies the the Yieldable rateplan and prices details to be created or updated.
     * @param {module:api/YieldableRatesApi~yieldableRatesSavePricesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    yieldableRatesSavePrices(appId, appKey, hotelId, rateplanCode, yieldableRatePrices, callback) {
      let postBody = yieldableRatePrices;
      // verify the required parameter 'appId' is set
      if (appId === undefined || appId === null) {
        throw new Error("Missing the required parameter 'appId' when calling yieldableRatesSavePrices");
      }
      // verify the required parameter 'appKey' is set
      if (appKey === undefined || appKey === null) {
        throw new Error("Missing the required parameter 'appKey' when calling yieldableRatesSavePrices");
      }
      // verify the required parameter 'hotelId' is set
      if (hotelId === undefined || hotelId === null) {
        throw new Error("Missing the required parameter 'hotelId' when calling yieldableRatesSavePrices");
      }
      // verify the required parameter 'rateplanCode' is set
      if (rateplanCode === undefined || rateplanCode === null) {
        throw new Error("Missing the required parameter 'rateplanCode' when calling yieldableRatesSavePrices");
      }
      // verify the required parameter 'yieldableRatePrices' is set
      if (yieldableRatePrices === undefined || yieldableRatePrices === null) {
        throw new Error("Missing the required parameter 'yieldableRatePrices' when calling yieldableRatesSavePrices");
      }

      let pathParams = {
        'hotelId': hotelId,
        'rateplanCode': rateplanCode
      };
      let queryParams = {
      };
      let headerParams = {
        'App-Id': appId,
        'App-Key': appKey
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json', 'text/json'];
      let accepts = ['application/json', 'text/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/api/hotel/v0/hotels/{hotelId}/yieldable_rateplans/{rateplanCode}/$rates', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
