/**
 * hetras Hotel API Version 0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import RelatedRateplan from './RelatedRateplan';

/**
 * The Derivation model module.
 * @module model/Derivation
 * @version v0
 */
class Derivation {
    /**
     * Constructs a new <code>Derivation</code>.
     * @alias module:model/Derivation
     */
    constructor() { 
        
        Derivation.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Derivation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Derivation} obj Optional instance to populate.
     * @return {module:model/Derivation} The populated <code>Derivation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Derivation();

            if (data.hasOwnProperty('adjustment')) {
                obj['adjustment'] = ApiClient.convertToType(data['adjustment'], 'String');
            }
            if (data.hasOwnProperty('base_rateplan')) {
                obj['base_rateplan'] = RelatedRateplan.constructFromObject(data['base_rateplan']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Derivation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Derivation</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['adjustment'] && !(typeof data['adjustment'] === 'string' || data['adjustment'] instanceof String)) {
            throw new Error("Expected the field `adjustment` to be a primitive type in the JSON string but got " + data['adjustment']);
        }
        // validate the optional field `base_rateplan`
        if (data['base_rateplan']) { // data not null
          RelatedRateplan.validateJSON(data['base_rateplan']);
        }

        return true;
    }


}



/**
 * Mode for the calculation of the daily rates adjustment
 * @member {module:model/Derivation.AdjustmentEnum} adjustment
 */
Derivation.prototype['adjustment'] = undefined;

/**
 * @member {module:model/RelatedRateplan} base_rateplan
 */
Derivation.prototype['base_rateplan'] = undefined;





/**
 * Allowed values for the <code>adjustment</code> property.
 * @enum {String}
 * @readonly
 */
Derivation['AdjustmentEnum'] = {

    /**
     * value: "Amount"
     * @const
     */
    "Amount": "Amount",

    /**
     * value: "Percentage"
     * @const
     */
    "Percentage": "Percentage"
};



export default Derivation;

