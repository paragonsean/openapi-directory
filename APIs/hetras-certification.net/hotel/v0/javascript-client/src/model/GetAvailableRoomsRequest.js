/**
 * hetras Hotel API Version 0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GetAvailableRoomsRequest model module.
 * @module model/GetAvailableRoomsRequest
 * @version v0
 */
class GetAvailableRoomsRequest {
    /**
     * Constructs a new <code>GetAvailableRoomsRequest</code>.
     * @alias module:model/GetAvailableRoomsRequest
     * @param from {Date} Rooms returned will not be assigned to a reservation or be under maintenance between this date              and the specified to date. Still there could be departing reservations or ending maintenances              for this date.
     * @param to {Date} Rooms returned will not be assigned to a reservation or be under maintenance between the specified              from date and this date. Still there could be arriving reservations or beginning maintenances              for this date.
     */
    constructor(from, to) { 
        
        GetAvailableRoomsRequest.initialize(this, from, to);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, from, to) { 
        obj['from'] = from;
        obj['to'] = to;
    }

    /**
     * Constructs a <code>GetAvailableRoomsRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetAvailableRoomsRequest} obj Optional instance to populate.
     * @return {module:model/GetAvailableRoomsRequest} The populated <code>GetAvailableRoomsRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetAvailableRoomsRequest();

            if (data.hasOwnProperty('adults')) {
                obj['adults'] = ApiClient.convertToType(data['adults'], 'Blob');
            }
            if (data.hasOwnProperty('amenities')) {
                obj['amenities'] = ApiClient.convertToType(data['amenities'], ['String']);
            }
            if (data.hasOwnProperty('from')) {
                obj['from'] = ApiClient.convertToType(data['from'], 'Date');
            }
            if (data.hasOwnProperty('includeOutOfService')) {
                obj['includeOutOfService'] = ApiClient.convertToType(data['includeOutOfService'], 'Boolean');
            }
            if (data.hasOwnProperty('locations')) {
                obj['locations'] = ApiClient.convertToType(data['locations'], ['String']);
            }
            if (data.hasOwnProperty('roomTypes')) {
                obj['roomTypes'] = ApiClient.convertToType(data['roomTypes'], ['String']);
            }
            if (data.hasOwnProperty('to')) {
                obj['to'] = ApiClient.convertToType(data['to'], 'Date');
            }
            if (data.hasOwnProperty('views')) {
                obj['views'] = ApiClient.convertToType(data['views'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetAvailableRoomsRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetAvailableRoomsRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of GetAvailableRoomsRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is an array
        if (!Array.isArray(data['amenities'])) {
            throw new Error("Expected the field `amenities` to be an array in the JSON data but got " + data['amenities']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['locations'])) {
            throw new Error("Expected the field `locations` to be an array in the JSON data but got " + data['locations']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['roomTypes'])) {
            throw new Error("Expected the field `roomTypes` to be an array in the JSON data but got " + data['roomTypes']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['views'])) {
            throw new Error("Expected the field `views` to be an array in the JSON data but got " + data['views']);
        }

        return true;
    }


}

GetAvailableRoomsRequest.RequiredProperties = ["from", "to"];

/**
 * Specifies number of adults the returned rooms will have to be able to house. The default value is 1.
 * @member {Blob} adults
 */
GetAvailableRoomsRequest.prototype['adults'] = undefined;

/**
 * Return result only for rooms having all of the given amenities. You can provide a comma seperated list of               amenity codes.
 * @member {Array.<String>} amenities
 */
GetAvailableRoomsRequest.prototype['amenities'] = undefined;

/**
 * Rooms returned will not be assigned to a reservation or be under maintenance between this date              and the specified to date. Still there could be departing reservations or ending maintenances              for this date.
 * @member {Date} from
 */
GetAvailableRoomsRequest.prototype['from'] = undefined;

/**
 * Should rooms that are set OutOfService in the defined time period be returned as available. By default              they are not.
 * @member {Boolean} includeOutOfService
 */
GetAvailableRoomsRequest.prototype['includeOutOfService'] = undefined;

/**
 * Return result only for rooms having at least one of the specified locations. You can provide a comma seperated list of               location codes.
 * @member {Array.<String>} locations
 */
GetAvailableRoomsRequest.prototype['locations'] = undefined;

/**
 * Return result only for rooms for the given room types. Allows to pass a comma-separated list of room types.
 * @member {Array.<String>} roomTypes
 */
GetAvailableRoomsRequest.prototype['roomTypes'] = undefined;

/**
 * Rooms returned will not be assigned to a reservation or be under maintenance between the specified              from date and this date. Still there could be arriving reservations or beginning maintenances              for this date.
 * @member {Date} to
 */
GetAvailableRoomsRequest.prototype['to'] = undefined;

/**
 * Return result only for rooms having at least one of the specified views. You can provide a comma seperated list of               view codes.
 * @member {Array.<String>} views
 */
GetAvailableRoomsRequest.prototype['views'] = undefined;






export default GetAvailableRoomsRequest;

