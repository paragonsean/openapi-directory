/**
 * hetras Hotel API Version 0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import RoomMaintenance from './RoomMaintenance';

/**
 * The RoomStatus model module.
 * @module model/RoomStatus
 * @version v0
 */
class RoomStatus {
    /**
     * Constructs a new <code>RoomStatus</code>.
     * Represents current room status data.
     * @alias module:model/RoomStatus
     */
    constructor() { 
        
        RoomStatus.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RoomStatus</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RoomStatus} obj Optional instance to populate.
     * @return {module:model/RoomStatus} The populated <code>RoomStatus</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RoomStatus();

            if (data.hasOwnProperty('condition')) {
                obj['condition'] = ApiClient.convertToType(data['condition'], 'String');
            }
            if (data.hasOwnProperty('frontdesk_occupancy')) {
                obj['frontdesk_occupancy'] = ApiClient.convertToType(data['frontdesk_occupancy'], 'String');
            }
            if (data.hasOwnProperty('housekeeping_occupancy')) {
                obj['housekeeping_occupancy'] = ApiClient.convertToType(data['housekeeping_occupancy'], 'String');
            }
            if (data.hasOwnProperty('maintenance')) {
                obj['maintenance'] = RoomMaintenance.constructFromObject(data['maintenance']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RoomStatus</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RoomStatus</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['condition'] && !(typeof data['condition'] === 'string' || data['condition'] instanceof String)) {
            throw new Error("Expected the field `condition` to be a primitive type in the JSON string but got " + data['condition']);
        }
        // ensure the json data is a string
        if (data['frontdesk_occupancy'] && !(typeof data['frontdesk_occupancy'] === 'string' || data['frontdesk_occupancy'] instanceof String)) {
            throw new Error("Expected the field `frontdesk_occupancy` to be a primitive type in the JSON string but got " + data['frontdesk_occupancy']);
        }
        // ensure the json data is a string
        if (data['housekeeping_occupancy'] && !(typeof data['housekeeping_occupancy'] === 'string' || data['housekeeping_occupancy'] instanceof String)) {
            throw new Error("Expected the field `housekeeping_occupancy` to be a primitive type in the JSON string but got " + data['housekeeping_occupancy']);
        }
        // validate the optional field `maintenance`
        if (data['maintenance']) { // data not null
          RoomMaintenance.validateJSON(data['maintenance']);
        }

        return true;
    }


}



/**
 * Room Condition status
 * @member {module:model/RoomStatus.ConditionEnum} condition
 */
RoomStatus.prototype['condition'] = undefined;

/**
 * The frontdesk occupancy is set by reservation checkin and checkout. It can differ from the              housekeeping occupancy
 * @member {module:model/RoomStatus.FrontdeskOccupancyEnum} frontdesk_occupancy
 */
RoomStatus.prototype['frontdesk_occupancy'] = undefined;

/**
 * The housekeeping occupancy status is defined by the housekeeping staff. Usually it matches the              frontdesk occupancy, but sometimes the reservation is still inhouse, but it looks like there is no              guest in the room anymore. Then the statuses can differ.
 * @member {module:model/RoomStatus.HousekeepingOccupancyEnum} housekeeping_occupancy
 */
RoomStatus.prototype['housekeeping_occupancy'] = undefined;

/**
 * @member {module:model/RoomMaintenance} maintenance
 */
RoomStatus.prototype['maintenance'] = undefined;





/**
 * Allowed values for the <code>condition</code> property.
 * @enum {String}
 * @readonly
 */
RoomStatus['ConditionEnum'] = {

    /**
     * value: "CleanNotInspected"
     * @const
     */
    "CleanNotInspected": "CleanNotInspected",

    /**
     * value: "Clean"
     * @const
     */
    "Clean": "Clean",

    /**
     * value: "Dirty"
     * @const
     */
    "Dirty": "Dirty"
};


/**
 * Allowed values for the <code>frontdesk_occupancy</code> property.
 * @enum {String}
 * @readonly
 */
RoomStatus['FrontdeskOccupancyEnum'] = {

    /**
     * value: "Occupied"
     * @const
     */
    "Occupied": "Occupied",

    /**
     * value: "Vacant"
     * @const
     */
    "Vacant": "Vacant"
};


/**
 * Allowed values for the <code>housekeeping_occupancy</code> property.
 * @enum {String}
 * @readonly
 */
RoomStatus['HousekeepingOccupancyEnum'] = {

    /**
     * value: "Occupied"
     * @const
     */
    "Occupied": "Occupied",

    /**
     * value: "Vacant"
     * @const
     */
    "Vacant": "Vacant"
};



export default RoomStatus;

