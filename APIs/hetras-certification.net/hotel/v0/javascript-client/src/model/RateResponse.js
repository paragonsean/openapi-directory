/**
 * hetras Hotel API Version 0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import LinkObject from './LinkObject';
import Policy from './Policy';
import PriceDerivation from './PriceDerivation';
import RoomTypeSupplement from './RoomTypeSupplement';

/**
 * The RateResponse model module.
 * @module model/RateResponse
 * @version v0
 */
class RateResponse {
    /**
     * Constructs a new <code>RateResponse</code>.
     * @alias module:model/RateResponse
     */
    constructor() { 
        
        RateResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RateResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RateResponse} obj Optional instance to populate.
     * @return {module:model/RateResponse} The populated <code>RateResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RateResponse();

            if (data.hasOwnProperty('_links')) {
                obj['_links'] = ApiClient.convertToType(data['_links'], {'String': LinkObject});
            }
            if (data.hasOwnProperty('base_price')) {
                obj['base_price'] = ApiClient.convertToType(data['base_price'], 'Number');
            }
            if (data.hasOwnProperty('business_day')) {
                obj['business_day'] = ApiClient.convertToType(data['business_day'], 'Date');
            }
            if (data.hasOwnProperty('cancellation_policy')) {
                obj['cancellation_policy'] = Policy.constructFromObject(data['cancellation_policy']);
            }
            if (data.hasOwnProperty('derivation')) {
                obj['derivation'] = PriceDerivation.constructFromObject(data['derivation']);
            }
            if (data.hasOwnProperty('minimum_guarantee_type')) {
                obj['minimum_guarantee_type'] = ApiClient.convertToType(data['minimum_guarantee_type'], 'String');
            }
            if (data.hasOwnProperty('per_person_surcharge')) {
                obj['per_person_surcharge'] = ApiClient.convertToType(data['per_person_surcharge'], 'Number');
            }
            if (data.hasOwnProperty('room_type_supplements')) {
                obj['room_type_supplements'] = ApiClient.convertToType(data['room_type_supplements'], [RoomTypeSupplement]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RateResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RateResponse</code>.
     */
    static validateJSON(data) {
        // validate the optional field `cancellation_policy`
        if (data['cancellation_policy']) { // data not null
          Policy.validateJSON(data['cancellation_policy']);
        }
        // validate the optional field `derivation`
        if (data['derivation']) { // data not null
          PriceDerivation.validateJSON(data['derivation']);
        }
        // ensure the json data is a string
        if (data['minimum_guarantee_type'] && !(typeof data['minimum_guarantee_type'] === 'string' || data['minimum_guarantee_type'] instanceof String)) {
            throw new Error("Expected the field `minimum_guarantee_type` to be a primitive type in the JSON string but got " + data['minimum_guarantee_type']);
        }
        if (data['room_type_supplements']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['room_type_supplements'])) {
                throw new Error("Expected the field `room_type_supplements` to be an array in the JSON data but got " + data['room_type_supplements']);
            }
            // validate the optional field `room_type_supplements` (array)
            for (const item of data['room_type_supplements']) {
                RoomTypeSupplement.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Collection of links to related resources
 * @member {Object.<String, module:model/LinkObject>} _links
 */
RateResponse.prototype['_links'] = undefined;

/**
 * The price for this business day for the default room type and occupancy of one adult. The price is              only available for base rateplans. Please be aware that it might be the case that the default room              type is not sold by the rateplan. Nevertheless the supplements will always be added to the price for               the default room type and one adult
 * @member {Number} base_price
 */
RateResponse.prototype['base_price'] = undefined;

/**
 * The business day
 * @member {Date} business_day
 */
RateResponse.prototype['business_day'] = undefined;

/**
 * @member {module:model/Policy} cancellation_policy
 */
RateResponse.prototype['cancellation_policy'] = undefined;

/**
 * @member {module:model/PriceDerivation} derivation
 */
RateResponse.prototype['derivation'] = undefined;

/**
 * The minimum guarantee
 * @member {module:model/RateResponse.MinimumGuaranteeTypeEnum} minimum_guarantee_type
 */
RateResponse.prototype['minimum_guarantee_type'] = undefined;

/**
 * The surcharge per additional adult staying in the room. It is only available on base rateplans
 * @member {Number} per_person_surcharge
 */
RateResponse.prototype['per_person_surcharge'] = undefined;

/**
 * List of supplements added to the price per room type
 * @member {Array.<module:model/RoomTypeSupplement>} room_type_supplements
 */
RateResponse.prototype['room_type_supplements'] = undefined;





/**
 * Allowed values for the <code>minimum_guarantee_type</code> property.
 * @enum {String}
 * @readonly
 */
RateResponse['MinimumGuaranteeTypeEnum'] = {

    /**
     * value: "PM4Hold"
     * @const
     */
    "PM4Hold": "PM4Hold",

    /**
     * value: "PM6Hold"
     * @const
     */
    "PM6Hold": "PM6Hold",

    /**
     * value: "GuaranteeToCreditCard"
     * @const
     */
    "GuaranteeToCreditCard": "GuaranteeToCreditCard",

    /**
     * value: "GuaranteeToGuestAccount"
     * @const
     */
    "GuaranteeToGuestAccount": "GuaranteeToGuestAccount",

    /**
     * value: "GuaranteeByTravelAgent"
     * @const
     */
    "GuaranteeByTravelAgent": "GuaranteeByTravelAgent",

    /**
     * value: "GuaranteeByCompany"
     * @const
     */
    "GuaranteeByCompany": "GuaranteeByCompany",

    /**
     * value: "Deposit"
     * @const
     */
    "Deposit": "Deposit",

    /**
     * value: "Voucher"
     * @const
     */
    "Voucher": "Voucher",

    /**
     * value: "Prepayment"
     * @const
     */
    "Prepayment": "Prepayment",

    /**
     * value: "NonGuaranteed"
     * @const
     */
    "NonGuaranteed": "NonGuaranteed",

    /**
     * value: "Tentative"
     * @const
     */
    "Tentative": "Tentative",

    /**
     * value: "Waitlist"
     * @const
     */
    "Waitlist": "Waitlist"
};



export default RateResponse;

