/**
 * hetras Hotel API Version 0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRoomStatus.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRoomStatus::OAIRoomStatus(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRoomStatus::OAIRoomStatus() {
    this->initializeModel();
}

OAIRoomStatus::~OAIRoomStatus() {}

void OAIRoomStatus::initializeModel() {

    m_condition_isSet = false;
    m_condition_isValid = false;

    m_frontdesk_occupancy_isSet = false;
    m_frontdesk_occupancy_isValid = false;

    m_housekeeping_occupancy_isSet = false;
    m_housekeeping_occupancy_isValid = false;

    m_maintenance_isSet = false;
    m_maintenance_isValid = false;
}

void OAIRoomStatus::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRoomStatus::fromJsonObject(QJsonObject json) {

    m_condition_isValid = ::OpenAPI::fromJsonValue(m_condition, json[QString("condition")]);
    m_condition_isSet = !json[QString("condition")].isNull() && m_condition_isValid;

    m_frontdesk_occupancy_isValid = ::OpenAPI::fromJsonValue(m_frontdesk_occupancy, json[QString("frontdesk_occupancy")]);
    m_frontdesk_occupancy_isSet = !json[QString("frontdesk_occupancy")].isNull() && m_frontdesk_occupancy_isValid;

    m_housekeeping_occupancy_isValid = ::OpenAPI::fromJsonValue(m_housekeeping_occupancy, json[QString("housekeeping_occupancy")]);
    m_housekeeping_occupancy_isSet = !json[QString("housekeeping_occupancy")].isNull() && m_housekeeping_occupancy_isValid;

    m_maintenance_isValid = ::OpenAPI::fromJsonValue(m_maintenance, json[QString("maintenance")]);
    m_maintenance_isSet = !json[QString("maintenance")].isNull() && m_maintenance_isValid;
}

QString OAIRoomStatus::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRoomStatus::asJsonObject() const {
    QJsonObject obj;
    if (m_condition_isSet) {
        obj.insert(QString("condition"), ::OpenAPI::toJsonValue(m_condition));
    }
    if (m_frontdesk_occupancy_isSet) {
        obj.insert(QString("frontdesk_occupancy"), ::OpenAPI::toJsonValue(m_frontdesk_occupancy));
    }
    if (m_housekeeping_occupancy_isSet) {
        obj.insert(QString("housekeeping_occupancy"), ::OpenAPI::toJsonValue(m_housekeeping_occupancy));
    }
    if (m_maintenance.isSet()) {
        obj.insert(QString("maintenance"), ::OpenAPI::toJsonValue(m_maintenance));
    }
    return obj;
}

QString OAIRoomStatus::getCondition() const {
    return m_condition;
}
void OAIRoomStatus::setCondition(const QString &condition) {
    m_condition = condition;
    m_condition_isSet = true;
}

bool OAIRoomStatus::is_condition_Set() const{
    return m_condition_isSet;
}

bool OAIRoomStatus::is_condition_Valid() const{
    return m_condition_isValid;
}

QString OAIRoomStatus::getFrontdeskOccupancy() const {
    return m_frontdesk_occupancy;
}
void OAIRoomStatus::setFrontdeskOccupancy(const QString &frontdesk_occupancy) {
    m_frontdesk_occupancy = frontdesk_occupancy;
    m_frontdesk_occupancy_isSet = true;
}

bool OAIRoomStatus::is_frontdesk_occupancy_Set() const{
    return m_frontdesk_occupancy_isSet;
}

bool OAIRoomStatus::is_frontdesk_occupancy_Valid() const{
    return m_frontdesk_occupancy_isValid;
}

QString OAIRoomStatus::getHousekeepingOccupancy() const {
    return m_housekeeping_occupancy;
}
void OAIRoomStatus::setHousekeepingOccupancy(const QString &housekeeping_occupancy) {
    m_housekeeping_occupancy = housekeeping_occupancy;
    m_housekeeping_occupancy_isSet = true;
}

bool OAIRoomStatus::is_housekeeping_occupancy_Set() const{
    return m_housekeeping_occupancy_isSet;
}

bool OAIRoomStatus::is_housekeeping_occupancy_Valid() const{
    return m_housekeeping_occupancy_isValid;
}

OAIRoomMaintenance OAIRoomStatus::getMaintenance() const {
    return m_maintenance;
}
void OAIRoomStatus::setMaintenance(const OAIRoomMaintenance &maintenance) {
    m_maintenance = maintenance;
    m_maintenance_isSet = true;
}

bool OAIRoomStatus::is_maintenance_Set() const{
    return m_maintenance_isSet;
}

bool OAIRoomStatus::is_maintenance_Valid() const{
    return m_maintenance_isValid;
}

bool OAIRoomStatus::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_condition_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_frontdesk_occupancy_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_housekeeping_occupancy_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_maintenance.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRoomStatus::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
