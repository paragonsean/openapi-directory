/**
 * hetras Hotel API Version 0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRestrictions.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRestrictions::OAIRestrictions(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRestrictions::OAIRestrictions() {
    this->initializeModel();
}

OAIRestrictions::~OAIRestrictions() {}

void OAIRestrictions::initializeModel() {

    m_leadtime_to_book_isSet = false;
    m_leadtime_to_book_isValid = false;

    m_max_advance_booking_isSet = false;
    m_max_advance_booking_isValid = false;
}

void OAIRestrictions::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRestrictions::fromJsonObject(QJsonObject json) {

    m_leadtime_to_book_isValid = ::OpenAPI::fromJsonValue(m_leadtime_to_book, json[QString("leadtime_to_book")]);
    m_leadtime_to_book_isSet = !json[QString("leadtime_to_book")].isNull() && m_leadtime_to_book_isValid;

    m_max_advance_booking_isValid = ::OpenAPI::fromJsonValue(m_max_advance_booking, json[QString("max_advance_booking")]);
    m_max_advance_booking_isSet = !json[QString("max_advance_booking")].isNull() && m_max_advance_booking_isValid;
}

QString OAIRestrictions::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRestrictions::asJsonObject() const {
    QJsonObject obj;
    if (m_leadtime_to_book_isSet) {
        obj.insert(QString("leadtime_to_book"), ::OpenAPI::toJsonValue(m_leadtime_to_book));
    }
    if (m_max_advance_booking_isSet) {
        obj.insert(QString("max_advance_booking"), ::OpenAPI::toJsonValue(m_max_advance_booking));
    }
    return obj;
}

qint32 OAIRestrictions::getLeadtimeToBook() const {
    return m_leadtime_to_book;
}
void OAIRestrictions::setLeadtimeToBook(const qint32 &leadtime_to_book) {
    m_leadtime_to_book = leadtime_to_book;
    m_leadtime_to_book_isSet = true;
}

bool OAIRestrictions::is_leadtime_to_book_Set() const{
    return m_leadtime_to_book_isSet;
}

bool OAIRestrictions::is_leadtime_to_book_Valid() const{
    return m_leadtime_to_book_isValid;
}

qint32 OAIRestrictions::getMaxAdvanceBooking() const {
    return m_max_advance_booking;
}
void OAIRestrictions::setMaxAdvanceBooking(const qint32 &max_advance_booking) {
    m_max_advance_booking = max_advance_booking;
    m_max_advance_booking_isSet = true;
}

bool OAIRestrictions::is_max_advance_booking_Set() const{
    return m_max_advance_booking_isSet;
}

bool OAIRestrictions::is_max_advance_booking_Valid() const{
    return m_max_advance_booking_isValid;
}

bool OAIRestrictions::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_leadtime_to_book_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_max_advance_booking_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRestrictions::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
