/**
 * hetras Hotel API Version 0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRoomTypeSupplement.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRoomTypeSupplement::OAIRoomTypeSupplement(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRoomTypeSupplement::OAIRoomTypeSupplement() {
    this->initializeModel();
}

OAIRoomTypeSupplement::~OAIRoomTypeSupplement() {}

void OAIRoomTypeSupplement::initializeModel() {

    m__links_isSet = false;
    m__links_isValid = false;

    m_code_isSet = false;
    m_code_isValid = false;

    m_r_default_isSet = false;
    m_r_default_isValid = false;

    m_supplements_isSet = false;
    m_supplements_isValid = false;
}

void OAIRoomTypeSupplement::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRoomTypeSupplement::fromJsonObject(QJsonObject json) {

    m__links_isValid = ::OpenAPI::fromJsonValue(m__links, json[QString("_links")]);
    m__links_isSet = !json[QString("_links")].isNull() && m__links_isValid;

    m_code_isValid = ::OpenAPI::fromJsonValue(m_code, json[QString("code")]);
    m_code_isSet = !json[QString("code")].isNull() && m_code_isValid;

    m_r_default_isValid = ::OpenAPI::fromJsonValue(m_r_default, json[QString("default")]);
    m_r_default_isSet = !json[QString("default")].isNull() && m_r_default_isValid;

    m_supplements_isValid = ::OpenAPI::fromJsonValue(m_supplements, json[QString("supplements")]);
    m_supplements_isSet = !json[QString("supplements")].isNull() && m_supplements_isValid;
}

QString OAIRoomTypeSupplement::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRoomTypeSupplement::asJsonObject() const {
    QJsonObject obj;
    if (m__links.size() > 0) {
        obj.insert(QString("_links"), ::OpenAPI::toJsonValue(m__links));
    }
    if (m_code_isSet) {
        obj.insert(QString("code"), ::OpenAPI::toJsonValue(m_code));
    }
    if (m_r_default_isSet) {
        obj.insert(QString("default"), ::OpenAPI::toJsonValue(m_r_default));
    }
    if (m_supplements.size() > 0) {
        obj.insert(QString("supplements"), ::OpenAPI::toJsonValue(m_supplements));
    }
    return obj;
}

QMap<QString, OAILinkObject> OAIRoomTypeSupplement::getLinks() const {
    return m__links;
}
void OAIRoomTypeSupplement::setLinks(const QMap<QString, OAILinkObject> &_links) {
    m__links = _links;
    m__links_isSet = true;
}

bool OAIRoomTypeSupplement::is__links_Set() const{
    return m__links_isSet;
}

bool OAIRoomTypeSupplement::is__links_Valid() const{
    return m__links_isValid;
}

QString OAIRoomTypeSupplement::getCode() const {
    return m_code;
}
void OAIRoomTypeSupplement::setCode(const QString &code) {
    m_code = code;
    m_code_isSet = true;
}

bool OAIRoomTypeSupplement::is_code_Set() const{
    return m_code_isSet;
}

bool OAIRoomTypeSupplement::is_code_Valid() const{
    return m_code_isValid;
}

bool OAIRoomTypeSupplement::isRDefault() const {
    return m_r_default;
}
void OAIRoomTypeSupplement::setRDefault(const bool &r_default) {
    m_r_default = r_default;
    m_r_default_isSet = true;
}

bool OAIRoomTypeSupplement::is_r_default_Set() const{
    return m_r_default_isSet;
}

bool OAIRoomTypeSupplement::is_r_default_Valid() const{
    return m_r_default_isValid;
}

QList<OAISupplement> OAIRoomTypeSupplement::getSupplements() const {
    return m_supplements;
}
void OAIRoomTypeSupplement::setSupplements(const QList<OAISupplement> &supplements) {
    m_supplements = supplements;
    m_supplements_isSet = true;
}

bool OAIRoomTypeSupplement::is_supplements_Set() const{
    return m_supplements_isSet;
}

bool OAIRoomTypeSupplement::is_supplements_Valid() const{
    return m_supplements_isValid;
}

bool OAIRoomTypeSupplement::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m__links.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_r_default_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_supplements.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRoomTypeSupplement::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
