/**
 * hetras Hotel API Version 0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetRoomListRequest.h
 *
 * 
 */

#ifndef OAIGetRoomListRequest_H
#define OAIGetRoomListRequest_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGetRoomListRequest : public OAIObject {
public:
    OAIGetRoomListRequest();
    OAIGetRoomListRequest(QString json);
    ~OAIGetRoomListRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getAmenities() const;
    void setAmenities(const QList<QString> &amenities);
    bool is_amenities_Set() const;
    bool is_amenities_Valid() const;

    QList<QString> getConditions() const;
    void setConditions(const QList<QString> &conditions);
    bool is_conditions_Set() const;
    bool is_conditions_Valid() const;

    QList<QString> getLocations() const;
    void setLocations(const QList<QString> &locations);
    bool is_locations_Set() const;
    bool is_locations_Valid() const;

    QList<QString> getMaintenances() const;
    void setMaintenances(const QList<QString> &maintenances);
    bool is_maintenances_Set() const;
    bool is_maintenances_Valid() const;

    QString getOccupancy() const;
    void setOccupancy(const QString &occupancy);
    bool is_occupancy_Set() const;
    bool is_occupancy_Valid() const;

    QList<QString> getRoomTypes() const;
    void setRoomTypes(const QList<QString> &room_types);
    bool is_room_types_Set() const;
    bool is_room_types_Valid() const;

    QList<QString> getViews() const;
    void setViews(const QList<QString> &views);
    bool is_views_Set() const;
    bool is_views_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_amenities;
    bool m_amenities_isSet;
    bool m_amenities_isValid;

    QList<QString> m_conditions;
    bool m_conditions_isSet;
    bool m_conditions_isValid;

    QList<QString> m_locations;
    bool m_locations_isSet;
    bool m_locations_isValid;

    QList<QString> m_maintenances;
    bool m_maintenances_isSet;
    bool m_maintenances_isValid;

    QString m_occupancy;
    bool m_occupancy_isSet;
    bool m_occupancy_isValid;

    QList<QString> m_room_types;
    bool m_room_types_isSet;
    bool m_room_types_isValid;

    QList<QString> m_views;
    bool m_views_isSet;
    bool m_views_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetRoomListRequest)

#endif // OAIGetRoomListRequest_H
