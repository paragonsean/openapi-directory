/**
 * hetras Hotel API Version 0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRoom.h
 *
 * Represents a room for a property.
 */

#ifndef OAIRoom_H
#define OAIRoom_H

#include <QJsonObject>

#include "OAIEmbeddedReservation.h"
#include "OAIEmbeddedRoomType.h"
#include "OAIRoomBedding.h"
#include "OAIRoomStatus.h"
#include "OAISimpleAttribute.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISimpleAttribute;
class OAIRoomBedding;
class OAIEmbeddedReservation;
class OAIEmbeddedRoomType;
class OAIRoomStatus;

class OAIRoom : public OAIObject {
public:
    OAIRoom();
    OAIRoom(QString json);
    ~OAIRoom() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAISimpleAttribute> getAmenities() const;
    void setAmenities(const QList<OAISimpleAttribute> &amenities);
    bool is_amenities_Set() const;
    bool is_amenities_Valid() const;

    QList<OAIRoomBedding> getBeddings() const;
    void setBeddings(const QList<OAIRoomBedding> &beddings);
    bool is_beddings_Set() const;
    bool is_beddings_Valid() const;

    QDateTime getCreated() const;
    void setCreated(const QDateTime &created);
    bool is_created_Set() const;
    bool is_created_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    qint32 getExpectedOccupancy() const;
    void setExpectedOccupancy(const qint32 &expected_occupancy);
    bool is_expected_occupancy_Set() const;
    bool is_expected_occupancy_Valid() const;

    bool isExtraBedAllowed() const;
    void setExtraBedAllowed(const bool &extra_bed_allowed);
    bool is_extra_bed_allowed_Set() const;
    bool is_extra_bed_allowed_Valid() const;

    qint32 getFloor() const;
    void setFloor(const qint32 &floor);
    bool is_floor_Set() const;
    bool is_floor_Valid() const;

    QList<OAISimpleAttribute> getLocations() const;
    void setLocations(const QList<OAISimpleAttribute> &locations);
    bool is_locations_Set() const;
    bool is_locations_Valid() const;

    qint32 getMaxPersons() const;
    void setMaxPersons(const qint32 &max_persons);
    bool is_max_persons_Set() const;
    bool is_max_persons_Valid() const;

    qint32 getMinPersons() const;
    void setMinPersons(const qint32 &min_persons);
    bool is_min_persons_Set() const;
    bool is_min_persons_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getNumber() const;
    void setNumber(const QString &number);
    bool is_number_Set() const;
    bool is_number_Valid() const;

    QList<OAIEmbeddedReservation> getReservations() const;
    void setReservations(const QList<OAIEmbeddedReservation> &reservations);
    bool is_reservations_Set() const;
    bool is_reservations_Valid() const;

    OAIEmbeddedRoomType getRoomType() const;
    void setRoomType(const OAIEmbeddedRoomType &room_type);
    bool is_room_type_Set() const;
    bool is_room_type_Valid() const;

    OAIRoomStatus getStatus() const;
    void setStatus(const OAIRoomStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QDateTime getUpdated() const;
    void setUpdated(const QDateTime &updated);
    bool is_updated_Set() const;
    bool is_updated_Valid() const;

    QList<OAISimpleAttribute> getViews() const;
    void setViews(const QList<OAISimpleAttribute> &views);
    bool is_views_Set() const;
    bool is_views_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAISimpleAttribute> m_amenities;
    bool m_amenities_isSet;
    bool m_amenities_isValid;

    QList<OAIRoomBedding> m_beddings;
    bool m_beddings_isSet;
    bool m_beddings_isValid;

    QDateTime m_created;
    bool m_created_isSet;
    bool m_created_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    qint32 m_expected_occupancy;
    bool m_expected_occupancy_isSet;
    bool m_expected_occupancy_isValid;

    bool m_extra_bed_allowed;
    bool m_extra_bed_allowed_isSet;
    bool m_extra_bed_allowed_isValid;

    qint32 m_floor;
    bool m_floor_isSet;
    bool m_floor_isValid;

    QList<OAISimpleAttribute> m_locations;
    bool m_locations_isSet;
    bool m_locations_isValid;

    qint32 m_max_persons;
    bool m_max_persons_isSet;
    bool m_max_persons_isValid;

    qint32 m_min_persons;
    bool m_min_persons_isSet;
    bool m_min_persons_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_number;
    bool m_number_isSet;
    bool m_number_isValid;

    QList<OAIEmbeddedReservation> m_reservations;
    bool m_reservations_isSet;
    bool m_reservations_isValid;

    OAIEmbeddedRoomType m_room_type;
    bool m_room_type_isSet;
    bool m_room_type_isValid;

    OAIRoomStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QDateTime m_updated;
    bool m_updated_isSet;
    bool m_updated_isValid;

    QList<OAISimpleAttribute> m_views;
    bool m_views_isSet;
    bool m_views_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRoom)

#endif // OAIRoom_H
