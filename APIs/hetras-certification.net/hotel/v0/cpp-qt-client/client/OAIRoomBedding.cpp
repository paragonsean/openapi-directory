/**
 * hetras Hotel API Version 0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRoomBedding.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRoomBedding::OAIRoomBedding(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRoomBedding::OAIRoomBedding() {
    this->initializeModel();
}

OAIRoomBedding::~OAIRoomBedding() {}

void OAIRoomBedding::initializeModel() {

    m_count_isSet = false;
    m_count_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAIRoomBedding::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRoomBedding::fromJsonObject(QJsonObject json) {

    m_count_isValid = ::OpenAPI::fromJsonValue(m_count, json[QString("count")]);
    m_count_isSet = !json[QString("count")].isNull() && m_count_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;
}

QString OAIRoomBedding::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRoomBedding::asJsonObject() const {
    QJsonObject obj;
    if (m_count_isSet) {
        obj.insert(QString("count"), ::OpenAPI::toJsonValue(m_count));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

qint32 OAIRoomBedding::getCount() const {
    return m_count;
}
void OAIRoomBedding::setCount(const qint32 &count) {
    m_count = count;
    m_count_isSet = true;
}

bool OAIRoomBedding::is_count_Set() const{
    return m_count_isSet;
}

bool OAIRoomBedding::is_count_Valid() const{
    return m_count_isValid;
}

QString OAIRoomBedding::getType() const {
    return m_type;
}
void OAIRoomBedding::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIRoomBedding::is_type_Set() const{
    return m_type_isSet;
}

bool OAIRoomBedding::is_type_Valid() const{
    return m_type_isValid;
}

bool OAIRoomBedding::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRoomBedding::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
