/**
 * hetras Hotel API Version 0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAccessControlInfo.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAccessControlInfo::OAIAccessControlInfo(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAccessControlInfo::OAIAccessControlInfo() {
    this->initializeModel();
}

OAIAccessControlInfo::~OAIAccessControlInfo() {}

void OAIAccessControlInfo::initializeModel() {

    m_channel_codes_isSet = false;
    m_channel_codes_isValid = false;

    m_channel_group_isSet = false;
    m_channel_group_isValid = false;
}

void OAIAccessControlInfo::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAccessControlInfo::fromJsonObject(QJsonObject json) {

    m_channel_codes_isValid = ::OpenAPI::fromJsonValue(m_channel_codes, json[QString("channel_codes")]);
    m_channel_codes_isSet = !json[QString("channel_codes")].isNull() && m_channel_codes_isValid;

    m_channel_group_isValid = ::OpenAPI::fromJsonValue(m_channel_group, json[QString("channel_group")]);
    m_channel_group_isSet = !json[QString("channel_group")].isNull() && m_channel_group_isValid;
}

QString OAIAccessControlInfo::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAccessControlInfo::asJsonObject() const {
    QJsonObject obj;
    if (m_channel_codes.size() > 0) {
        obj.insert(QString("channel_codes"), ::OpenAPI::toJsonValue(m_channel_codes));
    }
    if (m_channel_group_isSet) {
        obj.insert(QString("channel_group"), ::OpenAPI::toJsonValue(m_channel_group));
    }
    return obj;
}

QList<QString> OAIAccessControlInfo::getChannelCodes() const {
    return m_channel_codes;
}
void OAIAccessControlInfo::setChannelCodes(const QList<QString> &channel_codes) {
    m_channel_codes = channel_codes;
    m_channel_codes_isSet = true;
}

bool OAIAccessControlInfo::is_channel_codes_Set() const{
    return m_channel_codes_isSet;
}

bool OAIAccessControlInfo::is_channel_codes_Valid() const{
    return m_channel_codes_isValid;
}

QString OAIAccessControlInfo::getChannelGroup() const {
    return m_channel_group;
}
void OAIAccessControlInfo::setChannelGroup(const QString &channel_group) {
    m_channel_group = channel_group;
    m_channel_group_isSet = true;
}

bool OAIAccessControlInfo::is_channel_group_Set() const{
    return m_channel_group_isSet;
}

bool OAIAccessControlInfo::is_channel_group_Valid() const{
    return m_channel_group_isValid;
}

bool OAIAccessControlInfo::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_channel_codes.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_channel_group_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAccessControlInfo::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
