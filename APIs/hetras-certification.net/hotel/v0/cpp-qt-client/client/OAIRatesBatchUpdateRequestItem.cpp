/**
 * hetras Hotel API Version 0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRatesBatchUpdateRequestItem.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRatesBatchUpdateRequestItem::OAIRatesBatchUpdateRequestItem(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRatesBatchUpdateRequestItem::OAIRatesBatchUpdateRequestItem() {
    this->initializeModel();
}

OAIRatesBatchUpdateRequestItem::~OAIRatesBatchUpdateRequestItem() {}

void OAIRatesBatchUpdateRequestItem::initializeModel() {

    m_base_price_isSet = false;
    m_base_price_isValid = false;

    m_from_isSet = false;
    m_from_isValid = false;

    m_rateplan_isSet = false;
    m_rateplan_isValid = false;

    m_to_isSet = false;
    m_to_isValid = false;
}

void OAIRatesBatchUpdateRequestItem::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRatesBatchUpdateRequestItem::fromJsonObject(QJsonObject json) {

    m_base_price_isValid = ::OpenAPI::fromJsonValue(m_base_price, json[QString("base_price")]);
    m_base_price_isSet = !json[QString("base_price")].isNull() && m_base_price_isValid;

    m_from_isValid = ::OpenAPI::fromJsonValue(m_from, json[QString("from")]);
    m_from_isSet = !json[QString("from")].isNull() && m_from_isValid;

    m_rateplan_isValid = ::OpenAPI::fromJsonValue(m_rateplan, json[QString("rateplan")]);
    m_rateplan_isSet = !json[QString("rateplan")].isNull() && m_rateplan_isValid;

    m_to_isValid = ::OpenAPI::fromJsonValue(m_to, json[QString("to")]);
    m_to_isSet = !json[QString("to")].isNull() && m_to_isValid;
}

QString OAIRatesBatchUpdateRequestItem::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRatesBatchUpdateRequestItem::asJsonObject() const {
    QJsonObject obj;
    if (m_base_price_isSet) {
        obj.insert(QString("base_price"), ::OpenAPI::toJsonValue(m_base_price));
    }
    if (m_from_isSet) {
        obj.insert(QString("from"), ::OpenAPI::toJsonValue(m_from));
    }
    if (m_rateplan_isSet) {
        obj.insert(QString("rateplan"), ::OpenAPI::toJsonValue(m_rateplan));
    }
    if (m_to_isSet) {
        obj.insert(QString("to"), ::OpenAPI::toJsonValue(m_to));
    }
    return obj;
}

double OAIRatesBatchUpdateRequestItem::getBasePrice() const {
    return m_base_price;
}
void OAIRatesBatchUpdateRequestItem::setBasePrice(const double &base_price) {
    m_base_price = base_price;
    m_base_price_isSet = true;
}

bool OAIRatesBatchUpdateRequestItem::is_base_price_Set() const{
    return m_base_price_isSet;
}

bool OAIRatesBatchUpdateRequestItem::is_base_price_Valid() const{
    return m_base_price_isValid;
}

QDateTime OAIRatesBatchUpdateRequestItem::getFrom() const {
    return m_from;
}
void OAIRatesBatchUpdateRequestItem::setFrom(const QDateTime &from) {
    m_from = from;
    m_from_isSet = true;
}

bool OAIRatesBatchUpdateRequestItem::is_from_Set() const{
    return m_from_isSet;
}

bool OAIRatesBatchUpdateRequestItem::is_from_Valid() const{
    return m_from_isValid;
}

QString OAIRatesBatchUpdateRequestItem::getRateplan() const {
    return m_rateplan;
}
void OAIRatesBatchUpdateRequestItem::setRateplan(const QString &rateplan) {
    m_rateplan = rateplan;
    m_rateplan_isSet = true;
}

bool OAIRatesBatchUpdateRequestItem::is_rateplan_Set() const{
    return m_rateplan_isSet;
}

bool OAIRatesBatchUpdateRequestItem::is_rateplan_Valid() const{
    return m_rateplan_isValid;
}

QDateTime OAIRatesBatchUpdateRequestItem::getTo() const {
    return m_to;
}
void OAIRatesBatchUpdateRequestItem::setTo(const QDateTime &to) {
    m_to = to;
    m_to_isSet = true;
}

bool OAIRatesBatchUpdateRequestItem::is_to_Set() const{
    return m_to_isSet;
}

bool OAIRatesBatchUpdateRequestItem::is_to_Valid() const{
    return m_to_isValid;
}

bool OAIRatesBatchUpdateRequestItem::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_base_price_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_from_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_rateplan_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_to_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRatesBatchUpdateRequestItem::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_base_price_isValid && m_from_isValid && m_rateplan_isValid && m_to_isValid && true;
}

} // namespace OpenAPI
