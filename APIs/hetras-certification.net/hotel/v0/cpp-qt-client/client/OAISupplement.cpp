/**
 * hetras Hotel API Version 0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISupplement.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISupplement::OAISupplement(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISupplement::OAISupplement() {
    this->initializeModel();
}

OAISupplement::~OAISupplement() {}

void OAISupplement::initializeModel() {

    m_adjustment_isSet = false;
    m_adjustment_isValid = false;

    m_adults_isSet = false;
    m_adults_isValid = false;

    m_supplement_isSet = false;
    m_supplement_isValid = false;
}

void OAISupplement::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISupplement::fromJsonObject(QJsonObject json) {

    m_adjustment_isValid = ::OpenAPI::fromJsonValue(m_adjustment, json[QString("adjustment")]);
    m_adjustment_isSet = !json[QString("adjustment")].isNull() && m_adjustment_isValid;

    m_adults_isValid = ::OpenAPI::fromJsonValue(m_adults, json[QString("adults")]);
    m_adults_isSet = !json[QString("adults")].isNull() && m_adults_isValid;

    m_supplement_isValid = ::OpenAPI::fromJsonValue(m_supplement, json[QString("supplement")]);
    m_supplement_isSet = !json[QString("supplement")].isNull() && m_supplement_isValid;
}

QString OAISupplement::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISupplement::asJsonObject() const {
    QJsonObject obj;
    if (m_adjustment_isSet) {
        obj.insert(QString("adjustment"), ::OpenAPI::toJsonValue(m_adjustment));
    }
    if (m_adults_isSet) {
        obj.insert(QString("adults"), ::OpenAPI::toJsonValue(m_adults));
    }
    if (m_supplement_isSet) {
        obj.insert(QString("supplement"), ::OpenAPI::toJsonValue(m_supplement));
    }
    return obj;
}

QString OAISupplement::getAdjustment() const {
    return m_adjustment;
}
void OAISupplement::setAdjustment(const QString &adjustment) {
    m_adjustment = adjustment;
    m_adjustment_isSet = true;
}

bool OAISupplement::is_adjustment_Set() const{
    return m_adjustment_isSet;
}

bool OAISupplement::is_adjustment_Valid() const{
    return m_adjustment_isValid;
}

qint32 OAISupplement::getAdults() const {
    return m_adults;
}
void OAISupplement::setAdults(const qint32 &adults) {
    m_adults = adults;
    m_adults_isSet = true;
}

bool OAISupplement::is_adults_Set() const{
    return m_adults_isSet;
}

bool OAISupplement::is_adults_Valid() const{
    return m_adults_isValid;
}

double OAISupplement::getSupplement() const {
    return m_supplement;
}
void OAISupplement::setSupplement(const double &supplement) {
    m_supplement = supplement;
    m_supplement_isSet = true;
}

bool OAISupplement::is_supplement_Set() const{
    return m_supplement_isSet;
}

bool OAISupplement::is_supplement_Valid() const{
    return m_supplement_isValid;
}

bool OAISupplement::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_adjustment_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_adults_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_supplement_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISupplement::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
