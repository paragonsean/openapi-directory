/**
 * hetras Hotel API Version 0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIHotel.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIHotel::OAIHotel(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIHotel::OAIHotel() {
    this->initializeModel();
}

OAIHotel::~OAIHotel() {}

void OAIHotel::initializeModel() {

    m_city_isSet = false;
    m_city_isValid = false;

    m_code_isSet = false;
    m_code_isValid = false;

    m_country_isSet = false;
    m_country_isValid = false;

    m_created_isSet = false;
    m_created_isValid = false;

    m_current_business_day_isSet = false;
    m_current_business_day_isValid = false;

    m_desc_isSet = false;
    m_desc_isValid = false;

    m_email_isSet = false;
    m_email_isValid = false;

    m_fax_isSet = false;
    m_fax_isValid = false;

    m_hotel_id_isSet = false;
    m_hotel_id_isValid = false;

    m_latitude_isSet = false;
    m_latitude_isValid = false;

    m_longitude_isSet = false;
    m_longitude_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_phone_isSet = false;
    m_phone_isValid = false;

    m_postal_code_isSet = false;
    m_postal_code_isValid = false;

    m_state_isSet = false;
    m_state_isValid = false;

    m_street_isSet = false;
    m_street_isValid = false;

    m_updated_isSet = false;
    m_updated_isValid = false;

    m_url_isSet = false;
    m_url_isValid = false;

    m_utc_offset_isSet = false;
    m_utc_offset_isValid = false;
}

void OAIHotel::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIHotel::fromJsonObject(QJsonObject json) {

    m_city_isValid = ::OpenAPI::fromJsonValue(m_city, json[QString("city")]);
    m_city_isSet = !json[QString("city")].isNull() && m_city_isValid;

    m_code_isValid = ::OpenAPI::fromJsonValue(m_code, json[QString("code")]);
    m_code_isSet = !json[QString("code")].isNull() && m_code_isValid;

    m_country_isValid = ::OpenAPI::fromJsonValue(m_country, json[QString("country")]);
    m_country_isSet = !json[QString("country")].isNull() && m_country_isValid;

    m_created_isValid = ::OpenAPI::fromJsonValue(m_created, json[QString("created")]);
    m_created_isSet = !json[QString("created")].isNull() && m_created_isValid;

    m_current_business_day_isValid = ::OpenAPI::fromJsonValue(m_current_business_day, json[QString("current_business_day")]);
    m_current_business_day_isSet = !json[QString("current_business_day")].isNull() && m_current_business_day_isValid;

    m_desc_isValid = ::OpenAPI::fromJsonValue(m_desc, json[QString("desc")]);
    m_desc_isSet = !json[QString("desc")].isNull() && m_desc_isValid;

    m_email_isValid = ::OpenAPI::fromJsonValue(m_email, json[QString("email")]);
    m_email_isSet = !json[QString("email")].isNull() && m_email_isValid;

    m_fax_isValid = ::OpenAPI::fromJsonValue(m_fax, json[QString("fax")]);
    m_fax_isSet = !json[QString("fax")].isNull() && m_fax_isValid;

    m_hotel_id_isValid = ::OpenAPI::fromJsonValue(m_hotel_id, json[QString("hotel_id")]);
    m_hotel_id_isSet = !json[QString("hotel_id")].isNull() && m_hotel_id_isValid;

    m_latitude_isValid = ::OpenAPI::fromJsonValue(m_latitude, json[QString("latitude")]);
    m_latitude_isSet = !json[QString("latitude")].isNull() && m_latitude_isValid;

    m_longitude_isValid = ::OpenAPI::fromJsonValue(m_longitude, json[QString("longitude")]);
    m_longitude_isSet = !json[QString("longitude")].isNull() && m_longitude_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_phone_isValid = ::OpenAPI::fromJsonValue(m_phone, json[QString("phone")]);
    m_phone_isSet = !json[QString("phone")].isNull() && m_phone_isValid;

    m_postal_code_isValid = ::OpenAPI::fromJsonValue(m_postal_code, json[QString("postal_code")]);
    m_postal_code_isSet = !json[QString("postal_code")].isNull() && m_postal_code_isValid;

    m_state_isValid = ::OpenAPI::fromJsonValue(m_state, json[QString("state")]);
    m_state_isSet = !json[QString("state")].isNull() && m_state_isValid;

    m_street_isValid = ::OpenAPI::fromJsonValue(m_street, json[QString("street")]);
    m_street_isSet = !json[QString("street")].isNull() && m_street_isValid;

    m_updated_isValid = ::OpenAPI::fromJsonValue(m_updated, json[QString("updated")]);
    m_updated_isSet = !json[QString("updated")].isNull() && m_updated_isValid;

    m_url_isValid = ::OpenAPI::fromJsonValue(m_url, json[QString("url")]);
    m_url_isSet = !json[QString("url")].isNull() && m_url_isValid;

    m_utc_offset_isValid = ::OpenAPI::fromJsonValue(m_utc_offset, json[QString("utc_offset")]);
    m_utc_offset_isSet = !json[QString("utc_offset")].isNull() && m_utc_offset_isValid;
}

QString OAIHotel::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIHotel::asJsonObject() const {
    QJsonObject obj;
    if (m_city_isSet) {
        obj.insert(QString("city"), ::OpenAPI::toJsonValue(m_city));
    }
    if (m_code_isSet) {
        obj.insert(QString("code"), ::OpenAPI::toJsonValue(m_code));
    }
    if (m_country_isSet) {
        obj.insert(QString("country"), ::OpenAPI::toJsonValue(m_country));
    }
    if (m_created_isSet) {
        obj.insert(QString("created"), ::OpenAPI::toJsonValue(m_created));
    }
    if (m_current_business_day_isSet) {
        obj.insert(QString("current_business_day"), ::OpenAPI::toJsonValue(m_current_business_day));
    }
    if (m_desc_isSet) {
        obj.insert(QString("desc"), ::OpenAPI::toJsonValue(m_desc));
    }
    if (m_email_isSet) {
        obj.insert(QString("email"), ::OpenAPI::toJsonValue(m_email));
    }
    if (m_fax_isSet) {
        obj.insert(QString("fax"), ::OpenAPI::toJsonValue(m_fax));
    }
    if (m_hotel_id_isSet) {
        obj.insert(QString("hotel_id"), ::OpenAPI::toJsonValue(m_hotel_id));
    }
    if (m_latitude_isSet) {
        obj.insert(QString("latitude"), ::OpenAPI::toJsonValue(m_latitude));
    }
    if (m_longitude_isSet) {
        obj.insert(QString("longitude"), ::OpenAPI::toJsonValue(m_longitude));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_phone_isSet) {
        obj.insert(QString("phone"), ::OpenAPI::toJsonValue(m_phone));
    }
    if (m_postal_code_isSet) {
        obj.insert(QString("postal_code"), ::OpenAPI::toJsonValue(m_postal_code));
    }
    if (m_state_isSet) {
        obj.insert(QString("state"), ::OpenAPI::toJsonValue(m_state));
    }
    if (m_street_isSet) {
        obj.insert(QString("street"), ::OpenAPI::toJsonValue(m_street));
    }
    if (m_updated_isSet) {
        obj.insert(QString("updated"), ::OpenAPI::toJsonValue(m_updated));
    }
    if (m_url_isSet) {
        obj.insert(QString("url"), ::OpenAPI::toJsonValue(m_url));
    }
    if (m_utc_offset_isSet) {
        obj.insert(QString("utc_offset"), ::OpenAPI::toJsonValue(m_utc_offset));
    }
    return obj;
}

QString OAIHotel::getCity() const {
    return m_city;
}
void OAIHotel::setCity(const QString &city) {
    m_city = city;
    m_city_isSet = true;
}

bool OAIHotel::is_city_Set() const{
    return m_city_isSet;
}

bool OAIHotel::is_city_Valid() const{
    return m_city_isValid;
}

QString OAIHotel::getCode() const {
    return m_code;
}
void OAIHotel::setCode(const QString &code) {
    m_code = code;
    m_code_isSet = true;
}

bool OAIHotel::is_code_Set() const{
    return m_code_isSet;
}

bool OAIHotel::is_code_Valid() const{
    return m_code_isValid;
}

QString OAIHotel::getCountry() const {
    return m_country;
}
void OAIHotel::setCountry(const QString &country) {
    m_country = country;
    m_country_isSet = true;
}

bool OAIHotel::is_country_Set() const{
    return m_country_isSet;
}

bool OAIHotel::is_country_Valid() const{
    return m_country_isValid;
}

QDateTime OAIHotel::getCreated() const {
    return m_created;
}
void OAIHotel::setCreated(const QDateTime &created) {
    m_created = created;
    m_created_isSet = true;
}

bool OAIHotel::is_created_Set() const{
    return m_created_isSet;
}

bool OAIHotel::is_created_Valid() const{
    return m_created_isValid;
}

QDateTime OAIHotel::getCurrentBusinessDay() const {
    return m_current_business_day;
}
void OAIHotel::setCurrentBusinessDay(const QDateTime &current_business_day) {
    m_current_business_day = current_business_day;
    m_current_business_day_isSet = true;
}

bool OAIHotel::is_current_business_day_Set() const{
    return m_current_business_day_isSet;
}

bool OAIHotel::is_current_business_day_Valid() const{
    return m_current_business_day_isValid;
}

QString OAIHotel::getDesc() const {
    return m_desc;
}
void OAIHotel::setDesc(const QString &desc) {
    m_desc = desc;
    m_desc_isSet = true;
}

bool OAIHotel::is_desc_Set() const{
    return m_desc_isSet;
}

bool OAIHotel::is_desc_Valid() const{
    return m_desc_isValid;
}

QString OAIHotel::getEmail() const {
    return m_email;
}
void OAIHotel::setEmail(const QString &email) {
    m_email = email;
    m_email_isSet = true;
}

bool OAIHotel::is_email_Set() const{
    return m_email_isSet;
}

bool OAIHotel::is_email_Valid() const{
    return m_email_isValid;
}

QString OAIHotel::getFax() const {
    return m_fax;
}
void OAIHotel::setFax(const QString &fax) {
    m_fax = fax;
    m_fax_isSet = true;
}

bool OAIHotel::is_fax_Set() const{
    return m_fax_isSet;
}

bool OAIHotel::is_fax_Valid() const{
    return m_fax_isValid;
}

qint32 OAIHotel::getHotelId() const {
    return m_hotel_id;
}
void OAIHotel::setHotelId(const qint32 &hotel_id) {
    m_hotel_id = hotel_id;
    m_hotel_id_isSet = true;
}

bool OAIHotel::is_hotel_id_Set() const{
    return m_hotel_id_isSet;
}

bool OAIHotel::is_hotel_id_Valid() const{
    return m_hotel_id_isValid;
}

double OAIHotel::getLatitude() const {
    return m_latitude;
}
void OAIHotel::setLatitude(const double &latitude) {
    m_latitude = latitude;
    m_latitude_isSet = true;
}

bool OAIHotel::is_latitude_Set() const{
    return m_latitude_isSet;
}

bool OAIHotel::is_latitude_Valid() const{
    return m_latitude_isValid;
}

double OAIHotel::getLongitude() const {
    return m_longitude;
}
void OAIHotel::setLongitude(const double &longitude) {
    m_longitude = longitude;
    m_longitude_isSet = true;
}

bool OAIHotel::is_longitude_Set() const{
    return m_longitude_isSet;
}

bool OAIHotel::is_longitude_Valid() const{
    return m_longitude_isValid;
}

QString OAIHotel::getName() const {
    return m_name;
}
void OAIHotel::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIHotel::is_name_Set() const{
    return m_name_isSet;
}

bool OAIHotel::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIHotel::getPhone() const {
    return m_phone;
}
void OAIHotel::setPhone(const QString &phone) {
    m_phone = phone;
    m_phone_isSet = true;
}

bool OAIHotel::is_phone_Set() const{
    return m_phone_isSet;
}

bool OAIHotel::is_phone_Valid() const{
    return m_phone_isValid;
}

QString OAIHotel::getPostalCode() const {
    return m_postal_code;
}
void OAIHotel::setPostalCode(const QString &postal_code) {
    m_postal_code = postal_code;
    m_postal_code_isSet = true;
}

bool OAIHotel::is_postal_code_Set() const{
    return m_postal_code_isSet;
}

bool OAIHotel::is_postal_code_Valid() const{
    return m_postal_code_isValid;
}

QString OAIHotel::getState() const {
    return m_state;
}
void OAIHotel::setState(const QString &state) {
    m_state = state;
    m_state_isSet = true;
}

bool OAIHotel::is_state_Set() const{
    return m_state_isSet;
}

bool OAIHotel::is_state_Valid() const{
    return m_state_isValid;
}

QString OAIHotel::getStreet() const {
    return m_street;
}
void OAIHotel::setStreet(const QString &street) {
    m_street = street;
    m_street_isSet = true;
}

bool OAIHotel::is_street_Set() const{
    return m_street_isSet;
}

bool OAIHotel::is_street_Valid() const{
    return m_street_isValid;
}

QDateTime OAIHotel::getUpdated() const {
    return m_updated;
}
void OAIHotel::setUpdated(const QDateTime &updated) {
    m_updated = updated;
    m_updated_isSet = true;
}

bool OAIHotel::is_updated_Set() const{
    return m_updated_isSet;
}

bool OAIHotel::is_updated_Valid() const{
    return m_updated_isValid;
}

QString OAIHotel::getUrl() const {
    return m_url;
}
void OAIHotel::setUrl(const QString &url) {
    m_url = url;
    m_url_isSet = true;
}

bool OAIHotel::is_url_Set() const{
    return m_url_isSet;
}

bool OAIHotel::is_url_Valid() const{
    return m_url_isValid;
}

QString OAIHotel::getUtcOffset() const {
    return m_utc_offset;
}
void OAIHotel::setUtcOffset(const QString &utc_offset) {
    m_utc_offset = utc_offset;
    m_utc_offset_isSet = true;
}

bool OAIHotel::is_utc_offset_Set() const{
    return m_utc_offset_isSet;
}

bool OAIHotel::is_utc_offset_Valid() const{
    return m_utc_offset_isValid;
}

bool OAIHotel::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_city_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_country_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_current_business_day_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_desc_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fax_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_hotel_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_latitude_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_longitude_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_phone_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_postal_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_street_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_updated_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_utc_offset_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIHotel::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
