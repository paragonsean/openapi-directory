# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.link_object import LinkObject
from openapi_server.models.list_rateplan_entry import ListRateplanEntry
from openapi_server import util


class RateplansListResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, count: int=None, links: Dict[str, LinkObject]=None, rateplans: List[ListRateplanEntry]=None):
        """RateplansListResponse - a model defined in OpenAPI

        :param count: The count of this RateplansListResponse.
        :param links: The links of this RateplansListResponse.
        :param rateplans: The rateplans of this RateplansListResponse.
        """
        self.openapi_types = {
            'count': int,
            'links': Dict[str, LinkObject],
            'rateplans': List[ListRateplanEntry]
        }

        self.attribute_map = {
            'count': '_count',
            'links': '_links',
            'rateplans': 'rateplans'
        }

        self._count = count
        self._links = links
        self._rateplans = rateplans

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RateplansListResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RateplansListResponse of this RateplansListResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def count(self):
        """Gets the count of this RateplansListResponse.

        The number of items matching your request in total for all pages.

        :return: The count of this RateplansListResponse.
        :rtype: int
        """
        return self._count

    @count.setter
    def count(self, count):
        """Sets the count of this RateplansListResponse.

        The number of items matching your request in total for all pages.

        :param count: The count of this RateplansListResponse.
        :type count: int
        """

        self._count = count

    @property
    def links(self):
        """Gets the links of this RateplansListResponse.

        Collection of links to related resources

        :return: The links of this RateplansListResponse.
        :rtype: Dict[str, LinkObject]
        """
        return self._links

    @links.setter
    def links(self, links):
        """Sets the links of this RateplansListResponse.

        Collection of links to related resources

        :param links: The links of this RateplansListResponse.
        :type links: Dict[str, LinkObject]
        """

        self._links = links

    @property
    def rateplans(self):
        """Gets the rateplans of this RateplansListResponse.

        List of rateplans

        :return: The rateplans of this RateplansListResponse.
        :rtype: List[ListRateplanEntry]
        """
        return self._rateplans

    @rateplans.setter
    def rateplans(self, rateplans):
        """Sets the rateplans of this RateplansListResponse.

        List of rateplans

        :param rateplans: The rateplans of this RateplansListResponse.
        :type rateplans: List[ListRateplanEntry]
        """

        self._rateplans = rateplans
