# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Hotel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, city: str=None, code: str=None, country: str=None, created: datetime=None, current_business_day: datetime=None, desc: str=None, email: str=None, fax: str=None, hotel_id: int=None, latitude: float=None, longitude: float=None, name: str=None, phone: str=None, postal_code: str=None, state: str=None, street: str=None, updated: datetime=None, url: str=None, utc_offset: str=None):
        """Hotel - a model defined in OpenAPI

        :param city: The city of this Hotel.
        :param code: The code of this Hotel.
        :param country: The country of this Hotel.
        :param created: The created of this Hotel.
        :param current_business_day: The current_business_day of this Hotel.
        :param desc: The desc of this Hotel.
        :param email: The email of this Hotel.
        :param fax: The fax of this Hotel.
        :param hotel_id: The hotel_id of this Hotel.
        :param latitude: The latitude of this Hotel.
        :param longitude: The longitude of this Hotel.
        :param name: The name of this Hotel.
        :param phone: The phone of this Hotel.
        :param postal_code: The postal_code of this Hotel.
        :param state: The state of this Hotel.
        :param street: The street of this Hotel.
        :param updated: The updated of this Hotel.
        :param url: The url of this Hotel.
        :param utc_offset: The utc_offset of this Hotel.
        """
        self.openapi_types = {
            'city': str,
            'code': str,
            'country': str,
            'created': datetime,
            'current_business_day': datetime,
            'desc': str,
            'email': str,
            'fax': str,
            'hotel_id': int,
            'latitude': float,
            'longitude': float,
            'name': str,
            'phone': str,
            'postal_code': str,
            'state': str,
            'street': str,
            'updated': datetime,
            'url': str,
            'utc_offset': str
        }

        self.attribute_map = {
            'city': 'city',
            'code': 'code',
            'country': 'country',
            'created': 'created',
            'current_business_day': 'current_business_day',
            'desc': 'desc',
            'email': 'email',
            'fax': 'fax',
            'hotel_id': 'hotel_id',
            'latitude': 'latitude',
            'longitude': 'longitude',
            'name': 'name',
            'phone': 'phone',
            'postal_code': 'postal_code',
            'state': 'state',
            'street': 'street',
            'updated': 'updated',
            'url': 'url',
            'utc_offset': 'utc_offset'
        }

        self._city = city
        self._code = code
        self._country = country
        self._created = created
        self._current_business_day = current_business_day
        self._desc = desc
        self._email = email
        self._fax = fax
        self._hotel_id = hotel_id
        self._latitude = latitude
        self._longitude = longitude
        self._name = name
        self._phone = phone
        self._postal_code = postal_code
        self._state = state
        self._street = street
        self._updated = updated
        self._url = url
        self._utc_offset = utc_offset

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Hotel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Hotel of this Hotel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def city(self):
        """Gets the city of this Hotel.

        The city the hotel is located in

        :return: The city of this Hotel.
        :rtype: str
        """
        return self._city

    @city.setter
    def city(self, city):
        """Sets the city of this Hotel.

        The city the hotel is located in

        :param city: The city of this Hotel.
        :type city: str
        """

        self._city = city

    @property
    def code(self):
        """Gets the code of this Hotel.

        The code of the hotel

        :return: The code of this Hotel.
        :rtype: str
        """
        return self._code

    @code.setter
    def code(self, code):
        """Sets the code of this Hotel.

        The code of the hotel

        :param code: The code of this Hotel.
        :type code: str
        """

        self._code = code

    @property
    def country(self):
        """Gets the country of this Hotel.

        The country the hotel is located. The country code is in ISO 3166-1 alpha-2 format              (see: <a href=\"http://www.iso.org/iso/country_codes/iso_3166_code_lists/country_names_and_code_elements.htm\" onfocus=\"this.blur()\" target=\"_blank\">http://www.iso.org/iso/country_codes/iso_3166_code_lists/country_names_and_code_elements.htm</a>)

        :return: The country of this Hotel.
        :rtype: str
        """
        return self._country

    @country.setter
    def country(self, country):
        """Sets the country of this Hotel.

        The country the hotel is located. The country code is in ISO 3166-1 alpha-2 format              (see: <a href=\"http://www.iso.org/iso/country_codes/iso_3166_code_lists/country_names_and_code_elements.htm\" onfocus=\"this.blur()\" target=\"_blank\">http://www.iso.org/iso/country_codes/iso_3166_code_lists/country_names_and_code_elements.htm</a>)

        :param country: The country of this Hotel.
        :type country: str
        """

        self._country = country

    @property
    def created(self):
        """Gets the created of this Hotel.

        Timestamp the hotel was created

        :return: The created of this Hotel.
        :rtype: datetime
        """
        return self._created

    @created.setter
    def created(self, created):
        """Sets the created of this Hotel.

        Timestamp the hotel was created

        :param created: The created of this Hotel.
        :type created: datetime
        """

        self._created = created

    @property
    def current_business_day(self):
        """Gets the current_business_day of this Hotel.

        Return the current business day of the hotel in the ISO-8601 format \"YYYY-MM-DD\"

        :return: The current_business_day of this Hotel.
        :rtype: datetime
        """
        return self._current_business_day

    @current_business_day.setter
    def current_business_day(self, current_business_day):
        """Sets the current_business_day of this Hotel.

        Return the current business day of the hotel in the ISO-8601 format \"YYYY-MM-DD\"

        :param current_business_day: The current_business_day of this Hotel.
        :type current_business_day: datetime
        """

        self._current_business_day = current_business_day

    @property
    def desc(self):
        """Gets the desc of this Hotel.

        The descriptive text for the the hotel

        :return: The desc of this Hotel.
        :rtype: str
        """
        return self._desc

    @desc.setter
    def desc(self, desc):
        """Sets the desc of this Hotel.

        The descriptive text for the the hotel

        :param desc: The desc of this Hotel.
        :type desc: str
        """

        self._desc = desc

    @property
    def email(self):
        """Gets the email of this Hotel.

        The email address of the hotel

        :return: The email of this Hotel.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this Hotel.

        The email address of the hotel

        :param email: The email of this Hotel.
        :type email: str
        """

        self._email = email

    @property
    def fax(self):
        """Gets the fax of this Hotel.

        The fax number of the hotel

        :return: The fax of this Hotel.
        :rtype: str
        """
        return self._fax

    @fax.setter
    def fax(self, fax):
        """Sets the fax of this Hotel.

        The fax number of the hotel

        :param fax: The fax of this Hotel.
        :type fax: str
        """

        self._fax = fax

    @property
    def hotel_id(self):
        """Gets the hotel_id of this Hotel.

        The id of the hotel

        :return: The hotel_id of this Hotel.
        :rtype: int
        """
        return self._hotel_id

    @hotel_id.setter
    def hotel_id(self, hotel_id):
        """Sets the hotel_id of this Hotel.

        The id of the hotel

        :param hotel_id: The hotel_id of this Hotel.
        :type hotel_id: int
        """

        self._hotel_id = hotel_id

    @property
    def latitude(self):
        """Gets the latitude of this Hotel.

        The latitude for the geolocation of the hotel. This allows you to show the hotel on a map

        :return: The latitude of this Hotel.
        :rtype: float
        """
        return self._latitude

    @latitude.setter
    def latitude(self, latitude):
        """Sets the latitude of this Hotel.

        The latitude for the geolocation of the hotel. This allows you to show the hotel on a map

        :param latitude: The latitude of this Hotel.
        :type latitude: float
        """

        self._latitude = latitude

    @property
    def longitude(self):
        """Gets the longitude of this Hotel.

        The longitude for the geolocation of the hotel. This allows you to show the hotel on a map

        :return: The longitude of this Hotel.
        :rtype: float
        """
        return self._longitude

    @longitude.setter
    def longitude(self, longitude):
        """Sets the longitude of this Hotel.

        The longitude for the geolocation of the hotel. This allows you to show the hotel on a map

        :param longitude: The longitude of this Hotel.
        :type longitude: float
        """

        self._longitude = longitude

    @property
    def name(self):
        """Gets the name of this Hotel.

        The name of the hotel

        :return: The name of this Hotel.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Hotel.

        The name of the hotel

        :param name: The name of this Hotel.
        :type name: str
        """

        self._name = name

    @property
    def phone(self):
        """Gets the phone of this Hotel.

        The main phone number to call the hotel

        :return: The phone of this Hotel.
        :rtype: str
        """
        return self._phone

    @phone.setter
    def phone(self, phone):
        """Sets the phone of this Hotel.

        The main phone number to call the hotel

        :param phone: The phone of this Hotel.
        :type phone: str
        """

        self._phone = phone

    @property
    def postal_code(self):
        """Gets the postal_code of this Hotel.

        The postal code of the hotel

        :return: The postal_code of this Hotel.
        :rtype: str
        """
        return self._postal_code

    @postal_code.setter
    def postal_code(self, postal_code):
        """Sets the postal_code of this Hotel.

        The postal code of the hotel

        :param postal_code: The postal_code of this Hotel.
        :type postal_code: str
        """

        self._postal_code = postal_code

    @property
    def state(self):
        """Gets the state of this Hotel.

        The state the hotel is located in

        :return: The state of this Hotel.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this Hotel.

        The state the hotel is located in

        :param state: The state of this Hotel.
        :type state: str
        """

        self._state = state

    @property
    def street(self):
        """Gets the street of this Hotel.

        The street address of the hotel

        :return: The street of this Hotel.
        :rtype: str
        """
        return self._street

    @street.setter
    def street(self, street):
        """Sets the street of this Hotel.

        The street address of the hotel

        :param street: The street of this Hotel.
        :type street: str
        """

        self._street = street

    @property
    def updated(self):
        """Gets the updated of this Hotel.

        Timestamp of when the hotel was changed the last time

        :return: The updated of this Hotel.
        :rtype: datetime
        """
        return self._updated

    @updated.setter
    def updated(self, updated):
        """Sets the updated of this Hotel.

        Timestamp of when the hotel was changed the last time

        :param updated: The updated of this Hotel.
        :type updated: datetime
        """

        self._updated = updated

    @property
    def url(self):
        """Gets the url of this Hotel.

        The homepage URL of the hotel

        :return: The url of this Hotel.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this Hotel.

        The homepage URL of the hotel

        :param url: The url of this Hotel.
        :type url: str
        """

        self._url = url

    @property
    def utc_offset(self):
        """Gets the utc_offset of this Hotel.

        The current time offset of the hotel to UTC. This is taking into account daylight saving times and shows the offset for the time the request is handled. The response              will be in the format of \"UTC±hh:mm\". If there is no offset to UTC it will be shown as \"UTC+00:00\"

        :return: The utc_offset of this Hotel.
        :rtype: str
        """
        return self._utc_offset

    @utc_offset.setter
    def utc_offset(self, utc_offset):
        """Sets the utc_offset of this Hotel.

        The current time offset of the hotel to UTC. This is taking into account daylight saving times and shows the offset for the time the request is handled. The response              will be in the format of \"UTC±hh:mm\". If there is no offset to UTC it will be shown as \"UTC+00:00\"

        :param utc_offset: The utc_offset of this Hotel.
        :type utc_offset: str
        """

        self._utc_offset = utc_offset
