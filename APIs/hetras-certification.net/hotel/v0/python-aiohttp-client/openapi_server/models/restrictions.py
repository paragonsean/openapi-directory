# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Restrictions(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, leadtime_to_book: int=None, max_advance_booking: int=None):
        """Restrictions - a model defined in OpenAPI

        :param leadtime_to_book: The leadtime_to_book of this Restrictions.
        :param max_advance_booking: The max_advance_booking of this Restrictions.
        """
        self.openapi_types = {
            'leadtime_to_book': int,
            'max_advance_booking': int
        }

        self.attribute_map = {
            'leadtime_to_book': 'leadtime_to_book',
            'max_advance_booking': 'max_advance_booking'
        }

        self._leadtime_to_book = leadtime_to_book
        self._max_advance_booking = max_advance_booking

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Restrictions':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Restrictions of this Restrictions.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def leadtime_to_book(self):
        """Gets the leadtime_to_book of this Restrictions.

        Days this rateplan needs to be booked in advance. This value is mutual exclusive to the              <i>max_advance_booking</i> and if no limit is set it is omitted

        :return: The leadtime_to_book of this Restrictions.
        :rtype: int
        """
        return self._leadtime_to_book

    @leadtime_to_book.setter
    def leadtime_to_book(self, leadtime_to_book):
        """Sets the leadtime_to_book of this Restrictions.

        Days this rateplan needs to be booked in advance. This value is mutual exclusive to the              <i>max_advance_booking</i> and if no limit is set it is omitted

        :param leadtime_to_book: The leadtime_to_book of this Restrictions.
        :type leadtime_to_book: int
        """

        self._leadtime_to_book = leadtime_to_book

    @property
    def max_advance_booking(self):
        """Gets the max_advance_booking of this Restrictions.

        Days this rateplan can be booked in advance. This value is mutual exclusive to the              <i>leadtime_to_book</i> and if no limit is set it is omitted

        :return: The max_advance_booking of this Restrictions.
        :rtype: int
        """
        return self._max_advance_booking

    @max_advance_booking.setter
    def max_advance_booking(self, max_advance_booking):
        """Sets the max_advance_booking of this Restrictions.

        Days this rateplan can be booked in advance. This value is mutual exclusive to the              <i>leadtime_to_book</i> and if no limit is set it is omitted

        :param max_advance_booking: The max_advance_booking of this Restrictions.
        :type max_advance_booking: int
        """

        self._max_advance_booking = max_advance_booking
