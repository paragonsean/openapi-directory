/*
 * hetras Hotel API Version 0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.CodeFullEntry;
import org.openapitools.client.model.CodesListResponse;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class CodesApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public CodesApi() {
        this(Configuration.getDefaultApiClient());
    }

    public CodesApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for codesGetCode
     * @param appId Application identifier (required)
     * @param appKey Application key. (required)
     * @param hotelId The hotel id the code available for. (required)
     * @param id The code identifier you want to see details for. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Details for the given code and hotel. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> You provided wrong credentials, or you reached your API limit. </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> The application does not have access to the requested resource. </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not Found. The server has not found anything matching the Request-URI or the requested rateplan could not be found. </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> The request failed to validate. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> We caught an unexpected error on our side. Please report with providing the Hetras-Tracking-Id from the response headers and we will check the logfiles. </td><td>  -  </td></tr>
        <tr><td> 503 </td><td> The server is currently unavailable. Please try later. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call codesGetCodeCall(String appId, String appKey, Integer hotelId, String id, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/hotel/v0/hotels/{hotelId}/codes/{id}"
            .replace("{" + "hotelId" + "}", localVarApiClient.escapeString(hotelId.toString()))
            .replace("{" + "id" + "}", localVarApiClient.escapeString(id.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (appId != null) {
            localVarHeaderParams.put("App-Id", localVarApiClient.parameterToString(appId));
        }

        if (appKey != null) {
            localVarHeaderParams.put("App-Key", localVarApiClient.parameterToString(appKey));
        }

        final String[] localVarAccepts = {
            "application/json",
            "text/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call codesGetCodeValidateBeforeCall(String appId, String appKey, Integer hotelId, String id, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'appId' is set
        if (appId == null) {
            throw new ApiException("Missing the required parameter 'appId' when calling codesGetCode(Async)");
        }

        // verify the required parameter 'appKey' is set
        if (appKey == null) {
            throw new ApiException("Missing the required parameter 'appKey' when calling codesGetCode(Async)");
        }

        // verify the required parameter 'hotelId' is set
        if (hotelId == null) {
            throw new ApiException("Missing the required parameter 'hotelId' when calling codesGetCode(Async)");
        }

        // verify the required parameter 'id' is set
        if (id == null) {
            throw new ApiException("Missing the required parameter 'id' when calling codesGetCode(Async)");
        }

        return codesGetCodeCall(appId, appKey, hotelId, id, _callback);

    }

    /**
     * Get all the details for a specific code available for the hotel.
     * Read the details about a specific code available for the defined hotel.
     * @param appId Application identifier (required)
     * @param appKey Application key. (required)
     * @param hotelId The hotel id the code available for. (required)
     * @param id The code identifier you want to see details for. (required)
     * @return CodeFullEntry
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Details for the given code and hotel. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> You provided wrong credentials, or you reached your API limit. </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> The application does not have access to the requested resource. </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not Found. The server has not found anything matching the Request-URI or the requested rateplan could not be found. </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> The request failed to validate. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> We caught an unexpected error on our side. Please report with providing the Hetras-Tracking-Id from the response headers and we will check the logfiles. </td><td>  -  </td></tr>
        <tr><td> 503 </td><td> The server is currently unavailable. Please try later. </td><td>  -  </td></tr>
     </table>
     */
    public CodeFullEntry codesGetCode(String appId, String appKey, Integer hotelId, String id) throws ApiException {
        ApiResponse<CodeFullEntry> localVarResp = codesGetCodeWithHttpInfo(appId, appKey, hotelId, id);
        return localVarResp.getData();
    }

    /**
     * Get all the details for a specific code available for the hotel.
     * Read the details about a specific code available for the defined hotel.
     * @param appId Application identifier (required)
     * @param appKey Application key. (required)
     * @param hotelId The hotel id the code available for. (required)
     * @param id The code identifier you want to see details for. (required)
     * @return ApiResponse&lt;CodeFullEntry&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Details for the given code and hotel. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> You provided wrong credentials, or you reached your API limit. </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> The application does not have access to the requested resource. </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not Found. The server has not found anything matching the Request-URI or the requested rateplan could not be found. </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> The request failed to validate. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> We caught an unexpected error on our side. Please report with providing the Hetras-Tracking-Id from the response headers and we will check the logfiles. </td><td>  -  </td></tr>
        <tr><td> 503 </td><td> The server is currently unavailable. Please try later. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<CodeFullEntry> codesGetCodeWithHttpInfo(String appId, String appKey, Integer hotelId, String id) throws ApiException {
        okhttp3.Call localVarCall = codesGetCodeValidateBeforeCall(appId, appKey, hotelId, id, null);
        Type localVarReturnType = new TypeToken<CodeFullEntry>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Get all the details for a specific code available for the hotel. (asynchronously)
     * Read the details about a specific code available for the defined hotel.
     * @param appId Application identifier (required)
     * @param appKey Application key. (required)
     * @param hotelId The hotel id the code available for. (required)
     * @param id The code identifier you want to see details for. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Details for the given code and hotel. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> You provided wrong credentials, or you reached your API limit. </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> The application does not have access to the requested resource. </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not Found. The server has not found anything matching the Request-URI or the requested rateplan could not be found. </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> The request failed to validate. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> We caught an unexpected error on our side. Please report with providing the Hetras-Tracking-Id from the response headers and we will check the logfiles. </td><td>  -  </td></tr>
        <tr><td> 503 </td><td> The server is currently unavailable. Please try later. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call codesGetCodeAsync(String appId, String appKey, Integer hotelId, String id, final ApiCallback<CodeFullEntry> _callback) throws ApiException {

        okhttp3.Call localVarCall = codesGetCodeValidateBeforeCall(appId, appKey, hotelId, id, _callback);
        Type localVarReturnType = new TypeToken<CodeFullEntry>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for codesGetCodes
     * @param appId Application identifier (required)
     * @param appKey Application key. (required)
     * @param hotelId The hotel id you are trying to find codes for. (required)
     * @param code Return all results matching the specified code. A code is unique in combination with the type              which means when you query for a code you could get multiple results each for a different type (optional)
     * @param type Return all codes for the specified type (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A list of codes for a requested hotel matching the filter criteria. </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> There are no codes found for the given filtering criteria. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> You provided wrong credentials, or you reached your API limit. </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> The application does not have access to the requested resource. </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not Found. The server has not found anything matching the Request-URI. </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> The request failed to validate. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> We caught an unexpected error on our side. Please report with providing the Hetras-Tracking-Id from the response headers and we will check the logfiles. </td><td>  -  </td></tr>
        <tr><td> 503 </td><td> The server is currently unavailable. Please try later. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call codesGetCodesCall(String appId, String appKey, Integer hotelId, String code, String type, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/hotel/v0/hotels/{hotelId}/codes"
            .replace("{" + "hotelId" + "}", localVarApiClient.escapeString(hotelId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (code != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("code", code));
        }

        if (type != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("type", type));
        }

        if (appId != null) {
            localVarHeaderParams.put("App-Id", localVarApiClient.parameterToString(appId));
        }

        if (appKey != null) {
            localVarHeaderParams.put("App-Key", localVarApiClient.parameterToString(appKey));
        }

        final String[] localVarAccepts = {
            "application/json",
            "text/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call codesGetCodesValidateBeforeCall(String appId, String appKey, Integer hotelId, String code, String type, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'appId' is set
        if (appId == null) {
            throw new ApiException("Missing the required parameter 'appId' when calling codesGetCodes(Async)");
        }

        // verify the required parameter 'appKey' is set
        if (appKey == null) {
            throw new ApiException("Missing the required parameter 'appKey' when calling codesGetCodes(Async)");
        }

        // verify the required parameter 'hotelId' is set
        if (hotelId == null) {
            throw new ApiException("Missing the required parameter 'hotelId' when calling codesGetCodes(Async)");
        }

        return codesGetCodesCall(appId, appKey, hotelId, code, type, _callback);

    }

    /**
     * Get a list of codes for the specified hotel either filtered by type or code.
     * With this call you can find codes for a hotel by type or code. By default and without any filter criteria              defined it will return you all available codes.
     * @param appId Application identifier (required)
     * @param appKey Application key. (required)
     * @param hotelId The hotel id you are trying to find codes for. (required)
     * @param code Return all results matching the specified code. A code is unique in combination with the type              which means when you query for a code you could get multiple results each for a different type (optional)
     * @param type Return all codes for the specified type (optional)
     * @return CodesListResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A list of codes for a requested hotel matching the filter criteria. </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> There are no codes found for the given filtering criteria. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> You provided wrong credentials, or you reached your API limit. </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> The application does not have access to the requested resource. </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not Found. The server has not found anything matching the Request-URI. </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> The request failed to validate. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> We caught an unexpected error on our side. Please report with providing the Hetras-Tracking-Id from the response headers and we will check the logfiles. </td><td>  -  </td></tr>
        <tr><td> 503 </td><td> The server is currently unavailable. Please try later. </td><td>  -  </td></tr>
     </table>
     */
    public CodesListResponse codesGetCodes(String appId, String appKey, Integer hotelId, String code, String type) throws ApiException {
        ApiResponse<CodesListResponse> localVarResp = codesGetCodesWithHttpInfo(appId, appKey, hotelId, code, type);
        return localVarResp.getData();
    }

    /**
     * Get a list of codes for the specified hotel either filtered by type or code.
     * With this call you can find codes for a hotel by type or code. By default and without any filter criteria              defined it will return you all available codes.
     * @param appId Application identifier (required)
     * @param appKey Application key. (required)
     * @param hotelId The hotel id you are trying to find codes for. (required)
     * @param code Return all results matching the specified code. A code is unique in combination with the type              which means when you query for a code you could get multiple results each for a different type (optional)
     * @param type Return all codes for the specified type (optional)
     * @return ApiResponse&lt;CodesListResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A list of codes for a requested hotel matching the filter criteria. </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> There are no codes found for the given filtering criteria. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> You provided wrong credentials, or you reached your API limit. </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> The application does not have access to the requested resource. </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not Found. The server has not found anything matching the Request-URI. </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> The request failed to validate. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> We caught an unexpected error on our side. Please report with providing the Hetras-Tracking-Id from the response headers and we will check the logfiles. </td><td>  -  </td></tr>
        <tr><td> 503 </td><td> The server is currently unavailable. Please try later. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<CodesListResponse> codesGetCodesWithHttpInfo(String appId, String appKey, Integer hotelId, String code, String type) throws ApiException {
        okhttp3.Call localVarCall = codesGetCodesValidateBeforeCall(appId, appKey, hotelId, code, type, null);
        Type localVarReturnType = new TypeToken<CodesListResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Get a list of codes for the specified hotel either filtered by type or code. (asynchronously)
     * With this call you can find codes for a hotel by type or code. By default and without any filter criteria              defined it will return you all available codes.
     * @param appId Application identifier (required)
     * @param appKey Application key. (required)
     * @param hotelId The hotel id you are trying to find codes for. (required)
     * @param code Return all results matching the specified code. A code is unique in combination with the type              which means when you query for a code you could get multiple results each for a different type (optional)
     * @param type Return all codes for the specified type (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A list of codes for a requested hotel matching the filter criteria. </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> There are no codes found for the given filtering criteria. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> You provided wrong credentials, or you reached your API limit. </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> The application does not have access to the requested resource. </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not Found. The server has not found anything matching the Request-URI. </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> The request failed to validate. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> We caught an unexpected error on our side. Please report with providing the Hetras-Tracking-Id from the response headers and we will check the logfiles. </td><td>  -  </td></tr>
        <tr><td> 503 </td><td> The server is currently unavailable. Please try later. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call codesGetCodesAsync(String appId, String appKey, Integer hotelId, String code, String type, final ApiCallback<CodesListResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = codesGetCodesValidateBeforeCall(appId, appKey, hotelId, code, type, _callback);
        Type localVarReturnType = new TypeToken<CodesListResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
