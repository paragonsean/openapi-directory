/*
 * hetras Booking API Version 0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.DailyRatesResponse;
import java.time.OffsetDateTime;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class DailyRatesApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public DailyRatesApi() {
        this(Configuration.getDefaultApiClient());
    }

    public DailyRatesApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for dailyRatesGetDailyRates
     * @param appId Application identifier (required)
     * @param appKey Application key. (required)
     * @param hotelId Define the hotel id to request the availability for. (required)
     * @param from Define the first business day you would like to get availability numbers for. The day should not be in the past. (required)
     * @param to Define the last business day you would like to get rates for (inclusive). The maximum time span between &lt;i&gt;&#39;From&#39;&lt;/i&gt; and &lt;i&gt;&#39;To&#39;&lt;/i&gt;              is limited to 365 days. This can&#39;t be less than the &#39;From&#39; date. (required)
     * @param channelCode Define the channel code in order to look up the rates for. (required)
     * @param expand Define the sections you want to expand and get informed about rates for. (optional)
     * @param ratePlanCodes Define the codes of rate plans to show in the response. A list of comma &#39;,&#39; separated rate plan codes. (optional)
     * @param skip Amount of items to skip. (optional)
     * @param top Amount of items to select. (optional)
     * @param inlinecount Return total number of items for a given filter criteria. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Different rates for the requested stay details grouped by room type. </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> When there are no data to return. </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> The request failed to validate. One of the missing request parameters was missing or their value was wrong. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> You provided wrong credentials, or you reached your API limit. </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> The application does not have access to the requested resource. </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not Found. The server has not found anything matching the Request-URI. This code will not be returned when there are no data to return for (please see 204). </td><td>  -  </td></tr>
        <tr><td> 409 </td><td> When an error occurs which prevent the API to return a response and is normally cause by bad input. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> We caught an unexpected error on our side. Please report with providing the Hetras-Tracking-Id from the response headers and we will check the logfiles. </td><td>  -  </td></tr>
        <tr><td> 503 </td><td> The server is currently unavailable. Please try later. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dailyRatesGetDailyRatesCall(String appId, String appKey, Integer hotelId, OffsetDateTime from, OffsetDateTime to, String channelCode, List<String> expand, List<String> ratePlanCodes, Integer skip, Integer top, String inlinecount, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/booking/v0/daily_rates";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (hotelId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("hotelId", hotelId));
        }

        if (from != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("from", from));
        }

        if (to != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("to", to));
        }

        if (channelCode != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("channelCode", channelCode));
        }

        if (expand != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "expand", expand));
        }

        if (ratePlanCodes != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "ratePlanCodes", ratePlanCodes));
        }

        if (skip != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("skip", skip));
        }

        if (top != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("top", top));
        }

        if (inlinecount != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("inlinecount", inlinecount));
        }

        if (appId != null) {
            localVarHeaderParams.put("App-Id", localVarApiClient.parameterToString(appId));
        }

        if (appKey != null) {
            localVarHeaderParams.put("App-Key", localVarApiClient.parameterToString(appKey));
        }

        final String[] localVarAccepts = {
            "application/json",
            "text/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call dailyRatesGetDailyRatesValidateBeforeCall(String appId, String appKey, Integer hotelId, OffsetDateTime from, OffsetDateTime to, String channelCode, List<String> expand, List<String> ratePlanCodes, Integer skip, Integer top, String inlinecount, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'appId' is set
        if (appId == null) {
            throw new ApiException("Missing the required parameter 'appId' when calling dailyRatesGetDailyRates(Async)");
        }

        // verify the required parameter 'appKey' is set
        if (appKey == null) {
            throw new ApiException("Missing the required parameter 'appKey' when calling dailyRatesGetDailyRates(Async)");
        }

        // verify the required parameter 'hotelId' is set
        if (hotelId == null) {
            throw new ApiException("Missing the required parameter 'hotelId' when calling dailyRatesGetDailyRates(Async)");
        }

        // verify the required parameter 'from' is set
        if (from == null) {
            throw new ApiException("Missing the required parameter 'from' when calling dailyRatesGetDailyRates(Async)");
        }

        // verify the required parameter 'to' is set
        if (to == null) {
            throw new ApiException("Missing the required parameter 'to' when calling dailyRatesGetDailyRates(Async)");
        }

        // verify the required parameter 'channelCode' is set
        if (channelCode == null) {
            throw new ApiException("Missing the required parameter 'channelCode' when calling dailyRatesGetDailyRates(Async)");
        }

        return dailyRatesGetDailyRatesCall(appId, appKey, hotelId, from, to, channelCode, expand, ratePlanCodes, skip, top, inlinecount, _callback);

    }

    /**
     * Get a list of daily rates given a hotel Id, a channel code and a date range.
     * With the rates request you can get a list of different daily rates. You will have to at least               specify the hotel, the channel code, and a calendar range. The channel code will define which rates will be               returned based on the access control configuration for the rates. Additionally rate plan codes may be specified in              the request in order to limit only those rates of the given plans, if they are not specified, it will return all the public rate plans.              If requested the caller may specify whether he wants policies or not.
     * @param appId Application identifier (required)
     * @param appKey Application key. (required)
     * @param hotelId Define the hotel id to request the availability for. (required)
     * @param from Define the first business day you would like to get availability numbers for. The day should not be in the past. (required)
     * @param to Define the last business day you would like to get rates for (inclusive). The maximum time span between &lt;i&gt;&#39;From&#39;&lt;/i&gt; and &lt;i&gt;&#39;To&#39;&lt;/i&gt;              is limited to 365 days. This can&#39;t be less than the &#39;From&#39; date. (required)
     * @param channelCode Define the channel code in order to look up the rates for. (required)
     * @param expand Define the sections you want to expand and get informed about rates for. (optional)
     * @param ratePlanCodes Define the codes of rate plans to show in the response. A list of comma &#39;,&#39; separated rate plan codes. (optional)
     * @param skip Amount of items to skip. (optional)
     * @param top Amount of items to select. (optional)
     * @param inlinecount Return total number of items for a given filter criteria. (optional)
     * @return DailyRatesResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Different rates for the requested stay details grouped by room type. </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> When there are no data to return. </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> The request failed to validate. One of the missing request parameters was missing or their value was wrong. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> You provided wrong credentials, or you reached your API limit. </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> The application does not have access to the requested resource. </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not Found. The server has not found anything matching the Request-URI. This code will not be returned when there are no data to return for (please see 204). </td><td>  -  </td></tr>
        <tr><td> 409 </td><td> When an error occurs which prevent the API to return a response and is normally cause by bad input. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> We caught an unexpected error on our side. Please report with providing the Hetras-Tracking-Id from the response headers and we will check the logfiles. </td><td>  -  </td></tr>
        <tr><td> 503 </td><td> The server is currently unavailable. Please try later. </td><td>  -  </td></tr>
     </table>
     */
    public DailyRatesResponse dailyRatesGetDailyRates(String appId, String appKey, Integer hotelId, OffsetDateTime from, OffsetDateTime to, String channelCode, List<String> expand, List<String> ratePlanCodes, Integer skip, Integer top, String inlinecount) throws ApiException {
        ApiResponse<DailyRatesResponse> localVarResp = dailyRatesGetDailyRatesWithHttpInfo(appId, appKey, hotelId, from, to, channelCode, expand, ratePlanCodes, skip, top, inlinecount);
        return localVarResp.getData();
    }

    /**
     * Get a list of daily rates given a hotel Id, a channel code and a date range.
     * With the rates request you can get a list of different daily rates. You will have to at least               specify the hotel, the channel code, and a calendar range. The channel code will define which rates will be               returned based on the access control configuration for the rates. Additionally rate plan codes may be specified in              the request in order to limit only those rates of the given plans, if they are not specified, it will return all the public rate plans.              If requested the caller may specify whether he wants policies or not.
     * @param appId Application identifier (required)
     * @param appKey Application key. (required)
     * @param hotelId Define the hotel id to request the availability for. (required)
     * @param from Define the first business day you would like to get availability numbers for. The day should not be in the past. (required)
     * @param to Define the last business day you would like to get rates for (inclusive). The maximum time span between &lt;i&gt;&#39;From&#39;&lt;/i&gt; and &lt;i&gt;&#39;To&#39;&lt;/i&gt;              is limited to 365 days. This can&#39;t be less than the &#39;From&#39; date. (required)
     * @param channelCode Define the channel code in order to look up the rates for. (required)
     * @param expand Define the sections you want to expand and get informed about rates for. (optional)
     * @param ratePlanCodes Define the codes of rate plans to show in the response. A list of comma &#39;,&#39; separated rate plan codes. (optional)
     * @param skip Amount of items to skip. (optional)
     * @param top Amount of items to select. (optional)
     * @param inlinecount Return total number of items for a given filter criteria. (optional)
     * @return ApiResponse&lt;DailyRatesResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Different rates for the requested stay details grouped by room type. </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> When there are no data to return. </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> The request failed to validate. One of the missing request parameters was missing or their value was wrong. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> You provided wrong credentials, or you reached your API limit. </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> The application does not have access to the requested resource. </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not Found. The server has not found anything matching the Request-URI. This code will not be returned when there are no data to return for (please see 204). </td><td>  -  </td></tr>
        <tr><td> 409 </td><td> When an error occurs which prevent the API to return a response and is normally cause by bad input. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> We caught an unexpected error on our side. Please report with providing the Hetras-Tracking-Id from the response headers and we will check the logfiles. </td><td>  -  </td></tr>
        <tr><td> 503 </td><td> The server is currently unavailable. Please try later. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<DailyRatesResponse> dailyRatesGetDailyRatesWithHttpInfo(String appId, String appKey, Integer hotelId, OffsetDateTime from, OffsetDateTime to, String channelCode, List<String> expand, List<String> ratePlanCodes, Integer skip, Integer top, String inlinecount) throws ApiException {
        okhttp3.Call localVarCall = dailyRatesGetDailyRatesValidateBeforeCall(appId, appKey, hotelId, from, to, channelCode, expand, ratePlanCodes, skip, top, inlinecount, null);
        Type localVarReturnType = new TypeToken<DailyRatesResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Get a list of daily rates given a hotel Id, a channel code and a date range. (asynchronously)
     * With the rates request you can get a list of different daily rates. You will have to at least               specify the hotel, the channel code, and a calendar range. The channel code will define which rates will be               returned based on the access control configuration for the rates. Additionally rate plan codes may be specified in              the request in order to limit only those rates of the given plans, if they are not specified, it will return all the public rate plans.              If requested the caller may specify whether he wants policies or not.
     * @param appId Application identifier (required)
     * @param appKey Application key. (required)
     * @param hotelId Define the hotel id to request the availability for. (required)
     * @param from Define the first business day you would like to get availability numbers for. The day should not be in the past. (required)
     * @param to Define the last business day you would like to get rates for (inclusive). The maximum time span between &lt;i&gt;&#39;From&#39;&lt;/i&gt; and &lt;i&gt;&#39;To&#39;&lt;/i&gt;              is limited to 365 days. This can&#39;t be less than the &#39;From&#39; date. (required)
     * @param channelCode Define the channel code in order to look up the rates for. (required)
     * @param expand Define the sections you want to expand and get informed about rates for. (optional)
     * @param ratePlanCodes Define the codes of rate plans to show in the response. A list of comma &#39;,&#39; separated rate plan codes. (optional)
     * @param skip Amount of items to skip. (optional)
     * @param top Amount of items to select. (optional)
     * @param inlinecount Return total number of items for a given filter criteria. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Different rates for the requested stay details grouped by room type. </td><td>  -  </td></tr>
        <tr><td> 204 </td><td> When there are no data to return. </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> The request failed to validate. One of the missing request parameters was missing or their value was wrong. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> You provided wrong credentials, or you reached your API limit. </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> The application does not have access to the requested resource. </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not Found. The server has not found anything matching the Request-URI. This code will not be returned when there are no data to return for (please see 204). </td><td>  -  </td></tr>
        <tr><td> 409 </td><td> When an error occurs which prevent the API to return a response and is normally cause by bad input. </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> We caught an unexpected error on our side. Please report with providing the Hetras-Tracking-Id from the response headers and we will check the logfiles. </td><td>  -  </td></tr>
        <tr><td> 503 </td><td> The server is currently unavailable. Please try later. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call dailyRatesGetDailyRatesAsync(String appId, String appKey, Integer hotelId, OffsetDateTime from, OffsetDateTime to, String channelCode, List<String> expand, List<String> ratePlanCodes, Integer skip, Integer top, String inlinecount, final ApiCallback<DailyRatesResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = dailyRatesGetDailyRatesValidateBeforeCall(appId, appKey, hotelId, from, to, channelCode, expand, ratePlanCodes, skip, top, inlinecount, _callback);
        Type localVarReturnType = new TypeToken<DailyRatesResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
