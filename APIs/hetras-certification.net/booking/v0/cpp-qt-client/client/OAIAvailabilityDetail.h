/**
 * hetras Booking API Version 0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAvailabilityDetail.h
 *
 * 
 */

#ifndef OAIAvailabilityDetail_H
#define OAIAvailabilityDetail_H

#include <QJsonObject>

#include "OAIBlocked.h"
#include "OAILinkObject.h"
#include "OAIMaintenance.h"
#include <QMap>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAILinkObject;
class OAIBlocked;
class OAIMaintenance;

class OAIAvailabilityDetail : public OAIObject {
public:
    OAIAvailabilityDetail();
    OAIAvailabilityDetail(QString json);
    ~OAIAvailabilityDetail() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QMap<QString, OAILinkObject> getLinks() const;
    void setLinks(const QMap<QString, OAILinkObject> &_links);
    bool is__links_Set() const;
    bool is__links_Valid() const;

    qint32 getAvailable() const;
    void setAvailable(const qint32 &available);
    bool is_available_Set() const;
    bool is_available_Valid() const;

    OAIBlocked getBlocked() const;
    void setBlocked(const OAIBlocked &blocked);
    bool is_blocked_Set() const;
    bool is_blocked_Valid() const;

    qint32 getDayUse() const;
    void setDayUse(const qint32 &day_use);
    bool is_day_use_Set() const;
    bool is_day_use_Valid() const;

    qint32 getHouseCount() const;
    void setHouseCount(const qint32 &house_count);
    bool is_house_count_Set() const;
    bool is_house_count_Valid() const;

    OAIMaintenance getMaintenance() const;
    void setMaintenance(const OAIMaintenance &maintenance);
    bool is_maintenance_Set() const;
    bool is_maintenance_Valid() const;

    qint32 getOverbooking() const;
    void setOverbooking(const qint32 &overbooking);
    bool is_overbooking_Set() const;
    bool is_overbooking_Valid() const;

    qint32 getRoomCount() const;
    void setRoomCount(const qint32 &room_count);
    bool is_room_count_Set() const;
    bool is_room_count_Valid() const;

    qint32 getSold() const;
    void setSold(const qint32 &sold);
    bool is_sold_Set() const;
    bool is_sold_Valid() const;

    qint32 getToSell() const;
    void setToSell(const qint32 &to_sell);
    bool is_to_sell_Set() const;
    bool is_to_sell_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QMap<QString, OAILinkObject> m__links;
    bool m__links_isSet;
    bool m__links_isValid;

    qint32 m_available;
    bool m_available_isSet;
    bool m_available_isValid;

    OAIBlocked m_blocked;
    bool m_blocked_isSet;
    bool m_blocked_isValid;

    qint32 m_day_use;
    bool m_day_use_isSet;
    bool m_day_use_isValid;

    qint32 m_house_count;
    bool m_house_count_isSet;
    bool m_house_count_isValid;

    OAIMaintenance m_maintenance;
    bool m_maintenance_isSet;
    bool m_maintenance_isValid;

    qint32 m_overbooking;
    bool m_overbooking_isSet;
    bool m_overbooking_isValid;

    qint32 m_room_count;
    bool m_room_count_isSet;
    bool m_room_count_isValid;

    qint32 m_sold;
    bool m_sold_isSet;
    bool m_sold_isValid;

    qint32 m_to_sell;
    bool m_to_sell_isSet;
    bool m_to_sell_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAvailabilityDetail)

#endif // OAIAvailabilityDetail_H
