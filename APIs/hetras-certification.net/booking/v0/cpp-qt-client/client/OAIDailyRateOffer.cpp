/**
 * hetras Booking API Version 0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDailyRateOffer.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDailyRateOffer::OAIDailyRateOffer(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDailyRateOffer::OAIDailyRateOffer() {
    this->initializeModel();
}

OAIDailyRateOffer::~OAIDailyRateOffer() {}

void OAIDailyRateOffer::initializeModel() {

    m_cancellation_policy_code_isSet = false;
    m_cancellation_policy_code_isValid = false;

    m_guarantee_type_code_isSet = false;
    m_guarantee_type_code_isValid = false;

    m_noshow_policy_code_isSet = false;
    m_noshow_policy_code_isValid = false;

    m_rateplan_code_isSet = false;
    m_rateplan_code_isValid = false;

    m_room_type_details_isSet = false;
    m_room_type_details_isValid = false;
}

void OAIDailyRateOffer::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDailyRateOffer::fromJsonObject(QJsonObject json) {

    m_cancellation_policy_code_isValid = ::OpenAPI::fromJsonValue(m_cancellation_policy_code, json[QString("cancellation_policy_code")]);
    m_cancellation_policy_code_isSet = !json[QString("cancellation_policy_code")].isNull() && m_cancellation_policy_code_isValid;

    m_guarantee_type_code_isValid = ::OpenAPI::fromJsonValue(m_guarantee_type_code, json[QString("guarantee_type_code")]);
    m_guarantee_type_code_isSet = !json[QString("guarantee_type_code")].isNull() && m_guarantee_type_code_isValid;

    m_noshow_policy_code_isValid = ::OpenAPI::fromJsonValue(m_noshow_policy_code, json[QString("noshow_policy_code")]);
    m_noshow_policy_code_isSet = !json[QString("noshow_policy_code")].isNull() && m_noshow_policy_code_isValid;

    m_rateplan_code_isValid = ::OpenAPI::fromJsonValue(m_rateplan_code, json[QString("rateplan_code")]);
    m_rateplan_code_isSet = !json[QString("rateplan_code")].isNull() && m_rateplan_code_isValid;

    m_room_type_details_isValid = ::OpenAPI::fromJsonValue(m_room_type_details, json[QString("room_type_details")]);
    m_room_type_details_isSet = !json[QString("room_type_details")].isNull() && m_room_type_details_isValid;
}

QString OAIDailyRateOffer::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDailyRateOffer::asJsonObject() const {
    QJsonObject obj;
    if (m_cancellation_policy_code_isSet) {
        obj.insert(QString("cancellation_policy_code"), ::OpenAPI::toJsonValue(m_cancellation_policy_code));
    }
    if (m_guarantee_type_code_isSet) {
        obj.insert(QString("guarantee_type_code"), ::OpenAPI::toJsonValue(m_guarantee_type_code));
    }
    if (m_noshow_policy_code_isSet) {
        obj.insert(QString("noshow_policy_code"), ::OpenAPI::toJsonValue(m_noshow_policy_code));
    }
    if (m_rateplan_code_isSet) {
        obj.insert(QString("rateplan_code"), ::OpenAPI::toJsonValue(m_rateplan_code));
    }
    if (m_room_type_details.size() > 0) {
        obj.insert(QString("room_type_details"), ::OpenAPI::toJsonValue(m_room_type_details));
    }
    return obj;
}

QString OAIDailyRateOffer::getCancellationPolicyCode() const {
    return m_cancellation_policy_code;
}
void OAIDailyRateOffer::setCancellationPolicyCode(const QString &cancellation_policy_code) {
    m_cancellation_policy_code = cancellation_policy_code;
    m_cancellation_policy_code_isSet = true;
}

bool OAIDailyRateOffer::is_cancellation_policy_code_Set() const{
    return m_cancellation_policy_code_isSet;
}

bool OAIDailyRateOffer::is_cancellation_policy_code_Valid() const{
    return m_cancellation_policy_code_isValid;
}

QString OAIDailyRateOffer::getGuaranteeTypeCode() const {
    return m_guarantee_type_code;
}
void OAIDailyRateOffer::setGuaranteeTypeCode(const QString &guarantee_type_code) {
    m_guarantee_type_code = guarantee_type_code;
    m_guarantee_type_code_isSet = true;
}

bool OAIDailyRateOffer::is_guarantee_type_code_Set() const{
    return m_guarantee_type_code_isSet;
}

bool OAIDailyRateOffer::is_guarantee_type_code_Valid() const{
    return m_guarantee_type_code_isValid;
}

QString OAIDailyRateOffer::getNoshowPolicyCode() const {
    return m_noshow_policy_code;
}
void OAIDailyRateOffer::setNoshowPolicyCode(const QString &noshow_policy_code) {
    m_noshow_policy_code = noshow_policy_code;
    m_noshow_policy_code_isSet = true;
}

bool OAIDailyRateOffer::is_noshow_policy_code_Set() const{
    return m_noshow_policy_code_isSet;
}

bool OAIDailyRateOffer::is_noshow_policy_code_Valid() const{
    return m_noshow_policy_code_isValid;
}

QString OAIDailyRateOffer::getRateplanCode() const {
    return m_rateplan_code;
}
void OAIDailyRateOffer::setRateplanCode(const QString &rateplan_code) {
    m_rateplan_code = rateplan_code;
    m_rateplan_code_isSet = true;
}

bool OAIDailyRateOffer::is_rateplan_code_Set() const{
    return m_rateplan_code_isSet;
}

bool OAIDailyRateOffer::is_rateplan_code_Valid() const{
    return m_rateplan_code_isValid;
}

QList<OAIDailyRateRoomOffer> OAIDailyRateOffer::getRoomTypeDetails() const {
    return m_room_type_details;
}
void OAIDailyRateOffer::setRoomTypeDetails(const QList<OAIDailyRateRoomOffer> &room_type_details) {
    m_room_type_details = room_type_details;
    m_room_type_details_isSet = true;
}

bool OAIDailyRateOffer::is_room_type_details_Set() const{
    return m_room_type_details_isSet;
}

bool OAIDailyRateOffer::is_room_type_details_Valid() const{
    return m_room_type_details_isValid;
}

bool OAIDailyRateOffer::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_cancellation_policy_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_guarantee_type_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_noshow_policy_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_rateplan_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_room_type_details.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDailyRateOffer::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
