/**
 * hetras Booking API Version 0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGuaranteeResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGuaranteeResponse::OAIGuaranteeResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGuaranteeResponse::OAIGuaranteeResponse() {
    this->initializeModel();
}

OAIGuaranteeResponse::~OAIGuaranteeResponse() {}

void OAIGuaranteeResponse::initializeModel() {

    m_guarantee_type_isSet = false;
    m_guarantee_type_isValid = false;

    m_valid_token_isSet = false;
    m_valid_token_isValid = false;
}

void OAIGuaranteeResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGuaranteeResponse::fromJsonObject(QJsonObject json) {

    m_guarantee_type_isValid = ::OpenAPI::fromJsonValue(m_guarantee_type, json[QString("guarantee_type")]);
    m_guarantee_type_isSet = !json[QString("guarantee_type")].isNull() && m_guarantee_type_isValid;

    m_valid_token_isValid = ::OpenAPI::fromJsonValue(m_valid_token, json[QString("valid_token")]);
    m_valid_token_isSet = !json[QString("valid_token")].isNull() && m_valid_token_isValid;
}

QString OAIGuaranteeResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGuaranteeResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_guarantee_type_isSet) {
        obj.insert(QString("guarantee_type"), ::OpenAPI::toJsonValue(m_guarantee_type));
    }
    if (m_valid_token_isSet) {
        obj.insert(QString("valid_token"), ::OpenAPI::toJsonValue(m_valid_token));
    }
    return obj;
}

QString OAIGuaranteeResponse::getGuaranteeType() const {
    return m_guarantee_type;
}
void OAIGuaranteeResponse::setGuaranteeType(const QString &guarantee_type) {
    m_guarantee_type = guarantee_type;
    m_guarantee_type_isSet = true;
}

bool OAIGuaranteeResponse::is_guarantee_type_Set() const{
    return m_guarantee_type_isSet;
}

bool OAIGuaranteeResponse::is_guarantee_type_Valid() const{
    return m_guarantee_type_isValid;
}

bool OAIGuaranteeResponse::isValidToken() const {
    return m_valid_token;
}
void OAIGuaranteeResponse::setValidToken(const bool &valid_token) {
    m_valid_token = valid_token;
    m_valid_token_isSet = true;
}

bool OAIGuaranteeResponse::is_valid_token_Set() const{
    return m_valid_token_isSet;
}

bool OAIGuaranteeResponse::is_valid_token_Valid() const{
    return m_valid_token_isValid;
}

bool OAIGuaranteeResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_guarantee_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_valid_token_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGuaranteeResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
