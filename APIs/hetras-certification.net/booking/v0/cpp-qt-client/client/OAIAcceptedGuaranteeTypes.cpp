/**
 * hetras Booking API Version 0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAcceptedGuaranteeTypes.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAcceptedGuaranteeTypes::OAIAcceptedGuaranteeTypes(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAcceptedGuaranteeTypes::OAIAcceptedGuaranteeTypes() {
    this->initializeModel();
}

OAIAcceptedGuaranteeTypes::~OAIAcceptedGuaranteeTypes() {}

void OAIAcceptedGuaranteeTypes::initializeModel() {

    m_accepted_isSet = false;
    m_accepted_isValid = false;

    m_minimum_isSet = false;
    m_minimum_isValid = false;
}

void OAIAcceptedGuaranteeTypes::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAcceptedGuaranteeTypes::fromJsonObject(QJsonObject json) {

    m_accepted_isValid = ::OpenAPI::fromJsonValue(m_accepted, json[QString("accepted")]);
    m_accepted_isSet = !json[QString("accepted")].isNull() && m_accepted_isValid;

    m_minimum_isValid = ::OpenAPI::fromJsonValue(m_minimum, json[QString("minimum")]);
    m_minimum_isSet = !json[QString("minimum")].isNull() && m_minimum_isValid;
}

QString OAIAcceptedGuaranteeTypes::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAcceptedGuaranteeTypes::asJsonObject() const {
    QJsonObject obj;
    if (m_accepted.size() > 0) {
        obj.insert(QString("accepted"), ::OpenAPI::toJsonValue(m_accepted));
    }
    if (m_minimum_isSet) {
        obj.insert(QString("minimum"), ::OpenAPI::toJsonValue(m_minimum));
    }
    return obj;
}

QList<QString> OAIAcceptedGuaranteeTypes::getAccepted() const {
    return m_accepted;
}
void OAIAcceptedGuaranteeTypes::setAccepted(const QList<QString> &accepted) {
    m_accepted = accepted;
    m_accepted_isSet = true;
}

bool OAIAcceptedGuaranteeTypes::is_accepted_Set() const{
    return m_accepted_isSet;
}

bool OAIAcceptedGuaranteeTypes::is_accepted_Valid() const{
    return m_accepted_isValid;
}

QString OAIAcceptedGuaranteeTypes::getMinimum() const {
    return m_minimum;
}
void OAIAcceptedGuaranteeTypes::setMinimum(const QString &minimum) {
    m_minimum = minimum;
    m_minimum_isSet = true;
}

bool OAIAcceptedGuaranteeTypes::is_minimum_Set() const{
    return m_minimum_isSet;
}

bool OAIAcceptedGuaranteeTypes::is_minimum_Valid() const{
    return m_minimum_isValid;
}

bool OAIAcceptedGuaranteeTypes::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_accepted.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_minimum_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAcceptedGuaranteeTypes::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
