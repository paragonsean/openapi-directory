/**
 * hetras Booking API Version 0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBookingListReservationItem.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBookingListReservationItem::OAIBookingListReservationItem(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBookingListReservationItem::OAIBookingListReservationItem() {
    this->initializeModel();
}

OAIBookingListReservationItem::~OAIBookingListReservationItem() {}

void OAIBookingListReservationItem::initializeModel() {

    m__links_isSet = false;
    m__links_isValid = false;

    m_adults_isSet = false;
    m_adults_isValid = false;

    m_arrival_date_isSet = false;
    m_arrival_date_isValid = false;

    m_balance_isSet = false;
    m_balance_isValid = false;

    m_block_code_isSet = false;
    m_block_code_isValid = false;

    m_cancellation_id_isSet = false;
    m_cancellation_id_isValid = false;

    m_channel_code_isSet = false;
    m_channel_code_isValid = false;

    m_companies_isSet = false;
    m_companies_isValid = false;

    m_created_isSet = false;
    m_created_isValid = false;

    m_customers_isSet = false;
    m_customers_isValid = false;

    m_departure_date_isSet = false;
    m_departure_date_isValid = false;

    m_external_id_isSet = false;
    m_external_id_isValid = false;

    m_hotel_isSet = false;
    m_hotel_isValid = false;

    m_labels_isSet = false;
    m_labels_isValid = false;

    m_market_code_isSet = false;
    m_market_code_isValid = false;

    m_rate_plan_isSet = false;
    m_rate_plan_isValid = false;

    m_reservation_number_isSet = false;
    m_reservation_number_isValid = false;

    m_reservation_status_isSet = false;
    m_reservation_status_isValid = false;

    m_room_isSet = false;
    m_room_isValid = false;

    m_rooms_isSet = false;
    m_rooms_isValid = false;

    m_subchannel_code_isSet = false;
    m_subchannel_code_isValid = false;

    m_updated_isSet = false;
    m_updated_isValid = false;
}

void OAIBookingListReservationItem::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBookingListReservationItem::fromJsonObject(QJsonObject json) {

    m__links_isValid = ::OpenAPI::fromJsonValue(m__links, json[QString("_links")]);
    m__links_isSet = !json[QString("_links")].isNull() && m__links_isValid;

    m_adults_isValid = ::OpenAPI::fromJsonValue(m_adults, json[QString("adults")]);
    m_adults_isSet = !json[QString("adults")].isNull() && m_adults_isValid;

    m_arrival_date_isValid = ::OpenAPI::fromJsonValue(m_arrival_date, json[QString("arrival_date")]);
    m_arrival_date_isSet = !json[QString("arrival_date")].isNull() && m_arrival_date_isValid;

    m_balance_isValid = ::OpenAPI::fromJsonValue(m_balance, json[QString("balance")]);
    m_balance_isSet = !json[QString("balance")].isNull() && m_balance_isValid;

    m_block_code_isValid = ::OpenAPI::fromJsonValue(m_block_code, json[QString("block_code")]);
    m_block_code_isSet = !json[QString("block_code")].isNull() && m_block_code_isValid;

    m_cancellation_id_isValid = ::OpenAPI::fromJsonValue(m_cancellation_id, json[QString("cancellation_id")]);
    m_cancellation_id_isSet = !json[QString("cancellation_id")].isNull() && m_cancellation_id_isValid;

    m_channel_code_isValid = ::OpenAPI::fromJsonValue(m_channel_code, json[QString("channel_code")]);
    m_channel_code_isSet = !json[QString("channel_code")].isNull() && m_channel_code_isValid;

    m_companies_isValid = ::OpenAPI::fromJsonValue(m_companies, json[QString("companies")]);
    m_companies_isSet = !json[QString("companies")].isNull() && m_companies_isValid;

    m_created_isValid = ::OpenAPI::fromJsonValue(m_created, json[QString("created")]);
    m_created_isSet = !json[QString("created")].isNull() && m_created_isValid;

    m_customers_isValid = ::OpenAPI::fromJsonValue(m_customers, json[QString("customers")]);
    m_customers_isSet = !json[QString("customers")].isNull() && m_customers_isValid;

    m_departure_date_isValid = ::OpenAPI::fromJsonValue(m_departure_date, json[QString("departure_date")]);
    m_departure_date_isSet = !json[QString("departure_date")].isNull() && m_departure_date_isValid;

    m_external_id_isValid = ::OpenAPI::fromJsonValue(m_external_id, json[QString("external_id")]);
    m_external_id_isSet = !json[QString("external_id")].isNull() && m_external_id_isValid;

    m_hotel_isValid = ::OpenAPI::fromJsonValue(m_hotel, json[QString("hotel")]);
    m_hotel_isSet = !json[QString("hotel")].isNull() && m_hotel_isValid;

    m_labels_isValid = ::OpenAPI::fromJsonValue(m_labels, json[QString("labels")]);
    m_labels_isSet = !json[QString("labels")].isNull() && m_labels_isValid;

    m_market_code_isValid = ::OpenAPI::fromJsonValue(m_market_code, json[QString("market_code")]);
    m_market_code_isSet = !json[QString("market_code")].isNull() && m_market_code_isValid;

    m_rate_plan_isValid = ::OpenAPI::fromJsonValue(m_rate_plan, json[QString("rate_plan")]);
    m_rate_plan_isSet = !json[QString("rate_plan")].isNull() && m_rate_plan_isValid;

    m_reservation_number_isValid = ::OpenAPI::fromJsonValue(m_reservation_number, json[QString("reservation_number")]);
    m_reservation_number_isSet = !json[QString("reservation_number")].isNull() && m_reservation_number_isValid;

    m_reservation_status_isValid = ::OpenAPI::fromJsonValue(m_reservation_status, json[QString("reservation_status")]);
    m_reservation_status_isSet = !json[QString("reservation_status")].isNull() && m_reservation_status_isValid;

    m_room_isValid = ::OpenAPI::fromJsonValue(m_room, json[QString("room")]);
    m_room_isSet = !json[QString("room")].isNull() && m_room_isValid;

    m_rooms_isValid = ::OpenAPI::fromJsonValue(m_rooms, json[QString("rooms")]);
    m_rooms_isSet = !json[QString("rooms")].isNull() && m_rooms_isValid;

    m_subchannel_code_isValid = ::OpenAPI::fromJsonValue(m_subchannel_code, json[QString("subchannel_code")]);
    m_subchannel_code_isSet = !json[QString("subchannel_code")].isNull() && m_subchannel_code_isValid;

    m_updated_isValid = ::OpenAPI::fromJsonValue(m_updated, json[QString("updated")]);
    m_updated_isSet = !json[QString("updated")].isNull() && m_updated_isValid;
}

QString OAIBookingListReservationItem::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBookingListReservationItem::asJsonObject() const {
    QJsonObject obj;
    if (m__links.size() > 0) {
        obj.insert(QString("_links"), ::OpenAPI::toJsonValue(m__links));
    }
    if (m_adults_isSet) {
        obj.insert(QString("adults"), ::OpenAPI::toJsonValue(m_adults));
    }
    if (m_arrival_date_isSet) {
        obj.insert(QString("arrival_date"), ::OpenAPI::toJsonValue(m_arrival_date));
    }
    if (m_balance_isSet) {
        obj.insert(QString("balance"), ::OpenAPI::toJsonValue(m_balance));
    }
    if (m_block_code_isSet) {
        obj.insert(QString("block_code"), ::OpenAPI::toJsonValue(m_block_code));
    }
    if (m_cancellation_id_isSet) {
        obj.insert(QString("cancellation_id"), ::OpenAPI::toJsonValue(m_cancellation_id));
    }
    if (m_channel_code_isSet) {
        obj.insert(QString("channel_code"), ::OpenAPI::toJsonValue(m_channel_code));
    }
    if (m_companies.isSet()) {
        obj.insert(QString("companies"), ::OpenAPI::toJsonValue(m_companies));
    }
    if (m_created_isSet) {
        obj.insert(QString("created"), ::OpenAPI::toJsonValue(m_created));
    }
    if (m_customers.isSet()) {
        obj.insert(QString("customers"), ::OpenAPI::toJsonValue(m_customers));
    }
    if (m_departure_date_isSet) {
        obj.insert(QString("departure_date"), ::OpenAPI::toJsonValue(m_departure_date));
    }
    if (m_external_id_isSet) {
        obj.insert(QString("external_id"), ::OpenAPI::toJsonValue(m_external_id));
    }
    if (m_hotel.isSet()) {
        obj.insert(QString("hotel"), ::OpenAPI::toJsonValue(m_hotel));
    }
    if (m_labels.size() > 0) {
        obj.insert(QString("labels"), ::OpenAPI::toJsonValue(m_labels));
    }
    if (m_market_code_isSet) {
        obj.insert(QString("market_code"), ::OpenAPI::toJsonValue(m_market_code));
    }
    if (m_rate_plan.isSet()) {
        obj.insert(QString("rate_plan"), ::OpenAPI::toJsonValue(m_rate_plan));
    }
    if (m_reservation_number_isSet) {
        obj.insert(QString("reservation_number"), ::OpenAPI::toJsonValue(m_reservation_number));
    }
    if (m_reservation_status_isSet) {
        obj.insert(QString("reservation_status"), ::OpenAPI::toJsonValue(m_reservation_status));
    }
    if (m_room.isSet()) {
        obj.insert(QString("room"), ::OpenAPI::toJsonValue(m_room));
    }
    if (m_rooms_isSet) {
        obj.insert(QString("rooms"), ::OpenAPI::toJsonValue(m_rooms));
    }
    if (m_subchannel_code_isSet) {
        obj.insert(QString("subchannel_code"), ::OpenAPI::toJsonValue(m_subchannel_code));
    }
    if (m_updated_isSet) {
        obj.insert(QString("updated"), ::OpenAPI::toJsonValue(m_updated));
    }
    return obj;
}

QMap<QString, OAILinkObject> OAIBookingListReservationItem::getLinks() const {
    return m__links;
}
void OAIBookingListReservationItem::setLinks(const QMap<QString, OAILinkObject> &_links) {
    m__links = _links;
    m__links_isSet = true;
}

bool OAIBookingListReservationItem::is__links_Set() const{
    return m__links_isSet;
}

bool OAIBookingListReservationItem::is__links_Valid() const{
    return m__links_isValid;
}

qint32 OAIBookingListReservationItem::getAdults() const {
    return m_adults;
}
void OAIBookingListReservationItem::setAdults(const qint32 &adults) {
    m_adults = adults;
    m_adults_isSet = true;
}

bool OAIBookingListReservationItem::is_adults_Set() const{
    return m_adults_isSet;
}

bool OAIBookingListReservationItem::is_adults_Valid() const{
    return m_adults_isValid;
}

QDateTime OAIBookingListReservationItem::getArrivalDate() const {
    return m_arrival_date;
}
void OAIBookingListReservationItem::setArrivalDate(const QDateTime &arrival_date) {
    m_arrival_date = arrival_date;
    m_arrival_date_isSet = true;
}

bool OAIBookingListReservationItem::is_arrival_date_Set() const{
    return m_arrival_date_isSet;
}

bool OAIBookingListReservationItem::is_arrival_date_Valid() const{
    return m_arrival_date_isValid;
}

double OAIBookingListReservationItem::getBalance() const {
    return m_balance;
}
void OAIBookingListReservationItem::setBalance(const double &balance) {
    m_balance = balance;
    m_balance_isSet = true;
}

bool OAIBookingListReservationItem::is_balance_Set() const{
    return m_balance_isSet;
}

bool OAIBookingListReservationItem::is_balance_Valid() const{
    return m_balance_isValid;
}

QString OAIBookingListReservationItem::getBlockCode() const {
    return m_block_code;
}
void OAIBookingListReservationItem::setBlockCode(const QString &block_code) {
    m_block_code = block_code;
    m_block_code_isSet = true;
}

bool OAIBookingListReservationItem::is_block_code_Set() const{
    return m_block_code_isSet;
}

bool OAIBookingListReservationItem::is_block_code_Valid() const{
    return m_block_code_isValid;
}

QString OAIBookingListReservationItem::getCancellationId() const {
    return m_cancellation_id;
}
void OAIBookingListReservationItem::setCancellationId(const QString &cancellation_id) {
    m_cancellation_id = cancellation_id;
    m_cancellation_id_isSet = true;
}

bool OAIBookingListReservationItem::is_cancellation_id_Set() const{
    return m_cancellation_id_isSet;
}

bool OAIBookingListReservationItem::is_cancellation_id_Valid() const{
    return m_cancellation_id_isValid;
}

QString OAIBookingListReservationItem::getChannelCode() const {
    return m_channel_code;
}
void OAIBookingListReservationItem::setChannelCode(const QString &channel_code) {
    m_channel_code = channel_code;
    m_channel_code_isSet = true;
}

bool OAIBookingListReservationItem::is_channel_code_Set() const{
    return m_channel_code_isSet;
}

bool OAIBookingListReservationItem::is_channel_code_Valid() const{
    return m_channel_code_isValid;
}

OAICompaniesInfo OAIBookingListReservationItem::getCompanies() const {
    return m_companies;
}
void OAIBookingListReservationItem::setCompanies(const OAICompaniesInfo &companies) {
    m_companies = companies;
    m_companies_isSet = true;
}

bool OAIBookingListReservationItem::is_companies_Set() const{
    return m_companies_isSet;
}

bool OAIBookingListReservationItem::is_companies_Valid() const{
    return m_companies_isValid;
}

QDateTime OAIBookingListReservationItem::getCreated() const {
    return m_created;
}
void OAIBookingListReservationItem::setCreated(const QDateTime &created) {
    m_created = created;
    m_created_isSet = true;
}

bool OAIBookingListReservationItem::is_created_Set() const{
    return m_created_isSet;
}

bool OAIBookingListReservationItem::is_created_Valid() const{
    return m_created_isValid;
}

OAICustomersInfo OAIBookingListReservationItem::getCustomers() const {
    return m_customers;
}
void OAIBookingListReservationItem::setCustomers(const OAICustomersInfo &customers) {
    m_customers = customers;
    m_customers_isSet = true;
}

bool OAIBookingListReservationItem::is_customers_Set() const{
    return m_customers_isSet;
}

bool OAIBookingListReservationItem::is_customers_Valid() const{
    return m_customers_isValid;
}

QDateTime OAIBookingListReservationItem::getDepartureDate() const {
    return m_departure_date;
}
void OAIBookingListReservationItem::setDepartureDate(const QDateTime &departure_date) {
    m_departure_date = departure_date;
    m_departure_date_isSet = true;
}

bool OAIBookingListReservationItem::is_departure_date_Set() const{
    return m_departure_date_isSet;
}

bool OAIBookingListReservationItem::is_departure_date_Valid() const{
    return m_departure_date_isValid;
}

QString OAIBookingListReservationItem::getExternalId() const {
    return m_external_id;
}
void OAIBookingListReservationItem::setExternalId(const QString &external_id) {
    m_external_id = external_id;
    m_external_id_isSet = true;
}

bool OAIBookingListReservationItem::is_external_id_Set() const{
    return m_external_id_isSet;
}

bool OAIBookingListReservationItem::is_external_id_Valid() const{
    return m_external_id_isValid;
}

OAIHotelInfo OAIBookingListReservationItem::getHotel() const {
    return m_hotel;
}
void OAIBookingListReservationItem::setHotel(const OAIHotelInfo &hotel) {
    m_hotel = hotel;
    m_hotel_isSet = true;
}

bool OAIBookingListReservationItem::is_hotel_Set() const{
    return m_hotel_isSet;
}

bool OAIBookingListReservationItem::is_hotel_Valid() const{
    return m_hotel_isValid;
}

QList<QString> OAIBookingListReservationItem::getLabels() const {
    return m_labels;
}
void OAIBookingListReservationItem::setLabels(const QList<QString> &labels) {
    m_labels = labels;
    m_labels_isSet = true;
}

bool OAIBookingListReservationItem::is_labels_Set() const{
    return m_labels_isSet;
}

bool OAIBookingListReservationItem::is_labels_Valid() const{
    return m_labels_isValid;
}

QString OAIBookingListReservationItem::getMarketCode() const {
    return m_market_code;
}
void OAIBookingListReservationItem::setMarketCode(const QString &market_code) {
    m_market_code = market_code;
    m_market_code_isSet = true;
}

bool OAIBookingListReservationItem::is_market_code_Set() const{
    return m_market_code_isSet;
}

bool OAIBookingListReservationItem::is_market_code_Valid() const{
    return m_market_code_isValid;
}

OAIRatePlan OAIBookingListReservationItem::getRatePlan() const {
    return m_rate_plan;
}
void OAIBookingListReservationItem::setRatePlan(const OAIRatePlan &rate_plan) {
    m_rate_plan = rate_plan;
    m_rate_plan_isSet = true;
}

bool OAIBookingListReservationItem::is_rate_plan_Set() const{
    return m_rate_plan_isSet;
}

bool OAIBookingListReservationItem::is_rate_plan_Valid() const{
    return m_rate_plan_isValid;
}

qint32 OAIBookingListReservationItem::getReservationNumber() const {
    return m_reservation_number;
}
void OAIBookingListReservationItem::setReservationNumber(const qint32 &reservation_number) {
    m_reservation_number = reservation_number;
    m_reservation_number_isSet = true;
}

bool OAIBookingListReservationItem::is_reservation_number_Set() const{
    return m_reservation_number_isSet;
}

bool OAIBookingListReservationItem::is_reservation_number_Valid() const{
    return m_reservation_number_isValid;
}

QString OAIBookingListReservationItem::getReservationStatus() const {
    return m_reservation_status;
}
void OAIBookingListReservationItem::setReservationStatus(const QString &reservation_status) {
    m_reservation_status = reservation_status;
    m_reservation_status_isSet = true;
}

bool OAIBookingListReservationItem::is_reservation_status_Set() const{
    return m_reservation_status_isSet;
}

bool OAIBookingListReservationItem::is_reservation_status_Valid() const{
    return m_reservation_status_isValid;
}

OAIRoomInfo OAIBookingListReservationItem::getRoom() const {
    return m_room;
}
void OAIBookingListReservationItem::setRoom(const OAIRoomInfo &room) {
    m_room = room;
    m_room_isSet = true;
}

bool OAIBookingListReservationItem::is_room_Set() const{
    return m_room_isSet;
}

bool OAIBookingListReservationItem::is_room_Valid() const{
    return m_room_isValid;
}

qint32 OAIBookingListReservationItem::getRooms() const {
    return m_rooms;
}
void OAIBookingListReservationItem::setRooms(const qint32 &rooms) {
    m_rooms = rooms;
    m_rooms_isSet = true;
}

bool OAIBookingListReservationItem::is_rooms_Set() const{
    return m_rooms_isSet;
}

bool OAIBookingListReservationItem::is_rooms_Valid() const{
    return m_rooms_isValid;
}

QString OAIBookingListReservationItem::getSubchannelCode() const {
    return m_subchannel_code;
}
void OAIBookingListReservationItem::setSubchannelCode(const QString &subchannel_code) {
    m_subchannel_code = subchannel_code;
    m_subchannel_code_isSet = true;
}

bool OAIBookingListReservationItem::is_subchannel_code_Set() const{
    return m_subchannel_code_isSet;
}

bool OAIBookingListReservationItem::is_subchannel_code_Valid() const{
    return m_subchannel_code_isValid;
}

QDateTime OAIBookingListReservationItem::getUpdated() const {
    return m_updated;
}
void OAIBookingListReservationItem::setUpdated(const QDateTime &updated) {
    m_updated = updated;
    m_updated_isSet = true;
}

bool OAIBookingListReservationItem::is_updated_Set() const{
    return m_updated_isSet;
}

bool OAIBookingListReservationItem::is_updated_Valid() const{
    return m_updated_isValid;
}

bool OAIBookingListReservationItem::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m__links.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_adults_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_arrival_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_balance_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_block_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_cancellation_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_channel_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_companies.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_customers.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_departure_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_external_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_hotel.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_labels.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_market_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_rate_plan.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_reservation_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_reservation_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_room.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_rooms_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_subchannel_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_updated_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBookingListReservationItem::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
