/**
 * hetras Booking API Version 0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDailyRatesResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDailyRatesResponse::OAIDailyRatesResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDailyRatesResponse::OAIDailyRatesResponse() {
    this->initializeModel();
}

OAIDailyRatesResponse::~OAIDailyRatesResponse() {}

void OAIDailyRatesResponse::initializeModel() {

    m__count_isSet = false;
    m__count_isValid = false;

    m__links_isSet = false;
    m__links_isValid = false;

    m_daily_rates_isSet = false;
    m_daily_rates_isValid = false;

    m_hotel_isSet = false;
    m_hotel_isValid = false;

    m_policies_isSet = false;
    m_policies_isValid = false;

    m_rateplans_isSet = false;
    m_rateplans_isValid = false;

    m_room_types_isSet = false;
    m_room_types_isValid = false;
}

void OAIDailyRatesResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDailyRatesResponse::fromJsonObject(QJsonObject json) {

    m__count_isValid = ::OpenAPI::fromJsonValue(m__count, json[QString("_count")]);
    m__count_isSet = !json[QString("_count")].isNull() && m__count_isValid;

    m__links_isValid = ::OpenAPI::fromJsonValue(m__links, json[QString("_links")]);
    m__links_isSet = !json[QString("_links")].isNull() && m__links_isValid;

    m_daily_rates_isValid = ::OpenAPI::fromJsonValue(m_daily_rates, json[QString("daily_rates")]);
    m_daily_rates_isSet = !json[QString("daily_rates")].isNull() && m_daily_rates_isValid;

    m_hotel_isValid = ::OpenAPI::fromJsonValue(m_hotel, json[QString("hotel")]);
    m_hotel_isSet = !json[QString("hotel")].isNull() && m_hotel_isValid;

    m_policies_isValid = ::OpenAPI::fromJsonValue(m_policies, json[QString("policies")]);
    m_policies_isSet = !json[QString("policies")].isNull() && m_policies_isValid;

    m_rateplans_isValid = ::OpenAPI::fromJsonValue(m_rateplans, json[QString("rateplans")]);
    m_rateplans_isSet = !json[QString("rateplans")].isNull() && m_rateplans_isValid;

    m_room_types_isValid = ::OpenAPI::fromJsonValue(m_room_types, json[QString("room_types")]);
    m_room_types_isSet = !json[QString("room_types")].isNull() && m_room_types_isValid;
}

QString OAIDailyRatesResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDailyRatesResponse::asJsonObject() const {
    QJsonObject obj;
    if (m__count_isSet) {
        obj.insert(QString("_count"), ::OpenAPI::toJsonValue(m__count));
    }
    if (m__links.size() > 0) {
        obj.insert(QString("_links"), ::OpenAPI::toJsonValue(m__links));
    }
    if (m_daily_rates.size() > 0) {
        obj.insert(QString("daily_rates"), ::OpenAPI::toJsonValue(m_daily_rates));
    }
    if (m_hotel.isSet()) {
        obj.insert(QString("hotel"), ::OpenAPI::toJsonValue(m_hotel));
    }
    if (m_policies.isSet()) {
        obj.insert(QString("policies"), ::OpenAPI::toJsonValue(m_policies));
    }
    if (m_rateplans.size() > 0) {
        obj.insert(QString("rateplans"), ::OpenAPI::toJsonValue(m_rateplans));
    }
    if (m_room_types.size() > 0) {
        obj.insert(QString("room_types"), ::OpenAPI::toJsonValue(m_room_types));
    }
    return obj;
}

qint32 OAIDailyRatesResponse::getCount() const {
    return m__count;
}
void OAIDailyRatesResponse::setCount(const qint32 &_count) {
    m__count = _count;
    m__count_isSet = true;
}

bool OAIDailyRatesResponse::is__count_Set() const{
    return m__count_isSet;
}

bool OAIDailyRatesResponse::is__count_Valid() const{
    return m__count_isValid;
}

QMap<QString, OAILinkObject> OAIDailyRatesResponse::getLinks() const {
    return m__links;
}
void OAIDailyRatesResponse::setLinks(const QMap<QString, OAILinkObject> &_links) {
    m__links = _links;
    m__links_isSet = true;
}

bool OAIDailyRatesResponse::is__links_Set() const{
    return m__links_isSet;
}

bool OAIDailyRatesResponse::is__links_Valid() const{
    return m__links_isValid;
}

QList<OAIDailyCalendarRate> OAIDailyRatesResponse::getDailyRates() const {
    return m_daily_rates;
}
void OAIDailyRatesResponse::setDailyRates(const QList<OAIDailyCalendarRate> &daily_rates) {
    m_daily_rates = daily_rates;
    m_daily_rates_isSet = true;
}

bool OAIDailyRatesResponse::is_daily_rates_Set() const{
    return m_daily_rates_isSet;
}

bool OAIDailyRatesResponse::is_daily_rates_Valid() const{
    return m_daily_rates_isValid;
}

OAIDailyRateHotel OAIDailyRatesResponse::getHotel() const {
    return m_hotel;
}
void OAIDailyRatesResponse::setHotel(const OAIDailyRateHotel &hotel) {
    m_hotel = hotel;
    m_hotel_isSet = true;
}

bool OAIDailyRatesResponse::is_hotel_Set() const{
    return m_hotel_isSet;
}

bool OAIDailyRatesResponse::is_hotel_Valid() const{
    return m_hotel_isValid;
}

OAIPolicies OAIDailyRatesResponse::getPolicies() const {
    return m_policies;
}
void OAIDailyRatesResponse::setPolicies(const OAIPolicies &policies) {
    m_policies = policies;
    m_policies_isSet = true;
}

bool OAIDailyRatesResponse::is_policies_Set() const{
    return m_policies_isSet;
}

bool OAIDailyRatesResponse::is_policies_Valid() const{
    return m_policies_isValid;
}

QList<OAIDailyRatePlan> OAIDailyRatesResponse::getRateplans() const {
    return m_rateplans;
}
void OAIDailyRatesResponse::setRateplans(const QList<OAIDailyRatePlan> &rateplans) {
    m_rateplans = rateplans;
    m_rateplans_isSet = true;
}

bool OAIDailyRatesResponse::is_rateplans_Set() const{
    return m_rateplans_isSet;
}

bool OAIDailyRatesResponse::is_rateplans_Valid() const{
    return m_rateplans_isValid;
}

QList<OAIRoomType> OAIDailyRatesResponse::getRoomTypes() const {
    return m_room_types;
}
void OAIDailyRatesResponse::setRoomTypes(const QList<OAIRoomType> &room_types) {
    m_room_types = room_types;
    m_room_types_isSet = true;
}

bool OAIDailyRatesResponse::is_room_types_Set() const{
    return m_room_types_isSet;
}

bool OAIDailyRatesResponse::is_room_types_Valid() const{
    return m_room_types_isValid;
}

bool OAIDailyRatesResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m__count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m__links.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_daily_rates.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_hotel.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_policies.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_rateplans.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_room_types.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDailyRatesResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
