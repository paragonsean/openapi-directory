/**
 * hetras Booking API Version 0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAssignRoomResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAssignRoomResponse::OAIAssignRoomResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAssignRoomResponse::OAIAssignRoomResponse() {
    this->initializeModel();
}

OAIAssignRoomResponse::~OAIAssignRoomResponse() {}

void OAIAssignRoomResponse::initializeModel() {

    m__warnings_isSet = false;
    m__warnings_isValid = false;

    m_room_number_isSet = false;
    m_room_number_isValid = false;
}

void OAIAssignRoomResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAssignRoomResponse::fromJsonObject(QJsonObject json) {

    m__warnings_isValid = ::OpenAPI::fromJsonValue(m__warnings, json[QString("_warnings")]);
    m__warnings_isSet = !json[QString("_warnings")].isNull() && m__warnings_isValid;

    m_room_number_isValid = ::OpenAPI::fromJsonValue(m_room_number, json[QString("room_number")]);
    m_room_number_isSet = !json[QString("room_number")].isNull() && m_room_number_isValid;
}

QString OAIAssignRoomResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAssignRoomResponse::asJsonObject() const {
    QJsonObject obj;
    if (m__warnings.size() > 0) {
        obj.insert(QString("_warnings"), ::OpenAPI::toJsonValue(m__warnings));
    }
    if (m_room_number_isSet) {
        obj.insert(QString("room_number"), ::OpenAPI::toJsonValue(m_room_number));
    }
    return obj;
}

QList<QString> OAIAssignRoomResponse::getWarnings() const {
    return m__warnings;
}
void OAIAssignRoomResponse::setWarnings(const QList<QString> &_warnings) {
    m__warnings = _warnings;
    m__warnings_isSet = true;
}

bool OAIAssignRoomResponse::is__warnings_Set() const{
    return m__warnings_isSet;
}

bool OAIAssignRoomResponse::is__warnings_Valid() const{
    return m__warnings_isValid;
}

QString OAIAssignRoomResponse::getRoomNumber() const {
    return m_room_number;
}
void OAIAssignRoomResponse::setRoomNumber(const QString &room_number) {
    m_room_number = room_number;
    m_room_number_isSet = true;
}

bool OAIAssignRoomResponse::is_room_number_Set() const{
    return m_room_number_isSet;
}

bool OAIAssignRoomResponse::is_room_number_Valid() const{
    return m_room_number_isValid;
}

bool OAIAssignRoomResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m__warnings.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_room_number_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAssignRoomResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
