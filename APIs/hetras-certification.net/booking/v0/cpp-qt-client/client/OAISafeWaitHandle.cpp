/**
 * hetras Booking API Version 0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISafeWaitHandle.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISafeWaitHandle::OAISafeWaitHandle(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISafeWaitHandle::OAISafeWaitHandle() {
    this->initializeModel();
}

OAISafeWaitHandle::~OAISafeWaitHandle() {}

void OAISafeWaitHandle::initializeModel() {

    m_is_closed_isSet = false;
    m_is_closed_isValid = false;

    m_is_invalid_isSet = false;
    m_is_invalid_isValid = false;
}

void OAISafeWaitHandle::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISafeWaitHandle::fromJsonObject(QJsonObject json) {

    m_is_closed_isValid = ::OpenAPI::fromJsonValue(m_is_closed, json[QString("IsClosed")]);
    m_is_closed_isSet = !json[QString("IsClosed")].isNull() && m_is_closed_isValid;

    m_is_invalid_isValid = ::OpenAPI::fromJsonValue(m_is_invalid, json[QString("IsInvalid")]);
    m_is_invalid_isSet = !json[QString("IsInvalid")].isNull() && m_is_invalid_isValid;
}

QString OAISafeWaitHandle::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISafeWaitHandle::asJsonObject() const {
    QJsonObject obj;
    if (m_is_closed_isSet) {
        obj.insert(QString("IsClosed"), ::OpenAPI::toJsonValue(m_is_closed));
    }
    if (m_is_invalid_isSet) {
        obj.insert(QString("IsInvalid"), ::OpenAPI::toJsonValue(m_is_invalid));
    }
    return obj;
}

bool OAISafeWaitHandle::isIsClosed() const {
    return m_is_closed;
}
void OAISafeWaitHandle::setIsClosed(const bool &is_closed) {
    m_is_closed = is_closed;
    m_is_closed_isSet = true;
}

bool OAISafeWaitHandle::is_is_closed_Set() const{
    return m_is_closed_isSet;
}

bool OAISafeWaitHandle::is_is_closed_Valid() const{
    return m_is_closed_isValid;
}

bool OAISafeWaitHandle::isIsInvalid() const {
    return m_is_invalid;
}
void OAISafeWaitHandle::setIsInvalid(const bool &is_invalid) {
    m_is_invalid = is_invalid;
    m_is_invalid_isSet = true;
}

bool OAISafeWaitHandle::is_is_invalid_Set() const{
    return m_is_invalid_isSet;
}

bool OAISafeWaitHandle::is_is_invalid_Valid() const{
    return m_is_invalid_isValid;
}

bool OAISafeWaitHandle::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_is_closed_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_invalid_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISafeWaitHandle::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
