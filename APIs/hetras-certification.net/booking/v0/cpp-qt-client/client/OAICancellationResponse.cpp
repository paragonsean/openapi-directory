/**
 * hetras Booking API Version 0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICancellationResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICancellationResponse::OAICancellationResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICancellationResponse::OAICancellationResponse() {
    this->initializeModel();
}

OAICancellationResponse::~OAICancellationResponse() {}

void OAICancellationResponse::initializeModel() {

    m__warnings_isSet = false;
    m__warnings_isValid = false;

    m_balance_isSet = false;
    m_balance_isValid = false;

    m_cancellation_fee_isSet = false;
    m_cancellation_fee_isValid = false;

    m_cancellation_id_isSet = false;
    m_cancellation_id_isValid = false;
}

void OAICancellationResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICancellationResponse::fromJsonObject(QJsonObject json) {

    m__warnings_isValid = ::OpenAPI::fromJsonValue(m__warnings, json[QString("_warnings")]);
    m__warnings_isSet = !json[QString("_warnings")].isNull() && m__warnings_isValid;

    m_balance_isValid = ::OpenAPI::fromJsonValue(m_balance, json[QString("balance")]);
    m_balance_isSet = !json[QString("balance")].isNull() && m_balance_isValid;

    m_cancellation_fee_isValid = ::OpenAPI::fromJsonValue(m_cancellation_fee, json[QString("cancellation_fee")]);
    m_cancellation_fee_isSet = !json[QString("cancellation_fee")].isNull() && m_cancellation_fee_isValid;

    m_cancellation_id_isValid = ::OpenAPI::fromJsonValue(m_cancellation_id, json[QString("cancellation_id")]);
    m_cancellation_id_isSet = !json[QString("cancellation_id")].isNull() && m_cancellation_id_isValid;
}

QString OAICancellationResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICancellationResponse::asJsonObject() const {
    QJsonObject obj;
    if (m__warnings.size() > 0) {
        obj.insert(QString("_warnings"), ::OpenAPI::toJsonValue(m__warnings));
    }
    if (m_balance_isSet) {
        obj.insert(QString("balance"), ::OpenAPI::toJsonValue(m_balance));
    }
    if (m_cancellation_fee_isSet) {
        obj.insert(QString("cancellation_fee"), ::OpenAPI::toJsonValue(m_cancellation_fee));
    }
    if (m_cancellation_id_isSet) {
        obj.insert(QString("cancellation_id"), ::OpenAPI::toJsonValue(m_cancellation_id));
    }
    return obj;
}

QList<QString> OAICancellationResponse::getWarnings() const {
    return m__warnings;
}
void OAICancellationResponse::setWarnings(const QList<QString> &_warnings) {
    m__warnings = _warnings;
    m__warnings_isSet = true;
}

bool OAICancellationResponse::is__warnings_Set() const{
    return m__warnings_isSet;
}

bool OAICancellationResponse::is__warnings_Valid() const{
    return m__warnings_isValid;
}

double OAICancellationResponse::getBalance() const {
    return m_balance;
}
void OAICancellationResponse::setBalance(const double &balance) {
    m_balance = balance;
    m_balance_isSet = true;
}

bool OAICancellationResponse::is_balance_Set() const{
    return m_balance_isSet;
}

bool OAICancellationResponse::is_balance_Valid() const{
    return m_balance_isValid;
}

double OAICancellationResponse::getCancellationFee() const {
    return m_cancellation_fee;
}
void OAICancellationResponse::setCancellationFee(const double &cancellation_fee) {
    m_cancellation_fee = cancellation_fee;
    m_cancellation_fee_isSet = true;
}

bool OAICancellationResponse::is_cancellation_fee_Set() const{
    return m_cancellation_fee_isSet;
}

bool OAICancellationResponse::is_cancellation_fee_Valid() const{
    return m_cancellation_fee_isValid;
}

QString OAICancellationResponse::getCancellationId() const {
    return m_cancellation_id;
}
void OAICancellationResponse::setCancellationId(const QString &cancellation_id) {
    m_cancellation_id = cancellation_id;
    m_cancellation_id_isSet = true;
}

bool OAICancellationResponse::is_cancellation_id_Set() const{
    return m_cancellation_id_isSet;
}

bool OAICancellationResponse::is_cancellation_id_Valid() const{
    return m_cancellation_id_isValid;
}

bool OAICancellationResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m__warnings.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_balance_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_cancellation_fee_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_cancellation_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICancellationResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
