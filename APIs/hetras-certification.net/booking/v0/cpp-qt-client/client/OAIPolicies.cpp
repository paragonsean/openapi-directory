/**
 * hetras Booking API Version 0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPolicies.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPolicies::OAIPolicies(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPolicies::OAIPolicies() {
    this->initializeModel();
}

OAIPolicies::~OAIPolicies() {}

void OAIPolicies::initializeModel() {

    m_cancellation_policies_isSet = false;
    m_cancellation_policies_isValid = false;

    m_guarantee_types_isSet = false;
    m_guarantee_types_isValid = false;

    m_noshow_policies_isSet = false;
    m_noshow_policies_isValid = false;
}

void OAIPolicies::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPolicies::fromJsonObject(QJsonObject json) {

    m_cancellation_policies_isValid = ::OpenAPI::fromJsonValue(m_cancellation_policies, json[QString("cancellation_policies")]);
    m_cancellation_policies_isSet = !json[QString("cancellation_policies")].isNull() && m_cancellation_policies_isValid;

    m_guarantee_types_isValid = ::OpenAPI::fromJsonValue(m_guarantee_types, json[QString("guarantee_types")]);
    m_guarantee_types_isSet = !json[QString("guarantee_types")].isNull() && m_guarantee_types_isValid;

    m_noshow_policies_isValid = ::OpenAPI::fromJsonValue(m_noshow_policies, json[QString("noshow_policies")]);
    m_noshow_policies_isSet = !json[QString("noshow_policies")].isNull() && m_noshow_policies_isValid;
}

QString OAIPolicies::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPolicies::asJsonObject() const {
    QJsonObject obj;
    if (m_cancellation_policies.size() > 0) {
        obj.insert(QString("cancellation_policies"), ::OpenAPI::toJsonValue(m_cancellation_policies));
    }
    if (m_guarantee_types.size() > 0) {
        obj.insert(QString("guarantee_types"), ::OpenAPI::toJsonValue(m_guarantee_types));
    }
    if (m_noshow_policies.size() > 0) {
        obj.insert(QString("noshow_policies"), ::OpenAPI::toJsonValue(m_noshow_policies));
    }
    return obj;
}

QList<OAIDailyRateCancellationPolicy> OAIPolicies::getCancellationPolicies() const {
    return m_cancellation_policies;
}
void OAIPolicies::setCancellationPolicies(const QList<OAIDailyRateCancellationPolicy> &cancellation_policies) {
    m_cancellation_policies = cancellation_policies;
    m_cancellation_policies_isSet = true;
}

bool OAIPolicies::is_cancellation_policies_Set() const{
    return m_cancellation_policies_isSet;
}

bool OAIPolicies::is_cancellation_policies_Valid() const{
    return m_cancellation_policies_isValid;
}

QList<OAIGuaranteeTypes> OAIPolicies::getGuaranteeTypes() const {
    return m_guarantee_types;
}
void OAIPolicies::setGuaranteeTypes(const QList<OAIGuaranteeTypes> &guarantee_types) {
    m_guarantee_types = guarantee_types;
    m_guarantee_types_isSet = true;
}

bool OAIPolicies::is_guarantee_types_Set() const{
    return m_guarantee_types_isSet;
}

bool OAIPolicies::is_guarantee_types_Valid() const{
    return m_guarantee_types_isValid;
}

QList<OAIDailyRateNoShowPolicy> OAIPolicies::getNoshowPolicies() const {
    return m_noshow_policies;
}
void OAIPolicies::setNoshowPolicies(const QList<OAIDailyRateNoShowPolicy> &noshow_policies) {
    m_noshow_policies = noshow_policies;
    m_noshow_policies_isSet = true;
}

bool OAIPolicies::is_noshow_policies_Set() const{
    return m_noshow_policies_isSet;
}

bool OAIPolicies::is_noshow_policies_Valid() const{
    return m_noshow_policies_isValid;
}

bool OAIPolicies::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_cancellation_policies.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_guarantee_types.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_noshow_policies.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPolicies::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
