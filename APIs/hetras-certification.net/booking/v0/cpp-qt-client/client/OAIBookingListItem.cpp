/**
 * hetras Booking API Version 0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBookingListItem.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBookingListItem::OAIBookingListItem(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBookingListItem::OAIBookingListItem() {
    this->initializeModel();
}

OAIBookingListItem::~OAIBookingListItem() {}

void OAIBookingListItem::initializeModel() {

    m__links_isSet = false;
    m__links_isValid = false;

    m_confirmation_id_isSet = false;
    m_confirmation_id_isValid = false;

    m_created_isSet = false;
    m_created_isValid = false;

    m_reservations_isSet = false;
    m_reservations_isValid = false;

    m_updated_isSet = false;
    m_updated_isValid = false;
}

void OAIBookingListItem::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBookingListItem::fromJsonObject(QJsonObject json) {

    m__links_isValid = ::OpenAPI::fromJsonValue(m__links, json[QString("_links")]);
    m__links_isSet = !json[QString("_links")].isNull() && m__links_isValid;

    m_confirmation_id_isValid = ::OpenAPI::fromJsonValue(m_confirmation_id, json[QString("confirmation_id")]);
    m_confirmation_id_isSet = !json[QString("confirmation_id")].isNull() && m_confirmation_id_isValid;

    m_created_isValid = ::OpenAPI::fromJsonValue(m_created, json[QString("created")]);
    m_created_isSet = !json[QString("created")].isNull() && m_created_isValid;

    m_reservations_isValid = ::OpenAPI::fromJsonValue(m_reservations, json[QString("reservations")]);
    m_reservations_isSet = !json[QString("reservations")].isNull() && m_reservations_isValid;

    m_updated_isValid = ::OpenAPI::fromJsonValue(m_updated, json[QString("updated")]);
    m_updated_isSet = !json[QString("updated")].isNull() && m_updated_isValid;
}

QString OAIBookingListItem::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBookingListItem::asJsonObject() const {
    QJsonObject obj;
    if (m__links.size() > 0) {
        obj.insert(QString("_links"), ::OpenAPI::toJsonValue(m__links));
    }
    if (m_confirmation_id_isSet) {
        obj.insert(QString("confirmation_id"), ::OpenAPI::toJsonValue(m_confirmation_id));
    }
    if (m_created_isSet) {
        obj.insert(QString("created"), ::OpenAPI::toJsonValue(m_created));
    }
    if (m_reservations.size() > 0) {
        obj.insert(QString("reservations"), ::OpenAPI::toJsonValue(m_reservations));
    }
    if (m_updated_isSet) {
        obj.insert(QString("updated"), ::OpenAPI::toJsonValue(m_updated));
    }
    return obj;
}

QMap<QString, OAILinkObject> OAIBookingListItem::getLinks() const {
    return m__links;
}
void OAIBookingListItem::setLinks(const QMap<QString, OAILinkObject> &_links) {
    m__links = _links;
    m__links_isSet = true;
}

bool OAIBookingListItem::is__links_Set() const{
    return m__links_isSet;
}

bool OAIBookingListItem::is__links_Valid() const{
    return m__links_isValid;
}

QString OAIBookingListItem::getConfirmationId() const {
    return m_confirmation_id;
}
void OAIBookingListItem::setConfirmationId(const QString &confirmation_id) {
    m_confirmation_id = confirmation_id;
    m_confirmation_id_isSet = true;
}

bool OAIBookingListItem::is_confirmation_id_Set() const{
    return m_confirmation_id_isSet;
}

bool OAIBookingListItem::is_confirmation_id_Valid() const{
    return m_confirmation_id_isValid;
}

QDateTime OAIBookingListItem::getCreated() const {
    return m_created;
}
void OAIBookingListItem::setCreated(const QDateTime &created) {
    m_created = created;
    m_created_isSet = true;
}

bool OAIBookingListItem::is_created_Set() const{
    return m_created_isSet;
}

bool OAIBookingListItem::is_created_Valid() const{
    return m_created_isValid;
}

QList<OAIBookingListReservationItem> OAIBookingListItem::getReservations() const {
    return m_reservations;
}
void OAIBookingListItem::setReservations(const QList<OAIBookingListReservationItem> &reservations) {
    m_reservations = reservations;
    m_reservations_isSet = true;
}

bool OAIBookingListItem::is_reservations_Set() const{
    return m_reservations_isSet;
}

bool OAIBookingListItem::is_reservations_Valid() const{
    return m_reservations_isValid;
}

QDateTime OAIBookingListItem::getUpdated() const {
    return m_updated;
}
void OAIBookingListItem::setUpdated(const QDateTime &updated) {
    m_updated = updated;
    m_updated_isSet = true;
}

bool OAIBookingListItem::is_updated_Set() const{
    return m_updated_isSet;
}

bool OAIBookingListItem::is_updated_Valid() const{
    return m_updated_isValid;
}

bool OAIBookingListItem::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m__links.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_confirmation_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_reservations.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_updated_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBookingListItem::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
