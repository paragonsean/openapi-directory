/**
 * hetras Booking API Version 0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetAddonsRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetAddonsRequest::OAIGetAddonsRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetAddonsRequest::OAIGetAddonsRequest() {
    this->initializeModel();
}

OAIGetAddonsRequest::~OAIGetAddonsRequest() {}

void OAIGetAddonsRequest::initializeModel() {

    m_adults_isSet = false;
    m_adults_isValid = false;

    m_arrival_date_isSet = false;
    m_arrival_date_isValid = false;

    m_channel_code_isSet = false;
    m_channel_code_isValid = false;

    m_departure_date_isSet = false;
    m_departure_date_isValid = false;

    m_expand_isSet = false;
    m_expand_isValid = false;

    m_hotel_id_isSet = false;
    m_hotel_id_isValid = false;

    m_rate_plan_code_isSet = false;
    m_rate_plan_code_isValid = false;

    m_room_type_isSet = false;
    m_room_type_isValid = false;

    m_rooms_isSet = false;
    m_rooms_isValid = false;
}

void OAIGetAddonsRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetAddonsRequest::fromJsonObject(QJsonObject json) {

    m_adults_isValid = ::OpenAPI::fromJsonValue(m_adults, json[QString("adults")]);
    m_adults_isSet = !json[QString("adults")].isNull() && m_adults_isValid;

    m_arrival_date_isValid = ::OpenAPI::fromJsonValue(m_arrival_date, json[QString("arrivalDate")]);
    m_arrival_date_isSet = !json[QString("arrivalDate")].isNull() && m_arrival_date_isValid;

    m_channel_code_isValid = ::OpenAPI::fromJsonValue(m_channel_code, json[QString("channelCode")]);
    m_channel_code_isSet = !json[QString("channelCode")].isNull() && m_channel_code_isValid;

    m_departure_date_isValid = ::OpenAPI::fromJsonValue(m_departure_date, json[QString("departureDate")]);
    m_departure_date_isSet = !json[QString("departureDate")].isNull() && m_departure_date_isValid;

    m_expand_isValid = ::OpenAPI::fromJsonValue(m_expand, json[QString("expand")]);
    m_expand_isSet = !json[QString("expand")].isNull() && m_expand_isValid;

    m_hotel_id_isValid = ::OpenAPI::fromJsonValue(m_hotel_id, json[QString("hotelId")]);
    m_hotel_id_isSet = !json[QString("hotelId")].isNull() && m_hotel_id_isValid;

    m_rate_plan_code_isValid = ::OpenAPI::fromJsonValue(m_rate_plan_code, json[QString("ratePlanCode")]);
    m_rate_plan_code_isSet = !json[QString("ratePlanCode")].isNull() && m_rate_plan_code_isValid;

    m_room_type_isValid = ::OpenAPI::fromJsonValue(m_room_type, json[QString("roomType")]);
    m_room_type_isSet = !json[QString("roomType")].isNull() && m_room_type_isValid;

    m_rooms_isValid = ::OpenAPI::fromJsonValue(m_rooms, json[QString("rooms")]);
    m_rooms_isSet = !json[QString("rooms")].isNull() && m_rooms_isValid;
}

QString OAIGetAddonsRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetAddonsRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_adults_isSet) {
        obj.insert(QString("adults"), ::OpenAPI::toJsonValue(m_adults));
    }
    if (m_arrival_date_isSet) {
        obj.insert(QString("arrivalDate"), ::OpenAPI::toJsonValue(m_arrival_date));
    }
    if (m_channel_code_isSet) {
        obj.insert(QString("channelCode"), ::OpenAPI::toJsonValue(m_channel_code));
    }
    if (m_departure_date_isSet) {
        obj.insert(QString("departureDate"), ::OpenAPI::toJsonValue(m_departure_date));
    }
    if (m_expand_isSet) {
        obj.insert(QString("expand"), ::OpenAPI::toJsonValue(m_expand));
    }
    if (m_hotel_id_isSet) {
        obj.insert(QString("hotelId"), ::OpenAPI::toJsonValue(m_hotel_id));
    }
    if (m_rate_plan_code_isSet) {
        obj.insert(QString("ratePlanCode"), ::OpenAPI::toJsonValue(m_rate_plan_code));
    }
    if (m_room_type_isSet) {
        obj.insert(QString("roomType"), ::OpenAPI::toJsonValue(m_room_type));
    }
    if (m_rooms_isSet) {
        obj.insert(QString("rooms"), ::OpenAPI::toJsonValue(m_rooms));
    }
    return obj;
}

QByteArray OAIGetAddonsRequest::getAdults() const {
    return m_adults;
}
void OAIGetAddonsRequest::setAdults(const QByteArray &adults) {
    m_adults = adults;
    m_adults_isSet = true;
}

bool OAIGetAddonsRequest::is_adults_Set() const{
    return m_adults_isSet;
}

bool OAIGetAddonsRequest::is_adults_Valid() const{
    return m_adults_isValid;
}

QDateTime OAIGetAddonsRequest::getArrivalDate() const {
    return m_arrival_date;
}
void OAIGetAddonsRequest::setArrivalDate(const QDateTime &arrival_date) {
    m_arrival_date = arrival_date;
    m_arrival_date_isSet = true;
}

bool OAIGetAddonsRequest::is_arrival_date_Set() const{
    return m_arrival_date_isSet;
}

bool OAIGetAddonsRequest::is_arrival_date_Valid() const{
    return m_arrival_date_isValid;
}

QString OAIGetAddonsRequest::getChannelCode() const {
    return m_channel_code;
}
void OAIGetAddonsRequest::setChannelCode(const QString &channel_code) {
    m_channel_code = channel_code;
    m_channel_code_isSet = true;
}

bool OAIGetAddonsRequest::is_channel_code_Set() const{
    return m_channel_code_isSet;
}

bool OAIGetAddonsRequest::is_channel_code_Valid() const{
    return m_channel_code_isValid;
}

QDateTime OAIGetAddonsRequest::getDepartureDate() const {
    return m_departure_date;
}
void OAIGetAddonsRequest::setDepartureDate(const QDateTime &departure_date) {
    m_departure_date = departure_date;
    m_departure_date_isSet = true;
}

bool OAIGetAddonsRequest::is_departure_date_Set() const{
    return m_departure_date_isSet;
}

bool OAIGetAddonsRequest::is_departure_date_Valid() const{
    return m_departure_date_isValid;
}

QString OAIGetAddonsRequest::getExpand() const {
    return m_expand;
}
void OAIGetAddonsRequest::setExpand(const QString &expand) {
    m_expand = expand;
    m_expand_isSet = true;
}

bool OAIGetAddonsRequest::is_expand_Set() const{
    return m_expand_isSet;
}

bool OAIGetAddonsRequest::is_expand_Valid() const{
    return m_expand_isValid;
}

qint32 OAIGetAddonsRequest::getHotelId() const {
    return m_hotel_id;
}
void OAIGetAddonsRequest::setHotelId(const qint32 &hotel_id) {
    m_hotel_id = hotel_id;
    m_hotel_id_isSet = true;
}

bool OAIGetAddonsRequest::is_hotel_id_Set() const{
    return m_hotel_id_isSet;
}

bool OAIGetAddonsRequest::is_hotel_id_Valid() const{
    return m_hotel_id_isValid;
}

QString OAIGetAddonsRequest::getRatePlanCode() const {
    return m_rate_plan_code;
}
void OAIGetAddonsRequest::setRatePlanCode(const QString &rate_plan_code) {
    m_rate_plan_code = rate_plan_code;
    m_rate_plan_code_isSet = true;
}

bool OAIGetAddonsRequest::is_rate_plan_code_Set() const{
    return m_rate_plan_code_isSet;
}

bool OAIGetAddonsRequest::is_rate_plan_code_Valid() const{
    return m_rate_plan_code_isValid;
}

QString OAIGetAddonsRequest::getRoomType() const {
    return m_room_type;
}
void OAIGetAddonsRequest::setRoomType(const QString &room_type) {
    m_room_type = room_type;
    m_room_type_isSet = true;
}

bool OAIGetAddonsRequest::is_room_type_Set() const{
    return m_room_type_isSet;
}

bool OAIGetAddonsRequest::is_room_type_Valid() const{
    return m_room_type_isValid;
}

QByteArray OAIGetAddonsRequest::getRooms() const {
    return m_rooms;
}
void OAIGetAddonsRequest::setRooms(const QByteArray &rooms) {
    m_rooms = rooms;
    m_rooms_isSet = true;
}

bool OAIGetAddonsRequest::is_rooms_Set() const{
    return m_rooms_isSet;
}

bool OAIGetAddonsRequest::is_rooms_Valid() const{
    return m_rooms_isValid;
}

bool OAIGetAddonsRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_adults_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_arrival_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_channel_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_departure_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_expand_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_hotel_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_rate_plan_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_room_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_rooms_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetAddonsRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_adults_isValid && m_arrival_date_isValid && m_channel_code_isValid && m_departure_date_isValid && m_hotel_id_isValid && m_rate_plan_code_isValid && m_room_type_isValid && m_rooms_isValid && true;
}

} // namespace OpenAPI
