/**
 * hetras Booking API Version 0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIToken.h
 *
 * 
 */

#ifndef OAIToken_H
#define OAIToken_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIToken : public OAIObject {
public:
    OAIToken();
    OAIToken(QString json);
    ~OAIToken() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getAuthorizationExpiryDate() const;
    void setAuthorizationExpiryDate(const QDateTime &authorization_expiry_date);
    bool is_authorization_expiry_date_Set() const;
    bool is_authorization_expiry_date_Valid() const;

    QString getAuthorizationReference() const;
    void setAuthorizationReference(const QString &authorization_reference);
    bool is_authorization_reference_Set() const;
    bool is_authorization_reference_Valid() const;

    QString getAuthorizationStatus() const;
    void setAuthorizationStatus(const QString &authorization_status);
    bool is_authorization_status_Set() const;
    bool is_authorization_status_Valid() const;

    double getAuthorizedAmount() const;
    void setAuthorizedAmount(const double &authorized_amount);
    bool is_authorized_amount_Set() const;
    bool is_authorized_amount_Valid() const;

    QString getMerchantReference() const;
    void setMerchantReference(const QString &merchant_reference);
    bool is_merchant_reference_Set() const;
    bool is_merchant_reference_Valid() const;

    QString getShopperEmail() const;
    void setShopperEmail(const QString &shopper_email);
    bool is_shopper_email_Set() const;
    bool is_shopper_email_Valid() const;

    QString getShopperReference() const;
    void setShopperReference(const QString &shopper_reference);
    bool is_shopper_reference_Set() const;
    bool is_shopper_reference_Valid() const;

    QString getTokenId() const;
    void setTokenId(const QString &token_id);
    bool is_token_id_Set() const;
    bool is_token_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_authorization_expiry_date;
    bool m_authorization_expiry_date_isSet;
    bool m_authorization_expiry_date_isValid;

    QString m_authorization_reference;
    bool m_authorization_reference_isSet;
    bool m_authorization_reference_isValid;

    QString m_authorization_status;
    bool m_authorization_status_isSet;
    bool m_authorization_status_isValid;

    double m_authorized_amount;
    bool m_authorized_amount_isSet;
    bool m_authorized_amount_isValid;

    QString m_merchant_reference;
    bool m_merchant_reference_isSet;
    bool m_merchant_reference_isValid;

    QString m_shopper_email;
    bool m_shopper_email_isSet;
    bool m_shopper_email_isValid;

    QString m_shopper_reference;
    bool m_shopper_reference_isSet;
    bool m_shopper_reference_isValid;

    QString m_token_id;
    bool m_token_id_isSet;
    bool m_token_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIToken)

#endif // OAIToken_H
