/**
 * hetras Booking API Version 0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIReservationConfirmation.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIReservationConfirmation::OAIReservationConfirmation(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIReservationConfirmation::OAIReservationConfirmation() {
    this->initializeModel();
}

OAIReservationConfirmation::~OAIReservationConfirmation() {}

void OAIReservationConfirmation::initializeModel() {

    m__warnings_isSet = false;
    m__warnings_isValid = false;

    m_confirmation_id_isSet = false;
    m_confirmation_id_isValid = false;

    m_reservation_id_isSet = false;
    m_reservation_id_isValid = false;
}

void OAIReservationConfirmation::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIReservationConfirmation::fromJsonObject(QJsonObject json) {

    m__warnings_isValid = ::OpenAPI::fromJsonValue(m__warnings, json[QString("_warnings")]);
    m__warnings_isSet = !json[QString("_warnings")].isNull() && m__warnings_isValid;

    m_confirmation_id_isValid = ::OpenAPI::fromJsonValue(m_confirmation_id, json[QString("confirmation_id")]);
    m_confirmation_id_isSet = !json[QString("confirmation_id")].isNull() && m_confirmation_id_isValid;

    m_reservation_id_isValid = ::OpenAPI::fromJsonValue(m_reservation_id, json[QString("reservation_id")]);
    m_reservation_id_isSet = !json[QString("reservation_id")].isNull() && m_reservation_id_isValid;
}

QString OAIReservationConfirmation::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIReservationConfirmation::asJsonObject() const {
    QJsonObject obj;
    if (m__warnings.size() > 0) {
        obj.insert(QString("_warnings"), ::OpenAPI::toJsonValue(m__warnings));
    }
    if (m_confirmation_id_isSet) {
        obj.insert(QString("confirmation_id"), ::OpenAPI::toJsonValue(m_confirmation_id));
    }
    if (m_reservation_id_isSet) {
        obj.insert(QString("reservation_id"), ::OpenAPI::toJsonValue(m_reservation_id));
    }
    return obj;
}

QList<QString> OAIReservationConfirmation::getWarnings() const {
    return m__warnings;
}
void OAIReservationConfirmation::setWarnings(const QList<QString> &_warnings) {
    m__warnings = _warnings;
    m__warnings_isSet = true;
}

bool OAIReservationConfirmation::is__warnings_Set() const{
    return m__warnings_isSet;
}

bool OAIReservationConfirmation::is__warnings_Valid() const{
    return m__warnings_isValid;
}

QString OAIReservationConfirmation::getConfirmationId() const {
    return m_confirmation_id;
}
void OAIReservationConfirmation::setConfirmationId(const QString &confirmation_id) {
    m_confirmation_id = confirmation_id;
    m_confirmation_id_isSet = true;
}

bool OAIReservationConfirmation::is_confirmation_id_Set() const{
    return m_confirmation_id_isSet;
}

bool OAIReservationConfirmation::is_confirmation_id_Valid() const{
    return m_confirmation_id_isValid;
}

qint32 OAIReservationConfirmation::getReservationId() const {
    return m_reservation_id;
}
void OAIReservationConfirmation::setReservationId(const qint32 &reservation_id) {
    m_reservation_id = reservation_id;
    m_reservation_id_isSet = true;
}

bool OAIReservationConfirmation::is_reservation_id_Set() const{
    return m_reservation_id_isSet;
}

bool OAIReservationConfirmation::is_reservation_id_Valid() const{
    return m_reservation_id_isValid;
}

bool OAIReservationConfirmation::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m__warnings.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_confirmation_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_reservation_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIReservationConfirmation::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
