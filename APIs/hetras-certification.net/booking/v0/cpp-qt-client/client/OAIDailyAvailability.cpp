/**
 * hetras Booking API Version 0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDailyAvailability.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDailyAvailability::OAIDailyAvailability(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDailyAvailability::OAIDailyAvailability() {
    this->initializeModel();
}

OAIDailyAvailability::~OAIDailyAvailability() {}

void OAIDailyAvailability::initializeModel() {

    m_business_day_isSet = false;
    m_business_day_isValid = false;

    m_house_level_isSet = false;
    m_house_level_isValid = false;

    m_room_types_isSet = false;
    m_room_types_isValid = false;
}

void OAIDailyAvailability::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDailyAvailability::fromJsonObject(QJsonObject json) {

    m_business_day_isValid = ::OpenAPI::fromJsonValue(m_business_day, json[QString("business_day")]);
    m_business_day_isSet = !json[QString("business_day")].isNull() && m_business_day_isValid;

    m_house_level_isValid = ::OpenAPI::fromJsonValue(m_house_level, json[QString("house_level")]);
    m_house_level_isSet = !json[QString("house_level")].isNull() && m_house_level_isValid;

    m_room_types_isValid = ::OpenAPI::fromJsonValue(m_room_types, json[QString("room_types")]);
    m_room_types_isSet = !json[QString("room_types")].isNull() && m_room_types_isValid;
}

QString OAIDailyAvailability::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDailyAvailability::asJsonObject() const {
    QJsonObject obj;
    if (m_business_day_isSet) {
        obj.insert(QString("business_day"), ::OpenAPI::toJsonValue(m_business_day));
    }
    if (m_house_level.isSet()) {
        obj.insert(QString("house_level"), ::OpenAPI::toJsonValue(m_house_level));
    }
    if (m_room_types.size() > 0) {
        obj.insert(QString("room_types"), ::OpenAPI::toJsonValue(m_room_types));
    }
    return obj;
}

QDateTime OAIDailyAvailability::getBusinessDay() const {
    return m_business_day;
}
void OAIDailyAvailability::setBusinessDay(const QDateTime &business_day) {
    m_business_day = business_day;
    m_business_day_isSet = true;
}

bool OAIDailyAvailability::is_business_day_Set() const{
    return m_business_day_isSet;
}

bool OAIDailyAvailability::is_business_day_Valid() const{
    return m_business_day_isValid;
}

OAIAvailabilityDetail OAIDailyAvailability::getHouseLevel() const {
    return m_house_level;
}
void OAIDailyAvailability::setHouseLevel(const OAIAvailabilityDetail &house_level) {
    m_house_level = house_level;
    m_house_level_isSet = true;
}

bool OAIDailyAvailability::is_house_level_Set() const{
    return m_house_level_isSet;
}

bool OAIDailyAvailability::is_house_level_Valid() const{
    return m_house_level_isValid;
}

QList<OAIRoomAvailabilityDetail> OAIDailyAvailability::getRoomTypes() const {
    return m_room_types;
}
void OAIDailyAvailability::setRoomTypes(const QList<OAIRoomAvailabilityDetail> &room_types) {
    m_room_types = room_types;
    m_room_types_isSet = true;
}

bool OAIDailyAvailability::is_room_types_Set() const{
    return m_room_types_isSet;
}

bool OAIDailyAvailability::is_room_types_Valid() const{
    return m_room_types_isValid;
}

bool OAIDailyAvailability::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_business_day_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_house_level.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_room_types.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDailyAvailability::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
