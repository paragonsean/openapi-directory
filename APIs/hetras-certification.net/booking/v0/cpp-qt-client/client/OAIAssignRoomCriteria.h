/**
 * hetras Booking API Version 0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAssignRoomCriteria.h
 *
 * Represents a set of criteria for assigning a room
 */

#ifndef OAIAssignRoomCriteria_H
#define OAIAssignRoomCriteria_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAssignRoomCriteria : public OAIObject {
public:
    OAIAssignRoomCriteria();
    OAIAssignRoomCriteria(QString json);
    ~OAIAssignRoomCriteria() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getAmenities() const;
    void setAmenities(const QList<QString> &amenities);
    bool is_amenities_Set() const;
    bool is_amenities_Valid() const;

    QString getCondition() const;
    void setCondition(const QString &condition);
    bool is_condition_Set() const;
    bool is_condition_Valid() const;

    bool isIncludeOutOfService() const;
    void setIncludeOutOfService(const bool &include_out_of_service);
    bool is_include_out_of_service_Set() const;
    bool is_include_out_of_service_Valid() const;

    QList<QString> getLocations() const;
    void setLocations(const QList<QString> &locations);
    bool is_locations_Set() const;
    bool is_locations_Valid() const;

    bool isRespectGuestPreferences() const;
    void setRespectGuestPreferences(const bool &respect_guest_preferences);
    bool is_respect_guest_preferences_Set() const;
    bool is_respect_guest_preferences_Valid() const;

    QString getRoomNumber() const;
    void setRoomNumber(const QString &room_number);
    bool is_room_number_Set() const;
    bool is_room_number_Valid() const;

    QList<QString> getViews() const;
    void setViews(const QList<QString> &views);
    bool is_views_Set() const;
    bool is_views_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_amenities;
    bool m_amenities_isSet;
    bool m_amenities_isValid;

    QString m_condition;
    bool m_condition_isSet;
    bool m_condition_isValid;

    bool m_include_out_of_service;
    bool m_include_out_of_service_isSet;
    bool m_include_out_of_service_isValid;

    QList<QString> m_locations;
    bool m_locations_isSet;
    bool m_locations_isValid;

    bool m_respect_guest_preferences;
    bool m_respect_guest_preferences_isSet;
    bool m_respect_guest_preferences_isValid;

    QString m_room_number;
    bool m_room_number_isSet;
    bool m_room_number_isValid;

    QList<QString> m_views;
    bool m_views_isSet;
    bool m_views_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAssignRoomCriteria)

#endif // OAIAssignRoomCriteria_H
