/**
 * hetras Booking API Version 0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBookingListRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBookingListRequest::OAIBookingListRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBookingListRequest::OAIBookingListRequest() {
    this->initializeModel();
}

OAIBookingListRequest::~OAIBookingListRequest() {}

void OAIBookingListRequest::initializeModel() {

    m_block_code_isSet = false;
    m_block_code_isValid = false;

    m_cancellation_id_isSet = false;
    m_cancellation_id_isValid = false;

    m_channel_codes_isSet = false;
    m_channel_codes_isValid = false;

    m_company_email_isSet = false;
    m_company_email_isValid = false;

    m_company_id_isSet = false;
    m_company_id_isValid = false;

    m_company_name_isSet = false;
    m_company_name_isValid = false;

    m_customer_email_isSet = false;
    m_customer_email_isValid = false;

    m_customer_id_isSet = false;
    m_customer_id_isValid = false;

    m_customer_name_isSet = false;
    m_customer_name_isValid = false;

    m_date_filter_isSet = false;
    m_date_filter_isValid = false;

    m_exclude_isSet = false;
    m_exclude_isValid = false;

    m_external_id_isSet = false;
    m_external_id_isValid = false;

    m_from_isSet = false;
    m_from_isValid = false;

    m_hotel_id_isSet = false;
    m_hotel_id_isValid = false;

    m_labels_isSet = false;
    m_labels_isValid = false;

    m_market_codes_isSet = false;
    m_market_codes_isValid = false;

    m_rate_plan_codes_isSet = false;
    m_rate_plan_codes_isValid = false;

    m_reservation_number_isSet = false;
    m_reservation_number_isValid = false;

    m_reservation_statuses_isSet = false;
    m_reservation_statuses_isValid = false;

    m_room_number_isSet = false;
    m_room_number_isValid = false;

    m_room_types_isSet = false;
    m_room_types_isValid = false;

    m_sub_channel_codes_isSet = false;
    m_sub_channel_codes_isValid = false;

    m_to_isSet = false;
    m_to_isValid = false;
}

void OAIBookingListRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBookingListRequest::fromJsonObject(QJsonObject json) {

    m_block_code_isValid = ::OpenAPI::fromJsonValue(m_block_code, json[QString("blockCode")]);
    m_block_code_isSet = !json[QString("blockCode")].isNull() && m_block_code_isValid;

    m_cancellation_id_isValid = ::OpenAPI::fromJsonValue(m_cancellation_id, json[QString("cancellationId")]);
    m_cancellation_id_isSet = !json[QString("cancellationId")].isNull() && m_cancellation_id_isValid;

    m_channel_codes_isValid = ::OpenAPI::fromJsonValue(m_channel_codes, json[QString("channelCodes")]);
    m_channel_codes_isSet = !json[QString("channelCodes")].isNull() && m_channel_codes_isValid;

    m_company_email_isValid = ::OpenAPI::fromJsonValue(m_company_email, json[QString("companyEmail")]);
    m_company_email_isSet = !json[QString("companyEmail")].isNull() && m_company_email_isValid;

    m_company_id_isValid = ::OpenAPI::fromJsonValue(m_company_id, json[QString("companyId")]);
    m_company_id_isSet = !json[QString("companyId")].isNull() && m_company_id_isValid;

    m_company_name_isValid = ::OpenAPI::fromJsonValue(m_company_name, json[QString("companyName")]);
    m_company_name_isSet = !json[QString("companyName")].isNull() && m_company_name_isValid;

    m_customer_email_isValid = ::OpenAPI::fromJsonValue(m_customer_email, json[QString("customerEmail")]);
    m_customer_email_isSet = !json[QString("customerEmail")].isNull() && m_customer_email_isValid;

    m_customer_id_isValid = ::OpenAPI::fromJsonValue(m_customer_id, json[QString("customerId")]);
    m_customer_id_isSet = !json[QString("customerId")].isNull() && m_customer_id_isValid;

    m_customer_name_isValid = ::OpenAPI::fromJsonValue(m_customer_name, json[QString("customerName")]);
    m_customer_name_isSet = !json[QString("customerName")].isNull() && m_customer_name_isValid;

    m_date_filter_isValid = ::OpenAPI::fromJsonValue(m_date_filter, json[QString("dateFilter")]);
    m_date_filter_isSet = !json[QString("dateFilter")].isNull() && m_date_filter_isValid;

    m_exclude_isValid = ::OpenAPI::fromJsonValue(m_exclude, json[QString("exclude")]);
    m_exclude_isSet = !json[QString("exclude")].isNull() && m_exclude_isValid;

    m_external_id_isValid = ::OpenAPI::fromJsonValue(m_external_id, json[QString("externalId")]);
    m_external_id_isSet = !json[QString("externalId")].isNull() && m_external_id_isValid;

    m_from_isValid = ::OpenAPI::fromJsonValue(m_from, json[QString("from")]);
    m_from_isSet = !json[QString("from")].isNull() && m_from_isValid;

    m_hotel_id_isValid = ::OpenAPI::fromJsonValue(m_hotel_id, json[QString("hotelId")]);
    m_hotel_id_isSet = !json[QString("hotelId")].isNull() && m_hotel_id_isValid;

    m_labels_isValid = ::OpenAPI::fromJsonValue(m_labels, json[QString("labels")]);
    m_labels_isSet = !json[QString("labels")].isNull() && m_labels_isValid;

    m_market_codes_isValid = ::OpenAPI::fromJsonValue(m_market_codes, json[QString("marketCodes")]);
    m_market_codes_isSet = !json[QString("marketCodes")].isNull() && m_market_codes_isValid;

    m_rate_plan_codes_isValid = ::OpenAPI::fromJsonValue(m_rate_plan_codes, json[QString("ratePlanCodes")]);
    m_rate_plan_codes_isSet = !json[QString("ratePlanCodes")].isNull() && m_rate_plan_codes_isValid;

    m_reservation_number_isValid = ::OpenAPI::fromJsonValue(m_reservation_number, json[QString("reservationNumber")]);
    m_reservation_number_isSet = !json[QString("reservationNumber")].isNull() && m_reservation_number_isValid;

    m_reservation_statuses_isValid = ::OpenAPI::fromJsonValue(m_reservation_statuses, json[QString("reservationStatuses")]);
    m_reservation_statuses_isSet = !json[QString("reservationStatuses")].isNull() && m_reservation_statuses_isValid;

    m_room_number_isValid = ::OpenAPI::fromJsonValue(m_room_number, json[QString("roomNumber")]);
    m_room_number_isSet = !json[QString("roomNumber")].isNull() && m_room_number_isValid;

    m_room_types_isValid = ::OpenAPI::fromJsonValue(m_room_types, json[QString("roomTypes")]);
    m_room_types_isSet = !json[QString("roomTypes")].isNull() && m_room_types_isValid;

    m_sub_channel_codes_isValid = ::OpenAPI::fromJsonValue(m_sub_channel_codes, json[QString("subChannelCodes")]);
    m_sub_channel_codes_isSet = !json[QString("subChannelCodes")].isNull() && m_sub_channel_codes_isValid;

    m_to_isValid = ::OpenAPI::fromJsonValue(m_to, json[QString("to")]);
    m_to_isSet = !json[QString("to")].isNull() && m_to_isValid;
}

QString OAIBookingListRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBookingListRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_block_code_isSet) {
        obj.insert(QString("blockCode"), ::OpenAPI::toJsonValue(m_block_code));
    }
    if (m_cancellation_id_isSet) {
        obj.insert(QString("cancellationId"), ::OpenAPI::toJsonValue(m_cancellation_id));
    }
    if (m_channel_codes.size() > 0) {
        obj.insert(QString("channelCodes"), ::OpenAPI::toJsonValue(m_channel_codes));
    }
    if (m_company_email_isSet) {
        obj.insert(QString("companyEmail"), ::OpenAPI::toJsonValue(m_company_email));
    }
    if (m_company_id_isSet) {
        obj.insert(QString("companyId"), ::OpenAPI::toJsonValue(m_company_id));
    }
    if (m_company_name_isSet) {
        obj.insert(QString("companyName"), ::OpenAPI::toJsonValue(m_company_name));
    }
    if (m_customer_email_isSet) {
        obj.insert(QString("customerEmail"), ::OpenAPI::toJsonValue(m_customer_email));
    }
    if (m_customer_id_isSet) {
        obj.insert(QString("customerId"), ::OpenAPI::toJsonValue(m_customer_id));
    }
    if (m_customer_name_isSet) {
        obj.insert(QString("customerName"), ::OpenAPI::toJsonValue(m_customer_name));
    }
    if (m_date_filter_isSet) {
        obj.insert(QString("dateFilter"), ::OpenAPI::toJsonValue(m_date_filter));
    }
    if (m_exclude_isSet) {
        obj.insert(QString("exclude"), ::OpenAPI::toJsonValue(m_exclude));
    }
    if (m_external_id_isSet) {
        obj.insert(QString("externalId"), ::OpenAPI::toJsonValue(m_external_id));
    }
    if (m_from_isSet) {
        obj.insert(QString("from"), ::OpenAPI::toJsonValue(m_from));
    }
    if (m_hotel_id_isSet) {
        obj.insert(QString("hotelId"), ::OpenAPI::toJsonValue(m_hotel_id));
    }
    if (m_labels.size() > 0) {
        obj.insert(QString("labels"), ::OpenAPI::toJsonValue(m_labels));
    }
    if (m_market_codes.size() > 0) {
        obj.insert(QString("marketCodes"), ::OpenAPI::toJsonValue(m_market_codes));
    }
    if (m_rate_plan_codes.size() > 0) {
        obj.insert(QString("ratePlanCodes"), ::OpenAPI::toJsonValue(m_rate_plan_codes));
    }
    if (m_reservation_number_isSet) {
        obj.insert(QString("reservationNumber"), ::OpenAPI::toJsonValue(m_reservation_number));
    }
    if (m_reservation_statuses.size() > 0) {
        obj.insert(QString("reservationStatuses"), ::OpenAPI::toJsonValue(m_reservation_statuses));
    }
    if (m_room_number_isSet) {
        obj.insert(QString("roomNumber"), ::OpenAPI::toJsonValue(m_room_number));
    }
    if (m_room_types.size() > 0) {
        obj.insert(QString("roomTypes"), ::OpenAPI::toJsonValue(m_room_types));
    }
    if (m_sub_channel_codes.size() > 0) {
        obj.insert(QString("subChannelCodes"), ::OpenAPI::toJsonValue(m_sub_channel_codes));
    }
    if (m_to_isSet) {
        obj.insert(QString("to"), ::OpenAPI::toJsonValue(m_to));
    }
    return obj;
}

QString OAIBookingListRequest::getBlockCode() const {
    return m_block_code;
}
void OAIBookingListRequest::setBlockCode(const QString &block_code) {
    m_block_code = block_code;
    m_block_code_isSet = true;
}

bool OAIBookingListRequest::is_block_code_Set() const{
    return m_block_code_isSet;
}

bool OAIBookingListRequest::is_block_code_Valid() const{
    return m_block_code_isValid;
}

QString OAIBookingListRequest::getCancellationId() const {
    return m_cancellation_id;
}
void OAIBookingListRequest::setCancellationId(const QString &cancellation_id) {
    m_cancellation_id = cancellation_id;
    m_cancellation_id_isSet = true;
}

bool OAIBookingListRequest::is_cancellation_id_Set() const{
    return m_cancellation_id_isSet;
}

bool OAIBookingListRequest::is_cancellation_id_Valid() const{
    return m_cancellation_id_isValid;
}

QList<QString> OAIBookingListRequest::getChannelCodes() const {
    return m_channel_codes;
}
void OAIBookingListRequest::setChannelCodes(const QList<QString> &channel_codes) {
    m_channel_codes = channel_codes;
    m_channel_codes_isSet = true;
}

bool OAIBookingListRequest::is_channel_codes_Set() const{
    return m_channel_codes_isSet;
}

bool OAIBookingListRequest::is_channel_codes_Valid() const{
    return m_channel_codes_isValid;
}

QString OAIBookingListRequest::getCompanyEmail() const {
    return m_company_email;
}
void OAIBookingListRequest::setCompanyEmail(const QString &company_email) {
    m_company_email = company_email;
    m_company_email_isSet = true;
}

bool OAIBookingListRequest::is_company_email_Set() const{
    return m_company_email_isSet;
}

bool OAIBookingListRequest::is_company_email_Valid() const{
    return m_company_email_isValid;
}

QString OAIBookingListRequest::getCompanyId() const {
    return m_company_id;
}
void OAIBookingListRequest::setCompanyId(const QString &company_id) {
    m_company_id = company_id;
    m_company_id_isSet = true;
}

bool OAIBookingListRequest::is_company_id_Set() const{
    return m_company_id_isSet;
}

bool OAIBookingListRequest::is_company_id_Valid() const{
    return m_company_id_isValid;
}

QString OAIBookingListRequest::getCompanyName() const {
    return m_company_name;
}
void OAIBookingListRequest::setCompanyName(const QString &company_name) {
    m_company_name = company_name;
    m_company_name_isSet = true;
}

bool OAIBookingListRequest::is_company_name_Set() const{
    return m_company_name_isSet;
}

bool OAIBookingListRequest::is_company_name_Valid() const{
    return m_company_name_isValid;
}

QString OAIBookingListRequest::getCustomerEmail() const {
    return m_customer_email;
}
void OAIBookingListRequest::setCustomerEmail(const QString &customer_email) {
    m_customer_email = customer_email;
    m_customer_email_isSet = true;
}

bool OAIBookingListRequest::is_customer_email_Set() const{
    return m_customer_email_isSet;
}

bool OAIBookingListRequest::is_customer_email_Valid() const{
    return m_customer_email_isValid;
}

QString OAIBookingListRequest::getCustomerId() const {
    return m_customer_id;
}
void OAIBookingListRequest::setCustomerId(const QString &customer_id) {
    m_customer_id = customer_id;
    m_customer_id_isSet = true;
}

bool OAIBookingListRequest::is_customer_id_Set() const{
    return m_customer_id_isSet;
}

bool OAIBookingListRequest::is_customer_id_Valid() const{
    return m_customer_id_isValid;
}

QString OAIBookingListRequest::getCustomerName() const {
    return m_customer_name;
}
void OAIBookingListRequest::setCustomerName(const QString &customer_name) {
    m_customer_name = customer_name;
    m_customer_name_isSet = true;
}

bool OAIBookingListRequest::is_customer_name_Set() const{
    return m_customer_name_isSet;
}

bool OAIBookingListRequest::is_customer_name_Valid() const{
    return m_customer_name_isValid;
}

QString OAIBookingListRequest::getDateFilter() const {
    return m_date_filter;
}
void OAIBookingListRequest::setDateFilter(const QString &date_filter) {
    m_date_filter = date_filter;
    m_date_filter_isSet = true;
}

bool OAIBookingListRequest::is_date_filter_Set() const{
    return m_date_filter_isSet;
}

bool OAIBookingListRequest::is_date_filter_Valid() const{
    return m_date_filter_isValid;
}

QString OAIBookingListRequest::getExclude() const {
    return m_exclude;
}
void OAIBookingListRequest::setExclude(const QString &exclude) {
    m_exclude = exclude;
    m_exclude_isSet = true;
}

bool OAIBookingListRequest::is_exclude_Set() const{
    return m_exclude_isSet;
}

bool OAIBookingListRequest::is_exclude_Valid() const{
    return m_exclude_isValid;
}

QString OAIBookingListRequest::getExternalId() const {
    return m_external_id;
}
void OAIBookingListRequest::setExternalId(const QString &external_id) {
    m_external_id = external_id;
    m_external_id_isSet = true;
}

bool OAIBookingListRequest::is_external_id_Set() const{
    return m_external_id_isSet;
}

bool OAIBookingListRequest::is_external_id_Valid() const{
    return m_external_id_isValid;
}

QDateTime OAIBookingListRequest::getFrom() const {
    return m_from;
}
void OAIBookingListRequest::setFrom(const QDateTime &from) {
    m_from = from;
    m_from_isSet = true;
}

bool OAIBookingListRequest::is_from_Set() const{
    return m_from_isSet;
}

bool OAIBookingListRequest::is_from_Valid() const{
    return m_from_isValid;
}

qint32 OAIBookingListRequest::getHotelId() const {
    return m_hotel_id;
}
void OAIBookingListRequest::setHotelId(const qint32 &hotel_id) {
    m_hotel_id = hotel_id;
    m_hotel_id_isSet = true;
}

bool OAIBookingListRequest::is_hotel_id_Set() const{
    return m_hotel_id_isSet;
}

bool OAIBookingListRequest::is_hotel_id_Valid() const{
    return m_hotel_id_isValid;
}

QList<QString> OAIBookingListRequest::getLabels() const {
    return m_labels;
}
void OAIBookingListRequest::setLabels(const QList<QString> &labels) {
    m_labels = labels;
    m_labels_isSet = true;
}

bool OAIBookingListRequest::is_labels_Set() const{
    return m_labels_isSet;
}

bool OAIBookingListRequest::is_labels_Valid() const{
    return m_labels_isValid;
}

QList<QString> OAIBookingListRequest::getMarketCodes() const {
    return m_market_codes;
}
void OAIBookingListRequest::setMarketCodes(const QList<QString> &market_codes) {
    m_market_codes = market_codes;
    m_market_codes_isSet = true;
}

bool OAIBookingListRequest::is_market_codes_Set() const{
    return m_market_codes_isSet;
}

bool OAIBookingListRequest::is_market_codes_Valid() const{
    return m_market_codes_isValid;
}

QList<QString> OAIBookingListRequest::getRatePlanCodes() const {
    return m_rate_plan_codes;
}
void OAIBookingListRequest::setRatePlanCodes(const QList<QString> &rate_plan_codes) {
    m_rate_plan_codes = rate_plan_codes;
    m_rate_plan_codes_isSet = true;
}

bool OAIBookingListRequest::is_rate_plan_codes_Set() const{
    return m_rate_plan_codes_isSet;
}

bool OAIBookingListRequest::is_rate_plan_codes_Valid() const{
    return m_rate_plan_codes_isValid;
}

qint32 OAIBookingListRequest::getReservationNumber() const {
    return m_reservation_number;
}
void OAIBookingListRequest::setReservationNumber(const qint32 &reservation_number) {
    m_reservation_number = reservation_number;
    m_reservation_number_isSet = true;
}

bool OAIBookingListRequest::is_reservation_number_Set() const{
    return m_reservation_number_isSet;
}

bool OAIBookingListRequest::is_reservation_number_Valid() const{
    return m_reservation_number_isValid;
}

QList<QString> OAIBookingListRequest::getReservationStatuses() const {
    return m_reservation_statuses;
}
void OAIBookingListRequest::setReservationStatuses(const QList<QString> &reservation_statuses) {
    m_reservation_statuses = reservation_statuses;
    m_reservation_statuses_isSet = true;
}

bool OAIBookingListRequest::is_reservation_statuses_Set() const{
    return m_reservation_statuses_isSet;
}

bool OAIBookingListRequest::is_reservation_statuses_Valid() const{
    return m_reservation_statuses_isValid;
}

QString OAIBookingListRequest::getRoomNumber() const {
    return m_room_number;
}
void OAIBookingListRequest::setRoomNumber(const QString &room_number) {
    m_room_number = room_number;
    m_room_number_isSet = true;
}

bool OAIBookingListRequest::is_room_number_Set() const{
    return m_room_number_isSet;
}

bool OAIBookingListRequest::is_room_number_Valid() const{
    return m_room_number_isValid;
}

QList<QString> OAIBookingListRequest::getRoomTypes() const {
    return m_room_types;
}
void OAIBookingListRequest::setRoomTypes(const QList<QString> &room_types) {
    m_room_types = room_types;
    m_room_types_isSet = true;
}

bool OAIBookingListRequest::is_room_types_Set() const{
    return m_room_types_isSet;
}

bool OAIBookingListRequest::is_room_types_Valid() const{
    return m_room_types_isValid;
}

QList<QString> OAIBookingListRequest::getSubChannelCodes() const {
    return m_sub_channel_codes;
}
void OAIBookingListRequest::setSubChannelCodes(const QList<QString> &sub_channel_codes) {
    m_sub_channel_codes = sub_channel_codes;
    m_sub_channel_codes_isSet = true;
}

bool OAIBookingListRequest::is_sub_channel_codes_Set() const{
    return m_sub_channel_codes_isSet;
}

bool OAIBookingListRequest::is_sub_channel_codes_Valid() const{
    return m_sub_channel_codes_isValid;
}

QDateTime OAIBookingListRequest::getTo() const {
    return m_to;
}
void OAIBookingListRequest::setTo(const QDateTime &to) {
    m_to = to;
    m_to_isSet = true;
}

bool OAIBookingListRequest::is_to_Set() const{
    return m_to_isSet;
}

bool OAIBookingListRequest::is_to_Valid() const{
    return m_to_isValid;
}

bool OAIBookingListRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_block_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_cancellation_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_channel_codes.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_company_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_company_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_company_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_customer_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_customer_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_customer_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_filter_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_exclude_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_external_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_from_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_hotel_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_labels.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_market_codes.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_rate_plan_codes.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_reservation_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_reservation_statuses.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_room_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_room_types.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_sub_channel_codes.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_to_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBookingListRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
