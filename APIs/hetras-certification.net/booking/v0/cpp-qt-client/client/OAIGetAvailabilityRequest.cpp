/**
 * hetras Booking API Version 0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetAvailabilityRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetAvailabilityRequest::OAIGetAvailabilityRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetAvailabilityRequest::OAIGetAvailabilityRequest() {
    this->initializeModel();
}

OAIGetAvailabilityRequest::~OAIGetAvailabilityRequest() {}

void OAIGetAvailabilityRequest::initializeModel() {

    m_expand_isSet = false;
    m_expand_isValid = false;

    m_from_isSet = false;
    m_from_isValid = false;

    m_hotel_id_isSet = false;
    m_hotel_id_isValid = false;

    m_to_isSet = false;
    m_to_isValid = false;
}

void OAIGetAvailabilityRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetAvailabilityRequest::fromJsonObject(QJsonObject json) {

    m_expand_isValid = ::OpenAPI::fromJsonValue(m_expand, json[QString("expand")]);
    m_expand_isSet = !json[QString("expand")].isNull() && m_expand_isValid;

    m_from_isValid = ::OpenAPI::fromJsonValue(m_from, json[QString("from")]);
    m_from_isSet = !json[QString("from")].isNull() && m_from_isValid;

    m_hotel_id_isValid = ::OpenAPI::fromJsonValue(m_hotel_id, json[QString("hotelId")]);
    m_hotel_id_isSet = !json[QString("hotelId")].isNull() && m_hotel_id_isValid;

    m_to_isValid = ::OpenAPI::fromJsonValue(m_to, json[QString("to")]);
    m_to_isSet = !json[QString("to")].isNull() && m_to_isValid;
}

QString OAIGetAvailabilityRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetAvailabilityRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_expand_isSet) {
        obj.insert(QString("expand"), ::OpenAPI::toJsonValue(m_expand));
    }
    if (m_from_isSet) {
        obj.insert(QString("from"), ::OpenAPI::toJsonValue(m_from));
    }
    if (m_hotel_id_isSet) {
        obj.insert(QString("hotelId"), ::OpenAPI::toJsonValue(m_hotel_id));
    }
    if (m_to_isSet) {
        obj.insert(QString("to"), ::OpenAPI::toJsonValue(m_to));
    }
    return obj;
}

QString OAIGetAvailabilityRequest::getExpand() const {
    return m_expand;
}
void OAIGetAvailabilityRequest::setExpand(const QString &expand) {
    m_expand = expand;
    m_expand_isSet = true;
}

bool OAIGetAvailabilityRequest::is_expand_Set() const{
    return m_expand_isSet;
}

bool OAIGetAvailabilityRequest::is_expand_Valid() const{
    return m_expand_isValid;
}

QDateTime OAIGetAvailabilityRequest::getFrom() const {
    return m_from;
}
void OAIGetAvailabilityRequest::setFrom(const QDateTime &from) {
    m_from = from;
    m_from_isSet = true;
}

bool OAIGetAvailabilityRequest::is_from_Set() const{
    return m_from_isSet;
}

bool OAIGetAvailabilityRequest::is_from_Valid() const{
    return m_from_isValid;
}

qint32 OAIGetAvailabilityRequest::getHotelId() const {
    return m_hotel_id;
}
void OAIGetAvailabilityRequest::setHotelId(const qint32 &hotel_id) {
    m_hotel_id = hotel_id;
    m_hotel_id_isSet = true;
}

bool OAIGetAvailabilityRequest::is_hotel_id_Set() const{
    return m_hotel_id_isSet;
}

bool OAIGetAvailabilityRequest::is_hotel_id_Valid() const{
    return m_hotel_id_isValid;
}

QDateTime OAIGetAvailabilityRequest::getTo() const {
    return m_to;
}
void OAIGetAvailabilityRequest::setTo(const QDateTime &to) {
    m_to = to;
    m_to_isSet = true;
}

bool OAIGetAvailabilityRequest::is_to_Set() const{
    return m_to_isSet;
}

bool OAIGetAvailabilityRequest::is_to_Valid() const{
    return m_to_isValid;
}

bool OAIGetAvailabilityRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_expand_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_from_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_hotel_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_to_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetAvailabilityRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_from_isValid && m_hotel_id_isValid && m_to_isValid && true;
}

} // namespace OpenAPI
