/**
 * hetras Booking API Version 0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.HetrasBookingApiVersion0);
  }
}(this, function(expect, HetrasBookingApiVersion0) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new HetrasBookingApiVersion0.BookingListReservationItem();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('BookingListReservationItem', function() {
    it('should create an instance of BookingListReservationItem', function() {
      // uncomment below and update the code to test BookingListReservationItem
      //var instance = new HetrasBookingApiVersion0.BookingListReservationItem();
      //expect(instance).to.be.a(HetrasBookingApiVersion0.BookingListReservationItem);
    });

    it('should have the property links (base name: "_links")', function() {
      // uncomment below and update the code to test the property links
      //var instance = new HetrasBookingApiVersion0.BookingListReservationItem();
      //expect(instance).to.be();
    });

    it('should have the property adults (base name: "adults")', function() {
      // uncomment below and update the code to test the property adults
      //var instance = new HetrasBookingApiVersion0.BookingListReservationItem();
      //expect(instance).to.be();
    });

    it('should have the property arrivalDate (base name: "arrival_date")', function() {
      // uncomment below and update the code to test the property arrivalDate
      //var instance = new HetrasBookingApiVersion0.BookingListReservationItem();
      //expect(instance).to.be();
    });

    it('should have the property balance (base name: "balance")', function() {
      // uncomment below and update the code to test the property balance
      //var instance = new HetrasBookingApiVersion0.BookingListReservationItem();
      //expect(instance).to.be();
    });

    it('should have the property blockCode (base name: "block_code")', function() {
      // uncomment below and update the code to test the property blockCode
      //var instance = new HetrasBookingApiVersion0.BookingListReservationItem();
      //expect(instance).to.be();
    });

    it('should have the property cancellationId (base name: "cancellation_id")', function() {
      // uncomment below and update the code to test the property cancellationId
      //var instance = new HetrasBookingApiVersion0.BookingListReservationItem();
      //expect(instance).to.be();
    });

    it('should have the property channelCode (base name: "channel_code")', function() {
      // uncomment below and update the code to test the property channelCode
      //var instance = new HetrasBookingApiVersion0.BookingListReservationItem();
      //expect(instance).to.be();
    });

    it('should have the property companies (base name: "companies")', function() {
      // uncomment below and update the code to test the property companies
      //var instance = new HetrasBookingApiVersion0.BookingListReservationItem();
      //expect(instance).to.be();
    });

    it('should have the property created (base name: "created")', function() {
      // uncomment below and update the code to test the property created
      //var instance = new HetrasBookingApiVersion0.BookingListReservationItem();
      //expect(instance).to.be();
    });

    it('should have the property customers (base name: "customers")', function() {
      // uncomment below and update the code to test the property customers
      //var instance = new HetrasBookingApiVersion0.BookingListReservationItem();
      //expect(instance).to.be();
    });

    it('should have the property departureDate (base name: "departure_date")', function() {
      // uncomment below and update the code to test the property departureDate
      //var instance = new HetrasBookingApiVersion0.BookingListReservationItem();
      //expect(instance).to.be();
    });

    it('should have the property externalId (base name: "external_id")', function() {
      // uncomment below and update the code to test the property externalId
      //var instance = new HetrasBookingApiVersion0.BookingListReservationItem();
      //expect(instance).to.be();
    });

    it('should have the property hotel (base name: "hotel")', function() {
      // uncomment below and update the code to test the property hotel
      //var instance = new HetrasBookingApiVersion0.BookingListReservationItem();
      //expect(instance).to.be();
    });

    it('should have the property labels (base name: "labels")', function() {
      // uncomment below and update the code to test the property labels
      //var instance = new HetrasBookingApiVersion0.BookingListReservationItem();
      //expect(instance).to.be();
    });

    it('should have the property marketCode (base name: "market_code")', function() {
      // uncomment below and update the code to test the property marketCode
      //var instance = new HetrasBookingApiVersion0.BookingListReservationItem();
      //expect(instance).to.be();
    });

    it('should have the property ratePlan (base name: "rate_plan")', function() {
      // uncomment below and update the code to test the property ratePlan
      //var instance = new HetrasBookingApiVersion0.BookingListReservationItem();
      //expect(instance).to.be();
    });

    it('should have the property reservationNumber (base name: "reservation_number")', function() {
      // uncomment below and update the code to test the property reservationNumber
      //var instance = new HetrasBookingApiVersion0.BookingListReservationItem();
      //expect(instance).to.be();
    });

    it('should have the property reservationStatus (base name: "reservation_status")', function() {
      // uncomment below and update the code to test the property reservationStatus
      //var instance = new HetrasBookingApiVersion0.BookingListReservationItem();
      //expect(instance).to.be();
    });

    it('should have the property room (base name: "room")', function() {
      // uncomment below and update the code to test the property room
      //var instance = new HetrasBookingApiVersion0.BookingListReservationItem();
      //expect(instance).to.be();
    });

    it('should have the property rooms (base name: "rooms")', function() {
      // uncomment below and update the code to test the property rooms
      //var instance = new HetrasBookingApiVersion0.BookingListReservationItem();
      //expect(instance).to.be();
    });

    it('should have the property subchannelCode (base name: "subchannel_code")', function() {
      // uncomment below and update the code to test the property subchannelCode
      //var instance = new HetrasBookingApiVersion0.BookingListReservationItem();
      //expect(instance).to.be();
    });

    it('should have the property updated (base name: "updated")', function() {
      // uncomment below and update the code to test the property updated
      //var instance = new HetrasBookingApiVersion0.BookingListReservationItem();
      //expect(instance).to.be();
    });

  });

}));
