/**
 * hetras Booking API Version 0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.HetrasBookingApiVersion0);
  }
}(this, function(expect, HetrasBookingApiVersion0) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new HetrasBookingApiVersion0.BookingsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('BookingsApi', function() {
    describe('bookingsCancelReservation', function() {
      it('should call bookingsCancelReservation successfully', function(done) {
        //uncomment below and update the code to test bookingsCancelReservation
        //instance.bookingsCancelReservation(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('bookingsCheckIn', function() {
      it('should call bookingsCheckIn successfully', function(done) {
        //uncomment below and update the code to test bookingsCheckIn
        //instance.bookingsCheckIn(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('bookingsCheckOut', function() {
      it('should call bookingsCheckOut successfully', function(done) {
        //uncomment below and update the code to test bookingsCheckOut
        //instance.bookingsCheckOut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('bookingsCreateBooking', function() {
      it('should call bookingsCreateBooking successfully', function(done) {
        //uncomment below and update the code to test bookingsCreateBooking
        //instance.bookingsCreateBooking(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('bookingsGetBooking', function() {
      it('should call bookingsGetBooking successfully', function(done) {
        //uncomment below and update the code to test bookingsGetBooking
        //instance.bookingsGetBooking(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('bookingsGetBookings', function() {
      it('should call bookingsGetBookings successfully', function(done) {
        //uncomment below and update the code to test bookingsGetBookings
        //instance.bookingsGetBookings(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('bookingsGetBookingsCount', function() {
      it('should call bookingsGetBookingsCount successfully', function(done) {
        //uncomment below and update the code to test bookingsGetBookingsCount
        //instance.bookingsGetBookingsCount(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('bookingsGetReservation', function() {
      it('should call bookingsGetReservation successfully', function(done) {
        //uncomment below and update the code to test bookingsGetReservation
        //instance.bookingsGetReservation(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('bookingsPatch', function() {
      it('should call bookingsPatch successfully', function(done) {
        //uncomment below and update the code to test bookingsPatch
        //instance.bookingsPatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('bookingsPaymentToken', function() {
      it('should call bookingsPaymentToken successfully', function(done) {
        //uncomment below and update the code to test bookingsPaymentToken
        //instance.bookingsPaymentToken(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('bookingsPostRoomAssignment', function() {
      it('should call bookingsPostRoomAssignment successfully', function(done) {
        //uncomment below and update the code to test bookingsPostRoomAssignment
        //instance.bookingsPostRoomAssignment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('bookingsTerminalAuthorization', function() {
      it('should call bookingsTerminalAuthorization successfully', function(done) {
        //uncomment below and update the code to test bookingsTerminalAuthorization
        //instance.bookingsTerminalAuthorization(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
