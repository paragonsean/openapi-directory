/**
 * hetras Booking API Version 0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DailyRoomRate from './DailyRoomRate';
import Restrictions from './Restrictions';

/**
 * The DailyRateRoomOffer model module.
 * @module model/DailyRateRoomOffer
 * @version v0
 */
class DailyRateRoomOffer {
    /**
     * Constructs a new <code>DailyRateRoomOffer</code>.
     * @alias module:model/DailyRateRoomOffer
     */
    constructor() { 
        
        DailyRateRoomOffer.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DailyRateRoomOffer</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DailyRateRoomOffer} obj Optional instance to populate.
     * @return {module:model/DailyRateRoomOffer} The populated <code>DailyRateRoomOffer</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DailyRateRoomOffer();

            if (data.hasOwnProperty('available_rooms_count')) {
                obj['available_rooms_count'] = ApiClient.convertToType(data['available_rooms_count'], 'Number');
            }
            if (data.hasOwnProperty('is_available')) {
                obj['is_available'] = ApiClient.convertToType(data['is_available'], 'Boolean');
            }
            if (data.hasOwnProperty('rates')) {
                obj['rates'] = ApiClient.convertToType(data['rates'], [DailyRoomRate]);
            }
            if (data.hasOwnProperty('restrictions')) {
                obj['restrictions'] = Restrictions.constructFromObject(data['restrictions']);
            }
            if (data.hasOwnProperty('room_type_code')) {
                obj['room_type_code'] = ApiClient.convertToType(data['room_type_code'], 'String');
            }
            if (data.hasOwnProperty('unavailable_reason')) {
                obj['unavailable_reason'] = ApiClient.convertToType(data['unavailable_reason'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DailyRateRoomOffer</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DailyRateRoomOffer</code>.
     */
    static validateJSON(data) {
        if (data['rates']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['rates'])) {
                throw new Error("Expected the field `rates` to be an array in the JSON data but got " + data['rates']);
            }
            // validate the optional field `rates` (array)
            for (const item of data['rates']) {
                DailyRoomRate.validateJSON(item);
            };
        }
        // validate the optional field `restrictions`
        if (data['restrictions']) { // data not null
          Restrictions.validateJSON(data['restrictions']);
        }
        // ensure the json data is a string
        if (data['room_type_code'] && !(typeof data['room_type_code'] === 'string' || data['room_type_code'] instanceof String)) {
            throw new Error("Expected the field `room_type_code` to be a primitive type in the JSON string but got " + data['room_type_code']);
        }
        // ensure the json data is a string
        if (data['unavailable_reason'] && !(typeof data['unavailable_reason'] === 'string' || data['unavailable_reason'] instanceof String)) {
            throw new Error("Expected the field `unavailable_reason` to be a primitive type in the JSON string but got " + data['unavailable_reason']);
        }

        return true;
    }


}



/**
 * @member {Number} available_rooms_count
 */
DailyRateRoomOffer.prototype['available_rooms_count'] = undefined;

/**
 * @member {Boolean} is_available
 */
DailyRateRoomOffer.prototype['is_available'] = undefined;

/**
 * @member {Array.<module:model/DailyRoomRate>} rates
 */
DailyRateRoomOffer.prototype['rates'] = undefined;

/**
 * @member {module:model/Restrictions} restrictions
 */
DailyRateRoomOffer.prototype['restrictions'] = undefined;

/**
 * @member {String} room_type_code
 */
DailyRateRoomOffer.prototype['room_type_code'] = undefined;

/**
 * If there is an issue and this room offer is unavailable (IsAvailable=false) this message may be not empty.
 * @member {String} unavailable_reason
 */
DailyRateRoomOffer.prototype['unavailable_reason'] = undefined;






export default DailyRateRoomOffer;

