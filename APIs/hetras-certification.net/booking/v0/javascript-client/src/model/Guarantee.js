/**
 * hetras Booking API Version 0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Token from './Token';

/**
 * The Guarantee model module.
 * @module model/Guarantee
 * @version v0
 */
class Guarantee {
    /**
     * Constructs a new <code>Guarantee</code>.
     * @alias module:model/Guarantee
     */
    constructor() { 
        
        Guarantee.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Guarantee</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Guarantee} obj Optional instance to populate.
     * @return {module:model/Guarantee} The populated <code>Guarantee</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Guarantee();

            if (data.hasOwnProperty('guarantee_type')) {
                obj['guarantee_type'] = ApiClient.convertToType(data['guarantee_type'], 'String');
            }
            if (data.hasOwnProperty('token')) {
                obj['token'] = Token.constructFromObject(data['token']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Guarantee</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Guarantee</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['guarantee_type'] && !(typeof data['guarantee_type'] === 'string' || data['guarantee_type'] instanceof String)) {
            throw new Error("Expected the field `guarantee_type` to be a primitive type in the JSON string but got " + data['guarantee_type']);
        }
        // validate the optional field `token`
        if (data['token']) { // data not null
          Token.validateJSON(data['token']);
        }

        return true;
    }


}



/**
 * One of the accepted guarantee types from the offer you selected out of the rates response
 * @member {module:model/Guarantee.GuaranteeTypeEnum} guarantee_type
 */
Guarantee.prototype['guarantee_type'] = undefined;

/**
 * @member {module:model/Token} token
 */
Guarantee.prototype['token'] = undefined;





/**
 * Allowed values for the <code>guarantee_type</code> property.
 * @enum {String}
 * @readonly
 */
Guarantee['GuaranteeTypeEnum'] = {

    /**
     * value: "PM4Hold"
     * @const
     */
    "PM4Hold": "PM4Hold",

    /**
     * value: "PM6Hold"
     * @const
     */
    "PM6Hold": "PM6Hold",

    /**
     * value: "GuaranteeToCreditCard"
     * @const
     */
    "GuaranteeToCreditCard": "GuaranteeToCreditCard",

    /**
     * value: "GuaranteeToGuestAccount"
     * @const
     */
    "GuaranteeToGuestAccount": "GuaranteeToGuestAccount",

    /**
     * value: "GuaranteeByTravelAgent"
     * @const
     */
    "GuaranteeByTravelAgent": "GuaranteeByTravelAgent",

    /**
     * value: "GuaranteeByCompany"
     * @const
     */
    "GuaranteeByCompany": "GuaranteeByCompany",

    /**
     * value: "Deposit"
     * @const
     */
    "Deposit": "Deposit",

    /**
     * value: "Voucher"
     * @const
     */
    "Voucher": "Voucher",

    /**
     * value: "Prepayment"
     * @const
     */
    "Prepayment": "Prepayment",

    /**
     * value: "NonGuaranteed"
     * @const
     */
    "NonGuaranteed": "NonGuaranteed",

    /**
     * value: "Tentative"
     * @const
     */
    "Tentative": "Tentative",

    /**
     * value: "Waitlist"
     * @const
     */
    "Waitlist": "Waitlist"
};



export default Guarantee;

