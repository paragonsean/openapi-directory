/**
 * hetras Booking API Version 0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GetAvailabilityRequest model module.
 * @module model/GetAvailabilityRequest
 * @version v0
 */
class GetAvailabilityRequest {
    /**
     * Constructs a new <code>GetAvailabilityRequest</code>.
     * @alias module:model/GetAvailabilityRequest
     * @param from {Date} Defines the first business day you would like to get availability numbers for.
     * @param hotelId {Number} Specifies the hotel id to request the availability for.
     * @param to {Date} Defines the last business day you would like to get availability numbers for. The maximum time span between <i>from</i>´and <i>to</i>              is limited to 365 days.
     */
    constructor(from, hotelId, to) { 
        
        GetAvailabilityRequest.initialize(this, from, hotelId, to);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, from, hotelId, to) { 
        obj['from'] = from;
        obj['hotelId'] = hotelId;
        obj['to'] = to;
    }

    /**
     * Constructs a <code>GetAvailabilityRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetAvailabilityRequest} obj Optional instance to populate.
     * @return {module:model/GetAvailabilityRequest} The populated <code>GetAvailabilityRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetAvailabilityRequest();

            if (data.hasOwnProperty('expand')) {
                obj['expand'] = ApiClient.convertToType(data['expand'], 'String');
            }
            if (data.hasOwnProperty('from')) {
                obj['from'] = ApiClient.convertToType(data['from'], 'Date');
            }
            if (data.hasOwnProperty('hotelId')) {
                obj['hotelId'] = ApiClient.convertToType(data['hotelId'], 'Number');
            }
            if (data.hasOwnProperty('to')) {
                obj['to'] = ApiClient.convertToType(data['to'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetAvailabilityRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetAvailabilityRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of GetAvailabilityRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['expand'] && !(typeof data['expand'] === 'string' || data['expand'] instanceof String)) {
            throw new Error("Expected the field `expand` to be a primitive type in the JSON string but got " + data['expand']);
        }

        return true;
    }


}

GetAvailabilityRequest.RequiredProperties = ["from", "hotelId", "to"];

/**
 * You can expand the room types breakdown per business day for the availibility numbers if need be.
 * @member {module:model/GetAvailabilityRequest.ExpandEnum} expand
 */
GetAvailabilityRequest.prototype['expand'] = undefined;

/**
 * Defines the first business day you would like to get availability numbers for.
 * @member {Date} from
 */
GetAvailabilityRequest.prototype['from'] = undefined;

/**
 * Specifies the hotel id to request the availability for.
 * @member {Number} hotelId
 */
GetAvailabilityRequest.prototype['hotelId'] = undefined;

/**
 * Defines the last business day you would like to get availability numbers for. The maximum time span between <i>from</i>´and <i>to</i>              is limited to 365 days.
 * @member {Date} to
 */
GetAvailabilityRequest.prototype['to'] = undefined;





/**
 * Allowed values for the <code>expand</code> property.
 * @enum {String}
 * @readonly
 */
GetAvailabilityRequest['ExpandEnum'] = {

    /**
     * value: "RoomTypes"
     * @const
     */
    "RoomTypes": "RoomTypes"
};



export default GetAvailabilityRequest;

