/**
 * hetras Booking API Version 0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BookingListReservationItem from './BookingListReservationItem';
import LinkObject from './LinkObject';

/**
 * The BookingListItem model module.
 * @module model/BookingListItem
 * @version v0
 */
class BookingListItem {
    /**
     * Constructs a new <code>BookingListItem</code>.
     * @alias module:model/BookingListItem
     */
    constructor() { 
        
        BookingListItem.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BookingListItem</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BookingListItem} obj Optional instance to populate.
     * @return {module:model/BookingListItem} The populated <code>BookingListItem</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BookingListItem();

            if (data.hasOwnProperty('_links')) {
                obj['_links'] = ApiClient.convertToType(data['_links'], {'String': LinkObject});
            }
            if (data.hasOwnProperty('confirmation_id')) {
                obj['confirmation_id'] = ApiClient.convertToType(data['confirmation_id'], 'String');
            }
            if (data.hasOwnProperty('created')) {
                obj['created'] = ApiClient.convertToType(data['created'], 'Date');
            }
            if (data.hasOwnProperty('reservations')) {
                obj['reservations'] = ApiClient.convertToType(data['reservations'], [BookingListReservationItem]);
            }
            if (data.hasOwnProperty('updated')) {
                obj['updated'] = ApiClient.convertToType(data['updated'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BookingListItem</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BookingListItem</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['confirmation_id'] && !(typeof data['confirmation_id'] === 'string' || data['confirmation_id'] instanceof String)) {
            throw new Error("Expected the field `confirmation_id` to be a primitive type in the JSON string but got " + data['confirmation_id']);
        }
        if (data['reservations']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['reservations'])) {
                throw new Error("Expected the field `reservations` to be an array in the JSON data but got " + data['reservations']);
            }
            // validate the optional field `reservations` (array)
            for (const item of data['reservations']) {
                BookingListReservationItem.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Collection of links to related resources
 * @member {Object.<String, module:model/LinkObject>} _links
 */
BookingListItem.prototype['_links'] = undefined;

/**
 * The confirmation id for the booking which the guest can use to check in on the kiosk, add the              booking to the mobile app etc. It is used as identifier for all reservations done with the same              booking request.
 * @member {String} confirmation_id
 */
BookingListItem.prototype['confirmation_id'] = undefined;

/**
 * Timestamp the booking was created
 * @member {Date} created
 */
BookingListItem.prototype['created'] = undefined;

/**
 * Collection of reservations made with on booking request.
 * @member {Array.<module:model/BookingListReservationItem>} reservations
 */
BookingListItem.prototype['reservations'] = undefined;

/**
 * Timestamp of when the booking was changed the last time
 * @member {Date} updated
 */
BookingListItem.prototype['updated'] = undefined;






export default BookingListItem;

