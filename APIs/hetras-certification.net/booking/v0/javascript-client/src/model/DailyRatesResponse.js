/**
 * hetras Booking API Version 0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DailyCalendarRate from './DailyCalendarRate';
import DailyRateHotel from './DailyRateHotel';
import DailyRatePlan from './DailyRatePlan';
import LinkObject from './LinkObject';
import Policies from './Policies';
import RoomType from './RoomType';

/**
 * The DailyRatesResponse model module.
 * @module model/DailyRatesResponse
 * @version v0
 */
class DailyRatesResponse {
    /**
     * Constructs a new <code>DailyRatesResponse</code>.
     * @alias module:model/DailyRatesResponse
     */
    constructor() { 
        
        DailyRatesResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DailyRatesResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DailyRatesResponse} obj Optional instance to populate.
     * @return {module:model/DailyRatesResponse} The populated <code>DailyRatesResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DailyRatesResponse();

            if (data.hasOwnProperty('_count')) {
                obj['_count'] = ApiClient.convertToType(data['_count'], 'Number');
            }
            if (data.hasOwnProperty('_links')) {
                obj['_links'] = ApiClient.convertToType(data['_links'], {'String': LinkObject});
            }
            if (data.hasOwnProperty('daily_rates')) {
                obj['daily_rates'] = ApiClient.convertToType(data['daily_rates'], [DailyCalendarRate]);
            }
            if (data.hasOwnProperty('hotel')) {
                obj['hotel'] = DailyRateHotel.constructFromObject(data['hotel']);
            }
            if (data.hasOwnProperty('policies')) {
                obj['policies'] = Policies.constructFromObject(data['policies']);
            }
            if (data.hasOwnProperty('rateplans')) {
                obj['rateplans'] = ApiClient.convertToType(data['rateplans'], [DailyRatePlan]);
            }
            if (data.hasOwnProperty('room_types')) {
                obj['room_types'] = ApiClient.convertToType(data['room_types'], [RoomType]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DailyRatesResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DailyRatesResponse</code>.
     */
    static validateJSON(data) {
        if (data['daily_rates']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['daily_rates'])) {
                throw new Error("Expected the field `daily_rates` to be an array in the JSON data but got " + data['daily_rates']);
            }
            // validate the optional field `daily_rates` (array)
            for (const item of data['daily_rates']) {
                DailyCalendarRate.validateJSON(item);
            };
        }
        // validate the optional field `hotel`
        if (data['hotel']) { // data not null
          DailyRateHotel.validateJSON(data['hotel']);
        }
        // validate the optional field `policies`
        if (data['policies']) { // data not null
          Policies.validateJSON(data['policies']);
        }
        if (data['rateplans']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['rateplans'])) {
                throw new Error("Expected the field `rateplans` to be an array in the JSON data but got " + data['rateplans']);
            }
            // validate the optional field `rateplans` (array)
            for (const item of data['rateplans']) {
                DailyRatePlan.validateJSON(item);
            };
        }
        if (data['room_types']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['room_types'])) {
                throw new Error("Expected the field `room_types` to be an array in the JSON data but got " + data['room_types']);
            }
            // validate the optional field `room_types` (array)
            for (const item of data['room_types']) {
                RoomType.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * The number of items matching your request in total for all pages.
 * @member {Number} _count
 */
DailyRatesResponse.prototype['_count'] = undefined;

/**
 * Collection of links to related resources
 * @member {Object.<String, module:model/LinkObject>} _links
 */
DailyRatesResponse.prototype['_links'] = undefined;

/**
 * @member {Array.<module:model/DailyCalendarRate>} daily_rates
 */
DailyRatesResponse.prototype['daily_rates'] = undefined;

/**
 * @member {module:model/DailyRateHotel} hotel
 */
DailyRatesResponse.prototype['hotel'] = undefined;

/**
 * @member {module:model/Policies} policies
 */
DailyRatesResponse.prototype['policies'] = undefined;

/**
 * @member {Array.<module:model/DailyRatePlan>} rateplans
 */
DailyRatesResponse.prototype['rateplans'] = undefined;

/**
 * @member {Array.<module:model/RoomType>} room_types
 */
DailyRatesResponse.prototype['room_types'] = undefined;






export default DailyRatesResponse;

