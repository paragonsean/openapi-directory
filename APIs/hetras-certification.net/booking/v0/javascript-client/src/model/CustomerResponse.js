/**
 * hetras Booking API Version 0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import LinkObject from './LinkObject';
import MailingAddress from './MailingAddress';

/**
 * The CustomerResponse model module.
 * @module model/CustomerResponse
 * @version v0
 */
class CustomerResponse {
    /**
     * Constructs a new <code>CustomerResponse</code>.
     * @alias module:model/CustomerResponse
     */
    constructor() { 
        
        CustomerResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CustomerResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CustomerResponse} obj Optional instance to populate.
     * @return {module:model/CustomerResponse} The populated <code>CustomerResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CustomerResponse();

            if (data.hasOwnProperty('_links')) {
                obj['_links'] = ApiClient.convertToType(data['_links'], {'String': LinkObject});
            }
            if (data.hasOwnProperty('customer_id')) {
                obj['customer_id'] = ApiClient.convertToType(data['customer_id'], 'String');
            }
            if (data.hasOwnProperty('email')) {
                obj['email'] = ApiClient.convertToType(data['email'], 'String');
            }
            if (data.hasOwnProperty('first_name')) {
                obj['first_name'] = ApiClient.convertToType(data['first_name'], 'String');
            }
            if (data.hasOwnProperty('gender')) {
                obj['gender'] = ApiClient.convertToType(data['gender'], 'String');
            }
            if (data.hasOwnProperty('last_name')) {
                obj['last_name'] = ApiClient.convertToType(data['last_name'], 'String');
            }
            if (data.hasOwnProperty('mailing_address')) {
                obj['mailing_address'] = MailingAddress.constructFromObject(data['mailing_address']);
            }
            if (data.hasOwnProperty('nationality')) {
                obj['nationality'] = ApiClient.convertToType(data['nationality'], 'String');
            }
            if (data.hasOwnProperty('phone')) {
                obj['phone'] = ApiClient.convertToType(data['phone'], 'String');
            }
            if (data.hasOwnProperty('primary')) {
                obj['primary'] = ApiClient.convertToType(data['primary'], 'Boolean');
            }
            if (data.hasOwnProperty('subscribed_consents')) {
                obj['subscribed_consents'] = ApiClient.convertToType(data['subscribed_consents'], ['String']);
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CustomerResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CustomerResponse</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['customer_id'] && !(typeof data['customer_id'] === 'string' || data['customer_id'] instanceof String)) {
            throw new Error("Expected the field `customer_id` to be a primitive type in the JSON string but got " + data['customer_id']);
        }
        // ensure the json data is a string
        if (data['email'] && !(typeof data['email'] === 'string' || data['email'] instanceof String)) {
            throw new Error("Expected the field `email` to be a primitive type in the JSON string but got " + data['email']);
        }
        // ensure the json data is a string
        if (data['first_name'] && !(typeof data['first_name'] === 'string' || data['first_name'] instanceof String)) {
            throw new Error("Expected the field `first_name` to be a primitive type in the JSON string but got " + data['first_name']);
        }
        // ensure the json data is a string
        if (data['gender'] && !(typeof data['gender'] === 'string' || data['gender'] instanceof String)) {
            throw new Error("Expected the field `gender` to be a primitive type in the JSON string but got " + data['gender']);
        }
        // ensure the json data is a string
        if (data['last_name'] && !(typeof data['last_name'] === 'string' || data['last_name'] instanceof String)) {
            throw new Error("Expected the field `last_name` to be a primitive type in the JSON string but got " + data['last_name']);
        }
        // validate the optional field `mailing_address`
        if (data['mailing_address']) { // data not null
          MailingAddress.validateJSON(data['mailing_address']);
        }
        // ensure the json data is a string
        if (data['nationality'] && !(typeof data['nationality'] === 'string' || data['nationality'] instanceof String)) {
            throw new Error("Expected the field `nationality` to be a primitive type in the JSON string but got " + data['nationality']);
        }
        // ensure the json data is a string
        if (data['phone'] && !(typeof data['phone'] === 'string' || data['phone'] instanceof String)) {
            throw new Error("Expected the field `phone` to be a primitive type in the JSON string but got " + data['phone']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['subscribed_consents'])) {
            throw new Error("Expected the field `subscribed_consents` to be an array in the JSON data but got " + data['subscribed_consents']);
        }
        // ensure the json data is a string
        if (data['title'] && !(typeof data['title'] === 'string' || data['title'] instanceof String)) {
            throw new Error("Expected the field `title` to be a primitive type in the JSON string but got " + data['title']);
        }

        return true;
    }


}



/**
 * Collection of links to related resources
 * @member {Object.<String, module:model/LinkObject>} _links
 */
CustomerResponse.prototype['_links'] = undefined;

/**
 * The id of a customer profile. The id is build out of the Supplier Code a dash and the profile id              shown in the hetras UI. An example id on the API for a profile with id 12345 on the level of supplier ABC               would be ABC-12345
 * @member {String} customer_id
 */
CustomerResponse.prototype['customer_id'] = undefined;

/**
 * The primary email address of the guest
 * @member {String} email
 */
CustomerResponse.prototype['email'] = undefined;

/**
 * First name of the guest
 * @member {String} first_name
 */
CustomerResponse.prototype['first_name'] = undefined;

/**
 * Gender
 * @member {module:model/CustomerResponse.GenderEnum} gender
 */
CustomerResponse.prototype['gender'] = undefined;

/**
 * Last name of the guest
 * @member {String} last_name
 */
CustomerResponse.prototype['last_name'] = undefined;

/**
 * @member {module:model/MailingAddress} mailing_address
 */
CustomerResponse.prototype['mailing_address'] = undefined;

/**
 * The nationality of the guest in ISO 3166-1 alpha-2 format              (see: http://www.iso.org/iso/country_codes/iso_3166_code_lists/country_names_and_code_elements.htm)
 * @member {String} nationality
 */
CustomerResponse.prototype['nationality'] = undefined;

/**
 * The primary phone number of the guest
 * @member {String} phone
 */
CustomerResponse.prototype['phone'] = undefined;

/**
 * Defines if the guest is the primary guest of the reservation
 * @member {Boolean} primary
 */
CustomerResponse.prototype['primary'] = undefined;

/**
 * Gets or sets the list of consents subscribed by customer
 * @member {Array.<String>} subscribed_consents
 */
CustomerResponse.prototype['subscribed_consents'] = undefined;

/**
 * Title of the guest. Needs to be taken from the available titles defined in the codes
 * @member {String} title
 */
CustomerResponse.prototype['title'] = undefined;





/**
 * Allowed values for the <code>gender</code> property.
 * @enum {String}
 * @readonly
 */
CustomerResponse['GenderEnum'] = {

    /**
     * value: "Unspecified"
     * @const
     */
    "Unspecified": "Unspecified",

    /**
     * value: "Male"
     * @const
     */
    "Male": "Male",

    /**
     * value: "Female"
     * @const
     */
    "Female": "Female"
};



export default CustomerResponse;

