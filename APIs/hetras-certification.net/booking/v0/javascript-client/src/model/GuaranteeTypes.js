/**
 * hetras Booking API Version 0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GuaranteeTypes model module.
 * @module model/GuaranteeTypes
 * @version v0
 */
class GuaranteeTypes {
    /**
     * Constructs a new <code>GuaranteeTypes</code>.
     * @alias module:model/GuaranteeTypes
     */
    constructor() { 
        
        GuaranteeTypes.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GuaranteeTypes</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GuaranteeTypes} obj Optional instance to populate.
     * @return {module:model/GuaranteeTypes} The populated <code>GuaranteeTypes</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GuaranteeTypes();

            if (data.hasOwnProperty('accepted')) {
                obj['accepted'] = ApiClient.convertToType(data['accepted'], ['String']);
            }
            if (data.hasOwnProperty('code')) {
                obj['code'] = ApiClient.convertToType(data['code'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GuaranteeTypes</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GuaranteeTypes</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['accepted'])) {
            throw new Error("Expected the field `accepted` to be an array in the JSON data but got " + data['accepted']);
        }
        // ensure the json data is a string
        if (data['code'] && !(typeof data['code'] === 'string' || data['code'] instanceof String)) {
            throw new Error("Expected the field `code` to be a primitive type in the JSON string but got " + data['code']);
        }

        return true;
    }


}



/**
 * @member {Array.<module:model/GuaranteeTypes.AcceptedEnum>} accepted
 */
GuaranteeTypes.prototype['accepted'] = undefined;

/**
 * @member {String} code
 */
GuaranteeTypes.prototype['code'] = undefined;





/**
 * Allowed values for the <code>accepted</code> property.
 * @enum {String}
 * @readonly
 */
GuaranteeTypes['AcceptedEnum'] = {

    /**
     * value: "PM4Hold"
     * @const
     */
    "PM4Hold": "PM4Hold",

    /**
     * value: "PM6Hold"
     * @const
     */
    "PM6Hold": "PM6Hold",

    /**
     * value: "GuaranteeByCompany"
     * @const
     */
    "GuaranteeByCompany": "GuaranteeByCompany",

    /**
     * value: "GuaranteeByTravelAgent"
     * @const
     */
    "GuaranteeByTravelAgent": "GuaranteeByTravelAgent",

    /**
     * value: "GuaranteeToGuestAccount"
     * @const
     */
    "GuaranteeToGuestAccount": "GuaranteeToGuestAccount",

    /**
     * value: "GuaranteeToCreditCard"
     * @const
     */
    "GuaranteeToCreditCard": "GuaranteeToCreditCard",

    /**
     * value: "Deposit"
     * @const
     */
    "Deposit": "Deposit",

    /**
     * value: "Prepayment"
     * @const
     */
    "Prepayment": "Prepayment",

    /**
     * value: "NonGuaranteed"
     * @const
     */
    "NonGuaranteed": "NonGuaranteed"
};



export default GuaranteeTypes;

