/**
 * hetras Booking API Version 0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GetDailyRatesRequest model module.
 * @module model/GetDailyRatesRequest
 * @version v0
 */
class GetDailyRatesRequest {
    /**
     * Constructs a new <code>GetDailyRatesRequest</code>.
     * @alias module:model/GetDailyRatesRequest
     * @param channelCode {String} Define the channel code in order to look up the rates for.
     * @param from {Date} Define the first business day you would like to get availability numbers for. The day should not be in the past.
     * @param hotelId {Number} Define the hotel id to request the availability for.
     * @param to {Date} Define the last business day you would like to get rates for (inclusive). The maximum time span between <i>'From'</i> and <i>'To'</i>              is limited to 365 days. This can't be less than the 'From' date.
     */
    constructor(channelCode, from, hotelId, to) { 
        
        GetDailyRatesRequest.initialize(this, channelCode, from, hotelId, to);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, channelCode, from, hotelId, to) { 
        obj['channelCode'] = channelCode;
        obj['from'] = from;
        obj['hotelId'] = hotelId;
        obj['to'] = to;
    }

    /**
     * Constructs a <code>GetDailyRatesRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetDailyRatesRequest} obj Optional instance to populate.
     * @return {module:model/GetDailyRatesRequest} The populated <code>GetDailyRatesRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetDailyRatesRequest();

            if (data.hasOwnProperty('channelCode')) {
                obj['channelCode'] = ApiClient.convertToType(data['channelCode'], 'String');
            }
            if (data.hasOwnProperty('expand')) {
                obj['expand'] = ApiClient.convertToType(data['expand'], ['String']);
            }
            if (data.hasOwnProperty('from')) {
                obj['from'] = ApiClient.convertToType(data['from'], 'Date');
            }
            if (data.hasOwnProperty('hotelId')) {
                obj['hotelId'] = ApiClient.convertToType(data['hotelId'], 'Number');
            }
            if (data.hasOwnProperty('ratePlanCodes')) {
                obj['ratePlanCodes'] = ApiClient.convertToType(data['ratePlanCodes'], ['String']);
            }
            if (data.hasOwnProperty('to')) {
                obj['to'] = ApiClient.convertToType(data['to'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetDailyRatesRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetDailyRatesRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of GetDailyRatesRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['channelCode'] && !(typeof data['channelCode'] === 'string' || data['channelCode'] instanceof String)) {
            throw new Error("Expected the field `channelCode` to be a primitive type in the JSON string but got " + data['channelCode']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['expand'])) {
            throw new Error("Expected the field `expand` to be an array in the JSON data but got " + data['expand']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['ratePlanCodes'])) {
            throw new Error("Expected the field `ratePlanCodes` to be an array in the JSON data but got " + data['ratePlanCodes']);
        }

        return true;
    }


}

GetDailyRatesRequest.RequiredProperties = ["channelCode", "from", "hotelId", "to"];

/**
 * Define the channel code in order to look up the rates for.
 * @member {String} channelCode
 */
GetDailyRatesRequest.prototype['channelCode'] = undefined;

/**
 * Define the sections you want to expand and get informed about rates for.
 * @member {Array.<module:model/GetDailyRatesRequest.ExpandEnum>} expand
 */
GetDailyRatesRequest.prototype['expand'] = undefined;

/**
 * Define the first business day you would like to get availability numbers for. The day should not be in the past.
 * @member {Date} from
 */
GetDailyRatesRequest.prototype['from'] = undefined;

/**
 * Define the hotel id to request the availability for.
 * @member {Number} hotelId
 */
GetDailyRatesRequest.prototype['hotelId'] = undefined;

/**
 * Define the codes of rate plans to show in the response. A list of comma ',' separated rate plan codes.
 * @member {Array.<String>} ratePlanCodes
 */
GetDailyRatesRequest.prototype['ratePlanCodes'] = undefined;

/**
 * Define the last business day you would like to get rates for (inclusive). The maximum time span between <i>'From'</i> and <i>'To'</i>              is limited to 365 days. This can't be less than the 'From' date.
 * @member {Date} to
 */
GetDailyRatesRequest.prototype['to'] = undefined;





/**
 * Allowed values for the <code>expand</code> property.
 * @enum {String}
 * @readonly
 */
GetDailyRatesRequest['ExpandEnum'] = {

    /**
     * value: "None"
     * @const
     */
    "None": "None",

    /**
     * value: "Policies"
     * @const
     */
    "Policies": "Policies",

    /**
     * value: "RatePlans"
     * @const
     */
    "RatePlans": "RatePlans"
};



export default GetDailyRatesRequest;

