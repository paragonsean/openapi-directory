/**
 * hetras Booking API Version 0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AvailabilityResponse from '../model/AvailabilityResponse';

/**
* Availability service.
* @module api/AvailabilityApi
* @version v0
*/
export default class AvailabilityApi {

    /**
    * Constructs a new AvailabilityApi. 
    * @alias module:api/AvailabilityApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the availabilityGet operation.
     * @callback module:api/AvailabilityApi~availabilityGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AvailabilityResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the availability and occupancy for a specific hotel and timespan.
     * Read past occupancy and future availability for a specific hotel. You can also request the breakdown per room type.
     * @param {String} appId Application identifier
     * @param {String} appKey Application key.
     * @param {Number} hotelId Specifies the hotel id to request the availability for.
     * @param {Date} from Defines the first business day you would like to get availability numbers for.
     * @param {Date} to Defines the last business day you would like to get availability numbers for. The maximum time span between <i>from</i>Â´and <i>to</i>              is limited to 365 days.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [expand] You can expand the room types breakdown per business day for the availibility numbers if need be.
     * @param {Number} [skip] Amount of items to skip.
     * @param {Number} [top] Amount of items to select.
     * @param {module:model/String} [inlinecount] Return total number of items for a given filter criteria.
     * @param {module:api/AvailabilityApi~availabilityGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AvailabilityResponse}
     */
    availabilityGet(appId, appKey, hotelId, from, to, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'appId' is set
      if (appId === undefined || appId === null) {
        throw new Error("Missing the required parameter 'appId' when calling availabilityGet");
      }
      // verify the required parameter 'appKey' is set
      if (appKey === undefined || appKey === null) {
        throw new Error("Missing the required parameter 'appKey' when calling availabilityGet");
      }
      // verify the required parameter 'hotelId' is set
      if (hotelId === undefined || hotelId === null) {
        throw new Error("Missing the required parameter 'hotelId' when calling availabilityGet");
      }
      // verify the required parameter 'from' is set
      if (from === undefined || from === null) {
        throw new Error("Missing the required parameter 'from' when calling availabilityGet");
      }
      // verify the required parameter 'to' is set
      if (to === undefined || to === null) {
        throw new Error("Missing the required parameter 'to' when calling availabilityGet");
      }

      let pathParams = {
      };
      let queryParams = {
        'hotelId': hotelId,
        'from': from,
        'to': to,
        'expand': opts['expand'],
        'skip': opts['skip'],
        'top': opts['top'],
        'inlinecount': opts['inlinecount']
      };
      let headerParams = {
        'App-Id': appId,
        'App-Key': appKey
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json'];
      let returnType = AvailabilityResponse;
      return this.apiClient.callApi(
        '/api/booking/v0/availability', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
