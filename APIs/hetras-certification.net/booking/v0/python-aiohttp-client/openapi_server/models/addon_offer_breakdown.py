# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AddonOfferBreakdown(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, business_day: datetime=None, currency: str=None, included_tax: float=None, rate: float=None):
        """AddonOfferBreakdown - a model defined in OpenAPI

        :param business_day: The business_day of this AddonOfferBreakdown.
        :param currency: The currency of this AddonOfferBreakdown.
        :param included_tax: The included_tax of this AddonOfferBreakdown.
        :param rate: The rate of this AddonOfferBreakdown.
        """
        self.openapi_types = {
            'business_day': datetime,
            'currency': str,
            'included_tax': float,
            'rate': float
        }

        self.attribute_map = {
            'business_day': 'business_day',
            'currency': 'currency',
            'included_tax': 'included_tax',
            'rate': 'rate'
        }

        self._business_day = business_day
        self._currency = currency
        self._included_tax = included_tax
        self._rate = rate

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AddonOfferBreakdown':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AddonOfferBreakdown of this AddonOfferBreakdown.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def business_day(self):
        """Gets the business_day of this AddonOfferBreakdown.

        The business day the price for the addon service will be posted to the folio of the reservation

        :return: The business_day of this AddonOfferBreakdown.
        :rtype: datetime
        """
        return self._business_day

    @business_day.setter
    def business_day(self, business_day):
        """Sets the business_day of this AddonOfferBreakdown.

        The business day the price for the addon service will be posted to the folio of the reservation

        :param business_day: The business_day of this AddonOfferBreakdown.
        :type business_day: datetime
        """

        self._business_day = business_day

    @property
    def currency(self):
        """Gets the currency of this AddonOfferBreakdown.

        The currency the addon service will be charged in.

        :return: The currency of this AddonOfferBreakdown.
        :rtype: str
        """
        return self._currency

    @currency.setter
    def currency(self, currency):
        """Sets the currency of this AddonOfferBreakdown.

        The currency the addon service will be charged in.

        :param currency: The currency of this AddonOfferBreakdown.
        :type currency: str
        """

        self._currency = currency

    @property
    def included_tax(self):
        """Gets the included_tax of this AddonOfferBreakdown.

        The amount of taxes already included in the gross rate of the addon service also calculated for all rooms and              all persons.

        :return: The included_tax of this AddonOfferBreakdown.
        :rtype: float
        """
        return self._included_tax

    @included_tax.setter
    def included_tax(self, included_tax):
        """Sets the included_tax of this AddonOfferBreakdown.

        The amount of taxes already included in the gross rate of the addon service also calculated for all rooms and              all persons.

        :param included_tax: The included_tax of this AddonOfferBreakdown.
        :type included_tax: float
        """

        self._included_tax = included_tax

    @property
    def rate(self):
        """Gets the rate of this AddonOfferBreakdown.

        The gross rate of the addon service. It is the price calculated for all rooms and all persons.

        :return: The rate of this AddonOfferBreakdown.
        :rtype: float
        """
        return self._rate

    @rate.setter
    def rate(self, rate):
        """Sets the rate of this AddonOfferBreakdown.

        The gross rate of the addon service. It is the price calculated for all rooms and all persons.

        :param rate: The rate of this AddonOfferBreakdown.
        :type rate: float
        """

        self._rate = rate
