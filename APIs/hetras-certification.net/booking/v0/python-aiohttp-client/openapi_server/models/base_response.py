# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BaseResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, warnings: List[str]=None):
        """BaseResponse - a model defined in OpenAPI

        :param warnings: The warnings of this BaseResponse.
        """
        self.openapi_types = {
            'warnings': List[str]
        }

        self.attribute_map = {
            'warnings': '_warnings'
        }

        self._warnings = warnings

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BaseResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BaseResponse of this BaseResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def warnings(self):
        """Gets the warnings of this BaseResponse.

        Warnings that came up when your request was processed. Your request will still be processed successfull when              you see such warnings in your response

        :return: The warnings of this BaseResponse.
        :rtype: List[str]
        """
        return self._warnings

    @warnings.setter
    def warnings(self, warnings):
        """Sets the warnings of this BaseResponse.

        Warnings that came up when your request was processed. Your request will still be processed successfull when              you see such warnings in your response

        :param warnings: The warnings of this BaseResponse.
        :type warnings: List[str]
        """

        self._warnings = warnings
