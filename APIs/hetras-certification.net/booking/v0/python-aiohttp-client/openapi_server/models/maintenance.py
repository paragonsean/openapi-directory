# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Maintenance(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, out_of_inventory: int=None, out_of_order: int=None, out_of_service: int=None):
        """Maintenance - a model defined in OpenAPI

        :param out_of_inventory: The out_of_inventory of this Maintenance.
        :param out_of_order: The out_of_order of this Maintenance.
        :param out_of_service: The out_of_service of this Maintenance.
        """
        self.openapi_types = {
            'out_of_inventory': int,
            'out_of_order': int,
            'out_of_service': int
        }

        self.attribute_map = {
            'out_of_inventory': 'out_of_inventory',
            'out_of_order': 'out_of_order',
            'out_of_service': 'out_of_service'
        }

        self._out_of_inventory = out_of_inventory
        self._out_of_order = out_of_order
        self._out_of_service = out_of_service

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Maintenance':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Maintenance of this Maintenance.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def out_of_inventory(self):
        """Gets the out_of_inventory of this Maintenance.

        Number of rooms set to OutOfInventory

        :return: The out_of_inventory of this Maintenance.
        :rtype: int
        """
        return self._out_of_inventory

    @out_of_inventory.setter
    def out_of_inventory(self, out_of_inventory):
        """Sets the out_of_inventory of this Maintenance.

        Number of rooms set to OutOfInventory

        :param out_of_inventory: The out_of_inventory of this Maintenance.
        :type out_of_inventory: int
        """

        self._out_of_inventory = out_of_inventory

    @property
    def out_of_order(self):
        """Gets the out_of_order of this Maintenance.

        Number of rooms set to OutOfOrder

        :return: The out_of_order of this Maintenance.
        :rtype: int
        """
        return self._out_of_order

    @out_of_order.setter
    def out_of_order(self, out_of_order):
        """Sets the out_of_order of this Maintenance.

        Number of rooms set to OutOfOrder

        :param out_of_order: The out_of_order of this Maintenance.
        :type out_of_order: int
        """

        self._out_of_order = out_of_order

    @property
    def out_of_service(self):
        """Gets the out_of_service of this Maintenance.

        Number of rooms set to OutOfService

        :return: The out_of_service of this Maintenance.
        :rtype: int
        """
        return self._out_of_service

    @out_of_service.setter
    def out_of_service(self, out_of_service):
        """Sets the out_of_service of this Maintenance.

        Number of rooms set to OutOfService

        :param out_of_service: The out_of_service of this Maintenance.
        :type out_of_service: int
        """

        self._out_of_service = out_of_service
