# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.addon_offer import AddonOffer
from openapi_server.models.rate_plan import RatePlan
from openapi_server.models.reservation_room import ReservationRoom
from openapi_server import util


class Addons(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, addon_services: List[AddonOffer]=None, adults: int=None, arrival_date: datetime=None, departure_date: datetime=None, hotel_id: int=None, hotel_name: str=None, rate_plan: RatePlan=None, room: ReservationRoom=None, rooms: int=None):
        """Addons - a model defined in OpenAPI

        :param addon_services: The addon_services of this Addons.
        :param adults: The adults of this Addons.
        :param arrival_date: The arrival_date of this Addons.
        :param departure_date: The departure_date of this Addons.
        :param hotel_id: The hotel_id of this Addons.
        :param hotel_name: The hotel_name of this Addons.
        :param rate_plan: The rate_plan of this Addons.
        :param room: The room of this Addons.
        :param rooms: The rooms of this Addons.
        """
        self.openapi_types = {
            'addon_services': List[AddonOffer],
            'adults': int,
            'arrival_date': datetime,
            'departure_date': datetime,
            'hotel_id': int,
            'hotel_name': str,
            'rate_plan': RatePlan,
            'room': ReservationRoom,
            'rooms': int
        }

        self.attribute_map = {
            'addon_services': 'addon_services',
            'adults': 'adults',
            'arrival_date': 'arrival_date',
            'departure_date': 'departure_date',
            'hotel_id': 'hotel_id',
            'hotel_name': 'hotel_name',
            'rate_plan': 'rate_plan',
            'room': 'room',
            'rooms': 'rooms'
        }

        self._addon_services = addon_services
        self._adults = adults
        self._arrival_date = arrival_date
        self._departure_date = departure_date
        self._hotel_id = hotel_id
        self._hotel_name = hotel_name
        self._rate_plan = rate_plan
        self._room = room
        self._rooms = rooms

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Addons':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Addons of this Addons.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def addon_services(self):
        """Gets the addon_services of this Addons.

        A collection of offers for addon services.

        :return: The addon_services of this Addons.
        :rtype: List[AddonOffer]
        """
        return self._addon_services

    @addon_services.setter
    def addon_services(self, addon_services):
        """Sets the addon_services of this Addons.

        A collection of offers for addon services.

        :param addon_services: The addon_services of this Addons.
        :type addon_services: List[AddonOffer]
        """

        self._addon_services = addon_services

    @property
    def adults(self):
        """Gets the adults of this Addons.

        The number of adults per room the addon offers are requested for. The rates will then already reflects this.

        :return: The adults of this Addons.
        :rtype: int
        """
        return self._adults

    @adults.setter
    def adults(self, adults):
        """Sets the adults of this Addons.

        The number of adults per room the addon offers are requested for. The rates will then already reflects this.

        :param adults: The adults of this Addons.
        :type adults: int
        """

        self._adults = adults

    @property
    def arrival_date(self):
        """Gets the arrival_date of this Addons.

        The arrival date of the reservation the addon offers are supposed to be booked on.

        :return: The arrival_date of this Addons.
        :rtype: datetime
        """
        return self._arrival_date

    @arrival_date.setter
    def arrival_date(self, arrival_date):
        """Sets the arrival_date of this Addons.

        The arrival date of the reservation the addon offers are supposed to be booked on.

        :param arrival_date: The arrival_date of this Addons.
        :type arrival_date: datetime
        """

        self._arrival_date = arrival_date

    @property
    def departure_date(self):
        """Gets the departure_date of this Addons.

        The departure date of the reservation the addon offers are supposed to be booked on.

        :return: The departure_date of this Addons.
        :rtype: datetime
        """
        return self._departure_date

    @departure_date.setter
    def departure_date(self, departure_date):
        """Sets the departure_date of this Addons.

        The departure date of the reservation the addon offers are supposed to be booked on.

        :param departure_date: The departure_date of this Addons.
        :type departure_date: datetime
        """

        self._departure_date = departure_date

    @property
    def hotel_id(self):
        """Gets the hotel_id of this Addons.

        The id of the hotel the addon offers will be valid for

        :return: The hotel_id of this Addons.
        :rtype: int
        """
        return self._hotel_id

    @hotel_id.setter
    def hotel_id(self, hotel_id):
        """Sets the hotel_id of this Addons.

        The id of the hotel the addon offers will be valid for

        :param hotel_id: The hotel_id of this Addons.
        :type hotel_id: int
        """

        self._hotel_id = hotel_id

    @property
    def hotel_name(self):
        """Gets the hotel_name of this Addons.

        The name of the hotel the addon offers will be valid for

        :return: The hotel_name of this Addons.
        :rtype: str
        """
        return self._hotel_name

    @hotel_name.setter
    def hotel_name(self, hotel_name):
        """Sets the hotel_name of this Addons.

        The name of the hotel the addon offers will be valid for

        :param hotel_name: The hotel_name of this Addons.
        :type hotel_name: str
        """

        self._hotel_name = hotel_name

    @property
    def rate_plan(self):
        """Gets the rate_plan of this Addons.


        :return: The rate_plan of this Addons.
        :rtype: RatePlan
        """
        return self._rate_plan

    @rate_plan.setter
    def rate_plan(self, rate_plan):
        """Sets the rate_plan of this Addons.


        :param rate_plan: The rate_plan of this Addons.
        :type rate_plan: RatePlan
        """

        self._rate_plan = rate_plan

    @property
    def room(self):
        """Gets the room of this Addons.


        :return: The room of this Addons.
        :rtype: ReservationRoom
        """
        return self._room

    @room.setter
    def room(self, room):
        """Sets the room of this Addons.


        :param room: The room of this Addons.
        :type room: ReservationRoom
        """

        self._room = room

    @property
    def rooms(self):
        """Gets the rooms of this Addons.

        The number of rooms the addon offers are requested for. The rates will then already reflects this.

        :return: The rooms of this Addons.
        :rtype: int
        """
        return self._rooms

    @rooms.setter
    def rooms(self, rooms):
        """Sets the rooms of this Addons.

        The number of rooms the addon offers are requested for. The rates will then already reflects this.

        :param rooms: The rooms of this Addons.
        :type rooms: int
        """

        self._rooms = rooms
