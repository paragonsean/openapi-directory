# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RoomRate(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, business_day: datetime=None, rate: float=None, rate_plan: str=None, room_type: str=None):
        """RoomRate - a model defined in OpenAPI

        :param business_day: The business_day of this RoomRate.
        :param rate: The rate of this RoomRate.
        :param rate_plan: The rate_plan of this RoomRate.
        :param room_type: The room_type of this RoomRate.
        """
        self.openapi_types = {
            'business_day': datetime,
            'rate': float,
            'rate_plan': str,
            'room_type': str
        }

        self.attribute_map = {
            'business_day': 'business_day',
            'rate': 'rate',
            'rate_plan': 'rate_plan',
            'room_type': 'room_type'
        }

        self._business_day = business_day
        self._rate = rate
        self._rate_plan = rate_plan
        self._room_type = room_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RoomRate':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RoomRate of this RoomRate.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def business_day(self):
        """Gets the business_day of this RoomRate.

        The business day the room rate will be charged

        :return: The business_day of this RoomRate.
        :rtype: datetime
        """
        return self._business_day

    @business_day.setter
    def business_day(self, business_day):
        """Sets the business_day of this RoomRate.

        The business day the room rate will be charged

        :param business_day: The business_day of this RoomRate.
        :type business_day: datetime
        """

        self._business_day = business_day

    @property
    def rate(self):
        """Gets the rate of this RoomRate.

        Total gross amount to be charged for the rate including all services of a package. Only extra taxes might              be added to the booking on top

        :return: The rate of this RoomRate.
        :rtype: float
        """
        return self._rate

    @rate.setter
    def rate(self, rate):
        """Sets the rate of this RoomRate.

        Total gross amount to be charged for the rate including all services of a package. Only extra taxes might              be added to the booking on top

        :param rate: The rate of this RoomRate.
        :type rate: float
        """

        self._rate = rate

    @property
    def rate_plan(self):
        """Gets the rate_plan of this RoomRate.

        The rate plan code for the specified business day

        :return: The rate_plan of this RoomRate.
        :rtype: str
        """
        return self._rate_plan

    @rate_plan.setter
    def rate_plan(self, rate_plan):
        """Sets the rate_plan of this RoomRate.

        The rate plan code for the specified business day

        :param rate_plan: The rate_plan of this RoomRate.
        :type rate_plan: str
        """

        self._rate_plan = rate_plan

    @property
    def room_type(self):
        """Gets the room_type of this RoomRate.

        The room type code for the specified business day

        :return: The room_type of this RoomRate.
        :rtype: str
        """
        return self._room_type

    @room_type.setter
    def room_type(self, room_type):
        """Sets the room_type of this RoomRate.

        The room type code for the specified business day

        :param room_type: The room_type of this RoomRate.
        :type room_type: str
        """

        self._room_type = room_type
