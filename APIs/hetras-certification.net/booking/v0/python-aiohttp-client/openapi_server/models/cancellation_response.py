# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CancellationResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, warnings: List[str]=None, balance: float=None, cancellation_fee: float=None, cancellation_id: str=None):
        """CancellationResponse - a model defined in OpenAPI

        :param warnings: The warnings of this CancellationResponse.
        :param balance: The balance of this CancellationResponse.
        :param cancellation_fee: The cancellation_fee of this CancellationResponse.
        :param cancellation_id: The cancellation_id of this CancellationResponse.
        """
        self.openapi_types = {
            'warnings': List[str],
            'balance': float,
            'cancellation_fee': float,
            'cancellation_id': str
        }

        self.attribute_map = {
            'warnings': '_warnings',
            'balance': 'balance',
            'cancellation_fee': 'cancellation_fee',
            'cancellation_id': 'cancellation_id'
        }

        self._warnings = warnings
        self._balance = balance
        self._cancellation_fee = cancellation_fee
        self._cancellation_id = cancellation_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CancellationResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CancellationResponse of this CancellationResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def warnings(self):
        """Gets the warnings of this CancellationResponse.

        Warnings that came up when your request was processed. Your request will still be processed successfull when              you see such warnings in your response

        :return: The warnings of this CancellationResponse.
        :rtype: List[str]
        """
        return self._warnings

    @warnings.setter
    def warnings(self, warnings):
        """Sets the warnings of this CancellationResponse.

        Warnings that came up when your request was processed. Your request will still be processed successfull when              you see such warnings in your response

        :param warnings: The warnings of this CancellationResponse.
        :type warnings: List[str]
        """

        self._warnings = warnings

    @property
    def balance(self):
        """Gets the balance of this CancellationResponse.

        The current balance on the reservations folio without the cancellation fee

        :return: The balance of this CancellationResponse.
        :rtype: float
        """
        return self._balance

    @balance.setter
    def balance(self, balance):
        """Sets the balance of this CancellationResponse.

        The current balance on the reservations folio without the cancellation fee

        :param balance: The balance of this CancellationResponse.
        :type balance: float
        """

        self._balance = balance

    @property
    def cancellation_fee(self):
        """Gets the cancellation_fee of this CancellationResponse.

        The fee that might be charged to the folio of the reservation. The cancelled reservation will              show up in the cancellation and no show processing screen and the hotel staff will either charge              the fee or waive it.

        :return: The cancellation_fee of this CancellationResponse.
        :rtype: float
        """
        return self._cancellation_fee

    @cancellation_fee.setter
    def cancellation_fee(self, cancellation_fee):
        """Sets the cancellation_fee of this CancellationResponse.

        The fee that might be charged to the folio of the reservation. The cancelled reservation will              show up in the cancellation and no show processing screen and the hotel staff will either charge              the fee or waive it.

        :param cancellation_fee: The cancellation_fee of this CancellationResponse.
        :type cancellation_fee: float
        """

        self._cancellation_fee = cancellation_fee

    @property
    def cancellation_id(self):
        """Gets the cancellation_id of this CancellationResponse.

        The id of the successful cancellation. With this id the hotel staff will be able to find the reservation

        :return: The cancellation_id of this CancellationResponse.
        :rtype: str
        """
        return self._cancellation_id

    @cancellation_id.setter
    def cancellation_id(self, cancellation_id):
        """Sets the cancellation_id of this CancellationResponse.

        The id of the successful cancellation. With this id the hotel staff will be able to find the reservation

        :param cancellation_id: The cancellation_id of this CancellationResponse.
        :type cancellation_id: str
        """

        self._cancellation_id = cancellation_id
