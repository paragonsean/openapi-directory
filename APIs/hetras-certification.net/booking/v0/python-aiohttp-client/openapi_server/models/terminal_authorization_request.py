# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TerminalAuthorizationRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, amount_to_authorize: float=None, client_identity: str=None):
        """TerminalAuthorizationRequest - a model defined in OpenAPI

        :param amount_to_authorize: The amount_to_authorize of this TerminalAuthorizationRequest.
        :param client_identity: The client_identity of this TerminalAuthorizationRequest.
        """
        self.openapi_types = {
            'amount_to_authorize': float,
            'client_identity': str
        }

        self.attribute_map = {
            'amount_to_authorize': 'amount_to_authorize',
            'client_identity': 'client_identity'
        }

        self._amount_to_authorize = amount_to_authorize
        self._client_identity = client_identity

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TerminalAuthorizationRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TerminalAuthorizationRequest of this TerminalAuthorizationRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def amount_to_authorize(self):
        """Gets the amount_to_authorize of this TerminalAuthorizationRequest.

        The amount to authorize

        :return: The amount_to_authorize of this TerminalAuthorizationRequest.
        :rtype: float
        """
        return self._amount_to_authorize

    @amount_to_authorize.setter
    def amount_to_authorize(self, amount_to_authorize):
        """Sets the amount_to_authorize of this TerminalAuthorizationRequest.

        The amount to authorize

        :param amount_to_authorize: The amount_to_authorize of this TerminalAuthorizationRequest.
        :type amount_to_authorize: float
        """

        self._amount_to_authorize = amount_to_authorize

    @property
    def client_identity(self):
        """Gets the client_identity of this TerminalAuthorizationRequest.

        Client identity

        :return: The client_identity of this TerminalAuthorizationRequest.
        :rtype: str
        """
        return self._client_identity

    @client_identity.setter
    def client_identity(self, client_identity):
        """Sets the client_identity of this TerminalAuthorizationRequest.

        Client identity

        :param client_identity: The client_identity of this TerminalAuthorizationRequest.
        :type client_identity: str
        """

        self._client_identity = client_identity
