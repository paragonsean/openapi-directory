# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DailyRoomRate(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, adults: int=None, rate: float=None):
        """DailyRoomRate - a model defined in OpenAPI

        :param adults: The adults of this DailyRoomRate.
        :param rate: The rate of this DailyRoomRate.
        """
        self.openapi_types = {
            'adults': int,
            'rate': float
        }

        self.attribute_map = {
            'adults': 'adults',
            'rate': 'rate'
        }

        self._adults = adults
        self._rate = rate

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DailyRoomRate':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DailyRoomRate of this DailyRoomRate.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def adults(self):
        """Gets the adults of this DailyRoomRate.


        :return: The adults of this DailyRoomRate.
        :rtype: int
        """
        return self._adults

    @adults.setter
    def adults(self, adults):
        """Sets the adults of this DailyRoomRate.


        :param adults: The adults of this DailyRoomRate.
        :type adults: int
        """

        self._adults = adults

    @property
    def rate(self):
        """Gets the rate of this DailyRoomRate.


        :return: The rate of this DailyRoomRate.
        :rtype: float
        """
        return self._rate

    @rate.setter
    def rate(self, rate):
        """Sets the rate of this DailyRoomRate.


        :param rate: The rate of this DailyRoomRate.
        :type rate: float
        """

        self._rate = rate
