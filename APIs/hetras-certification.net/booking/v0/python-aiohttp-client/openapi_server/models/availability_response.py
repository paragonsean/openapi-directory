# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.daily_availability import DailyAvailability
from openapi_server.models.embedded_hotel import EmbeddedHotel
from openapi_server.models.link_object import LinkObject
from openapi_server import util


class AvailabilityResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, count: int=None, links: Dict[str, LinkObject]=None, daily_availabilities: List[DailyAvailability]=None, hotel: EmbeddedHotel=None):
        """AvailabilityResponse - a model defined in OpenAPI

        :param count: The count of this AvailabilityResponse.
        :param links: The links of this AvailabilityResponse.
        :param daily_availabilities: The daily_availabilities of this AvailabilityResponse.
        :param hotel: The hotel of this AvailabilityResponse.
        """
        self.openapi_types = {
            'count': int,
            'links': Dict[str, LinkObject],
            'daily_availabilities': List[DailyAvailability],
            'hotel': EmbeddedHotel
        }

        self.attribute_map = {
            'count': '_count',
            'links': '_links',
            'daily_availabilities': 'daily_availabilities',
            'hotel': 'hotel'
        }

        self._count = count
        self._links = links
        self._daily_availabilities = daily_availabilities
        self._hotel = hotel

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AvailabilityResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AvailabilityResponse of this AvailabilityResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def count(self):
        """Gets the count of this AvailabilityResponse.

        The number of items matching your request in total for all pages.

        :return: The count of this AvailabilityResponse.
        :rtype: int
        """
        return self._count

    @count.setter
    def count(self, count):
        """Sets the count of this AvailabilityResponse.

        The number of items matching your request in total for all pages.

        :param count: The count of this AvailabilityResponse.
        :type count: int
        """

        self._count = count

    @property
    def links(self):
        """Gets the links of this AvailabilityResponse.

        Collection of links to related resources

        :return: The links of this AvailabilityResponse.
        :rtype: Dict[str, LinkObject]
        """
        return self._links

    @links.setter
    def links(self, links):
        """Sets the links of this AvailabilityResponse.

        Collection of links to related resources

        :param links: The links of this AvailabilityResponse.
        :type links: Dict[str, LinkObject]
        """

        self._links = links

    @property
    def daily_availabilities(self):
        """Gets the daily_availabilities of this AvailabilityResponse.

        The list of availability numbers per business day

        :return: The daily_availabilities of this AvailabilityResponse.
        :rtype: List[DailyAvailability]
        """
        return self._daily_availabilities

    @daily_availabilities.setter
    def daily_availabilities(self, daily_availabilities):
        """Sets the daily_availabilities of this AvailabilityResponse.

        The list of availability numbers per business day

        :param daily_availabilities: The daily_availabilities of this AvailabilityResponse.
        :type daily_availabilities: List[DailyAvailability]
        """

        self._daily_availabilities = daily_availabilities

    @property
    def hotel(self):
        """Gets the hotel of this AvailabilityResponse.


        :return: The hotel of this AvailabilityResponse.
        :rtype: EmbeddedHotel
        """
        return self._hotel

    @hotel.setter
    def hotel(self, hotel):
        """Sets the hotel of this AvailabilityResponse.


        :param hotel: The hotel of this AvailabilityResponse.
        :type hotel: EmbeddedHotel
        """

        self._hotel = hotel
