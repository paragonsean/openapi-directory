# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.rate_plan import RatePlan
from openapi_server.models.reservation_room import ReservationRoom
from openapi_server.models.room_offer import RoomOffer
from openapi_server.models.service import Service
from openapi_server import util


class Rates(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, arrival_date: datetime=None, departure_date: datetime=None, hotel_id: int=None, hotel_name: str=None, rate_plans: List[RatePlan]=None, room_offers: List[RoomOffer]=None, rooms: List[ReservationRoom]=None, services: List[Service]=None):
        """Rates - a model defined in OpenAPI

        :param arrival_date: The arrival_date of this Rates.
        :param departure_date: The departure_date of this Rates.
        :param hotel_id: The hotel_id of this Rates.
        :param hotel_name: The hotel_name of this Rates.
        :param rate_plans: The rate_plans of this Rates.
        :param room_offers: The room_offers of this Rates.
        :param rooms: The rooms of this Rates.
        :param services: The services of this Rates.
        """
        self.openapi_types = {
            'arrival_date': datetime,
            'departure_date': datetime,
            'hotel_id': int,
            'hotel_name': str,
            'rate_plans': List[RatePlan],
            'room_offers': List[RoomOffer],
            'rooms': List[ReservationRoom],
            'services': List[Service]
        }

        self.attribute_map = {
            'arrival_date': 'arrival_date',
            'departure_date': 'departure_date',
            'hotel_id': 'hotel_id',
            'hotel_name': 'hotel_name',
            'rate_plans': 'rate_plans',
            'room_offers': 'room_offers',
            'rooms': 'rooms',
            'services': 'services'
        }

        self._arrival_date = arrival_date
        self._departure_date = departure_date
        self._hotel_id = hotel_id
        self._hotel_name = hotel_name
        self._rate_plans = rate_plans
        self._room_offers = room_offers
        self._rooms = rooms
        self._services = services

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Rates':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Rates of this Rates.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def arrival_date(self):
        """Gets the arrival_date of this Rates.

        The arrival date of the guest for this rate offer

        :return: The arrival_date of this Rates.
        :rtype: datetime
        """
        return self._arrival_date

    @arrival_date.setter
    def arrival_date(self, arrival_date):
        """Sets the arrival_date of this Rates.

        The arrival date of the guest for this rate offer

        :param arrival_date: The arrival_date of this Rates.
        :type arrival_date: datetime
        """

        self._arrival_date = arrival_date

    @property
    def departure_date(self):
        """Gets the departure_date of this Rates.

        The departure date of the guest for this rate offer

        :return: The departure_date of this Rates.
        :rtype: datetime
        """
        return self._departure_date

    @departure_date.setter
    def departure_date(self, departure_date):
        """Sets the departure_date of this Rates.

        The departure date of the guest for this rate offer

        :param departure_date: The departure_date of this Rates.
        :type departure_date: datetime
        """

        self._departure_date = departure_date

    @property
    def hotel_id(self):
        """Gets the hotel_id of this Rates.

        The id of the hotel the rate offers will be valid for

        :return: The hotel_id of this Rates.
        :rtype: int
        """
        return self._hotel_id

    @hotel_id.setter
    def hotel_id(self, hotel_id):
        """Sets the hotel_id of this Rates.

        The id of the hotel the rate offers will be valid for

        :param hotel_id: The hotel_id of this Rates.
        :type hotel_id: int
        """

        self._hotel_id = hotel_id

    @property
    def hotel_name(self):
        """Gets the hotel_name of this Rates.

        The name of the hotel the rate offers will be valid for

        :return: The hotel_name of this Rates.
        :rtype: str
        """
        return self._hotel_name

    @hotel_name.setter
    def hotel_name(self, hotel_name):
        """Sets the hotel_name of this Rates.

        The name of the hotel the rate offers will be valid for

        :param hotel_name: The hotel_name of this Rates.
        :type hotel_name: str
        """

        self._hotel_name = hotel_name

    @property
    def rate_plans(self):
        """Gets the rate_plans of this Rates.

        List of rate plans details for rates you can find offers in the room_offers

        :return: The rate_plans of this Rates.
        :rtype: List[RatePlan]
        """
        return self._rate_plans

    @rate_plans.setter
    def rate_plans(self, rate_plans):
        """Sets the rate_plans of this Rates.

        List of rate plans details for rates you can find offers in the room_offers

        :param rate_plans: The rate_plans of this Rates.
        :type rate_plans: List[RatePlan]
        """

        self._rate_plans = rate_plans

    @property
    def room_offers(self):
        """Gets the room_offers of this Rates.

        List of room types with available rate offers ordered from ascending

        :return: The room_offers of this Rates.
        :rtype: List[RoomOffer]
        """
        return self._room_offers

    @room_offers.setter
    def room_offers(self, room_offers):
        """Sets the room_offers of this Rates.

        List of room types with available rate offers ordered from ascending

        :param room_offers: The room_offers of this Rates.
        :type room_offers: List[RoomOffer]
        """

        self._room_offers = room_offers

    @property
    def rooms(self):
        """Gets the rooms of this Rates.

        List of room type details for room types you can find offers in the room_offers

        :return: The rooms of this Rates.
        :rtype: List[ReservationRoom]
        """
        return self._rooms

    @rooms.setter
    def rooms(self, rooms):
        """Sets the rooms of this Rates.

        List of room type details for room types you can find offers in the room_offers

        :param rooms: The rooms of this Rates.
        :type rooms: List[ReservationRoom]
        """

        self._rooms = rooms

    @property
    def services(self):
        """Gets the services of this Rates.

        List of service details for included services in offers you can find in the room_offers

        :return: The services of this Rates.
        :rtype: List[Service]
        """
        return self._services

    @services.setter
    def services(self, services):
        """Sets the services of this Rates.

        List of service details for included services in offers you can find in the room_offers

        :param services: The services of this Rates.
        :type services: List[Service]
        """

        self._services = services
