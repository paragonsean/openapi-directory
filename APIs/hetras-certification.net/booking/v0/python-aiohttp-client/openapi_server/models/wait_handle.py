# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.safe_wait_handle import SafeWaitHandle
from openapi_server import util


class WaitHandle(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, handle: object=None, safe_wait_handle: SafeWaitHandle=None):
        """WaitHandle - a model defined in OpenAPI

        :param handle: The handle of this WaitHandle.
        :param safe_wait_handle: The safe_wait_handle of this WaitHandle.
        """
        self.openapi_types = {
            'handle': object,
            'safe_wait_handle': SafeWaitHandle
        }

        self.attribute_map = {
            'handle': 'Handle',
            'safe_wait_handle': 'SafeWaitHandle'
        }

        self._handle = handle
        self._safe_wait_handle = safe_wait_handle

    @classmethod
    def from_dict(cls, dikt: dict) -> 'WaitHandle':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The WaitHandle of this WaitHandle.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def handle(self):
        """Gets the handle of this WaitHandle.


        :return: The handle of this WaitHandle.
        :rtype: object
        """
        return self._handle

    @handle.setter
    def handle(self, handle):
        """Sets the handle of this WaitHandle.


        :param handle: The handle of this WaitHandle.
        :type handle: object
        """

        self._handle = handle

    @property
    def safe_wait_handle(self):
        """Gets the safe_wait_handle of this WaitHandle.


        :return: The safe_wait_handle of this WaitHandle.
        :rtype: SafeWaitHandle
        """
        return self._safe_wait_handle

    @safe_wait_handle.setter
    def safe_wait_handle(self, safe_wait_handle):
        """Sets the safe_wait_handle of this WaitHandle.


        :param safe_wait_handle: The safe_wait_handle of this WaitHandle.
        :type safe_wait_handle: SafeWaitHandle
        """

        self._safe_wait_handle = safe_wait_handle
