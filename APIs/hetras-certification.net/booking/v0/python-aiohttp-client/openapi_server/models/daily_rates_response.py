# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.daily_calendar_rate import DailyCalendarRate
from openapi_server.models.daily_rate_hotel import DailyRateHotel
from openapi_server.models.daily_rate_plan import DailyRatePlan
from openapi_server.models.link_object import LinkObject
from openapi_server.models.policies import Policies
from openapi_server.models.room_type import RoomType
from openapi_server import util


class DailyRatesResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, count: int=None, links: Dict[str, LinkObject]=None, daily_rates: List[DailyCalendarRate]=None, hotel: DailyRateHotel=None, policies: Policies=None, rateplans: List[DailyRatePlan]=None, room_types: List[RoomType]=None):
        """DailyRatesResponse - a model defined in OpenAPI

        :param count: The count of this DailyRatesResponse.
        :param links: The links of this DailyRatesResponse.
        :param daily_rates: The daily_rates of this DailyRatesResponse.
        :param hotel: The hotel of this DailyRatesResponse.
        :param policies: The policies of this DailyRatesResponse.
        :param rateplans: The rateplans of this DailyRatesResponse.
        :param room_types: The room_types of this DailyRatesResponse.
        """
        self.openapi_types = {
            'count': int,
            'links': Dict[str, LinkObject],
            'daily_rates': List[DailyCalendarRate],
            'hotel': DailyRateHotel,
            'policies': Policies,
            'rateplans': List[DailyRatePlan],
            'room_types': List[RoomType]
        }

        self.attribute_map = {
            'count': '_count',
            'links': '_links',
            'daily_rates': 'daily_rates',
            'hotel': 'hotel',
            'policies': 'policies',
            'rateplans': 'rateplans',
            'room_types': 'room_types'
        }

        self._count = count
        self._links = links
        self._daily_rates = daily_rates
        self._hotel = hotel
        self._policies = policies
        self._rateplans = rateplans
        self._room_types = room_types

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DailyRatesResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DailyRatesResponse of this DailyRatesResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def count(self):
        """Gets the count of this DailyRatesResponse.

        The number of items matching your request in total for all pages.

        :return: The count of this DailyRatesResponse.
        :rtype: int
        """
        return self._count

    @count.setter
    def count(self, count):
        """Sets the count of this DailyRatesResponse.

        The number of items matching your request in total for all pages.

        :param count: The count of this DailyRatesResponse.
        :type count: int
        """

        self._count = count

    @property
    def links(self):
        """Gets the links of this DailyRatesResponse.

        Collection of links to related resources

        :return: The links of this DailyRatesResponse.
        :rtype: Dict[str, LinkObject]
        """
        return self._links

    @links.setter
    def links(self, links):
        """Sets the links of this DailyRatesResponse.

        Collection of links to related resources

        :param links: The links of this DailyRatesResponse.
        :type links: Dict[str, LinkObject]
        """

        self._links = links

    @property
    def daily_rates(self):
        """Gets the daily_rates of this DailyRatesResponse.


        :return: The daily_rates of this DailyRatesResponse.
        :rtype: List[DailyCalendarRate]
        """
        return self._daily_rates

    @daily_rates.setter
    def daily_rates(self, daily_rates):
        """Sets the daily_rates of this DailyRatesResponse.


        :param daily_rates: The daily_rates of this DailyRatesResponse.
        :type daily_rates: List[DailyCalendarRate]
        """

        self._daily_rates = daily_rates

    @property
    def hotel(self):
        """Gets the hotel of this DailyRatesResponse.


        :return: The hotel of this DailyRatesResponse.
        :rtype: DailyRateHotel
        """
        return self._hotel

    @hotel.setter
    def hotel(self, hotel):
        """Sets the hotel of this DailyRatesResponse.


        :param hotel: The hotel of this DailyRatesResponse.
        :type hotel: DailyRateHotel
        """

        self._hotel = hotel

    @property
    def policies(self):
        """Gets the policies of this DailyRatesResponse.


        :return: The policies of this DailyRatesResponse.
        :rtype: Policies
        """
        return self._policies

    @policies.setter
    def policies(self, policies):
        """Sets the policies of this DailyRatesResponse.


        :param policies: The policies of this DailyRatesResponse.
        :type policies: Policies
        """

        self._policies = policies

    @property
    def rateplans(self):
        """Gets the rateplans of this DailyRatesResponse.


        :return: The rateplans of this DailyRatesResponse.
        :rtype: List[DailyRatePlan]
        """
        return self._rateplans

    @rateplans.setter
    def rateplans(self, rateplans):
        """Sets the rateplans of this DailyRatesResponse.


        :param rateplans: The rateplans of this DailyRatesResponse.
        :type rateplans: List[DailyRatePlan]
        """

        self._rateplans = rateplans

    @property
    def room_types(self):
        """Gets the room_types of this DailyRatesResponse.


        :return: The room_types of this DailyRatesResponse.
        :rtype: List[RoomType]
        """
        return self._room_types

    @room_types.setter
    def room_types(self, room_types):
        """Sets the room_types of this DailyRatesResponse.


        :param room_types: The room_types of this DailyRatesResponse.
        :type room_types: List[RoomType]
        """

        self._room_types = room_types
