# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GuaranteeResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, guarantee_type: str=None, valid_token: bool=None):
        """GuaranteeResponse - a model defined in OpenAPI

        :param guarantee_type: The guarantee_type of this GuaranteeResponse.
        :param valid_token: The valid_token of this GuaranteeResponse.
        """
        self.openapi_types = {
            'guarantee_type': str,
            'valid_token': bool
        }

        self.attribute_map = {
            'guarantee_type': 'guarantee_type',
            'valid_token': 'valid_token'
        }

        self._guarantee_type = guarantee_type
        self._valid_token = valid_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GuaranteeResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GuaranteeResponse of this GuaranteeResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def guarantee_type(self):
        """Gets the guarantee_type of this GuaranteeResponse.

        The guarantee type of the reservation

        :return: The guarantee_type of this GuaranteeResponse.
        :rtype: str
        """
        return self._guarantee_type

    @guarantee_type.setter
    def guarantee_type(self, guarantee_type):
        """Sets the guarantee_type of this GuaranteeResponse.

        The guarantee type of the reservation

        :param guarantee_type: The guarantee_type of this GuaranteeResponse.
        :type guarantee_type: str
        """
        allowed_values = ["PM4Hold", "PM6Hold", "GuaranteeToCreditCard", "GuaranteeToGuestAccount", "GuaranteeByTravelAgent", "GuaranteeByCompany", "Deposit", "Voucher", "Prepayment", "NonGuaranteed", "Tentative", "Waitlist"]  # noqa: E501
        if guarantee_type not in allowed_values:
            raise ValueError(
                "Invalid value for `guarantee_type` ({0}), must be one of {1}"
                .format(guarantee_type, allowed_values)
            )

        self._guarantee_type = guarantee_type

    @property
    def valid_token(self):
        """Gets the valid_token of this GuaranteeResponse.

        Tells you if there is a token for a valid creadit card on the reservation that can be used to              capture the reservations amount or to guarantee for the reservation

        :return: The valid_token of this GuaranteeResponse.
        :rtype: bool
        """
        return self._valid_token

    @valid_token.setter
    def valid_token(self, valid_token):
        """Sets the valid_token of this GuaranteeResponse.

        Tells you if there is a token for a valid creadit card on the reservation that can be used to              capture the reservations amount or to guarantee for the reservation

        :param valid_token: The valid_token of this GuaranteeResponse.
        :type valid_token: bool
        """

        self._valid_token = valid_token
