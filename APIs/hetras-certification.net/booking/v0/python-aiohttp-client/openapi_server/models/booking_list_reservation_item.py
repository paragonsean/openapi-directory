# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.companies_info import CompaniesInfo
from openapi_server.models.customers_info import CustomersInfo
from openapi_server.models.hotel_info import HotelInfo
from openapi_server.models.link_object import LinkObject
from openapi_server.models.rate_plan import RatePlan
from openapi_server.models.room_info import RoomInfo
from openapi_server import util


class BookingListReservationItem(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, links: Dict[str, LinkObject]=None, adults: int=None, arrival_date: datetime=None, balance: float=None, block_code: str=None, cancellation_id: str=None, channel_code: str=None, companies: CompaniesInfo=None, created: datetime=None, customers: CustomersInfo=None, departure_date: datetime=None, external_id: str=None, hotel: HotelInfo=None, labels: List[str]=None, market_code: str=None, rate_plan: RatePlan=None, reservation_number: int=None, reservation_status: str=None, room: RoomInfo=None, rooms: int=None, subchannel_code: str=None, updated: datetime=None):
        """BookingListReservationItem - a model defined in OpenAPI

        :param links: The links of this BookingListReservationItem.
        :param adults: The adults of this BookingListReservationItem.
        :param arrival_date: The arrival_date of this BookingListReservationItem.
        :param balance: The balance of this BookingListReservationItem.
        :param block_code: The block_code of this BookingListReservationItem.
        :param cancellation_id: The cancellation_id of this BookingListReservationItem.
        :param channel_code: The channel_code of this BookingListReservationItem.
        :param companies: The companies of this BookingListReservationItem.
        :param created: The created of this BookingListReservationItem.
        :param customers: The customers of this BookingListReservationItem.
        :param departure_date: The departure_date of this BookingListReservationItem.
        :param external_id: The external_id of this BookingListReservationItem.
        :param hotel: The hotel of this BookingListReservationItem.
        :param labels: The labels of this BookingListReservationItem.
        :param market_code: The market_code of this BookingListReservationItem.
        :param rate_plan: The rate_plan of this BookingListReservationItem.
        :param reservation_number: The reservation_number of this BookingListReservationItem.
        :param reservation_status: The reservation_status of this BookingListReservationItem.
        :param room: The room of this BookingListReservationItem.
        :param rooms: The rooms of this BookingListReservationItem.
        :param subchannel_code: The subchannel_code of this BookingListReservationItem.
        :param updated: The updated of this BookingListReservationItem.
        """
        self.openapi_types = {
            'links': Dict[str, LinkObject],
            'adults': int,
            'arrival_date': datetime,
            'balance': float,
            'block_code': str,
            'cancellation_id': str,
            'channel_code': str,
            'companies': CompaniesInfo,
            'created': datetime,
            'customers': CustomersInfo,
            'departure_date': datetime,
            'external_id': str,
            'hotel': HotelInfo,
            'labels': List[str],
            'market_code': str,
            'rate_plan': RatePlan,
            'reservation_number': int,
            'reservation_status': str,
            'room': RoomInfo,
            'rooms': int,
            'subchannel_code': str,
            'updated': datetime
        }

        self.attribute_map = {
            'links': '_links',
            'adults': 'adults',
            'arrival_date': 'arrival_date',
            'balance': 'balance',
            'block_code': 'block_code',
            'cancellation_id': 'cancellation_id',
            'channel_code': 'channel_code',
            'companies': 'companies',
            'created': 'created',
            'customers': 'customers',
            'departure_date': 'departure_date',
            'external_id': 'external_id',
            'hotel': 'hotel',
            'labels': 'labels',
            'market_code': 'market_code',
            'rate_plan': 'rate_plan',
            'reservation_number': 'reservation_number',
            'reservation_status': 'reservation_status',
            'room': 'room',
            'rooms': 'rooms',
            'subchannel_code': 'subchannel_code',
            'updated': 'updated'
        }

        self._links = links
        self._adults = adults
        self._arrival_date = arrival_date
        self._balance = balance
        self._block_code = block_code
        self._cancellation_id = cancellation_id
        self._channel_code = channel_code
        self._companies = companies
        self._created = created
        self._customers = customers
        self._departure_date = departure_date
        self._external_id = external_id
        self._hotel = hotel
        self._labels = labels
        self._market_code = market_code
        self._rate_plan = rate_plan
        self._reservation_number = reservation_number
        self._reservation_status = reservation_status
        self._room = room
        self._rooms = rooms
        self._subchannel_code = subchannel_code
        self._updated = updated

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BookingListReservationItem':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BookingListReservationItem of this BookingListReservationItem.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def links(self):
        """Gets the links of this BookingListReservationItem.

        Collection of links to related resources

        :return: The links of this BookingListReservationItem.
        :rtype: Dict[str, LinkObject]
        """
        return self._links

    @links.setter
    def links(self, links):
        """Sets the links of this BookingListReservationItem.

        Collection of links to related resources

        :param links: The links of this BookingListReservationItem.
        :type links: Dict[str, LinkObject]
        """

        self._links = links

    @property
    def adults(self):
        """Gets the adults of this BookingListReservationItem.

        The number of adults per room

        :return: The adults of this BookingListReservationItem.
        :rtype: int
        """
        return self._adults

    @adults.setter
    def adults(self, adults):
        """Sets the adults of this BookingListReservationItem.

        The number of adults per room

        :param adults: The adults of this BookingListReservationItem.
        :type adults: int
        """

        self._adults = adults

    @property
    def arrival_date(self):
        """Gets the arrival_date of this BookingListReservationItem.

        The arrival date of the guests

        :return: The arrival_date of this BookingListReservationItem.
        :rtype: datetime
        """
        return self._arrival_date

    @arrival_date.setter
    def arrival_date(self, arrival_date):
        """Sets the arrival_date of this BookingListReservationItem.

        The arrival date of the guests

        :param arrival_date: The arrival_date of this BookingListReservationItem.
        :type arrival_date: datetime
        """

        self._arrival_date = arrival_date

    @property
    def balance(self):
        """Gets the balance of this BookingListReservationItem.

        The balance for all folios of this reservartion. It is calculated by all already charged room and service rates plus manual charges               or charges from other systems like POS minus all payments. A negative balance indicates the reservation is overpaid, a positive balance               that the guest owes the hotel money

        :return: The balance of this BookingListReservationItem.
        :rtype: float
        """
        return self._balance

    @balance.setter
    def balance(self, balance):
        """Sets the balance of this BookingListReservationItem.

        The balance for all folios of this reservartion. It is calculated by all already charged room and service rates plus manual charges               or charges from other systems like POS minus all payments. A negative balance indicates the reservation is overpaid, a positive balance               that the guest owes the hotel money

        :param balance: The balance of this BookingListReservationItem.
        :type balance: float
        """

        self._balance = balance

    @property
    def block_code(self):
        """Gets the block_code of this BookingListReservationItem.

        If this reservation is a pick-up from a block you will see the appropriate block code here

        :return: The block_code of this BookingListReservationItem.
        :rtype: str
        """
        return self._block_code

    @block_code.setter
    def block_code(self, block_code):
        """Sets the block_code of this BookingListReservationItem.

        If this reservation is a pick-up from a block you will see the appropriate block code here

        :param block_code: The block_code of this BookingListReservationItem.
        :type block_code: str
        """

        self._block_code = block_code

    @property
    def cancellation_id(self):
        """Gets the cancellation_id of this BookingListReservationItem.

        The cancellation id if the reservation has been cancelled

        :return: The cancellation_id of this BookingListReservationItem.
        :rtype: str
        """
        return self._cancellation_id

    @cancellation_id.setter
    def cancellation_id(self, cancellation_id):
        """Sets the cancellation_id of this BookingListReservationItem.

        The cancellation id if the reservation has been cancelled

        :param cancellation_id: The cancellation_id of this BookingListReservationItem.
        :type cancellation_id: str
        """

        self._cancellation_id = cancellation_id

    @property
    def channel_code(self):
        """Gets the channel_code of this BookingListReservationItem.

        The code of the channel that was used when the booking has been created. It is also known as source.               Possible values can be OTA, GDS or DIRECT, but it is configurable per hotel

        :return: The channel_code of this BookingListReservationItem.
        :rtype: str
        """
        return self._channel_code

    @channel_code.setter
    def channel_code(self, channel_code):
        """Sets the channel_code of this BookingListReservationItem.

        The code of the channel that was used when the booking has been created. It is also known as source.               Possible values can be OTA, GDS or DIRECT, but it is configurable per hotel

        :param channel_code: The channel_code of this BookingListReservationItem.
        :type channel_code: str
        """

        self._channel_code = channel_code

    @property
    def companies(self):
        """Gets the companies of this BookingListReservationItem.


        :return: The companies of this BookingListReservationItem.
        :rtype: CompaniesInfo
        """
        return self._companies

    @companies.setter
    def companies(self, companies):
        """Sets the companies of this BookingListReservationItem.


        :param companies: The companies of this BookingListReservationItem.
        :type companies: CompaniesInfo
        """

        self._companies = companies

    @property
    def created(self):
        """Gets the created of this BookingListReservationItem.

        Timestamp the reservation was created

        :return: The created of this BookingListReservationItem.
        :rtype: datetime
        """
        return self._created

    @created.setter
    def created(self, created):
        """Sets the created of this BookingListReservationItem.

        Timestamp the reservation was created

        :param created: The created of this BookingListReservationItem.
        :type created: datetime
        """

        self._created = created

    @property
    def customers(self):
        """Gets the customers of this BookingListReservationItem.


        :return: The customers of this BookingListReservationItem.
        :rtype: CustomersInfo
        """
        return self._customers

    @customers.setter
    def customers(self, customers):
        """Sets the customers of this BookingListReservationItem.


        :param customers: The customers of this BookingListReservationItem.
        :type customers: CustomersInfo
        """

        self._customers = customers

    @property
    def departure_date(self):
        """Gets the departure_date of this BookingListReservationItem.

        The departure date of the guests

        :return: The departure_date of this BookingListReservationItem.
        :rtype: datetime
        """
        return self._departure_date

    @departure_date.setter
    def departure_date(self, departure_date):
        """Sets the departure_date of this BookingListReservationItem.

        The departure date of the guests

        :param departure_date: The departure_date of this BookingListReservationItem.
        :type departure_date: datetime
        """

        self._departure_date = departure_date

    @property
    def external_id(self):
        """Gets the external_id of this BookingListReservationItem.

        The external id for this reservation is the unique identifier from the system that created the booking in hetras. It could be the id of an              OTA like Expedia or booking.com or one of the GDS systems like Amadeus or Galileo

        :return: The external_id of this BookingListReservationItem.
        :rtype: str
        """
        return self._external_id

    @external_id.setter
    def external_id(self, external_id):
        """Sets the external_id of this BookingListReservationItem.

        The external id for this reservation is the unique identifier from the system that created the booking in hetras. It could be the id of an              OTA like Expedia or booking.com or one of the GDS systems like Amadeus or Galileo

        :param external_id: The external_id of this BookingListReservationItem.
        :type external_id: str
        """

        self._external_id = external_id

    @property
    def hotel(self):
        """Gets the hotel of this BookingListReservationItem.


        :return: The hotel of this BookingListReservationItem.
        :rtype: HotelInfo
        """
        return self._hotel

    @hotel.setter
    def hotel(self, hotel):
        """Sets the hotel of this BookingListReservationItem.


        :param hotel: The hotel of this BookingListReservationItem.
        :type hotel: HotelInfo
        """

        self._hotel = hotel

    @property
    def labels(self):
        """Gets the labels of this BookingListReservationItem.

        The labels attached to this reservation.

        :return: The labels of this BookingListReservationItem.
        :rtype: List[str]
        """
        return self._labels

    @labels.setter
    def labels(self, labels):
        """Sets the labels of this BookingListReservationItem.

        The labels attached to this reservation.

        :param labels: The labels of this BookingListReservationItem.
        :type labels: List[str]
        """

        self._labels = labels

    @property
    def market_code(self):
        """Gets the market_code of this BookingListReservationItem.

        The code of the market segment the rate plan for this reservation is linked to

        :return: The market_code of this BookingListReservationItem.
        :rtype: str
        """
        return self._market_code

    @market_code.setter
    def market_code(self, market_code):
        """Sets the market_code of this BookingListReservationItem.

        The code of the market segment the rate plan for this reservation is linked to

        :param market_code: The market_code of this BookingListReservationItem.
        :type market_code: str
        """

        self._market_code = market_code

    @property
    def rate_plan(self):
        """Gets the rate_plan of this BookingListReservationItem.


        :return: The rate_plan of this BookingListReservationItem.
        :rtype: RatePlan
        """
        return self._rate_plan

    @rate_plan.setter
    def rate_plan(self, rate_plan):
        """Sets the rate_plan of this BookingListReservationItem.


        :param rate_plan: The rate_plan of this BookingListReservationItem.
        :type rate_plan: RatePlan
        """

        self._rate_plan = rate_plan

    @property
    def reservation_number(self):
        """Gets the reservation_number of this BookingListReservationItem.

        The reservation number of the reservation

        :return: The reservation_number of this BookingListReservationItem.
        :rtype: int
        """
        return self._reservation_number

    @reservation_number.setter
    def reservation_number(self, reservation_number):
        """Sets the reservation_number of this BookingListReservationItem.

        The reservation number of the reservation

        :param reservation_number: The reservation_number of this BookingListReservationItem.
        :type reservation_number: int
        """

        self._reservation_number = reservation_number

    @property
    def reservation_status(self):
        """Gets the reservation_status of this BookingListReservationItem.

        The current status of this reservation

        :return: The reservation_status of this BookingListReservationItem.
        :rtype: str
        """
        return self._reservation_status

    @reservation_status.setter
    def reservation_status(self, reservation_status):
        """Sets the reservation_status of this BookingListReservationItem.

        The current status of this reservation

        :param reservation_status: The reservation_status of this BookingListReservationItem.
        :type reservation_status: str
        """
        allowed_values = ["Tentative", "Waitlisted", "OnRequest", "NonGuaranteed", "Guaranteed", "InHouse", "CheckedOut", "NoShow", "Denied", "Cancelled", "Released", "Walked", "Expired", "WalkIn", "Registered"]  # noqa: E501
        if reservation_status not in allowed_values:
            raise ValueError(
                "Invalid value for `reservation_status` ({0}), must be one of {1}"
                .format(reservation_status, allowed_values)
            )

        self._reservation_status = reservation_status

    @property
    def room(self):
        """Gets the room of this BookingListReservationItem.


        :return: The room of this BookingListReservationItem.
        :rtype: RoomInfo
        """
        return self._room

    @room.setter
    def room(self, room):
        """Sets the room of this BookingListReservationItem.


        :param room: The room of this BookingListReservationItem.
        :type room: RoomInfo
        """

        self._room = room

    @property
    def rooms(self):
        """Gets the rooms of this BookingListReservationItem.

        The number of rooms this reservation is valid for. After a multi-room booking is done there will be               one reservation in hetras for this booking for all rooms. The hotel staff then will split this reservation into              one reservation per room to be able to check in the guests

        :return: The rooms of this BookingListReservationItem.
        :rtype: int
        """
        return self._rooms

    @rooms.setter
    def rooms(self, rooms):
        """Sets the rooms of this BookingListReservationItem.

        The number of rooms this reservation is valid for. After a multi-room booking is done there will be               one reservation in hetras for this booking for all rooms. The hotel staff then will split this reservation into              one reservation per room to be able to check in the guests

        :param rooms: The rooms of this BookingListReservationItem.
        :type rooms: int
        """

        self._rooms = rooms

    @property
    def subchannel_code(self):
        """Gets the subchannel_code of this BookingListReservationItem.

        The code of the subchannel that was used when the booking has been created. Possible values can be               BOOKING, EXPEDIA or WALKIN, but it is configurable per hotel

        :return: The subchannel_code of this BookingListReservationItem.
        :rtype: str
        """
        return self._subchannel_code

    @subchannel_code.setter
    def subchannel_code(self, subchannel_code):
        """Sets the subchannel_code of this BookingListReservationItem.

        The code of the subchannel that was used when the booking has been created. Possible values can be               BOOKING, EXPEDIA or WALKIN, but it is configurable per hotel

        :param subchannel_code: The subchannel_code of this BookingListReservationItem.
        :type subchannel_code: str
        """

        self._subchannel_code = subchannel_code

    @property
    def updated(self):
        """Gets the updated of this BookingListReservationItem.

        Timestamp of when the reservation was changed the last time

        :return: The updated of this BookingListReservationItem.
        :rtype: datetime
        """
        return self._updated

    @updated.setter
    def updated(self, updated):
        """Sets the updated of this BookingListReservationItem.

        Timestamp of when the reservation was changed the last time

        :param updated: The updated of this BookingListReservationItem.
        :type updated: datetime
        """

        self._updated = updated
