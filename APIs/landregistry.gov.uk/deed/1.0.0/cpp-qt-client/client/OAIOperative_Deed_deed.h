/**
 * Deed API
 * Land Registry Deed API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIOperative_Deed_deed.h
 *
 * Unique deed, consisting of property, borrower and charge information as well as clauses for the deed.
 */

#ifndef OAIOperative_Deed_deed_H
#define OAIOperative_Deed_deed_H

#include <QJsonObject>

#include "OAIAdditionalProvisions_inner.h"
#include "OAIBorrower.h"
#include "OAIChargeClause.h"
#include "OAILender.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAdditionalProvisions_inner;
class OAIBorrower;
class OAIChargeClause;
class OAILender;

class OAIOperative_Deed_deed : public OAIObject {
public:
    OAIOperative_Deed_deed();
    OAIOperative_Deed_deed(QString json);
    ~OAIOperative_Deed_deed() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIAdditionalProvisions_inner> getAdditionalProvisions() const;
    void setAdditionalProvisions(const QList<OAIAdditionalProvisions_inner> &additional_provisions);
    bool is_additional_provisions_Set() const;
    bool is_additional_provisions_Valid() const;

    QList<OAIBorrower> getBorrowers() const;
    void setBorrowers(const QList<OAIBorrower> &borrowers);
    bool is_borrowers_Set() const;
    bool is_borrowers_Valid() const;

    OAIChargeClause getChargeClause() const;
    void setChargeClause(const OAIChargeClause &charge_clause);
    bool is_charge_clause_Set() const;
    bool is_charge_clause_Valid() const;

    QString getDeedStatus() const;
    void setDeedStatus(const QString &deed_status);
    bool is_deed_status_Set() const;
    bool is_deed_status_Valid() const;

    QString getEffectiveClause() const;
    void setEffectiveClause(const QString &effective_clause);
    bool is_effective_clause_Set() const;
    bool is_effective_clause_Valid() const;

    OAILender getLender() const;
    void setLender(const OAILender &lender);
    bool is_lender_Set() const;
    bool is_lender_Valid() const;

    QString getMdRef() const;
    void setMdRef(const QString &md_ref);
    bool is_md_ref_Set() const;
    bool is_md_ref_Valid() const;

    QString getPropertyAddress() const;
    void setPropertyAddress(const QString &property_address);
    bool is_property_address_Set() const;
    bool is_property_address_Valid() const;

    QString getTitleNumber() const;
    void setTitleNumber(const QString &title_number);
    bool is_title_number_Set() const;
    bool is_title_number_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIAdditionalProvisions_inner> m_additional_provisions;
    bool m_additional_provisions_isSet;
    bool m_additional_provisions_isValid;

    QList<OAIBorrower> m_borrowers;
    bool m_borrowers_isSet;
    bool m_borrowers_isValid;

    OAIChargeClause m_charge_clause;
    bool m_charge_clause_isSet;
    bool m_charge_clause_isValid;

    QString m_deed_status;
    bool m_deed_status_isSet;
    bool m_deed_status_isValid;

    QString m_effective_clause;
    bool m_effective_clause_isSet;
    bool m_effective_clause_isValid;

    OAILender m_lender;
    bool m_lender_isSet;
    bool m_lender_isValid;

    QString m_md_ref;
    bool m_md_ref_isSet;
    bool m_md_ref_isValid;

    QString m_property_address;
    bool m_property_address_isSet;
    bool m_property_address_isValid;

    QString m_title_number;
    bool m_title_number_isSet;
    bool m_title_number_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIOperative_Deed_deed)

#endif // OAIOperative_Deed_deed_H
