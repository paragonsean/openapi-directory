/**
 * Deed API
 * Land Registry Deed API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDeed_Application.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDeed_Application::OAIDeed_Application(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDeed_Application::OAIDeed_Application() {
    this->initializeModel();
}

OAIDeed_Application::~OAIDeed_Application() {}

void OAIDeed_Application::initializeModel() {

    m_borrowers_isSet = false;
    m_borrowers_isValid = false;

    m_identity_checked_isSet = false;
    m_identity_checked_isValid = false;

    m_md_ref_isSet = false;
    m_md_ref_isValid = false;

    m_property_address_isSet = false;
    m_property_address_isValid = false;

    m_title_number_isSet = false;
    m_title_number_isValid = false;
}

void OAIDeed_Application::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDeed_Application::fromJsonObject(QJsonObject json) {

    m_borrowers_isValid = ::OpenAPI::fromJsonValue(m_borrowers, json[QString("borrowers")]);
    m_borrowers_isSet = !json[QString("borrowers")].isNull() && m_borrowers_isValid;

    m_identity_checked_isValid = ::OpenAPI::fromJsonValue(m_identity_checked, json[QString("identity_checked")]);
    m_identity_checked_isSet = !json[QString("identity_checked")].isNull() && m_identity_checked_isValid;

    m_md_ref_isValid = ::OpenAPI::fromJsonValue(m_md_ref, json[QString("md_ref")]);
    m_md_ref_isSet = !json[QString("md_ref")].isNull() && m_md_ref_isValid;

    m_property_address_isValid = ::OpenAPI::fromJsonValue(m_property_address, json[QString("property_address")]);
    m_property_address_isSet = !json[QString("property_address")].isNull() && m_property_address_isValid;

    m_title_number_isValid = ::OpenAPI::fromJsonValue(m_title_number, json[QString("title_number")]);
    m_title_number_isSet = !json[QString("title_number")].isNull() && m_title_number_isValid;
}

QString OAIDeed_Application::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDeed_Application::asJsonObject() const {
    QJsonObject obj;
    if (m_borrowers.size() > 0) {
        obj.insert(QString("borrowers"), ::OpenAPI::toJsonValue(m_borrowers));
    }
    if (m_identity_checked_isSet) {
        obj.insert(QString("identity_checked"), ::OpenAPI::toJsonValue(m_identity_checked));
    }
    if (m_md_ref_isSet) {
        obj.insert(QString("md_ref"), ::OpenAPI::toJsonValue(m_md_ref));
    }
    if (m_property_address_isSet) {
        obj.insert(QString("property_address"), ::OpenAPI::toJsonValue(m_property_address));
    }
    if (m_title_number_isSet) {
        obj.insert(QString("title_number"), ::OpenAPI::toJsonValue(m_title_number));
    }
    return obj;
}

QList<OAIPrivateIndividualName> OAIDeed_Application::getBorrowers() const {
    return m_borrowers;
}
void OAIDeed_Application::setBorrowers(const QList<OAIPrivateIndividualName> &borrowers) {
    m_borrowers = borrowers;
    m_borrowers_isSet = true;
}

bool OAIDeed_Application::is_borrowers_Set() const{
    return m_borrowers_isSet;
}

bool OAIDeed_Application::is_borrowers_Valid() const{
    return m_borrowers_isValid;
}

QString OAIDeed_Application::getIdentityChecked() const {
    return m_identity_checked;
}
void OAIDeed_Application::setIdentityChecked(const QString &identity_checked) {
    m_identity_checked = identity_checked;
    m_identity_checked_isSet = true;
}

bool OAIDeed_Application::is_identity_checked_Set() const{
    return m_identity_checked_isSet;
}

bool OAIDeed_Application::is_identity_checked_Valid() const{
    return m_identity_checked_isValid;
}

QString OAIDeed_Application::getMdRef() const {
    return m_md_ref;
}
void OAIDeed_Application::setMdRef(const QString &md_ref) {
    m_md_ref = md_ref;
    m_md_ref_isSet = true;
}

bool OAIDeed_Application::is_md_ref_Set() const{
    return m_md_ref_isSet;
}

bool OAIDeed_Application::is_md_ref_Valid() const{
    return m_md_ref_isValid;
}

QString OAIDeed_Application::getPropertyAddress() const {
    return m_property_address;
}
void OAIDeed_Application::setPropertyAddress(const QString &property_address) {
    m_property_address = property_address;
    m_property_address_isSet = true;
}

bool OAIDeed_Application::is_property_address_Set() const{
    return m_property_address_isSet;
}

bool OAIDeed_Application::is_property_address_Valid() const{
    return m_property_address_isValid;
}

QString OAIDeed_Application::getTitleNumber() const {
    return m_title_number;
}
void OAIDeed_Application::setTitleNumber(const QString &title_number) {
    m_title_number = title_number;
    m_title_number_isSet = true;
}

bool OAIDeed_Application::is_title_number_Set() const{
    return m_title_number_isSet;
}

bool OAIDeed_Application::is_title_number_Valid() const{
    return m_title_number_isValid;
}

bool OAIDeed_Application::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_borrowers.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_identity_checked_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_md_ref_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_property_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_title_number_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDeed_Application::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_borrowers_isValid && m_identity_checked_isValid && m_md_ref_isValid && m_property_address_isValid && m_title_number_isValid && true;
}

} // namespace OpenAPI
