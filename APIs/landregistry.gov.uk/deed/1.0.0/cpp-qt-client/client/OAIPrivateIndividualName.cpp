/**
 * Deed API
 * Land Registry Deed API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPrivateIndividualName.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPrivateIndividualName::OAIPrivateIndividualName(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPrivateIndividualName::OAIPrivateIndividualName() {
    this->initializeModel();
}

OAIPrivateIndividualName::~OAIPrivateIndividualName() {}

void OAIPrivateIndividualName::initializeModel() {

    m_address_isSet = false;
    m_address_isValid = false;

    m_dob_isSet = false;
    m_dob_isValid = false;

    m_forename_isSet = false;
    m_forename_isValid = false;

    m_gender_isSet = false;
    m_gender_isValid = false;

    m_middle_name_isSet = false;
    m_middle_name_isValid = false;

    m_phone_number_isSet = false;
    m_phone_number_isValid = false;

    m_surname_isSet = false;
    m_surname_isValid = false;
}

void OAIPrivateIndividualName::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPrivateIndividualName::fromJsonObject(QJsonObject json) {

    m_address_isValid = ::OpenAPI::fromJsonValue(m_address, json[QString("address")]);
    m_address_isSet = !json[QString("address")].isNull() && m_address_isValid;

    m_dob_isValid = ::OpenAPI::fromJsonValue(m_dob, json[QString("dob")]);
    m_dob_isSet = !json[QString("dob")].isNull() && m_dob_isValid;

    m_forename_isValid = ::OpenAPI::fromJsonValue(m_forename, json[QString("forename")]);
    m_forename_isSet = !json[QString("forename")].isNull() && m_forename_isValid;

    m_gender_isValid = ::OpenAPI::fromJsonValue(m_gender, json[QString("gender")]);
    m_gender_isSet = !json[QString("gender")].isNull() && m_gender_isValid;

    m_middle_name_isValid = ::OpenAPI::fromJsonValue(m_middle_name, json[QString("middle_name")]);
    m_middle_name_isSet = !json[QString("middle_name")].isNull() && m_middle_name_isValid;

    m_phone_number_isValid = ::OpenAPI::fromJsonValue(m_phone_number, json[QString("phone_number")]);
    m_phone_number_isSet = !json[QString("phone_number")].isNull() && m_phone_number_isValid;

    m_surname_isValid = ::OpenAPI::fromJsonValue(m_surname, json[QString("surname")]);
    m_surname_isSet = !json[QString("surname")].isNull() && m_surname_isValid;
}

QString OAIPrivateIndividualName::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPrivateIndividualName::asJsonObject() const {
    QJsonObject obj;
    if (m_address_isSet) {
        obj.insert(QString("address"), ::OpenAPI::toJsonValue(m_address));
    }
    if (m_dob_isSet) {
        obj.insert(QString("dob"), ::OpenAPI::toJsonValue(m_dob));
    }
    if (m_forename_isSet) {
        obj.insert(QString("forename"), ::OpenAPI::toJsonValue(m_forename));
    }
    if (m_gender_isSet) {
        obj.insert(QString("gender"), ::OpenAPI::toJsonValue(m_gender));
    }
    if (m_middle_name_isSet) {
        obj.insert(QString("middle_name"), ::OpenAPI::toJsonValue(m_middle_name));
    }
    if (m_phone_number_isSet) {
        obj.insert(QString("phone_number"), ::OpenAPI::toJsonValue(m_phone_number));
    }
    if (m_surname_isSet) {
        obj.insert(QString("surname"), ::OpenAPI::toJsonValue(m_surname));
    }
    return obj;
}

QString OAIPrivateIndividualName::getAddress() const {
    return m_address;
}
void OAIPrivateIndividualName::setAddress(const QString &address) {
    m_address = address;
    m_address_isSet = true;
}

bool OAIPrivateIndividualName::is_address_Set() const{
    return m_address_isSet;
}

bool OAIPrivateIndividualName::is_address_Valid() const{
    return m_address_isValid;
}

QString OAIPrivateIndividualName::getDob() const {
    return m_dob;
}
void OAIPrivateIndividualName::setDob(const QString &dob) {
    m_dob = dob;
    m_dob_isSet = true;
}

bool OAIPrivateIndividualName::is_dob_Set() const{
    return m_dob_isSet;
}

bool OAIPrivateIndividualName::is_dob_Valid() const{
    return m_dob_isValid;
}

QString OAIPrivateIndividualName::getForename() const {
    return m_forename;
}
void OAIPrivateIndividualName::setForename(const QString &forename) {
    m_forename = forename;
    m_forename_isSet = true;
}

bool OAIPrivateIndividualName::is_forename_Set() const{
    return m_forename_isSet;
}

bool OAIPrivateIndividualName::is_forename_Valid() const{
    return m_forename_isValid;
}

QString OAIPrivateIndividualName::getGender() const {
    return m_gender;
}
void OAIPrivateIndividualName::setGender(const QString &gender) {
    m_gender = gender;
    m_gender_isSet = true;
}

bool OAIPrivateIndividualName::is_gender_Set() const{
    return m_gender_isSet;
}

bool OAIPrivateIndividualName::is_gender_Valid() const{
    return m_gender_isValid;
}

QString OAIPrivateIndividualName::getMiddleName() const {
    return m_middle_name;
}
void OAIPrivateIndividualName::setMiddleName(const QString &middle_name) {
    m_middle_name = middle_name;
    m_middle_name_isSet = true;
}

bool OAIPrivateIndividualName::is_middle_name_Set() const{
    return m_middle_name_isSet;
}

bool OAIPrivateIndividualName::is_middle_name_Valid() const{
    return m_middle_name_isValid;
}

QString OAIPrivateIndividualName::getPhoneNumber() const {
    return m_phone_number;
}
void OAIPrivateIndividualName::setPhoneNumber(const QString &phone_number) {
    m_phone_number = phone_number;
    m_phone_number_isSet = true;
}

bool OAIPrivateIndividualName::is_phone_number_Set() const{
    return m_phone_number_isSet;
}

bool OAIPrivateIndividualName::is_phone_number_Valid() const{
    return m_phone_number_isValid;
}

QString OAIPrivateIndividualName::getSurname() const {
    return m_surname;
}
void OAIPrivateIndividualName::setSurname(const QString &surname) {
    m_surname = surname;
    m_surname_isSet = true;
}

bool OAIPrivateIndividualName::is_surname_Set() const{
    return m_surname_isSet;
}

bool OAIPrivateIndividualName::is_surname_Valid() const{
    return m_surname_isValid;
}

bool OAIPrivateIndividualName::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_dob_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_forename_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gender_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_middle_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_phone_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_surname_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPrivateIndividualName::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_address_isValid && m_dob_isValid && m_forename_isValid && m_phone_number_isValid && m_surname_isValid && true;
}

} // namespace OpenAPI
