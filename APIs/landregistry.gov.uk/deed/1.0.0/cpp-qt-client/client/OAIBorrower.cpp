/**
 * Deed API
 * Land Registry Deed API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBorrower.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBorrower::OAIBorrower(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBorrower::OAIBorrower() {
    this->initializeModel();
}

OAIBorrower::~OAIBorrower() {}

void OAIBorrower::initializeModel() {

    m_forename_isSet = false;
    m_forename_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_middle_name_isSet = false;
    m_middle_name_isValid = false;

    m_surname_isSet = false;
    m_surname_isValid = false;

    m_token_isSet = false;
    m_token_isValid = false;
}

void OAIBorrower::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBorrower::fromJsonObject(QJsonObject json) {

    m_forename_isValid = ::OpenAPI::fromJsonValue(m_forename, json[QString("forename")]);
    m_forename_isSet = !json[QString("forename")].isNull() && m_forename_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_middle_name_isValid = ::OpenAPI::fromJsonValue(m_middle_name, json[QString("middle_name")]);
    m_middle_name_isSet = !json[QString("middle_name")].isNull() && m_middle_name_isValid;

    m_surname_isValid = ::OpenAPI::fromJsonValue(m_surname, json[QString("surname")]);
    m_surname_isSet = !json[QString("surname")].isNull() && m_surname_isValid;

    m_token_isValid = ::OpenAPI::fromJsonValue(m_token, json[QString("token")]);
    m_token_isSet = !json[QString("token")].isNull() && m_token_isValid;
}

QString OAIBorrower::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBorrower::asJsonObject() const {
    QJsonObject obj;
    if (m_forename_isSet) {
        obj.insert(QString("forename"), ::OpenAPI::toJsonValue(m_forename));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_middle_name_isSet) {
        obj.insert(QString("middle_name"), ::OpenAPI::toJsonValue(m_middle_name));
    }
    if (m_surname_isSet) {
        obj.insert(QString("surname"), ::OpenAPI::toJsonValue(m_surname));
    }
    if (m_token_isSet) {
        obj.insert(QString("token"), ::OpenAPI::toJsonValue(m_token));
    }
    return obj;
}

QString OAIBorrower::getForename() const {
    return m_forename;
}
void OAIBorrower::setForename(const QString &forename) {
    m_forename = forename;
    m_forename_isSet = true;
}

bool OAIBorrower::is_forename_Set() const{
    return m_forename_isSet;
}

bool OAIBorrower::is_forename_Valid() const{
    return m_forename_isValid;
}

QString OAIBorrower::getId() const {
    return m_id;
}
void OAIBorrower::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIBorrower::is_id_Set() const{
    return m_id_isSet;
}

bool OAIBorrower::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIBorrower::getMiddleName() const {
    return m_middle_name;
}
void OAIBorrower::setMiddleName(const QString &middle_name) {
    m_middle_name = middle_name;
    m_middle_name_isSet = true;
}

bool OAIBorrower::is_middle_name_Set() const{
    return m_middle_name_isSet;
}

bool OAIBorrower::is_middle_name_Valid() const{
    return m_middle_name_isValid;
}

QString OAIBorrower::getSurname() const {
    return m_surname;
}
void OAIBorrower::setSurname(const QString &surname) {
    m_surname = surname;
    m_surname_isSet = true;
}

bool OAIBorrower::is_surname_Set() const{
    return m_surname_isSet;
}

bool OAIBorrower::is_surname_Valid() const{
    return m_surname_isValid;
}

QString OAIBorrower::getToken() const {
    return m_token;
}
void OAIBorrower::setToken(const QString &token) {
    m_token = token;
    m_token_isSet = true;
}

bool OAIBorrower::is_token_Set() const{
    return m_token_isSet;
}

bool OAIBorrower::is_token_Valid() const{
    return m_token_isValid;
}

bool OAIBorrower::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_forename_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_middle_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_surname_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_token_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBorrower::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_forename_isValid && m_id_isValid && m_surname_isValid && m_token_isValid && true;
}

} // namespace OpenAPI
