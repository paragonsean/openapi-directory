/**
 * GeoDataSource Location Search
 * GeoDataSourceâ„¢ Web Service is a REST API enable user to lookup for a city by using latitude and longitude coordinate. It will return the result in either JSON or XML containing the information of country, region, city, latitude and longitude. Visit https://www.geodatasource.com/web-service for further information.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";

/**
* Default service.
* @module api/DefaultApi
* @version 1.0
*/
export default class DefaultApi {

    /**
    * Constructs a new DefaultApi. 
    * @alias module:api/DefaultApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the cityGet operation.
     * @callback module:api/DefaultApi~cityGetCallback
     * @param {String} error Error message, if any.
     * @param {String} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get City name by using latitude and longitude
     * @param {String} key 
     * @param {Number} lng 
     * @param {Number} lat 
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [format] 
     * @param {module:api/DefaultApi~cityGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link String}
     */
    cityGet(key, lng, lat, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'key' is set
      if (key === undefined || key === null) {
        throw new Error("Missing the required parameter 'key' when calling cityGet");
      }
      // verify the required parameter 'lng' is set
      if (lng === undefined || lng === null) {
        throw new Error("Missing the required parameter 'lng' when calling cityGet");
      }
      // verify the required parameter 'lat' is set
      if (lat === undefined || lat === null) {
        throw new Error("Missing the required parameter 'lat' when calling cityGet");
      }

      let pathParams = {
      };
      let queryParams = {
        'key': key,
        'lng': lng,
        'lat': lat,
        'format': opts['format']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json; charset=utf-8'];
      let returnType = 'String';
      return this.apiClient.callApi(
        '/city', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
