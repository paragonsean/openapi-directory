# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetLatestCountryDataByName200ResponseInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, confirmed: int=None, country: str=None, critical: int=None, deaths: int=None, last_change: datetime=None, last_update: datetime=None, latitude: float=None, longitude: float=None, recovered: int=None):
        """GetLatestCountryDataByName200ResponseInner - a model defined in OpenAPI

        :param confirmed: The confirmed of this GetLatestCountryDataByName200ResponseInner.
        :param country: The country of this GetLatestCountryDataByName200ResponseInner.
        :param critical: The critical of this GetLatestCountryDataByName200ResponseInner.
        :param deaths: The deaths of this GetLatestCountryDataByName200ResponseInner.
        :param last_change: The last_change of this GetLatestCountryDataByName200ResponseInner.
        :param last_update: The last_update of this GetLatestCountryDataByName200ResponseInner.
        :param latitude: The latitude of this GetLatestCountryDataByName200ResponseInner.
        :param longitude: The longitude of this GetLatestCountryDataByName200ResponseInner.
        :param recovered: The recovered of this GetLatestCountryDataByName200ResponseInner.
        """
        self.openapi_types = {
            'confirmed': int,
            'country': str,
            'critical': int,
            'deaths': int,
            'last_change': datetime,
            'last_update': datetime,
            'latitude': float,
            'longitude': float,
            'recovered': int
        }

        self.attribute_map = {
            'confirmed': 'confirmed',
            'country': 'country',
            'critical': 'critical',
            'deaths': 'deaths',
            'last_change': 'lastChange',
            'last_update': 'lastUpdate',
            'latitude': 'latitude',
            'longitude': 'longitude',
            'recovered': 'recovered'
        }

        self._confirmed = confirmed
        self._country = country
        self._critical = critical
        self._deaths = deaths
        self._last_change = last_change
        self._last_update = last_update
        self._latitude = latitude
        self._longitude = longitude
        self._recovered = recovered

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetLatestCountryDataByName200ResponseInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The getLatestCountryDataByName_200_response_inner of this GetLatestCountryDataByName200ResponseInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def confirmed(self):
        """Gets the confirmed of this GetLatestCountryDataByName200ResponseInner.


        :return: The confirmed of this GetLatestCountryDataByName200ResponseInner.
        :rtype: int
        """
        return self._confirmed

    @confirmed.setter
    def confirmed(self, confirmed):
        """Sets the confirmed of this GetLatestCountryDataByName200ResponseInner.


        :param confirmed: The confirmed of this GetLatestCountryDataByName200ResponseInner.
        :type confirmed: int
        """

        self._confirmed = confirmed

    @property
    def country(self):
        """Gets the country of this GetLatestCountryDataByName200ResponseInner.


        :return: The country of this GetLatestCountryDataByName200ResponseInner.
        :rtype: str
        """
        return self._country

    @country.setter
    def country(self, country):
        """Sets the country of this GetLatestCountryDataByName200ResponseInner.


        :param country: The country of this GetLatestCountryDataByName200ResponseInner.
        :type country: str
        """

        self._country = country

    @property
    def critical(self):
        """Gets the critical of this GetLatestCountryDataByName200ResponseInner.


        :return: The critical of this GetLatestCountryDataByName200ResponseInner.
        :rtype: int
        """
        return self._critical

    @critical.setter
    def critical(self, critical):
        """Sets the critical of this GetLatestCountryDataByName200ResponseInner.


        :param critical: The critical of this GetLatestCountryDataByName200ResponseInner.
        :type critical: int
        """

        self._critical = critical

    @property
    def deaths(self):
        """Gets the deaths of this GetLatestCountryDataByName200ResponseInner.


        :return: The deaths of this GetLatestCountryDataByName200ResponseInner.
        :rtype: int
        """
        return self._deaths

    @deaths.setter
    def deaths(self, deaths):
        """Sets the deaths of this GetLatestCountryDataByName200ResponseInner.


        :param deaths: The deaths of this GetLatestCountryDataByName200ResponseInner.
        :type deaths: int
        """

        self._deaths = deaths

    @property
    def last_change(self):
        """Gets the last_change of this GetLatestCountryDataByName200ResponseInner.


        :return: The last_change of this GetLatestCountryDataByName200ResponseInner.
        :rtype: datetime
        """
        return self._last_change

    @last_change.setter
    def last_change(self, last_change):
        """Sets the last_change of this GetLatestCountryDataByName200ResponseInner.


        :param last_change: The last_change of this GetLatestCountryDataByName200ResponseInner.
        :type last_change: datetime
        """

        self._last_change = last_change

    @property
    def last_update(self):
        """Gets the last_update of this GetLatestCountryDataByName200ResponseInner.


        :return: The last_update of this GetLatestCountryDataByName200ResponseInner.
        :rtype: datetime
        """
        return self._last_update

    @last_update.setter
    def last_update(self, last_update):
        """Sets the last_update of this GetLatestCountryDataByName200ResponseInner.


        :param last_update: The last_update of this GetLatestCountryDataByName200ResponseInner.
        :type last_update: datetime
        """

        self._last_update = last_update

    @property
    def latitude(self):
        """Gets the latitude of this GetLatestCountryDataByName200ResponseInner.


        :return: The latitude of this GetLatestCountryDataByName200ResponseInner.
        :rtype: float
        """
        return self._latitude

    @latitude.setter
    def latitude(self, latitude):
        """Sets the latitude of this GetLatestCountryDataByName200ResponseInner.


        :param latitude: The latitude of this GetLatestCountryDataByName200ResponseInner.
        :type latitude: float
        """

        self._latitude = latitude

    @property
    def longitude(self):
        """Gets the longitude of this GetLatestCountryDataByName200ResponseInner.


        :return: The longitude of this GetLatestCountryDataByName200ResponseInner.
        :rtype: float
        """
        return self._longitude

    @longitude.setter
    def longitude(self, longitude):
        """Sets the longitude of this GetLatestCountryDataByName200ResponseInner.


        :param longitude: The longitude of this GetLatestCountryDataByName200ResponseInner.
        :type longitude: float
        """

        self._longitude = longitude

    @property
    def recovered(self):
        """Gets the recovered of this GetLatestCountryDataByName200ResponseInner.


        :return: The recovered of this GetLatestCountryDataByName200ResponseInner.
        :rtype: int
        """
        return self._recovered

    @recovered.setter
    def recovered(self, recovered):
        """Sets the recovered of this GetLatestCountryDataByName200ResponseInner.


        :param recovered: The recovered of this GetLatestCountryDataByName200ResponseInner.
        :type recovered: int
        """

        self._recovered = recovered
