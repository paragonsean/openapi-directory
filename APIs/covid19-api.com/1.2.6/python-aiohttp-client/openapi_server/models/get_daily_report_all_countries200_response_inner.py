# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_daily_report_all_countries200_response_inner_province_inner import GetDailyReportAllCountries200ResponseInnerProvinceInner
from openapi_server import util


class GetDailyReportAllCountries200ResponseInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, country: str=None, _date: str=None, latitude: float=None, longitude: float=None, province: List[GetDailyReportAllCountries200ResponseInnerProvinceInner]=None):
        """GetDailyReportAllCountries200ResponseInner - a model defined in OpenAPI

        :param country: The country of this GetDailyReportAllCountries200ResponseInner.
        :param _date: The _date of this GetDailyReportAllCountries200ResponseInner.
        :param latitude: The latitude of this GetDailyReportAllCountries200ResponseInner.
        :param longitude: The longitude of this GetDailyReportAllCountries200ResponseInner.
        :param province: The province of this GetDailyReportAllCountries200ResponseInner.
        """
        self.openapi_types = {
            'country': str,
            '_date': str,
            'latitude': float,
            'longitude': float,
            'province': List[GetDailyReportAllCountries200ResponseInnerProvinceInner]
        }

        self.attribute_map = {
            'country': 'country',
            '_date': 'date',
            'latitude': 'latitude',
            'longitude': 'longitude',
            'province': 'province'
        }

        self._country = country
        self.__date = _date
        self._latitude = latitude
        self._longitude = longitude
        self._province = province

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetDailyReportAllCountries200ResponseInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The getDailyReportAllCountries_200_response_inner of this GetDailyReportAllCountries200ResponseInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def country(self):
        """Gets the country of this GetDailyReportAllCountries200ResponseInner.


        :return: The country of this GetDailyReportAllCountries200ResponseInner.
        :rtype: str
        """
        return self._country

    @country.setter
    def country(self, country):
        """Sets the country of this GetDailyReportAllCountries200ResponseInner.


        :param country: The country of this GetDailyReportAllCountries200ResponseInner.
        :type country: str
        """

        self._country = country

    @property
    def _date(self):
        """Gets the _date of this GetDailyReportAllCountries200ResponseInner.


        :return: The _date of this GetDailyReportAllCountries200ResponseInner.
        :rtype: str
        """
        return self.__date

    @_date.setter
    def _date(self, _date):
        """Sets the _date of this GetDailyReportAllCountries200ResponseInner.


        :param _date: The _date of this GetDailyReportAllCountries200ResponseInner.
        :type _date: str
        """

        self.__date = _date

    @property
    def latitude(self):
        """Gets the latitude of this GetDailyReportAllCountries200ResponseInner.


        :return: The latitude of this GetDailyReportAllCountries200ResponseInner.
        :rtype: float
        """
        return self._latitude

    @latitude.setter
    def latitude(self, latitude):
        """Sets the latitude of this GetDailyReportAllCountries200ResponseInner.


        :param latitude: The latitude of this GetDailyReportAllCountries200ResponseInner.
        :type latitude: float
        """

        self._latitude = latitude

    @property
    def longitude(self):
        """Gets the longitude of this GetDailyReportAllCountries200ResponseInner.


        :return: The longitude of this GetDailyReportAllCountries200ResponseInner.
        :rtype: float
        """
        return self._longitude

    @longitude.setter
    def longitude(self, longitude):
        """Sets the longitude of this GetDailyReportAllCountries200ResponseInner.


        :param longitude: The longitude of this GetDailyReportAllCountries200ResponseInner.
        :type longitude: float
        """

        self._longitude = longitude

    @property
    def province(self):
        """Gets the province of this GetDailyReportAllCountries200ResponseInner.


        :return: The province of this GetDailyReportAllCountries200ResponseInner.
        :rtype: List[GetDailyReportAllCountries200ResponseInnerProvinceInner]
        """
        return self._province

    @province.setter
    def province(self, province):
        """Sets the province of this GetDailyReportAllCountries200ResponseInner.


        :param province: The province of this GetDailyReportAllCountries200ResponseInner.
        :type province: List[GetDailyReportAllCountries200ResponseInnerProvinceInner]
        """

        self._province = province
