/**
 * COVID-19 data API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.2.6
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetListOfCountries_200_response_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetListOfCountries_200_response_inner::OAIGetListOfCountries_200_response_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetListOfCountries_200_response_inner::OAIGetListOfCountries_200_response_inner() {
    this->initializeModel();
}

OAIGetListOfCountries_200_response_inner::~OAIGetListOfCountries_200_response_inner() {}

void OAIGetListOfCountries_200_response_inner::initializeModel() {

    m_alpha_2_code_isSet = false;
    m_alpha_2_code_isValid = false;

    m_alpha_3_code_isSet = false;
    m_alpha_3_code_isValid = false;

    m_latitude_isSet = false;
    m_latitude_isValid = false;

    m_longitude_isSet = false;
    m_longitude_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;
}

void OAIGetListOfCountries_200_response_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetListOfCountries_200_response_inner::fromJsonObject(QJsonObject json) {

    m_alpha_2_code_isValid = ::OpenAPI::fromJsonValue(m_alpha_2_code, json[QString("alpha-2-code")]);
    m_alpha_2_code_isSet = !json[QString("alpha-2-code")].isNull() && m_alpha_2_code_isValid;

    m_alpha_3_code_isValid = ::OpenAPI::fromJsonValue(m_alpha_3_code, json[QString("alpha-3-code")]);
    m_alpha_3_code_isSet = !json[QString("alpha-3-code")].isNull() && m_alpha_3_code_isValid;

    m_latitude_isValid = ::OpenAPI::fromJsonValue(m_latitude, json[QString("latitude")]);
    m_latitude_isSet = !json[QString("latitude")].isNull() && m_latitude_isValid;

    m_longitude_isValid = ::OpenAPI::fromJsonValue(m_longitude, json[QString("longitude")]);
    m_longitude_isSet = !json[QString("longitude")].isNull() && m_longitude_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;
}

QString OAIGetListOfCountries_200_response_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetListOfCountries_200_response_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_alpha_2_code_isSet) {
        obj.insert(QString("alpha-2-code"), ::OpenAPI::toJsonValue(m_alpha_2_code));
    }
    if (m_alpha_3_code_isSet) {
        obj.insert(QString("alpha-3-code"), ::OpenAPI::toJsonValue(m_alpha_3_code));
    }
    if (m_latitude_isSet) {
        obj.insert(QString("latitude"), ::OpenAPI::toJsonValue(m_latitude));
    }
    if (m_longitude_isSet) {
        obj.insert(QString("longitude"), ::OpenAPI::toJsonValue(m_longitude));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    return obj;
}

QString OAIGetListOfCountries_200_response_inner::getAlpha2Code() const {
    return m_alpha_2_code;
}
void OAIGetListOfCountries_200_response_inner::setAlpha2Code(const QString &alpha_2_code) {
    m_alpha_2_code = alpha_2_code;
    m_alpha_2_code_isSet = true;
}

bool OAIGetListOfCountries_200_response_inner::is_alpha_2_code_Set() const{
    return m_alpha_2_code_isSet;
}

bool OAIGetListOfCountries_200_response_inner::is_alpha_2_code_Valid() const{
    return m_alpha_2_code_isValid;
}

QString OAIGetListOfCountries_200_response_inner::getAlpha3Code() const {
    return m_alpha_3_code;
}
void OAIGetListOfCountries_200_response_inner::setAlpha3Code(const QString &alpha_3_code) {
    m_alpha_3_code = alpha_3_code;
    m_alpha_3_code_isSet = true;
}

bool OAIGetListOfCountries_200_response_inner::is_alpha_3_code_Set() const{
    return m_alpha_3_code_isSet;
}

bool OAIGetListOfCountries_200_response_inner::is_alpha_3_code_Valid() const{
    return m_alpha_3_code_isValid;
}

float OAIGetListOfCountries_200_response_inner::getLatitude() const {
    return m_latitude;
}
void OAIGetListOfCountries_200_response_inner::setLatitude(const float &latitude) {
    m_latitude = latitude;
    m_latitude_isSet = true;
}

bool OAIGetListOfCountries_200_response_inner::is_latitude_Set() const{
    return m_latitude_isSet;
}

bool OAIGetListOfCountries_200_response_inner::is_latitude_Valid() const{
    return m_latitude_isValid;
}

float OAIGetListOfCountries_200_response_inner::getLongitude() const {
    return m_longitude;
}
void OAIGetListOfCountries_200_response_inner::setLongitude(const float &longitude) {
    m_longitude = longitude;
    m_longitude_isSet = true;
}

bool OAIGetListOfCountries_200_response_inner::is_longitude_Set() const{
    return m_longitude_isSet;
}

bool OAIGetListOfCountries_200_response_inner::is_longitude_Valid() const{
    return m_longitude_isValid;
}

QString OAIGetListOfCountries_200_response_inner::getName() const {
    return m_name;
}
void OAIGetListOfCountries_200_response_inner::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGetListOfCountries_200_response_inner::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGetListOfCountries_200_response_inner::is_name_Valid() const{
    return m_name_isValid;
}

bool OAIGetListOfCountries_200_response_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_alpha_2_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_alpha_3_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_latitude_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_longitude_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetListOfCountries_200_response_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
