/**
 * COVID-19 data API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.2.6
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetDailyReportAllCountries_200_response_inner_province_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetDailyReportAllCountries_200_response_inner_province_inner::OAIGetDailyReportAllCountries_200_response_inner_province_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetDailyReportAllCountries_200_response_inner_province_inner::OAIGetDailyReportAllCountries_200_response_inner_province_inner() {
    this->initializeModel();
}

OAIGetDailyReportAllCountries_200_response_inner_province_inner::~OAIGetDailyReportAllCountries_200_response_inner_province_inner() {}

void OAIGetDailyReportAllCountries_200_response_inner_province_inner::initializeModel() {

    m_active_isSet = false;
    m_active_isValid = false;

    m_confirmed_isSet = false;
    m_confirmed_isValid = false;

    m_deaths_isSet = false;
    m_deaths_isValid = false;

    m_recovered_isSet = false;
    m_recovered_isValid = false;
}

void OAIGetDailyReportAllCountries_200_response_inner_province_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetDailyReportAllCountries_200_response_inner_province_inner::fromJsonObject(QJsonObject json) {

    m_active_isValid = ::OpenAPI::fromJsonValue(m_active, json[QString("active")]);
    m_active_isSet = !json[QString("active")].isNull() && m_active_isValid;

    m_confirmed_isValid = ::OpenAPI::fromJsonValue(m_confirmed, json[QString("confirmed")]);
    m_confirmed_isSet = !json[QString("confirmed")].isNull() && m_confirmed_isValid;

    m_deaths_isValid = ::OpenAPI::fromJsonValue(m_deaths, json[QString("deaths")]);
    m_deaths_isSet = !json[QString("deaths")].isNull() && m_deaths_isValid;

    m_recovered_isValid = ::OpenAPI::fromJsonValue(m_recovered, json[QString("recovered")]);
    m_recovered_isSet = !json[QString("recovered")].isNull() && m_recovered_isValid;
}

QString OAIGetDailyReportAllCountries_200_response_inner_province_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetDailyReportAllCountries_200_response_inner_province_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_active_isSet) {
        obj.insert(QString("active"), ::OpenAPI::toJsonValue(m_active));
    }
    if (m_confirmed_isSet) {
        obj.insert(QString("confirmed"), ::OpenAPI::toJsonValue(m_confirmed));
    }
    if (m_deaths_isSet) {
        obj.insert(QString("deaths"), ::OpenAPI::toJsonValue(m_deaths));
    }
    if (m_recovered_isSet) {
        obj.insert(QString("recovered"), ::OpenAPI::toJsonValue(m_recovered));
    }
    return obj;
}

qint32 OAIGetDailyReportAllCountries_200_response_inner_province_inner::getActive() const {
    return m_active;
}
void OAIGetDailyReportAllCountries_200_response_inner_province_inner::setActive(const qint32 &active) {
    m_active = active;
    m_active_isSet = true;
}

bool OAIGetDailyReportAllCountries_200_response_inner_province_inner::is_active_Set() const{
    return m_active_isSet;
}

bool OAIGetDailyReportAllCountries_200_response_inner_province_inner::is_active_Valid() const{
    return m_active_isValid;
}

qint32 OAIGetDailyReportAllCountries_200_response_inner_province_inner::getConfirmed() const {
    return m_confirmed;
}
void OAIGetDailyReportAllCountries_200_response_inner_province_inner::setConfirmed(const qint32 &confirmed) {
    m_confirmed = confirmed;
    m_confirmed_isSet = true;
}

bool OAIGetDailyReportAllCountries_200_response_inner_province_inner::is_confirmed_Set() const{
    return m_confirmed_isSet;
}

bool OAIGetDailyReportAllCountries_200_response_inner_province_inner::is_confirmed_Valid() const{
    return m_confirmed_isValid;
}

qint32 OAIGetDailyReportAllCountries_200_response_inner_province_inner::getDeaths() const {
    return m_deaths;
}
void OAIGetDailyReportAllCountries_200_response_inner_province_inner::setDeaths(const qint32 &deaths) {
    m_deaths = deaths;
    m_deaths_isSet = true;
}

bool OAIGetDailyReportAllCountries_200_response_inner_province_inner::is_deaths_Set() const{
    return m_deaths_isSet;
}

bool OAIGetDailyReportAllCountries_200_response_inner_province_inner::is_deaths_Valid() const{
    return m_deaths_isValid;
}

qint32 OAIGetDailyReportAllCountries_200_response_inner_province_inner::getRecovered() const {
    return m_recovered;
}
void OAIGetDailyReportAllCountries_200_response_inner_province_inner::setRecovered(const qint32 &recovered) {
    m_recovered = recovered;
    m_recovered_isSet = true;
}

bool OAIGetDailyReportAllCountries_200_response_inner_province_inner::is_recovered_Set() const{
    return m_recovered_isSet;
}

bool OAIGetDailyReportAllCountries_200_response_inner_province_inner::is_recovered_Valid() const{
    return m_recovered_isValid;
}

bool OAIGetDailyReportAllCountries_200_response_inner_province_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_active_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_confirmed_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_deaths_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_recovered_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetDailyReportAllCountries_200_response_inner_province_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
