# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class QuizMarkResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, attempts: int=None, last_attempt_at: datetime=None, learner_email: str=None, learner_fullname: str=None, learner_person_id: str=None, mark: str=None, quiz_id: str=None, quiz_title: str=None):
        """QuizMarkResponse - a model defined in OpenAPI

        :param attempts: The attempts of this QuizMarkResponse.
        :param last_attempt_at: The last_attempt_at of this QuizMarkResponse.
        :param learner_email: The learner_email of this QuizMarkResponse.
        :param learner_fullname: The learner_fullname of this QuizMarkResponse.
        :param learner_person_id: The learner_person_id of this QuizMarkResponse.
        :param mark: The mark of this QuizMarkResponse.
        :param quiz_id: The quiz_id of this QuizMarkResponse.
        :param quiz_title: The quiz_title of this QuizMarkResponse.
        """
        self.openapi_types = {
            'attempts': int,
            'last_attempt_at': datetime,
            'learner_email': str,
            'learner_fullname': str,
            'learner_person_id': str,
            'mark': str,
            'quiz_id': str,
            'quiz_title': str
        }

        self.attribute_map = {
            'attempts': 'attempts',
            'last_attempt_at': 'lastAttemptAt',
            'learner_email': 'learnerEmail',
            'learner_fullname': 'learnerFullname',
            'learner_person_id': 'learnerPersonId',
            'mark': 'mark',
            'quiz_id': 'quizId',
            'quiz_title': 'quizTitle'
        }

        self._attempts = attempts
        self._last_attempt_at = last_attempt_at
        self._learner_email = learner_email
        self._learner_fullname = learner_fullname
        self._learner_person_id = learner_person_id
        self._mark = mark
        self._quiz_id = quiz_id
        self._quiz_title = quiz_title

    @classmethod
    def from_dict(cls, dikt: dict) -> 'QuizMarkResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The QuizMarkResponse of this QuizMarkResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def attempts(self):
        """Gets the attempts of this QuizMarkResponse.


        :return: The attempts of this QuizMarkResponse.
        :rtype: int
        """
        return self._attempts

    @attempts.setter
    def attempts(self, attempts):
        """Sets the attempts of this QuizMarkResponse.


        :param attempts: The attempts of this QuizMarkResponse.
        :type attempts: int
        """

        self._attempts = attempts

    @property
    def last_attempt_at(self):
        """Gets the last_attempt_at of this QuizMarkResponse.


        :return: The last_attempt_at of this QuizMarkResponse.
        :rtype: datetime
        """
        return self._last_attempt_at

    @last_attempt_at.setter
    def last_attempt_at(self, last_attempt_at):
        """Sets the last_attempt_at of this QuizMarkResponse.


        :param last_attempt_at: The last_attempt_at of this QuizMarkResponse.
        :type last_attempt_at: datetime
        """

        self._last_attempt_at = last_attempt_at

    @property
    def learner_email(self):
        """Gets the learner_email of this QuizMarkResponse.


        :return: The learner_email of this QuizMarkResponse.
        :rtype: str
        """
        return self._learner_email

    @learner_email.setter
    def learner_email(self, learner_email):
        """Sets the learner_email of this QuizMarkResponse.


        :param learner_email: The learner_email of this QuizMarkResponse.
        :type learner_email: str
        """

        self._learner_email = learner_email

    @property
    def learner_fullname(self):
        """Gets the learner_fullname of this QuizMarkResponse.


        :return: The learner_fullname of this QuizMarkResponse.
        :rtype: str
        """
        return self._learner_fullname

    @learner_fullname.setter
    def learner_fullname(self, learner_fullname):
        """Sets the learner_fullname of this QuizMarkResponse.


        :param learner_fullname: The learner_fullname of this QuizMarkResponse.
        :type learner_fullname: str
        """

        self._learner_fullname = learner_fullname

    @property
    def learner_person_id(self):
        """Gets the learner_person_id of this QuizMarkResponse.


        :return: The learner_person_id of this QuizMarkResponse.
        :rtype: str
        """
        return self._learner_person_id

    @learner_person_id.setter
    def learner_person_id(self, learner_person_id):
        """Sets the learner_person_id of this QuizMarkResponse.


        :param learner_person_id: The learner_person_id of this QuizMarkResponse.
        :type learner_person_id: str
        """

        self._learner_person_id = learner_person_id

    @property
    def mark(self):
        """Gets the mark of this QuizMarkResponse.


        :return: The mark of this QuizMarkResponse.
        :rtype: str
        """
        return self._mark

    @mark.setter
    def mark(self, mark):
        """Sets the mark of this QuizMarkResponse.


        :param mark: The mark of this QuizMarkResponse.
        :type mark: str
        """

        self._mark = mark

    @property
    def quiz_id(self):
        """Gets the quiz_id of this QuizMarkResponse.


        :return: The quiz_id of this QuizMarkResponse.
        :rtype: str
        """
        return self._quiz_id

    @quiz_id.setter
    def quiz_id(self, quiz_id):
        """Sets the quiz_id of this QuizMarkResponse.


        :param quiz_id: The quiz_id of this QuizMarkResponse.
        :type quiz_id: str
        """

        self._quiz_id = quiz_id

    @property
    def quiz_title(self):
        """Gets the quiz_title of this QuizMarkResponse.


        :return: The quiz_title of this QuizMarkResponse.
        :rtype: str
        """
        return self._quiz_title

    @quiz_title.setter
    def quiz_title(self, quiz_title):
        """Sets the quiz_title of this QuizMarkResponse.


        :param quiz_title: The quiz_title of this QuizMarkResponse.
        :type quiz_title: str
        """

        self._quiz_title = quiz_title
