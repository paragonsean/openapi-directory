# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TransferRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, from_offering_id: str=None, send_invite: bool=None, to_offering_id: str=None):
        """TransferRequest - a model defined in OpenAPI

        :param from_offering_id: The from_offering_id of this TransferRequest.
        :param send_invite: The send_invite of this TransferRequest.
        :param to_offering_id: The to_offering_id of this TransferRequest.
        """
        self.openapi_types = {
            'from_offering_id': str,
            'send_invite': bool,
            'to_offering_id': str
        }

        self.attribute_map = {
            'from_offering_id': 'fromOfferingId',
            'send_invite': 'sendInvite',
            'to_offering_id': 'toOfferingId'
        }

        self._from_offering_id = from_offering_id
        self._send_invite = send_invite
        self._to_offering_id = to_offering_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TransferRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TransferRequest of this TransferRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def from_offering_id(self):
        """Gets the from_offering_id of this TransferRequest.


        :return: The from_offering_id of this TransferRequest.
        :rtype: str
        """
        return self._from_offering_id

    @from_offering_id.setter
    def from_offering_id(self, from_offering_id):
        """Sets the from_offering_id of this TransferRequest.


        :param from_offering_id: The from_offering_id of this TransferRequest.
        :type from_offering_id: str
        """

        self._from_offering_id = from_offering_id

    @property
    def send_invite(self):
        """Gets the send_invite of this TransferRequest.


        :return: The send_invite of this TransferRequest.
        :rtype: bool
        """
        return self._send_invite

    @send_invite.setter
    def send_invite(self, send_invite):
        """Sets the send_invite of this TransferRequest.


        :param send_invite: The send_invite of this TransferRequest.
        :type send_invite: bool
        """

        self._send_invite = send_invite

    @property
    def to_offering_id(self):
        """Gets the to_offering_id of this TransferRequest.


        :return: The to_offering_id of this TransferRequest.
        :rtype: str
        """
        return self._to_offering_id

    @to_offering_id.setter
    def to_offering_id(self, to_offering_id):
        """Sets the to_offering_id of this TransferRequest.


        :param to_offering_id: The to_offering_id of this TransferRequest.
        :type to_offering_id: str
        """

        self._to_offering_id = to_offering_id
