# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class OfferingActivitiesResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, activity_id: str=None, time: float=None, title: str=None):
        """OfferingActivitiesResponse - a model defined in OpenAPI

        :param activity_id: The activity_id of this OfferingActivitiesResponse.
        :param time: The time of this OfferingActivitiesResponse.
        :param title: The title of this OfferingActivitiesResponse.
        """
        self.openapi_types = {
            'activity_id': str,
            'time': float,
            'title': str
        }

        self.attribute_map = {
            'activity_id': 'activityId',
            'time': 'time',
            'title': 'title'
        }

        self._activity_id = activity_id
        self._time = time
        self._title = title

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OfferingActivitiesResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OfferingActivitiesResponse of this OfferingActivitiesResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def activity_id(self):
        """Gets the activity_id of this OfferingActivitiesResponse.


        :return: The activity_id of this OfferingActivitiesResponse.
        :rtype: str
        """
        return self._activity_id

    @activity_id.setter
    def activity_id(self, activity_id):
        """Sets the activity_id of this OfferingActivitiesResponse.


        :param activity_id: The activity_id of this OfferingActivitiesResponse.
        :type activity_id: str
        """

        self._activity_id = activity_id

    @property
    def time(self):
        """Gets the time of this OfferingActivitiesResponse.

        expected minutes to complete

        :return: The time of this OfferingActivitiesResponse.
        :rtype: float
        """
        return self._time

    @time.setter
    def time(self, time):
        """Sets the time of this OfferingActivitiesResponse.

        expected minutes to complete

        :param time: The time of this OfferingActivitiesResponse.
        :type time: float
        """

        self._time = time

    @property
    def title(self):
        """Gets the title of this OfferingActivitiesResponse.


        :return: The title of this OfferingActivitiesResponse.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this OfferingActivitiesResponse.


        :param title: The title of this OfferingActivitiesResponse.
        :type title: str
        """

        self._title = title
