# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AwardedResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, awarded: bool=None, badge_id: str=None, badge_url: str=None):
        """AwardedResponse - a model defined in OpenAPI

        :param awarded: The awarded of this AwardedResponse.
        :param badge_id: The badge_id of this AwardedResponse.
        :param badge_url: The badge_url of this AwardedResponse.
        """
        self.openapi_types = {
            'awarded': bool,
            'badge_id': str,
            'badge_url': str
        }

        self.attribute_map = {
            'awarded': 'awarded',
            'badge_id': 'badgeId',
            'badge_url': 'badgeUrl'
        }

        self._awarded = awarded
        self._badge_id = badge_id
        self._badge_url = badge_url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AwardedResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AwardedResponse of this AwardedResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def awarded(self):
        """Gets the awarded of this AwardedResponse.


        :return: The awarded of this AwardedResponse.
        :rtype: bool
        """
        return self._awarded

    @awarded.setter
    def awarded(self, awarded):
        """Sets the awarded of this AwardedResponse.


        :param awarded: The awarded of this AwardedResponse.
        :type awarded: bool
        """

        self._awarded = awarded

    @property
    def badge_id(self):
        """Gets the badge_id of this AwardedResponse.


        :return: The badge_id of this AwardedResponse.
        :rtype: str
        """
        return self._badge_id

    @badge_id.setter
    def badge_id(self, badge_id):
        """Sets the badge_id of this AwardedResponse.


        :param badge_id: The badge_id of this AwardedResponse.
        :type badge_id: str
        """

        self._badge_id = badge_id

    @property
    def badge_url(self):
        """Gets the badge_url of this AwardedResponse.


        :return: The badge_url of this AwardedResponse.
        :rtype: str
        """
        return self._badge_url

    @badge_url.setter
    def badge_url(self, badge_url):
        """Sets the badge_url of this AwardedResponse.


        :param badge_url: The badge_url of this AwardedResponse.
        :type badge_url: str
        """

        self._badge_url = badge_url
