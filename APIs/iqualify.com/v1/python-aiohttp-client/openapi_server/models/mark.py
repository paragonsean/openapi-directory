# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.mark_feedback import MarkFeedback
from openapi_server import util


class Mark(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created_at: datetime=None, feedback: str=None, id: str=None, mark: str=None, mark_feedback: List[MarkFeedback]=None, marked_by: str=None, marker_id: str=None):
        """Mark - a model defined in OpenAPI

        :param created_at: The created_at of this Mark.
        :param feedback: The feedback of this Mark.
        :param id: The id of this Mark.
        :param mark: The mark of this Mark.
        :param mark_feedback: The mark_feedback of this Mark.
        :param marked_by: The marked_by of this Mark.
        :param marker_id: The marker_id of this Mark.
        """
        self.openapi_types = {
            'created_at': datetime,
            'feedback': str,
            'id': str,
            'mark': str,
            'mark_feedback': List[MarkFeedback],
            'marked_by': str,
            'marker_id': str
        }

        self.attribute_map = {
            'created_at': 'createdAt',
            'feedback': 'feedback',
            'id': 'id',
            'mark': 'mark',
            'mark_feedback': 'markFeedback',
            'marked_by': 'markedBy',
            'marker_id': 'markerId'
        }

        self._created_at = created_at
        self._feedback = feedback
        self._id = id
        self._mark = mark
        self._mark_feedback = mark_feedback
        self._marked_by = marked_by
        self._marker_id = marker_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Mark':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Mark of this Mark.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created_at(self):
        """Gets the created_at of this Mark.


        :return: The created_at of this Mark.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this Mark.


        :param created_at: The created_at of this Mark.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def feedback(self):
        """Gets the feedback of this Mark.


        :return: The feedback of this Mark.
        :rtype: str
        """
        return self._feedback

    @feedback.setter
    def feedback(self, feedback):
        """Sets the feedback of this Mark.


        :param feedback: The feedback of this Mark.
        :type feedback: str
        """

        self._feedback = feedback

    @property
    def id(self):
        """Gets the id of this Mark.


        :return: The id of this Mark.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Mark.


        :param id: The id of this Mark.
        :type id: str
        """

        self._id = id

    @property
    def mark(self):
        """Gets the mark of this Mark.


        :return: The mark of this Mark.
        :rtype: str
        """
        return self._mark

    @mark.setter
    def mark(self, mark):
        """Sets the mark of this Mark.


        :param mark: The mark of this Mark.
        :type mark: str
        """

        self._mark = mark

    @property
    def mark_feedback(self):
        """Gets the mark_feedback of this Mark.


        :return: The mark_feedback of this Mark.
        :rtype: List[MarkFeedback]
        """
        return self._mark_feedback

    @mark_feedback.setter
    def mark_feedback(self, mark_feedback):
        """Sets the mark_feedback of this Mark.


        :param mark_feedback: The mark_feedback of this Mark.
        :type mark_feedback: List[MarkFeedback]
        """

        self._mark_feedback = mark_feedback

    @property
    def marked_by(self):
        """Gets the marked_by of this Mark.


        :return: The marked_by of this Mark.
        :rtype: str
        """
        return self._marked_by

    @marked_by.setter
    def marked_by(self, marked_by):
        """Sets the marked_by of this Mark.


        :param marked_by: The marked_by of this Mark.
        :type marked_by: str
        """

        self._marked_by = marked_by

    @property
    def marker_id(self):
        """Gets the marker_id of this Mark.


        :return: The marker_id of this Mark.
        :rtype: str
        """
        return self._marker_id

    @marker_id.setter
    def marker_id(self, marker_id):
        """Sets the marker_id of this Mark.


        :param marker_id: The marker_id of this Mark.
        :type marker_id: str
        """

        self._marker_id = marker_id
