# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SocialNotesResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, email: str=None, first_name: str=None, last_name: str=None, page_id: str=None, person_id: str=None, social_note_content: str=None, social_note_paragraph_id: str=None, user_id: str=None):
        """SocialNotesResponse - a model defined in OpenAPI

        :param email: The email of this SocialNotesResponse.
        :param first_name: The first_name of this SocialNotesResponse.
        :param last_name: The last_name of this SocialNotesResponse.
        :param page_id: The page_id of this SocialNotesResponse.
        :param person_id: The person_id of this SocialNotesResponse.
        :param social_note_content: The social_note_content of this SocialNotesResponse.
        :param social_note_paragraph_id: The social_note_paragraph_id of this SocialNotesResponse.
        :param user_id: The user_id of this SocialNotesResponse.
        """
        self.openapi_types = {
            'email': str,
            'first_name': str,
            'last_name': str,
            'page_id': str,
            'person_id': str,
            'social_note_content': str,
            'social_note_paragraph_id': str,
            'user_id': str
        }

        self.attribute_map = {
            'email': 'email',
            'first_name': 'firstName',
            'last_name': 'lastName',
            'page_id': 'pageId',
            'person_id': 'personId',
            'social_note_content': 'social-note-content',
            'social_note_paragraph_id': 'social-note-paragraphId',
            'user_id': 'userId'
        }

        self._email = email
        self._first_name = first_name
        self._last_name = last_name
        self._page_id = page_id
        self._person_id = person_id
        self._social_note_content = social_note_content
        self._social_note_paragraph_id = social_note_paragraph_id
        self._user_id = user_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SocialNotesResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SocialNotesResponse of this SocialNotesResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def email(self):
        """Gets the email of this SocialNotesResponse.


        :return: The email of this SocialNotesResponse.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this SocialNotesResponse.


        :param email: The email of this SocialNotesResponse.
        :type email: str
        """

        self._email = email

    @property
    def first_name(self):
        """Gets the first_name of this SocialNotesResponse.


        :return: The first_name of this SocialNotesResponse.
        :rtype: str
        """
        return self._first_name

    @first_name.setter
    def first_name(self, first_name):
        """Sets the first_name of this SocialNotesResponse.


        :param first_name: The first_name of this SocialNotesResponse.
        :type first_name: str
        """

        self._first_name = first_name

    @property
    def last_name(self):
        """Gets the last_name of this SocialNotesResponse.


        :return: The last_name of this SocialNotesResponse.
        :rtype: str
        """
        return self._last_name

    @last_name.setter
    def last_name(self, last_name):
        """Sets the last_name of this SocialNotesResponse.


        :param last_name: The last_name of this SocialNotesResponse.
        :type last_name: str
        """

        self._last_name = last_name

    @property
    def page_id(self):
        """Gets the page_id of this SocialNotesResponse.


        :return: The page_id of this SocialNotesResponse.
        :rtype: str
        """
        return self._page_id

    @page_id.setter
    def page_id(self, page_id):
        """Sets the page_id of this SocialNotesResponse.


        :param page_id: The page_id of this SocialNotesResponse.
        :type page_id: str
        """

        self._page_id = page_id

    @property
    def person_id(self):
        """Gets the person_id of this SocialNotesResponse.


        :return: The person_id of this SocialNotesResponse.
        :rtype: str
        """
        return self._person_id

    @person_id.setter
    def person_id(self, person_id):
        """Sets the person_id of this SocialNotesResponse.


        :param person_id: The person_id of this SocialNotesResponse.
        :type person_id: str
        """

        self._person_id = person_id

    @property
    def social_note_content(self):
        """Gets the social_note_content of this SocialNotesResponse.


        :return: The social_note_content of this SocialNotesResponse.
        :rtype: str
        """
        return self._social_note_content

    @social_note_content.setter
    def social_note_content(self, social_note_content):
        """Sets the social_note_content of this SocialNotesResponse.


        :param social_note_content: The social_note_content of this SocialNotesResponse.
        :type social_note_content: str
        """

        self._social_note_content = social_note_content

    @property
    def social_note_paragraph_id(self):
        """Gets the social_note_paragraph_id of this SocialNotesResponse.


        :return: The social_note_paragraph_id of this SocialNotesResponse.
        :rtype: str
        """
        return self._social_note_paragraph_id

    @social_note_paragraph_id.setter
    def social_note_paragraph_id(self, social_note_paragraph_id):
        """Sets the social_note_paragraph_id of this SocialNotesResponse.


        :param social_note_paragraph_id: The social_note_paragraph_id of this SocialNotesResponse.
        :type social_note_paragraph_id: str
        """

        self._social_note_paragraph_id = social_note_paragraph_id

    @property
    def user_id(self):
        """Gets the user_id of this SocialNotesResponse.


        :return: The user_id of this SocialNotesResponse.
        :rtype: str
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id):
        """Sets the user_id of this SocialNotesResponse.


        :param user_id: The user_id of this SocialNotesResponse.
        :type user_id: str
        """

        self._user_id = user_id
