# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.course_meta_response_metadata import CourseMetaResponseMetadata
from openapi_server import util


class CourseMetaResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cover_image_url: str=None, created_at: datetime=None, id: str=None, metadata: CourseMetaResponseMetadata=None, name: str=None, tasks_enabled: bool=None):
        """CourseMetaResponse - a model defined in OpenAPI

        :param cover_image_url: The cover_image_url of this CourseMetaResponse.
        :param created_at: The created_at of this CourseMetaResponse.
        :param id: The id of this CourseMetaResponse.
        :param metadata: The metadata of this CourseMetaResponse.
        :param name: The name of this CourseMetaResponse.
        :param tasks_enabled: The tasks_enabled of this CourseMetaResponse.
        """
        self.openapi_types = {
            'cover_image_url': str,
            'created_at': datetime,
            'id': str,
            'metadata': CourseMetaResponseMetadata,
            'name': str,
            'tasks_enabled': bool
        }

        self.attribute_map = {
            'cover_image_url': 'coverImageUrl',
            'created_at': 'createdAt',
            'id': 'id',
            'metadata': 'metadata',
            'name': 'name',
            'tasks_enabled': 'tasksEnabled'
        }

        self._cover_image_url = cover_image_url
        self._created_at = created_at
        self._id = id
        self._metadata = metadata
        self._name = name
        self._tasks_enabled = tasks_enabled

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CourseMetaResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CourseMetaResponse of this CourseMetaResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cover_image_url(self):
        """Gets the cover_image_url of this CourseMetaResponse.


        :return: The cover_image_url of this CourseMetaResponse.
        :rtype: str
        """
        return self._cover_image_url

    @cover_image_url.setter
    def cover_image_url(self, cover_image_url):
        """Sets the cover_image_url of this CourseMetaResponse.


        :param cover_image_url: The cover_image_url of this CourseMetaResponse.
        :type cover_image_url: str
        """

        self._cover_image_url = cover_image_url

    @property
    def created_at(self):
        """Gets the created_at of this CourseMetaResponse.


        :return: The created_at of this CourseMetaResponse.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this CourseMetaResponse.


        :param created_at: The created_at of this CourseMetaResponse.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def id(self):
        """Gets the id of this CourseMetaResponse.


        :return: The id of this CourseMetaResponse.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this CourseMetaResponse.


        :param id: The id of this CourseMetaResponse.
        :type id: str
        """

        self._id = id

    @property
    def metadata(self):
        """Gets the metadata of this CourseMetaResponse.


        :return: The metadata of this CourseMetaResponse.
        :rtype: CourseMetaResponseMetadata
        """
        return self._metadata

    @metadata.setter
    def metadata(self, metadata):
        """Sets the metadata of this CourseMetaResponse.


        :param metadata: The metadata of this CourseMetaResponse.
        :type metadata: CourseMetaResponseMetadata
        """

        self._metadata = metadata

    @property
    def name(self):
        """Gets the name of this CourseMetaResponse.


        :return: The name of this CourseMetaResponse.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this CourseMetaResponse.


        :param name: The name of this CourseMetaResponse.
        :type name: str
        """

        self._name = name

    @property
    def tasks_enabled(self):
        """Gets the tasks_enabled of this CourseMetaResponse.


        :return: The tasks_enabled of this CourseMetaResponse.
        :rtype: bool
        """
        return self._tasks_enabled

    @tasks_enabled.setter
    def tasks_enabled(self, tasks_enabled):
        """Sets the tasks_enabled of this CourseMetaResponse.


        :param tasks_enabled: The tasks_enabled of this CourseMetaResponse.
        :type tasks_enabled: bool
        """

        self._tasks_enabled = tasks_enabled
