# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.pulse_mcq_option import PulseMCQOption
from openapi_server.models.pulse_spatial_option import PulseSpatialOption
from openapi_server import util


class PulseAnswer(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, multi_choice_answer: List[PulseMCQOption]=None, spatial_answer: List[PulseSpatialOption]=None, text_answer: str=None):
        """PulseAnswer - a model defined in OpenAPI

        :param multi_choice_answer: The multi_choice_answer of this PulseAnswer.
        :param spatial_answer: The spatial_answer of this PulseAnswer.
        :param text_answer: The text_answer of this PulseAnswer.
        """
        self.openapi_types = {
            'multi_choice_answer': List[PulseMCQOption],
            'spatial_answer': List[PulseSpatialOption],
            'text_answer': str
        }

        self.attribute_map = {
            'multi_choice_answer': 'multiChoiceAnswer',
            'spatial_answer': 'spatialAnswer',
            'text_answer': 'textAnswer'
        }

        self._multi_choice_answer = multi_choice_answer
        self._spatial_answer = spatial_answer
        self._text_answer = text_answer

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PulseAnswer':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PulseAnswer of this PulseAnswer.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def multi_choice_answer(self):
        """Gets the multi_choice_answer of this PulseAnswer.


        :return: The multi_choice_answer of this PulseAnswer.
        :rtype: List[PulseMCQOption]
        """
        return self._multi_choice_answer

    @multi_choice_answer.setter
    def multi_choice_answer(self, multi_choice_answer):
        """Sets the multi_choice_answer of this PulseAnswer.


        :param multi_choice_answer: The multi_choice_answer of this PulseAnswer.
        :type multi_choice_answer: List[PulseMCQOption]
        """

        self._multi_choice_answer = multi_choice_answer

    @property
    def spatial_answer(self):
        """Gets the spatial_answer of this PulseAnswer.


        :return: The spatial_answer of this PulseAnswer.
        :rtype: List[PulseSpatialOption]
        """
        return self._spatial_answer

    @spatial_answer.setter
    def spatial_answer(self, spatial_answer):
        """Sets the spatial_answer of this PulseAnswer.


        :param spatial_answer: The spatial_answer of this PulseAnswer.
        :type spatial_answer: List[PulseSpatialOption]
        """

        self._spatial_answer = spatial_answer

    @property
    def text_answer(self):
        """Gets the text_answer of this PulseAnswer.


        :return: The text_answer of this PulseAnswer.
        :rtype: str
        """
        return self._text_answer

    @text_answer.setter
    def text_answer(self, text_answer):
        """Sets the text_answer of this PulseAnswer.


        :param text_answer: The text_answer of this PulseAnswer.
        :type text_answer: str
        """

        self._text_answer = text_answer
