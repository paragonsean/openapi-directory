# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.course_response_metadata import CourseResponseMetadata
from openapi_server import util


class CourseResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cover_image_url: str=None, created_at: datetime=None, id: str=None, metadata: CourseResponseMetadata=None, name: str=None):
        """CourseResponse - a model defined in OpenAPI

        :param cover_image_url: The cover_image_url of this CourseResponse.
        :param created_at: The created_at of this CourseResponse.
        :param id: The id of this CourseResponse.
        :param metadata: The metadata of this CourseResponse.
        :param name: The name of this CourseResponse.
        """
        self.openapi_types = {
            'cover_image_url': str,
            'created_at': datetime,
            'id': str,
            'metadata': CourseResponseMetadata,
            'name': str
        }

        self.attribute_map = {
            'cover_image_url': 'coverImageUrl',
            'created_at': 'createdAt',
            'id': 'id',
            'metadata': 'metadata',
            'name': 'name'
        }

        self._cover_image_url = cover_image_url
        self._created_at = created_at
        self._id = id
        self._metadata = metadata
        self._name = name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CourseResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CourseResponse of this CourseResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cover_image_url(self):
        """Gets the cover_image_url of this CourseResponse.


        :return: The cover_image_url of this CourseResponse.
        :rtype: str
        """
        return self._cover_image_url

    @cover_image_url.setter
    def cover_image_url(self, cover_image_url):
        """Sets the cover_image_url of this CourseResponse.


        :param cover_image_url: The cover_image_url of this CourseResponse.
        :type cover_image_url: str
        """

        self._cover_image_url = cover_image_url

    @property
    def created_at(self):
        """Gets the created_at of this CourseResponse.


        :return: The created_at of this CourseResponse.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this CourseResponse.


        :param created_at: The created_at of this CourseResponse.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def id(self):
        """Gets the id of this CourseResponse.


        :return: The id of this CourseResponse.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this CourseResponse.


        :param id: The id of this CourseResponse.
        :type id: str
        """

        self._id = id

    @property
    def metadata(self):
        """Gets the metadata of this CourseResponse.


        :return: The metadata of this CourseResponse.
        :rtype: CourseResponseMetadata
        """
        return self._metadata

    @metadata.setter
    def metadata(self, metadata):
        """Sets the metadata of this CourseResponse.


        :param metadata: The metadata of this CourseResponse.
        :type metadata: CourseResponseMetadata
        """

        self._metadata = metadata

    @property
    def name(self):
        """Gets the name of this CourseResponse.


        :return: The name of this CourseResponse.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this CourseResponse.


        :param name: The name of this CourseResponse.
        :type name: str
        """

        self._name = name
