# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ChannelRequired(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, is_broadcast_only: bool=False, title: str=None):
        """ChannelRequired - a model defined in OpenAPI

        :param is_broadcast_only: The is_broadcast_only of this ChannelRequired.
        :param title: The title of this ChannelRequired.
        """
        self.openapi_types = {
            'is_broadcast_only': bool,
            'title': str
        }

        self.attribute_map = {
            'is_broadcast_only': 'isBroadcastOnly',
            'title': 'title'
        }

        self._is_broadcast_only = is_broadcast_only
        self._title = title

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ChannelRequired':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ChannelRequired of this ChannelRequired.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def is_broadcast_only(self):
        """Gets the is_broadcast_only of this ChannelRequired.


        :return: The is_broadcast_only of this ChannelRequired.
        :rtype: bool
        """
        return self._is_broadcast_only

    @is_broadcast_only.setter
    def is_broadcast_only(self, is_broadcast_only):
        """Sets the is_broadcast_only of this ChannelRequired.


        :param is_broadcast_only: The is_broadcast_only of this ChannelRequired.
        :type is_broadcast_only: bool
        """

        self._is_broadcast_only = is_broadcast_only

    @property
    def title(self):
        """Gets the title of this ChannelRequired.


        :return: The title of this ChannelRequired.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this ChannelRequired.


        :param title: The title of this ChannelRequired.
        :type title: str
        """
        if title is None:
            raise ValueError("Invalid value for `title`, must not be `None`")
        if title is not None and len(title) < 1:
            raise ValueError("Invalid value for `title`, length must be greater than or equal to `1`")

        self._title = title
