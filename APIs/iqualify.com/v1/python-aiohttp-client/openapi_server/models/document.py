# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Document(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created_at: datetime=None, filename: str=None, id: str=None, mimetype: str=None, size: int=None, url: str=None):
        """Document - a model defined in OpenAPI

        :param created_at: The created_at of this Document.
        :param filename: The filename of this Document.
        :param id: The id of this Document.
        :param mimetype: The mimetype of this Document.
        :param size: The size of this Document.
        :param url: The url of this Document.
        """
        self.openapi_types = {
            'created_at': datetime,
            'filename': str,
            'id': str,
            'mimetype': str,
            'size': int,
            'url': str
        }

        self.attribute_map = {
            'created_at': 'createdAt',
            'filename': 'filename',
            'id': 'id',
            'mimetype': 'mimetype',
            'size': 'size',
            'url': 'url'
        }

        self._created_at = created_at
        self._filename = filename
        self._id = id
        self._mimetype = mimetype
        self._size = size
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Document':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Document of this Document.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created_at(self):
        """Gets the created_at of this Document.


        :return: The created_at of this Document.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this Document.


        :param created_at: The created_at of this Document.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def filename(self):
        """Gets the filename of this Document.


        :return: The filename of this Document.
        :rtype: str
        """
        return self._filename

    @filename.setter
    def filename(self, filename):
        """Sets the filename of this Document.


        :param filename: The filename of this Document.
        :type filename: str
        """

        self._filename = filename

    @property
    def id(self):
        """Gets the id of this Document.


        :return: The id of this Document.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Document.


        :param id: The id of this Document.
        :type id: str
        """

        self._id = id

    @property
    def mimetype(self):
        """Gets the mimetype of this Document.


        :return: The mimetype of this Document.
        :rtype: str
        """
        return self._mimetype

    @mimetype.setter
    def mimetype(self, mimetype):
        """Sets the mimetype of this Document.


        :param mimetype: The mimetype of this Document.
        :type mimetype: str
        """

        self._mimetype = mimetype

    @property
    def size(self):
        """Gets the size of this Document.


        :return: The size of this Document.
        :rtype: int
        """
        return self._size

    @size.setter
    def size(self, size):
        """Sets the size of this Document.


        :param size: The size of this Document.
        :type size: int
        """

        self._size = size

    @property
    def url(self):
        """Gets the url of this Document.


        :return: The url of this Document.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this Document.


        :param url: The url of this Document.
        :type url: str
        """

        self._url = url
