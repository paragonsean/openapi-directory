# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PermissionToBeGrantedToTheUser(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, is_builder: bool=True, is_reviewer: bool=False):
        """PermissionToBeGrantedToTheUser - a model defined in OpenAPI

        :param is_builder: The is_builder of this PermissionToBeGrantedToTheUser.
        :param is_reviewer: The is_reviewer of this PermissionToBeGrantedToTheUser.
        """
        self.openapi_types = {
            'is_builder': bool,
            'is_reviewer': bool
        }

        self.attribute_map = {
            'is_builder': 'isBuilder',
            'is_reviewer': 'isReviewer'
        }

        self._is_builder = is_builder
        self._is_reviewer = is_reviewer

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PermissionToBeGrantedToTheUser':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The permission_to_be_granted_to_the_user_ of this PermissionToBeGrantedToTheUser.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def is_builder(self):
        """Gets the is_builder of this PermissionToBeGrantedToTheUser.


        :return: The is_builder of this PermissionToBeGrantedToTheUser.
        :rtype: bool
        """
        return self._is_builder

    @is_builder.setter
    def is_builder(self, is_builder):
        """Sets the is_builder of this PermissionToBeGrantedToTheUser.


        :param is_builder: The is_builder of this PermissionToBeGrantedToTheUser.
        :type is_builder: bool
        """

        self._is_builder = is_builder

    @property
    def is_reviewer(self):
        """Gets the is_reviewer of this PermissionToBeGrantedToTheUser.


        :return: The is_reviewer of this PermissionToBeGrantedToTheUser.
        :rtype: bool
        """
        return self._is_reviewer

    @is_reviewer.setter
    def is_reviewer(self, is_reviewer):
        """Sets the is_reviewer of this PermissionToBeGrantedToTheUser.


        :param is_reviewer: The is_reviewer of this PermissionToBeGrantedToTheUser.
        :type is_reviewer: bool
        """

        self._is_reviewer = is_reviewer
