# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.learning_outcomes import LearningOutcomes
from openapi_server import util


class CourseResponseMetadata(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, learning_outcomes: List[LearningOutcomes]=None):
        """CourseResponseMetadata - a model defined in OpenAPI

        :param learning_outcomes: The learning_outcomes of this CourseResponseMetadata.
        """
        self.openapi_types = {
            'learning_outcomes': List[LearningOutcomes]
        }

        self.attribute_map = {
            'learning_outcomes': 'learning_outcomes'
        }

        self._learning_outcomes = learning_outcomes

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CourseResponseMetadata':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CourseResponse_metadata of this CourseResponseMetadata.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def learning_outcomes(self):
        """Gets the learning_outcomes of this CourseResponseMetadata.


        :return: The learning_outcomes of this CourseResponseMetadata.
        :rtype: List[LearningOutcomes]
        """
        return self._learning_outcomes

    @learning_outcomes.setter
    def learning_outcomes(self, learning_outcomes):
        """Sets the learning_outcomes of this CourseResponseMetadata.


        :param learning_outcomes: The learning_outcomes of this CourseResponseMetadata.
        :type learning_outcomes: List[LearningOutcomes]
        """

        self._learning_outcomes = learning_outcomes
