/**
 * iQualify Management API
 * The iQualify API offers management responses for building learning experiences using your iQualify instance data.  Once youâ€™ve registered with iQualify, you can request an API access token by navigating to the API access section of the \"Account Settings\" area.  Find out how to [Request your API access token](https://www.iqualify.com/help/connecting-iqualify-to-other-systems/api/how-to-access-and-manage-your-api-token) on our Knowledge base.  All endpoints are only accessible via https and are located at api.iqualify.com. For instance: you can find your current offerings by accessing the following URL:      https://api.iqualify.com/v1/offerings/current  
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIOfferingResponse.h
 *
 * 
 */

#ifndef OAIOfferingResponse_H
#define OAIOfferingResponse_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIOfferingResponse : public OAIObject {
public:
    OAIOfferingResponse();
    OAIOfferingResponse(QString json);
    ~OAIOfferingResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getContentId() const;
    void setContentId(const QString &content_id);
    bool is_content_id_Set() const;
    bool is_content_id_Valid() const;

    QString getCoverImageUrl() const;
    void setCoverImageUrl(const QString &cover_image_url);
    bool is_cover_image_url_Set() const;
    bool is_cover_image_url_Valid() const;

    QString getCurrency() const;
    void setCurrency(const QString &currency);
    bool is_currency_Set() const;
    bool is_currency_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QDateTime getEarlyCloseOffDate() const;
    void setEarlyCloseOffDate(const QDateTime &early_close_off_date);
    bool is_early_close_off_date_Set() const;
    bool is_early_close_off_date_Valid() const;

    QDateTime getEnd() const;
    void setEnd(const QDateTime &end);
    bool is_end_Set() const;
    bool is_end_Valid() const;

    double getEnrollmentLimit() const;
    void setEnrollmentLimit(const double &enrollment_limit);
    bool is_enrollment_limit_Set() const;
    bool is_enrollment_limit_Valid() const;

    bool isHasEarlyCloseOff() const;
    void setHasEarlyCloseOff(const bool &has_early_close_off);
    bool is_has_early_close_off_Set() const;
    bool is_has_early_close_off_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getIdentifier() const;
    void setIdentifier(const QString &identifier);
    bool is_identifier_Set() const;
    bool is_identifier_Valid() const;

    bool isIsReadonly() const;
    void setIsReadonly(const bool &is_readonly);
    bool is_is_readonly_Set() const;
    bool is_is_readonly_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    double getPrice() const;
    void setPrice(const double &price);
    bool is_price_Set() const;
    bool is_price_Valid() const;

    QDateTime getStart() const;
    void setStart(const QDateTime &start);
    bool is_start_Set() const;
    bool is_start_Valid() const;

    bool isTasksEnabled() const;
    void setTasksEnabled(const bool &tasks_enabled);
    bool is_tasks_enabled_Set() const;
    bool is_tasks_enabled_Valid() const;

    QString getTrailerVideoUrl() const;
    void setTrailerVideoUrl(const QString &trailer_video_url);
    bool is_trailer_video_url_Set() const;
    bool is_trailer_video_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_content_id;
    bool m_content_id_isSet;
    bool m_content_id_isValid;

    QString m_cover_image_url;
    bool m_cover_image_url_isSet;
    bool m_cover_image_url_isValid;

    QString m_currency;
    bool m_currency_isSet;
    bool m_currency_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QDateTime m_early_close_off_date;
    bool m_early_close_off_date_isSet;
    bool m_early_close_off_date_isValid;

    QDateTime m_end;
    bool m_end_isSet;
    bool m_end_isValid;

    double m_enrollment_limit;
    bool m_enrollment_limit_isSet;
    bool m_enrollment_limit_isValid;

    bool m_has_early_close_off;
    bool m_has_early_close_off_isSet;
    bool m_has_early_close_off_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_identifier;
    bool m_identifier_isSet;
    bool m_identifier_isValid;

    bool m_is_readonly;
    bool m_is_readonly_isSet;
    bool m_is_readonly_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    double m_price;
    bool m_price_isSet;
    bool m_price_isValid;

    QDateTime m_start;
    bool m_start_isSet;
    bool m_start_isValid;

    bool m_tasks_enabled;
    bool m_tasks_enabled_isSet;
    bool m_tasks_enabled_isValid;

    QString m_trailer_video_url;
    bool m_trailer_video_url_isSet;
    bool m_trailer_video_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIOfferingResponse)

#endif // OAIOfferingResponse_H
