/**
 * iQualify Management API
 * The iQualify API offers management responses for building learning experiences using your iQualify instance data.  Once youâ€™ve registered with iQualify, you can request an API access token by navigating to the API access section of the \"Account Settings\" area.  Find out how to [Request your API access token](https://www.iqualify.com/help/connecting-iqualify-to-other-systems/api/how-to-access-and-manage-your-api-token) on our Knowledge base.  All endpoints are only accessible via https and are located at api.iqualify.com. For instance: you can find your current offerings by accessing the following URL:      https://api.iqualify.com/v1/offerings/current  
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIActivityAttemptOpenResponse.h
 *
 * 
 */

#ifndef OAIActivityAttemptOpenResponse_H
#define OAIActivityAttemptOpenResponse_H

#include <QJsonObject>

#include "OAIActivityAttemptOpenResponseFeedback.h"
#include "OAIActivityAttemptOpenResponseFiles.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIActivityAttemptOpenResponseFeedback;
class OAIActivityAttemptOpenResponseFiles;

class OAIActivityAttemptOpenResponse : public OAIObject {
public:
    OAIActivityAttemptOpenResponse();
    OAIActivityAttemptOpenResponse(QString json);
    ~OAIActivityAttemptOpenResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getActivityId() const;
    void setActivityId(const QString &activity_id);
    bool is_activity_id_Set() const;
    bool is_activity_id_Valid() const;

    QString getActivityType() const;
    void setActivityType(const QString &activity_type);
    bool is_activity_type_Set() const;
    bool is_activity_type_Valid() const;

    OAIActivityAttemptOpenResponseFeedback getFeedback() const;
    void setFeedback(const OAIActivityAttemptOpenResponseFeedback &feedback);
    bool is_feedback_Set() const;
    bool is_feedback_Valid() const;

    QString getLearnerEmail() const;
    void setLearnerEmail(const QString &learner_email);
    bool is_learner_email_Set() const;
    bool is_learner_email_Valid() const;

    QString getOfferingId() const;
    void setOfferingId(const QString &offering_id);
    bool is_offering_id_Set() const;
    bool is_offering_id_Valid() const;

    QString getResponseText() const;
    void setResponseText(const QString &response_text);
    bool is_response_text_Set() const;
    bool is_response_text_Valid() const;

    OAIActivityAttemptOpenResponseFiles getUploadedFiles() const;
    void setUploadedFiles(const OAIActivityAttemptOpenResponseFiles &uploaded_files);
    bool is_uploaded_files_Set() const;
    bool is_uploaded_files_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_activity_id;
    bool m_activity_id_isSet;
    bool m_activity_id_isValid;

    QString m_activity_type;
    bool m_activity_type_isSet;
    bool m_activity_type_isValid;

    OAIActivityAttemptOpenResponseFeedback m_feedback;
    bool m_feedback_isSet;
    bool m_feedback_isValid;

    QString m_learner_email;
    bool m_learner_email_isSet;
    bool m_learner_email_isValid;

    QString m_offering_id;
    bool m_offering_id_isSet;
    bool m_offering_id_isValid;

    QString m_response_text;
    bool m_response_text_isSet;
    bool m_response_text_isValid;

    OAIActivityAttemptOpenResponseFiles m_uploaded_files;
    bool m_uploaded_files_isSet;
    bool m_uploaded_files_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIActivityAttemptOpenResponse)

#endif // OAIActivityAttemptOpenResponse_H
