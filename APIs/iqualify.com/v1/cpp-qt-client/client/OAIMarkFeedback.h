/**
 * iQualify Management API
 * The iQualify API offers management responses for building learning experiences using your iQualify instance data.  Once youâ€™ve registered with iQualify, you can request an API access token by navigating to the API access section of the \"Account Settings\" area.  Find out how to [Request your API access token](https://www.iqualify.com/help/connecting-iqualify-to-other-systems/api/how-to-access-and-manage-your-api-token) on our Knowledge base.  All endpoints are only accessible via https and are located at api.iqualify.com. For instance: you can find your current offerings by accessing the following URL:      https://api.iqualify.com/v1/offerings/current  
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMarkFeedback.h
 *
 * 
 */

#ifndef OAIMarkFeedback_H
#define OAIMarkFeedback_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIMarkFeedback : public OAIObject {
public:
    OAIMarkFeedback();
    OAIMarkFeedback(QString json);
    ~OAIMarkFeedback() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getCreatedAt() const;
    void setCreatedAt(const QDateTime &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    QString getFeedback() const;
    void setFeedback(const QString &feedback);
    bool is_feedback_Set() const;
    bool is_feedback_Valid() const;

    QString getFeedbackBy() const;
    void setFeedbackBy(const QString &feedback_by);
    bool is_feedback_by_Set() const;
    bool is_feedback_by_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getMark() const;
    void setMark(const QString &mark);
    bool is_mark_Set() const;
    bool is_mark_Valid() const;

    QString getMarkerId() const;
    void setMarkerId(const QString &marker_id);
    bool is_marker_id_Set() const;
    bool is_marker_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    QString m_feedback;
    bool m_feedback_isSet;
    bool m_feedback_isValid;

    QString m_feedback_by;
    bool m_feedback_by_isSet;
    bool m_feedback_by_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_mark;
    bool m_mark_isSet;
    bool m_mark_isValid;

    QString m_marker_id;
    bool m_marker_id_isSet;
    bool m_marker_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMarkFeedback)

#endif // OAIMarkFeedback_H
