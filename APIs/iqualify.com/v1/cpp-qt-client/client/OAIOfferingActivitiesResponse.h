/**
 * iQualify Management API
 * The iQualify API offers management responses for building learning experiences using your iQualify instance data.  Once youâ€™ve registered with iQualify, you can request an API access token by navigating to the API access section of the \"Account Settings\" area.  Find out how to [Request your API access token](https://www.iqualify.com/help/connecting-iqualify-to-other-systems/api/how-to-access-and-manage-your-api-token) on our Knowledge base.  All endpoints are only accessible via https and are located at api.iqualify.com. For instance: you can find your current offerings by accessing the following URL:      https://api.iqualify.com/v1/offerings/current  
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIOfferingActivitiesResponse.h
 *
 * 
 */

#ifndef OAIOfferingActivitiesResponse_H
#define OAIOfferingActivitiesResponse_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIOfferingActivitiesResponse : public OAIObject {
public:
    OAIOfferingActivitiesResponse();
    OAIOfferingActivitiesResponse(QString json);
    ~OAIOfferingActivitiesResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getActivityId() const;
    void setActivityId(const QString &activity_id);
    bool is_activity_id_Set() const;
    bool is_activity_id_Valid() const;

    double getTime() const;
    void setTime(const double &time);
    bool is_time_Set() const;
    bool is_time_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_activity_id;
    bool m_activity_id_isSet;
    bool m_activity_id_isValid;

    double m_time;
    bool m_time_isSet;
    bool m_time_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIOfferingActivitiesResponse)

#endif // OAIOfferingActivitiesResponse_H
