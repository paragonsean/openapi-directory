/**
 * iQualify Management API
 * The iQualify API offers management responses for building learning experiences using your iQualify instance data.  Once youâ€™ve registered with iQualify, you can request an API access token by navigating to the API access section of the \"Account Settings\" area.  Find out how to [Request your API access token](https://www.iqualify.com/help/connecting-iqualify-to-other-systems/api/how-to-access-and-manage-your-api-token) on our Knowledge base.  All endpoints are only accessible via https and are located at api.iqualify.com. For instance: you can find your current offerings by accessing the following URL:      https://api.iqualify.com/v1/offerings/current  
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIModeration.h
 *
 * 
 */

#ifndef OAIModeration_H
#define OAIModeration_H

#include <QJsonObject>

#include "OAIModerator.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIModerator;

class OAIModeration : public OAIObject {
public:
    OAIModeration();
    OAIModeration(QString json);
    ~OAIModeration() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isIsMuted() const;
    void setIsMuted(const bool &is_muted);
    bool is_is_muted_Set() const;
    bool is_is_muted_Valid() const;

    OAIModerator getModerator() const;
    void setModerator(const OAIModerator &moderator);
    bool is_moderator_Set() const;
    bool is_moderator_Valid() const;

    QString getReason() const;
    void setReason(const QString &reason);
    bool is_reason_Set() const;
    bool is_reason_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_is_muted;
    bool m_is_muted_isSet;
    bool m_is_muted_isValid;

    OAIModerator m_moderator;
    bool m_moderator_isSet;
    bool m_moderator_isValid;

    QString m_reason;
    bool m_reason_isSet;
    bool m_reason_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIModeration)

#endif // OAIModeration_H
