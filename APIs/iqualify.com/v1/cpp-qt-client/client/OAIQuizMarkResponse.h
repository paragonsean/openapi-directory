/**
 * iQualify Management API
 * The iQualify API offers management responses for building learning experiences using your iQualify instance data.  Once youâ€™ve registered with iQualify, you can request an API access token by navigating to the API access section of the \"Account Settings\" area.  Find out how to [Request your API access token](https://www.iqualify.com/help/connecting-iqualify-to-other-systems/api/how-to-access-and-manage-your-api-token) on our Knowledge base.  All endpoints are only accessible via https and are located at api.iqualify.com. For instance: you can find your current offerings by accessing the following URL:      https://api.iqualify.com/v1/offerings/current  
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIQuizMarkResponse.h
 *
 * 
 */

#ifndef OAIQuizMarkResponse_H
#define OAIQuizMarkResponse_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIQuizMarkResponse : public OAIObject {
public:
    OAIQuizMarkResponse();
    OAIQuizMarkResponse(QString json);
    ~OAIQuizMarkResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getAttempts() const;
    void setAttempts(const qint32 &attempts);
    bool is_attempts_Set() const;
    bool is_attempts_Valid() const;

    QDateTime getLastAttemptAt() const;
    void setLastAttemptAt(const QDateTime &last_attempt_at);
    bool is_last_attempt_at_Set() const;
    bool is_last_attempt_at_Valid() const;

    QString getLearnerEmail() const;
    void setLearnerEmail(const QString &learner_email);
    bool is_learner_email_Set() const;
    bool is_learner_email_Valid() const;

    QString getLearnerFullname() const;
    void setLearnerFullname(const QString &learner_fullname);
    bool is_learner_fullname_Set() const;
    bool is_learner_fullname_Valid() const;

    QString getLearnerPersonId() const;
    void setLearnerPersonId(const QString &learner_person_id);
    bool is_learner_person_id_Set() const;
    bool is_learner_person_id_Valid() const;

    QString getMark() const;
    void setMark(const QString &mark);
    bool is_mark_Set() const;
    bool is_mark_Valid() const;

    QString getQuizId() const;
    void setQuizId(const QString &quiz_id);
    bool is_quiz_id_Set() const;
    bool is_quiz_id_Valid() const;

    QString getQuizTitle() const;
    void setQuizTitle(const QString &quiz_title);
    bool is_quiz_title_Set() const;
    bool is_quiz_title_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_attempts;
    bool m_attempts_isSet;
    bool m_attempts_isValid;

    QDateTime m_last_attempt_at;
    bool m_last_attempt_at_isSet;
    bool m_last_attempt_at_isValid;

    QString m_learner_email;
    bool m_learner_email_isSet;
    bool m_learner_email_isValid;

    QString m_learner_fullname;
    bool m_learner_fullname_isSet;
    bool m_learner_fullname_isValid;

    QString m_learner_person_id;
    bool m_learner_person_id_isSet;
    bool m_learner_person_id_isValid;

    QString m_mark;
    bool m_mark_isSet;
    bool m_mark_isValid;

    QString m_quiz_id;
    bool m_quiz_id_isSet;
    bool m_quiz_id_isValid;

    QString m_quiz_title;
    bool m_quiz_title_isSet;
    bool m_quiz_title_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIQuizMarkResponse)

#endif // OAIQuizMarkResponse_H
