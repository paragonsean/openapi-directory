/**
 * iQualify Management API
 * The iQualify API offers management responses for building learning experiences using your iQualify instance data.  Once youâ€™ve registered with iQualify, you can request an API access token by navigating to the API access section of the \"Account Settings\" area.  Find out how to [Request your API access token](https://www.iqualify.com/help/connecting-iqualify-to-other-systems/api/how-to-access-and-manage-your-api-token) on our Knowledge base.  All endpoints are only accessible via https and are located at api.iqualify.com. For instance: you can find your current offerings by accessing the following URL:      https://api.iqualify.com/v1/offerings/current  
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAI_offerings__offeringId__analytics_pulses_responses_get_responseTime_parameter.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAI_offerings__offeringId__analytics_pulses_responses_get_responseTime_parameter::OAI_offerings__offeringId__analytics_pulses_responses_get_responseTime_parameter(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAI_offerings__offeringId__analytics_pulses_responses_get_responseTime_parameter::OAI_offerings__offeringId__analytics_pulses_responses_get_responseTime_parameter() {
    this->initializeModel();
}

OAI_offerings__offeringId__analytics_pulses_responses_get_responseTime_parameter::~OAI_offerings__offeringId__analytics_pulses_responses_get_responseTime_parameter() {}

void OAI_offerings__offeringId__analytics_pulses_responses_get_responseTime_parameter::initializeModel() {

}

void OAI_offerings__offeringId__analytics_pulses_responses_get_responseTime_parameter::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAI_offerings__offeringId__analytics_pulses_responses_get_responseTime_parameter::fromJsonObject(QJsonObject json) {

}

QString OAI_offerings__offeringId__analytics_pulses_responses_get_responseTime_parameter::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAI_offerings__offeringId__analytics_pulses_responses_get_responseTime_parameter::asJsonObject() const {
    QJsonObject obj;
    return obj;
}

bool OAI_offerings__offeringId__analytics_pulses_responses_get_responseTime_parameter::isSet() const {
    bool isObjectUpdated = false;
    do {

    } while (false);
    return isObjectUpdated;
}

bool OAI_offerings__offeringId__analytics_pulses_responses_get_responseTime_parameter::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
