/**
 * iQualify Management API
 * The iQualify API offers management responses for building learning experiences using your iQualify instance data.  Once youâ€™ve registered with iQualify, you can request an API access token by navigating to the API access section of the \"Account Settings\" area.  Find out how to [Request your API access token](https://www.iqualify.com/help/connecting-iqualify-to-other-systems/api/how-to-access-and-manage-your-api-token) on our Knowledge base.  All endpoints are only accessible via https and are located at api.iqualify.com. For instance: you can find your current offerings by accessing the following URL:      https://api.iqualify.com/v1/offerings/current  
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIChannel.h
 *
 * 
 */

#ifndef OAIChannel_H
#define OAIChannel_H

#include <QJsonObject>

#include "OAIChannel_group.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIChannel_group;

class OAIChannel : public OAIObject {
public:
    OAIChannel();
    OAIChannel(QString json);
    ~OAIChannel() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIChannel_group getGroup() const;
    void setGroup(const OAIChannel_group &group);
    bool is_group_Set() const;
    bool is_group_Valid() const;

    bool isGroupDiscussion() const;
    void setGroupDiscussion(const bool &group_discussion);
    bool is_group_discussion_Set() const;
    bool is_group_discussion_Valid() const;

    bool isIsBroadcastOnly() const;
    void setIsBroadcastOnly(const bool &is_broadcast_only);
    bool is_is_broadcast_only_Set() const;
    bool is_is_broadcast_only_Valid() const;

    bool isPrivateSupport() const;
    void setPrivateSupport(const bool &private_support);
    bool is_private_support_Set() const;
    bool is_private_support_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIChannel_group m_group;
    bool m_group_isSet;
    bool m_group_isValid;

    bool m_group_discussion;
    bool m_group_discussion_isSet;
    bool m_group_discussion_isValid;

    bool m_is_broadcast_only;
    bool m_is_broadcast_only_isSet;
    bool m_is_broadcast_only_isValid;

    bool m_private_support;
    bool m_private_support_isSet;
    bool m_private_support_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIChannel)

#endif // OAIChannel_H
