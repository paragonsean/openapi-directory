/**
 * iQualify Management API
 * The iQualify API offers management responses for building learning experiences using your iQualify instance data.  Once youâ€™ve registered with iQualify, you can request an API access token by navigating to the API access section of the \"Account Settings\" area.  Find out how to [Request your API access token](https://www.iqualify.com/help/connecting-iqualify-to-other-systems/api/how-to-access-and-manage-your-api-token) on our Knowledge base.  All endpoints are only accessible via https and are located at api.iqualify.com. For instance: you can find your current offerings by accessing the following URL:      https://api.iqualify.com/v1/offerings/current  
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAI_users_all_progress_get_200_response.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAI_users_all_progress_get_200_response::OAI_users_all_progress_get_200_response(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAI_users_all_progress_get_200_response::OAI_users_all_progress_get_200_response() {
    this->initializeModel();
}

OAI_users_all_progress_get_200_response::~OAI_users_all_progress_get_200_response() {}

void OAI_users_all_progress_get_200_response::initializeModel() {

    m_data_isSet = false;
    m_data_isValid = false;

    m_top_isSet = false;
    m_top_isValid = false;
}

void OAI_users_all_progress_get_200_response::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAI_users_all_progress_get_200_response::fromJsonObject(QJsonObject json) {

    m_data_isValid = ::OpenAPI::fromJsonValue(m_data, json[QString("data")]);
    m_data_isSet = !json[QString("data")].isNull() && m_data_isValid;

    m_top_isValid = ::OpenAPI::fromJsonValue(m_top, json[QString("top")]);
    m_top_isSet = !json[QString("top")].isNull() && m_top_isValid;
}

QString OAI_users_all_progress_get_200_response::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAI_users_all_progress_get_200_response::asJsonObject() const {
    QJsonObject obj;
    if (m_data.isSet()) {
        obj.insert(QString("data"), ::OpenAPI::toJsonValue(m_data));
    }
    if (m_top_isSet) {
        obj.insert(QString("top"), ::OpenAPI::toJsonValue(m_top));
    }
    return obj;
}

OAI_users_all_progress_get_200_response_data OAI_users_all_progress_get_200_response::getData() const {
    return m_data;
}
void OAI_users_all_progress_get_200_response::setData(const OAI_users_all_progress_get_200_response_data &data) {
    m_data = data;
    m_data_isSet = true;
}

bool OAI_users_all_progress_get_200_response::is_data_Set() const{
    return m_data_isSet;
}

bool OAI_users_all_progress_get_200_response::is_data_Valid() const{
    return m_data_isValid;
}

qint32 OAI_users_all_progress_get_200_response::getTop() const {
    return m_top;
}
void OAI_users_all_progress_get_200_response::setTop(const qint32 &top) {
    m_top = top;
    m_top_isSet = true;
}

bool OAI_users_all_progress_get_200_response::is_top_Set() const{
    return m_top_isSet;
}

bool OAI_users_all_progress_get_200_response::is_top_Valid() const{
    return m_top_isValid;
}

bool OAI_users_all_progress_get_200_response::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_data.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_top_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAI_users_all_progress_get_200_response::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
