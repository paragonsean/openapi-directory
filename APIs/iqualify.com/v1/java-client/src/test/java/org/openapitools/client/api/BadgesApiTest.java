/*
 * iQualify Management API
 * The iQualify API offers management responses for building learning experiences using your iQualify instance data.  Once youâ€™ve registered with iQualify, you can request an API access token by navigating to the API access section of the \"Account Settings\" area.  Find out how to [Request your API access token](https://www.iqualify.com/help/connecting-iqualify-to-other-systems/api/how-to-access-and-manage-your-api-token) on our Knowledge base.  All endpoints are only accessible via https and are located at api.iqualify.com. For instance: you can find your current offerings by accessing the following URL:      https://api.iqualify.com/v1/offerings/current  
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AwardedResponse;
import org.openapitools.client.model.Badge;
import org.openapitools.client.model.Error;
import org.openapitools.client.model.UserBadge;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for BadgesApi
 */
@Disabled
public class BadgesApiTest {

    private final BadgesApi api = new BadgesApi();

    /**
     * Find offering badges
     *
     * Responds with the badge for an offering matching the offeringId.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void offeringsOfferingIdBadgesGetTest() throws ApiException {
        String offeringId = null;
        Badge response = api.offeringsOfferingIdBadgesGet(offeringId);
        // TODO: test validations
    }

    /**
     * Award badge
     *
     * Awards a badge to a user in the offering.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void offeringsOfferingIdUsersUserEmailBadgesAwardPostTest() throws ApiException {
        String offeringId = null;
        String userEmail = null;
        AwardedResponse response = api.offeringsOfferingIdUsersUserEmailBadgesAwardPost(offeringId, userEmail);
        // TODO: test validations
    }

    /**
     * Find user&#39;s badges
     *
     * Responds with all badges that the specified user has been awarded.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void usersUserEmailBadgesGetTest() throws ApiException {
        String userEmail = null;
        List<UserBadge> response = api.usersUserEmailBadgesGet(userEmail);
        // TODO: test validations
    }

}
