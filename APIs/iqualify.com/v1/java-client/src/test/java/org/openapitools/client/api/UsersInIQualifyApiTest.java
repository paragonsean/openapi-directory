/*
 * iQualify Management API
 * The iQualify API offers management responses for building learning experiences using your iQualify instance data.  Once youâ€™ve registered with iQualify, you can request an API access token by navigating to the API access section of the \"Account Settings\" area.  Find out how to [Request your API access token](https://www.iqualify.com/help/connecting-iqualify-to-other-systems/api/how-to-access-and-manage-your-api-token) on our Knowledge base.  All endpoints are only accessible via https and are located at api.iqualify.com. For instance: you can find your current offerings by accessing the following URL:      https://api.iqualify.com/v1/offerings/current  
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Error;
import org.openapitools.client.model.OfferingMetadataResponse;
import org.openapitools.client.model.SuspendedRequest;
import org.openapitools.client.model.User;
import org.openapitools.client.model.UserResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for UsersInIQualifyApi
 */
@Disabled
public class UsersInIQualifyApiTest {

    private final UsersInIQualifyApi api = new UsersInIQualifyApi();

    /**
     * Add new user
     *
     * Creates a new user.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void usersPostTest() throws ApiException {
        User user = null;
        UserResponse response = api.usersPost(user);
        // TODO: test validations
    }

    /**
     * Find user by email
     *
     * Responds with a user matching the specified email.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void usersUserEmailGetTest() throws ApiException {
        String userEmail = null;
        UserResponse response = api.usersUserEmailGet(userEmail);
        // TODO: test validations
    }

    /**
     * Resend invitation email
     *
     * Re-sends an invitation e-mail to the specified user.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void usersUserEmailInviteEmailPostTest() throws ApiException {
        String userEmail = null;
        api.usersUserEmailInviteEmailPost(userEmail);
        // TODO: test validations
    }

    /**
     * Find user&#39;s offerings
     *
     * Responds with all offerings that the user in.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void usersUserEmailOfferingsGetTest() throws ApiException {
        String userEmail = null;
        List<OfferingMetadataResponse> response = api.usersUserEmailOfferingsGet(userEmail);
        // TODO: test validations
    }

    /**
     * Adds the user to the specified offerings as a learner
     *
     * Adds a user to an array of offerings by offeringId.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void usersUserEmailOfferingsPostTest() throws ApiException {
        String userEmail = null;
        List<String> requestBody = null;
        List<OfferingMetadataResponse> response = api.usersUserEmailOfferingsPost(userEmail, requestBody);
        // TODO: test validations
    }

    /**
     * Update user
     *
     * Updates the specified user by email.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void usersUserEmailPatchTest() throws ApiException {
        String userEmail = null;
        User user = null;
        UserResponse response = api.usersUserEmailPatch(userEmail, user);
        // TODO: test validations
    }

    /**
     * Add permission to user
     *
     * Adds additional permissions to the specified user.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void usersUserEmailPermissionsPermissionNamePostTest() throws ApiException {
        String userEmail = null;
        String permissionName = null;
        UserResponse response = api.usersUserEmailPermissionsPermissionNamePost(userEmail, permissionName);
        // TODO: test validations
    }

    /**
     * Suspend user
     *
     * Suspends the specified user&#39;s account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void usersUserEmailSuspendPutTest() throws ApiException {
        String userEmail = null;
        SuspendedRequest suspendedRequest = null;
        api.usersUserEmailSuspendPut(userEmail, suspendedRequest);
        // TODO: test validations
    }

}
