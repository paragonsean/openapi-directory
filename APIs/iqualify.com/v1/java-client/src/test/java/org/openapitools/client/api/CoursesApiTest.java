/*
 * iQualify Management API
 * The iQualify API offers management responses for building learning experiences using your iQualify instance data.  Once youâ€™ve registered with iQualify, you can request an API access token by navigating to the API access section of the \"Account Settings\" area.  Find out how to [Request your API access token](https://www.iqualify.com/help/connecting-iqualify-to-other-systems/api/how-to-access-and-manage-your-api-token) on our Knowledge base.  All endpoints are only accessible via https and are located at api.iqualify.com. For instance: you can find your current offerings by accessing the following URL:      https://api.iqualify.com/v1/offerings/current  
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ActivationResponse;
import org.openapitools.client.model.CourseMetaResponse;
import org.openapitools.client.model.CourseResponse;
import org.openapitools.client.model.CoursesRootContentIdPermissionsUserEmailPost201Response;
import org.openapitools.client.model.Error;
import org.openapitools.client.model.PermissionToBeGrantedToTheUser;
import org.openapitools.client.model.UserPermission;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CoursesApi
 */
@Disabled
public class CoursesApiTest {

    private final CoursesApi api = new CoursesApi();

    /**
     * Find activations for a contentId
     *
     * Responds with all activations for the contentId provided.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void coursesContentIdActivationsGetTest() throws ApiException {
        String contentId = null;
        ActivationResponse response = api.coursesContentIdActivationsGet(contentId);
        // TODO: test validations
    }

    /**
     * Find course by contentId
     *
     * Responds with a course matching the contentId.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void coursesContentIdGetTest() throws ApiException {
        String contentId = null;
        CourseMetaResponse response = api.coursesContentIdGet(contentId);
        // TODO: test validations
    }

    /**
     * Find users who have access to the contentId provided
     *
     * Responds with users who have access to a specific course by contentId.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void coursesContentIdPermissionsGetTest() throws ApiException {
        String contentId = null;
        UserPermission response = api.coursesContentIdPermissionsGet(contentId);
        // TODO: test validations
    }

    /**
     * Find courses
     *
     * Responds with all courses (draft and published.)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void coursesGetTest() throws ApiException {
        List<CourseResponse> response = api.coursesGet();
        // TODO: test validations
    }

    /**
     * Update course access
     *
     * Provide a user with access to a specific course by rootContentId.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void coursesRootContentIdPermissionsUserEmailPostTest() throws ApiException {
        String rootContentId = null;
        String userEmail = null;
        PermissionToBeGrantedToTheUser permissionToBeGrantedToTheUser = null;
        CoursesRootContentIdPermissionsUserEmailPost201Response response = api.coursesRootContentIdPermissionsUserEmailPost(rootContentId, userEmail, permissionToBeGrantedToTheUser);
        // TODO: test validations
    }

}
