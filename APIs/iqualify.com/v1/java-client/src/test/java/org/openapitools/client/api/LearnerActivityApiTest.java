/*
 * iQualify Management API
 * The iQualify API offers management responses for building learning experiences using your iQualify instance data.  Once youâ€™ve registered with iQualify, you can request an API access token by navigating to the API access section of the \"Account Settings\" area.  Find out how to [Request your API access token](https://www.iqualify.com/help/connecting-iqualify-to-other-systems/api/how-to-access-and-manage-your-api-token) on our Knowledge base.  All endpoints are only accessible via https and are located at api.iqualify.com. For instance: you can find your current offerings by accessing the following URL:      https://api.iqualify.com/v1/offerings/current  
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Error;
import org.openapitools.client.model.LearnerProgressResponse;
import org.openapitools.client.model.LearnerResponse;
import org.openapitools.client.model.SocialNotesResponse;
import org.openapitools.client.model.UnitReactionsAnalyticsResponse;
import org.openapitools.client.model.UsersAllProgressGet200Response;
import org.openapitools.client.model.UsersUserEmailOfferingsOfferingIdProgressGet200Response;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for LearnerActivityApi
 */
@Disabled
public class LearnerActivityApiTest {

    private final LearnerActivityApi api = new LearnerActivityApi();

    /**
     * Find learner progress in a specified offering
     *
     * Responds with all learner progress in the offering.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void offeringsOfferingIdAnalyticsLearnersProgressGetTest() throws ApiException {
        String offeringId = null;
        List<LearnerProgressResponse> response = api.offeringsOfferingIdAnalyticsLearnersProgressGet(offeringId);
        // TODO: test validations
    }

    /**
     * Find shared social notes in an offering
     *
     * Responds with all shared social notes in a specified offering.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void offeringsOfferingIdAnalyticsSocialNotesGetTest() throws ApiException {
        String offeringId = null;
        List<SocialNotesResponse> response = api.offeringsOfferingIdAnalyticsSocialNotesGet(offeringId);
        // TODO: test validations
    }

    /**
     * Find unit reactions
     *
     * Responds with user reactions to units in a specified offering.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void offeringsOfferingIdAnalyticsUnitReactionsGetTest() throws ApiException {
        String offeringId = null;
        List<UnitReactionsAnalyticsResponse> response = api.offeringsOfferingIdAnalyticsUnitReactionsGet(offeringId);
        // TODO: test validations
    }

    /**
     * Find learner progress in all offerings
     *
     * Responds with all learners&#39; progress in all offerings.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void usersAllProgressGetTest() throws ApiException {
        String $top = null;
        String $orderby = null;
        String $filter = null;
        UsersAllProgressGet200Response response = api.usersAllProgressGet($top, $orderby, $filter);
        // TODO: test validations
    }

    /**
     * Find learner&#39;s progress in a specified offering
     *
     * Responds with the learner&#39;s progress in a specified offering.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void usersUserEmailOfferingsOfferingIdProgressGetTest() throws ApiException {
        String userEmail = null;
        String offeringId = null;
        UsersUserEmailOfferingsOfferingIdProgressGet200Response response = api.usersUserEmailOfferingsOfferingIdProgressGet(userEmail, offeringId);
        // TODO: test validations
    }

    /**
     * Find learner&#39;s progress in offerings
     *
     * Responds with the specified learner&#39;s progress in all offerings.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void usersUserEmailProgressGetTest() throws ApiException {
        String userEmail = null;
        LearnerResponse response = api.usersUserEmailProgressGet(userEmail);
        // TODO: test validations
    }

}
