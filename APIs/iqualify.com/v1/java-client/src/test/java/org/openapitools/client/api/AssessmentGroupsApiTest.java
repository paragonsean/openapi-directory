/*
 * iQualify Management API
 * The iQualify API offers management responses for building learning experiences using your iQualify instance data.  Once youâ€™ve registered with iQualify, you can request an API access token by navigating to the API access section of the \"Account Settings\" area.  Find out how to [Request your API access token](https://www.iqualify.com/help/connecting-iqualify-to-other-systems/api/how-to-access-and-manage-your-api-token) on our Knowledge base.  All endpoints are only accessible via https and are located at api.iqualify.com. For instance: you can find your current offerings by accessing the following URL:      https://api.iqualify.com/v1/offerings/current  
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AssessmentGroupRequired;
import org.openapitools.client.model.AssessmentGroupResponse;
import org.openapitools.client.model.Error;
import org.openapitools.client.model.OfferingsOfferingIdGroupsGroupIdLearnersPostRequest;
import org.openapitools.client.model.UserResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AssessmentGroupsApi
 */
@Disabled
public class AssessmentGroupsApiTest {

    private final AssessmentGroupsApi api = new AssessmentGroupsApi();

    /**
     * Find assessment groups
     *
     * Responds with a list of assessment groups in an offering.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void offeringsOfferingIdGroupsGetTest() throws ApiException {
        String offeringId = null;
        List<AssessmentGroupResponse> response = api.offeringsOfferingIdGroupsGet(offeringId);
        // TODO: test validations
    }

    /**
     * Find learners in an assessment group
     *
     * Responds with a list of learners in a specified assessment group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void offeringsOfferingIdGroupsGroupIdLearnersGetTest() throws ApiException {
        String offeringId = null;
        String groupId = null;
        List<UserResponse> response = api.offeringsOfferingIdGroupsGroupIdLearnersGet(offeringId, groupId);
        // TODO: test validations
    }

    /**
     * Add a learner to an assessment group
     *
     * Adds a learner into the specified assessment group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void offeringsOfferingIdGroupsGroupIdLearnersPostTest() throws ApiException {
        String offeringId = null;
        String groupId = null;
        OfferingsOfferingIdGroupsGroupIdLearnersPostRequest offeringsOfferingIdGroupsGroupIdLearnersPostRequest = null;
        UserResponse response = api.offeringsOfferingIdGroupsGroupIdLearnersPost(offeringId, groupId, offeringsOfferingIdGroupsGroupIdLearnersPostRequest);
        // TODO: test validations
    }

    /**
     * Remove a learner from an assessment group
     *
     * Removes a learner from the specified assessment group.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void offeringsOfferingIdGroupsGroupIdLearnersUserEmailDeleteTest() throws ApiException {
        String offeringId = null;
        String groupId = null;
        String userEmail = null;
        api.offeringsOfferingIdGroupsGroupIdLearnersUserEmailDelete(offeringId, groupId, userEmail);
        // TODO: test validations
    }

    /**
     * Add an assessment group
     *
     * Creates a new assessment group in an offering.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void offeringsOfferingIdGroupsPostTest() throws ApiException {
        String offeringId = null;
        AssessmentGroupRequired assessmentGroupRequired = null;
        AssessmentGroupResponse response = api.offeringsOfferingIdGroupsPost(offeringId, assessmentGroupRequired);
        // TODO: test validations
    }

}
