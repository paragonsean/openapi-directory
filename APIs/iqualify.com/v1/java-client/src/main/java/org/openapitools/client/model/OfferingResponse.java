/*
 * iQualify Management API
 * The iQualify API offers management responses for building learning experiences using your iQualify instance data.  Once youâ€™ve registered with iQualify, you can request an API access token by navigating to the API access section of the \"Account Settings\" area.  Find out how to [Request your API access token](https://www.iqualify.com/help/connecting-iqualify-to-other-systems/api/how-to-access-and-manage-your-api-token) on our Knowledge base.  All endpoints are only accessible via https and are located at api.iqualify.com. For instance: you can find your current offerings by accessing the following URL:      https://api.iqualify.com/v1/offerings/current  
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.time.OffsetDateTime;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * OfferingResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:29:36.016710-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class OfferingResponse {
  public static final String SERIALIZED_NAME_CONTENT_ID = "contentId";
  @SerializedName(SERIALIZED_NAME_CONTENT_ID)
  private String contentId;

  public static final String SERIALIZED_NAME_COVER_IMAGE_URL = "coverImageUrl";
  @SerializedName(SERIALIZED_NAME_COVER_IMAGE_URL)
  private String coverImageUrl;

  public static final String SERIALIZED_NAME_CURRENCY = "currency";
  @SerializedName(SERIALIZED_NAME_CURRENCY)
  private String currency;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_EARLY_CLOSE_OFF_DATE = "earlyCloseOffDate";
  @SerializedName(SERIALIZED_NAME_EARLY_CLOSE_OFF_DATE)
  private OffsetDateTime earlyCloseOffDate;

  public static final String SERIALIZED_NAME_END = "end";
  @SerializedName(SERIALIZED_NAME_END)
  private OffsetDateTime end;

  public static final String SERIALIZED_NAME_ENROLLMENT_LIMIT = "enrollmentLimit";
  @SerializedName(SERIALIZED_NAME_ENROLLMENT_LIMIT)
  private BigDecimal enrollmentLimit;

  public static final String SERIALIZED_NAME_HAS_EARLY_CLOSE_OFF = "hasEarlyCloseOff";
  @SerializedName(SERIALIZED_NAME_HAS_EARLY_CLOSE_OFF)
  private Boolean hasEarlyCloseOff;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_IDENTIFIER = "identifier";
  @SerializedName(SERIALIZED_NAME_IDENTIFIER)
  private String identifier;

  public static final String SERIALIZED_NAME_IS_READONLY = "isReadonly";
  @SerializedName(SERIALIZED_NAME_IS_READONLY)
  private Boolean isReadonly;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PRICE = "price";
  @SerializedName(SERIALIZED_NAME_PRICE)
  private BigDecimal price;

  public static final String SERIALIZED_NAME_START = "start";
  @SerializedName(SERIALIZED_NAME_START)
  private OffsetDateTime start;

  public static final String SERIALIZED_NAME_TASKS_ENABLED = "tasksEnabled";
  @SerializedName(SERIALIZED_NAME_TASKS_ENABLED)
  private Boolean tasksEnabled;

  public static final String SERIALIZED_NAME_TRAILER_VIDEO_URL = "trailerVideoUrl";
  @SerializedName(SERIALIZED_NAME_TRAILER_VIDEO_URL)
  private String trailerVideoUrl;

  public OfferingResponse() {
  }

  public OfferingResponse contentId(String contentId) {
    this.contentId = contentId;
    return this;
  }

  /**
   * Get contentId
   * @return contentId
   */
  @javax.annotation.Nullable
  public String getContentId() {
    return contentId;
  }

  public void setContentId(String contentId) {
    this.contentId = contentId;
  }


  public OfferingResponse coverImageUrl(String coverImageUrl) {
    this.coverImageUrl = coverImageUrl;
    return this;
  }

  /**
   * Get coverImageUrl
   * @return coverImageUrl
   */
  @javax.annotation.Nullable
  public String getCoverImageUrl() {
    return coverImageUrl;
  }

  public void setCoverImageUrl(String coverImageUrl) {
    this.coverImageUrl = coverImageUrl;
  }


  public OfferingResponse currency(String currency) {
    this.currency = currency;
    return this;
  }

  /**
   * Get currency
   * @return currency
   */
  @javax.annotation.Nullable
  public String getCurrency() {
    return currency;
  }

  public void setCurrency(String currency) {
    this.currency = currency;
  }


  public OfferingResponse description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public OfferingResponse earlyCloseOffDate(OffsetDateTime earlyCloseOffDate) {
    this.earlyCloseOffDate = earlyCloseOffDate;
    return this;
  }

  /**
   * Get earlyCloseOffDate
   * @return earlyCloseOffDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getEarlyCloseOffDate() {
    return earlyCloseOffDate;
  }

  public void setEarlyCloseOffDate(OffsetDateTime earlyCloseOffDate) {
    this.earlyCloseOffDate = earlyCloseOffDate;
  }


  public OfferingResponse end(OffsetDateTime end) {
    this.end = end;
    return this;
  }

  /**
   * Get end
   * @return end
   */
  @javax.annotation.Nullable
  public OffsetDateTime getEnd() {
    return end;
  }

  public void setEnd(OffsetDateTime end) {
    this.end = end;
  }


  public OfferingResponse enrollmentLimit(BigDecimal enrollmentLimit) {
    this.enrollmentLimit = enrollmentLimit;
    return this;
  }

  /**
   * Get enrollmentLimit
   * @return enrollmentLimit
   */
  @javax.annotation.Nullable
  public BigDecimal getEnrollmentLimit() {
    return enrollmentLimit;
  }

  public void setEnrollmentLimit(BigDecimal enrollmentLimit) {
    this.enrollmentLimit = enrollmentLimit;
  }


  public OfferingResponse hasEarlyCloseOff(Boolean hasEarlyCloseOff) {
    this.hasEarlyCloseOff = hasEarlyCloseOff;
    return this;
  }

  /**
   * Get hasEarlyCloseOff
   * @return hasEarlyCloseOff
   */
  @javax.annotation.Nullable
  public Boolean getHasEarlyCloseOff() {
    return hasEarlyCloseOff;
  }

  public void setHasEarlyCloseOff(Boolean hasEarlyCloseOff) {
    this.hasEarlyCloseOff = hasEarlyCloseOff;
  }


  public OfferingResponse id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public OfferingResponse identifier(String identifier) {
    this.identifier = identifier;
    return this;
  }

  /**
   * Get identifier
   * @return identifier
   */
  @javax.annotation.Nullable
  public String getIdentifier() {
    return identifier;
  }

  public void setIdentifier(String identifier) {
    this.identifier = identifier;
  }


  public OfferingResponse isReadonly(Boolean isReadonly) {
    this.isReadonly = isReadonly;
    return this;
  }

  /**
   * Get isReadonly
   * @return isReadonly
   */
  @javax.annotation.Nullable
  public Boolean getIsReadonly() {
    return isReadonly;
  }

  public void setIsReadonly(Boolean isReadonly) {
    this.isReadonly = isReadonly;
  }


  public OfferingResponse name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public OfferingResponse price(BigDecimal price) {
    this.price = price;
    return this;
  }

  /**
   * Get price
   * @return price
   */
  @javax.annotation.Nullable
  public BigDecimal getPrice() {
    return price;
  }

  public void setPrice(BigDecimal price) {
    this.price = price;
  }


  public OfferingResponse start(OffsetDateTime start) {
    this.start = start;
    return this;
  }

  /**
   * Get start
   * @return start
   */
  @javax.annotation.Nullable
  public OffsetDateTime getStart() {
    return start;
  }

  public void setStart(OffsetDateTime start) {
    this.start = start;
  }


  public OfferingResponse tasksEnabled(Boolean tasksEnabled) {
    this.tasksEnabled = tasksEnabled;
    return this;
  }

  /**
   * Get tasksEnabled
   * @return tasksEnabled
   */
  @javax.annotation.Nullable
  public Boolean getTasksEnabled() {
    return tasksEnabled;
  }

  public void setTasksEnabled(Boolean tasksEnabled) {
    this.tasksEnabled = tasksEnabled;
  }


  public OfferingResponse trailerVideoUrl(String trailerVideoUrl) {
    this.trailerVideoUrl = trailerVideoUrl;
    return this;
  }

  /**
   * Get trailerVideoUrl
   * @return trailerVideoUrl
   */
  @javax.annotation.Nullable
  public String getTrailerVideoUrl() {
    return trailerVideoUrl;
  }

  public void setTrailerVideoUrl(String trailerVideoUrl) {
    this.trailerVideoUrl = trailerVideoUrl;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OfferingResponse offeringResponse = (OfferingResponse) o;
    return Objects.equals(this.contentId, offeringResponse.contentId) &&
        Objects.equals(this.coverImageUrl, offeringResponse.coverImageUrl) &&
        Objects.equals(this.currency, offeringResponse.currency) &&
        Objects.equals(this.description, offeringResponse.description) &&
        Objects.equals(this.earlyCloseOffDate, offeringResponse.earlyCloseOffDate) &&
        Objects.equals(this.end, offeringResponse.end) &&
        Objects.equals(this.enrollmentLimit, offeringResponse.enrollmentLimit) &&
        Objects.equals(this.hasEarlyCloseOff, offeringResponse.hasEarlyCloseOff) &&
        Objects.equals(this.id, offeringResponse.id) &&
        Objects.equals(this.identifier, offeringResponse.identifier) &&
        Objects.equals(this.isReadonly, offeringResponse.isReadonly) &&
        Objects.equals(this.name, offeringResponse.name) &&
        Objects.equals(this.price, offeringResponse.price) &&
        Objects.equals(this.start, offeringResponse.start) &&
        Objects.equals(this.tasksEnabled, offeringResponse.tasksEnabled) &&
        Objects.equals(this.trailerVideoUrl, offeringResponse.trailerVideoUrl);
  }

  @Override
  public int hashCode() {
    return Objects.hash(contentId, coverImageUrl, currency, description, earlyCloseOffDate, end, enrollmentLimit, hasEarlyCloseOff, id, identifier, isReadonly, name, price, start, tasksEnabled, trailerVideoUrl);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OfferingResponse {\n");
    sb.append("    contentId: ").append(toIndentedString(contentId)).append("\n");
    sb.append("    coverImageUrl: ").append(toIndentedString(coverImageUrl)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    earlyCloseOffDate: ").append(toIndentedString(earlyCloseOffDate)).append("\n");
    sb.append("    end: ").append(toIndentedString(end)).append("\n");
    sb.append("    enrollmentLimit: ").append(toIndentedString(enrollmentLimit)).append("\n");
    sb.append("    hasEarlyCloseOff: ").append(toIndentedString(hasEarlyCloseOff)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    identifier: ").append(toIndentedString(identifier)).append("\n");
    sb.append("    isReadonly: ").append(toIndentedString(isReadonly)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    start: ").append(toIndentedString(start)).append("\n");
    sb.append("    tasksEnabled: ").append(toIndentedString(tasksEnabled)).append("\n");
    sb.append("    trailerVideoUrl: ").append(toIndentedString(trailerVideoUrl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("contentId");
    openapiFields.add("coverImageUrl");
    openapiFields.add("currency");
    openapiFields.add("description");
    openapiFields.add("earlyCloseOffDate");
    openapiFields.add("end");
    openapiFields.add("enrollmentLimit");
    openapiFields.add("hasEarlyCloseOff");
    openapiFields.add("id");
    openapiFields.add("identifier");
    openapiFields.add("isReadonly");
    openapiFields.add("name");
    openapiFields.add("price");
    openapiFields.add("start");
    openapiFields.add("tasksEnabled");
    openapiFields.add("trailerVideoUrl");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to OfferingResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!OfferingResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in OfferingResponse is not found in the empty JSON string", OfferingResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!OfferingResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `OfferingResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("contentId") != null && !jsonObj.get("contentId").isJsonNull()) && !jsonObj.get("contentId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `contentId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("contentId").toString()));
      }
      if ((jsonObj.get("coverImageUrl") != null && !jsonObj.get("coverImageUrl").isJsonNull()) && !jsonObj.get("coverImageUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `coverImageUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("coverImageUrl").toString()));
      }
      if ((jsonObj.get("currency") != null && !jsonObj.get("currency").isJsonNull()) && !jsonObj.get("currency").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `currency` to be a primitive type in the JSON string but got `%s`", jsonObj.get("currency").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("identifier") != null && !jsonObj.get("identifier").isJsonNull()) && !jsonObj.get("identifier").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `identifier` to be a primitive type in the JSON string but got `%s`", jsonObj.get("identifier").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("trailerVideoUrl") != null && !jsonObj.get("trailerVideoUrl").isJsonNull()) && !jsonObj.get("trailerVideoUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `trailerVideoUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("trailerVideoUrl").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!OfferingResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'OfferingResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<OfferingResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(OfferingResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<OfferingResponse>() {
           @Override
           public void write(JsonWriter out, OfferingResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public OfferingResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of OfferingResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of OfferingResponse
   * @throws IOException if the JSON string is invalid with respect to OfferingResponse
   */
  public static OfferingResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, OfferingResponse.class);
  }

  /**
   * Convert an instance of OfferingResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

