/**
 * iQualify Management API
 * The iQualify API offers management responses for building learning experiences using your iQualify instance data.  Once youâ€™ve registered with iQualify, you can request an API access token by navigating to the API access section of the \"Account Settings\" area.  Find out how to [Request your API access token](https://www.iqualify.com/help/connecting-iqualify-to-other-systems/api/how-to-access-and-manage-your-api-token) on our Knowledge base.  All endpoints are only accessible via https and are located at api.iqualify.com. For instance: you can find your current offerings by accessing the following URL:      https://api.iqualify.com/v1/offerings/current  
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.IQualifyManagementApi);
  }
}(this, function(expect, IQualifyManagementApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new IQualifyManagementApi.OfferingResponse();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('OfferingResponse', function() {
    it('should create an instance of OfferingResponse', function() {
      // uncomment below and update the code to test OfferingResponse
      //var instance = new IQualifyManagementApi.OfferingResponse();
      //expect(instance).to.be.a(IQualifyManagementApi.OfferingResponse);
    });

    it('should have the property contentId (base name: "contentId")', function() {
      // uncomment below and update the code to test the property contentId
      //var instance = new IQualifyManagementApi.OfferingResponse();
      //expect(instance).to.be();
    });

    it('should have the property coverImageUrl (base name: "coverImageUrl")', function() {
      // uncomment below and update the code to test the property coverImageUrl
      //var instance = new IQualifyManagementApi.OfferingResponse();
      //expect(instance).to.be();
    });

    it('should have the property currency (base name: "currency")', function() {
      // uncomment below and update the code to test the property currency
      //var instance = new IQualifyManagementApi.OfferingResponse();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new IQualifyManagementApi.OfferingResponse();
      //expect(instance).to.be();
    });

    it('should have the property earlyCloseOffDate (base name: "earlyCloseOffDate")', function() {
      // uncomment below and update the code to test the property earlyCloseOffDate
      //var instance = new IQualifyManagementApi.OfferingResponse();
      //expect(instance).to.be();
    });

    it('should have the property end (base name: "end")', function() {
      // uncomment below and update the code to test the property end
      //var instance = new IQualifyManagementApi.OfferingResponse();
      //expect(instance).to.be();
    });

    it('should have the property enrollmentLimit (base name: "enrollmentLimit")', function() {
      // uncomment below and update the code to test the property enrollmentLimit
      //var instance = new IQualifyManagementApi.OfferingResponse();
      //expect(instance).to.be();
    });

    it('should have the property hasEarlyCloseOff (base name: "hasEarlyCloseOff")', function() {
      // uncomment below and update the code to test the property hasEarlyCloseOff
      //var instance = new IQualifyManagementApi.OfferingResponse();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new IQualifyManagementApi.OfferingResponse();
      //expect(instance).to.be();
    });

    it('should have the property identifier (base name: "identifier")', function() {
      // uncomment below and update the code to test the property identifier
      //var instance = new IQualifyManagementApi.OfferingResponse();
      //expect(instance).to.be();
    });

    it('should have the property isReadonly (base name: "isReadonly")', function() {
      // uncomment below and update the code to test the property isReadonly
      //var instance = new IQualifyManagementApi.OfferingResponse();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new IQualifyManagementApi.OfferingResponse();
      //expect(instance).to.be();
    });

    it('should have the property price (base name: "price")', function() {
      // uncomment below and update the code to test the property price
      //var instance = new IQualifyManagementApi.OfferingResponse();
      //expect(instance).to.be();
    });

    it('should have the property start (base name: "start")', function() {
      // uncomment below and update the code to test the property start
      //var instance = new IQualifyManagementApi.OfferingResponse();
      //expect(instance).to.be();
    });

    it('should have the property tasksEnabled (base name: "tasksEnabled")', function() {
      // uncomment below and update the code to test the property tasksEnabled
      //var instance = new IQualifyManagementApi.OfferingResponse();
      //expect(instance).to.be();
    });

    it('should have the property trailerVideoUrl (base name: "trailerVideoUrl")', function() {
      // uncomment below and update the code to test the property trailerVideoUrl
      //var instance = new IQualifyManagementApi.OfferingResponse();
      //expect(instance).to.be();
    });

  });

}));
