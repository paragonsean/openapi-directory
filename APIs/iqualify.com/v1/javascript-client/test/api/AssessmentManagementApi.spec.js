/**
 * iQualify Management API
 * The iQualify API offers management responses for building learning experiences using your iQualify instance data.  Once youâ€™ve registered with iQualify, you can request an API access token by navigating to the API access section of the \"Account Settings\" area.  Find out how to [Request your API access token](https://www.iqualify.com/help/connecting-iqualify-to-other-systems/api/how-to-access-and-manage-your-api-token) on our Knowledge base.  All endpoints are only accessible via https and are located at api.iqualify.com. For instance: you can find your current offerings by accessing the following URL:      https://api.iqualify.com/v1/offerings/current  
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.IQualifyManagementApi);
  }
}(this, function(expect, IQualifyManagementApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new IQualifyManagementApi.AssessmentManagementApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('AssessmentManagementApi', function() {
    describe('offeringsOfferingIdActivitiesOpenresponseGet', function() {
      it('should call offeringsOfferingIdActivitiesOpenresponseGet successfully', function(done) {
        //uncomment below and update the code to test offeringsOfferingIdActivitiesOpenresponseGet
        //instance.offeringsOfferingIdActivitiesOpenresponseGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('offeringsOfferingIdAssessmentsAssessmentIdDocumentsDocumentIdDelete', function() {
      it('should call offeringsOfferingIdAssessmentsAssessmentIdDocumentsDocumentIdDelete successfully', function(done) {
        //uncomment below and update the code to test offeringsOfferingIdAssessmentsAssessmentIdDocumentsDocumentIdDelete
        //instance.offeringsOfferingIdAssessmentsAssessmentIdDocumentsDocumentIdDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('offeringsOfferingIdAssessmentsAssessmentIdPatch', function() {
      it('should call offeringsOfferingIdAssessmentsAssessmentIdPatch successfully', function(done) {
        //uncomment below and update the code to test offeringsOfferingIdAssessmentsAssessmentIdPatch
        //instance.offeringsOfferingIdAssessmentsAssessmentIdPatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('offeringsOfferingIdAssessmentsAssessmentIdUserEmailPatch', function() {
      it('should call offeringsOfferingIdAssessmentsAssessmentIdUserEmailPatch successfully', function(done) {
        //uncomment below and update the code to test offeringsOfferingIdAssessmentsAssessmentIdUserEmailPatch
        //instance.offeringsOfferingIdAssessmentsAssessmentIdUserEmailPatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('offeringsOfferingIdAssessmentsGet', function() {
      it('should call offeringsOfferingIdAssessmentsGet successfully', function(done) {
        //uncomment below and update the code to test offeringsOfferingIdAssessmentsGet
        //instance.offeringsOfferingIdAssessmentsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('offeringsOfferingIdLearnersPendingSubmissionGet', function() {
      it('should call offeringsOfferingIdLearnersPendingSubmissionGet successfully', function(done) {
        //uncomment below and update the code to test offeringsOfferingIdLearnersPendingSubmissionGet
        //instance.offeringsOfferingIdLearnersPendingSubmissionGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('offeringsOfferingIdUsersUserEmailAssessmentsAssessmentIdDelete', function() {
      it('should call offeringsOfferingIdUsersUserEmailAssessmentsAssessmentIdDelete successfully', function(done) {
        //uncomment below and update the code to test offeringsOfferingIdUsersUserEmailAssessmentsAssessmentIdDelete
        //instance.offeringsOfferingIdUsersUserEmailAssessmentsAssessmentIdDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('offeringsOfferingIdUsersUserEmailSubmissionsOpenResponseGet', function() {
      it('should call offeringsOfferingIdUsersUserEmailSubmissionsOpenResponseGet successfully', function(done) {
        //uncomment below and update the code to test offeringsOfferingIdUsersUserEmailSubmissionsOpenResponseGet
        //instance.offeringsOfferingIdUsersUserEmailSubmissionsOpenResponseGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
