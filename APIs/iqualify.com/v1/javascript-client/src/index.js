/**
 * iQualify Management API
 * The iQualify API offers management responses for building learning experiences using your iQualify instance data.  Once you’ve registered with iQualify, you can request an API access token by navigating to the API access section of the \"Account Settings\" area.  Find out how to [Request your API access token](https://www.iqualify.com/help/connecting-iqualify-to-other-systems/api/how-to-access-and-manage-your-api-token) on our Knowledge base.  All endpoints are only accessible via https and are located at api.iqualify.com. For instance: you can find your current offerings by accessing the following URL:      https://api.iqualify.com/v1/offerings/current  
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import ActivationResponse from './model/ActivationResponse';
import ActivationResponseMetadata from './model/ActivationResponseMetadata';
import ActivityAttemptOpenResponse from './model/ActivityAttemptOpenResponse';
import ActivityAttemptOpenResponseFeedback from './model/ActivityAttemptOpenResponseFeedback';
import ActivityAttemptOpenResponseFiles from './model/ActivityAttemptOpenResponseFiles';
import Assessment from './model/Assessment';
import AssessmentGroupRequired from './model/AssessmentGroupRequired';
import AssessmentGroupResponse from './model/AssessmentGroupResponse';
import AssessmentPendingSubmission from './model/AssessmentPendingSubmission';
import AssessmentResponse from './model/AssessmentResponse';
import AssignmentMarkResponse from './model/AssignmentMarkResponse';
import Assignments from './model/Assignments';
import AwardedResponse from './model/AwardedResponse';
import Badge from './model/Badge';
import BadgeExpiry from './model/BadgeExpiry';
import Channel from './model/Channel';
import ChannelGroup from './model/ChannelGroup';
import ChannelRequired from './model/ChannelRequired';
import ChannelResponse from './model/ChannelResponse';
import Comment from './model/Comment';
import CourseMetaResponse from './model/CourseMetaResponse';
import CourseMetaResponseMetadata from './model/CourseMetaResponseMetadata';
import CourseResponse from './model/CourseResponse';
import CourseResponseMetadata from './model/CourseResponseMetadata';
import CoursesContentIdMetadataCategoryPutRequest from './model/CoursesContentIdMetadataCategoryPutRequest';
import CoursesContentIdMetadataLevelPutRequest from './model/CoursesContentIdMetadataLevelPutRequest';
import CoursesContentIdMetadataTagsPutRequest from './model/CoursesContentIdMetadataTagsPutRequest';
import CoursesContentIdMetadataTopicPutRequest from './model/CoursesContentIdMetadataTopicPutRequest';
import CoursesRootContentIdPermissionsUserEmailPost201Response from './model/CoursesRootContentIdPermissionsUserEmailPost201Response';
import Criteria from './model/Criteria';
import Document from './model/Document';
import DocumentResponse from './model/DocumentResponse';
import Error from './model/Error';
import ErrorError from './model/ErrorError';
import HttpPost from './model/HttpPost';
import Invite from './model/Invite';
import LearnerOfferingDates from './model/LearnerOfferingDates';
import LearnerProgressResponse from './model/LearnerProgressResponse';
import LearnerResponse from './model/LearnerResponse';
import LearningOutcomes from './model/LearningOutcomes';
import Mark from './model/Mark';
import MarkFeedback from './model/MarkFeedback';
import Moderation from './model/Moderation';
import Moderator from './model/Moderator';
import Offering from './model/Offering';
import OfferingActivitiesResponse from './model/OfferingActivitiesResponse';
import OfferingBadge from './model/OfferingBadge';
import OfferingMetadata from './model/OfferingMetadata';
import OfferingMetadataResponse from './model/OfferingMetadataResponse';
import OfferingProgressRow from './model/OfferingProgressRow';
import OfferingRequired from './model/OfferingRequired';
import OfferingResponse from './model/OfferingResponse';
import OfferingUser from './model/OfferingUser';
import OfferingUserAddResponse from './model/OfferingUserAddResponse';
import OfferingUserResponse from './model/OfferingUserResponse';
import OfferingsOfferingIdAnalyticsPulsesResponsesGetResponseTimeParameter from './model/OfferingsOfferingIdAnalyticsPulsesResponsesGetResponseTimeParameter';
import OfferingsOfferingIdAssessmentsAssessmentIdUserEmailPatchRequest from './model/OfferingsOfferingIdAssessmentsAssessmentIdUserEmailPatchRequest';
import OfferingsOfferingIdChannelsChannelIdLearnersPostRequest from './model/OfferingsOfferingIdChannelsChannelIdLearnersPostRequest';
import OfferingsOfferingIdGroupsGroupIdLearnersPostRequest from './model/OfferingsOfferingIdGroupsGroupIdLearnersPostRequest';
import OfferingsOfferingIdUsersPost207ResponseInner from './model/OfferingsOfferingIdUsersPost207ResponseInner';
import OpenBadgeClass from './model/OpenBadgeClass';
import OpenBadgeClassCriteria from './model/OpenBadgeClassCriteria';
import OrgRequest from './model/OrgRequest';
import OrgResponse from './model/OrgResponse';
import PermissionToBeGrantedToTheUser from './model/PermissionToBeGrantedToTheUser';
import PortfolioActivations from './model/PortfolioActivations';
import PortfolioLicenseResponse from './model/PortfolioLicenseResponse';
import PortfolioMetadata from './model/PortfolioMetadata';
import PulseAnswer from './model/PulseAnswer';
import PulseMCQOption from './model/PulseMCQOption';
import PulseResponse from './model/PulseResponse';
import PulseSpatialOption from './model/PulseSpatialOption';
import QuizMarkResponse from './model/QuizMarkResponse';
import RevokedResponse from './model/RevokedResponse';
import SocialNotesResponse from './model/SocialNotesResponse';
import SubmissionMarkResponse from './model/SubmissionMarkResponse';
import SuspendedRequest from './model/SuspendedRequest';
import ThemeResponse from './model/ThemeResponse';
import TransferRequest from './model/TransferRequest';
import UnitReactionsAnalyticsResponse from './model/UnitReactionsAnalyticsResponse';
import UnitReactionsFeedback from './model/UnitReactionsFeedback';
import User from './model/User';
import UserBadge from './model/UserBadge';
import UserBadgeBadgeExpiry from './model/UserBadgeBadgeExpiry';
import UserMetadata from './model/UserMetadata';
import UserPermission from './model/UserPermission';
import UserProfile from './model/UserProfile';
import UserProfileRequest from './model/UserProfileRequest';
import UserResponse from './model/UserResponse';
import UsersAllProgressGet200Response from './model/UsersAllProgressGet200Response';
import UsersAllProgressGet200ResponseData from './model/UsersAllProgressGet200ResponseData';
import UsersUserEmailOfferingsOfferingIdProgressGet200Response from './model/UsersUserEmailOfferingsOfferingIdProgressGet200Response';
import APIInfoApi from './api/APIInfoApi';
import AssessmentDataApi from './api/AssessmentDataApi';
import AssessmentGroupsApi from './api/AssessmentGroupsApi';
import AssessmentManagementApi from './api/AssessmentManagementApi';
import BadgesApi from './api/BadgesApi';
import ChannelsApi from './api/ChannelsApi';
import CourseMappingsApi from './api/CourseMappingsApi';
import CourseMetadataApi from './api/CourseMetadataApi';
import CoursesApi from './api/CoursesApi';
import LearnerActivityApi from './api/LearnerActivityApi';
import OfferingLearnersApi from './api/OfferingLearnersApi';
import OfferingMetadataApi from './api/OfferingMetadataApi';
import OfferingsApi from './api/OfferingsApi';
import OrganisationApi from './api/OrganisationApi';
import PulsesApi from './api/PulsesApi';
import UsersInIQualifyApi from './api/UsersInIQualifyApi';


/**
* The iQualify API offers management responses for building learning experiences using your iQualify instance data.  Once you’ve registered with iQualify, you can request an API access token by navigating to the API access section of the \&quot;Account Settings\&quot; area.  Find out how to [Request your API access token](https://www.iqualify.com/help/connecting-iqualify-to-other-systems/api/how-to-access-and-manage-your-api-token) on our Knowledge base.  All endpoints are only accessible via https and are located at api.iqualify.com. For instance: you can find your current offerings by accessing the following URL:      https://api.iqualify.com/v1/offerings/current  .<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var IQualifyManagementApi = require('index'); // See note below*.
* var xxxSvc = new IQualifyManagementApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new IQualifyManagementApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new IQualifyManagementApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new IQualifyManagementApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version v1
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The ActivationResponse model constructor.
     * @property {module:model/ActivationResponse}
     */
    ActivationResponse,

    /**
     * The ActivationResponseMetadata model constructor.
     * @property {module:model/ActivationResponseMetadata}
     */
    ActivationResponseMetadata,

    /**
     * The ActivityAttemptOpenResponse model constructor.
     * @property {module:model/ActivityAttemptOpenResponse}
     */
    ActivityAttemptOpenResponse,

    /**
     * The ActivityAttemptOpenResponseFeedback model constructor.
     * @property {module:model/ActivityAttemptOpenResponseFeedback}
     */
    ActivityAttemptOpenResponseFeedback,

    /**
     * The ActivityAttemptOpenResponseFiles model constructor.
     * @property {module:model/ActivityAttemptOpenResponseFiles}
     */
    ActivityAttemptOpenResponseFiles,

    /**
     * The Assessment model constructor.
     * @property {module:model/Assessment}
     */
    Assessment,

    /**
     * The AssessmentGroupRequired model constructor.
     * @property {module:model/AssessmentGroupRequired}
     */
    AssessmentGroupRequired,

    /**
     * The AssessmentGroupResponse model constructor.
     * @property {module:model/AssessmentGroupResponse}
     */
    AssessmentGroupResponse,

    /**
     * The AssessmentPendingSubmission model constructor.
     * @property {module:model/AssessmentPendingSubmission}
     */
    AssessmentPendingSubmission,

    /**
     * The AssessmentResponse model constructor.
     * @property {module:model/AssessmentResponse}
     */
    AssessmentResponse,

    /**
     * The AssignmentMarkResponse model constructor.
     * @property {module:model/AssignmentMarkResponse}
     */
    AssignmentMarkResponse,

    /**
     * The Assignments model constructor.
     * @property {module:model/Assignments}
     */
    Assignments,

    /**
     * The AwardedResponse model constructor.
     * @property {module:model/AwardedResponse}
     */
    AwardedResponse,

    /**
     * The Badge model constructor.
     * @property {module:model/Badge}
     */
    Badge,

    /**
     * The BadgeExpiry model constructor.
     * @property {module:model/BadgeExpiry}
     */
    BadgeExpiry,

    /**
     * The Channel model constructor.
     * @property {module:model/Channel}
     */
    Channel,

    /**
     * The ChannelGroup model constructor.
     * @property {module:model/ChannelGroup}
     */
    ChannelGroup,

    /**
     * The ChannelRequired model constructor.
     * @property {module:model/ChannelRequired}
     */
    ChannelRequired,

    /**
     * The ChannelResponse model constructor.
     * @property {module:model/ChannelResponse}
     */
    ChannelResponse,

    /**
     * The Comment model constructor.
     * @property {module:model/Comment}
     */
    Comment,

    /**
     * The CourseMetaResponse model constructor.
     * @property {module:model/CourseMetaResponse}
     */
    CourseMetaResponse,

    /**
     * The CourseMetaResponseMetadata model constructor.
     * @property {module:model/CourseMetaResponseMetadata}
     */
    CourseMetaResponseMetadata,

    /**
     * The CourseResponse model constructor.
     * @property {module:model/CourseResponse}
     */
    CourseResponse,

    /**
     * The CourseResponseMetadata model constructor.
     * @property {module:model/CourseResponseMetadata}
     */
    CourseResponseMetadata,

    /**
     * The CoursesContentIdMetadataCategoryPutRequest model constructor.
     * @property {module:model/CoursesContentIdMetadataCategoryPutRequest}
     */
    CoursesContentIdMetadataCategoryPutRequest,

    /**
     * The CoursesContentIdMetadataLevelPutRequest model constructor.
     * @property {module:model/CoursesContentIdMetadataLevelPutRequest}
     */
    CoursesContentIdMetadataLevelPutRequest,

    /**
     * The CoursesContentIdMetadataTagsPutRequest model constructor.
     * @property {module:model/CoursesContentIdMetadataTagsPutRequest}
     */
    CoursesContentIdMetadataTagsPutRequest,

    /**
     * The CoursesContentIdMetadataTopicPutRequest model constructor.
     * @property {module:model/CoursesContentIdMetadataTopicPutRequest}
     */
    CoursesContentIdMetadataTopicPutRequest,

    /**
     * The CoursesRootContentIdPermissionsUserEmailPost201Response model constructor.
     * @property {module:model/CoursesRootContentIdPermissionsUserEmailPost201Response}
     */
    CoursesRootContentIdPermissionsUserEmailPost201Response,

    /**
     * The Criteria model constructor.
     * @property {module:model/Criteria}
     */
    Criteria,

    /**
     * The Document model constructor.
     * @property {module:model/Document}
     */
    Document,

    /**
     * The DocumentResponse model constructor.
     * @property {module:model/DocumentResponse}
     */
    DocumentResponse,

    /**
     * The Error model constructor.
     * @property {module:model/Error}
     */
    Error,

    /**
     * The ErrorError model constructor.
     * @property {module:model/ErrorError}
     */
    ErrorError,

    /**
     * The HttpPost model constructor.
     * @property {module:model/HttpPost}
     */
    HttpPost,

    /**
     * The Invite model constructor.
     * @property {module:model/Invite}
     */
    Invite,

    /**
     * The LearnerOfferingDates model constructor.
     * @property {module:model/LearnerOfferingDates}
     */
    LearnerOfferingDates,

    /**
     * The LearnerProgressResponse model constructor.
     * @property {module:model/LearnerProgressResponse}
     */
    LearnerProgressResponse,

    /**
     * The LearnerResponse model constructor.
     * @property {module:model/LearnerResponse}
     */
    LearnerResponse,

    /**
     * The LearningOutcomes model constructor.
     * @property {module:model/LearningOutcomes}
     */
    LearningOutcomes,

    /**
     * The Mark model constructor.
     * @property {module:model/Mark}
     */
    Mark,

    /**
     * The MarkFeedback model constructor.
     * @property {module:model/MarkFeedback}
     */
    MarkFeedback,

    /**
     * The Moderation model constructor.
     * @property {module:model/Moderation}
     */
    Moderation,

    /**
     * The Moderator model constructor.
     * @property {module:model/Moderator}
     */
    Moderator,

    /**
     * The Offering model constructor.
     * @property {module:model/Offering}
     */
    Offering,

    /**
     * The OfferingActivitiesResponse model constructor.
     * @property {module:model/OfferingActivitiesResponse}
     */
    OfferingActivitiesResponse,

    /**
     * The OfferingBadge model constructor.
     * @property {module:model/OfferingBadge}
     */
    OfferingBadge,

    /**
     * The OfferingMetadata model constructor.
     * @property {module:model/OfferingMetadata}
     */
    OfferingMetadata,

    /**
     * The OfferingMetadataResponse model constructor.
     * @property {module:model/OfferingMetadataResponse}
     */
    OfferingMetadataResponse,

    /**
     * The OfferingProgressRow model constructor.
     * @property {module:model/OfferingProgressRow}
     */
    OfferingProgressRow,

    /**
     * The OfferingRequired model constructor.
     * @property {module:model/OfferingRequired}
     */
    OfferingRequired,

    /**
     * The OfferingResponse model constructor.
     * @property {module:model/OfferingResponse}
     */
    OfferingResponse,

    /**
     * The OfferingUser model constructor.
     * @property {module:model/OfferingUser}
     */
    OfferingUser,

    /**
     * The OfferingUserAddResponse model constructor.
     * @property {module:model/OfferingUserAddResponse}
     */
    OfferingUserAddResponse,

    /**
     * The OfferingUserResponse model constructor.
     * @property {module:model/OfferingUserResponse}
     */
    OfferingUserResponse,

    /**
     * The OfferingsOfferingIdAnalyticsPulsesResponsesGetResponseTimeParameter model constructor.
     * @property {module:model/OfferingsOfferingIdAnalyticsPulsesResponsesGetResponseTimeParameter}
     */
    OfferingsOfferingIdAnalyticsPulsesResponsesGetResponseTimeParameter,

    /**
     * The OfferingsOfferingIdAssessmentsAssessmentIdUserEmailPatchRequest model constructor.
     * @property {module:model/OfferingsOfferingIdAssessmentsAssessmentIdUserEmailPatchRequest}
     */
    OfferingsOfferingIdAssessmentsAssessmentIdUserEmailPatchRequest,

    /**
     * The OfferingsOfferingIdChannelsChannelIdLearnersPostRequest model constructor.
     * @property {module:model/OfferingsOfferingIdChannelsChannelIdLearnersPostRequest}
     */
    OfferingsOfferingIdChannelsChannelIdLearnersPostRequest,

    /**
     * The OfferingsOfferingIdGroupsGroupIdLearnersPostRequest model constructor.
     * @property {module:model/OfferingsOfferingIdGroupsGroupIdLearnersPostRequest}
     */
    OfferingsOfferingIdGroupsGroupIdLearnersPostRequest,

    /**
     * The OfferingsOfferingIdUsersPost207ResponseInner model constructor.
     * @property {module:model/OfferingsOfferingIdUsersPost207ResponseInner}
     */
    OfferingsOfferingIdUsersPost207ResponseInner,

    /**
     * The OpenBadgeClass model constructor.
     * @property {module:model/OpenBadgeClass}
     */
    OpenBadgeClass,

    /**
     * The OpenBadgeClassCriteria model constructor.
     * @property {module:model/OpenBadgeClassCriteria}
     */
    OpenBadgeClassCriteria,

    /**
     * The OrgRequest model constructor.
     * @property {module:model/OrgRequest}
     */
    OrgRequest,

    /**
     * The OrgResponse model constructor.
     * @property {module:model/OrgResponse}
     */
    OrgResponse,

    /**
     * The PermissionToBeGrantedToTheUser model constructor.
     * @property {module:model/PermissionToBeGrantedToTheUser}
     */
    PermissionToBeGrantedToTheUser,

    /**
     * The PortfolioActivations model constructor.
     * @property {module:model/PortfolioActivations}
     */
    PortfolioActivations,

    /**
     * The PortfolioLicenseResponse model constructor.
     * @property {module:model/PortfolioLicenseResponse}
     */
    PortfolioLicenseResponse,

    /**
     * The PortfolioMetadata model constructor.
     * @property {module:model/PortfolioMetadata}
     */
    PortfolioMetadata,

    /**
     * The PulseAnswer model constructor.
     * @property {module:model/PulseAnswer}
     */
    PulseAnswer,

    /**
     * The PulseMCQOption model constructor.
     * @property {module:model/PulseMCQOption}
     */
    PulseMCQOption,

    /**
     * The PulseResponse model constructor.
     * @property {module:model/PulseResponse}
     */
    PulseResponse,

    /**
     * The PulseSpatialOption model constructor.
     * @property {module:model/PulseSpatialOption}
     */
    PulseSpatialOption,

    /**
     * The QuizMarkResponse model constructor.
     * @property {module:model/QuizMarkResponse}
     */
    QuizMarkResponse,

    /**
     * The RevokedResponse model constructor.
     * @property {module:model/RevokedResponse}
     */
    RevokedResponse,

    /**
     * The SocialNotesResponse model constructor.
     * @property {module:model/SocialNotesResponse}
     */
    SocialNotesResponse,

    /**
     * The SubmissionMarkResponse model constructor.
     * @property {module:model/SubmissionMarkResponse}
     */
    SubmissionMarkResponse,

    /**
     * The SuspendedRequest model constructor.
     * @property {module:model/SuspendedRequest}
     */
    SuspendedRequest,

    /**
     * The ThemeResponse model constructor.
     * @property {module:model/ThemeResponse}
     */
    ThemeResponse,

    /**
     * The TransferRequest model constructor.
     * @property {module:model/TransferRequest}
     */
    TransferRequest,

    /**
     * The UnitReactionsAnalyticsResponse model constructor.
     * @property {module:model/UnitReactionsAnalyticsResponse}
     */
    UnitReactionsAnalyticsResponse,

    /**
     * The UnitReactionsFeedback model constructor.
     * @property {module:model/UnitReactionsFeedback}
     */
    UnitReactionsFeedback,

    /**
     * The User model constructor.
     * @property {module:model/User}
     */
    User,

    /**
     * The UserBadge model constructor.
     * @property {module:model/UserBadge}
     */
    UserBadge,

    /**
     * The UserBadgeBadgeExpiry model constructor.
     * @property {module:model/UserBadgeBadgeExpiry}
     */
    UserBadgeBadgeExpiry,

    /**
     * The UserMetadata model constructor.
     * @property {module:model/UserMetadata}
     */
    UserMetadata,

    /**
     * The UserPermission model constructor.
     * @property {module:model/UserPermission}
     */
    UserPermission,

    /**
     * The UserProfile model constructor.
     * @property {module:model/UserProfile}
     */
    UserProfile,

    /**
     * The UserProfileRequest model constructor.
     * @property {module:model/UserProfileRequest}
     */
    UserProfileRequest,

    /**
     * The UserResponse model constructor.
     * @property {module:model/UserResponse}
     */
    UserResponse,

    /**
     * The UsersAllProgressGet200Response model constructor.
     * @property {module:model/UsersAllProgressGet200Response}
     */
    UsersAllProgressGet200Response,

    /**
     * The UsersAllProgressGet200ResponseData model constructor.
     * @property {module:model/UsersAllProgressGet200ResponseData}
     */
    UsersAllProgressGet200ResponseData,

    /**
     * The UsersUserEmailOfferingsOfferingIdProgressGet200Response model constructor.
     * @property {module:model/UsersUserEmailOfferingsOfferingIdProgressGet200Response}
     */
    UsersUserEmailOfferingsOfferingIdProgressGet200Response,

    /**
    * The APIInfoApi service constructor.
    * @property {module:api/APIInfoApi}
    */
    APIInfoApi,

    /**
    * The AssessmentDataApi service constructor.
    * @property {module:api/AssessmentDataApi}
    */
    AssessmentDataApi,

    /**
    * The AssessmentGroupsApi service constructor.
    * @property {module:api/AssessmentGroupsApi}
    */
    AssessmentGroupsApi,

    /**
    * The AssessmentManagementApi service constructor.
    * @property {module:api/AssessmentManagementApi}
    */
    AssessmentManagementApi,

    /**
    * The BadgesApi service constructor.
    * @property {module:api/BadgesApi}
    */
    BadgesApi,

    /**
    * The ChannelsApi service constructor.
    * @property {module:api/ChannelsApi}
    */
    ChannelsApi,

    /**
    * The CourseMappingsApi service constructor.
    * @property {module:api/CourseMappingsApi}
    */
    CourseMappingsApi,

    /**
    * The CourseMetadataApi service constructor.
    * @property {module:api/CourseMetadataApi}
    */
    CourseMetadataApi,

    /**
    * The CoursesApi service constructor.
    * @property {module:api/CoursesApi}
    */
    CoursesApi,

    /**
    * The LearnerActivityApi service constructor.
    * @property {module:api/LearnerActivityApi}
    */
    LearnerActivityApi,

    /**
    * The OfferingLearnersApi service constructor.
    * @property {module:api/OfferingLearnersApi}
    */
    OfferingLearnersApi,

    /**
    * The OfferingMetadataApi service constructor.
    * @property {module:api/OfferingMetadataApi}
    */
    OfferingMetadataApi,

    /**
    * The OfferingsApi service constructor.
    * @property {module:api/OfferingsApi}
    */
    OfferingsApi,

    /**
    * The OrganisationApi service constructor.
    * @property {module:api/OrganisationApi}
    */
    OrganisationApi,

    /**
    * The PulsesApi service constructor.
    * @property {module:api/PulsesApi}
    */
    PulsesApi,

    /**
    * The UsersInIQualifyApi service constructor.
    * @property {module:api/UsersInIQualifyApi}
    */
    UsersInIQualifyApi
};
