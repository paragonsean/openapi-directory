/**
 * iQualify Management API
 * The iQualify API offers management responses for building learning experiences using your iQualify instance data.  Once youâ€™ve registered with iQualify, you can request an API access token by navigating to the API access section of the \"Account Settings\" area.  Find out how to [Request your API access token](https://www.iqualify.com/help/connecting-iqualify-to-other-systems/api/how-to-access-and-manage-your-api-token) on our Knowledge base.  All endpoints are only accessible via https and are located at api.iqualify.com. For instance: you can find your current offerings by accessing the following URL:      https://api.iqualify.com/v1/offerings/current  
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CourseMetaResponseMetadata from './CourseMetaResponseMetadata';

/**
 * The CourseMetaResponse model module.
 * @module model/CourseMetaResponse
 * @version v1
 */
class CourseMetaResponse {
    /**
     * Constructs a new <code>CourseMetaResponse</code>.
     * @alias module:model/CourseMetaResponse
     */
    constructor() { 
        
        CourseMetaResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CourseMetaResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CourseMetaResponse} obj Optional instance to populate.
     * @return {module:model/CourseMetaResponse} The populated <code>CourseMetaResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CourseMetaResponse();

            if (data.hasOwnProperty('coverImageUrl')) {
                obj['coverImageUrl'] = ApiClient.convertToType(data['coverImageUrl'], 'String');
            }
            if (data.hasOwnProperty('createdAt')) {
                obj['createdAt'] = ApiClient.convertToType(data['createdAt'], 'Date');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('metadata')) {
                obj['metadata'] = CourseMetaResponseMetadata.constructFromObject(data['metadata']);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('tasksEnabled')) {
                obj['tasksEnabled'] = ApiClient.convertToType(data['tasksEnabled'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CourseMetaResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CourseMetaResponse</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['coverImageUrl'] && !(typeof data['coverImageUrl'] === 'string' || data['coverImageUrl'] instanceof String)) {
            throw new Error("Expected the field `coverImageUrl` to be a primitive type in the JSON string but got " + data['coverImageUrl']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // validate the optional field `metadata`
        if (data['metadata']) { // data not null
          CourseMetaResponseMetadata.validateJSON(data['metadata']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }

        return true;
    }


}



/**
 * @member {String} coverImageUrl
 */
CourseMetaResponse.prototype['coverImageUrl'] = undefined;

/**
 * @member {Date} createdAt
 */
CourseMetaResponse.prototype['createdAt'] = undefined;

/**
 * @member {String} id
 */
CourseMetaResponse.prototype['id'] = undefined;

/**
 * @member {module:model/CourseMetaResponseMetadata} metadata
 */
CourseMetaResponse.prototype['metadata'] = undefined;

/**
 * @member {String} name
 */
CourseMetaResponse.prototype['name'] = undefined;

/**
 * @member {Boolean} tasksEnabled
 */
CourseMetaResponse.prototype['tasksEnabled'] = undefined;






export default CourseMetaResponse;

