/**
 * iQualify Management API
 * The iQualify API offers management responses for building learning experiences using your iQualify instance data.  Once youâ€™ve registered with iQualify, you can request an API access token by navigating to the API access section of the \"Account Settings\" area.  Find out how to [Request your API access token](https://www.iqualify.com/help/connecting-iqualify-to-other-systems/api/how-to-access-and-manage-your-api-token) on our Knowledge base.  All endpoints are only accessible via https and are located at api.iqualify.com. For instance: you can find your current offerings by accessing the following URL:      https://api.iqualify.com/v1/offerings/current  
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PulseAnswer from './PulseAnswer';

/**
 * The PulseResponse model module.
 * @module model/PulseResponse
 * @version v1
 */
class PulseResponse {
    /**
     * Constructs a new <code>PulseResponse</code>.
     * @alias module:model/PulseResponse
     */
    constructor() { 
        
        PulseResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PulseResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PulseResponse} obj Optional instance to populate.
     * @return {module:model/PulseResponse} The populated <code>PulseResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PulseResponse();

            if (data.hasOwnProperty('learnerFirstName')) {
                obj['learnerFirstName'] = ApiClient.convertToType(data['learnerFirstName'], 'String');
            }
            if (data.hasOwnProperty('learnerId')) {
                obj['learnerId'] = ApiClient.convertToType(data['learnerId'], 'String');
            }
            if (data.hasOwnProperty('learnerLastName')) {
                obj['learnerLastName'] = ApiClient.convertToType(data['learnerLastName'], 'String');
            }
            if (data.hasOwnProperty('pulseBaseId')) {
                obj['pulseBaseId'] = ApiClient.convertToType(data['pulseBaseId'], 'String');
            }
            if (data.hasOwnProperty('pulseInstanceId')) {
                obj['pulseInstanceId'] = ApiClient.convertToType(data['pulseInstanceId'], 'String');
            }
            if (data.hasOwnProperty('pulseQuestion')) {
                obj['pulseQuestion'] = ApiClient.convertToType(data['pulseQuestion'], 'String');
            }
            if (data.hasOwnProperty('pulseRunDurationMinutes')) {
                obj['pulseRunDurationMinutes'] = ApiClient.convertToType(data['pulseRunDurationMinutes'], 'Number');
            }
            if (data.hasOwnProperty('pulseRunStart')) {
                obj['pulseRunStart'] = ApiClient.convertToType(data['pulseRunStart'], 'Date');
            }
            if (data.hasOwnProperty('pulseType')) {
                obj['pulseType'] = ApiClient.convertToType(data['pulseType'], 'String');
            }
            if (data.hasOwnProperty('response')) {
                obj['response'] = PulseAnswer.constructFromObject(data['response']);
            }
            if (data.hasOwnProperty('responseTime')) {
                obj['responseTime'] = ApiClient.convertToType(data['responseTime'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PulseResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PulseResponse</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['learnerFirstName'] && !(typeof data['learnerFirstName'] === 'string' || data['learnerFirstName'] instanceof String)) {
            throw new Error("Expected the field `learnerFirstName` to be a primitive type in the JSON string but got " + data['learnerFirstName']);
        }
        // ensure the json data is a string
        if (data['learnerId'] && !(typeof data['learnerId'] === 'string' || data['learnerId'] instanceof String)) {
            throw new Error("Expected the field `learnerId` to be a primitive type in the JSON string but got " + data['learnerId']);
        }
        // ensure the json data is a string
        if (data['learnerLastName'] && !(typeof data['learnerLastName'] === 'string' || data['learnerLastName'] instanceof String)) {
            throw new Error("Expected the field `learnerLastName` to be a primitive type in the JSON string but got " + data['learnerLastName']);
        }
        // ensure the json data is a string
        if (data['pulseBaseId'] && !(typeof data['pulseBaseId'] === 'string' || data['pulseBaseId'] instanceof String)) {
            throw new Error("Expected the field `pulseBaseId` to be a primitive type in the JSON string but got " + data['pulseBaseId']);
        }
        // ensure the json data is a string
        if (data['pulseInstanceId'] && !(typeof data['pulseInstanceId'] === 'string' || data['pulseInstanceId'] instanceof String)) {
            throw new Error("Expected the field `pulseInstanceId` to be a primitive type in the JSON string but got " + data['pulseInstanceId']);
        }
        // ensure the json data is a string
        if (data['pulseQuestion'] && !(typeof data['pulseQuestion'] === 'string' || data['pulseQuestion'] instanceof String)) {
            throw new Error("Expected the field `pulseQuestion` to be a primitive type in the JSON string but got " + data['pulseQuestion']);
        }
        // ensure the json data is a string
        if (data['pulseType'] && !(typeof data['pulseType'] === 'string' || data['pulseType'] instanceof String)) {
            throw new Error("Expected the field `pulseType` to be a primitive type in the JSON string but got " + data['pulseType']);
        }
        // validate the optional field `response`
        if (data['response']) { // data not null
          PulseAnswer.validateJSON(data['response']);
        }

        return true;
    }


}



/**
 * @member {String} learnerFirstName
 */
PulseResponse.prototype['learnerFirstName'] = undefined;

/**
 * @member {String} learnerId
 */
PulseResponse.prototype['learnerId'] = undefined;

/**
 * @member {String} learnerLastName
 */
PulseResponse.prototype['learnerLastName'] = undefined;

/**
 * @member {String} pulseBaseId
 */
PulseResponse.prototype['pulseBaseId'] = undefined;

/**
 * @member {String} pulseInstanceId
 */
PulseResponse.prototype['pulseInstanceId'] = undefined;

/**
 * @member {String} pulseQuestion
 */
PulseResponse.prototype['pulseQuestion'] = undefined;

/**
 * @member {Number} pulseRunDurationMinutes
 */
PulseResponse.prototype['pulseRunDurationMinutes'] = undefined;

/**
 * @member {Date} pulseRunStart
 */
PulseResponse.prototype['pulseRunStart'] = undefined;

/**
 * @member {String} pulseType
 */
PulseResponse.prototype['pulseType'] = undefined;

/**
 * @member {module:model/PulseAnswer} response
 */
PulseResponse.prototype['response'] = undefined;

/**
 * @member {Date} responseTime
 */
PulseResponse.prototype['responseTime'] = undefined;






export default PulseResponse;

