/**
 * iQualify Management API
 * The iQualify API offers management responses for building learning experiences using your iQualify instance data.  Once youâ€™ve registered with iQualify, you can request an API access token by navigating to the API access section of the \"Account Settings\" area.  Find out how to [Request your API access token](https://www.iqualify.com/help/connecting-iqualify-to-other-systems/api/how-to-access-and-manage-your-api-token) on our Knowledge base.  All endpoints are only accessible via https and are located at api.iqualify.com. For instance: you can find your current offerings by accessing the following URL:      https://api.iqualify.com/v1/offerings/current  
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ActivityAttemptOpenResponseFeedback from './ActivityAttemptOpenResponseFeedback';
import ActivityAttemptOpenResponseFiles from './ActivityAttemptOpenResponseFiles';

/**
 * The ActivityAttemptOpenResponse model module.
 * @module model/ActivityAttemptOpenResponse
 * @version v1
 */
class ActivityAttemptOpenResponse {
    /**
     * Constructs a new <code>ActivityAttemptOpenResponse</code>.
     * @alias module:model/ActivityAttemptOpenResponse
     */
    constructor() { 
        
        ActivityAttemptOpenResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ActivityAttemptOpenResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ActivityAttemptOpenResponse} obj Optional instance to populate.
     * @return {module:model/ActivityAttemptOpenResponse} The populated <code>ActivityAttemptOpenResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ActivityAttemptOpenResponse();

            if (data.hasOwnProperty('activityId')) {
                obj['activityId'] = ApiClient.convertToType(data['activityId'], 'String');
            }
            if (data.hasOwnProperty('activityType')) {
                obj['activityType'] = ApiClient.convertToType(data['activityType'], 'String');
            }
            if (data.hasOwnProperty('feedback')) {
                obj['feedback'] = ActivityAttemptOpenResponseFeedback.constructFromObject(data['feedback']);
            }
            if (data.hasOwnProperty('learnerEmail')) {
                obj['learnerEmail'] = ApiClient.convertToType(data['learnerEmail'], 'String');
            }
            if (data.hasOwnProperty('offeringId')) {
                obj['offeringId'] = ApiClient.convertToType(data['offeringId'], 'String');
            }
            if (data.hasOwnProperty('responseText')) {
                obj['responseText'] = ApiClient.convertToType(data['responseText'], 'String');
            }
            if (data.hasOwnProperty('uploadedFiles')) {
                obj['uploadedFiles'] = ActivityAttemptOpenResponseFiles.constructFromObject(data['uploadedFiles']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ActivityAttemptOpenResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ActivityAttemptOpenResponse</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['activityId'] && !(typeof data['activityId'] === 'string' || data['activityId'] instanceof String)) {
            throw new Error("Expected the field `activityId` to be a primitive type in the JSON string but got " + data['activityId']);
        }
        // ensure the json data is a string
        if (data['activityType'] && !(typeof data['activityType'] === 'string' || data['activityType'] instanceof String)) {
            throw new Error("Expected the field `activityType` to be a primitive type in the JSON string but got " + data['activityType']);
        }
        // validate the optional field `feedback`
        if (data['feedback']) { // data not null
          ActivityAttemptOpenResponseFeedback.validateJSON(data['feedback']);
        }
        // ensure the json data is a string
        if (data['learnerEmail'] && !(typeof data['learnerEmail'] === 'string' || data['learnerEmail'] instanceof String)) {
            throw new Error("Expected the field `learnerEmail` to be a primitive type in the JSON string but got " + data['learnerEmail']);
        }
        // ensure the json data is a string
        if (data['offeringId'] && !(typeof data['offeringId'] === 'string' || data['offeringId'] instanceof String)) {
            throw new Error("Expected the field `offeringId` to be a primitive type in the JSON string but got " + data['offeringId']);
        }
        // ensure the json data is a string
        if (data['responseText'] && !(typeof data['responseText'] === 'string' || data['responseText'] instanceof String)) {
            throw new Error("Expected the field `responseText` to be a primitive type in the JSON string but got " + data['responseText']);
        }
        // validate the optional field `uploadedFiles`
        if (data['uploadedFiles']) { // data not null
          ActivityAttemptOpenResponseFiles.validateJSON(data['uploadedFiles']);
        }

        return true;
    }


}



/**
 * @member {String} activityId
 */
ActivityAttemptOpenResponse.prototype['activityId'] = undefined;

/**
 * @member {String} activityType
 */
ActivityAttemptOpenResponse.prototype['activityType'] = undefined;

/**
 * @member {module:model/ActivityAttemptOpenResponseFeedback} feedback
 */
ActivityAttemptOpenResponse.prototype['feedback'] = undefined;

/**
 * @member {String} learnerEmail
 */
ActivityAttemptOpenResponse.prototype['learnerEmail'] = undefined;

/**
 * @member {String} offeringId
 */
ActivityAttemptOpenResponse.prototype['offeringId'] = undefined;

/**
 * @member {String} responseText
 */
ActivityAttemptOpenResponse.prototype['responseText'] = undefined;

/**
 * @member {module:model/ActivityAttemptOpenResponseFiles} uploadedFiles
 */
ActivityAttemptOpenResponse.prototype['uploadedFiles'] = undefined;






export default ActivityAttemptOpenResponse;

