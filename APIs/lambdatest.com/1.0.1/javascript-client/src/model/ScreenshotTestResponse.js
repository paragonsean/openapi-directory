/**
 * LambdaTest Screenshots API Documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ScreenshotType from './ScreenshotType';

/**
 * The ScreenshotTestResponse model module.
 * @module model/ScreenshotTestResponse
 * @version 1.0.1
 */
class ScreenshotTestResponse {
    /**
     * Constructs a new <code>ScreenshotTestResponse</code>.
     * @alias module:model/ScreenshotTestResponse
     */
    constructor() { 
        
        ScreenshotTestResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ScreenshotTestResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ScreenshotTestResponse} obj Optional instance to populate.
     * @return {module:model/ScreenshotTestResponse} The populated <code>ScreenshotTestResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ScreenshotTestResponse();

            if (data.hasOwnProperty('callback_url')) {
                obj['callback_url'] = ApiClient.convertToType(data['callback_url'], 'String');
            }
            if (data.hasOwnProperty('defer_time')) {
                obj['defer_time'] = ApiClient.convertToType(data['defer_time'], 'Number');
            }
            if (data.hasOwnProperty('screenshots')) {
                obj['screenshots'] = ApiClient.convertToType(data['screenshots'], [ScreenshotType]);
            }
            if (data.hasOwnProperty('test_id')) {
                obj['test_id'] = ApiClient.convertToType(data['test_id'], 'String');
            }
            if (data.hasOwnProperty('test_status')) {
                obj['test_status'] = ApiClient.convertToType(data['test_status'], 'String');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ScreenshotTestResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ScreenshotTestResponse</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['callback_url'] && !(typeof data['callback_url'] === 'string' || data['callback_url'] instanceof String)) {
            throw new Error("Expected the field `callback_url` to be a primitive type in the JSON string but got " + data['callback_url']);
        }
        if (data['screenshots']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['screenshots'])) {
                throw new Error("Expected the field `screenshots` to be an array in the JSON data but got " + data['screenshots']);
            }
            // validate the optional field `screenshots` (array)
            for (const item of data['screenshots']) {
                ScreenshotType.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['test_id'] && !(typeof data['test_id'] === 'string' || data['test_id'] instanceof String)) {
            throw new Error("Expected the field `test_id` to be a primitive type in the JSON string but got " + data['test_id']);
        }
        // ensure the json data is a string
        if (data['test_status'] && !(typeof data['test_status'] === 'string' || data['test_status'] instanceof String)) {
            throw new Error("Expected the field `test_status` to be a primitive type in the JSON string but got " + data['test_status']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }

        return true;
    }


}



/**
 * @member {String} callback_url
 */
ScreenshotTestResponse.prototype['callback_url'] = undefined;

/**
 * @member {Number} defer_time
 */
ScreenshotTestResponse.prototype['defer_time'] = undefined;

/**
 * @member {Array.<module:model/ScreenshotType>} screenshots
 */
ScreenshotTestResponse.prototype['screenshots'] = undefined;

/**
 * @member {String} test_id
 */
ScreenshotTestResponse.prototype['test_id'] = undefined;

/**
 * @member {String} test_status
 */
ScreenshotTestResponse.prototype['test_status'] = undefined;

/**
 * @member {String} url
 */
ScreenshotTestResponse.prototype['url'] = undefined;






export default ScreenshotTestResponse;

