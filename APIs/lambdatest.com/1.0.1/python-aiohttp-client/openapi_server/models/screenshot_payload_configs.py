# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.browsers import Browsers
from openapi_server import util


class ScreenshotPayloadConfigs(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, macos_mojave: Browsers=None, windows_10: Browsers=None):
        """ScreenshotPayloadConfigs - a model defined in OpenAPI

        :param macos_mojave: The macos_mojave of this ScreenshotPayloadConfigs.
        :param windows_10: The windows_10 of this ScreenshotPayloadConfigs.
        """
        self.openapi_types = {
            'macos_mojave': Browsers,
            'windows_10': Browsers
        }

        self.attribute_map = {
            'macos_mojave': 'macos mojave',
            'windows_10': 'windows 10'
        }

        self._macos_mojave = macos_mojave
        self._windows_10 = windows_10

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ScreenshotPayloadConfigs':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The screenshot_payload_configs of this ScreenshotPayloadConfigs.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def macos_mojave(self):
        """Gets the macos_mojave of this ScreenshotPayloadConfigs.


        :return: The macos_mojave of this ScreenshotPayloadConfigs.
        :rtype: Browsers
        """
        return self._macos_mojave

    @macos_mojave.setter
    def macos_mojave(self, macos_mojave):
        """Sets the macos_mojave of this ScreenshotPayloadConfigs.


        :param macos_mojave: The macos_mojave of this ScreenshotPayloadConfigs.
        :type macos_mojave: Browsers
        """

        self._macos_mojave = macos_mojave

    @property
    def windows_10(self):
        """Gets the windows_10 of this ScreenshotPayloadConfigs.


        :return: The windows_10 of this ScreenshotPayloadConfigs.
        :rtype: Browsers
        """
        return self._windows_10

    @windows_10.setter
    def windows_10(self, windows_10):
        """Sets the windows_10 of this ScreenshotPayloadConfigs.


        :param windows_10: The windows_10 of this ScreenshotPayloadConfigs.
        :type windows_10: Browsers
        """

        self._windows_10 = windows_10
