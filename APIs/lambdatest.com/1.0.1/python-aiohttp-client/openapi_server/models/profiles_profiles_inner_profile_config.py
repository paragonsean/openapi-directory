# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.profiles_profiles_inner_profile_config_credentials import ProfilesProfilesInnerProfileConfigCredentials
from openapi_server.models.profiles_profiles_inner_profile_config_locators import ProfilesProfilesInnerProfileConfigLocators
from openapi_server import util


class ProfilesProfilesInnerProfileConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, credentials: ProfilesProfilesInnerProfileConfigCredentials=None, locators: ProfilesProfilesInnerProfileConfigLocators=None, login_url: str=None, profile_name: str=None):
        """ProfilesProfilesInnerProfileConfig - a model defined in OpenAPI

        :param credentials: The credentials of this ProfilesProfilesInnerProfileConfig.
        :param locators: The locators of this ProfilesProfilesInnerProfileConfig.
        :param login_url: The login_url of this ProfilesProfilesInnerProfileConfig.
        :param profile_name: The profile_name of this ProfilesProfilesInnerProfileConfig.
        """
        self.openapi_types = {
            'credentials': ProfilesProfilesInnerProfileConfigCredentials,
            'locators': ProfilesProfilesInnerProfileConfigLocators,
            'login_url': str,
            'profile_name': str
        }

        self.attribute_map = {
            'credentials': 'credentials',
            'locators': 'locators',
            'login_url': 'login_url',
            'profile_name': 'profile_name'
        }

        self._credentials = credentials
        self._locators = locators
        self._login_url = login_url
        self._profile_name = profile_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProfilesProfilesInnerProfileConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The profiles_profiles_inner_profile_config of this ProfilesProfilesInnerProfileConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def credentials(self):
        """Gets the credentials of this ProfilesProfilesInnerProfileConfig.


        :return: The credentials of this ProfilesProfilesInnerProfileConfig.
        :rtype: ProfilesProfilesInnerProfileConfigCredentials
        """
        return self._credentials

    @credentials.setter
    def credentials(self, credentials):
        """Sets the credentials of this ProfilesProfilesInnerProfileConfig.


        :param credentials: The credentials of this ProfilesProfilesInnerProfileConfig.
        :type credentials: ProfilesProfilesInnerProfileConfigCredentials
        """

        self._credentials = credentials

    @property
    def locators(self):
        """Gets the locators of this ProfilesProfilesInnerProfileConfig.


        :return: The locators of this ProfilesProfilesInnerProfileConfig.
        :rtype: ProfilesProfilesInnerProfileConfigLocators
        """
        return self._locators

    @locators.setter
    def locators(self, locators):
        """Sets the locators of this ProfilesProfilesInnerProfileConfig.


        :param locators: The locators of this ProfilesProfilesInnerProfileConfig.
        :type locators: ProfilesProfilesInnerProfileConfigLocators
        """

        self._locators = locators

    @property
    def login_url(self):
        """Gets the login_url of this ProfilesProfilesInnerProfileConfig.


        :return: The login_url of this ProfilesProfilesInnerProfileConfig.
        :rtype: str
        """
        return self._login_url

    @login_url.setter
    def login_url(self, login_url):
        """Sets the login_url of this ProfilesProfilesInnerProfileConfig.


        :param login_url: The login_url of this ProfilesProfilesInnerProfileConfig.
        :type login_url: str
        """

        self._login_url = login_url

    @property
    def profile_name(self):
        """Gets the profile_name of this ProfilesProfilesInnerProfileConfig.


        :return: The profile_name of this ProfilesProfilesInnerProfileConfig.
        :rtype: str
        """
        return self._profile_name

    @profile_name.setter
    def profile_name(self, profile_name):
        """Sets the profile_name of this ProfilesProfilesInnerProfileConfig.


        :param profile_name: The profile_name of this ProfilesProfilesInnerProfileConfig.
        :type profile_name: str
        """

        self._profile_name = profile_name
