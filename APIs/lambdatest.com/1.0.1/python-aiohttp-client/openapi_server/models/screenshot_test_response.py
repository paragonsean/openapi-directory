# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.screenshot_type import ScreenshotType
from openapi_server import util


class ScreenshotTestResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, callback_url: str=None, defer_time: float=None, screenshots: List[ScreenshotType]=None, test_id: str=None, test_status: str=None, url: str=None):
        """ScreenshotTestResponse - a model defined in OpenAPI

        :param callback_url: The callback_url of this ScreenshotTestResponse.
        :param defer_time: The defer_time of this ScreenshotTestResponse.
        :param screenshots: The screenshots of this ScreenshotTestResponse.
        :param test_id: The test_id of this ScreenshotTestResponse.
        :param test_status: The test_status of this ScreenshotTestResponse.
        :param url: The url of this ScreenshotTestResponse.
        """
        self.openapi_types = {
            'callback_url': str,
            'defer_time': float,
            'screenshots': List[ScreenshotType],
            'test_id': str,
            'test_status': str,
            'url': str
        }

        self.attribute_map = {
            'callback_url': 'callback_url',
            'defer_time': 'defer_time',
            'screenshots': 'screenshots',
            'test_id': 'test_id',
            'test_status': 'test_status',
            'url': 'url'
        }

        self._callback_url = callback_url
        self._defer_time = defer_time
        self._screenshots = screenshots
        self._test_id = test_id
        self._test_status = test_status
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ScreenshotTestResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The screenshot-test-response of this ScreenshotTestResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def callback_url(self):
        """Gets the callback_url of this ScreenshotTestResponse.


        :return: The callback_url of this ScreenshotTestResponse.
        :rtype: str
        """
        return self._callback_url

    @callback_url.setter
    def callback_url(self, callback_url):
        """Sets the callback_url of this ScreenshotTestResponse.


        :param callback_url: The callback_url of this ScreenshotTestResponse.
        :type callback_url: str
        """

        self._callback_url = callback_url

    @property
    def defer_time(self):
        """Gets the defer_time of this ScreenshotTestResponse.


        :return: The defer_time of this ScreenshotTestResponse.
        :rtype: float
        """
        return self._defer_time

    @defer_time.setter
    def defer_time(self, defer_time):
        """Sets the defer_time of this ScreenshotTestResponse.


        :param defer_time: The defer_time of this ScreenshotTestResponse.
        :type defer_time: float
        """

        self._defer_time = defer_time

    @property
    def screenshots(self):
        """Gets the screenshots of this ScreenshotTestResponse.


        :return: The screenshots of this ScreenshotTestResponse.
        :rtype: List[ScreenshotType]
        """
        return self._screenshots

    @screenshots.setter
    def screenshots(self, screenshots):
        """Sets the screenshots of this ScreenshotTestResponse.


        :param screenshots: The screenshots of this ScreenshotTestResponse.
        :type screenshots: List[ScreenshotType]
        """

        self._screenshots = screenshots

    @property
    def test_id(self):
        """Gets the test_id of this ScreenshotTestResponse.


        :return: The test_id of this ScreenshotTestResponse.
        :rtype: str
        """
        return self._test_id

    @test_id.setter
    def test_id(self, test_id):
        """Sets the test_id of this ScreenshotTestResponse.


        :param test_id: The test_id of this ScreenshotTestResponse.
        :type test_id: str
        """

        self._test_id = test_id

    @property
    def test_status(self):
        """Gets the test_status of this ScreenshotTestResponse.


        :return: The test_status of this ScreenshotTestResponse.
        :rtype: str
        """
        return self._test_status

    @test_status.setter
    def test_status(self, test_status):
        """Sets the test_status of this ScreenshotTestResponse.


        :param test_status: The test_status of this ScreenshotTestResponse.
        :type test_status: str
        """

        self._test_status = test_status

    @property
    def url(self):
        """Gets the url of this ScreenshotTestResponse.


        :return: The url of this ScreenshotTestResponse.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this ScreenshotTestResponse.


        :param url: The url of this ScreenshotTestResponse.
        :type url: str
        """

        self._url = url
