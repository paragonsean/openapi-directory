# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Resolutions(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, mac_res: List[str]=None, win_res: List[str]=None):
        """Resolutions - a model defined in OpenAPI

        :param mac_res: The mac_res of this Resolutions.
        :param win_res: The win_res of this Resolutions.
        """
        self.openapi_types = {
            'mac_res': List[str],
            'win_res': List[str]
        }

        self.attribute_map = {
            'mac_res': 'mac_res',
            'win_res': 'win_res'
        }

        self._mac_res = mac_res
        self._win_res = win_res

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Resolutions':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The resolutions of this Resolutions.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def mac_res(self):
        """Gets the mac_res of this Resolutions.


        :return: The mac_res of this Resolutions.
        :rtype: List[str]
        """
        return self._mac_res

    @mac_res.setter
    def mac_res(self, mac_res):
        """Sets the mac_res of this Resolutions.


        :param mac_res: The mac_res of this Resolutions.
        :type mac_res: List[str]
        """

        self._mac_res = mac_res

    @property
    def win_res(self):
        """Gets the win_res of this Resolutions.


        :return: The win_res of this Resolutions.
        :rtype: List[str]
        """
        return self._win_res

    @win_res.setter
    def win_res(self, win_res):
        """Sets the win_res of this Resolutions.


        :param win_res: The win_res of this Resolutions.
        :type win_res: List[str]
        """

        self._win_res = win_res
