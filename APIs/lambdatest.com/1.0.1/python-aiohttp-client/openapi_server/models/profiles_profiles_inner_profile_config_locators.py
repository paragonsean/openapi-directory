# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.profiles_profiles_inner_profile_config_locators_password import ProfilesProfilesInnerProfileConfigLocatorsPassword
from openapi_server.models.profiles_profiles_inner_profile_config_locators_submit import ProfilesProfilesInnerProfileConfigLocatorsSubmit
from openapi_server.models.profiles_profiles_inner_profile_config_locators_username import ProfilesProfilesInnerProfileConfigLocatorsUsername
from openapi_server import util


class ProfilesProfilesInnerProfileConfigLocators(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, password: ProfilesProfilesInnerProfileConfigLocatorsPassword=None, submit: ProfilesProfilesInnerProfileConfigLocatorsSubmit=None, username: ProfilesProfilesInnerProfileConfigLocatorsUsername=None):
        """ProfilesProfilesInnerProfileConfigLocators - a model defined in OpenAPI

        :param password: The password of this ProfilesProfilesInnerProfileConfigLocators.
        :param submit: The submit of this ProfilesProfilesInnerProfileConfigLocators.
        :param username: The username of this ProfilesProfilesInnerProfileConfigLocators.
        """
        self.openapi_types = {
            'password': ProfilesProfilesInnerProfileConfigLocatorsPassword,
            'submit': ProfilesProfilesInnerProfileConfigLocatorsSubmit,
            'username': ProfilesProfilesInnerProfileConfigLocatorsUsername
        }

        self.attribute_map = {
            'password': 'password',
            'submit': 'submit',
            'username': 'username'
        }

        self._password = password
        self._submit = submit
        self._username = username

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProfilesProfilesInnerProfileConfigLocators':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The profiles_profiles_inner_profile_config_locators of this ProfilesProfilesInnerProfileConfigLocators.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def password(self):
        """Gets the password of this ProfilesProfilesInnerProfileConfigLocators.


        :return: The password of this ProfilesProfilesInnerProfileConfigLocators.
        :rtype: ProfilesProfilesInnerProfileConfigLocatorsPassword
        """
        return self._password

    @password.setter
    def password(self, password):
        """Sets the password of this ProfilesProfilesInnerProfileConfigLocators.


        :param password: The password of this ProfilesProfilesInnerProfileConfigLocators.
        :type password: ProfilesProfilesInnerProfileConfigLocatorsPassword
        """

        self._password = password

    @property
    def submit(self):
        """Gets the submit of this ProfilesProfilesInnerProfileConfigLocators.


        :return: The submit of this ProfilesProfilesInnerProfileConfigLocators.
        :rtype: ProfilesProfilesInnerProfileConfigLocatorsSubmit
        """
        return self._submit

    @submit.setter
    def submit(self, submit):
        """Sets the submit of this ProfilesProfilesInnerProfileConfigLocators.


        :param submit: The submit of this ProfilesProfilesInnerProfileConfigLocators.
        :type submit: ProfilesProfilesInnerProfileConfigLocatorsSubmit
        """

        self._submit = submit

    @property
    def username(self):
        """Gets the username of this ProfilesProfilesInnerProfileConfigLocators.


        :return: The username of this ProfilesProfilesInnerProfileConfigLocators.
        :rtype: ProfilesProfilesInnerProfileConfigLocatorsUsername
        """
        return self._username

    @username.setter
    def username(self, username):
        """Sets the username of this ProfilesProfilesInnerProfileConfigLocators.


        :param username: The username of this ProfilesProfilesInnerProfileConfigLocators.
        :type username: ProfilesProfilesInnerProfileConfigLocatorsUsername
        """

        self._username = username
