# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ScreenshotType(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, activity_id: str=None, browser: str=None, browser_version: str=None, os: str=None, resolution: str=None, screenshot_url: str=None, status: str=None, thumbnail_url: str=None):
        """ScreenshotType - a model defined in OpenAPI

        :param activity_id: The activity_id of this ScreenshotType.
        :param browser: The browser of this ScreenshotType.
        :param browser_version: The browser_version of this ScreenshotType.
        :param os: The os of this ScreenshotType.
        :param resolution: The resolution of this ScreenshotType.
        :param screenshot_url: The screenshot_url of this ScreenshotType.
        :param status: The status of this ScreenshotType.
        :param thumbnail_url: The thumbnail_url of this ScreenshotType.
        """
        self.openapi_types = {
            'activity_id': str,
            'browser': str,
            'browser_version': str,
            'os': str,
            'resolution': str,
            'screenshot_url': str,
            'status': str,
            'thumbnail_url': str
        }

        self.attribute_map = {
            'activity_id': 'activity_id',
            'browser': 'browser',
            'browser_version': 'browser_version',
            'os': 'os',
            'resolution': 'resolution',
            'screenshot_url': 'screenshot_url',
            'status': 'status',
            'thumbnail_url': 'thumbnail_url'
        }

        self._activity_id = activity_id
        self._browser = browser
        self._browser_version = browser_version
        self._os = os
        self._resolution = resolution
        self._screenshot_url = screenshot_url
        self._status = status
        self._thumbnail_url = thumbnail_url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ScreenshotType':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The screenshot-type of this ScreenshotType.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def activity_id(self):
        """Gets the activity_id of this ScreenshotType.


        :return: The activity_id of this ScreenshotType.
        :rtype: str
        """
        return self._activity_id

    @activity_id.setter
    def activity_id(self, activity_id):
        """Sets the activity_id of this ScreenshotType.


        :param activity_id: The activity_id of this ScreenshotType.
        :type activity_id: str
        """

        self._activity_id = activity_id

    @property
    def browser(self):
        """Gets the browser of this ScreenshotType.


        :return: The browser of this ScreenshotType.
        :rtype: str
        """
        return self._browser

    @browser.setter
    def browser(self, browser):
        """Sets the browser of this ScreenshotType.


        :param browser: The browser of this ScreenshotType.
        :type browser: str
        """

        self._browser = browser

    @property
    def browser_version(self):
        """Gets the browser_version of this ScreenshotType.


        :return: The browser_version of this ScreenshotType.
        :rtype: str
        """
        return self._browser_version

    @browser_version.setter
    def browser_version(self, browser_version):
        """Sets the browser_version of this ScreenshotType.


        :param browser_version: The browser_version of this ScreenshotType.
        :type browser_version: str
        """

        self._browser_version = browser_version

    @property
    def os(self):
        """Gets the os of this ScreenshotType.


        :return: The os of this ScreenshotType.
        :rtype: str
        """
        return self._os

    @os.setter
    def os(self, os):
        """Sets the os of this ScreenshotType.


        :param os: The os of this ScreenshotType.
        :type os: str
        """

        self._os = os

    @property
    def resolution(self):
        """Gets the resolution of this ScreenshotType.


        :return: The resolution of this ScreenshotType.
        :rtype: str
        """
        return self._resolution

    @resolution.setter
    def resolution(self, resolution):
        """Sets the resolution of this ScreenshotType.


        :param resolution: The resolution of this ScreenshotType.
        :type resolution: str
        """

        self._resolution = resolution

    @property
    def screenshot_url(self):
        """Gets the screenshot_url of this ScreenshotType.


        :return: The screenshot_url of this ScreenshotType.
        :rtype: str
        """
        return self._screenshot_url

    @screenshot_url.setter
    def screenshot_url(self, screenshot_url):
        """Sets the screenshot_url of this ScreenshotType.


        :param screenshot_url: The screenshot_url of this ScreenshotType.
        :type screenshot_url: str
        """

        self._screenshot_url = screenshot_url

    @property
    def status(self):
        """Gets the status of this ScreenshotType.


        :return: The status of this ScreenshotType.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this ScreenshotType.


        :param status: The status of this ScreenshotType.
        :type status: str
        """

        self._status = status

    @property
    def thumbnail_url(self):
        """Gets the thumbnail_url of this ScreenshotType.


        :return: The thumbnail_url of this ScreenshotType.
        :rtype: str
        """
        return self._thumbnail_url

    @thumbnail_url.setter
    def thumbnail_url(self, thumbnail_url):
        """Sets the thumbnail_url of this ScreenshotType.


        :param thumbnail_url: The thumbnail_url of this ScreenshotType.
        :type thumbnail_url: str
        """

        self._thumbnail_url = thumbnail_url
