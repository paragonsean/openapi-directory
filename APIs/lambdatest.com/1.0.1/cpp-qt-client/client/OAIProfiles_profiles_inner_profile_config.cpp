/**
 * LambdaTest Screenshots API Documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProfiles_profiles_inner_profile_config.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProfiles_profiles_inner_profile_config::OAIProfiles_profiles_inner_profile_config(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProfiles_profiles_inner_profile_config::OAIProfiles_profiles_inner_profile_config() {
    this->initializeModel();
}

OAIProfiles_profiles_inner_profile_config::~OAIProfiles_profiles_inner_profile_config() {}

void OAIProfiles_profiles_inner_profile_config::initializeModel() {

    m_credentials_isSet = false;
    m_credentials_isValid = false;

    m_locators_isSet = false;
    m_locators_isValid = false;

    m_login_url_isSet = false;
    m_login_url_isValid = false;

    m_profile_name_isSet = false;
    m_profile_name_isValid = false;
}

void OAIProfiles_profiles_inner_profile_config::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIProfiles_profiles_inner_profile_config::fromJsonObject(QJsonObject json) {

    m_credentials_isValid = ::OpenAPI::fromJsonValue(m_credentials, json[QString("credentials")]);
    m_credentials_isSet = !json[QString("credentials")].isNull() && m_credentials_isValid;

    m_locators_isValid = ::OpenAPI::fromJsonValue(m_locators, json[QString("locators")]);
    m_locators_isSet = !json[QString("locators")].isNull() && m_locators_isValid;

    m_login_url_isValid = ::OpenAPI::fromJsonValue(m_login_url, json[QString("login_url")]);
    m_login_url_isSet = !json[QString("login_url")].isNull() && m_login_url_isValid;

    m_profile_name_isValid = ::OpenAPI::fromJsonValue(m_profile_name, json[QString("profile_name")]);
    m_profile_name_isSet = !json[QString("profile_name")].isNull() && m_profile_name_isValid;
}

QString OAIProfiles_profiles_inner_profile_config::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIProfiles_profiles_inner_profile_config::asJsonObject() const {
    QJsonObject obj;
    if (m_credentials.isSet()) {
        obj.insert(QString("credentials"), ::OpenAPI::toJsonValue(m_credentials));
    }
    if (m_locators.isSet()) {
        obj.insert(QString("locators"), ::OpenAPI::toJsonValue(m_locators));
    }
    if (m_login_url_isSet) {
        obj.insert(QString("login_url"), ::OpenAPI::toJsonValue(m_login_url));
    }
    if (m_profile_name_isSet) {
        obj.insert(QString("profile_name"), ::OpenAPI::toJsonValue(m_profile_name));
    }
    return obj;
}

OAIProfiles_profiles_inner_profile_config_credentials OAIProfiles_profiles_inner_profile_config::getCredentials() const {
    return m_credentials;
}
void OAIProfiles_profiles_inner_profile_config::setCredentials(const OAIProfiles_profiles_inner_profile_config_credentials &credentials) {
    m_credentials = credentials;
    m_credentials_isSet = true;
}

bool OAIProfiles_profiles_inner_profile_config::is_credentials_Set() const{
    return m_credentials_isSet;
}

bool OAIProfiles_profiles_inner_profile_config::is_credentials_Valid() const{
    return m_credentials_isValid;
}

OAIProfiles_profiles_inner_profile_config_locators OAIProfiles_profiles_inner_profile_config::getLocators() const {
    return m_locators;
}
void OAIProfiles_profiles_inner_profile_config::setLocators(const OAIProfiles_profiles_inner_profile_config_locators &locators) {
    m_locators = locators;
    m_locators_isSet = true;
}

bool OAIProfiles_profiles_inner_profile_config::is_locators_Set() const{
    return m_locators_isSet;
}

bool OAIProfiles_profiles_inner_profile_config::is_locators_Valid() const{
    return m_locators_isValid;
}

QString OAIProfiles_profiles_inner_profile_config::getLoginUrl() const {
    return m_login_url;
}
void OAIProfiles_profiles_inner_profile_config::setLoginUrl(const QString &login_url) {
    m_login_url = login_url;
    m_login_url_isSet = true;
}

bool OAIProfiles_profiles_inner_profile_config::is_login_url_Set() const{
    return m_login_url_isSet;
}

bool OAIProfiles_profiles_inner_profile_config::is_login_url_Valid() const{
    return m_login_url_isValid;
}

QString OAIProfiles_profiles_inner_profile_config::getProfileName() const {
    return m_profile_name;
}
void OAIProfiles_profiles_inner_profile_config::setProfileName(const QString &profile_name) {
    m_profile_name = profile_name;
    m_profile_name_isSet = true;
}

bool OAIProfiles_profiles_inner_profile_config::is_profile_name_Set() const{
    return m_profile_name_isSet;
}

bool OAIProfiles_profiles_inner_profile_config::is_profile_name_Valid() const{
    return m_profile_name_isValid;
}

bool OAIProfiles_profiles_inner_profile_config::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_credentials.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_locators.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_login_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_profile_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIProfiles_profiles_inner_profile_config::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
