/**
 * LambdaTest Screenshots API Documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOs_devices.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOs_devices::OAIOs_devices(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOs_devices::OAIOs_devices() {
    this->initializeModel();
}

OAIOs_devices::~OAIOs_devices() {}

void OAIOs_devices::initializeModel() {

    m_android_7_0_isSet = false;
    m_android_7_0_isValid = false;

    m_ios_12_0_isSet = false;
    m_ios_12_0_isValid = false;
}

void OAIOs_devices::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOs_devices::fromJsonObject(QJsonObject json) {

    m_android_7_0_isValid = ::OpenAPI::fromJsonValue(m_android_7_0, json[QString("android 7.0")]);
    m_android_7_0_isSet = !json[QString("android 7.0")].isNull() && m_android_7_0_isValid;

    m_ios_12_0_isValid = ::OpenAPI::fromJsonValue(m_ios_12_0, json[QString("ios 12.0")]);
    m_ios_12_0_isSet = !json[QString("ios 12.0")].isNull() && m_ios_12_0_isValid;
}

QString OAIOs_devices::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOs_devices::asJsonObject() const {
    QJsonObject obj;
    if (m_android_7_0.isSet()) {
        obj.insert(QString("android 7.0"), ::OpenAPI::toJsonValue(m_android_7_0));
    }
    if (m_ios_12_0.isSet()) {
        obj.insert(QString("ios 12.0"), ::OpenAPI::toJsonValue(m_ios_12_0));
    }
    return obj;
}

OAIAndroid_7_0 OAIOs_devices::getAndroid70() const {
    return m_android_7_0;
}
void OAIOs_devices::setAndroid70(const OAIAndroid_7_0 &android_7_0) {
    m_android_7_0 = android_7_0;
    m_android_7_0_isSet = true;
}

bool OAIOs_devices::is_android_7_0_Set() const{
    return m_android_7_0_isSet;
}

bool OAIOs_devices::is_android_7_0_Valid() const{
    return m_android_7_0_isValid;
}

OAIIos_12_0 OAIOs_devices::getIos120() const {
    return m_ios_12_0;
}
void OAIOs_devices::setIos120(const OAIIos_12_0 &ios_12_0) {
    m_ios_12_0 = ios_12_0;
    m_ios_12_0_isSet = true;
}

bool OAIOs_devices::is_ios_12_0_Set() const{
    return m_ios_12_0_isSet;
}

bool OAIOs_devices::is_ios_12_0_Valid() const{
    return m_ios_12_0_isValid;
}

bool OAIOs_devices::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_android_7_0.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_ios_12_0.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOs_devices::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
