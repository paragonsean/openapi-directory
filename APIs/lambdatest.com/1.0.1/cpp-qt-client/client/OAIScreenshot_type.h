/**
 * LambdaTest Screenshots API Documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIScreenshot_type.h
 *
 * 
 */

#ifndef OAIScreenshot_type_H
#define OAIScreenshot_type_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIScreenshot_type : public OAIObject {
public:
    OAIScreenshot_type();
    OAIScreenshot_type(QString json);
    ~OAIScreenshot_type() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getActivityId() const;
    void setActivityId(const QString &activity_id);
    bool is_activity_id_Set() const;
    bool is_activity_id_Valid() const;

    QString getBrowser() const;
    void setBrowser(const QString &browser);
    bool is_browser_Set() const;
    bool is_browser_Valid() const;

    QString getBrowserVersion() const;
    void setBrowserVersion(const QString &browser_version);
    bool is_browser_version_Set() const;
    bool is_browser_version_Valid() const;

    QString getOs() const;
    void setOs(const QString &os);
    bool is_os_Set() const;
    bool is_os_Valid() const;

    QString getResolution() const;
    void setResolution(const QString &resolution);
    bool is_resolution_Set() const;
    bool is_resolution_Valid() const;

    QString getScreenshotUrl() const;
    void setScreenshotUrl(const QString &screenshot_url);
    bool is_screenshot_url_Set() const;
    bool is_screenshot_url_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getThumbnailUrl() const;
    void setThumbnailUrl(const QString &thumbnail_url);
    bool is_thumbnail_url_Set() const;
    bool is_thumbnail_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_activity_id;
    bool m_activity_id_isSet;
    bool m_activity_id_isValid;

    QString m_browser;
    bool m_browser_isSet;
    bool m_browser_isValid;

    QString m_browser_version;
    bool m_browser_version_isSet;
    bool m_browser_version_isValid;

    QString m_os;
    bool m_os_isSet;
    bool m_os_isValid;

    QString m_resolution;
    bool m_resolution_isSet;
    bool m_resolution_isValid;

    QString m_screenshot_url;
    bool m_screenshot_url_isSet;
    bool m_screenshot_url_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_thumbnail_url;
    bool m_thumbnail_url_isSet;
    bool m_thumbnail_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIScreenshot_type)

#endif // OAIScreenshot_type_H
