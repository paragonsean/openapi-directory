/*
 * Shutterstock API Explorer
 * The Shutterstock API provides access to Shutterstock's library of media, as well as information about customers' accounts and the contributors that provide the media.
 *
 * The version of the OpenAPI document: 1.1.32
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.DownloadHistoryDataList;
import org.openapitools.client.model.EditorialCategoryResults;
import org.openapitools.client.model.EditorialContent;
import org.openapitools.client.model.EditorialContentDataList;
import org.openapitools.client.model.EditorialImageCategoryResults;
import org.openapitools.client.model.EditorialImageContentDataList;
import org.openapitools.client.model.EditorialImageLivefeed;
import org.openapitools.client.model.EditorialImageLivefeedList;
import org.openapitools.client.model.EditorialLivefeed;
import org.openapitools.client.model.EditorialLivefeedList;
import org.openapitools.client.model.EditorialSearchResults;
import org.openapitools.client.model.EditorialUpdatedResults;
import org.openapitools.client.model.LicenseEditorialContentRequest;
import org.openapitools.client.model.LicenseEditorialContentResults;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for EditorialImagesApi
 */
@Disabled
public class EditorialImagesApiTest {

    private final EditorialImagesApi api = new EditorialImagesApi();

    /**
     * (Deprecated) List editorial categories
     *
     * Deprecated; use &#x60;GET /v2/editorial/images/categories&#x60; instead. This endpoint lists the categories that editorial images can belong to, which are separate from the categories that other types of assets can belong to.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getEditorialCategoriesTest() throws ApiException {
        EditorialCategoryResults response = api.getEditorialCategories();
        // TODO: test validations
    }

    /**
     * Get editorial content details
     *
     * This endpoint shows information about an editorial image, including a URL to a preview image and the sizes that it is available in.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getEditorialImageTest() throws ApiException {
        String id = null;
        String country = null;
        EditorialContent response = api.getEditorialImage(id, country);
        // TODO: test validations
    }

    /**
     * List editorial image licenses
     *
     * This endpoint lists existing editorial image licenses.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getEditorialImageLicenseListTest() throws ApiException {
        String imageId = null;
        String license = null;
        Integer page = null;
        Integer perPage = null;
        String sort = null;
        String username = null;
        OffsetDateTime startDate = null;
        OffsetDateTime endDate = null;
        String downloadAvailability = null;
        Boolean teamHistory = null;
        DownloadHistoryDataList response = api.getEditorialImageLicenseList(imageId, license, page, perPage, sort, username, startDate, endDate, downloadAvailability, teamHistory);
        // TODO: test validations
    }

    /**
     * Get editorial livefeed
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getEditorialImageLivefeedTest() throws ApiException {
        String id = null;
        String country = null;
        EditorialImageLivefeed response = api.getEditorialImageLivefeed(id, country);
        // TODO: test validations
    }

    /**
     * Get editorial livefeed items
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getEditorialImageLivefeedItemsTest() throws ApiException {
        String id = null;
        String country = null;
        EditorialImageContentDataList response = api.getEditorialImageLivefeedItems(id, country);
        // TODO: test validations
    }

    /**
     * Get editorial livefeed list
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getEditorialImageLivefeedListTest() throws ApiException {
        String country = null;
        Integer page = null;
        Integer perPage = null;
        EditorialImageLivefeedList response = api.getEditorialImageLivefeedList(country, page, perPage);
        // TODO: test validations
    }

    /**
     * (Deprecated) Get editorial livefeed
     *
     * Deprecated: use &#x60;GET /v2/editorial/images/livefeeds/{id}&#x60; instead to get an editorial livefeed.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getEditorialLivefeedTest() throws ApiException {
        String id = null;
        String country = null;
        EditorialLivefeed response = api.getEditorialLivefeed(id, country);
        // TODO: test validations
    }

    /**
     * (Deprecated) Get editorial livefeed items
     *
     * Deprecated; use &#x60;GET /v2/editorial/images/livefeeds/{id}/items&#x60; instead to get editorial livefeed items.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getEditorialLivefeedItemsTest() throws ApiException {
        String id = null;
        String country = null;
        EditorialContentDataList response = api.getEditorialLivefeedItems(id, country);
        // TODO: test validations
    }

    /**
     * (Deprecated) Get editorial livefeed list
     *
     * Deprecated; use &#x60;GET /v2/editorial/images/livefeeds&#x60; instead to get a list of editorial livefeeds.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getEditorialLivefeedListTest() throws ApiException {
        String country = null;
        Integer page = null;
        Integer perPage = null;
        EditorialLivefeedList response = api.getEditorialLivefeedList(country, page, perPage);
        // TODO: test validations
    }

    /**
     * (Deprecated) List updated content
     *
     * Deprecated; use &#x60;GET /v2/editorial/images/updated&#x60; instead to get recently updated items.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getUpdatedEditorialImageTest() throws ApiException {
        String type = null;
        OffsetDateTime dateUpdatedStart = null;
        OffsetDateTime dateUpdatedEnd = null;
        String country = null;
        LocalDate dateTakenStart = null;
        LocalDate dateTakenEnd = null;
        String cursor = null;
        String sort = null;
        List<String> supplierCode = null;
        Integer perPage = null;
        EditorialUpdatedResults response = api.getUpdatedEditorialImage(type, dateUpdatedStart, dateUpdatedEnd, country, dateTakenStart, dateTakenEnd, cursor, sort, supplierCode, perPage);
        // TODO: test validations
    }

    /**
     * List updated content
     *
     * This endpoint lists editorial images that have been updated in the specified time period to update content management systems (CMS) or digital asset management (DAM) systems. In most cases, use the date_updated_start and date_updated_end parameters to specify a range updates based on when the updates happened. You can also use the date_taken_start and date_taken_end parameters to specify a range of updates based on when the image was taken.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getUpdatedEditorialImagesTest() throws ApiException {
        String type = null;
        OffsetDateTime dateUpdatedStart = null;
        OffsetDateTime dateUpdatedEnd = null;
        String country = null;
        LocalDate dateTakenStart = null;
        LocalDate dateTakenEnd = null;
        String cursor = null;
        String sort = null;
        List<String> supplierCode = null;
        Integer perPage = null;
        EditorialUpdatedResults response = api.getUpdatedEditorialImages(type, dateUpdatedStart, dateUpdatedEnd, country, dateTakenStart, dateTakenEnd, cursor, sort, supplierCode, perPage);
        // TODO: test validations
    }

    /**
     * (Deprecated) License editorial content
     *
     * Deprecated; use &#x60;POST /v2/editorial/images/licenses&#x60; instead to get licenses for one or more editorial images. You must specify the country and one or more editorial images to license. The download links in the response are valid for 8 hours.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void licenseEditorialImageTest() throws ApiException {
        LicenseEditorialContentRequest licenseEditorialContentRequest = null;
        LicenseEditorialContentResults response = api.licenseEditorialImage(licenseEditorialContentRequest);
        // TODO: test validations
    }

    /**
     * License editorial content
     *
     * This endpoint gets licenses for one or more editorial images. You must specify the country and one or more editorial images to license. The download links in the response are valid for 8 hours.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void licenseEditorialImagesTest() throws ApiException {
        LicenseEditorialContentRequest licenseEditorialContentRequest = null;
        LicenseEditorialContentResults response = api.licenseEditorialImages(licenseEditorialContentRequest);
        // TODO: test validations
    }

    /**
     * List editorial categories
     *
     * This endpoint lists the categories that editorial images can belong to, which are separate from the categories that other types of assets can belong to.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listEditorialImageCategoriesTest() throws ApiException {
        EditorialImageCategoryResults response = api.listEditorialImageCategories();
        // TODO: test validations
    }

    /**
     * (Deprecated) Search editorial content
     *
     * Deprecated; use &#x60;GET /v2/editorial/images/search&#x60; instead to search for editorial images.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void searchEditorialTest() throws ApiException {
        String country = null;
        String query = null;
        String sort = null;
        String category = null;
        List<String> supplierCode = null;
        LocalDate dateStart = null;
        LocalDate dateEnd = null;
        Integer perPage = null;
        String cursor = null;
        EditorialSearchResults response = api.searchEditorial(country, query, sort, category, supplierCode, dateStart, dateEnd, perPage, cursor);
        // TODO: test validations
    }

    /**
     * Search editorial images
     *
     * This endpoint searches for editorial images. If you specify more than one search parameter, the API uses an AND condition. For example, if you set the &#x60;category&#x60; parameter to \&quot;Alone,Performing\&quot; and also specify a &#x60;query&#x60; parameter, the results include only images that match the query and are in both the Alone and Performing categories. You can also filter search terms out in the &#x60;query&#x60; parameter by prefixing the term with NOT.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void searchEditorialImagesTest() throws ApiException {
        String country = null;
        String query = null;
        String sort = null;
        String category = null;
        List<String> supplierCode = null;
        LocalDate dateStart = null;
        LocalDate dateEnd = null;
        Integer perPage = null;
        String cursor = null;
        EditorialSearchResults response = api.searchEditorialImages(country, query, sort, category, supplierCode, dateStart, dateEnd, perPage, cursor);
        // TODO: test validations
    }

    /**
     * (Deprecated) Get editorial content details
     *
     * Deprecated; use &#x60;GET /v2/editorial/images/{id}&#x60; instead to show information about an editorial image, including a URL to a preview image and the sizes that it is available in.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v2EditorialIdGetTest() throws ApiException {
        String id = null;
        String country = null;
        String searchId = null;
        EditorialContent response = api.v2EditorialIdGet(id, country, searchId);
        // TODO: test validations
    }

}
