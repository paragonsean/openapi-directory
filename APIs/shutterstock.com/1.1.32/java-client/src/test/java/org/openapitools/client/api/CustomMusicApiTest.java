/*
 * Shutterstock API Explorer
 * The Shutterstock API provides access to Shutterstock's library of media, as well as information about customers' accounts and the contributors that provide the media.
 *
 * The version of the OpenAPI document: 1.1.32
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AudioRendersListResults;
import java.math.BigDecimal;
import org.openapitools.client.model.CreateAudioRendersRequest;
import org.openapitools.client.model.DescriptorsListResult;
import org.openapitools.client.model.InstrumentsListResult;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CustomMusicApi
 */
@Disabled
public class CustomMusicApiTest {

    private final CustomMusicApi api = new CustomMusicApi();

    /**
     * Create rendered audio
     *
     * This endpoint creates rendered audio from timeline data. It returns a render ID that you can use to download the finished audio when it is ready. The render ID is valid for up to 48 hours.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createAudioRendersTest() throws ApiException {
        CreateAudioRendersRequest createAudioRendersRequest = null;
        AudioRendersListResults response = api.createAudioRenders(createAudioRendersRequest);
        // TODO: test validations
    }

    /**
     * Get details about audio renders
     *
     * This endpoint shows the status of one or more audio renders, including download links for completed audio.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void fetchRendersTest() throws ApiException {
        List<String> id = null;
        AudioRendersListResults response = api.fetchRenders(id);
        // TODO: test validations
    }

    /**
     * List computer audio descriptors
     *
     * This endpoint lists the descriptors that you can use in the audio regions in an audio render.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listCustomDescriptorsTest() throws ApiException {
        BigDecimal renderSpeedOver = null;
        String bandId = null;
        String bandName = null;
        Integer page = null;
        Integer perPage = null;
        List<String> id = null;
        String instrumentName = null;
        String instrumentId = null;
        BigDecimal tempo = null;
        BigDecimal tempoTo = null;
        BigDecimal tempoFrom = null;
        String name = null;
        String tag = null;
        DescriptorsListResult response = api.listCustomDescriptors(renderSpeedOver, bandId, bandName, page, perPage, id, instrumentName, instrumentId, tempo, tempoTo, tempoFrom, name, tag);
        // TODO: test validations
    }

    /**
     * List computer audio instruments
     *
     * This endpoint lists the instruments that you can include in computer audio. If you specify more than one search parameter, the API uses an AND condition.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listCustomInstrumentsTest() throws ApiException {
        List<String> id = null;
        Integer perPage = null;
        Integer page = null;
        String name = null;
        String tag = null;
        InstrumentsListResult response = api.listCustomInstruments(id, perPage, page, name, tag);
        // TODO: test validations
    }

}
