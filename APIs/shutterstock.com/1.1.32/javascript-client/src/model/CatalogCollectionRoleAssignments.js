/**
 * Shutterstock API Explorer
 * The Shutterstock API provides access to Shutterstock's library of media, as well as information about customers' accounts and the contributors that provide the media.
 *
 * The version of the OpenAPI document: 1.1.32
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CatalogCollectionRoleAssignmentsRoles from './CatalogCollectionRoleAssignmentsRoles';

/**
 * The CatalogCollectionRoleAssignments model module.
 * @module model/CatalogCollectionRoleAssignments
 * @version 1.1.32
 */
class CatalogCollectionRoleAssignments {
    /**
     * Constructs a new <code>CatalogCollectionRoleAssignments</code>.
     * List of role assignments for a catalog collection
     * @alias module:model/CatalogCollectionRoleAssignments
     * @param collectionId {String} 
     * @param roles {module:model/CatalogCollectionRoleAssignmentsRoles} 
     */
    constructor(collectionId, roles) { 
        
        CatalogCollectionRoleAssignments.initialize(this, collectionId, roles);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, collectionId, roles) { 
        obj['collection_id'] = collectionId;
        obj['roles'] = roles;
    }

    /**
     * Constructs a <code>CatalogCollectionRoleAssignments</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CatalogCollectionRoleAssignments} obj Optional instance to populate.
     * @return {module:model/CatalogCollectionRoleAssignments} The populated <code>CatalogCollectionRoleAssignments</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CatalogCollectionRoleAssignments();

            if (data.hasOwnProperty('collection_id')) {
                obj['collection_id'] = ApiClient.convertToType(data['collection_id'], 'String');
            }
            if (data.hasOwnProperty('roles')) {
                obj['roles'] = CatalogCollectionRoleAssignmentsRoles.constructFromObject(data['roles']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CatalogCollectionRoleAssignments</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CatalogCollectionRoleAssignments</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CatalogCollectionRoleAssignments.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['collection_id'] && !(typeof data['collection_id'] === 'string' || data['collection_id'] instanceof String)) {
            throw new Error("Expected the field `collection_id` to be a primitive type in the JSON string but got " + data['collection_id']);
        }
        // validate the optional field `roles`
        if (data['roles']) { // data not null
          CatalogCollectionRoleAssignmentsRoles.validateJSON(data['roles']);
        }

        return true;
    }


}

CatalogCollectionRoleAssignments.RequiredProperties = ["collection_id", "roles"];

/**
 * @member {String} collection_id
 */
CatalogCollectionRoleAssignments.prototype['collection_id'] = undefined;

/**
 * @member {module:model/CatalogCollectionRoleAssignmentsRoles} roles
 */
CatalogCollectionRoleAssignments.prototype['roles'] = undefined;






export default CatalogCollectionRoleAssignments;

