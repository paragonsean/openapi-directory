/**
 * Shutterstock API Explorer
 * The Shutterstock API provides access to Shutterstock's library of media, as well as information about customers' accounts and the contributors that provide the media.
 *
 * The version of the OpenAPI document: 1.1.32
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import InsightsLabelPerformanceInner from './InsightsLabelPerformanceInner';

/**
 * The Insights model module.
 * @module model/Insights
 * @version 1.1.32
 */
class Insights {
    /**
     * Constructs a new <code>Insights</code>.
     * AI-powered insights about an asset, based on the specified audience and objective
     * @alias module:model/Insights
     * @param labelPerformance {Array.<module:model/InsightsLabelPerformanceInner>} How effective the AI thinks an asset in the category is for the specified audience and objective, expressed as a percentile compared to other images
     */
    constructor(labelPerformance) { 
        
        Insights.initialize(this, labelPerformance);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, labelPerformance) { 
        obj['label_performance'] = labelPerformance;
    }

    /**
     * Constructs a <code>Insights</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Insights} obj Optional instance to populate.
     * @return {module:model/Insights} The populated <code>Insights</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Insights();

            if (data.hasOwnProperty('label_performance')) {
                obj['label_performance'] = ApiClient.convertToType(data['label_performance'], [InsightsLabelPerformanceInner]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Insights</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Insights</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Insights.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['label_performance']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['label_performance'])) {
                throw new Error("Expected the field `label_performance` to be an array in the JSON data but got " + data['label_performance']);
            }
            // validate the optional field `label_performance` (array)
            for (const item of data['label_performance']) {
                InsightsLabelPerformanceInner.validateJSON(item);
            };
        }

        return true;
    }


}

Insights.RequiredProperties = ["label_performance"];

/**
 * How effective the AI thinks an asset in the category is for the specified audience and objective, expressed as a percentile compared to other images
 * @member {Array.<module:model/InsightsLabelPerformanceInner>} label_performance
 */
Insights.prototype['label_performance'] = undefined;






export default Insights;

