/**
 * Shutterstock API Explorer
 * The Shutterstock API provides access to Shutterstock's library of media, as well as information about customers' accounts and the contributors that provide the media.
 *
 * The version of the OpenAPI document: 1.1.32
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Allotment model module.
 * @module model/Allotment
 * @version 1.1.32
 */
class Allotment {
    /**
     * Constructs a new <code>Allotment</code>.
     * An allotment of credits as part of a subscription
     * @alias module:model/Allotment
     */
    constructor() { 
        
        Allotment.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Allotment</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Allotment} obj Optional instance to populate.
     * @return {module:model/Allotment} The populated <code>Allotment</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Allotment();

            if (data.hasOwnProperty('downloads_left')) {
                obj['downloads_left'] = ApiClient.convertToType(data['downloads_left'], 'Number');
            }
            if (data.hasOwnProperty('downloads_limit')) {
                obj['downloads_limit'] = ApiClient.convertToType(data['downloads_limit'], 'Number');
            }
            if (data.hasOwnProperty('end_time')) {
                obj['end_time'] = ApiClient.convertToType(data['end_time'], 'Date');
            }
            if (data.hasOwnProperty('start_time')) {
                obj['start_time'] = ApiClient.convertToType(data['start_time'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Allotment</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Allotment</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * Number of credits remaining in the subscription
 * @member {Number} downloads_left
 */
Allotment.prototype['downloads_left'] = undefined;

/**
 * Total number of credits available to this subscription
 * @member {Number} downloads_limit
 */
Allotment.prototype['downloads_limit'] = undefined;

/**
 * Date the subscription ends
 * @member {Date} end_time
 */
Allotment.prototype['end_time'] = undefined;

/**
 * Date the subscription started
 * @member {Date} start_time
 */
Allotment.prototype['start_time'] = undefined;






export default Allotment;

