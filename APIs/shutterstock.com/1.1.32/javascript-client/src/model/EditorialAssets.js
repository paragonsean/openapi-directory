/**
 * Shutterstock API Explorer
 * The Shutterstock API provides access to Shutterstock's library of media, as well as information about customers' accounts and the contributors that provide the media.
 *
 * The version of the OpenAPI document: 1.1.32
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ImageSizeDetails from './ImageSizeDetails';
import Thumbnail from './Thumbnail';

/**
 * The EditorialAssets model module.
 * @module model/EditorialAssets
 * @version 1.1.32
 */
class EditorialAssets {
    /**
     * Constructs a new <code>EditorialAssets</code>.
     * Asset information, including size and thumbnail URLs
     * @alias module:model/EditorialAssets
     */
    constructor() { 
        
        EditorialAssets.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>EditorialAssets</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EditorialAssets} obj Optional instance to populate.
     * @return {module:model/EditorialAssets} The populated <code>EditorialAssets</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EditorialAssets();

            if (data.hasOwnProperty('medium_jpg')) {
                obj['medium_jpg'] = ImageSizeDetails.constructFromObject(data['medium_jpg']);
            }
            if (data.hasOwnProperty('original')) {
                obj['original'] = ImageSizeDetails.constructFromObject(data['original']);
            }
            if (data.hasOwnProperty('small_jpg')) {
                obj['small_jpg'] = ImageSizeDetails.constructFromObject(data['small_jpg']);
            }
            if (data.hasOwnProperty('thumb_170')) {
                obj['thumb_170'] = Thumbnail.constructFromObject(data['thumb_170']);
            }
            if (data.hasOwnProperty('thumb_220')) {
                obj['thumb_220'] = Thumbnail.constructFromObject(data['thumb_220']);
            }
            if (data.hasOwnProperty('watermark_1500')) {
                obj['watermark_1500'] = Thumbnail.constructFromObject(data['watermark_1500']);
            }
            if (data.hasOwnProperty('watermark_450')) {
                obj['watermark_450'] = Thumbnail.constructFromObject(data['watermark_450']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EditorialAssets</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EditorialAssets</code>.
     */
    static validateJSON(data) {
        // validate the optional field `medium_jpg`
        if (data['medium_jpg']) { // data not null
          ImageSizeDetails.validateJSON(data['medium_jpg']);
        }
        // validate the optional field `original`
        if (data['original']) { // data not null
          ImageSizeDetails.validateJSON(data['original']);
        }
        // validate the optional field `small_jpg`
        if (data['small_jpg']) { // data not null
          ImageSizeDetails.validateJSON(data['small_jpg']);
        }
        // validate the optional field `thumb_170`
        if (data['thumb_170']) { // data not null
          Thumbnail.validateJSON(data['thumb_170']);
        }
        // validate the optional field `thumb_220`
        if (data['thumb_220']) { // data not null
          Thumbnail.validateJSON(data['thumb_220']);
        }
        // validate the optional field `watermark_1500`
        if (data['watermark_1500']) { // data not null
          Thumbnail.validateJSON(data['watermark_1500']);
        }
        // validate the optional field `watermark_450`
        if (data['watermark_450']) { // data not null
          Thumbnail.validateJSON(data['watermark_450']);
        }

        return true;
    }


}



/**
 * @member {module:model/ImageSizeDetails} medium_jpg
 */
EditorialAssets.prototype['medium_jpg'] = undefined;

/**
 * @member {module:model/ImageSizeDetails} original
 */
EditorialAssets.prototype['original'] = undefined;

/**
 * @member {module:model/ImageSizeDetails} small_jpg
 */
EditorialAssets.prototype['small_jpg'] = undefined;

/**
 * @member {module:model/Thumbnail} thumb_170
 */
EditorialAssets.prototype['thumb_170'] = undefined;

/**
 * @member {module:model/Thumbnail} thumb_220
 */
EditorialAssets.prototype['thumb_220'] = undefined;

/**
 * @member {module:model/Thumbnail} watermark_1500
 */
EditorialAssets.prototype['watermark_1500'] = undefined;

/**
 * @member {module:model/Thumbnail} watermark_450
 */
EditorialAssets.prototype['watermark_450'] = undefined;






export default EditorialAssets;

