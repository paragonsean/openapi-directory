/**
 * Shutterstock API Explorer
 * The Shutterstock API provides access to Shutterstock's library of media, as well as information about customers' accounts and the contributors that provide the media.
 *
 * The version of the OpenAPI document: 1.1.32
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AudioRenderTimeline from './AudioRenderTimeline';

/**
 * The CreateAudioRender model module.
 * @module model/CreateAudioRender
 * @version 1.1.32
 */
class CreateAudioRender {
    /**
     * Constructs a new <code>CreateAudioRender</code>.
     * Data required to create an audio render
     * @alias module:model/CreateAudioRender
     * @param filename {String} A user-specified file name suggestion; this file name becomes the filename property of the Content-Disposition header when the user downloads the rendered audio file
     * @param preset {module:model/CreateAudioRender.PresetEnum} File format, such as MP3 file, combined WAV file, or individual track WAV files
     * @param timeline {module:model/AudioRenderTimeline} 
     */
    constructor(filename, preset, timeline) { 
        
        CreateAudioRender.initialize(this, filename, preset, timeline);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, filename, preset, timeline) { 
        obj['filename'] = filename;
        obj['preset'] = preset;
        obj['timeline'] = timeline;
    }

    /**
     * Constructs a <code>CreateAudioRender</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateAudioRender} obj Optional instance to populate.
     * @return {module:model/CreateAudioRender} The populated <code>CreateAudioRender</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateAudioRender();

            if (data.hasOwnProperty('filename')) {
                obj['filename'] = ApiClient.convertToType(data['filename'], 'String');
            }
            if (data.hasOwnProperty('preset')) {
                obj['preset'] = ApiClient.convertToType(data['preset'], 'String');
            }
            if (data.hasOwnProperty('timeline')) {
                obj['timeline'] = AudioRenderTimeline.constructFromObject(data['timeline']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateAudioRender</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateAudioRender</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateAudioRender.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['filename'] && !(typeof data['filename'] === 'string' || data['filename'] instanceof String)) {
            throw new Error("Expected the field `filename` to be a primitive type in the JSON string but got " + data['filename']);
        }
        // ensure the json data is a string
        if (data['preset'] && !(typeof data['preset'] === 'string' || data['preset'] instanceof String)) {
            throw new Error("Expected the field `preset` to be a primitive type in the JSON string but got " + data['preset']);
        }
        // validate the optional field `timeline`
        if (data['timeline']) { // data not null
          AudioRenderTimeline.validateJSON(data['timeline']);
        }

        return true;
    }


}

CreateAudioRender.RequiredProperties = ["filename", "preset", "timeline"];

/**
 * A user-specified file name suggestion; this file name becomes the filename property of the Content-Disposition header when the user downloads the rendered audio file
 * @member {String} filename
 */
CreateAudioRender.prototype['filename'] = undefined;

/**
 * File format, such as MP3 file, combined WAV file, or individual track WAV files
 * @member {module:model/CreateAudioRender.PresetEnum} preset
 */
CreateAudioRender.prototype['preset'] = undefined;

/**
 * @member {module:model/AudioRenderTimeline} timeline
 */
CreateAudioRender.prototype['timeline'] = undefined;





/**
 * Allowed values for the <code>preset</code> property.
 * @enum {String}
 * @readonly
 */
CreateAudioRender['PresetEnum'] = {

    /**
     * value: "MASTER_MP3"
     * @const
     */
    "MASTER_MP3": "MASTER_MP3",

    /**
     * value: "MASTER_WAV"
     * @const
     */
    "MASTER_WAV": "MASTER_WAV",

    /**
     * value: "STEMS_WAV"
     * @const
     */
    "STEMS_WAV": "STEMS_WAV"
};



export default CreateAudioRender;

