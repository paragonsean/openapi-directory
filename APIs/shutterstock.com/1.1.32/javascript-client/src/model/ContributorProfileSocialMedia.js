/**
 * Shutterstock API Explorer
 * The Shutterstock API provides access to Shutterstock's library of media, as well as information about customers' accounts and the contributors that provide the media.
 *
 * The version of the OpenAPI document: 1.1.32
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ContributorProfileSocialMedia model module.
 * @module model/ContributorProfileSocialMedia
 * @version 1.1.32
 */
class ContributorProfileSocialMedia {
    /**
     * Constructs a new <code>ContributorProfileSocialMedia</code>.
     * Contributor profile social media links
     * @alias module:model/ContributorProfileSocialMedia
     */
    constructor() { 
        
        ContributorProfileSocialMedia.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ContributorProfileSocialMedia</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ContributorProfileSocialMedia} obj Optional instance to populate.
     * @return {module:model/ContributorProfileSocialMedia} The populated <code>ContributorProfileSocialMedia</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ContributorProfileSocialMedia();

            if (data.hasOwnProperty('facebook')) {
                obj['facebook'] = ApiClient.convertToType(data['facebook'], 'String');
            }
            if (data.hasOwnProperty('google_plus')) {
                obj['google_plus'] = ApiClient.convertToType(data['google_plus'], 'String');
            }
            if (data.hasOwnProperty('linkedin')) {
                obj['linkedin'] = ApiClient.convertToType(data['linkedin'], 'String');
            }
            if (data.hasOwnProperty('pinterest')) {
                obj['pinterest'] = ApiClient.convertToType(data['pinterest'], 'String');
            }
            if (data.hasOwnProperty('tumblr')) {
                obj['tumblr'] = ApiClient.convertToType(data['tumblr'], 'String');
            }
            if (data.hasOwnProperty('twitter')) {
                obj['twitter'] = ApiClient.convertToType(data['twitter'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ContributorProfileSocialMedia</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ContributorProfileSocialMedia</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['facebook'] && !(typeof data['facebook'] === 'string' || data['facebook'] instanceof String)) {
            throw new Error("Expected the field `facebook` to be a primitive type in the JSON string but got " + data['facebook']);
        }
        // ensure the json data is a string
        if (data['google_plus'] && !(typeof data['google_plus'] === 'string' || data['google_plus'] instanceof String)) {
            throw new Error("Expected the field `google_plus` to be a primitive type in the JSON string but got " + data['google_plus']);
        }
        // ensure the json data is a string
        if (data['linkedin'] && !(typeof data['linkedin'] === 'string' || data['linkedin'] instanceof String)) {
            throw new Error("Expected the field `linkedin` to be a primitive type in the JSON string but got " + data['linkedin']);
        }
        // ensure the json data is a string
        if (data['pinterest'] && !(typeof data['pinterest'] === 'string' || data['pinterest'] instanceof String)) {
            throw new Error("Expected the field `pinterest` to be a primitive type in the JSON string but got " + data['pinterest']);
        }
        // ensure the json data is a string
        if (data['tumblr'] && !(typeof data['tumblr'] === 'string' || data['tumblr'] instanceof String)) {
            throw new Error("Expected the field `tumblr` to be a primitive type in the JSON string but got " + data['tumblr']);
        }
        // ensure the json data is a string
        if (data['twitter'] && !(typeof data['twitter'] === 'string' || data['twitter'] instanceof String)) {
            throw new Error("Expected the field `twitter` to be a primitive type in the JSON string but got " + data['twitter']);
        }

        return true;
    }


}



/**
 * Facebook link for contributor
 * @member {String} facebook
 */
ContributorProfileSocialMedia.prototype['facebook'] = undefined;

/**
 * Google+ link for contributor
 * @member {String} google_plus
 */
ContributorProfileSocialMedia.prototype['google_plus'] = undefined;

/**
 * LinkedIn link for contributor
 * @member {String} linkedin
 */
ContributorProfileSocialMedia.prototype['linkedin'] = undefined;

/**
 * Pinterest page for contributor
 * @member {String} pinterest
 */
ContributorProfileSocialMedia.prototype['pinterest'] = undefined;

/**
 * Tumblr link for contributor
 * @member {String} tumblr
 */
ContributorProfileSocialMedia.prototype['tumblr'] = undefined;

/**
 * Twitter link for contributor
 * @member {String} twitter
 */
ContributorProfileSocialMedia.prototype['twitter'] = undefined;






export default ContributorProfileSocialMedia;

