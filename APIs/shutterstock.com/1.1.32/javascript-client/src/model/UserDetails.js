/**
 * Shutterstock API Explorer
 * The Shutterstock API provides access to Shutterstock's library of media, as well as information about customers' accounts and the contributors that provide the media.
 *
 * The version of the OpenAPI document: 1.1.32
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The UserDetails model module.
 * @module model/UserDetails
 * @version 1.1.32
 */
class UserDetails {
    /**
     * Constructs a new <code>UserDetails</code>.
     * User details
     * @alias module:model/UserDetails
     */
    constructor() { 
        
        UserDetails.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UserDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UserDetails} obj Optional instance to populate.
     * @return {module:model/UserDetails} The populated <code>UserDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UserDetails();

            if (data.hasOwnProperty('contributor_id')) {
                obj['contributor_id'] = ApiClient.convertToType(data['contributor_id'], 'String');
            }
            if (data.hasOwnProperty('customer_id')) {
                obj['customer_id'] = ApiClient.convertToType(data['customer_id'], 'String');
            }
            if (data.hasOwnProperty('email')) {
                obj['email'] = ApiClient.convertToType(data['email'], 'String');
            }
            if (data.hasOwnProperty('first_name')) {
                obj['first_name'] = ApiClient.convertToType(data['first_name'], 'String');
            }
            if (data.hasOwnProperty('full_name')) {
                obj['full_name'] = ApiClient.convertToType(data['full_name'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('is_premier')) {
                obj['is_premier'] = ApiClient.convertToType(data['is_premier'], 'Boolean');
            }
            if (data.hasOwnProperty('is_premier_parent')) {
                obj['is_premier_parent'] = ApiClient.convertToType(data['is_premier_parent'], 'Boolean');
            }
            if (data.hasOwnProperty('language')) {
                obj['language'] = ApiClient.convertToType(data['language'], 'String');
            }
            if (data.hasOwnProperty('last_name')) {
                obj['last_name'] = ApiClient.convertToType(data['last_name'], 'String');
            }
            if (data.hasOwnProperty('only_enhanced_license')) {
                obj['only_enhanced_license'] = ApiClient.convertToType(data['only_enhanced_license'], 'Boolean');
            }
            if (data.hasOwnProperty('only_sensitive_use')) {
                obj['only_sensitive_use'] = ApiClient.convertToType(data['only_sensitive_use'], 'Boolean');
            }
            if (data.hasOwnProperty('organization_id')) {
                obj['organization_id'] = ApiClient.convertToType(data['organization_id'], 'String');
            }
            if (data.hasOwnProperty('premier_permissions')) {
                obj['premier_permissions'] = ApiClient.convertToType(data['premier_permissions'], ['String']);
            }
            if (data.hasOwnProperty('username')) {
                obj['username'] = ApiClient.convertToType(data['username'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UserDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UserDetails</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['contributor_id'] && !(typeof data['contributor_id'] === 'string' || data['contributor_id'] instanceof String)) {
            throw new Error("Expected the field `contributor_id` to be a primitive type in the JSON string but got " + data['contributor_id']);
        }
        // ensure the json data is a string
        if (data['customer_id'] && !(typeof data['customer_id'] === 'string' || data['customer_id'] instanceof String)) {
            throw new Error("Expected the field `customer_id` to be a primitive type in the JSON string but got " + data['customer_id']);
        }
        // ensure the json data is a string
        if (data['email'] && !(typeof data['email'] === 'string' || data['email'] instanceof String)) {
            throw new Error("Expected the field `email` to be a primitive type in the JSON string but got " + data['email']);
        }
        // ensure the json data is a string
        if (data['first_name'] && !(typeof data['first_name'] === 'string' || data['first_name'] instanceof String)) {
            throw new Error("Expected the field `first_name` to be a primitive type in the JSON string but got " + data['first_name']);
        }
        // ensure the json data is a string
        if (data['full_name'] && !(typeof data['full_name'] === 'string' || data['full_name'] instanceof String)) {
            throw new Error("Expected the field `full_name` to be a primitive type in the JSON string but got " + data['full_name']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['language'] && !(typeof data['language'] === 'string' || data['language'] instanceof String)) {
            throw new Error("Expected the field `language` to be a primitive type in the JSON string but got " + data['language']);
        }
        // ensure the json data is a string
        if (data['last_name'] && !(typeof data['last_name'] === 'string' || data['last_name'] instanceof String)) {
            throw new Error("Expected the field `last_name` to be a primitive type in the JSON string but got " + data['last_name']);
        }
        // ensure the json data is a string
        if (data['organization_id'] && !(typeof data['organization_id'] === 'string' || data['organization_id'] instanceof String)) {
            throw new Error("Expected the field `organization_id` to be a primitive type in the JSON string but got " + data['organization_id']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['premier_permissions'])) {
            throw new Error("Expected the field `premier_permissions` to be an array in the JSON data but got " + data['premier_permissions']);
        }
        // ensure the json data is a string
        if (data['username'] && !(typeof data['username'] === 'string' || data['username'] instanceof String)) {
            throw new Error("Expected the field `username` to be a primitive type in the JSON string but got " + data['username']);
        }

        return true;
    }


}



/**
 * Unique internal identifier of the user, as a contributor
 * @member {String} contributor_id
 */
UserDetails.prototype['contributor_id'] = undefined;

/**
 * Unique internal identifier of the user, as a purchaser
 * @member {String} customer_id
 */
UserDetails.prototype['customer_id'] = undefined;

/**
 * Email address of the user
 * @member {String} email
 */
UserDetails.prototype['email'] = undefined;

/**
 * First name of the user
 * @member {String} first_name
 */
UserDetails.prototype['first_name'] = undefined;

/**
 * Full name including first, middle, and last name of the user
 * @member {String} full_name
 */
UserDetails.prototype['full_name'] = undefined;

/**
 * Unique internal identifier for the user, not tied to contributor or purchasing customer
 * @member {String} id
 */
UserDetails.prototype['id'] = undefined;

/**
 * True if the user has access to the Premier collection, false otherwise
 * @member {Boolean} is_premier
 */
UserDetails.prototype['is_premier'] = undefined;

/**
 * True if the user has access to the Premier collection and also has child users
 * @member {Boolean} is_premier_parent
 */
UserDetails.prototype['is_premier_parent'] = undefined;

/**
 * Main language of the user account
 * @member {String} language
 */
UserDetails.prototype['language'] = undefined;

/**
 * Last name of the user
 * @member {String} last_name
 */
UserDetails.prototype['last_name'] = undefined;

/**
 * True if the user has an enterprise license, false otherwise
 * @member {Boolean} only_enhanced_license
 */
UserDetails.prototype['only_enhanced_license'] = undefined;

/**
 * True if the user has access to sensitive use only, false otherwise
 * @member {Boolean} only_sensitive_use
 */
UserDetails.prototype['only_sensitive_use'] = undefined;

/**
 * Unique internal identifier for the user's organization, specific to Premier users
 * @member {String} organization_id
 */
UserDetails.prototype['organization_id'] = undefined;

/**
 * List of permissions allowed through the Premier client
 * @member {Array.<String>} premier_permissions
 */
UserDetails.prototype['premier_permissions'] = undefined;

/**
 * User name associated to the user
 * @member {String} username
 */
UserDetails.prototype['username'] = undefined;






export default UserDetails;

