/**
 * Shutterstock API Explorer
 * The Shutterstock API provides access to Shutterstock's library of media, as well as information about customers' accounts and the contributors that provide the media.
 *
 * The version of the OpenAPI document: 1.1.32
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DownloadHistoryRevshareDetails model module.
 * @module model/DownloadHistoryRevshareDetails
 * @version 1.1.32
 */
class DownloadHistoryRevshareDetails {
    /**
     * Constructs a new <code>DownloadHistoryRevshareDetails</code>.
     * Pricing information for revenue-sharing transactions
     * @alias module:model/DownloadHistoryRevshareDetails
     * @param purchaseAmount {String} The amount charged for the license
     * @param purchaseCurrency {String} The currency the amount was charged in
     */
    constructor(purchaseAmount, purchaseCurrency) { 
        
        DownloadHistoryRevshareDetails.initialize(this, purchaseAmount, purchaseCurrency);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, purchaseAmount, purchaseCurrency) { 
        obj['purchase_amount'] = purchaseAmount;
        obj['purchase_currency'] = purchaseCurrency;
    }

    /**
     * Constructs a <code>DownloadHistoryRevshareDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DownloadHistoryRevshareDetails} obj Optional instance to populate.
     * @return {module:model/DownloadHistoryRevshareDetails} The populated <code>DownloadHistoryRevshareDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DownloadHistoryRevshareDetails();

            if (data.hasOwnProperty('purchase_amount')) {
                obj['purchase_amount'] = ApiClient.convertToType(data['purchase_amount'], 'String');
            }
            if (data.hasOwnProperty('purchase_currency')) {
                obj['purchase_currency'] = ApiClient.convertToType(data['purchase_currency'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DownloadHistoryRevshareDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DownloadHistoryRevshareDetails</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of DownloadHistoryRevshareDetails.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['purchase_amount'] && !(typeof data['purchase_amount'] === 'string' || data['purchase_amount'] instanceof String)) {
            throw new Error("Expected the field `purchase_amount` to be a primitive type in the JSON string but got " + data['purchase_amount']);
        }
        // ensure the json data is a string
        if (data['purchase_currency'] && !(typeof data['purchase_currency'] === 'string' || data['purchase_currency'] instanceof String)) {
            throw new Error("Expected the field `purchase_currency` to be a primitive type in the JSON string but got " + data['purchase_currency']);
        }

        return true;
    }


}

DownloadHistoryRevshareDetails.RequiredProperties = ["purchase_amount", "purchase_currency"];

/**
 * The amount charged for the license
 * @member {String} purchase_amount
 */
DownloadHistoryRevshareDetails.prototype['purchase_amount'] = undefined;

/**
 * The currency the amount was charged in
 * @member {String} purchase_currency
 */
DownloadHistoryRevshareDetails.prototype['purchase_currency'] = undefined;






export default DownloadHistoryRevshareDetails;

