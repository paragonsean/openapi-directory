/**
 * Shutterstock API Explorer
 * The Shutterstock API provides access to Shutterstock's library of media, as well as information about customers' accounts and the contributors that provide the media.
 *
 * The version of the OpenAPI document: 1.1.32
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AudioRenderTimelineSpanTempoChanges model module.
 * @module model/AudioRenderTimelineSpanTempoChanges
 * @version 1.1.32
 */
class AudioRenderTimelineSpanTempoChanges {
    /**
     * Constructs a new <code>AudioRenderTimelineSpanTempoChanges</code>.
     * An inflection point in a tempo curve; the API creates the overall tempo by using a linear interpolation of the time between each tempo change
     * @alias module:model/AudioRenderTimelineSpanTempoChanges
     * @param tempo {Number} The tempo, in beats per minute, active at this time
     * @param time {Number} The time, in seconds, at which the tempo exists
     */
    constructor(tempo, time) { 
        
        AudioRenderTimelineSpanTempoChanges.initialize(this, tempo, time);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, tempo, time) { 
        obj['tempo'] = tempo;
        obj['time'] = time;
    }

    /**
     * Constructs a <code>AudioRenderTimelineSpanTempoChanges</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AudioRenderTimelineSpanTempoChanges} obj Optional instance to populate.
     * @return {module:model/AudioRenderTimelineSpanTempoChanges} The populated <code>AudioRenderTimelineSpanTempoChanges</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AudioRenderTimelineSpanTempoChanges();

            if (data.hasOwnProperty('tempo')) {
                obj['tempo'] = ApiClient.convertToType(data['tempo'], 'Number');
            }
            if (data.hasOwnProperty('time')) {
                obj['time'] = ApiClient.convertToType(data['time'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AudioRenderTimelineSpanTempoChanges</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AudioRenderTimelineSpanTempoChanges</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AudioRenderTimelineSpanTempoChanges.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }

        return true;
    }


}

AudioRenderTimelineSpanTempoChanges.RequiredProperties = ["tempo", "time"];

/**
 * The tempo, in beats per minute, active at this time
 * @member {Number} tempo
 */
AudioRenderTimelineSpanTempoChanges.prototype['tempo'] = undefined;

/**
 * The time, in seconds, at which the tempo exists
 * @member {Number} time
 */
AudioRenderTimelineSpanTempoChanges.prototype['time'] = undefined;






export default AudioRenderTimelineSpanTempoChanges;

