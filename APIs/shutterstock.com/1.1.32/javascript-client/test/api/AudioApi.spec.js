/**
 * Shutterstock API Explorer
 * The Shutterstock API provides access to Shutterstock's library of media, as well as information about customers' accounts and the contributors that provide the media.
 *
 * The version of the OpenAPI document: 1.1.32
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ShutterstockApiExplorer);
  }
}(this, function(expect, ShutterstockApiExplorer) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ShutterstockApiExplorer.AudioApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('AudioApi', function() {
    describe('addTrackCollectionItems', function() {
      it('should call addTrackCollectionItems successfully', function(done) {
        //uncomment below and update the code to test addTrackCollectionItems
        //instance.addTrackCollectionItems(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createTrackCollection', function() {
      it('should call createTrackCollection successfully', function(done) {
        //uncomment below and update the code to test createTrackCollection
        //instance.createTrackCollection(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteTrackCollection', function() {
      it('should call deleteTrackCollection successfully', function(done) {
        //uncomment below and update the code to test deleteTrackCollection
        //instance.deleteTrackCollection(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteTrackCollectionItems', function() {
      it('should call deleteTrackCollectionItems successfully', function(done) {
        //uncomment below and update the code to test deleteTrackCollectionItems
        //instance.deleteTrackCollectionItems(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('downloadTracks', function() {
      it('should call downloadTracks successfully', function(done) {
        //uncomment below and update the code to test downloadTracks
        //instance.downloadTracks(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTrack', function() {
      it('should call getTrack successfully', function(done) {
        //uncomment below and update the code to test getTrack
        //instance.getTrack(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTrackCollection', function() {
      it('should call getTrackCollection successfully', function(done) {
        //uncomment below and update the code to test getTrackCollection
        //instance.getTrackCollection(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTrackCollectionItems', function() {
      it('should call getTrackCollectionItems successfully', function(done) {
        //uncomment below and update the code to test getTrackCollectionItems
        //instance.getTrackCollectionItems(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTrackCollectionList', function() {
      it('should call getTrackCollectionList successfully', function(done) {
        //uncomment below and update the code to test getTrackCollectionList
        //instance.getTrackCollectionList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTrackLicenseList', function() {
      it('should call getTrackLicenseList successfully', function(done) {
        //uncomment below and update the code to test getTrackLicenseList
        //instance.getTrackLicenseList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTrackList', function() {
      it('should call getTrackList successfully', function(done) {
        //uncomment below and update the code to test getTrackList
        //instance.getTrackList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('licenseTrack', function() {
      it('should call licenseTrack successfully', function(done) {
        //uncomment below and update the code to test licenseTrack
        //instance.licenseTrack(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listGenres', function() {
      it('should call listGenres successfully', function(done) {
        //uncomment below and update the code to test listGenres
        //instance.listGenres(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listInstruments', function() {
      it('should call listInstruments successfully', function(done) {
        //uncomment below and update the code to test listInstruments
        //instance.listInstruments(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listMoods', function() {
      it('should call listMoods successfully', function(done) {
        //uncomment below and update the code to test listMoods
        //instance.listMoods(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('renameTrackCollection', function() {
      it('should call renameTrackCollection successfully', function(done) {
        //uncomment below and update the code to test renameTrackCollection
        //instance.renameTrackCollection(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('searchTracks', function() {
      it('should call searchTracks successfully', function(done) {
        //uncomment below and update the code to test searchTracks
        //instance.searchTracks(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
