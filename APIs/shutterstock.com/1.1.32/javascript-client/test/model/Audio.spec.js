/**
 * Shutterstock API Explorer
 * The Shutterstock API provides access to Shutterstock's library of media, as well as information about customers' accounts and the contributors that provide the media.
 *
 * The version of the OpenAPI document: 1.1.32
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ShutterstockApiExplorer);
  }
}(this, function(expect, ShutterstockApiExplorer) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ShutterstockApiExplorer.Audio();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Audio', function() {
    it('should create an instance of Audio', function() {
      // uncomment below and update the code to test Audio
      //var instance = new ShutterstockApiExplorer.Audio();
      //expect(instance).to.be.a(ShutterstockApiExplorer.Audio);
    });

    it('should have the property addedDate (base name: "added_date")', function() {
      // uncomment below and update the code to test the property addedDate
      //var instance = new ShutterstockApiExplorer.Audio();
      //expect(instance).to.be();
    });

    it('should have the property affiliateUrl (base name: "affiliate_url")', function() {
      // uncomment below and update the code to test the property affiliateUrl
      //var instance = new ShutterstockApiExplorer.Audio();
      //expect(instance).to.be();
    });

    it('should have the property album (base name: "album")', function() {
      // uncomment below and update the code to test the property album
      //var instance = new ShutterstockApiExplorer.Audio();
      //expect(instance).to.be();
    });

    it('should have the property artists (base name: "artists")', function() {
      // uncomment below and update the code to test the property artists
      //var instance = new ShutterstockApiExplorer.Audio();
      //expect(instance).to.be();
    });

    it('should have the property assets (base name: "assets")', function() {
      // uncomment below and update the code to test the property assets
      //var instance = new ShutterstockApiExplorer.Audio();
      //expect(instance).to.be();
    });

    it('should have the property bpm (base name: "bpm")', function() {
      // uncomment below and update the code to test the property bpm
      //var instance = new ShutterstockApiExplorer.Audio();
      //expect(instance).to.be();
    });

    it('should have the property contributor (base name: "contributor")', function() {
      // uncomment below and update the code to test the property contributor
      //var instance = new ShutterstockApiExplorer.Audio();
      //expect(instance).to.be();
    });

    it('should have the property deletedTime (base name: "deleted_time")', function() {
      // uncomment below and update the code to test the property deletedTime
      //var instance = new ShutterstockApiExplorer.Audio();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new ShutterstockApiExplorer.Audio();
      //expect(instance).to.be();
    });

    it('should have the property duration (base name: "duration")', function() {
      // uncomment below and update the code to test the property duration
      //var instance = new ShutterstockApiExplorer.Audio();
      //expect(instance).to.be();
    });

    it('should have the property genres (base name: "genres")', function() {
      // uncomment below and update the code to test the property genres
      //var instance = new ShutterstockApiExplorer.Audio();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new ShutterstockApiExplorer.Audio();
      //expect(instance).to.be();
    });

    it('should have the property instruments (base name: "instruments")', function() {
      // uncomment below and update the code to test the property instruments
      //var instance = new ShutterstockApiExplorer.Audio();
      //expect(instance).to.be();
    });

    it('should have the property isAdult (base name: "is_adult")', function() {
      // uncomment below and update the code to test the property isAdult
      //var instance = new ShutterstockApiExplorer.Audio();
      //expect(instance).to.be();
    });

    it('should have the property isInstrumental (base name: "is_instrumental")', function() {
      // uncomment below and update the code to test the property isInstrumental
      //var instance = new ShutterstockApiExplorer.Audio();
      //expect(instance).to.be();
    });

    it('should have the property isrc (base name: "isrc")', function() {
      // uncomment below and update the code to test the property isrc
      //var instance = new ShutterstockApiExplorer.Audio();
      //expect(instance).to.be();
    });

    it('should have the property keywords (base name: "keywords")', function() {
      // uncomment below and update the code to test the property keywords
      //var instance = new ShutterstockApiExplorer.Audio();
      //expect(instance).to.be();
    });

    it('should have the property language (base name: "language")', function() {
      // uncomment below and update the code to test the property language
      //var instance = new ShutterstockApiExplorer.Audio();
      //expect(instance).to.be();
    });

    it('should have the property lyrics (base name: "lyrics")', function() {
      // uncomment below and update the code to test the property lyrics
      //var instance = new ShutterstockApiExplorer.Audio();
      //expect(instance).to.be();
    });

    it('should have the property mediaType (base name: "media_type")', function() {
      // uncomment below and update the code to test the property mediaType
      //var instance = new ShutterstockApiExplorer.Audio();
      //expect(instance).to.be();
    });

    it('should have the property modelReleases (base name: "model_releases")', function() {
      // uncomment below and update the code to test the property modelReleases
      //var instance = new ShutterstockApiExplorer.Audio();
      //expect(instance).to.be();
    });

    it('should have the property moods (base name: "moods")', function() {
      // uncomment below and update the code to test the property moods
      //var instance = new ShutterstockApiExplorer.Audio();
      //expect(instance).to.be();
    });

    it('should have the property publishedTime (base name: "published_time")', function() {
      // uncomment below and update the code to test the property publishedTime
      //var instance = new ShutterstockApiExplorer.Audio();
      //expect(instance).to.be();
    });

    it('should have the property recordingVersion (base name: "recording_version")', function() {
      // uncomment below and update the code to test the property recordingVersion
      //var instance = new ShutterstockApiExplorer.Audio();
      //expect(instance).to.be();
    });

    it('should have the property releases (base name: "releases")', function() {
      // uncomment below and update the code to test the property releases
      //var instance = new ShutterstockApiExplorer.Audio();
      //expect(instance).to.be();
    });

    it('should have the property similarArtists (base name: "similar_artists")', function() {
      // uncomment below and update the code to test the property similarArtists
      //var instance = new ShutterstockApiExplorer.Audio();
      //expect(instance).to.be();
    });

    it('should have the property submittedTime (base name: "submitted_time")', function() {
      // uncomment below and update the code to test the property submittedTime
      //var instance = new ShutterstockApiExplorer.Audio();
      //expect(instance).to.be();
    });

    it('should have the property title (base name: "title")', function() {
      // uncomment below and update the code to test the property title
      //var instance = new ShutterstockApiExplorer.Audio();
      //expect(instance).to.be();
    });

    it('should have the property updatedTime (base name: "updated_time")', function() {
      // uncomment below and update the code to test the property updatedTime
      //var instance = new ShutterstockApiExplorer.Audio();
      //expect(instance).to.be();
    });

    it('should have the property url (base name: "url")', function() {
      // uncomment below and update the code to test the property url
      //var instance = new ShutterstockApiExplorer.Audio();
      //expect(instance).to.be();
    });

    it('should have the property vocalDescription (base name: "vocal_description")', function() {
      // uncomment below and update the code to test the property vocalDescription
      //var instance = new ShutterstockApiExplorer.Audio();
      //expect(instance).to.be();
    });

  });

}));
