/**
 * Shutterstock API Explorer
 * The Shutterstock API provides access to Shutterstock's library of media, as well as information about customers' accounts and the contributors that provide the media.
 *
 * The version of the OpenAPI document: 1.1.32
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ShutterstockApiExplorer);
  }
}(this, function(expect, ShutterstockApiExplorer) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ShutterstockApiExplorer.SearchImage();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('SearchImage', function() {
    it('should create an instance of SearchImage', function() {
      // uncomment below and update the code to test SearchImage
      //var instance = new ShutterstockApiExplorer.SearchImage();
      //expect(instance).to.be.a(ShutterstockApiExplorer.SearchImage);
    });

    it('should have the property addedDate (base name: "added_date")', function() {
      // uncomment below and update the code to test the property addedDate
      //var instance = new ShutterstockApiExplorer.SearchImage();
      //expect(instance).to.be();
    });

    it('should have the property addedDateEnd (base name: "added_date_end")', function() {
      // uncomment below and update the code to test the property addedDateEnd
      //var instance = new ShutterstockApiExplorer.SearchImage();
      //expect(instance).to.be();
    });

    it('should have the property addedDateStart (base name: "added_date_start")', function() {
      // uncomment below and update the code to test the property addedDateStart
      //var instance = new ShutterstockApiExplorer.SearchImage();
      //expect(instance).to.be();
    });

    it('should have the property aspectRatio (base name: "aspect_ratio")', function() {
      // uncomment below and update the code to test the property aspectRatio
      //var instance = new ShutterstockApiExplorer.SearchImage();
      //expect(instance).to.be();
    });

    it('should have the property aspectRatioMax (base name: "aspect_ratio_max")', function() {
      // uncomment below and update the code to test the property aspectRatioMax
      //var instance = new ShutterstockApiExplorer.SearchImage();
      //expect(instance).to.be();
    });

    it('should have the property aspectRatioMin (base name: "aspect_ratio_min")', function() {
      // uncomment below and update the code to test the property aspectRatioMin
      //var instance = new ShutterstockApiExplorer.SearchImage();
      //expect(instance).to.be();
    });

    it('should have the property authentic (base name: "authentic")', function() {
      // uncomment below and update the code to test the property authentic
      //var instance = new ShutterstockApiExplorer.SearchImage();
      //expect(instance).to.be();
    });

    it('should have the property category (base name: "category")', function() {
      // uncomment below and update the code to test the property category
      //var instance = new ShutterstockApiExplorer.SearchImage();
      //expect(instance).to.be();
    });

    it('should have the property color (base name: "color")', function() {
      // uncomment below and update the code to test the property color
      //var instance = new ShutterstockApiExplorer.SearchImage();
      //expect(instance).to.be();
    });

    it('should have the property contributor (base name: "contributor")', function() {
      // uncomment below and update the code to test the property contributor
      //var instance = new ShutterstockApiExplorer.SearchImage();
      //expect(instance).to.be();
    });

    it('should have the property contributorCountry (base name: "contributor_country")', function() {
      // uncomment below and update the code to test the property contributorCountry
      //var instance = new ShutterstockApiExplorer.SearchImage();
      //expect(instance).to.be();
    });

    it('should have the property fields (base name: "fields")', function() {
      // uncomment below and update the code to test the property fields
      //var instance = new ShutterstockApiExplorer.SearchImage();
      //expect(instance).to.be();
    });

    it('should have the property height (base name: "height")', function() {
      // uncomment below and update the code to test the property height
      //var instance = new ShutterstockApiExplorer.SearchImage();
      //expect(instance).to.be();
    });

    it('should have the property heightFrom (base name: "height_from")', function() {
      // uncomment below and update the code to test the property heightFrom
      //var instance = new ShutterstockApiExplorer.SearchImage();
      //expect(instance).to.be();
    });

    it('should have the property heightTo (base name: "height_to")', function() {
      // uncomment below and update the code to test the property heightTo
      //var instance = new ShutterstockApiExplorer.SearchImage();
      //expect(instance).to.be();
    });

    it('should have the property imageType (base name: "image_type")', function() {
      // uncomment below and update the code to test the property imageType
      //var instance = new ShutterstockApiExplorer.SearchImage();
      //expect(instance).to.be();
    });

    it('should have the property keywordSafeSearch (base name: "keyword_safe_search")', function() {
      // uncomment below and update the code to test the property keywordSafeSearch
      //var instance = new ShutterstockApiExplorer.SearchImage();
      //expect(instance).to.be();
    });

    it('should have the property language (base name: "language")', function() {
      // uncomment below and update the code to test the property language
      //var instance = new ShutterstockApiExplorer.SearchImage();
      //expect(instance).to.be();
    });

    it('should have the property license (base name: "license")', function() {
      // uncomment below and update the code to test the property license
      //var instance = new ShutterstockApiExplorer.SearchImage();
      //expect(instance).to.be();
    });

    it('should have the property model (base name: "model")', function() {
      // uncomment below and update the code to test the property model
      //var instance = new ShutterstockApiExplorer.SearchImage();
      //expect(instance).to.be();
    });

    it('should have the property orientation (base name: "orientation")', function() {
      // uncomment below and update the code to test the property orientation
      //var instance = new ShutterstockApiExplorer.SearchImage();
      //expect(instance).to.be();
    });

    it('should have the property page (base name: "page")', function() {
      // uncomment below and update the code to test the property page
      //var instance = new ShutterstockApiExplorer.SearchImage();
      //expect(instance).to.be();
    });

    it('should have the property peopleAge (base name: "people_age")', function() {
      // uncomment below and update the code to test the property peopleAge
      //var instance = new ShutterstockApiExplorer.SearchImage();
      //expect(instance).to.be();
    });

    it('should have the property peopleEthnicity (base name: "people_ethnicity")', function() {
      // uncomment below and update the code to test the property peopleEthnicity
      //var instance = new ShutterstockApiExplorer.SearchImage();
      //expect(instance).to.be();
    });

    it('should have the property peopleGender (base name: "people_gender")', function() {
      // uncomment below and update the code to test the property peopleGender
      //var instance = new ShutterstockApiExplorer.SearchImage();
      //expect(instance).to.be();
    });

    it('should have the property peopleModelReleased (base name: "people_model_released")', function() {
      // uncomment below and update the code to test the property peopleModelReleased
      //var instance = new ShutterstockApiExplorer.SearchImage();
      //expect(instance).to.be();
    });

    it('should have the property peopleNumber (base name: "people_number")', function() {
      // uncomment below and update the code to test the property peopleNumber
      //var instance = new ShutterstockApiExplorer.SearchImage();
      //expect(instance).to.be();
    });

    it('should have the property perPage (base name: "per_page")', function() {
      // uncomment below and update the code to test the property perPage
      //var instance = new ShutterstockApiExplorer.SearchImage();
      //expect(instance).to.be();
    });

    it('should have the property query (base name: "query")', function() {
      // uncomment below and update the code to test the property query
      //var instance = new ShutterstockApiExplorer.SearchImage();
      //expect(instance).to.be();
    });

    it('should have the property region (base name: "region")', function() {
      // uncomment below and update the code to test the property region
      //var instance = new ShutterstockApiExplorer.SearchImage();
      //expect(instance).to.be();
    });

    it('should have the property safe (base name: "safe")', function() {
      // uncomment below and update the code to test the property safe
      //var instance = new ShutterstockApiExplorer.SearchImage();
      //expect(instance).to.be();
    });

    it('should have the property sort (base name: "sort")', function() {
      // uncomment below and update the code to test the property sort
      //var instance = new ShutterstockApiExplorer.SearchImage();
      //expect(instance).to.be();
    });

    it('should have the property spellcheckQuery (base name: "spellcheck_query")', function() {
      // uncomment below and update the code to test the property spellcheckQuery
      //var instance = new ShutterstockApiExplorer.SearchImage();
      //expect(instance).to.be();
    });

    it('should have the property view (base name: "view")', function() {
      // uncomment below and update the code to test the property view
      //var instance = new ShutterstockApiExplorer.SearchImage();
      //expect(instance).to.be();
    });

    it('should have the property width (base name: "width")', function() {
      // uncomment below and update the code to test the property width
      //var instance = new ShutterstockApiExplorer.SearchImage();
      //expect(instance).to.be();
    });

    it('should have the property widthFrom (base name: "width_from")', function() {
      // uncomment below and update the code to test the property widthFrom
      //var instance = new ShutterstockApiExplorer.SearchImage();
      //expect(instance).to.be();
    });

    it('should have the property widthTo (base name: "width_to")', function() {
      // uncomment below and update the code to test the property widthTo
      //var instance = new ShutterstockApiExplorer.SearchImage();
      //expect(instance).to.be();
    });

  });

}));
