/**
 * Shutterstock API Explorer
 * The Shutterstock API provides access to Shutterstock's library of media, as well as information about customers' accounts and the contributors that provide the media.
 *
 * The version of the OpenAPI document: 1.1.32
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAccessTokenDetails.h
 *
 * Access token details that are currently associated with this user
 */

#ifndef OAIAccessTokenDetails_H
#define OAIAccessTokenDetails_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAccessTokenDetails : public OAIObject {
public:
    OAIAccessTokenDetails();
    OAIAccessTokenDetails(QString json);
    ~OAIAccessTokenDetails() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getClientId() const;
    void setClientId(const QString &client_id);
    bool is_client_id_Set() const;
    bool is_client_id_Valid() const;

    QString getContributorId() const;
    void setContributorId(const QString &contributor_id);
    bool is_contributor_id_Set() const;
    bool is_contributor_id_Valid() const;

    QString getCustomerId() const;
    void setCustomerId(const QString &customer_id);
    bool is_customer_id_Set() const;
    bool is_customer_id_Valid() const;

    qint32 getExpiresIn() const;
    void setExpiresIn(const qint32 &expires_in);
    bool is_expires_in_Set() const;
    bool is_expires_in_Valid() const;

    QString getOrganizationId() const;
    void setOrganizationId(const QString &organization_id);
    bool is_organization_id_Set() const;
    bool is_organization_id_Valid() const;

    QString getRealm() const;
    void setRealm(const QString &realm);
    bool is_realm_Set() const;
    bool is_realm_Valid() const;

    QList<QString> getScopes() const;
    void setScopes(const QList<QString> &scopes);
    bool is_scopes_Set() const;
    bool is_scopes_Valid() const;

    QString getUserId() const;
    void setUserId(const QString &user_id);
    bool is_user_id_Set() const;
    bool is_user_id_Valid() const;

    QString getUsername() const;
    void setUsername(const QString &username);
    bool is_username_Set() const;
    bool is_username_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_client_id;
    bool m_client_id_isSet;
    bool m_client_id_isValid;

    QString m_contributor_id;
    bool m_contributor_id_isSet;
    bool m_contributor_id_isValid;

    QString m_customer_id;
    bool m_customer_id_isSet;
    bool m_customer_id_isValid;

    qint32 m_expires_in;
    bool m_expires_in_isSet;
    bool m_expires_in_isValid;

    QString m_organization_id;
    bool m_organization_id_isSet;
    bool m_organization_id_isValid;

    QString m_realm;
    bool m_realm_isSet;
    bool m_realm_isValid;

    QList<QString> m_scopes;
    bool m_scopes_isSet;
    bool m_scopes_isValid;

    QString m_user_id;
    bool m_user_id_isSet;
    bool m_user_id_isValid;

    QString m_username;
    bool m_username_isSet;
    bool m_username_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAccessTokenDetails)

#endif // OAIAccessTokenDetails_H
