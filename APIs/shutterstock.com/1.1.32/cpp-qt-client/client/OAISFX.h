/**
 * Shutterstock API Explorer
 * The Shutterstock API provides access to Shutterstock's library of media, as well as information about customers' accounts and the contributors that provide the media.
 *
 * The version of the OpenAPI document: 1.1.32
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISFX.h
 *
 * SFX metadata
 */

#ifndef OAISFX_H
#define OAISFX_H

#include <QJsonObject>

#include "OAIContributor.h"
#include "OAISFXAssets.h"
#include <QDate>
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISFXAssets;
class OAIContributor;

class OAISFX : public OAIObject {
public:
    OAISFX();
    OAISFX(QString json);
    ~OAISFX() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDate getAddedDate() const;
    void setAddedDate(const QDate &added_date);
    bool is_added_date_Set() const;
    bool is_added_date_Valid() const;

    QString getAffiliateUrl() const;
    void setAffiliateUrl(const QString &affiliate_url);
    bool is_affiliate_url_Set() const;
    bool is_affiliate_url_Valid() const;

    QString getArtist() const;
    void setArtist(const QString &artist);
    bool is_artist_Set() const;
    bool is_artist_Valid() const;

    OAISFXAssets getAssets() const;
    void setAssets(const OAISFXAssets &assets);
    bool is_assets_Set() const;
    bool is_assets_Valid() const;

    OAIContributor getContributor() const;
    void setContributor(const OAIContributor &contributor);
    bool is_contributor_Set() const;
    bool is_contributor_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    double getDuration() const;
    void setDuration(const double &duration);
    bool is_duration_Set() const;
    bool is_duration_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QList<QString> getKeywords() const;
    void setKeywords(const QList<QString> &keywords);
    bool is_keywords_Set() const;
    bool is_keywords_Valid() const;

    QString getMediaType() const;
    void setMediaType(const QString &media_type);
    bool is_media_type_Set() const;
    bool is_media_type_Valid() const;

    QList<QString> getReleases() const;
    void setReleases(const QList<QString> &releases);
    bool is_releases_Set() const;
    bool is_releases_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    QDateTime getUpdatedTime() const;
    void setUpdatedTime(const QDateTime &updated_time);
    bool is_updated_time_Set() const;
    bool is_updated_time_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDate m_added_date;
    bool m_added_date_isSet;
    bool m_added_date_isValid;

    QString m_affiliate_url;
    bool m_affiliate_url_isSet;
    bool m_affiliate_url_isValid;

    QString m_artist;
    bool m_artist_isSet;
    bool m_artist_isValid;

    OAISFXAssets m_assets;
    bool m_assets_isSet;
    bool m_assets_isValid;

    OAIContributor m_contributor;
    bool m_contributor_isSet;
    bool m_contributor_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    double m_duration;
    bool m_duration_isSet;
    bool m_duration_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QList<QString> m_keywords;
    bool m_keywords_isSet;
    bool m_keywords_isValid;

    QString m_media_type;
    bool m_media_type_isSet;
    bool m_media_type_isValid;

    QList<QString> m_releases;
    bool m_releases_isSet;
    bool m_releases_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;

    QDateTime m_updated_time;
    bool m_updated_time_isSet;
    bool m_updated_time_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISFX)

#endif // OAISFX_H
