/**
 * Shutterstock API Explorer
 * The Shutterstock API provides access to Shutterstock's library of media, as well as information about customers' accounts and the contributors that provide the media.
 *
 * The version of the OpenAPI document: 1.1.32
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILicenseImageVector.h
 *
 * Data required to license an image
 */

#ifndef OAILicenseImageVector_H
#define OAILicenseImageVector_H

#include <QJsonObject>

#include "OAICookie.h"
#include "OAIObject.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICookie;

class OAILicenseImageVector : public OAIObject {
public:
    OAILicenseImageVector();
    OAILicenseImageVector(QString json);
    ~OAILicenseImageVector() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAICookie getAuthCookie() const;
    void setAuthCookie(const OAICookie &auth_cookie);
    bool is_auth_cookie_Set() const;
    bool is_auth_cookie_Valid() const;

    bool isEditorialAcknowledgement() const;
    void setEditorialAcknowledgement(const bool &editorial_acknowledgement);
    bool is_editorial_acknowledgement_Set() const;
    bool is_editorial_acknowledgement_Valid() const;

    QString getFormat() const;
    void setFormat(const QString &format);
    bool is_format_Set() const;
    bool is_format_Valid() const;

    QString getImageId() const;
    void setImageId(const QString &image_id);
    bool is_image_id_Set() const;
    bool is_image_id_Valid() const;

    OAIObject getMetadata() const;
    void setMetadata(const OAIObject &metadata);
    bool is_metadata_Set() const;
    bool is_metadata_Valid() const;

    double getPrice() const;
    void setPrice(const double &price);
    bool is_price_Set() const;
    bool is_price_Valid() const;

    QString getSearchId() const;
    void setSearchId(const QString &search_id);
    bool is_search_id_Set() const;
    bool is_search_id_Valid() const;

    Q_DECL_DEPRECATED bool isShowModal() const;
    Q_DECL_DEPRECATED void setShowModal(const bool &show_modal);
    Q_DECL_DEPRECATED bool is_show_modal_Set() const;
    Q_DECL_DEPRECATED bool is_show_modal_Valid() const;

    QString getSize() const;
    void setSize(const QString &size);
    bool is_size_Set() const;
    bool is_size_Valid() const;

    QString getSubscriptionId() const;
    void setSubscriptionId(const QString &subscription_id);
    bool is_subscription_id_Set() const;
    bool is_subscription_id_Valid() const;

    Q_DECL_DEPRECATED QString getVerificationCode() const;
    Q_DECL_DEPRECATED void setVerificationCode(const QString &verification_code);
    Q_DECL_DEPRECATED bool is_verification_code_Set() const;
    Q_DECL_DEPRECATED bool is_verification_code_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAICookie m_auth_cookie;
    bool m_auth_cookie_isSet;
    bool m_auth_cookie_isValid;

    bool m_editorial_acknowledgement;
    bool m_editorial_acknowledgement_isSet;
    bool m_editorial_acknowledgement_isValid;

    QString m_format;
    bool m_format_isSet;
    bool m_format_isValid;

    QString m_image_id;
    bool m_image_id_isSet;
    bool m_image_id_isValid;

    OAIObject m_metadata;
    bool m_metadata_isSet;
    bool m_metadata_isValid;

    double m_price;
    bool m_price_isSet;
    bool m_price_isValid;

    QString m_search_id;
    bool m_search_id_isSet;
    bool m_search_id_isValid;

    bool m_show_modal;
    bool m_show_modal_isSet;
    bool m_show_modal_isValid;

    QString m_size;
    bool m_size_isSet;
    bool m_size_isValid;

    QString m_subscription_id;
    bool m_subscription_id_isSet;
    bool m_subscription_id_isValid;

    QString m_verification_code;
    bool m_verification_code_isSet;
    bool m_verification_code_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILicenseImageVector)

#endif // OAILicenseImageVector_H
