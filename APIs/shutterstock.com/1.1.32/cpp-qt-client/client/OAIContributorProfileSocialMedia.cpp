/**
 * Shutterstock API Explorer
 * The Shutterstock API provides access to Shutterstock's library of media, as well as information about customers' accounts and the contributors that provide the media.
 *
 * The version of the OpenAPI document: 1.1.32
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIContributorProfileSocialMedia.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIContributorProfileSocialMedia::OAIContributorProfileSocialMedia(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIContributorProfileSocialMedia::OAIContributorProfileSocialMedia() {
    this->initializeModel();
}

OAIContributorProfileSocialMedia::~OAIContributorProfileSocialMedia() {}

void OAIContributorProfileSocialMedia::initializeModel() {

    m_facebook_isSet = false;
    m_facebook_isValid = false;

    m_google_plus_isSet = false;
    m_google_plus_isValid = false;

    m_linkedin_isSet = false;
    m_linkedin_isValid = false;

    m_pinterest_isSet = false;
    m_pinterest_isValid = false;

    m_tumblr_isSet = false;
    m_tumblr_isValid = false;

    m_twitter_isSet = false;
    m_twitter_isValid = false;
}

void OAIContributorProfileSocialMedia::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIContributorProfileSocialMedia::fromJsonObject(QJsonObject json) {

    m_facebook_isValid = ::OpenAPI::fromJsonValue(m_facebook, json[QString("facebook")]);
    m_facebook_isSet = !json[QString("facebook")].isNull() && m_facebook_isValid;

    m_google_plus_isValid = ::OpenAPI::fromJsonValue(m_google_plus, json[QString("google_plus")]);
    m_google_plus_isSet = !json[QString("google_plus")].isNull() && m_google_plus_isValid;

    m_linkedin_isValid = ::OpenAPI::fromJsonValue(m_linkedin, json[QString("linkedin")]);
    m_linkedin_isSet = !json[QString("linkedin")].isNull() && m_linkedin_isValid;

    m_pinterest_isValid = ::OpenAPI::fromJsonValue(m_pinterest, json[QString("pinterest")]);
    m_pinterest_isSet = !json[QString("pinterest")].isNull() && m_pinterest_isValid;

    m_tumblr_isValid = ::OpenAPI::fromJsonValue(m_tumblr, json[QString("tumblr")]);
    m_tumblr_isSet = !json[QString("tumblr")].isNull() && m_tumblr_isValid;

    m_twitter_isValid = ::OpenAPI::fromJsonValue(m_twitter, json[QString("twitter")]);
    m_twitter_isSet = !json[QString("twitter")].isNull() && m_twitter_isValid;
}

QString OAIContributorProfileSocialMedia::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIContributorProfileSocialMedia::asJsonObject() const {
    QJsonObject obj;
    if (m_facebook_isSet) {
        obj.insert(QString("facebook"), ::OpenAPI::toJsonValue(m_facebook));
    }
    if (m_google_plus_isSet) {
        obj.insert(QString("google_plus"), ::OpenAPI::toJsonValue(m_google_plus));
    }
    if (m_linkedin_isSet) {
        obj.insert(QString("linkedin"), ::OpenAPI::toJsonValue(m_linkedin));
    }
    if (m_pinterest_isSet) {
        obj.insert(QString("pinterest"), ::OpenAPI::toJsonValue(m_pinterest));
    }
    if (m_tumblr_isSet) {
        obj.insert(QString("tumblr"), ::OpenAPI::toJsonValue(m_tumblr));
    }
    if (m_twitter_isSet) {
        obj.insert(QString("twitter"), ::OpenAPI::toJsonValue(m_twitter));
    }
    return obj;
}

QString OAIContributorProfileSocialMedia::getFacebook() const {
    return m_facebook;
}
void OAIContributorProfileSocialMedia::setFacebook(const QString &facebook) {
    m_facebook = facebook;
    m_facebook_isSet = true;
}

bool OAIContributorProfileSocialMedia::is_facebook_Set() const{
    return m_facebook_isSet;
}

bool OAIContributorProfileSocialMedia::is_facebook_Valid() const{
    return m_facebook_isValid;
}

QString OAIContributorProfileSocialMedia::getGooglePlus() const {
    return m_google_plus;
}
void OAIContributorProfileSocialMedia::setGooglePlus(const QString &google_plus) {
    m_google_plus = google_plus;
    m_google_plus_isSet = true;
}

bool OAIContributorProfileSocialMedia::is_google_plus_Set() const{
    return m_google_plus_isSet;
}

bool OAIContributorProfileSocialMedia::is_google_plus_Valid() const{
    return m_google_plus_isValid;
}

QString OAIContributorProfileSocialMedia::getLinkedin() const {
    return m_linkedin;
}
void OAIContributorProfileSocialMedia::setLinkedin(const QString &linkedin) {
    m_linkedin = linkedin;
    m_linkedin_isSet = true;
}

bool OAIContributorProfileSocialMedia::is_linkedin_Set() const{
    return m_linkedin_isSet;
}

bool OAIContributorProfileSocialMedia::is_linkedin_Valid() const{
    return m_linkedin_isValid;
}

QString OAIContributorProfileSocialMedia::getPinterest() const {
    return m_pinterest;
}
void OAIContributorProfileSocialMedia::setPinterest(const QString &pinterest) {
    m_pinterest = pinterest;
    m_pinterest_isSet = true;
}

bool OAIContributorProfileSocialMedia::is_pinterest_Set() const{
    return m_pinterest_isSet;
}

bool OAIContributorProfileSocialMedia::is_pinterest_Valid() const{
    return m_pinterest_isValid;
}

QString OAIContributorProfileSocialMedia::getTumblr() const {
    return m_tumblr;
}
void OAIContributorProfileSocialMedia::setTumblr(const QString &tumblr) {
    m_tumblr = tumblr;
    m_tumblr_isSet = true;
}

bool OAIContributorProfileSocialMedia::is_tumblr_Set() const{
    return m_tumblr_isSet;
}

bool OAIContributorProfileSocialMedia::is_tumblr_Valid() const{
    return m_tumblr_isValid;
}

QString OAIContributorProfileSocialMedia::getTwitter() const {
    return m_twitter;
}
void OAIContributorProfileSocialMedia::setTwitter(const QString &twitter) {
    m_twitter = twitter;
    m_twitter_isSet = true;
}

bool OAIContributorProfileSocialMedia::is_twitter_Set() const{
    return m_twitter_isSet;
}

bool OAIContributorProfileSocialMedia::is_twitter_Valid() const{
    return m_twitter_isValid;
}

bool OAIContributorProfileSocialMedia::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_facebook_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_google_plus_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_linkedin_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pinterest_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tumblr_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_twitter_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIContributorProfileSocialMedia::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
