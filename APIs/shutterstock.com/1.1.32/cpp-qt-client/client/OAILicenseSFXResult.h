/**
 * Shutterstock API Explorer
 * The Shutterstock API provides access to Shutterstock's library of media, as well as information about customers' accounts and the contributors that provide the media.
 *
 * The version of the OpenAPI document: 1.1.32
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILicenseSFXResult.h
 *
 * The response to a licensing request for an sound effects
 */

#ifndef OAILicenseSFXResult_H
#define OAILicenseSFXResult_H

#include <QJsonObject>

#include "OAIUrl.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUrl;

class OAILicenseSFXResult : public OAIObject {
public:
    OAILicenseSFXResult();
    OAILicenseSFXResult(QString json);
    ~OAILicenseSFXResult() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getAllotmentCharge() const;
    void setAllotmentCharge(const qint32 &allotment_charge);
    bool is_allotment_charge_Set() const;
    bool is_allotment_charge_Valid() const;

    OAIUrl getDownload() const;
    void setDownload(const OAIUrl &download);
    bool is_download_Set() const;
    bool is_download_Valid() const;

    QString getError() const;
    void setError(const QString &error);
    bool is_error_Set() const;
    bool is_error_Valid() const;

    QString getLicenseId() const;
    void setLicenseId(const QString &license_id);
    bool is_license_id_Set() const;
    bool is_license_id_Valid() const;

    QString getSfxId() const;
    void setSfxId(const QString &sfx_id);
    bool is_sfx_id_Set() const;
    bool is_sfx_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_allotment_charge;
    bool m_allotment_charge_isSet;
    bool m_allotment_charge_isValid;

    OAIUrl m_download;
    bool m_download_isSet;
    bool m_download_isValid;

    QString m_error;
    bool m_error_isSet;
    bool m_error_isValid;

    QString m_license_id;
    bool m_license_id_isSet;
    bool m_license_id_isValid;

    QString m_sfx_id;
    bool m_sfx_id_isSet;
    bool m_sfx_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILicenseSFXResult)

#endif // OAILicenseSFXResult_H
