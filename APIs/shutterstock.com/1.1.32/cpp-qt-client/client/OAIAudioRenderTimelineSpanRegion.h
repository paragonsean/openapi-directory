/**
 * Shutterstock API Explorer
 * The Shutterstock API provides access to Shutterstock's library of media, as well as information about customers' accounts and the contributors that provide the media.
 *
 * The version of the OpenAPI document: 1.1.32
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAudioRenderTimelineSpanRegion.h
 *
 * A period of music or silence, measured in beats
 */

#ifndef OAIAudioRenderTimelineSpanRegion_H
#define OAIAudioRenderTimelineSpanRegion_H

#include <QJsonObject>

#include "OAIAudioRenderTimelineSpanRegion_end_type.h"
#include "OAIAudioRenderTimelineSpanRegion_key.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAudioRenderTimelineSpanRegion_end_type;
class OAIAudioRenderTimelineSpanRegion_key;

class OAIAudioRenderTimelineSpanRegion : public OAIObject {
public:
    OAIAudioRenderTimelineSpanRegion();
    OAIAudioRenderTimelineSpanRegion(QString json);
    ~OAIAudioRenderTimelineSpanRegion() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getBeat() const;
    void setBeat(const qint32 &beat);
    bool is_beat_Set() const;
    bool is_beat_Valid() const;

    QString getDescriptor() const;
    void setDescriptor(const QString &descriptor);
    bool is_descriptor_Set() const;
    bool is_descriptor_Valid() const;

    OAIAudioRenderTimelineSpanRegion_end_type getEndType() const;
    void setEndType(const OAIAudioRenderTimelineSpanRegion_end_type &end_type);
    bool is_end_type_Set() const;
    bool is_end_type_Valid() const;

    double getId() const;
    void setId(const double &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    OAIAudioRenderTimelineSpanRegion_key getKey() const;
    void setKey(const OAIAudioRenderTimelineSpanRegion_key &key);
    bool is_key_Set() const;
    bool is_key_Valid() const;

    QString getRegion() const;
    void setRegion(const QString &region);
    bool is_region_Set() const;
    bool is_region_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_beat;
    bool m_beat_isSet;
    bool m_beat_isValid;

    QString m_descriptor;
    bool m_descriptor_isSet;
    bool m_descriptor_isValid;

    OAIAudioRenderTimelineSpanRegion_end_type m_end_type;
    bool m_end_type_isSet;
    bool m_end_type_isValid;

    double m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    OAIAudioRenderTimelineSpanRegion_key m_key;
    bool m_key_isSet;
    bool m_key_isValid;

    QString m_region;
    bool m_region_isSet;
    bool m_region_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAudioRenderTimelineSpanRegion)

#endif // OAIAudioRenderTimelineSpanRegion_H
