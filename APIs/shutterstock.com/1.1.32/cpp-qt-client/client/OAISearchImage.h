/**
 * Shutterstock API Explorer
 * The Shutterstock API provides access to Shutterstock's library of media, as well as information about customers' accounts and the contributors that provide the media.
 *
 * The version of the OpenAPI document: 1.1.32
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISearchImage.h
 *
 * Data required to search for an image
 */

#ifndef OAISearchImage_H
#define OAISearchImage_H

#include <QJsonObject>

#include "OAILanguage.h"
#include "OAISearchImage_contributor_country.h"
#include "OAISearchImage_region.h"
#include <QDate>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISearchImage : public OAIObject {
public:
    OAISearchImage();
    OAISearchImage(QString json);
    ~OAISearchImage() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDate getAddedDate() const;
    void setAddedDate(const QDate &added_date);
    bool is_added_date_Set() const;
    bool is_added_date_Valid() const;

    QDate getAddedDateEnd() const;
    void setAddedDateEnd(const QDate &added_date_end);
    bool is_added_date_end_Set() const;
    bool is_added_date_end_Valid() const;

    QDate getAddedDateStart() const;
    void setAddedDateStart(const QDate &added_date_start);
    bool is_added_date_start_Set() const;
    bool is_added_date_start_Valid() const;

    double getAspectRatio() const;
    void setAspectRatio(const double &aspect_ratio);
    bool is_aspect_ratio_Set() const;
    bool is_aspect_ratio_Valid() const;

    double getAspectRatioMax() const;
    void setAspectRatioMax(const double &aspect_ratio_max);
    bool is_aspect_ratio_max_Set() const;
    bool is_aspect_ratio_max_Valid() const;

    double getAspectRatioMin() const;
    void setAspectRatioMin(const double &aspect_ratio_min);
    bool is_aspect_ratio_min_Set() const;
    bool is_aspect_ratio_min_Valid() const;

    bool isAuthentic() const;
    void setAuthentic(const bool &authentic);
    bool is_authentic_Set() const;
    bool is_authentic_Valid() const;

    QString getCategory() const;
    void setCategory(const QString &category);
    bool is_category_Set() const;
    bool is_category_Valid() const;

    QString getColor() const;
    void setColor(const QString &color);
    bool is_color_Set() const;
    bool is_color_Valid() const;

    QList<QString> getContributor() const;
    void setContributor(const QList<QString> &contributor);
    bool is_contributor_Set() const;
    bool is_contributor_Valid() const;

    OAISearchImage_contributor_country getContributorCountry() const;
    void setContributorCountry(const OAISearchImage_contributor_country &contributor_country);
    bool is_contributor_country_Set() const;
    bool is_contributor_country_Valid() const;

    QString getFields() const;
    void setFields(const QString &fields);
    bool is_fields_Set() const;
    bool is_fields_Valid() const;

    qint32 getHeight() const;
    void setHeight(const qint32 &height);
    bool is_height_Set() const;
    bool is_height_Valid() const;

    qint32 getHeightFrom() const;
    void setHeightFrom(const qint32 &height_from);
    bool is_height_from_Set() const;
    bool is_height_from_Valid() const;

    qint32 getHeightTo() const;
    void setHeightTo(const qint32 &height_to);
    bool is_height_to_Set() const;
    bool is_height_to_Valid() const;

    QList<QString> getImageType() const;
    void setImageType(const QList<QString> &image_type);
    bool is_image_type_Set() const;
    bool is_image_type_Valid() const;

    bool isKeywordSafeSearch() const;
    void setKeywordSafeSearch(const bool &keyword_safe_search);
    bool is_keyword_safe_search_Set() const;
    bool is_keyword_safe_search_Valid() const;

    OAILanguage getLanguage() const;
    void setLanguage(const OAILanguage &language);
    bool is_language_Set() const;
    bool is_language_Valid() const;

    QList<QString> getLicense() const;
    void setLicense(const QList<QString> &license);
    bool is_license_Set() const;
    bool is_license_Valid() const;

    QList<QString> getModel() const;
    void setModel(const QList<QString> &model);
    bool is_model_Set() const;
    bool is_model_Valid() const;

    QString getOrientation() const;
    void setOrientation(const QString &orientation);
    bool is_orientation_Set() const;
    bool is_orientation_Valid() const;

    qint32 getPage() const;
    void setPage(const qint32 &page);
    bool is_page_Set() const;
    bool is_page_Valid() const;

    QString getPeopleAge() const;
    void setPeopleAge(const QString &people_age);
    bool is_people_age_Set() const;
    bool is_people_age_Valid() const;

    QList<QString> getPeopleEthnicity() const;
    void setPeopleEthnicity(const QList<QString> &people_ethnicity);
    bool is_people_ethnicity_Set() const;
    bool is_people_ethnicity_Valid() const;

    QString getPeopleGender() const;
    void setPeopleGender(const QString &people_gender);
    bool is_people_gender_Set() const;
    bool is_people_gender_Valid() const;

    bool isPeopleModelReleased() const;
    void setPeopleModelReleased(const bool &people_model_released);
    bool is_people_model_released_Set() const;
    bool is_people_model_released_Valid() const;

    qint32 getPeopleNumber() const;
    void setPeopleNumber(const qint32 &people_number);
    bool is_people_number_Set() const;
    bool is_people_number_Valid() const;

    qint32 getPerPage() const;
    void setPerPage(const qint32 &per_page);
    bool is_per_page_Set() const;
    bool is_per_page_Valid() const;

    QString getQuery() const;
    void setQuery(const QString &query);
    bool is_query_Set() const;
    bool is_query_Valid() const;

    OAISearchImage_region getRegion() const;
    void setRegion(const OAISearchImage_region &region);
    bool is_region_Set() const;
    bool is_region_Valid() const;

    bool isSafe() const;
    void setSafe(const bool &safe);
    bool is_safe_Set() const;
    bool is_safe_Valid() const;

    QString getSort() const;
    void setSort(const QString &sort);
    bool is_sort_Set() const;
    bool is_sort_Valid() const;

    bool isSpellcheckQuery() const;
    void setSpellcheckQuery(const bool &spellcheck_query);
    bool is_spellcheck_query_Set() const;
    bool is_spellcheck_query_Valid() const;

    QString getView() const;
    void setView(const QString &view);
    bool is_view_Set() const;
    bool is_view_Valid() const;

    qint32 getWidth() const;
    void setWidth(const qint32 &width);
    bool is_width_Set() const;
    bool is_width_Valid() const;

    qint32 getWidthFrom() const;
    void setWidthFrom(const qint32 &width_from);
    bool is_width_from_Set() const;
    bool is_width_from_Valid() const;

    qint32 getWidthTo() const;
    void setWidthTo(const qint32 &width_to);
    bool is_width_to_Set() const;
    bool is_width_to_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDate m_added_date;
    bool m_added_date_isSet;
    bool m_added_date_isValid;

    QDate m_added_date_end;
    bool m_added_date_end_isSet;
    bool m_added_date_end_isValid;

    QDate m_added_date_start;
    bool m_added_date_start_isSet;
    bool m_added_date_start_isValid;

    double m_aspect_ratio;
    bool m_aspect_ratio_isSet;
    bool m_aspect_ratio_isValid;

    double m_aspect_ratio_max;
    bool m_aspect_ratio_max_isSet;
    bool m_aspect_ratio_max_isValid;

    double m_aspect_ratio_min;
    bool m_aspect_ratio_min_isSet;
    bool m_aspect_ratio_min_isValid;

    bool m_authentic;
    bool m_authentic_isSet;
    bool m_authentic_isValid;

    QString m_category;
    bool m_category_isSet;
    bool m_category_isValid;

    QString m_color;
    bool m_color_isSet;
    bool m_color_isValid;

    QList<QString> m_contributor;
    bool m_contributor_isSet;
    bool m_contributor_isValid;

    OAISearchImage_contributor_country m_contributor_country;
    bool m_contributor_country_isSet;
    bool m_contributor_country_isValid;

    QString m_fields;
    bool m_fields_isSet;
    bool m_fields_isValid;

    qint32 m_height;
    bool m_height_isSet;
    bool m_height_isValid;

    qint32 m_height_from;
    bool m_height_from_isSet;
    bool m_height_from_isValid;

    qint32 m_height_to;
    bool m_height_to_isSet;
    bool m_height_to_isValid;

    QList<QString> m_image_type;
    bool m_image_type_isSet;
    bool m_image_type_isValid;

    bool m_keyword_safe_search;
    bool m_keyword_safe_search_isSet;
    bool m_keyword_safe_search_isValid;

    OAILanguage m_language;
    bool m_language_isSet;
    bool m_language_isValid;

    QList<QString> m_license;
    bool m_license_isSet;
    bool m_license_isValid;

    QList<QString> m_model;
    bool m_model_isSet;
    bool m_model_isValid;

    QString m_orientation;
    bool m_orientation_isSet;
    bool m_orientation_isValid;

    qint32 m_page;
    bool m_page_isSet;
    bool m_page_isValid;

    QString m_people_age;
    bool m_people_age_isSet;
    bool m_people_age_isValid;

    QList<QString> m_people_ethnicity;
    bool m_people_ethnicity_isSet;
    bool m_people_ethnicity_isValid;

    QString m_people_gender;
    bool m_people_gender_isSet;
    bool m_people_gender_isValid;

    bool m_people_model_released;
    bool m_people_model_released_isSet;
    bool m_people_model_released_isValid;

    qint32 m_people_number;
    bool m_people_number_isSet;
    bool m_people_number_isValid;

    qint32 m_per_page;
    bool m_per_page_isSet;
    bool m_per_page_isValid;

    QString m_query;
    bool m_query_isSet;
    bool m_query_isValid;

    OAISearchImage_region m_region;
    bool m_region_isSet;
    bool m_region_isValid;

    bool m_safe;
    bool m_safe_isSet;
    bool m_safe_isValid;

    QString m_sort;
    bool m_sort_isSet;
    bool m_sort_isValid;

    bool m_spellcheck_query;
    bool m_spellcheck_query_isSet;
    bool m_spellcheck_query_isValid;

    QString m_view;
    bool m_view_isSet;
    bool m_view_isValid;

    qint32 m_width;
    bool m_width_isSet;
    bool m_width_isValid;

    qint32 m_width_from;
    bool m_width_from_isSet;
    bool m_width_from_isValid;

    qint32 m_width_to;
    bool m_width_to_isSet;
    bool m_width_to_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISearchImage)

#endif // OAISearchImage_H
