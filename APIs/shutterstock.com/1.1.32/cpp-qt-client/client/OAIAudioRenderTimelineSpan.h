/**
 * Shutterstock API Explorer
 * The Shutterstock API provides access to Shutterstock's library of media, as well as information about customers' accounts and the contributors that provide the media.
 *
 * The version of the OpenAPI document: 1.1.32
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAudioRenderTimelineSpan.h
 *
 * The beginning of a non-overlapping period of absolute time
 */

#ifndef OAIAudioRenderTimelineSpan_H
#define OAIAudioRenderTimelineSpan_H

#include <QJsonObject>

#include "OAIAudioRenderTimelineSpanInstrumentGroup.h"
#include "OAIAudioRenderTimelineSpanRegion.h"
#include "OAIAudioRenderTimelineSpanTempoChanges.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAudioRenderTimelineSpanInstrumentGroup;
class OAIAudioRenderTimelineSpanRegion;
class OAIAudioRenderTimelineSpanTempoChanges;

class OAIAudioRenderTimelineSpan : public OAIObject {
public:
    OAIAudioRenderTimelineSpan();
    OAIAudioRenderTimelineSpan(QString json);
    ~OAIAudioRenderTimelineSpan() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getId() const;
    void setId(const double &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QList<OAIAudioRenderTimelineSpanInstrumentGroup> getInstrumentGroups() const;
    void setInstrumentGroups(const QList<OAIAudioRenderTimelineSpanInstrumentGroup> &instrument_groups);
    bool is_instrument_groups_Set() const;
    bool is_instrument_groups_Valid() const;

    QList<OAIAudioRenderTimelineSpanRegion> getRegions() const;
    void setRegions(const QList<OAIAudioRenderTimelineSpanRegion> &regions);
    bool is_regions_Set() const;
    bool is_regions_Valid() const;

    QString getSpanType() const;
    void setSpanType(const QString &span_type);
    bool is_span_type_Set() const;
    bool is_span_type_Valid() const;

    qint32 getTempo() const;
    void setTempo(const qint32 &tempo);
    bool is_tempo_Set() const;
    bool is_tempo_Valid() const;

    QList<OAIAudioRenderTimelineSpanTempoChanges> getTempoChanges() const;
    void setTempoChanges(const QList<OAIAudioRenderTimelineSpanTempoChanges> &tempo_changes);
    bool is_tempo_changes_Set() const;
    bool is_tempo_changes_Valid() const;

    qint32 getTime() const;
    void setTime(const qint32 &time);
    bool is_time_Set() const;
    bool is_time_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QList<OAIAudioRenderTimelineSpanInstrumentGroup> m_instrument_groups;
    bool m_instrument_groups_isSet;
    bool m_instrument_groups_isValid;

    QList<OAIAudioRenderTimelineSpanRegion> m_regions;
    bool m_regions_isSet;
    bool m_regions_isValid;

    QString m_span_type;
    bool m_span_type_isSet;
    bool m_span_type_isValid;

    qint32 m_tempo;
    bool m_tempo_isSet;
    bool m_tempo_isValid;

    QList<OAIAudioRenderTimelineSpanTempoChanges> m_tempo_changes;
    bool m_tempo_changes_isSet;
    bool m_tempo_changes_isValid;

    qint32 m_time;
    bool m_time_isSet;
    bool m_time_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAudioRenderTimelineSpan)

#endif // OAIAudioRenderTimelineSpan_H
