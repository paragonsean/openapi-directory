/**
 * Shutterstock API Explorer
 * The Shutterstock API provides access to Shutterstock's library of media, as well as information about customers' accounts and the contributors that provide the media.
 *
 * The version of the OpenAPI document: 1.1.32
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAudioRenderTimelineSpanTempoChanges.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAudioRenderTimelineSpanTempoChanges::OAIAudioRenderTimelineSpanTempoChanges(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAudioRenderTimelineSpanTempoChanges::OAIAudioRenderTimelineSpanTempoChanges() {
    this->initializeModel();
}

OAIAudioRenderTimelineSpanTempoChanges::~OAIAudioRenderTimelineSpanTempoChanges() {}

void OAIAudioRenderTimelineSpanTempoChanges::initializeModel() {

    m_tempo_isSet = false;
    m_tempo_isValid = false;

    m_time_isSet = false;
    m_time_isValid = false;
}

void OAIAudioRenderTimelineSpanTempoChanges::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAudioRenderTimelineSpanTempoChanges::fromJsonObject(QJsonObject json) {

    m_tempo_isValid = ::OpenAPI::fromJsonValue(m_tempo, json[QString("tempo")]);
    m_tempo_isSet = !json[QString("tempo")].isNull() && m_tempo_isValid;

    m_time_isValid = ::OpenAPI::fromJsonValue(m_time, json[QString("time")]);
    m_time_isSet = !json[QString("time")].isNull() && m_time_isValid;
}

QString OAIAudioRenderTimelineSpanTempoChanges::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAudioRenderTimelineSpanTempoChanges::asJsonObject() const {
    QJsonObject obj;
    if (m_tempo_isSet) {
        obj.insert(QString("tempo"), ::OpenAPI::toJsonValue(m_tempo));
    }
    if (m_time_isSet) {
        obj.insert(QString("time"), ::OpenAPI::toJsonValue(m_time));
    }
    return obj;
}

double OAIAudioRenderTimelineSpanTempoChanges::getTempo() const {
    return m_tempo;
}
void OAIAudioRenderTimelineSpanTempoChanges::setTempo(const double &tempo) {
    m_tempo = tempo;
    m_tempo_isSet = true;
}

bool OAIAudioRenderTimelineSpanTempoChanges::is_tempo_Set() const{
    return m_tempo_isSet;
}

bool OAIAudioRenderTimelineSpanTempoChanges::is_tempo_Valid() const{
    return m_tempo_isValid;
}

double OAIAudioRenderTimelineSpanTempoChanges::getTime() const {
    return m_time;
}
void OAIAudioRenderTimelineSpanTempoChanges::setTime(const double &time) {
    m_time = time;
    m_time_isSet = true;
}

bool OAIAudioRenderTimelineSpanTempoChanges::is_time_Set() const{
    return m_time_isSet;
}

bool OAIAudioRenderTimelineSpanTempoChanges::is_time_Valid() const{
    return m_time_isValid;
}

bool OAIAudioRenderTimelineSpanTempoChanges::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_tempo_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAudioRenderTimelineSpanTempoChanges::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_tempo_isValid && m_time_isValid && true;
}

} // namespace OpenAPI
