/**
 * Shutterstock API Explorer
 * The Shutterstock API provides access to Shutterstock's library of media, as well as information about customers' accounts and the contributors that provide the media.
 *
 * The version of the OpenAPI document: 1.1.32
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEditorialUpdatedResults.h
 *
 * Editorial updated results
 */

#ifndef OAIEditorialUpdatedResults_H
#define OAIEditorialUpdatedResults_H

#include <QJsonObject>

#include "OAIEditorialUpdatedContent.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIEditorialUpdatedContent;

class OAIEditorialUpdatedResults : public OAIObject {
public:
    OAIEditorialUpdatedResults();
    OAIEditorialUpdatedResults(QString json);
    ~OAIEditorialUpdatedResults() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIEditorialUpdatedContent> getData() const;
    void setData(const QList<OAIEditorialUpdatedContent> &data);
    bool is_data_Set() const;
    bool is_data_Valid() const;

    QString getMessage() const;
    void setMessage(const QString &message);
    bool is_message_Set() const;
    bool is_message_Valid() const;

    QString getNext() const;
    void setNext(const QString &next);
    bool is_next_Set() const;
    bool is_next_Valid() const;

    qint32 getPerPage() const;
    void setPerPage(const qint32 &per_page);
    bool is_per_page_Set() const;
    bool is_per_page_Valid() const;

    QString getPrev() const;
    void setPrev(const QString &prev);
    bool is_prev_Set() const;
    bool is_prev_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIEditorialUpdatedContent> m_data;
    bool m_data_isSet;
    bool m_data_isValid;

    QString m_message;
    bool m_message_isSet;
    bool m_message_isValid;

    QString m_next;
    bool m_next_isSet;
    bool m_next_isValid;

    qint32 m_per_page;
    bool m_per_page_isSet;
    bool m_per_page_isValid;

    QString m_prev;
    bool m_prev_isSet;
    bool m_prev_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEditorialUpdatedResults)

#endif // OAIEditorialUpdatedResults_H
