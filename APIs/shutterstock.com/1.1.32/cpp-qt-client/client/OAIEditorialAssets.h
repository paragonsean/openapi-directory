/**
 * Shutterstock API Explorer
 * The Shutterstock API provides access to Shutterstock's library of media, as well as information about customers' accounts and the contributors that provide the media.
 *
 * The version of the OpenAPI document: 1.1.32
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEditorialAssets.h
 *
 * Asset information, including size and thumbnail URLs
 */

#ifndef OAIEditorialAssets_H
#define OAIEditorialAssets_H

#include <QJsonObject>

#include "OAIImageSizeDetails.h"
#include "OAIThumbnail.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIImageSizeDetails;
class OAIThumbnail;

class OAIEditorialAssets : public OAIObject {
public:
    OAIEditorialAssets();
    OAIEditorialAssets(QString json);
    ~OAIEditorialAssets() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIImageSizeDetails getMediumJpg() const;
    void setMediumJpg(const OAIImageSizeDetails &medium_jpg);
    bool is_medium_jpg_Set() const;
    bool is_medium_jpg_Valid() const;

    OAIImageSizeDetails getOriginal() const;
    void setOriginal(const OAIImageSizeDetails &original);
    bool is_original_Set() const;
    bool is_original_Valid() const;

    OAIImageSizeDetails getSmallJpg() const;
    void setSmallJpg(const OAIImageSizeDetails &small_jpg);
    bool is_small_jpg_Set() const;
    bool is_small_jpg_Valid() const;

    OAIThumbnail getThumb170() const;
    void setThumb170(const OAIThumbnail &thumb_170);
    bool is_thumb_170_Set() const;
    bool is_thumb_170_Valid() const;

    OAIThumbnail getThumb220() const;
    void setThumb220(const OAIThumbnail &thumb_220);
    bool is_thumb_220_Set() const;
    bool is_thumb_220_Valid() const;

    OAIThumbnail getWatermark1500() const;
    void setWatermark1500(const OAIThumbnail &watermark_1500);
    bool is_watermark_1500_Set() const;
    bool is_watermark_1500_Valid() const;

    OAIThumbnail getWatermark450() const;
    void setWatermark450(const OAIThumbnail &watermark_450);
    bool is_watermark_450_Set() const;
    bool is_watermark_450_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIImageSizeDetails m_medium_jpg;
    bool m_medium_jpg_isSet;
    bool m_medium_jpg_isValid;

    OAIImageSizeDetails m_original;
    bool m_original_isSet;
    bool m_original_isValid;

    OAIImageSizeDetails m_small_jpg;
    bool m_small_jpg_isSet;
    bool m_small_jpg_isValid;

    OAIThumbnail m_thumb_170;
    bool m_thumb_170_isSet;
    bool m_thumb_170_isValid;

    OAIThumbnail m_thumb_220;
    bool m_thumb_220_isSet;
    bool m_thumb_220_isValid;

    OAIThumbnail m_watermark_1500;
    bool m_watermark_1500_isSet;
    bool m_watermark_1500_isValid;

    OAIThumbnail m_watermark_450;
    bool m_watermark_450_isSet;
    bool m_watermark_450_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEditorialAssets)

#endif // OAIEditorialAssets_H
