/**
 * Shutterstock API Explorer
 * The Shutterstock API provides access to Shutterstock's library of media, as well as information about customers' accounts and the contributors that provide the media.
 *
 * The version of the OpenAPI document: 1.1.32
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUserDetails.h
 *
 * User details
 */

#ifndef OAIUserDetails_H
#define OAIUserDetails_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIUserDetails : public OAIObject {
public:
    OAIUserDetails();
    OAIUserDetails(QString json);
    ~OAIUserDetails() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getContributorId() const;
    void setContributorId(const QString &contributor_id);
    bool is_contributor_id_Set() const;
    bool is_contributor_id_Valid() const;

    QString getCustomerId() const;
    void setCustomerId(const QString &customer_id);
    bool is_customer_id_Set() const;
    bool is_customer_id_Valid() const;

    QString getEmail() const;
    void setEmail(const QString &email);
    bool is_email_Set() const;
    bool is_email_Valid() const;

    QString getFirstName() const;
    void setFirstName(const QString &first_name);
    bool is_first_name_Set() const;
    bool is_first_name_Valid() const;

    QString getFullName() const;
    void setFullName(const QString &full_name);
    bool is_full_name_Set() const;
    bool is_full_name_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    bool isIsPremier() const;
    void setIsPremier(const bool &is_premier);
    bool is_is_premier_Set() const;
    bool is_is_premier_Valid() const;

    bool isIsPremierParent() const;
    void setIsPremierParent(const bool &is_premier_parent);
    bool is_is_premier_parent_Set() const;
    bool is_is_premier_parent_Valid() const;

    QString getLanguage() const;
    void setLanguage(const QString &language);
    bool is_language_Set() const;
    bool is_language_Valid() const;

    QString getLastName() const;
    void setLastName(const QString &last_name);
    bool is_last_name_Set() const;
    bool is_last_name_Valid() const;

    bool isOnlyEnhancedLicense() const;
    void setOnlyEnhancedLicense(const bool &only_enhanced_license);
    bool is_only_enhanced_license_Set() const;
    bool is_only_enhanced_license_Valid() const;

    bool isOnlySensitiveUse() const;
    void setOnlySensitiveUse(const bool &only_sensitive_use);
    bool is_only_sensitive_use_Set() const;
    bool is_only_sensitive_use_Valid() const;

    QString getOrganizationId() const;
    void setOrganizationId(const QString &organization_id);
    bool is_organization_id_Set() const;
    bool is_organization_id_Valid() const;

    QList<QString> getPremierPermissions() const;
    void setPremierPermissions(const QList<QString> &premier_permissions);
    bool is_premier_permissions_Set() const;
    bool is_premier_permissions_Valid() const;

    QString getUsername() const;
    void setUsername(const QString &username);
    bool is_username_Set() const;
    bool is_username_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_contributor_id;
    bool m_contributor_id_isSet;
    bool m_contributor_id_isValid;

    QString m_customer_id;
    bool m_customer_id_isSet;
    bool m_customer_id_isValid;

    QString m_email;
    bool m_email_isSet;
    bool m_email_isValid;

    QString m_first_name;
    bool m_first_name_isSet;
    bool m_first_name_isValid;

    QString m_full_name;
    bool m_full_name_isSet;
    bool m_full_name_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    bool m_is_premier;
    bool m_is_premier_isSet;
    bool m_is_premier_isValid;

    bool m_is_premier_parent;
    bool m_is_premier_parent_isSet;
    bool m_is_premier_parent_isValid;

    QString m_language;
    bool m_language_isSet;
    bool m_language_isValid;

    QString m_last_name;
    bool m_last_name_isSet;
    bool m_last_name_isValid;

    bool m_only_enhanced_license;
    bool m_only_enhanced_license_isSet;
    bool m_only_enhanced_license_isValid;

    bool m_only_sensitive_use;
    bool m_only_sensitive_use_isSet;
    bool m_only_sensitive_use_isValid;

    QString m_organization_id;
    bool m_organization_id_isSet;
    bool m_organization_id_isValid;

    QList<QString> m_premier_permissions;
    bool m_premier_permissions_isSet;
    bool m_premier_permissions_isValid;

    QString m_username;
    bool m_username_isSet;
    bool m_username_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUserDetails)

#endif // OAIUserDetails_H
