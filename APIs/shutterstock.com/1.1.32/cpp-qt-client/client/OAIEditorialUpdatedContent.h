/**
 * Shutterstock API Explorer
 * The Shutterstock API provides access to Shutterstock's library of media, as well as information about customers' accounts and the contributors that provide the media.
 *
 * The version of the OpenAPI document: 1.1.32
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEditorialUpdatedContent.h
 *
 * Metadata about updated editorial content
 */

#ifndef OAIEditorialUpdatedContent_H
#define OAIEditorialUpdatedContent_H

#include <QJsonObject>

#include "OAIEditorialAssets.h"
#include "OAIEditorialCategory.h"
#include "OAIEditorialUpdatedContent_commercial_status.h"
#include "OAIEditorialUpdatedContent_rights.h"
#include <QDate>
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIEditorialAssets;
class OAIEditorialCategory;
class OAIEditorialUpdatedContent_commercial_status;
class OAIEditorialUpdatedContent_rights;

class OAIEditorialUpdatedContent : public OAIObject {
public:
    OAIEditorialUpdatedContent();
    OAIEditorialUpdatedContent(QString json);
    ~OAIEditorialUpdatedContent() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getAspect() const;
    void setAspect(const double &aspect);
    bool is_aspect_Set() const;
    bool is_aspect_Valid() const;

    OAIEditorialAssets getAssets() const;
    void setAssets(const OAIEditorialAssets &assets);
    bool is_assets_Set() const;
    bool is_assets_Valid() const;

    QString getByline() const;
    void setByline(const QString &byline);
    bool is_byline_Set() const;
    bool is_byline_Valid() const;

    QString getCaption() const;
    void setCaption(const QString &caption);
    bool is_caption_Set() const;
    bool is_caption_Valid() const;

    QList<OAIEditorialCategory> getCategories() const;
    void setCategories(const QList<OAIEditorialCategory> &categories);
    bool is_categories_Set() const;
    bool is_categories_Valid() const;

    OAIEditorialUpdatedContent_commercial_status getCommercialStatus() const;
    void setCommercialStatus(const OAIEditorialUpdatedContent_commercial_status &commercial_status);
    bool is_commercial_status_Set() const;
    bool is_commercial_status_Valid() const;

    QDateTime getCreatedTime() const;
    void setCreatedTime(const QDateTime &created_time);
    bool is_created_time_Set() const;
    bool is_created_time_Valid() const;

    QDate getDateTaken() const;
    void setDateTaken(const QDate &date_taken);
    bool is_date_taken_Set() const;
    bool is_date_taken_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QList<QString> getKeywords() const;
    void setKeywords(const QList<QString> &keywords);
    bool is_keywords_Set() const;
    bool is_keywords_Valid() const;

    OAIEditorialUpdatedContent_rights getRights() const;
    void setRights(const OAIEditorialUpdatedContent_rights &rights);
    bool is_rights_Set() const;
    bool is_rights_Valid() const;

    QString getSpecialInstructions() const;
    void setSpecialInstructions(const QString &special_instructions);
    bool is_special_instructions_Set() const;
    bool is_special_instructions_Valid() const;

    QString getSupplierCode() const;
    void setSupplierCode(const QString &supplier_code);
    bool is_supplier_code_Set() const;
    bool is_supplier_code_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    QDateTime getUpdatedTime() const;
    void setUpdatedTime(const QDateTime &updated_time);
    bool is_updated_time_Set() const;
    bool is_updated_time_Valid() const;

    QList<QString> getUpdates() const;
    void setUpdates(const QList<QString> &updates);
    bool is_updates_Set() const;
    bool is_updates_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_aspect;
    bool m_aspect_isSet;
    bool m_aspect_isValid;

    OAIEditorialAssets m_assets;
    bool m_assets_isSet;
    bool m_assets_isValid;

    QString m_byline;
    bool m_byline_isSet;
    bool m_byline_isValid;

    QString m_caption;
    bool m_caption_isSet;
    bool m_caption_isValid;

    QList<OAIEditorialCategory> m_categories;
    bool m_categories_isSet;
    bool m_categories_isValid;

    OAIEditorialUpdatedContent_commercial_status m_commercial_status;
    bool m_commercial_status_isSet;
    bool m_commercial_status_isValid;

    QDateTime m_created_time;
    bool m_created_time_isSet;
    bool m_created_time_isValid;

    QDate m_date_taken;
    bool m_date_taken_isSet;
    bool m_date_taken_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QList<QString> m_keywords;
    bool m_keywords_isSet;
    bool m_keywords_isValid;

    OAIEditorialUpdatedContent_rights m_rights;
    bool m_rights_isSet;
    bool m_rights_isValid;

    QString m_special_instructions;
    bool m_special_instructions_isSet;
    bool m_special_instructions_isValid;

    QString m_supplier_code;
    bool m_supplier_code_isSet;
    bool m_supplier_code_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;

    QDateTime m_updated_time;
    bool m_updated_time_isSet;
    bool m_updated_time_isValid;

    QList<QString> m_updates;
    bool m_updates_isSet;
    bool m_updates_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEditorialUpdatedContent)

#endif // OAIEditorialUpdatedContent_H
