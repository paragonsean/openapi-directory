/**
 * Shutterstock API Explorer
 * The Shutterstock API provides access to Shutterstock's library of media, as well as information about customers' accounts and the contributors that provide the media.
 *
 * The version of the OpenAPI document: 1.1.32
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIInsights_label_performance_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIInsights_label_performance_inner::OAIInsights_label_performance_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIInsights_label_performance_inner::OAIInsights_label_performance_inner() {
    this->initializeModel();
}

OAIInsights_label_performance_inner::~OAIInsights_label_performance_inner() {}

void OAIInsights_label_performance_inner::initializeModel() {

    m_name_isSet = false;
    m_name_isValid = false;

    m_percentile_performance_isSet = false;
    m_percentile_performance_isValid = false;
}

void OAIInsights_label_performance_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIInsights_label_performance_inner::fromJsonObject(QJsonObject json) {

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_percentile_performance_isValid = ::OpenAPI::fromJsonValue(m_percentile_performance, json[QString("percentile_performance")]);
    m_percentile_performance_isSet = !json[QString("percentile_performance")].isNull() && m_percentile_performance_isValid;
}

QString OAIInsights_label_performance_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIInsights_label_performance_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_percentile_performance_isSet) {
        obj.insert(QString("percentile_performance"), ::OpenAPI::toJsonValue(m_percentile_performance));
    }
    return obj;
}

QString OAIInsights_label_performance_inner::getName() const {
    return m_name;
}
void OAIInsights_label_performance_inner::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIInsights_label_performance_inner::is_name_Set() const{
    return m_name_isSet;
}

bool OAIInsights_label_performance_inner::is_name_Valid() const{
    return m_name_isValid;
}

double OAIInsights_label_performance_inner::getPercentilePerformance() const {
    return m_percentile_performance;
}
void OAIInsights_label_performance_inner::setPercentilePerformance(const double &percentile_performance) {
    m_percentile_performance = percentile_performance;
    m_percentile_performance_isSet = true;
}

bool OAIInsights_label_performance_inner::is_percentile_performance_Set() const{
    return m_percentile_performance_isSet;
}

bool OAIInsights_label_performance_inner::is_percentile_performance_Valid() const{
    return m_percentile_performance_isValid;
}

bool OAIInsights_label_performance_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_percentile_performance_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIInsights_label_performance_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
