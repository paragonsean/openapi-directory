/**
 * Shutterstock API Explorer
 * The Shutterstock API provides access to Shutterstock's library of media, as well as information about customers' accounts and the contributors that provide the media.
 *
 * The version of the OpenAPI document: 1.1.32
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAudioRendersFilesList.h
 *
 * Files associated with the render
 */

#ifndef OAIAudioRendersFilesList_H
#define OAIAudioRendersFilesList_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAudioRendersFilesList : public OAIObject {
public:
    OAIAudioRendersFilesList();
    OAIAudioRendersFilesList(QString json);
    ~OAIAudioRendersFilesList() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getBitsSample() const;
    void setBitsSample(const double &bits_sample);
    bool is_bits_sample_Set() const;
    bool is_bits_sample_Valid() const;

    QString getContentType() const;
    void setContentType(const QString &content_type);
    bool is_content_type_Set() const;
    bool is_content_type_Valid() const;

    QString getDownloadUrl() const;
    void setDownloadUrl(const QString &download_url);
    bool is_download_url_Set() const;
    bool is_download_url_Valid() const;

    QString getFilename() const;
    void setFilename(const QString &filename);
    bool is_filename_Set() const;
    bool is_filename_Valid() const;

    double getFrequencyHz() const;
    void setFrequencyHz(const double &frequency_hz);
    bool is_frequency_hz_Set() const;
    bool is_frequency_hz_Valid() const;

    double getKbitsSecond() const;
    void setKbitsSecond(const double &kbits_second);
    bool is_kbits_second_Set() const;
    bool is_kbits_second_Valid() const;

    double getSizeBytes() const;
    void setSizeBytes(const double &size_bytes);
    bool is_size_bytes_Set() const;
    bool is_size_bytes_Valid() const;

    QList<QString> getTracks() const;
    void setTracks(const QList<QString> &tracks);
    bool is_tracks_Set() const;
    bool is_tracks_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_bits_sample;
    bool m_bits_sample_isSet;
    bool m_bits_sample_isValid;

    QString m_content_type;
    bool m_content_type_isSet;
    bool m_content_type_isValid;

    QString m_download_url;
    bool m_download_url_isSet;
    bool m_download_url_isValid;

    QString m_filename;
    bool m_filename_isSet;
    bool m_filename_isValid;

    double m_frequency_hz;
    bool m_frequency_hz_isSet;
    bool m_frequency_hz_isValid;

    double m_kbits_second;
    bool m_kbits_second_isSet;
    bool m_kbits_second_isValid;

    double m_size_bytes;
    bool m_size_bytes_isSet;
    bool m_size_bytes_isValid;

    QList<QString> m_tracks;
    bool m_tracks_isSet;
    bool m_tracks_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAudioRendersFilesList)

#endif // OAIAudioRendersFilesList_H
