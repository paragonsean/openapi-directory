/**
 * Shutterstock API Explorer
 * The Shutterstock API provides access to Shutterstock's library of media, as well as information about customers' accounts and the contributors that provide the media.
 *
 * The version of the OpenAPI document: 1.1.32
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILicenseAudioRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILicenseAudioRequest::OAILicenseAudioRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILicenseAudioRequest::OAILicenseAudioRequest() {
    this->initializeModel();
}

OAILicenseAudioRequest::~OAILicenseAudioRequest() {}

void OAILicenseAudioRequest::initializeModel() {

    m_audio_isSet = false;
    m_audio_isValid = false;
}

void OAILicenseAudioRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILicenseAudioRequest::fromJsonObject(QJsonObject json) {

    m_audio_isValid = ::OpenAPI::fromJsonValue(m_audio, json[QString("audio")]);
    m_audio_isSet = !json[QString("audio")].isNull() && m_audio_isValid;
}

QString OAILicenseAudioRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILicenseAudioRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_audio.size() > 0) {
        obj.insert(QString("audio"), ::OpenAPI::toJsonValue(m_audio));
    }
    return obj;
}

QList<OAILicenseAudio> OAILicenseAudioRequest::getAudio() const {
    return m_audio;
}
void OAILicenseAudioRequest::setAudio(const QList<OAILicenseAudio> &audio) {
    m_audio = audio;
    m_audio_isSet = true;
}

bool OAILicenseAudioRequest::is_audio_Set() const{
    return m_audio_isSet;
}

bool OAILicenseAudioRequest::is_audio_Valid() const{
    return m_audio_isValid;
}

bool OAILicenseAudioRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_audio.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILicenseAudioRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_audio_isValid && true;
}

} // namespace OpenAPI
