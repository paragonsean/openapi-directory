/**
 * Shutterstock API Explorer
 * The Shutterstock API provides access to Shutterstock's library of media, as well as information about customers' accounts and the contributors that provide the media.
 *
 * The version of the OpenAPI document: 1.1.32
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICatalogCollection.h
 *
 * Catalog collection
 */

#ifndef OAICatalogCollection_H
#define OAICatalogCollection_H

#include <QJsonObject>

#include "OAICatalogCollectionItem.h"
#include "OAICatalogCollectionRoleAssignments.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICatalogCollectionItem;
class OAICatalogCollectionRoleAssignments;

class OAICatalogCollection : public OAIObject {
public:
    OAICatalogCollection();
    OAICatalogCollection(QString json);
    ~OAICatalogCollection() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAICatalogCollectionItem getCoverAsset() const;
    void setCoverAsset(const OAICatalogCollectionItem &cover_asset);
    bool is_cover_asset_Set() const;
    bool is_cover_asset_Valid() const;

    QDateTime getCreatedTime() const;
    void setCreatedTime(const QDateTime &created_time);
    bool is_created_time_Set() const;
    bool is_created_time_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAICatalogCollectionRoleAssignments getRoleAssignments() const;
    void setRoleAssignments(const OAICatalogCollectionRoleAssignments &role_assignments);
    bool is_role_assignments_Set() const;
    bool is_role_assignments_Valid() const;

    double getTotalItemCount() const;
    void setTotalItemCount(const double &total_item_count);
    bool is_total_item_count_Set() const;
    bool is_total_item_count_Valid() const;

    QDateTime getUpdatedTime() const;
    void setUpdatedTime(const QDateTime &updated_time);
    bool is_updated_time_Set() const;
    bool is_updated_time_Valid() const;

    QString getVisibility() const;
    void setVisibility(const QString &visibility);
    bool is_visibility_Set() const;
    bool is_visibility_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAICatalogCollectionItem m_cover_asset;
    bool m_cover_asset_isSet;
    bool m_cover_asset_isValid;

    QDateTime m_created_time;
    bool m_created_time_isSet;
    bool m_created_time_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAICatalogCollectionRoleAssignments m_role_assignments;
    bool m_role_assignments_isSet;
    bool m_role_assignments_isValid;

    double m_total_item_count;
    bool m_total_item_count_isSet;
    bool m_total_item_count_isValid;

    QDateTime m_updated_time;
    bool m_updated_time_isSet;
    bool m_updated_time_isValid;

    QString m_visibility;
    bool m_visibility_isSet;
    bool m_visibility_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICatalogCollection)

#endif // OAICatalogCollection_H
