/**
 * Shutterstock API Explorer
 * The Shutterstock API provides access to Shutterstock's library of media, as well as information about customers' accounts and the contributors that provide the media.
 *
 * The version of the OpenAPI document: 1.1.32
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAudioAssets.h
 *
 * Files that are available as part of an audio asset
 */

#ifndef OAIAudioAssets_H
#define OAIAudioAssets_H

#include <QJsonObject>

#include "OAIAudioAssetDetails.h"
#include "OAIShortsLoopsStems.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAudioAssetDetails;
class OAIShortsLoopsStems;

class OAIAudioAssets : public OAIObject {
public:
    OAIAudioAssets();
    OAIAudioAssets(QString json);
    ~OAIAudioAssets() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAudioAssetDetails getAlbumArt() const;
    void setAlbumArt(const OAIAudioAssetDetails &album_art);
    bool is_album_art_Set() const;
    bool is_album_art_Valid() const;

    OAIAudioAssetDetails getCleanAudio() const;
    void setCleanAudio(const OAIAudioAssetDetails &clean_audio);
    bool is_clean_audio_Set() const;
    bool is_clean_audio_Valid() const;

    OAIAudioAssetDetails getOriginalAudio() const;
    void setOriginalAudio(const OAIAudioAssetDetails &original_audio);
    bool is_original_audio_Set() const;
    bool is_original_audio_Valid() const;

    OAIAudioAssetDetails getPreviewMp3() const;
    void setPreviewMp3(const OAIAudioAssetDetails &preview_mp3);
    bool is_preview_mp3_Set() const;
    bool is_preview_mp3_Valid() const;

    OAIAudioAssetDetails getPreviewOgg() const;
    void setPreviewOgg(const OAIAudioAssetDetails &preview_ogg);
    bool is_preview_ogg_Set() const;
    bool is_preview_ogg_Valid() const;

    OAIShortsLoopsStems getShortsLoopsStems() const;
    void setShortsLoopsStems(const OAIShortsLoopsStems &shorts_loops_stems);
    bool is_shorts_loops_stems_Set() const;
    bool is_shorts_loops_stems_Valid() const;

    OAIAudioAssetDetails getWaveform() const;
    void setWaveform(const OAIAudioAssetDetails &waveform);
    bool is_waveform_Set() const;
    bool is_waveform_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAudioAssetDetails m_album_art;
    bool m_album_art_isSet;
    bool m_album_art_isValid;

    OAIAudioAssetDetails m_clean_audio;
    bool m_clean_audio_isSet;
    bool m_clean_audio_isValid;

    OAIAudioAssetDetails m_original_audio;
    bool m_original_audio_isSet;
    bool m_original_audio_isValid;

    OAIAudioAssetDetails m_preview_mp3;
    bool m_preview_mp3_isSet;
    bool m_preview_mp3_isValid;

    OAIAudioAssetDetails m_preview_ogg;
    bool m_preview_ogg_isSet;
    bool m_preview_ogg_isValid;

    OAIShortsLoopsStems m_shorts_loops_stems;
    bool m_shorts_loops_stems_isSet;
    bool m_shorts_loops_stems_isValid;

    OAIAudioAssetDetails m_waveform;
    bool m_waveform_isSet;
    bool m_waveform_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAudioAssets)

#endif // OAIAudioAssets_H
