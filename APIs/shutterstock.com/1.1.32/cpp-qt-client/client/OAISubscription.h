/**
 * Shutterstock API Explorer
 * The Shutterstock API provides access to Shutterstock's library of media, as well as information about customers' accounts and the contributors that provide the media.
 *
 * The version of the OpenAPI document: 1.1.32
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISubscription.h
 *
 * Subscription information
 */

#ifndef OAISubscription_H
#define OAISubscription_H

#include <QJsonObject>

#include "OAIAllotment.h"
#include "OAILicenseFormat.h"
#include "OAIObject.h"
#include "OAIPrice.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAllotment;
class OAILicenseFormat;
class OAIPrice;

class OAISubscription : public OAIObject {
public:
    OAISubscription();
    OAISubscription(QString json);
    ~OAISubscription() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAllotment getAllotment() const;
    void setAllotment(const OAIAllotment &allotment);
    bool is_allotment_Set() const;
    bool is_allotment_Valid() const;

    QString getAssetType() const;
    void setAssetType(const QString &asset_type);
    bool is_asset_type_Set() const;
    bool is_asset_type_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QDateTime getExpirationTime() const;
    void setExpirationTime(const QDateTime &expiration_time);
    bool is_expiration_time_Set() const;
    bool is_expiration_time_Valid() const;

    QList<OAILicenseFormat> getFormats() const;
    void setFormats(const QList<OAILicenseFormat> &formats);
    bool is_formats_Set() const;
    bool is_formats_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getLicense() const;
    void setLicense(const QString &license);
    bool is_license_Set() const;
    bool is_license_Valid() const;

    OAIObject getMetadata() const;
    void setMetadata(const OAIObject &metadata);
    bool is_metadata_Set() const;
    bool is_metadata_Valid() const;

    OAIPrice getPricePerDownload() const;
    void setPricePerDownload(const OAIPrice &price_per_download);
    bool is_price_per_download_Set() const;
    bool is_price_per_download_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAllotment m_allotment;
    bool m_allotment_isSet;
    bool m_allotment_isValid;

    QString m_asset_type;
    bool m_asset_type_isSet;
    bool m_asset_type_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QDateTime m_expiration_time;
    bool m_expiration_time_isSet;
    bool m_expiration_time_isValid;

    QList<OAILicenseFormat> m_formats;
    bool m_formats_isSet;
    bool m_formats_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_license;
    bool m_license_isSet;
    bool m_license_isValid;

    OAIObject m_metadata;
    bool m_metadata_isSet;
    bool m_metadata_isValid;

    OAIPrice m_price_per_download;
    bool m_price_per_download_isSet;
    bool m_price_per_download_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISubscription)

#endif // OAISubscription_H
