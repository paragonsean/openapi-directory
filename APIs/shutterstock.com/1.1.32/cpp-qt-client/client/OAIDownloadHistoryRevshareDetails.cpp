/**
 * Shutterstock API Explorer
 * The Shutterstock API provides access to Shutterstock's library of media, as well as information about customers' accounts and the contributors that provide the media.
 *
 * The version of the OpenAPI document: 1.1.32
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDownloadHistoryRevshareDetails.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDownloadHistoryRevshareDetails::OAIDownloadHistoryRevshareDetails(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDownloadHistoryRevshareDetails::OAIDownloadHistoryRevshareDetails() {
    this->initializeModel();
}

OAIDownloadHistoryRevshareDetails::~OAIDownloadHistoryRevshareDetails() {}

void OAIDownloadHistoryRevshareDetails::initializeModel() {

    m_purchase_amount_isSet = false;
    m_purchase_amount_isValid = false;

    m_purchase_currency_isSet = false;
    m_purchase_currency_isValid = false;
}

void OAIDownloadHistoryRevshareDetails::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDownloadHistoryRevshareDetails::fromJsonObject(QJsonObject json) {

    m_purchase_amount_isValid = ::OpenAPI::fromJsonValue(m_purchase_amount, json[QString("purchase_amount")]);
    m_purchase_amount_isSet = !json[QString("purchase_amount")].isNull() && m_purchase_amount_isValid;

    m_purchase_currency_isValid = ::OpenAPI::fromJsonValue(m_purchase_currency, json[QString("purchase_currency")]);
    m_purchase_currency_isSet = !json[QString("purchase_currency")].isNull() && m_purchase_currency_isValid;
}

QString OAIDownloadHistoryRevshareDetails::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDownloadHistoryRevshareDetails::asJsonObject() const {
    QJsonObject obj;
    if (m_purchase_amount_isSet) {
        obj.insert(QString("purchase_amount"), ::OpenAPI::toJsonValue(m_purchase_amount));
    }
    if (m_purchase_currency_isSet) {
        obj.insert(QString("purchase_currency"), ::OpenAPI::toJsonValue(m_purchase_currency));
    }
    return obj;
}

QString OAIDownloadHistoryRevshareDetails::getPurchaseAmount() const {
    return m_purchase_amount;
}
void OAIDownloadHistoryRevshareDetails::setPurchaseAmount(const QString &purchase_amount) {
    m_purchase_amount = purchase_amount;
    m_purchase_amount_isSet = true;
}

bool OAIDownloadHistoryRevshareDetails::is_purchase_amount_Set() const{
    return m_purchase_amount_isSet;
}

bool OAIDownloadHistoryRevshareDetails::is_purchase_amount_Valid() const{
    return m_purchase_amount_isValid;
}

QString OAIDownloadHistoryRevshareDetails::getPurchaseCurrency() const {
    return m_purchase_currency;
}
void OAIDownloadHistoryRevshareDetails::setPurchaseCurrency(const QString &purchase_currency) {
    m_purchase_currency = purchase_currency;
    m_purchase_currency_isSet = true;
}

bool OAIDownloadHistoryRevshareDetails::is_purchase_currency_Set() const{
    return m_purchase_currency_isSet;
}

bool OAIDownloadHistoryRevshareDetails::is_purchase_currency_Valid() const{
    return m_purchase_currency_isValid;
}

bool OAIDownloadHistoryRevshareDetails::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_purchase_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_purchase_currency_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDownloadHistoryRevshareDetails::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_purchase_amount_isValid && m_purchase_currency_isValid && true;
}

} // namespace OpenAPI
