# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.license_sfx import LicenseSFX
from openapi_server import util


class LicenseSFXRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, sound_effects: List[LicenseSFX]=None):
        """LicenseSFXRequest - a model defined in OpenAPI

        :param sound_effects: The sound_effects of this LicenseSFXRequest.
        """
        self.openapi_types = {
            'sound_effects': List[LicenseSFX]
        }

        self.attribute_map = {
            'sound_effects': 'sound_effects'
        }

        self._sound_effects = sound_effects

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LicenseSFXRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LicenseSFXRequest of this LicenseSFXRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def sound_effects(self):
        """Gets the sound_effects of this LicenseSFXRequest.

        Sound effects to license for

        :return: The sound_effects of this LicenseSFXRequest.
        :rtype: List[LicenseSFX]
        """
        return self._sound_effects

    @sound_effects.setter
    def sound_effects(self, sound_effects):
        """Sets the sound_effects of this LicenseSFXRequest.

        Sound effects to license for

        :param sound_effects: The sound_effects of this LicenseSFXRequest.
        :type sound_effects: List[LicenseSFX]
        """
        if sound_effects is None:
            raise ValueError("Invalid value for `sound_effects`, must not be `None`")

        self._sound_effects = sound_effects
