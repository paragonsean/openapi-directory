# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ContributorProfileSocialMedia(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, facebook: str=None, google_plus: str=None, linkedin: str=None, pinterest: str=None, tumblr: str=None, twitter: str=None):
        """ContributorProfileSocialMedia - a model defined in OpenAPI

        :param facebook: The facebook of this ContributorProfileSocialMedia.
        :param google_plus: The google_plus of this ContributorProfileSocialMedia.
        :param linkedin: The linkedin of this ContributorProfileSocialMedia.
        :param pinterest: The pinterest of this ContributorProfileSocialMedia.
        :param tumblr: The tumblr of this ContributorProfileSocialMedia.
        :param twitter: The twitter of this ContributorProfileSocialMedia.
        """
        self.openapi_types = {
            'facebook': str,
            'google_plus': str,
            'linkedin': str,
            'pinterest': str,
            'tumblr': str,
            'twitter': str
        }

        self.attribute_map = {
            'facebook': 'facebook',
            'google_plus': 'google_plus',
            'linkedin': 'linkedin',
            'pinterest': 'pinterest',
            'tumblr': 'tumblr',
            'twitter': 'twitter'
        }

        self._facebook = facebook
        self._google_plus = google_plus
        self._linkedin = linkedin
        self._pinterest = pinterest
        self._tumblr = tumblr
        self._twitter = twitter

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ContributorProfileSocialMedia':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ContributorProfileSocialMedia of this ContributorProfileSocialMedia.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def facebook(self):
        """Gets the facebook of this ContributorProfileSocialMedia.

        Facebook link for contributor

        :return: The facebook of this ContributorProfileSocialMedia.
        :rtype: str
        """
        return self._facebook

    @facebook.setter
    def facebook(self, facebook):
        """Sets the facebook of this ContributorProfileSocialMedia.

        Facebook link for contributor

        :param facebook: The facebook of this ContributorProfileSocialMedia.
        :type facebook: str
        """

        self._facebook = facebook

    @property
    def google_plus(self):
        """Gets the google_plus of this ContributorProfileSocialMedia.

        Google+ link for contributor

        :return: The google_plus of this ContributorProfileSocialMedia.
        :rtype: str
        """
        return self._google_plus

    @google_plus.setter
    def google_plus(self, google_plus):
        """Sets the google_plus of this ContributorProfileSocialMedia.

        Google+ link for contributor

        :param google_plus: The google_plus of this ContributorProfileSocialMedia.
        :type google_plus: str
        """

        self._google_plus = google_plus

    @property
    def linkedin(self):
        """Gets the linkedin of this ContributorProfileSocialMedia.

        LinkedIn link for contributor

        :return: The linkedin of this ContributorProfileSocialMedia.
        :rtype: str
        """
        return self._linkedin

    @linkedin.setter
    def linkedin(self, linkedin):
        """Sets the linkedin of this ContributorProfileSocialMedia.

        LinkedIn link for contributor

        :param linkedin: The linkedin of this ContributorProfileSocialMedia.
        :type linkedin: str
        """

        self._linkedin = linkedin

    @property
    def pinterest(self):
        """Gets the pinterest of this ContributorProfileSocialMedia.

        Pinterest page for contributor

        :return: The pinterest of this ContributorProfileSocialMedia.
        :rtype: str
        """
        return self._pinterest

    @pinterest.setter
    def pinterest(self, pinterest):
        """Sets the pinterest of this ContributorProfileSocialMedia.

        Pinterest page for contributor

        :param pinterest: The pinterest of this ContributorProfileSocialMedia.
        :type pinterest: str
        """

        self._pinterest = pinterest

    @property
    def tumblr(self):
        """Gets the tumblr of this ContributorProfileSocialMedia.

        Tumblr link for contributor

        :return: The tumblr of this ContributorProfileSocialMedia.
        :rtype: str
        """
        return self._tumblr

    @tumblr.setter
    def tumblr(self, tumblr):
        """Sets the tumblr of this ContributorProfileSocialMedia.

        Tumblr link for contributor

        :param tumblr: The tumblr of this ContributorProfileSocialMedia.
        :type tumblr: str
        """

        self._tumblr = tumblr

    @property
    def twitter(self):
        """Gets the twitter of this ContributorProfileSocialMedia.

        Twitter link for contributor

        :return: The twitter of this ContributorProfileSocialMedia.
        :rtype: str
        """
        return self._twitter

    @twitter.setter
    def twitter(self, twitter):
        """Sets the twitter of this ContributorProfileSocialMedia.

        Twitter link for contributor

        :param twitter: The twitter of this ContributorProfileSocialMedia.
        :type twitter: str
        """

        self._twitter = twitter
