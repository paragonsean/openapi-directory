# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.video_preview_url import VideoPreviewUrl
from openapi_server.models.video_size_details import VideoSizeDetails
from openapi_server import util


class EditorialVideoAssets(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, original: VideoSizeDetails=None, preview_mp4: VideoPreviewUrl=None, preview_webm: VideoPreviewUrl=None, thumb_jpg: VideoPreviewUrl=None):
        """EditorialVideoAssets - a model defined in OpenAPI

        :param original: The original of this EditorialVideoAssets.
        :param preview_mp4: The preview_mp4 of this EditorialVideoAssets.
        :param preview_webm: The preview_webm of this EditorialVideoAssets.
        :param thumb_jpg: The thumb_jpg of this EditorialVideoAssets.
        """
        self.openapi_types = {
            'original': VideoSizeDetails,
            'preview_mp4': VideoPreviewUrl,
            'preview_webm': VideoPreviewUrl,
            'thumb_jpg': VideoPreviewUrl
        }

        self.attribute_map = {
            'original': 'original',
            'preview_mp4': 'preview_mp4',
            'preview_webm': 'preview_webm',
            'thumb_jpg': 'thumb_jpg'
        }

        self._original = original
        self._preview_mp4 = preview_mp4
        self._preview_webm = preview_webm
        self._thumb_jpg = thumb_jpg

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EditorialVideoAssets':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EditorialVideoAssets of this EditorialVideoAssets.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def original(self):
        """Gets the original of this EditorialVideoAssets.


        :return: The original of this EditorialVideoAssets.
        :rtype: VideoSizeDetails
        """
        return self._original

    @original.setter
    def original(self, original):
        """Sets the original of this EditorialVideoAssets.


        :param original: The original of this EditorialVideoAssets.
        :type original: VideoSizeDetails
        """

        self._original = original

    @property
    def preview_mp4(self):
        """Gets the preview_mp4 of this EditorialVideoAssets.


        :return: The preview_mp4 of this EditorialVideoAssets.
        :rtype: VideoPreviewUrl
        """
        return self._preview_mp4

    @preview_mp4.setter
    def preview_mp4(self, preview_mp4):
        """Sets the preview_mp4 of this EditorialVideoAssets.


        :param preview_mp4: The preview_mp4 of this EditorialVideoAssets.
        :type preview_mp4: VideoPreviewUrl
        """

        self._preview_mp4 = preview_mp4

    @property
    def preview_webm(self):
        """Gets the preview_webm of this EditorialVideoAssets.


        :return: The preview_webm of this EditorialVideoAssets.
        :rtype: VideoPreviewUrl
        """
        return self._preview_webm

    @preview_webm.setter
    def preview_webm(self, preview_webm):
        """Sets the preview_webm of this EditorialVideoAssets.


        :param preview_webm: The preview_webm of this EditorialVideoAssets.
        :type preview_webm: VideoPreviewUrl
        """

        self._preview_webm = preview_webm

    @property
    def thumb_jpg(self):
        """Gets the thumb_jpg of this EditorialVideoAssets.


        :return: The thumb_jpg of this EditorialVideoAssets.
        :rtype: VideoPreviewUrl
        """
        return self._thumb_jpg

    @thumb_jpg.setter
    def thumb_jpg(self, thumb_jpg):
        """Sets the thumb_jpg of this EditorialVideoAssets.


        :param thumb_jpg: The thumb_jpg of this EditorialVideoAssets.
        :type thumb_jpg: VideoPreviewUrl
        """

        self._thumb_jpg = thumb_jpg
