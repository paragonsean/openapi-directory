# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.audio_render_timeline import AudioRenderTimeline
from openapi_server import util


class CreateAudioRender(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, filename: str=None, preset: str=None, timeline: AudioRenderTimeline=None):
        """CreateAudioRender - a model defined in OpenAPI

        :param filename: The filename of this CreateAudioRender.
        :param preset: The preset of this CreateAudioRender.
        :param timeline: The timeline of this CreateAudioRender.
        """
        self.openapi_types = {
            'filename': str,
            'preset': str,
            'timeline': AudioRenderTimeline
        }

        self.attribute_map = {
            'filename': 'filename',
            'preset': 'preset',
            'timeline': 'timeline'
        }

        self._filename = filename
        self._preset = preset
        self._timeline = timeline

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateAudioRender':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateAudioRender of this CreateAudioRender.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def filename(self):
        """Gets the filename of this CreateAudioRender.

        A user-specified file name suggestion; this file name becomes the filename property of the Content-Disposition header when the user downloads the rendered audio file

        :return: The filename of this CreateAudioRender.
        :rtype: str
        """
        return self._filename

    @filename.setter
    def filename(self, filename):
        """Sets the filename of this CreateAudioRender.

        A user-specified file name suggestion; this file name becomes the filename property of the Content-Disposition header when the user downloads the rendered audio file

        :param filename: The filename of this CreateAudioRender.
        :type filename: str
        """
        if filename is None:
            raise ValueError("Invalid value for `filename`, must not be `None`")

        self._filename = filename

    @property
    def preset(self):
        """Gets the preset of this CreateAudioRender.

        File format, such as MP3 file, combined WAV file, or individual track WAV files

        :return: The preset of this CreateAudioRender.
        :rtype: str
        """
        return self._preset

    @preset.setter
    def preset(self, preset):
        """Sets the preset of this CreateAudioRender.

        File format, such as MP3 file, combined WAV file, or individual track WAV files

        :param preset: The preset of this CreateAudioRender.
        :type preset: str
        """
        allowed_values = ["MASTER_MP3", "MASTER_WAV", "STEMS_WAV"]  # noqa: E501
        if preset not in allowed_values:
            raise ValueError(
                "Invalid value for `preset` ({0}), must be one of {1}"
                .format(preset, allowed_values)
            )

        self._preset = preset

    @property
    def timeline(self):
        """Gets the timeline of this CreateAudioRender.


        :return: The timeline of this CreateAudioRender.
        :rtype: AudioRenderTimeline
        """
        return self._timeline

    @timeline.setter
    def timeline(self, timeline):
        """Sets the timeline of this CreateAudioRender.


        :param timeline: The timeline of this CreateAudioRender.
        :type timeline: AudioRenderTimeline
        """
        if timeline is None:
            raise ValueError("Invalid value for `timeline`, must not be `None`")

        self._timeline = timeline
