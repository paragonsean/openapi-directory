# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class InsightsLabelPerformanceInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, percentile_performance: float=None):
        """InsightsLabelPerformanceInner - a model defined in OpenAPI

        :param name: The name of this InsightsLabelPerformanceInner.
        :param percentile_performance: The percentile_performance of this InsightsLabelPerformanceInner.
        """
        self.openapi_types = {
            'name': str,
            'percentile_performance': float
        }

        self.attribute_map = {
            'name': 'name',
            'percentile_performance': 'percentile_performance'
        }

        self._name = name
        self._percentile_performance = percentile_performance

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InsightsLabelPerformanceInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Insights_label_performance_inner of this InsightsLabelPerformanceInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this InsightsLabelPerformanceInner.


        :return: The name of this InsightsLabelPerformanceInner.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this InsightsLabelPerformanceInner.


        :param name: The name of this InsightsLabelPerformanceInner.
        :type name: str
        """

        self._name = name

    @property
    def percentile_performance(self):
        """Gets the percentile_performance of this InsightsLabelPerformanceInner.


        :return: The percentile_performance of this InsightsLabelPerformanceInner.
        :rtype: float
        """
        return self._percentile_performance

    @percentile_performance.setter
    def percentile_performance(self, percentile_performance):
        """Sets the percentile_performance of this InsightsLabelPerformanceInner.


        :param percentile_performance: The percentile_performance of this InsightsLabelPerformanceInner.
        :type percentile_performance: float
        """

        self._percentile_performance = percentile_performance
