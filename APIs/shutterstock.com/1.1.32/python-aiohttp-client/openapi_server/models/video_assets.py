# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.url import Url
from openapi_server.models.urls import Urls
from openapi_server.models.video_size_details import VideoSizeDetails
from openapi_server import util


class VideoAssets(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, _4k: VideoSizeDetails=None, hd: VideoSizeDetails=None, preview_jpg: Url=None, preview_mp4: Url=None, preview_webm: Url=None, sd: VideoSizeDetails=None, thumb_jpg: Url=None, thumb_jpgs: Urls=None, thumb_mp4: Url=None, thumb_webm: Url=None, web: VideoSizeDetails=None):
        """VideoAssets - a model defined in OpenAPI

        :param _4k: The _4k of this VideoAssets.
        :param hd: The hd of this VideoAssets.
        :param preview_jpg: The preview_jpg of this VideoAssets.
        :param preview_mp4: The preview_mp4 of this VideoAssets.
        :param preview_webm: The preview_webm of this VideoAssets.
        :param sd: The sd of this VideoAssets.
        :param thumb_jpg: The thumb_jpg of this VideoAssets.
        :param thumb_jpgs: The thumb_jpgs of this VideoAssets.
        :param thumb_mp4: The thumb_mp4 of this VideoAssets.
        :param thumb_webm: The thumb_webm of this VideoAssets.
        :param web: The web of this VideoAssets.
        """
        self.openapi_types = {
            '_4k': VideoSizeDetails,
            'hd': VideoSizeDetails,
            'preview_jpg': Url,
            'preview_mp4': Url,
            'preview_webm': Url,
            'sd': VideoSizeDetails,
            'thumb_jpg': Url,
            'thumb_jpgs': Urls,
            'thumb_mp4': Url,
            'thumb_webm': Url,
            'web': VideoSizeDetails
        }

        self.attribute_map = {
            '_4k': '4k',
            'hd': 'hd',
            'preview_jpg': 'preview_jpg',
            'preview_mp4': 'preview_mp4',
            'preview_webm': 'preview_webm',
            'sd': 'sd',
            'thumb_jpg': 'thumb_jpg',
            'thumb_jpgs': 'thumb_jpgs',
            'thumb_mp4': 'thumb_mp4',
            'thumb_webm': 'thumb_webm',
            'web': 'web'
        }

        self.__4k = _4k
        self._hd = hd
        self._preview_jpg = preview_jpg
        self._preview_mp4 = preview_mp4
        self._preview_webm = preview_webm
        self._sd = sd
        self._thumb_jpg = thumb_jpg
        self._thumb_jpgs = thumb_jpgs
        self._thumb_mp4 = thumb_mp4
        self._thumb_webm = thumb_webm
        self._web = web

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VideoAssets':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VideoAssets of this VideoAssets.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def _4k(self):
        """Gets the _4k of this VideoAssets.


        :return: The _4k of this VideoAssets.
        :rtype: VideoSizeDetails
        """
        return self.__4k

    @_4k.setter
    def _4k(self, _4k):
        """Sets the _4k of this VideoAssets.


        :param _4k: The _4k of this VideoAssets.
        :type _4k: VideoSizeDetails
        """

        self.__4k = _4k

    @property
    def hd(self):
        """Gets the hd of this VideoAssets.


        :return: The hd of this VideoAssets.
        :rtype: VideoSizeDetails
        """
        return self._hd

    @hd.setter
    def hd(self, hd):
        """Sets the hd of this VideoAssets.


        :param hd: The hd of this VideoAssets.
        :type hd: VideoSizeDetails
        """

        self._hd = hd

    @property
    def preview_jpg(self):
        """Gets the preview_jpg of this VideoAssets.


        :return: The preview_jpg of this VideoAssets.
        :rtype: Url
        """
        return self._preview_jpg

    @preview_jpg.setter
    def preview_jpg(self, preview_jpg):
        """Sets the preview_jpg of this VideoAssets.


        :param preview_jpg: The preview_jpg of this VideoAssets.
        :type preview_jpg: Url
        """

        self._preview_jpg = preview_jpg

    @property
    def preview_mp4(self):
        """Gets the preview_mp4 of this VideoAssets.


        :return: The preview_mp4 of this VideoAssets.
        :rtype: Url
        """
        return self._preview_mp4

    @preview_mp4.setter
    def preview_mp4(self, preview_mp4):
        """Sets the preview_mp4 of this VideoAssets.


        :param preview_mp4: The preview_mp4 of this VideoAssets.
        :type preview_mp4: Url
        """

        self._preview_mp4 = preview_mp4

    @property
    def preview_webm(self):
        """Gets the preview_webm of this VideoAssets.


        :return: The preview_webm of this VideoAssets.
        :rtype: Url
        """
        return self._preview_webm

    @preview_webm.setter
    def preview_webm(self, preview_webm):
        """Sets the preview_webm of this VideoAssets.


        :param preview_webm: The preview_webm of this VideoAssets.
        :type preview_webm: Url
        """

        self._preview_webm = preview_webm

    @property
    def sd(self):
        """Gets the sd of this VideoAssets.


        :return: The sd of this VideoAssets.
        :rtype: VideoSizeDetails
        """
        return self._sd

    @sd.setter
    def sd(self, sd):
        """Sets the sd of this VideoAssets.


        :param sd: The sd of this VideoAssets.
        :type sd: VideoSizeDetails
        """

        self._sd = sd

    @property
    def thumb_jpg(self):
        """Gets the thumb_jpg of this VideoAssets.


        :return: The thumb_jpg of this VideoAssets.
        :rtype: Url
        """
        return self._thumb_jpg

    @thumb_jpg.setter
    def thumb_jpg(self, thumb_jpg):
        """Sets the thumb_jpg of this VideoAssets.


        :param thumb_jpg: The thumb_jpg of this VideoAssets.
        :type thumb_jpg: Url
        """

        self._thumb_jpg = thumb_jpg

    @property
    def thumb_jpgs(self):
        """Gets the thumb_jpgs of this VideoAssets.


        :return: The thumb_jpgs of this VideoAssets.
        :rtype: Urls
        """
        return self._thumb_jpgs

    @thumb_jpgs.setter
    def thumb_jpgs(self, thumb_jpgs):
        """Sets the thumb_jpgs of this VideoAssets.


        :param thumb_jpgs: The thumb_jpgs of this VideoAssets.
        :type thumb_jpgs: Urls
        """

        self._thumb_jpgs = thumb_jpgs

    @property
    def thumb_mp4(self):
        """Gets the thumb_mp4 of this VideoAssets.


        :return: The thumb_mp4 of this VideoAssets.
        :rtype: Url
        """
        return self._thumb_mp4

    @thumb_mp4.setter
    def thumb_mp4(self, thumb_mp4):
        """Sets the thumb_mp4 of this VideoAssets.


        :param thumb_mp4: The thumb_mp4 of this VideoAssets.
        :type thumb_mp4: Url
        """

        self._thumb_mp4 = thumb_mp4

    @property
    def thumb_webm(self):
        """Gets the thumb_webm of this VideoAssets.


        :return: The thumb_webm of this VideoAssets.
        :rtype: Url
        """
        return self._thumb_webm

    @thumb_webm.setter
    def thumb_webm(self, thumb_webm):
        """Sets the thumb_webm of this VideoAssets.


        :param thumb_webm: The thumb_webm of this VideoAssets.
        :type thumb_webm: Url
        """

        self._thumb_webm = thumb_webm

    @property
    def web(self):
        """Gets the web of this VideoAssets.


        :return: The web of this VideoAssets.
        :rtype: VideoSizeDetails
        """
        return self._web

    @web.setter
    def web(self, web):
        """Sets the web of this VideoAssets.


        :param web: The web of this VideoAssets.
        :type web: VideoSizeDetails
        """

        self._web = web
