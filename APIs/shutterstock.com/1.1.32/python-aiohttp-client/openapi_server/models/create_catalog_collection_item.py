# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.create_catalog_collection_item_asset import CreateCatalogCollectionItemAsset
from openapi_server import util


class CreateCatalogCollectionItem(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, asset: CreateCatalogCollectionItemAsset=None):
        """CreateCatalogCollectionItem - a model defined in OpenAPI

        :param asset: The asset of this CreateCatalogCollectionItem.
        """
        self.openapi_types = {
            'asset': CreateCatalogCollectionItemAsset
        }

        self.attribute_map = {
            'asset': 'asset'
        }

        self._asset = asset

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateCatalogCollectionItem':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateCatalogCollectionItem of this CreateCatalogCollectionItem.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def asset(self):
        """Gets the asset of this CreateCatalogCollectionItem.


        :return: The asset of this CreateCatalogCollectionItem.
        :rtype: CreateCatalogCollectionItemAsset
        """
        return self._asset

    @asset.setter
    def asset(self, asset):
        """Sets the asset of this CreateCatalogCollectionItem.


        :param asset: The asset of this CreateCatalogCollectionItem.
        :type asset: CreateCatalogCollectionItemAsset
        """
        if asset is None:
            raise ValueError("Invalid value for `asset`, must not be `None`")

        self._asset = asset
