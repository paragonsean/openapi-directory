# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.cookie import Cookie
from openapi_server import util


class RedownloadImage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, auth_cookie: Cookie=None, show_modal: bool=None, size: str=None, verification_code: str=None):
        """RedownloadImage - a model defined in OpenAPI

        :param auth_cookie: The auth_cookie of this RedownloadImage.
        :param show_modal: The show_modal of this RedownloadImage.
        :param size: The size of this RedownloadImage.
        :param verification_code: The verification_code of this RedownloadImage.
        """
        self.openapi_types = {
            'auth_cookie': Cookie,
            'show_modal': bool,
            'size': str,
            'verification_code': str
        }

        self.attribute_map = {
            'auth_cookie': 'auth_cookie',
            'show_modal': 'show_modal',
            'size': 'size',
            'verification_code': 'verification_code'
        }

        self._auth_cookie = auth_cookie
        self._show_modal = show_modal
        self._size = size
        self._verification_code = verification_code

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RedownloadImage':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RedownloadImage of this RedownloadImage.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def auth_cookie(self):
        """Gets the auth_cookie of this RedownloadImage.


        :return: The auth_cookie of this RedownloadImage.
        :rtype: Cookie
        """
        return self._auth_cookie

    @auth_cookie.setter
    def auth_cookie(self, auth_cookie):
        """Sets the auth_cookie of this RedownloadImage.


        :param auth_cookie: The auth_cookie of this RedownloadImage.
        :type auth_cookie: Cookie
        """

        self._auth_cookie = auth_cookie

    @property
    def show_modal(self):
        """Gets the show_modal of this RedownloadImage.

        (Deprecated)

        :return: The show_modal of this RedownloadImage.
        :rtype: bool
        """
        return self._show_modal

    @show_modal.setter
    def show_modal(self, show_modal):
        """Sets the show_modal of this RedownloadImage.

        (Deprecated)

        :param show_modal: The show_modal of this RedownloadImage.
        :type show_modal: bool
        """

        self._show_modal = show_modal

    @property
    def size(self):
        """Gets the size of this RedownloadImage.

        Size of the image

        :return: The size of this RedownloadImage.
        :rtype: str
        """
        return self._size

    @size.setter
    def size(self, size):
        """Sets the size of this RedownloadImage.

        Size of the image

        :param size: The size of this RedownloadImage.
        :type size: str
        """
        allowed_values = ["small", "medium", "huge", "supersize", "vector"]  # noqa: E501
        if size not in allowed_values:
            raise ValueError(
                "Invalid value for `size` ({0}), must be one of {1}"
                .format(size, allowed_values)
            )

        self._size = size

    @property
    def verification_code(self):
        """Gets the verification_code of this RedownloadImage.

        (Deprecated)

        :return: The verification_code of this RedownloadImage.
        :rtype: str
        """
        return self._verification_code

    @verification_code.setter
    def verification_code(self, verification_code):
        """Sets the verification_code of this RedownloadImage.

        (Deprecated)

        :param verification_code: The verification_code of this RedownloadImage.
        :type verification_code: str
        """

        self._verification_code = verification_code
