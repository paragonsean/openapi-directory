# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Language(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    AR = 'ar'
    BG = 'bg'
    BN = 'bn'
    CS = 'cs'
    DA = 'da'
    DE = 'de'
    EL = 'el'
    EN = 'en'
    ES = 'es'
    FI = 'fi'
    FR = 'fr'
    GU = 'gu'
    HE = 'he'
    HI = 'hi'
    HR = 'hr'
    HU = 'hu'
    ID = 'id'
    IT = 'it'
    JA = 'ja'
    KN = 'kn'
    KO = 'ko'
    ML = 'ml'
    MR = 'mr'
    NB = 'nb'
    NL = 'nl'
    OR = 'or'
    PL = 'pl'
    PT = 'pt'
    RO = 'ro'
    RU = 'ru'
    SK = 'sk'
    SL = 'sl'
    SV = 'sv'
    TA = 'ta'
    TE = 'te'
    TH = 'th'
    TR = 'tr'
    UK = 'uk'
    UR = 'ur'
    VI = 'vi'
    ZH = 'zh'
    ZH_MINUS_HANT = 'zh-Hant'

    def __init__(self):
        """Language - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Language':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Language of this Language.
        """
        return util.deserialize_model(dikt, cls)
