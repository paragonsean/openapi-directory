# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.descriptors import Descriptors
from openapi_server import util


class DescriptorsListResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, data: List[Descriptors]=None, page: int=None, per_page: int=None):
        """DescriptorsListResult - a model defined in OpenAPI

        :param data: The data of this DescriptorsListResult.
        :param page: The page of this DescriptorsListResult.
        :param per_page: The per_page of this DescriptorsListResult.
        """
        self.openapi_types = {
            'data': List[Descriptors],
            'page': int,
            'per_page': int
        }

        self.attribute_map = {
            'data': 'data',
            'page': 'page',
            'per_page': 'per_page'
        }

        self._data = data
        self._page = page
        self._per_page = per_page

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescriptorsListResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescriptorsListResult of this DescriptorsListResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def data(self):
        """Gets the data of this DescriptorsListResult.

        List of descriptors

        :return: The data of this DescriptorsListResult.
        :rtype: List[Descriptors]
        """
        return self._data

    @data.setter
    def data(self, data):
        """Sets the data of this DescriptorsListResult.

        List of descriptors

        :param data: The data of this DescriptorsListResult.
        :type data: List[Descriptors]
        """

        self._data = data

    @property
    def page(self):
        """Gets the page of this DescriptorsListResult.

        Current page that is returned

        :return: The page of this DescriptorsListResult.
        :rtype: int
        """
        return self._page

    @page.setter
    def page(self, page):
        """Sets the page of this DescriptorsListResult.

        Current page that is returned

        :param page: The page of this DescriptorsListResult.
        :type page: int
        """

        self._page = page

    @property
    def per_page(self):
        """Gets the per_page of this DescriptorsListResult.

        Number of results per page

        :return: The per_page of this DescriptorsListResult.
        :rtype: int
        """
        return self._per_page

    @per_page.setter
    def per_page(self, per_page):
        """Sets the per_page of this DescriptorsListResult.

        Number of results per page

        :param per_page: The per_page of this DescriptorsListResult.
        :type per_page: int
        """

        self._per_page = per_page
