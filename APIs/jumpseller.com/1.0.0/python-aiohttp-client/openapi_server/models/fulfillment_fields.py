# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class FulfillmentFields(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, external_id: str=None, id: int=None, order_id: str=None, service_type: str=None, shipment_status: str=None, tracking_company: str=None, tracking_number: str=None, type: str=None):
        """FulfillmentFields - a model defined in OpenAPI

        :param external_id: The external_id of this FulfillmentFields.
        :param id: The id of this FulfillmentFields.
        :param order_id: The order_id of this FulfillmentFields.
        :param service_type: The service_type of this FulfillmentFields.
        :param shipment_status: The shipment_status of this FulfillmentFields.
        :param tracking_company: The tracking_company of this FulfillmentFields.
        :param tracking_number: The tracking_number of this FulfillmentFields.
        :param type: The type of this FulfillmentFields.
        """
        self.openapi_types = {
            'external_id': str,
            'id': int,
            'order_id': str,
            'service_type': str,
            'shipment_status': str,
            'tracking_company': str,
            'tracking_number': str,
            'type': str
        }

        self.attribute_map = {
            'external_id': 'external_id',
            'id': 'id',
            'order_id': 'order_id',
            'service_type': 'service_type',
            'shipment_status': 'shipment_status',
            'tracking_company': 'tracking_company',
            'tracking_number': 'tracking_number',
            'type': 'type'
        }

        self._external_id = external_id
        self._id = id
        self._order_id = order_id
        self._service_type = service_type
        self._shipment_status = shipment_status
        self._tracking_company = tracking_company
        self._tracking_number = tracking_number
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FulfillmentFields':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FulfillmentFields of this FulfillmentFields.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def external_id(self):
        """Gets the external_id of this FulfillmentFields.

        Unique identifier of the Fulfillment used by the tracking company

        :return: The external_id of this FulfillmentFields.
        :rtype: str
        """
        return self._external_id

    @external_id.setter
    def external_id(self, external_id):
        """Sets the external_id of this FulfillmentFields.

        Unique identifier of the Fulfillment used by the tracking company

        :param external_id: The external_id of this FulfillmentFields.
        :type external_id: str
        """

        self._external_id = external_id

    @property
    def id(self):
        """Gets the id of this FulfillmentFields.

        Unique identifier of the Fulfillment

        :return: The id of this FulfillmentFields.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this FulfillmentFields.

        Unique identifier of the Fulfillment

        :param id: The id of this FulfillmentFields.
        :type id: int
        """

        self._id = id

    @property
    def order_id(self):
        """Gets the order_id of this FulfillmentFields.

        Order associated with the fulfillment

        :return: The order_id of this FulfillmentFields.
        :rtype: str
        """
        return self._order_id

    @order_id.setter
    def order_id(self, order_id):
        """Sets the order_id of this FulfillmentFields.

        Order associated with the fulfillment

        :param order_id: The order_id of this FulfillmentFields.
        :type order_id: str
        """

        self._order_id = order_id

    @property
    def service_type(self):
        """Gets the service_type of this FulfillmentFields.

        Type of Service requested to the tracking company

        :return: The service_type of this FulfillmentFields.
        :rtype: str
        """
        return self._service_type

    @service_type.setter
    def service_type(self, service_type):
        """Sets the service_type of this FulfillmentFields.

        Type of Service requested to the tracking company

        :param service_type: The service_type of this FulfillmentFields.
        :type service_type: str
        """

        self._service_type = service_type

    @property
    def shipment_status(self):
        """Gets the shipment_status of this FulfillmentFields.

        Status of the fulfillment

        :return: The shipment_status of this FulfillmentFields.
        :rtype: str
        """
        return self._shipment_status

    @shipment_status.setter
    def shipment_status(self, shipment_status):
        """Sets the shipment_status of this FulfillmentFields.

        Status of the fulfillment

        :param shipment_status: The shipment_status of this FulfillmentFields.
        :type shipment_status: str
        """

        self._shipment_status = shipment_status

    @property
    def tracking_company(self):
        """Gets the tracking_company of this FulfillmentFields.

        Tracking company responsible for the fulfillment

        :return: The tracking_company of this FulfillmentFields.
        :rtype: str
        """
        return self._tracking_company

    @tracking_company.setter
    def tracking_company(self, tracking_company):
        """Sets the tracking_company of this FulfillmentFields.

        Tracking company responsible for the fulfillment

        :param tracking_company: The tracking_company of this FulfillmentFields.
        :type tracking_company: str
        """

        self._tracking_company = tracking_company

    @property
    def tracking_number(self):
        """Gets the tracking_number of this FulfillmentFields.

        Tracking Number associated with the fulfillment

        :return: The tracking_number of this FulfillmentFields.
        :rtype: str
        """
        return self._tracking_number

    @tracking_number.setter
    def tracking_number(self, tracking_number):
        """Sets the tracking_number of this FulfillmentFields.

        Tracking Number associated with the fulfillment

        :param tracking_number: The tracking_number of this FulfillmentFields.
        :type tracking_number: str
        """

        self._tracking_number = tracking_number

    @property
    def type(self):
        """Gets the type of this FulfillmentFields.

        Type of fulfillment Service used

        :return: The type of this FulfillmentFields.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this FulfillmentFields.

        Type of fulfillment Service used

        :param type: The type of this FulfillmentFields.
        :type type: str
        """

        self._type = type
