# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class StoreStatsConversions(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, added_to_cart: float=None, checkout: float=None, paid: float=None):
        """StoreStatsConversions - a model defined in OpenAPI

        :param added_to_cart: The added_to_cart of this StoreStatsConversions.
        :param checkout: The checkout of this StoreStatsConversions.
        :param paid: The paid of this StoreStatsConversions.
        """
        self.openapi_types = {
            'added_to_cart': float,
            'checkout': float,
            'paid': float
        }

        self.attribute_map = {
            'added_to_cart': 'added_to_cart',
            'checkout': 'checkout',
            'paid': 'paid'
        }

        self._added_to_cart = added_to_cart
        self._checkout = checkout
        self._paid = paid

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StoreStatsConversions':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StoreStats_conversions of this StoreStatsConversions.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def added_to_cart(self):
        """Gets the added_to_cart of this StoreStatsConversions.

        Total add to cart conversions.

        :return: The added_to_cart of this StoreStatsConversions.
        :rtype: float
        """
        return self._added_to_cart

    @added_to_cart.setter
    def added_to_cart(self, added_to_cart):
        """Sets the added_to_cart of this StoreStatsConversions.

        Total add to cart conversions.

        :param added_to_cart: The added_to_cart of this StoreStatsConversions.
        :type added_to_cart: float
        """

        self._added_to_cart = added_to_cart

    @property
    def checkout(self):
        """Gets the checkout of this StoreStatsConversions.

        Total checkout conversions.

        :return: The checkout of this StoreStatsConversions.
        :rtype: float
        """
        return self._checkout

    @checkout.setter
    def checkout(self, checkout):
        """Sets the checkout of this StoreStatsConversions.

        Total checkout conversions.

        :param checkout: The checkout of this StoreStatsConversions.
        :type checkout: float
        """

        self._checkout = checkout

    @property
    def paid(self):
        """Gets the paid of this StoreStatsConversions.

        Total paid conversions.

        :return: The paid of this StoreStatsConversions.
        :rtype: float
        """
        return self._paid

    @paid.setter
    def paid(self, paid):
        """Sets the paid of this StoreStatsConversions.

        Total paid conversions.

        :param paid: The paid of this StoreStatsConversions.
        :type paid: float
        """

        self._paid = paid
