# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class OrderProductOrderCreate(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, discount: float=None, id: int=None, price: float=None, qty: int=None, variant_id: int=None):
        """OrderProductOrderCreate - a model defined in OpenAPI

        :param discount: The discount of this OrderProductOrderCreate.
        :param id: The id of this OrderProductOrderCreate.
        :param price: The price of this OrderProductOrderCreate.
        :param qty: The qty of this OrderProductOrderCreate.
        :param variant_id: The variant_id of this OrderProductOrderCreate.
        """
        self.openapi_types = {
            'discount': float,
            'id': int,
            'price': float,
            'qty': int,
            'variant_id': int
        }

        self.attribute_map = {
            'discount': 'discount',
            'id': 'id',
            'price': 'price',
            'qty': 'qty',
            'variant_id': 'variant_id'
        }

        self._discount = discount
        self._id = id
        self._price = price
        self._qty = qty
        self._variant_id = variant_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OrderProductOrderCreate':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OrderProductOrderCreate of this OrderProductOrderCreate.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def discount(self):
        """Gets the discount of this OrderProductOrderCreate.

        Discount of the Order Product

        :return: The discount of this OrderProductOrderCreate.
        :rtype: float
        """
        return self._discount

    @discount.setter
    def discount(self, discount):
        """Sets the discount of this OrderProductOrderCreate.

        Discount of the Order Product

        :param discount: The discount of this OrderProductOrderCreate.
        :type discount: float
        """

        self._discount = discount

    @property
    def id(self):
        """Gets the id of this OrderProductOrderCreate.

        Unique identifier of the original Product

        :return: The id of this OrderProductOrderCreate.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this OrderProductOrderCreate.

        Unique identifier of the original Product

        :param id: The id of this OrderProductOrderCreate.
        :type id: int
        """

        self._id = id

    @property
    def price(self):
        """Gets the price of this OrderProductOrderCreate.

        Price of the Order Product

        :return: The price of this OrderProductOrderCreate.
        :rtype: float
        """
        return self._price

    @price.setter
    def price(self, price):
        """Sets the price of this OrderProductOrderCreate.

        Price of the Order Product

        :param price: The price of this OrderProductOrderCreate.
        :type price: float
        """

        self._price = price

    @property
    def qty(self):
        """Gets the qty of this OrderProductOrderCreate.

        Price of the Order Product

        :return: The qty of this OrderProductOrderCreate.
        :rtype: int
        """
        return self._qty

    @qty.setter
    def qty(self, qty):
        """Sets the qty of this OrderProductOrderCreate.

        Price of the Order Product

        :param qty: The qty of this OrderProductOrderCreate.
        :type qty: int
        """

        self._qty = qty

    @property
    def variant_id(self):
        """Gets the variant_id of this OrderProductOrderCreate.

        Unique identifier of the original Product Variant

        :return: The variant_id of this OrderProductOrderCreate.
        :rtype: int
        """
        return self._variant_id

    @variant_id.setter
    def variant_id(self, variant_id):
        """Sets the variant_id of this OrderProductOrderCreate.

        Unique identifier of the original Product Variant

        :param variant_id: The variant_id of this OrderProductOrderCreate.
        :type variant_id: int
        """

        self._variant_id = variant_id
