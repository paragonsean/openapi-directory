# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.new_partner_store import NewPartnerStore
from openapi_server.models.new_partner_store_store import NewPartnerStoreStore
from openapi_server.models.partner_store_status import PartnerStoreStatus
from openapi_server.models.partner_store_status_status import PartnerStoreStatusStatus
from openapi_server import util


class StoreCheckStatusJsonGet200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, status: PartnerStoreStatusStatus=None, store: NewPartnerStoreStore=None):
        """StoreCheckStatusJsonGet200Response - a model defined in OpenAPI

        :param status: The status of this StoreCheckStatusJsonGet200Response.
        :param store: The store of this StoreCheckStatusJsonGet200Response.
        """
        self.openapi_types = {
            'status': PartnerStoreStatusStatus,
            'store': NewPartnerStoreStore
        }

        self.attribute_map = {
            'status': 'status',
            'store': 'store'
        }

        self._status = status
        self._store = store

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StoreCheckStatusJsonGet200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The _store_check_status_json_get_200_response of this StoreCheckStatusJsonGet200Response.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def status(self):
        """Gets the status of this StoreCheckStatusJsonGet200Response.


        :return: The status of this StoreCheckStatusJsonGet200Response.
        :rtype: PartnerStoreStatusStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this StoreCheckStatusJsonGet200Response.


        :param status: The status of this StoreCheckStatusJsonGet200Response.
        :type status: PartnerStoreStatusStatus
        """

        self._status = status

    @property
    def store(self):
        """Gets the store of this StoreCheckStatusJsonGet200Response.


        :return: The store of this StoreCheckStatusJsonGet200Response.
        :rtype: NewPartnerStoreStore
        """
        return self._store

    @store.setter
    def store(self, store):
        """Sets the store of this StoreCheckStatusJsonGet200Response.


        :param store: The store of this StoreCheckStatusJsonGet200Response.
        :type store: NewPartnerStoreStore
        """

        self._store = store
