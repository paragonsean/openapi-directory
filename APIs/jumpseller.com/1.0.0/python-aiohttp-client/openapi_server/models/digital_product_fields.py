# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DigitalProductFields(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, expiration_seconds: int=None, id: int=None, url: str=None):
        """DigitalProductFields - a model defined in OpenAPI

        :param expiration_seconds: The expiration_seconds of this DigitalProductFields.
        :param id: The id of this DigitalProductFields.
        :param url: The url of this DigitalProductFields.
        """
        self.openapi_types = {
            'expiration_seconds': int,
            'id': int,
            'url': str
        }

        self.attribute_map = {
            'expiration_seconds': 'expiration_seconds',
            'id': 'id',
            'url': 'url'
        }

        self._expiration_seconds = expiration_seconds
        self._id = id
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DigitalProductFields':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DigitalProductFields of this DigitalProductFields.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def expiration_seconds(self):
        """Gets the expiration_seconds of this DigitalProductFields.

        Time left in seconds before the current private URL expires

        :return: The expiration_seconds of this DigitalProductFields.
        :rtype: int
        """
        return self._expiration_seconds

    @expiration_seconds.setter
    def expiration_seconds(self, expiration_seconds):
        """Sets the expiration_seconds of this DigitalProductFields.

        Time left in seconds before the current private URL expires

        :param expiration_seconds: The expiration_seconds of this DigitalProductFields.
        :type expiration_seconds: int
        """

        self._expiration_seconds = expiration_seconds

    @property
    def id(self):
        """Gets the id of this DigitalProductFields.

        Unique identifier of the digital product

        :return: The id of this DigitalProductFields.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this DigitalProductFields.

        Unique identifier of the digital product

        :param id: The id of this DigitalProductFields.
        :type id: int
        """

        self._id = id

    @property
    def url(self):
        """Gets the url of this DigitalProductFields.

        Private URL of the digital product

        :return: The url of this DigitalProductFields.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this DigitalProductFields.

        Private URL of the digital product

        :param url: The url of this DigitalProductFields.
        :type url: str
        """

        self._url = url
