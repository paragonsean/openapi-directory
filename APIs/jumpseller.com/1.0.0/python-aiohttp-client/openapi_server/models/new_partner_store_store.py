# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class NewPartnerStoreStore(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, code: str=None, email_partner: str=None, name: str=None, redirect_url: str=None):
        """NewPartnerStoreStore - a model defined in OpenAPI

        :param code: The code of this NewPartnerStoreStore.
        :param email_partner: The email_partner of this NewPartnerStoreStore.
        :param name: The name of this NewPartnerStoreStore.
        :param redirect_url: The redirect_url of this NewPartnerStoreStore.
        """
        self.openapi_types = {
            'code': str,
            'email_partner': str,
            'name': str,
            'redirect_url': str
        }

        self.attribute_map = {
            'code': 'code',
            'email_partner': 'email_partner',
            'name': 'name',
            'redirect_url': 'redirect_url'
        }

        self._code = code
        self._email_partner = email_partner
        self._name = name
        self._redirect_url = redirect_url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NewPartnerStoreStore':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The NewPartnerStore_store of this NewPartnerStoreStore.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def code(self):
        """Gets the code of this NewPartnerStoreStore.

        New Store code.

        :return: The code of this NewPartnerStoreStore.
        :rtype: str
        """
        return self._code

    @code.setter
    def code(self, code):
        """Sets the code of this NewPartnerStoreStore.

        New Store code.

        :param code: The code of this NewPartnerStoreStore.
        :type code: str
        """

        self._code = code

    @property
    def email_partner(self):
        """Gets the email_partner of this NewPartnerStoreStore.

        Partner email.

        :return: The email_partner of this NewPartnerStoreStore.
        :rtype: str
        """
        return self._email_partner

    @email_partner.setter
    def email_partner(self, email_partner):
        """Sets the email_partner of this NewPartnerStoreStore.

        Partner email.

        :param email_partner: The email_partner of this NewPartnerStoreStore.
        :type email_partner: str
        """

        self._email_partner = email_partner

    @property
    def name(self):
        """Gets the name of this NewPartnerStoreStore.

        New Store name.

        :return: The name of this NewPartnerStoreStore.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this NewPartnerStoreStore.

        New Store name.

        :param name: The name of this NewPartnerStoreStore.
        :type name: str
        """

        self._name = name

    @property
    def redirect_url(self):
        """Gets the redirect_url of this NewPartnerStoreStore.

        New Store redirect url.

        :return: The redirect_url of this NewPartnerStoreStore.
        :rtype: str
        """
        return self._redirect_url

    @redirect_url.setter
    def redirect_url(self, redirect_url):
        """Sets the redirect_url of this NewPartnerStoreStore.

        New Store redirect url.

        :param redirect_url: The redirect_url of this NewPartnerStoreStore.
        :type redirect_url: str
        """

        self._redirect_url = redirect_url
