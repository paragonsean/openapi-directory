# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ProductCustomFieldFields(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, custom_field_id: int=None, id: int=None, label: str=None, type: str=None, value: str=None, value_id: str=None):
        """ProductCustomFieldFields - a model defined in OpenAPI

        :param custom_field_id: The custom_field_id of this ProductCustomFieldFields.
        :param id: The id of this ProductCustomFieldFields.
        :param label: The label of this ProductCustomFieldFields.
        :param type: The type of this ProductCustomFieldFields.
        :param value: The value of this ProductCustomFieldFields.
        :param value_id: The value_id of this ProductCustomFieldFields.
        """
        self.openapi_types = {
            'custom_field_id': int,
            'id': int,
            'label': str,
            'type': str,
            'value': str,
            'value_id': str
        }

        self.attribute_map = {
            'custom_field_id': 'custom_field_id',
            'id': 'id',
            'label': 'label',
            'type': 'type',
            'value': 'value',
            'value_id': 'value_id'
        }

        self._custom_field_id = custom_field_id
        self._id = id
        self._label = label
        self._type = type
        self._value = value
        self._value_id = value_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProductCustomFieldFields':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ProductCustomFieldFields of this ProductCustomFieldFields.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def custom_field_id(self):
        """Gets the custom_field_id of this ProductCustomFieldFields.

        Unique identifier of the ProductCustomField

        :return: The custom_field_id of this ProductCustomFieldFields.
        :rtype: int
        """
        return self._custom_field_id

    @custom_field_id.setter
    def custom_field_id(self, custom_field_id):
        """Sets the custom_field_id of this ProductCustomFieldFields.

        Unique identifier of the ProductCustomField

        :param custom_field_id: The custom_field_id of this ProductCustomFieldFields.
        :type custom_field_id: int
        """

        self._custom_field_id = custom_field_id

    @property
    def id(self):
        """Gets the id of this ProductCustomFieldFields.

        Unique identifier of the ProductCustomField value

        :return: The id of this ProductCustomFieldFields.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ProductCustomFieldFields.

        Unique identifier of the ProductCustomField value

        :param id: The id of this ProductCustomFieldFields.
        :type id: int
        """

        self._id = id

    @property
    def label(self):
        """Gets the label of this ProductCustomFieldFields.

        The label for the ProductCustomField

        :return: The label of this ProductCustomFieldFields.
        :rtype: str
        """
        return self._label

    @label.setter
    def label(self, label):
        """Sets the label of this ProductCustomFieldFields.

        The label for the ProductCustomField

        :param label: The label of this ProductCustomFieldFields.
        :type label: str
        """

        self._label = label

    @property
    def type(self):
        """Gets the type of this ProductCustomFieldFields.

        The type of the ProductCustomField

        :return: The type of this ProductCustomFieldFields.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this ProductCustomFieldFields.

        The type of the ProductCustomField

        :param type: The type of this ProductCustomFieldFields.
        :type type: str
        """

        self._type = type

    @property
    def value(self):
        """Gets the value of this ProductCustomFieldFields.

        The value for the ProductCustomField

        :return: The value of this ProductCustomFieldFields.
        :rtype: str
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this ProductCustomFieldFields.

        The value for the ProductCustomField

        :param value: The value of this ProductCustomFieldFields.
        :type value: str
        """

        self._value = value

    @property
    def value_id(self):
        """Gets the value_id of this ProductCustomFieldFields.

        The value id for the ProductCustomField

        :return: The value_id of this ProductCustomFieldFields.
        :rtype: str
        """
        return self._value_id

    @value_id.setter
    def value_id(self, value_id):
        """Sets the value_id of this ProductCustomFieldFields.

        The value id for the ProductCustomField

        :param value_id: The value_id of this ProductCustomFieldFields.
        :type value_id: str
        """

        self._value_id = value_id
