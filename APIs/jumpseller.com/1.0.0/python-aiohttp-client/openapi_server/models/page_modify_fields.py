# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.page_category import PageCategory
from openapi_server.models.page_fields_image import PageFieldsImage
from openapi_server import util


class PageModifyFields(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, body: str=None, categories: List[PageCategory]=None, image: PageFieldsImage=None, meta_description: str=None, page_title: str=None, permalink: str=None, status: str=None, template: int=None, title: str=None):
        """PageModifyFields - a model defined in OpenAPI

        :param body: The body of this PageModifyFields.
        :param categories: The categories of this PageModifyFields.
        :param image: The image of this PageModifyFields.
        :param meta_description: The meta_description of this PageModifyFields.
        :param page_title: The page_title of this PageModifyFields.
        :param permalink: The permalink of this PageModifyFields.
        :param status: The status of this PageModifyFields.
        :param template: The template of this PageModifyFields.
        :param title: The title of this PageModifyFields.
        """
        self.openapi_types = {
            'body': str,
            'categories': List[PageCategory],
            'image': PageFieldsImage,
            'meta_description': str,
            'page_title': str,
            'permalink': str,
            'status': str,
            'template': int,
            'title': str
        }

        self.attribute_map = {
            'body': 'body',
            'categories': 'categories',
            'image': 'image',
            'meta_description': 'meta_description',
            'page_title': 'page_title',
            'permalink': 'permalink',
            'status': 'status',
            'template': 'template',
            'title': 'title'
        }

        self._body = body
        self._categories = categories
        self._image = image
        self._meta_description = meta_description
        self._page_title = page_title
        self._permalink = permalink
        self._status = status
        self._template = template
        self._title = title

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PageModifyFields':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PageModifyFields of this PageModifyFields.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def body(self):
        """Gets the body of this PageModifyFields.

        Body of the Page

        :return: The body of this PageModifyFields.
        :rtype: str
        """
        return self._body

    @body.setter
    def body(self, body):
        """Sets the body of this PageModifyFields.

        Body of the Page

        :param body: The body of this PageModifyFields.
        :type body: str
        """

        self._body = body

    @property
    def categories(self):
        """Gets the categories of this PageModifyFields.

        Page categories to which the Page belongs to

        :return: The categories of this PageModifyFields.
        :rtype: List[PageCategory]
        """
        return self._categories

    @categories.setter
    def categories(self, categories):
        """Sets the categories of this PageModifyFields.

        Page categories to which the Page belongs to

        :param categories: The categories of this PageModifyFields.
        :type categories: List[PageCategory]
        """

        self._categories = categories

    @property
    def image(self):
        """Gets the image of this PageModifyFields.


        :return: The image of this PageModifyFields.
        :rtype: PageFieldsImage
        """
        return self._image

    @image.setter
    def image(self, image):
        """Sets the image of this PageModifyFields.


        :param image: The image of this PageModifyFields.
        :type image: PageFieldsImage
        """

        self._image = image

    @property
    def meta_description(self):
        """Gets the meta_description of this PageModifyFields.

        Meta description of the Page

        :return: The meta_description of this PageModifyFields.
        :rtype: str
        """
        return self._meta_description

    @meta_description.setter
    def meta_description(self, meta_description):
        """Sets the meta_description of this PageModifyFields.

        Meta description of the Page

        :param meta_description: The meta_description of this PageModifyFields.
        :type meta_description: str
        """

        self._meta_description = meta_description

    @property
    def page_title(self):
        """Gets the page_title of this PageModifyFields.

        Meta title of the Page

        :return: The page_title of this PageModifyFields.
        :rtype: str
        """
        return self._page_title

    @page_title.setter
    def page_title(self, page_title):
        """Sets the page_title of this PageModifyFields.

        Meta title of the Page

        :param page_title: The page_title of this PageModifyFields.
        :type page_title: str
        """

        self._page_title = page_title

    @property
    def permalink(self):
        """Gets the permalink of this PageModifyFields.

        URL of the Page

        :return: The permalink of this PageModifyFields.
        :rtype: str
        """
        return self._permalink

    @permalink.setter
    def permalink(self, permalink):
        """Sets the permalink of this PageModifyFields.

        URL of the Page

        :param permalink: The permalink of this PageModifyFields.
        :type permalink: str
        """

        self._permalink = permalink

    @property
    def status(self):
        """Gets the status of this PageModifyFields.

        Status of the Page

        :return: The status of this PageModifyFields.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this PageModifyFields.

        Status of the Page

        :param status: The status of this PageModifyFields.
        :type status: str
        """
        allowed_values = ["public", "draft", "hidden"]  # noqa: E501
        if status not in allowed_values:
            raise ValueError(
                "Invalid value for `status` ({0}), must be one of {1}"
                .format(status, allowed_values)
            )

        self._status = status

    @property
    def template(self):
        """Gets the template of this PageModifyFields.

        ID of the Page template. Use null for the blank layout ('None')

        :return: The template of this PageModifyFields.
        :rtype: int
        """
        return self._template

    @template.setter
    def template(self, template):
        """Sets the template of this PageModifyFields.

        ID of the Page template. Use null for the blank layout ('None')

        :param template: The template of this PageModifyFields.
        :type template: int
        """

        self._template = template

    @property
    def title(self):
        """Gets the title of this PageModifyFields.

        Title of the Page

        :return: The title of this PageModifyFields.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this PageModifyFields.

        Title of the Page

        :param title: The title of this PageModifyFields.
        :type title: str
        """

        self._title = title
