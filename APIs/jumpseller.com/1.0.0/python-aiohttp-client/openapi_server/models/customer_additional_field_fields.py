# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CustomerAdditionalFieldFields(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, area: str=None, checkout_custom_field_id: int=None, customer_id: int=None, id: int=None, label: str=None, value: str=None):
        """CustomerAdditionalFieldFields - a model defined in OpenAPI

        :param area: The area of this CustomerAdditionalFieldFields.
        :param checkout_custom_field_id: The checkout_custom_field_id of this CustomerAdditionalFieldFields.
        :param customer_id: The customer_id of this CustomerAdditionalFieldFields.
        :param id: The id of this CustomerAdditionalFieldFields.
        :param label: The label of this CustomerAdditionalFieldFields.
        :param value: The value of this CustomerAdditionalFieldFields.
        """
        self.openapi_types = {
            'area': str,
            'checkout_custom_field_id': int,
            'customer_id': int,
            'id': int,
            'label': str,
            'value': str
        }

        self.attribute_map = {
            'area': 'area',
            'checkout_custom_field_id': 'checkout_custom_field_id',
            'customer_id': 'customer_id',
            'id': 'id',
            'label': 'label',
            'value': 'value'
        }

        self._area = area
        self._checkout_custom_field_id = checkout_custom_field_id
        self._customer_id = customer_id
        self._id = id
        self._label = label
        self._value = value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CustomerAdditionalFieldFields':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CustomerAdditionalFieldFields of this CustomerAdditionalFieldFields.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def area(self):
        """Gets the area of this CustomerAdditionalFieldFields.

        Area of the Customer Additional Field

        :return: The area of this CustomerAdditionalFieldFields.
        :rtype: str
        """
        return self._area

    @area.setter
    def area(self, area):
        """Sets the area of this CustomerAdditionalFieldFields.

        Area of the Customer Additional Field

        :param area: The area of this CustomerAdditionalFieldFields.
        :type area: str
        """

        self._area = area

    @property
    def checkout_custom_field_id(self):
        """Gets the checkout_custom_field_id of this CustomerAdditionalFieldFields.

        Unique identifier of the Checkout Custom Field

        :return: The checkout_custom_field_id of this CustomerAdditionalFieldFields.
        :rtype: int
        """
        return self._checkout_custom_field_id

    @checkout_custom_field_id.setter
    def checkout_custom_field_id(self, checkout_custom_field_id):
        """Sets the checkout_custom_field_id of this CustomerAdditionalFieldFields.

        Unique identifier of the Checkout Custom Field

        :param checkout_custom_field_id: The checkout_custom_field_id of this CustomerAdditionalFieldFields.
        :type checkout_custom_field_id: int
        """

        self._checkout_custom_field_id = checkout_custom_field_id

    @property
    def customer_id(self):
        """Gets the customer_id of this CustomerAdditionalFieldFields.

        Unique identifier of the Customer

        :return: The customer_id of this CustomerAdditionalFieldFields.
        :rtype: int
        """
        return self._customer_id

    @customer_id.setter
    def customer_id(self, customer_id):
        """Sets the customer_id of this CustomerAdditionalFieldFields.

        Unique identifier of the Customer

        :param customer_id: The customer_id of this CustomerAdditionalFieldFields.
        :type customer_id: int
        """

        self._customer_id = customer_id

    @property
    def id(self):
        """Gets the id of this CustomerAdditionalFieldFields.

        Unique identifier of the Customer Additional Field

        :return: The id of this CustomerAdditionalFieldFields.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this CustomerAdditionalFieldFields.

        Unique identifier of the Customer Additional Field

        :param id: The id of this CustomerAdditionalFieldFields.
        :type id: int
        """

        self._id = id

    @property
    def label(self):
        """Gets the label of this CustomerAdditionalFieldFields.

        Label of the Customer Additional Field

        :return: The label of this CustomerAdditionalFieldFields.
        :rtype: str
        """
        return self._label

    @label.setter
    def label(self, label):
        """Sets the label of this CustomerAdditionalFieldFields.

        Label of the Customer Additional Field

        :param label: The label of this CustomerAdditionalFieldFields.
        :type label: str
        """

        self._label = label

    @property
    def value(self):
        """Gets the value of this CustomerAdditionalFieldFields.

        Value of the Customer Additional Field

        :return: The value of this CustomerAdditionalFieldFields.
        :rtype: str
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this CustomerAdditionalFieldFields.

        Value of the Customer Additional Field

        :param value: The value of this CustomerAdditionalFieldFields.
        :type value: str
        """

        self._value = value
