# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.product_option import ProductOption
from openapi_server.models.variant import Variant
from openapi_server import util


class ProductOptionValueFields(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: int=None, name: str=None, position: int=None, product_option: ProductOption=None, variants: List[Variant]=None):
        """ProductOptionValueFields - a model defined in OpenAPI

        :param id: The id of this ProductOptionValueFields.
        :param name: The name of this ProductOptionValueFields.
        :param position: The position of this ProductOptionValueFields.
        :param product_option: The product_option of this ProductOptionValueFields.
        :param variants: The variants of this ProductOptionValueFields.
        """
        self.openapi_types = {
            'id': int,
            'name': str,
            'position': int,
            'product_option': ProductOption,
            'variants': List[Variant]
        }

        self.attribute_map = {
            'id': 'id',
            'name': 'name',
            'position': 'position',
            'product_option': 'product_option',
            'variants': 'variants'
        }

        self._id = id
        self._name = name
        self._position = position
        self._product_option = product_option
        self._variants = variants

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProductOptionValueFields':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ProductOptionValueFields of this ProductOptionValueFields.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this ProductOptionValueFields.

        Unique identifier of the product option value

        :return: The id of this ProductOptionValueFields.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ProductOptionValueFields.

        Unique identifier of the product option value

        :param id: The id of this ProductOptionValueFields.
        :type id: int
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this ProductOptionValueFields.

        Name of the product option value

        :return: The name of this ProductOptionValueFields.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ProductOptionValueFields.

        Name of the product option value

        :param name: The name of this ProductOptionValueFields.
        :type name: str
        """

        self._name = name

    @property
    def position(self):
        """Gets the position of this ProductOptionValueFields.

        Position of the product option value

        :return: The position of this ProductOptionValueFields.
        :rtype: int
        """
        return self._position

    @position.setter
    def position(self, position):
        """Sets the position of this ProductOptionValueFields.

        Position of the product option value

        :param position: The position of this ProductOptionValueFields.
        :type position: int
        """

        self._position = position

    @property
    def product_option(self):
        """Gets the product_option of this ProductOptionValueFields.


        :return: The product_option of this ProductOptionValueFields.
        :rtype: ProductOption
        """
        return self._product_option

    @product_option.setter
    def product_option(self, product_option):
        """Sets the product_option of this ProductOptionValueFields.


        :param product_option: The product_option of this ProductOptionValueFields.
        :type product_option: ProductOption
        """

        self._product_option = product_option

    @property
    def variants(self):
        """Gets the variants of this ProductOptionValueFields.


        :return: The variants of this ProductOptionValueFields.
        :rtype: List[Variant]
        """
        return self._variants

    @variants.setter
    def variants(self, variants):
        """Sets the variants of this ProductOptionValueFields.


        :param variants: The variants of this ProductOptionValueFields.
        :type variants: List[Variant]
        """

        self._variants = variants
