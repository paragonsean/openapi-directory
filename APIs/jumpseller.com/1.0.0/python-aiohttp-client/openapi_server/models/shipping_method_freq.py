# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ShippingMethodFreq(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, count: str=None, name: str=None):
        """ShippingMethodFreq - a model defined in OpenAPI

        :param count: The count of this ShippingMethodFreq.
        :param name: The name of this ShippingMethodFreq.
        """
        self.openapi_types = {
            'count': str,
            'name': str
        }

        self.attribute_map = {
            'count': 'count',
            'name': 'name'
        }

        self._count = count
        self._name = name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ShippingMethodFreq':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ShippingMethodFreq of this ShippingMethodFreq.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def count(self):
        """Gets the count of this ShippingMethodFreq.


        :return: The count of this ShippingMethodFreq.
        :rtype: str
        """
        return self._count

    @count.setter
    def count(self, count):
        """Sets the count of this ShippingMethodFreq.


        :param count: The count of this ShippingMethodFreq.
        :type count: str
        """

        self._count = count

    @property
    def name(self):
        """Gets the name of this ShippingMethodFreq.


        :return: The name of this ShippingMethodFreq.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ShippingMethodFreq.


        :param name: The name of this ShippingMethodFreq.
        :type name: str
        """

        self._name = name
