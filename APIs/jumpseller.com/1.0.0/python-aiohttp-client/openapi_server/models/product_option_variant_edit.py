# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ProductOptionVariantEdit(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, product_option_id: int=None, product_option_position: int=None, product_option_value_id: int=None, product_value_position: int=None, value: str=None):
        """ProductOptionVariantEdit - a model defined in OpenAPI

        :param name: The name of this ProductOptionVariantEdit.
        :param product_option_id: The product_option_id of this ProductOptionVariantEdit.
        :param product_option_position: The product_option_position of this ProductOptionVariantEdit.
        :param product_option_value_id: The product_option_value_id of this ProductOptionVariantEdit.
        :param product_value_position: The product_value_position of this ProductOptionVariantEdit.
        :param value: The value of this ProductOptionVariantEdit.
        """
        self.openapi_types = {
            'name': str,
            'product_option_id': int,
            'product_option_position': int,
            'product_option_value_id': int,
            'product_value_position': int,
            'value': str
        }

        self.attribute_map = {
            'name': 'name',
            'product_option_id': 'product_option_id',
            'product_option_position': 'product_option_position',
            'product_option_value_id': 'product_option_value_id',
            'product_value_position': 'product_value_position',
            'value': 'value'
        }

        self._name = name
        self._product_option_id = product_option_id
        self._product_option_position = product_option_position
        self._product_option_value_id = product_option_value_id
        self._product_value_position = product_value_position
        self._value = value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProductOptionVariantEdit':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ProductOptionVariantEdit of this ProductOptionVariantEdit.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this ProductOptionVariantEdit.

        Name of the product option

        :return: The name of this ProductOptionVariantEdit.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ProductOptionVariantEdit.

        Name of the product option

        :param name: The name of this ProductOptionVariantEdit.
        :type name: str
        """

        self._name = name

    @property
    def product_option_id(self):
        """Gets the product_option_id of this ProductOptionVariantEdit.

        Id of the product option

        :return: The product_option_id of this ProductOptionVariantEdit.
        :rtype: int
        """
        return self._product_option_id

    @product_option_id.setter
    def product_option_id(self, product_option_id):
        """Sets the product_option_id of this ProductOptionVariantEdit.

        Id of the product option

        :param product_option_id: The product_option_id of this ProductOptionVariantEdit.
        :type product_option_id: int
        """

        self._product_option_id = product_option_id

    @property
    def product_option_position(self):
        """Gets the product_option_position of this ProductOptionVariantEdit.

        position of product option

        :return: The product_option_position of this ProductOptionVariantEdit.
        :rtype: int
        """
        return self._product_option_position

    @product_option_position.setter
    def product_option_position(self, product_option_position):
        """Sets the product_option_position of this ProductOptionVariantEdit.

        position of product option

        :param product_option_position: The product_option_position of this ProductOptionVariantEdit.
        :type product_option_position: int
        """

        self._product_option_position = product_option_position

    @property
    def product_option_value_id(self):
        """Gets the product_option_value_id of this ProductOptionVariantEdit.

        Id of product option value

        :return: The product_option_value_id of this ProductOptionVariantEdit.
        :rtype: int
        """
        return self._product_option_value_id

    @product_option_value_id.setter
    def product_option_value_id(self, product_option_value_id):
        """Sets the product_option_value_id of this ProductOptionVariantEdit.

        Id of product option value

        :param product_option_value_id: The product_option_value_id of this ProductOptionVariantEdit.
        :type product_option_value_id: int
        """

        self._product_option_value_id = product_option_value_id

    @property
    def product_value_position(self):
        """Gets the product_value_position of this ProductOptionVariantEdit.

        position of product option value

        :return: The product_value_position of this ProductOptionVariantEdit.
        :rtype: int
        """
        return self._product_value_position

    @product_value_position.setter
    def product_value_position(self, product_value_position):
        """Sets the product_value_position of this ProductOptionVariantEdit.

        position of product option value

        :param product_value_position: The product_value_position of this ProductOptionVariantEdit.
        :type product_value_position: int
        """

        self._product_value_position = product_value_position

    @property
    def value(self):
        """Gets the value of this ProductOptionVariantEdit.

        Value of the product option

        :return: The value of this ProductOptionVariantEdit.
        :rtype: str
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this ProductOptionVariantEdit.

        Value of the product option

        :param value: The value of this ProductOptionVariantEdit.
        :type value: str
        """

        self._value = value
