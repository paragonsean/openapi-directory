# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.billing_address import BillingAddress
from openapi_server.models.shipping_address import ShippingAddress
from openapi_server import util


class CustomerFieldsWithBillingAddressAndShippingAddressFields(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, billing_address: BillingAddress=None, id: int=None, shipping_address: ShippingAddress=None):
        """CustomerFieldsWithBillingAddressAndShippingAddressFields - a model defined in OpenAPI

        :param billing_address: The billing_address of this CustomerFieldsWithBillingAddressAndShippingAddressFields.
        :param id: The id of this CustomerFieldsWithBillingAddressAndShippingAddressFields.
        :param shipping_address: The shipping_address of this CustomerFieldsWithBillingAddressAndShippingAddressFields.
        """
        self.openapi_types = {
            'billing_address': BillingAddress,
            'id': int,
            'shipping_address': ShippingAddress
        }

        self.attribute_map = {
            'billing_address': 'billing_address',
            'id': 'id',
            'shipping_address': 'shipping_address'
        }

        self._billing_address = billing_address
        self._id = id
        self._shipping_address = shipping_address

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CustomerFieldsWithBillingAddressAndShippingAddressFields':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CustomerFieldsWithBillingAddressAndShippingAddressFields of this CustomerFieldsWithBillingAddressAndShippingAddressFields.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def billing_address(self):
        """Gets the billing_address of this CustomerFieldsWithBillingAddressAndShippingAddressFields.


        :return: The billing_address of this CustomerFieldsWithBillingAddressAndShippingAddressFields.
        :rtype: BillingAddress
        """
        return self._billing_address

    @billing_address.setter
    def billing_address(self, billing_address):
        """Sets the billing_address of this CustomerFieldsWithBillingAddressAndShippingAddressFields.


        :param billing_address: The billing_address of this CustomerFieldsWithBillingAddressAndShippingAddressFields.
        :type billing_address: BillingAddress
        """

        self._billing_address = billing_address

    @property
    def id(self):
        """Gets the id of this CustomerFieldsWithBillingAddressAndShippingAddressFields.

        Unique identifier of the Customer

        :return: The id of this CustomerFieldsWithBillingAddressAndShippingAddressFields.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this CustomerFieldsWithBillingAddressAndShippingAddressFields.

        Unique identifier of the Customer

        :param id: The id of this CustomerFieldsWithBillingAddressAndShippingAddressFields.
        :type id: int
        """

        self._id = id

    @property
    def shipping_address(self):
        """Gets the shipping_address of this CustomerFieldsWithBillingAddressAndShippingAddressFields.


        :return: The shipping_address of this CustomerFieldsWithBillingAddressAndShippingAddressFields.
        :rtype: ShippingAddress
        """
        return self._shipping_address

    @shipping_address.setter
    def shipping_address(self, shipping_address):
        """Sets the shipping_address of this CustomerFieldsWithBillingAddressAndShippingAddressFields.


        :param shipping_address: The shipping_address of this CustomerFieldsWithBillingAddressAndShippingAddressFields.
        :type shipping_address: ShippingAddress
        """

        self._shipping_address = shipping_address
