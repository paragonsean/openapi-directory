# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.product_option_value_fields import ProductOptionValueFields
from openapi_server import util


class ProductOptionFields(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: int=None, name: str=None, option_type: str=None, position: int=None, values: List[ProductOptionValueFields]=None):
        """ProductOptionFields - a model defined in OpenAPI

        :param id: The id of this ProductOptionFields.
        :param name: The name of this ProductOptionFields.
        :param option_type: The option_type of this ProductOptionFields.
        :param position: The position of this ProductOptionFields.
        :param values: The values of this ProductOptionFields.
        """
        self.openapi_types = {
            'id': int,
            'name': str,
            'option_type': str,
            'position': int,
            'values': List[ProductOptionValueFields]
        }

        self.attribute_map = {
            'id': 'id',
            'name': 'name',
            'option_type': 'option_type',
            'position': 'position',
            'values': 'values'
        }

        self._id = id
        self._name = name
        self._option_type = option_type
        self._position = position
        self._values = values

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProductOptionFields':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ProductOptionFields of this ProductOptionFields.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this ProductOptionFields.

        Unique identifier of the product option

        :return: The id of this ProductOptionFields.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ProductOptionFields.

        Unique identifier of the product option

        :param id: The id of this ProductOptionFields.
        :type id: int
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this ProductOptionFields.

        Name of the product option

        :return: The name of this ProductOptionFields.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ProductOptionFields.

        Name of the product option

        :param name: The name of this ProductOptionFields.
        :type name: str
        """

        self._name = name

    @property
    def option_type(self):
        """Gets the option_type of this ProductOptionFields.

        Type of the product option

        :return: The option_type of this ProductOptionFields.
        :rtype: str
        """
        return self._option_type

    @option_type.setter
    def option_type(self, option_type):
        """Sets the option_type of this ProductOptionFields.

        Type of the product option

        :param option_type: The option_type of this ProductOptionFields.
        :type option_type: str
        """
        allowed_values = ["option", "input", "text", "file"]  # noqa: E501
        if option_type not in allowed_values:
            raise ValueError(
                "Invalid value for `option_type` ({0}), must be one of {1}"
                .format(option_type, allowed_values)
            )

        self._option_type = option_type

    @property
    def position(self):
        """Gets the position of this ProductOptionFields.

        Position of the product option

        :return: The position of this ProductOptionFields.
        :rtype: int
        """
        return self._position

    @position.setter
    def position(self, position):
        """Sets the position of this ProductOptionFields.

        Position of the product option

        :param position: The position of this ProductOptionFields.
        :type position: int
        """

        self._position = position

    @property
    def values(self):
        """Gets the values of this ProductOptionFields.


        :return: The values of this ProductOptionFields.
        :rtype: List[ProductOptionValueFields]
        """
        return self._values

    @values.setter
    def values(self, values):
        """Sets the values of this ProductOptionFields.


        :param values: The values of this ProductOptionFields.
        :type values: List[ProductOptionValueFields]
        """

        self._values = values
