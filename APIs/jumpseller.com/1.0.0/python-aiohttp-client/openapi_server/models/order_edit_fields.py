# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.order_additional_fields import OrderAdditionalFields
from openapi_server import util


class OrderEditFields(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, additional_fields: List[OrderAdditionalFields]=None, additional_information: str=None, shipment_status: str=None, status: str=None, tracking_company: str=None, tracking_number: str=None, tracking_url: str=None):
        """OrderEditFields - a model defined in OpenAPI

        :param additional_fields: The additional_fields of this OrderEditFields.
        :param additional_information: The additional_information of this OrderEditFields.
        :param shipment_status: The shipment_status of this OrderEditFields.
        :param status: The status of this OrderEditFields.
        :param tracking_company: The tracking_company of this OrderEditFields.
        :param tracking_number: The tracking_number of this OrderEditFields.
        :param tracking_url: The tracking_url of this OrderEditFields.
        """
        self.openapi_types = {
            'additional_fields': List[OrderAdditionalFields],
            'additional_information': str,
            'shipment_status': str,
            'status': str,
            'tracking_company': str,
            'tracking_number': str,
            'tracking_url': str
        }

        self.attribute_map = {
            'additional_fields': 'additional_fields',
            'additional_information': 'additional_information',
            'shipment_status': 'shipment_status',
            'status': 'status',
            'tracking_company': 'tracking_company',
            'tracking_number': 'tracking_number',
            'tracking_url': 'tracking_url'
        }

        self._additional_fields = additional_fields
        self._additional_information = additional_information
        self._shipment_status = shipment_status
        self._status = status
        self._tracking_company = tracking_company
        self._tracking_number = tracking_number
        self._tracking_url = tracking_url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OrderEditFields':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OrderEditFields of this OrderEditFields.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def additional_fields(self):
        """Gets the additional_fields of this OrderEditFields.

        Array of additional fields for the given Order

        :return: The additional_fields of this OrderEditFields.
        :rtype: List[OrderAdditionalFields]
        """
        return self._additional_fields

    @additional_fields.setter
    def additional_fields(self, additional_fields):
        """Sets the additional_fields of this OrderEditFields.

        Array of additional fields for the given Order

        :param additional_fields: The additional_fields of this OrderEditFields.
        :type additional_fields: List[OrderAdditionalFields]
        """

        self._additional_fields = additional_fields

    @property
    def additional_information(self):
        """Gets the additional_information of this OrderEditFields.

        Additional information for the given Order

        :return: The additional_information of this OrderEditFields.
        :rtype: str
        """
        return self._additional_information

    @additional_information.setter
    def additional_information(self, additional_information):
        """Sets the additional_information of this OrderEditFields.

        Additional information for the given Order

        :param additional_information: The additional_information of this OrderEditFields.
        :type additional_information: str
        """

        self._additional_information = additional_information

    @property
    def shipment_status(self):
        """Gets the shipment_status of this OrderEditFields.

        Status of the Order Shipping

        :return: The shipment_status of this OrderEditFields.
        :rtype: str
        """
        return self._shipment_status

    @shipment_status.setter
    def shipment_status(self, shipment_status):
        """Sets the shipment_status of this OrderEditFields.

        Status of the Order Shipping

        :param shipment_status: The shipment_status of this OrderEditFields.
        :type shipment_status: str
        """
        allowed_values = ["requested", "in_transit", "delivered", "failed", "pickup_available"]  # noqa: E501
        if shipment_status not in allowed_values:
            raise ValueError(
                "Invalid value for `shipment_status` ({0}), must be one of {1}"
                .format(shipment_status, allowed_values)
            )

        self._shipment_status = shipment_status

    @property
    def status(self):
        """Gets the status of this OrderEditFields.

        Status of the Order

        :return: The status of this OrderEditFields.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this OrderEditFields.

        Status of the Order

        :param status: The status of this OrderEditFields.
        :type status: str
        """
        allowed_values = ["Abandoned", "Canceled", "Pending Payment", "Paid"]  # noqa: E501
        if status not in allowed_values:
            raise ValueError(
                "Invalid value for `status` ({0}), must be one of {1}"
                .format(status, allowed_values)
            )

        self._status = status

    @property
    def tracking_company(self):
        """Gets the tracking_company of this OrderEditFields.

        Shipping Company used for the given Order

        :return: The tracking_company of this OrderEditFields.
        :rtype: str
        """
        return self._tracking_company

    @tracking_company.setter
    def tracking_company(self, tracking_company):
        """Sets the tracking_company of this OrderEditFields.

        Shipping Company used for the given Order

        :param tracking_company: The tracking_company of this OrderEditFields.
        :type tracking_company: str
        """

        self._tracking_company = tracking_company

    @property
    def tracking_number(self):
        """Gets the tracking_number of this OrderEditFields.

        Shipping Tracking Number used for the given Order

        :return: The tracking_number of this OrderEditFields.
        :rtype: str
        """
        return self._tracking_number

    @tracking_number.setter
    def tracking_number(self, tracking_number):
        """Sets the tracking_number of this OrderEditFields.

        Shipping Tracking Number used for the given Order

        :param tracking_number: The tracking_number of this OrderEditFields.
        :type tracking_number: str
        """

        self._tracking_number = tracking_number

    @property
    def tracking_url(self):
        """Gets the tracking_url of this OrderEditFields.

        URL to check delivery information for the given Order

        :return: The tracking_url of this OrderEditFields.
        :rtype: str
        """
        return self._tracking_url

    @tracking_url.setter
    def tracking_url(self, tracking_url):
        """Sets the tracking_url of this OrderEditFields.

        URL to check delivery information for the given Order

        :param tracking_url: The tracking_url of this OrderEditFields.
        :type tracking_url: str
        """

        self._tracking_url = tracking_url
