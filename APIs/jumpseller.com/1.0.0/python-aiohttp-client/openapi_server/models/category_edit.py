# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.category_edit_fields import CategoryEditFields
from openapi_server import util


class CategoryEdit(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, category: CategoryEditFields=None):
        """CategoryEdit - a model defined in OpenAPI

        :param category: The category of this CategoryEdit.
        """
        self.openapi_types = {
            'category': CategoryEditFields
        }

        self.attribute_map = {
            'category': 'category'
        }

        self._category = category

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CategoryEdit':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CategoryEdit of this CategoryEdit.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def category(self):
        """Gets the category of this CategoryEdit.


        :return: The category of this CategoryEdit.
        :rtype: CategoryEditFields
        """
        return self._category

    @category.setter
    def category(self, category):
        """Sets the category of this CategoryEdit.


        :param category: The category of this CategoryEdit.
        :type category: CategoryEditFields
        """

        self._category = category
