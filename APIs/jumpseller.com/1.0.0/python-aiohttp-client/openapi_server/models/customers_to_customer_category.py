# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.customer_to_customer_category import CustomerToCustomerCategory
from openapi_server import util


class CustomersToCustomerCategory(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, customers: List[CustomerToCustomerCategory]=None):
        """CustomersToCustomerCategory - a model defined in OpenAPI

        :param customers: The customers of this CustomersToCustomerCategory.
        """
        self.openapi_types = {
            'customers': List[CustomerToCustomerCategory]
        }

        self.attribute_map = {
            'customers': 'customers'
        }

        self._customers = customers

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CustomersToCustomerCategory':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CustomersToCustomerCategory of this CustomersToCustomerCategory.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def customers(self):
        """Gets the customers of this CustomersToCustomerCategory.


        :return: The customers of this CustomersToCustomerCategory.
        :rtype: List[CustomerToCustomerCategory]
        """
        return self._customers

    @customers.setter
    def customers(self, customers):
        """Sets the customers of this CustomersToCustomerCategory.


        :param customers: The customers of this CustomersToCustomerCategory.
        :type customers: List[CustomerToCustomerCategory]
        """

        self._customers = customers
