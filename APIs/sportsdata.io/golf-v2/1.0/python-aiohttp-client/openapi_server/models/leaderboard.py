# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.player_tournament import PlayerTournament
from openapi_server.models.tournament import Tournament
from openapi_server import util


class Leaderboard(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, players: List[PlayerTournament]=None, tournament: Tournament=None):
        """Leaderboard - a model defined in OpenAPI

        :param players: The players of this Leaderboard.
        :param tournament: The tournament of this Leaderboard.
        """
        self.openapi_types = {
            'players': List[PlayerTournament],
            'tournament': Tournament
        }

        self.attribute_map = {
            'players': 'Players',
            'tournament': 'Tournament'
        }

        self._players = players
        self._tournament = tournament

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Leaderboard':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Leaderboard of this Leaderboard.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def players(self):
        """Gets the players of this Leaderboard.


        :return: The players of this Leaderboard.
        :rtype: List[PlayerTournament]
        """
        return self._players

    @players.setter
    def players(self, players):
        """Sets the players of this Leaderboard.


        :param players: The players of this Leaderboard.
        :type players: List[PlayerTournament]
        """

        self._players = players

    @property
    def tournament(self):
        """Gets the tournament of this Leaderboard.


        :return: The tournament of this Leaderboard.
        :rtype: Tournament
        """
        return self._tournament

    @tournament.setter
    def tournament(self, tournament):
        """Sets the tournament of this Leaderboard.


        :param tournament: The tournament of this Leaderboard.
        :type tournament: Tournament
        """

        self._tournament = tournament
