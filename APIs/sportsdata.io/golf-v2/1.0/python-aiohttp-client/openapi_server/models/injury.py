# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Injury(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, active: bool=None, body_part: str=None, expected_return: str=None, injury_id: int=None, name: str=None, player_id: int=None, start_date: str=None, status: str=None):
        """Injury - a model defined in OpenAPI

        :param active: The active of this Injury.
        :param body_part: The body_part of this Injury.
        :param expected_return: The expected_return of this Injury.
        :param injury_id: The injury_id of this Injury.
        :param name: The name of this Injury.
        :param player_id: The player_id of this Injury.
        :param start_date: The start_date of this Injury.
        :param status: The status of this Injury.
        """
        self.openapi_types = {
            'active': bool,
            'body_part': str,
            'expected_return': str,
            'injury_id': int,
            'name': str,
            'player_id': int,
            'start_date': str,
            'status': str
        }

        self.attribute_map = {
            'active': 'Active',
            'body_part': 'BodyPart',
            'expected_return': 'ExpectedReturn',
            'injury_id': 'InjuryID',
            'name': 'Name',
            'player_id': 'PlayerID',
            'start_date': 'StartDate',
            'status': 'Status'
        }

        self._active = active
        self._body_part = body_part
        self._expected_return = expected_return
        self._injury_id = injury_id
        self._name = name
        self._player_id = player_id
        self._start_date = start_date
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Injury':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Injury of this Injury.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def active(self):
        """Gets the active of this Injury.


        :return: The active of this Injury.
        :rtype: bool
        """
        return self._active

    @active.setter
    def active(self, active):
        """Sets the active of this Injury.


        :param active: The active of this Injury.
        :type active: bool
        """

        self._active = active

    @property
    def body_part(self):
        """Gets the body_part of this Injury.


        :return: The body_part of this Injury.
        :rtype: str
        """
        return self._body_part

    @body_part.setter
    def body_part(self, body_part):
        """Sets the body_part of this Injury.


        :param body_part: The body_part of this Injury.
        :type body_part: str
        """

        self._body_part = body_part

    @property
    def expected_return(self):
        """Gets the expected_return of this Injury.


        :return: The expected_return of this Injury.
        :rtype: str
        """
        return self._expected_return

    @expected_return.setter
    def expected_return(self, expected_return):
        """Sets the expected_return of this Injury.


        :param expected_return: The expected_return of this Injury.
        :type expected_return: str
        """

        self._expected_return = expected_return

    @property
    def injury_id(self):
        """Gets the injury_id of this Injury.


        :return: The injury_id of this Injury.
        :rtype: int
        """
        return self._injury_id

    @injury_id.setter
    def injury_id(self, injury_id):
        """Sets the injury_id of this Injury.


        :param injury_id: The injury_id of this Injury.
        :type injury_id: int
        """

        self._injury_id = injury_id

    @property
    def name(self):
        """Gets the name of this Injury.


        :return: The name of this Injury.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Injury.


        :param name: The name of this Injury.
        :type name: str
        """

        self._name = name

    @property
    def player_id(self):
        """Gets the player_id of this Injury.


        :return: The player_id of this Injury.
        :rtype: int
        """
        return self._player_id

    @player_id.setter
    def player_id(self, player_id):
        """Sets the player_id of this Injury.


        :param player_id: The player_id of this Injury.
        :type player_id: int
        """

        self._player_id = player_id

    @property
    def start_date(self):
        """Gets the start_date of this Injury.


        :return: The start_date of this Injury.
        :rtype: str
        """
        return self._start_date

    @start_date.setter
    def start_date(self, start_date):
        """Sets the start_date of this Injury.


        :param start_date: The start_date of this Injury.
        :type start_date: str
        """

        self._start_date = start_date

    @property
    def status(self):
        """Gets the status of this Injury.


        :return: The status of this Injury.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this Injury.


        :param status: The status of this Injury.
        :type status: str
        """

        self._status = status
